{
  "id" : 223,
  "expression" : "address",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/libraries-data-2/src/main/java/com/baeldung/flink/FlinkDataPipeline.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "address",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 31,
      "startColumnNumber" : 51,
      "endLineNumber" : 31,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 31,
        "startColumnNumber" : 10,
        "endLineNumber" : 31,
        "endColumnNumber" : 74
      },
      "nodeContext" : "createStringConsumerForTopic(inputTopic,address,consumerGroup)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 30,
        "startColumnNumber" : 38,
        "endLineNumber" : 31,
        "endColumnNumber" : 74
      },
      "nodeContext" : "flinkKafkaConsumer=createStringConsumerForTopic(inputTopic,address,consumerGroup)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 30,
        "startColumnNumber" : 8,
        "endLineNumber" : 31,
        "endColumnNumber" : 75
      },
      "nodeContext" : "FlinkKafkaConsumer011<String> flinkKafkaConsumer=createStringConsumerForTopic(inputTopic,address,consumerGroup);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 833,
        "startLineNumber" : 21,
        "startColumnNumber" : 53,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String inputTopic=\"flink_input\";\n  String outputTopic=\"flink_output\";\n  String consumerGroup=\"baeldung\";\n  String address=\"localhost:9092\";\n  StreamExecutionEnvironment environment=StreamExecutionEnvironment.getExecutionEnvironment();\n  FlinkKafkaConsumer011<String> flinkKafkaConsumer=createStringConsumerForTopic(inputTopic,address,consumerGroup);\n  flinkKafkaConsumer.setStartFromEarliest();\n  DataStream<String> stringInputStream=environment.addSource(flinkKafkaConsumer);\n  FlinkKafkaProducer011<String> flinkKafkaProducer=createStringProducer(outputTopic,address);\n  stringInputStream.map(new WordsCapitalizer()).addSink(flinkKafkaProducer);\n  environment.execute();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 88,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 882,
        "startLineNumber" : 21,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void capitalize() throws Exception {\n  String inputTopic=\"flink_input\";\n  String outputTopic=\"flink_output\";\n  String consumerGroup=\"baeldung\";\n  String address=\"localhost:9092\";\n  StreamExecutionEnvironment environment=StreamExecutionEnvironment.getExecutionEnvironment();\n  FlinkKafkaConsumer011<String> flinkKafkaConsumer=createStringConsumerForTopic(inputTopic,address,consumerGroup);\n  flinkKafkaConsumer.setStartFromEarliest();\n  DataStream<String> stringInputStream=environment.addSource(flinkKafkaConsumer);\n  FlinkKafkaProducer011<String> flinkKafkaProducer=createStringProducer(outputTopic,address);\n  stringInputStream.map(new WordsCapitalizer()).addSink(flinkKafkaProducer);\n  environment.execute();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 95,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 31,
        "startColumnNumber" : 10,
        "endLineNumber" : 31,
        "endColumnNumber" : 74
      },
      "nodeContext" : "createStringConsumerForTopic(inputTopic,address,consumerGroup)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "address",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 38,
      "startColumnNumber" : 42,
      "endLineNumber" : 38,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 38,
        "endColumnNumber" : 50
      },
      "nodeContext" : "createStringProducer(outputTopic,address)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 37,
        "startColumnNumber" : 38,
        "endLineNumber" : 38,
        "endColumnNumber" : 50
      },
      "nodeContext" : "flinkKafkaProducer=createStringProducer(outputTopic,address)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 37,
        "startColumnNumber" : 8,
        "endLineNumber" : 38,
        "endColumnNumber" : 51
      },
      "nodeContext" : "FlinkKafkaProducer011<String> flinkKafkaProducer=createStringProducer(outputTopic,address);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 833,
        "startLineNumber" : 21,
        "startColumnNumber" : 53,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String inputTopic=\"flink_input\";\n  String outputTopic=\"flink_output\";\n  String consumerGroup=\"baeldung\";\n  String address=\"localhost:9092\";\n  StreamExecutionEnvironment environment=StreamExecutionEnvironment.getExecutionEnvironment();\n  FlinkKafkaConsumer011<String> flinkKafkaConsumer=createStringConsumerForTopic(inputTopic,address,consumerGroup);\n  flinkKafkaConsumer.setStartFromEarliest();\n  DataStream<String> stringInputStream=environment.addSource(flinkKafkaConsumer);\n  FlinkKafkaProducer011<String> flinkKafkaProducer=createStringProducer(outputTopic,address);\n  stringInputStream.map(new WordsCapitalizer()).addSink(flinkKafkaProducer);\n  environment.execute();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 88,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 882,
        "startLineNumber" : 21,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void capitalize() throws Exception {\n  String inputTopic=\"flink_input\";\n  String outputTopic=\"flink_output\";\n  String consumerGroup=\"baeldung\";\n  String address=\"localhost:9092\";\n  StreamExecutionEnvironment environment=StreamExecutionEnvironment.getExecutionEnvironment();\n  FlinkKafkaConsumer011<String> flinkKafkaConsumer=createStringConsumerForTopic(inputTopic,address,consumerGroup);\n  flinkKafkaConsumer.setStartFromEarliest();\n  DataStream<String> stringInputStream=environment.addSource(flinkKafkaConsumer);\n  FlinkKafkaProducer011<String> flinkKafkaProducer=createStringProducer(outputTopic,address);\n  stringInputStream.map(new WordsCapitalizer()).addSink(flinkKafkaProducer);\n  environment.execute();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 95,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 38,
        "endColumnNumber" : 50
      },
      "nodeContext" : "createStringProducer(outputTopic,address)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 31,
    "startColumnNumber" : 51,
    "endLineNumber" : 31,
    "endColumnNumber" : 58
  }, {
    "charLength" : 7,
    "startLineNumber" : 38,
    "startColumnNumber" : 42,
    "endLineNumber" : 38,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}