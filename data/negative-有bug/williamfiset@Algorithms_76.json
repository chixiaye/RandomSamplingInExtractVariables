{
  "id" : 76,
  "expression" : "p1.distance(p2) < EPS",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/geometry/PointCircleTangent.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "p1.distance(p2) < EPS",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 58,
      "startColumnNumber" : 8,
      "endLineNumber" : 58,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 57
      },
      "nodeContext" : "if (p1.distance(p2) < EPS) return new Point2D[]{pt};\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 915,
        "startLineNumber" : 32,
        "startColumnNumber" : 94,
        "endLineNumber" : 60,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  double px=pt.getX(), py=pt.getY();\n  double cx=center.getX(), cy=center.getY();\n  double dx=cx - px;\n  double dy=cy - py;\n  double dist=sqrt(dx * dx + dy * dy);\n  if (dist < radius)   return new Point2D[]{};\n  double angle, angle1, angle2;\n  angle1=arcsinSafe(radius / dist);\n  angle2=atan2(dy,dx);\n  angle=angle2 - angle1;\n  Point2D p1=new Point2D.Double(cx + radius * sin(angle),cy + radius * -cos(angle));\n  angle=angle1 + angle2;\n  Point2D p2=new Point2D.Double(cx + radius * -sin(angle),cy + radius * cos(angle));\n  if (p1.distance(p2) < EPS)   return new Point2D[]{pt};\n  return new Point2D[]{p1,p2};\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 172,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1007,
        "startLineNumber" : 32,
        "startColumnNumber" : 2,
        "endLineNumber" : 60,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static Point2D[] pointCircleTangentPoints(Point2D center,double radius,Point2D pt){\n  double px=pt.getX(), py=pt.getY();\n  double cx=center.getX(), cy=center.getY();\n  double dx=cx - px;\n  double dy=cy - py;\n  double dist=sqrt(dx * dx + dy * dy);\n  if (dist < radius)   return new Point2D[]{};\n  double angle, angle1, angle2;\n  angle1=arcsinSafe(radius / dist);\n  angle2=atan2(dy,dx);\n  angle=angle2 - angle1;\n  Point2D p1=new Point2D.Double(cx + radius * sin(angle),cy + radius * -cos(angle));\n  angle=angle1 + angle2;\n  Point2D p2=new Point2D.Double(cx + radius * -sin(angle),cy + radius * cos(angle));\n  if (p1.distance(p2) < EPS)   return new Point2D[]{pt};\n  return new Point2D[]{p1,p2};\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 191,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 57
      },
      "nodeContext" : "if (p1.distance(p2) < EPS) return new Point2D[]{pt};\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 5,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 58,
    "startColumnNumber" : 8,
    "endLineNumber" : 58,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ ]
}