{
  "id" : 156,
  "expression" : "throwable instanceof ApiException",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/metadata/src/main/java/org/apache/kafka/metadata/authorizer/ClusterMetadataAuthorizer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "throwable instanceof ApiException",
    "nodeType" : "InstanceofExpression",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 103,
      "startColumnNumber" : 38,
      "endLineNumber" : 103,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 103,
        "startColumnNumber" : 37,
        "endLineNumber" : 103,
        "endColumnNumber" : 72
      },
      "nodeContext" : "(throwable instanceof ApiException)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 103,
        "startColumnNumber" : 37,
        "endLineNumber" : 104,
        "endColumnNumber" : 69
      },
      "nodeContext" : "(throwable instanceof ApiException) ? (ApiException)throwable : ApiError.fromThrowable(throwable).exception()",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 103,
        "startColumnNumber" : 33,
        "endLineNumber" : 104,
        "endColumnNumber" : 69
      },
      "nodeContext" : "e=(throwable instanceof ApiException) ? (ApiException)throwable : ApiError.fromThrowable(throwable).exception()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 103,
        "startColumnNumber" : 20,
        "endLineNumber" : 104,
        "endColumnNumber" : 70
      },
      "nodeContext" : "ApiException e=(throwable instanceof ApiException) ? (ApiException)throwable : ApiError.fromThrowable(throwable).exception();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 253,
        "startLineNumber" : 102,
        "startColumnNumber" : 74,
        "endLineNumber" : 106,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  ApiException e=(throwable instanceof ApiException) ? (ApiException)throwable : ApiError.fromThrowable(throwable).exception();\n  future.complete(new AclCreateResult(e));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 30,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 311,
        "startLineNumber" : 102,
        "startColumnNumber" : 16,
        "endLineNumber" : 106,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (CompletableFuture<AclCreateResult> future : futures) {\n  ApiException e=(throwable instanceof ApiException) ? (ApiException)throwable : ApiError.fromThrowable(throwable).exception();\n  future.complete(new AclCreateResult(e));\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 39,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 343,
        "startLineNumber" : 101,
        "startColumnNumber" : 19,
        "endLineNumber" : 107,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  for (  CompletableFuture<AclCreateResult> future : futures) {\n    ApiException e=(throwable instanceof ApiException) ? (ApiException)throwable : ApiError.fromThrowable(throwable).exception();\n    future.complete(new AclCreateResult(e));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 525,
        "startLineNumber" : 97,
        "startColumnNumber" : 12,
        "endLineNumber" : 107,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (throwable == null) {\n  for (int i=0; i < futures.size(); i++) {\n    futures.get(i).complete(results.get(i));\n  }\n}\n else {\n  for (  CompletableFuture<AclCreateResult> future : futures) {\n    ApiException e=(throwable instanceof ApiException) ? (ApiException)throwable : ApiError.fromThrowable(throwable).exception();\n    future.complete(new AclCreateResult(e));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 70,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 839,
        "startLineNumber" : 91,
        "startColumnNumber" : 80,
        "endLineNumber" : 108,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (throwable == null && results.size() != futures.size()) {\n    throwable=new UnknownServerException(\"Invalid size \" + \"of result set from controller. Expected \" + futures.size() + \"; got \"+ results.size());\n  }\n  if (throwable == null) {\n    for (int i=0; i < futures.size(); i++) {\n      futures.get(i).complete(results.get(i));\n    }\n  }\n else {\n    for (    CompletableFuture<AclCreateResult> future : futures) {\n      ApiException e=(throwable instanceof ApiException) ? (ApiException)throwable : ApiError.fromThrowable(throwable).exception();\n      future.complete(new AclCreateResult(e));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 863,
        "startLineNumber" : 91,
        "startColumnNumber" : 56,
        "endLineNumber" : 108,
        "endColumnNumber" : 9
      },
      "nodeContext" : "(results,throwable) -> {\n  if (throwable == null && results.size() != futures.size()) {\n    throwable=new UnknownServerException(\"Invalid size \" + \"of result set from controller. Expected \" + futures.size() + \"; got \"+ results.size());\n  }\n  if (throwable == null) {\n    for (int i=0; i < futures.size(); i++) {\n      futures.get(i).complete(results.get(i));\n    }\n  }\n else {\n    for (    CompletableFuture<AclCreateResult> future : futures) {\n      ApiException e=(throwable instanceof ApiException) ? (ApiException)throwable : ApiError.fromThrowable(throwable).exception();\n      future.complete(new AclCreateResult(e));\n    }\n  }\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 106,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 103,
        "startColumnNumber" : 37,
        "endLineNumber" : 103,
        "endColumnNumber" : 72
      },
      "nodeContext" : "(throwable instanceof ApiException)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 5,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 33,
    "startLineNumber" : 103,
    "startColumnNumber" : 38,
    "endLineNumber" : 103,
    "endColumnNumber" : 71
  } ],
  "layoutRelationDataList" : [ ]
}