{
  "id" : 140,
  "expression" : "e",
  "projectName" : "seata@seata",
  "commitID" : "42d41623178ab076b11b27a0f049ac3ed7f1a9dc",
  "filePath" : "/server/src/main/java/io/seata/server/session/BranchSession.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "e",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 283,
      "startColumnNumber" : 55,
      "endLineNumber" : 283,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 283,
        "startColumnNumber" : 16,
        "endLineNumber" : 283,
        "endColumnNumber" : 57
      },
      "nodeContext" : "LOGGER.error(\"compress lockKey error\",e)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 283,
        "startColumnNumber" : 16,
        "endLineNumber" : 283,
        "endColumnNumber" : 58
      },
      "nodeContext" : "LOGGER.error(\"compress lockKey error\",e);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 282,
        "startColumnNumber" : 36,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  LOGGER.error(\"compress lockKey error\",e);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 282,
        "startColumnNumber" : 14,
        "endLineNumber" : 284,
        "endColumnNumber" : 13
      },
      "nodeContext" : "catch (IOException e) {\n  LOGGER.error(\"compress lockKey error\",e);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 298,
        "startLineNumber" : 279,
        "startColumnNumber" : 12,
        "endLineNumber" : 286,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  size-=lockKeyBytes.length;\n  lockKeyBytes=CompressUtil.compress(lockKeyBytes);\n}\n catch (IOException e) {\n  LOGGER.error(\"compress lockKey error\",e);\n}\n finally {\n  size+=lockKeyBytes.length;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 34,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 853,
        "startLineNumber" : 273,
        "startColumnNumber" : 44,
        "endLineNumber" : 293,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (lockKeyBytes == null) {\n    throw new RuntimeException(\"branch session size exceeded, size : \" + size + \" maxBranchSessionSize : \"+ MAX_BRANCH_SESSION_SIZE);\n  }\n  try {\n    size-=lockKeyBytes.length;\n    lockKeyBytes=CompressUtil.compress(lockKeyBytes);\n  }\n catch (  IOException e) {\n    LOGGER.error(\"compress lockKey error\",e);\n  }\n finally {\n    size+=lockKeyBytes.length;\n  }\n  if (size > MAX_BRANCH_SESSION_SIZE) {\n    throw new RuntimeException(\"compress branch session size exceeded, compressSize : \" + size + \" maxBranchSessionSize : \"+ MAX_BRANCH_SESSION_SIZE);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 889,
        "startLineNumber" : 273,
        "startColumnNumber" : 8,
        "endLineNumber" : 293,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (size > MAX_BRANCH_SESSION_SIZE) {\n  if (lockKeyBytes == null) {\n    throw new RuntimeException(\"branch session size exceeded, size : \" + size + \" maxBranchSessionSize : \"+ MAX_BRANCH_SESSION_SIZE);\n  }\n  try {\n    size-=lockKeyBytes.length;\n    lockKeyBytes=CompressUtil.compress(lockKeyBytes);\n  }\n catch (  IOException e) {\n    LOGGER.error(\"compress lockKey error\",e);\n  }\n finally {\n    size+=lockKeyBytes.length;\n  }\n  if (size > MAX_BRANCH_SESSION_SIZE) {\n    throw new RuntimeException(\"compress branch session size exceeded, compressSize : \" + size + \" maxBranchSessionSize : \"+ MAX_BRANCH_SESSION_SIZE);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 67,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2553,
        "startLineNumber" : 261,
        "startColumnNumber" : 27,
        "endLineNumber" : 335,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  byte[] resourceIdBytes=resourceId != null ? resourceId.getBytes() : null;\n  byte[] lockKeyBytes=lockKey != null ? lockKey.getBytes() : null;\n  byte[] clientIdBytes=clientId != null ? clientId.getBytes() : null;\n  byte[] applicationDataBytes=applicationData != null ? applicationData.getBytes() : null;\n  int size=calBranchSessionSize(resourceIdBytes,lockKeyBytes,clientIdBytes,applicationDataBytes);\n  if (size > MAX_BRANCH_SESSION_SIZE) {\n    if (lockKeyBytes == null) {\n      throw new RuntimeException(\"branch session size exceeded, size : \" + size + \" maxBranchSessionSize : \"+ MAX_BRANCH_SESSION_SIZE);\n    }\n    try {\n      size-=lockKeyBytes.length;\n      lockKeyBytes=CompressUtil.compress(lockKeyBytes);\n    }\n catch (    IOException e) {\n      LOGGER.error(\"compress lockKey error\",e);\n    }\n finally {\n      size+=lockKeyBytes.length;\n    }\n    if (size > MAX_BRANCH_SESSION_SIZE) {\n      throw new RuntimeException(\"compress branch session size exceeded, compressSize : \" + size + \" maxBranchSessionSize : \"+ MAX_BRANCH_SESSION_SIZE);\n    }\n  }\n  ByteBuffer byteBuffer=byteBufferThreadLocal.get();\n  byteBuffer.clear();\n  byteBuffer.putLong(transactionId);\n  byteBuffer.putLong(branchId);\n  if (null != resourceIdBytes) {\n    byteBuffer.putInt(resourceIdBytes.length);\n    byteBuffer.put(resourceIdBytes);\n  }\n else {\n    byteBuffer.putInt(0);\n  }\n  if (null != lockKeyBytes) {\n    byteBuffer.putInt(lockKeyBytes.length);\n    byteBuffer.put(lockKeyBytes);\n  }\n else {\n    byteBuffer.putInt(0);\n  }\n  if (null != clientIdBytes) {\n    byteBuffer.putShort((short)clientIdBytes.length);\n    byteBuffer.put(clientIdBytes);\n  }\n else {\n    byteBuffer.putShort((short)0);\n  }\n  if (null != applicationDataBytes) {\n    byteBuffer.putInt(applicationDataBytes.length);\n    byteBuffer.put(applicationDataBytes);\n  }\n else {\n    byteBuffer.putInt(0);\n  }\n  byteBuffer.put((byte)status.getCode());\n  byteBuffer.flip();\n  byte[] result=new byte[byteBuffer.limit()];\n  byteBuffer.get(result);\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 285,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2590,
        "startLineNumber" : 260,
        "startColumnNumber" : 4,
        "endLineNumber" : 335,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public byte[] encode(){\n  byte[] resourceIdBytes=resourceId != null ? resourceId.getBytes() : null;\n  byte[] lockKeyBytes=lockKey != null ? lockKey.getBytes() : null;\n  byte[] clientIdBytes=clientId != null ? clientId.getBytes() : null;\n  byte[] applicationDataBytes=applicationData != null ? applicationData.getBytes() : null;\n  int size=calBranchSessionSize(resourceIdBytes,lockKeyBytes,clientIdBytes,applicationDataBytes);\n  if (size > MAX_BRANCH_SESSION_SIZE) {\n    if (lockKeyBytes == null) {\n      throw new RuntimeException(\"branch session size exceeded, size : \" + size + \" maxBranchSessionSize : \"+ MAX_BRANCH_SESSION_SIZE);\n    }\n    try {\n      size-=lockKeyBytes.length;\n      lockKeyBytes=CompressUtil.compress(lockKeyBytes);\n    }\n catch (    IOException e) {\n      LOGGER.error(\"compress lockKey error\",e);\n    }\n finally {\n      size+=lockKeyBytes.length;\n    }\n    if (size > MAX_BRANCH_SESSION_SIZE) {\n      throw new RuntimeException(\"compress branch session size exceeded, compressSize : \" + size + \" maxBranchSessionSize : \"+ MAX_BRANCH_SESSION_SIZE);\n    }\n  }\n  ByteBuffer byteBuffer=byteBufferThreadLocal.get();\n  byteBuffer.clear();\n  byteBuffer.putLong(transactionId);\n  byteBuffer.putLong(branchId);\n  if (null != resourceIdBytes) {\n    byteBuffer.putInt(resourceIdBytes.length);\n    byteBuffer.put(resourceIdBytes);\n  }\n else {\n    byteBuffer.putInt(0);\n  }\n  if (null != lockKeyBytes) {\n    byteBuffer.putInt(lockKeyBytes.length);\n    byteBuffer.put(lockKeyBytes);\n  }\n else {\n    byteBuffer.putInt(0);\n  }\n  if (null != clientIdBytes) {\n    byteBuffer.putShort((short)clientIdBytes.length);\n    byteBuffer.put(clientIdBytes);\n  }\n else {\n    byteBuffer.putShort((short)0);\n  }\n  if (null != applicationDataBytes) {\n    byteBuffer.putInt(applicationDataBytes.length);\n    byteBuffer.put(applicationDataBytes);\n  }\n else {\n    byteBuffer.putInt(0);\n  }\n  byteBuffer.put((byte)status.getCode());\n  byteBuffer.flip();\n  byte[] result=new byte[byteBuffer.limit()];\n  byteBuffer.get(result);\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 293,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 283,
        "startColumnNumber" : 16,
        "endLineNumber" : 283,
        "endColumnNumber" : 58
      },
      "nodeContext" : "LOGGER.error(\"compress lockKey error\",e);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.io.IOException"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 283,
    "startColumnNumber" : 55,
    "endLineNumber" : 283,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}