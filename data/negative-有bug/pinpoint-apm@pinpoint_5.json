{
  "id" : 5,
  "expression" : "'\\''",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/plugins/oracle-jdbc/src/main/java/com/navercorp/pinpoint/plugin/jdbc/oracle/parser/KeyValue.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "'\\''",
    "nodeType" : "CharacterLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 65,
      "startColumnNumber" : 47,
      "endLineNumber" : 65,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 52
      },
      "nodeContext" : "sb.append(\"{key='\").append(key).append('\\'')",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 53
      },
      "nodeContext" : "sb.append(\"{key='\").append(key).append('\\'');\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 380,
        "startLineNumber" : 63,
        "startColumnNumber" : 29,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final StringBuilder sb=new StringBuilder();\n  sb.append(\"{key='\").append(key).append('\\'');\n  if (value != null) {\n    sb.append(\", value='\").append(value).append('\\'');\n  }\n  if (keyValueList != null) {\n    sb.append(\", keyValueList=\").append(keyValueList);\n  }\n  sb.append('}');\n  return sb.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 59,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 419,
        "startLineNumber" : 62,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public String toString(){\n  final StringBuilder sb=new StringBuilder();\n  sb.append(\"{key='\").append(key).append('\\'');\n  if (value != null) {\n    sb.append(\", value='\").append(value).append('\\'');\n  }\n  if (keyValueList != null) {\n    sb.append(\", keyValueList=\").append(keyValueList);\n  }\n  sb.append('}');\n  return sb.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 66,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 53
      },
      "nodeContext" : "sb.append(\"{key='\").append(key).append('\\'');\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "char"
  }, {
    "nodeContext" : "'\\''",
    "nodeType" : "CharacterLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 67,
      "startColumnNumber" : 56,
      "endLineNumber" : 67,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 67,
        "startColumnNumber" : 12,
        "endLineNumber" : 67,
        "endColumnNumber" : 61
      },
      "nodeContext" : "sb.append(\", value='\").append(value).append('\\'')",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 67,
        "startColumnNumber" : 12,
        "endLineNumber" : 67,
        "endColumnNumber" : 62
      },
      "nodeContext" : "sb.append(\", value='\").append(value).append('\\'');\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 66,
        "startColumnNumber" : 27,
        "endLineNumber" : 68,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  sb.append(\", value='\").append(value).append('\\'');\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (value != null) {\n  sb.append(\", value='\").append(value).append('\\'');\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 380,
        "startLineNumber" : 63,
        "startColumnNumber" : 29,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final StringBuilder sb=new StringBuilder();\n  sb.append(\"{key='\").append(key).append('\\'');\n  if (value != null) {\n    sb.append(\", value='\").append(value).append('\\'');\n  }\n  if (keyValueList != null) {\n    sb.append(\", keyValueList=\").append(keyValueList);\n  }\n  sb.append('}');\n  return sb.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 59,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 419,
        "startLineNumber" : 62,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public String toString(){\n  final StringBuilder sb=new StringBuilder();\n  sb.append(\"{key='\").append(key).append('\\'');\n  if (value != null) {\n    sb.append(\", value='\").append(value).append('\\'');\n  }\n  if (keyValueList != null) {\n    sb.append(\", keyValueList=\").append(keyValueList);\n  }\n  sb.append('}');\n  return sb.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 66,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 67,
        "startColumnNumber" : 12,
        "endLineNumber" : 67,
        "endColumnNumber" : 62
      },
      "nodeContext" : "sb.append(\", value='\").append(value).append('\\'');\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "char"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 65,
    "startColumnNumber" : 47,
    "endLineNumber" : 65,
    "endColumnNumber" : 51
  }, {
    "charLength" : 4,
    "startLineNumber" : 67,
    "startColumnNumber" : 56,
    "endLineNumber" : 67,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}