{
  "id" : 52,
  "expression" : "j",
  "projectName" : "TheAlgorithms@Java",
  "commitID" : "8b243667d736be7d0413cc77159378aa02459db0",
  "filePath" : "/src/main/java/com/thealgorithms/sorts/BubbleSort.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "j",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 23,
      "startColumnNumber" : 28,
      "endLineNumber" : 23,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 23,
        "startColumnNumber" : 28,
        "endLineNumber" : 23,
        "endColumnNumber" : 40
      },
      "nodeContext" : "j < size - i",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 207,
        "startLineNumber" : 23,
        "startColumnNumber" : 12,
        "endLineNumber" : 28,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int j=0; j < size - i; ++j) {\n  if (greater(array[j],array[j + 1])) {\n    swap(array,j,j + 1);\n    swapped=true;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 38,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 339,
        "startLineNumber" : 21,
        "startColumnNumber" : 60,
        "endLineNumber" : 32,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  boolean swapped=false;\n  for (int j=0; j < size - i; ++j) {\n    if (greater(array[j],array[j + 1])) {\n      swap(array,j,j + 1);\n      swapped=true;\n    }\n  }\n  if (!swapped) {\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 49,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 391,
        "startLineNumber" : 21,
        "startColumnNumber" : 8,
        "endLineNumber" : 32,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=1, size=array.length; i < size; ++i) {\n  boolean swapped=false;\n  for (int j=0; j < size - i; ++j) {\n    if (greater(array[j],array[j + 1])) {\n      swap(array,j,j + 1);\n      swapped=true;\n    }\n  }\n  if (!swapped) {\n    break;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 432,
        "startLineNumber" : 20,
        "startColumnNumber" : 57,
        "endLineNumber" : 34,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (int i=1, size=array.length; i < size; ++i) {\n    boolean swapped=false;\n    for (int j=0; j < size - i; ++j) {\n      if (greater(array[j],array[j + 1])) {\n        swap(array,j,j + 1);\n        swapped=true;\n      }\n    }\n    if (!swapped) {\n      break;\n    }\n  }\n  return array;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 709,
        "startLineNumber" : 12,
        "startColumnNumber" : 4,
        "endLineNumber" : 34,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Implements generic bubble sort algorithm.\n * @param array the array to be sorted.\n * @param < T > the type of elements in the array.\n * @return the sorted array.\n */\n@Override public <T extends Comparable<T>>T[] sort(T[] array){\n  for (int i=1, size=array.length; i < size; ++i) {\n    boolean swapped=false;\n    for (int j=0; j < size - i; ++j) {\n      if (greater(array[j],array[j + 1])) {\n        swap(array,j,j + 1);\n        swapped=true;\n      }\n    }\n    if (!swapped) {\n      break;\n    }\n  }\n  return array;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 91,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 23,
        "startColumnNumber" : 28,
        "endLineNumber" : 23,
        "endColumnNumber" : 40
      },
      "nodeContext" : "j < size - i",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "j",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 24,
      "startColumnNumber" : 34,
      "endLineNumber" : 24,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 24,
        "startColumnNumber" : 28,
        "endLineNumber" : 24,
        "endColumnNumber" : 36
      },
      "nodeContext" : "array[j]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 24,
        "startColumnNumber" : 20,
        "endLineNumber" : 24,
        "endColumnNumber" : 51
      },
      "nodeContext" : "greater(array[j],array[j + 1])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 24,
        "startColumnNumber" : 16,
        "endLineNumber" : 27,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (greater(array[j],array[j + 1])) {\n  swap(array,j,j + 1);\n  swapped=true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 172,
        "startLineNumber" : 23,
        "startColumnNumber" : 47,
        "endLineNumber" : 28,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (greater(array[j],array[j + 1])) {\n    swap(array,j,j + 1);\n    swapped=true;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 207,
        "startLineNumber" : 23,
        "startColumnNumber" : 12,
        "endLineNumber" : 28,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int j=0; j < size - i; ++j) {\n  if (greater(array[j],array[j + 1])) {\n    swap(array,j,j + 1);\n    swapped=true;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 38,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 339,
        "startLineNumber" : 21,
        "startColumnNumber" : 60,
        "endLineNumber" : 32,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  boolean swapped=false;\n  for (int j=0; j < size - i; ++j) {\n    if (greater(array[j],array[j + 1])) {\n      swap(array,j,j + 1);\n      swapped=true;\n    }\n  }\n  if (!swapped) {\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 49,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 391,
        "startLineNumber" : 21,
        "startColumnNumber" : 8,
        "endLineNumber" : 32,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=1, size=array.length; i < size; ++i) {\n  boolean swapped=false;\n  for (int j=0; j < size - i; ++j) {\n    if (greater(array[j],array[j + 1])) {\n      swap(array,j,j + 1);\n      swapped=true;\n    }\n  }\n  if (!swapped) {\n    break;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 432,
        "startLineNumber" : 20,
        "startColumnNumber" : 57,
        "endLineNumber" : 34,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (int i=1, size=array.length; i < size; ++i) {\n    boolean swapped=false;\n    for (int j=0; j < size - i; ++j) {\n      if (greater(array[j],array[j + 1])) {\n        swap(array,j,j + 1);\n        swapped=true;\n      }\n    }\n    if (!swapped) {\n      break;\n    }\n  }\n  return array;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 709,
        "startLineNumber" : 12,
        "startColumnNumber" : 4,
        "endLineNumber" : 34,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Implements generic bubble sort algorithm.\n * @param array the array to be sorted.\n * @param < T > the type of elements in the array.\n * @return the sorted array.\n */\n@Override public <T extends Comparable<T>>T[] sort(T[] array){\n  for (int i=1, size=array.length; i < size; ++i) {\n    boolean swapped=false;\n    for (int j=0; j < size - i; ++j) {\n      if (greater(array[j],array[j + 1])) {\n        swap(array,j,j + 1);\n        swapped=true;\n      }\n    }\n    if (!swapped) {\n      break;\n    }\n  }\n  return array;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 91,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 24,
        "startColumnNumber" : 20,
        "endLineNumber" : 24,
        "endColumnNumber" : 51
      },
      "nodeContext" : "greater(array[j],array[j + 1])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "j",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 24,
      "startColumnNumber" : 44,
      "endLineNumber" : 24,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayAccess,index]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 24,
        "startColumnNumber" : 44,
        "endLineNumber" : 24,
        "endColumnNumber" : 49
      },
      "nodeContext" : "j + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 24,
        "startColumnNumber" : 38,
        "endLineNumber" : 24,
        "endColumnNumber" : 50
      },
      "nodeContext" : "array[j + 1]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 24,
        "startColumnNumber" : 20,
        "endLineNumber" : 24,
        "endColumnNumber" : 51
      },
      "nodeContext" : "greater(array[j],array[j + 1])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 24,
        "startColumnNumber" : 16,
        "endLineNumber" : 27,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (greater(array[j],array[j + 1])) {\n  swap(array,j,j + 1);\n  swapped=true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 172,
        "startLineNumber" : 23,
        "startColumnNumber" : 47,
        "endLineNumber" : 28,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (greater(array[j],array[j + 1])) {\n    swap(array,j,j + 1);\n    swapped=true;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 207,
        "startLineNumber" : 23,
        "startColumnNumber" : 12,
        "endLineNumber" : 28,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int j=0; j < size - i; ++j) {\n  if (greater(array[j],array[j + 1])) {\n    swap(array,j,j + 1);\n    swapped=true;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 38,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 339,
        "startLineNumber" : 21,
        "startColumnNumber" : 60,
        "endLineNumber" : 32,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  boolean swapped=false;\n  for (int j=0; j < size - i; ++j) {\n    if (greater(array[j],array[j + 1])) {\n      swap(array,j,j + 1);\n      swapped=true;\n    }\n  }\n  if (!swapped) {\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 49,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 391,
        "startLineNumber" : 21,
        "startColumnNumber" : 8,
        "endLineNumber" : 32,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=1, size=array.length; i < size; ++i) {\n  boolean swapped=false;\n  for (int j=0; j < size - i; ++j) {\n    if (greater(array[j],array[j + 1])) {\n      swap(array,j,j + 1);\n      swapped=true;\n    }\n  }\n  if (!swapped) {\n    break;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 432,
        "startLineNumber" : 20,
        "startColumnNumber" : 57,
        "endLineNumber" : 34,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (int i=1, size=array.length; i < size; ++i) {\n    boolean swapped=false;\n    for (int j=0; j < size - i; ++j) {\n      if (greater(array[j],array[j + 1])) {\n        swap(array,j,j + 1);\n        swapped=true;\n      }\n    }\n    if (!swapped) {\n      break;\n    }\n  }\n  return array;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 709,
        "startLineNumber" : 12,
        "startColumnNumber" : 4,
        "endLineNumber" : 34,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Implements generic bubble sort algorithm.\n * @param array the array to be sorted.\n * @param < T > the type of elements in the array.\n * @return the sorted array.\n */\n@Override public <T extends Comparable<T>>T[] sort(T[] array){\n  for (int i=1, size=array.length; i < size; ++i) {\n    boolean swapped=false;\n    for (int j=0; j < size - i; ++j) {\n      if (greater(array[j],array[j + 1])) {\n        swap(array,j,j + 1);\n        swapped=true;\n      }\n    }\n    if (!swapped) {\n      break;\n    }\n  }\n  return array;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 91,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 24,
        "startColumnNumber" : 20,
        "endLineNumber" : 24,
        "endColumnNumber" : 51
      },
      "nodeContext" : "greater(array[j],array[j + 1])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "j",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 25,
      "startColumnNumber" : 32,
      "endLineNumber" : 25,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 25,
        "startColumnNumber" : 20,
        "endLineNumber" : 25,
        "endColumnNumber" : 41
      },
      "nodeContext" : "swap(array,j,j + 1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 25,
        "startColumnNumber" : 20,
        "endLineNumber" : 25,
        "endColumnNumber" : 42
      },
      "nodeContext" : "swap(array,j,j + 1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 24,
        "startColumnNumber" : 53,
        "endLineNumber" : 27,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  swap(array,j,j + 1);\n  swapped=true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 24,
        "startColumnNumber" : 16,
        "endLineNumber" : 27,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (greater(array[j],array[j + 1])) {\n  swap(array,j,j + 1);\n  swapped=true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 172,
        "startLineNumber" : 23,
        "startColumnNumber" : 47,
        "endLineNumber" : 28,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (greater(array[j],array[j + 1])) {\n    swap(array,j,j + 1);\n    swapped=true;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 207,
        "startLineNumber" : 23,
        "startColumnNumber" : 12,
        "endLineNumber" : 28,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int j=0; j < size - i; ++j) {\n  if (greater(array[j],array[j + 1])) {\n    swap(array,j,j + 1);\n    swapped=true;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 38,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 339,
        "startLineNumber" : 21,
        "startColumnNumber" : 60,
        "endLineNumber" : 32,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  boolean swapped=false;\n  for (int j=0; j < size - i; ++j) {\n    if (greater(array[j],array[j + 1])) {\n      swap(array,j,j + 1);\n      swapped=true;\n    }\n  }\n  if (!swapped) {\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 49,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 391,
        "startLineNumber" : 21,
        "startColumnNumber" : 8,
        "endLineNumber" : 32,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=1, size=array.length; i < size; ++i) {\n  boolean swapped=false;\n  for (int j=0; j < size - i; ++j) {\n    if (greater(array[j],array[j + 1])) {\n      swap(array,j,j + 1);\n      swapped=true;\n    }\n  }\n  if (!swapped) {\n    break;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 432,
        "startLineNumber" : 20,
        "startColumnNumber" : 57,
        "endLineNumber" : 34,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (int i=1, size=array.length; i < size; ++i) {\n    boolean swapped=false;\n    for (int j=0; j < size - i; ++j) {\n      if (greater(array[j],array[j + 1])) {\n        swap(array,j,j + 1);\n        swapped=true;\n      }\n    }\n    if (!swapped) {\n      break;\n    }\n  }\n  return array;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 709,
        "startLineNumber" : 12,
        "startColumnNumber" : 4,
        "endLineNumber" : 34,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Implements generic bubble sort algorithm.\n * @param array the array to be sorted.\n * @param < T > the type of elements in the array.\n * @return the sorted array.\n */\n@Override public <T extends Comparable<T>>T[] sort(T[] array){\n  for (int i=1, size=array.length; i < size; ++i) {\n    boolean swapped=false;\n    for (int j=0; j < size - i; ++j) {\n      if (greater(array[j],array[j + 1])) {\n        swap(array,j,j + 1);\n        swapped=true;\n      }\n    }\n    if (!swapped) {\n      break;\n    }\n  }\n  return array;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 91,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 25,
        "startColumnNumber" : 20,
        "endLineNumber" : 25,
        "endColumnNumber" : 42
      },
      "nodeContext" : "swap(array,j,j + 1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "j",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 25,
      "startColumnNumber" : 35,
      "endLineNumber" : 25,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 25,
        "startColumnNumber" : 35,
        "endLineNumber" : 25,
        "endColumnNumber" : 40
      },
      "nodeContext" : "j + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 25,
        "startColumnNumber" : 20,
        "endLineNumber" : 25,
        "endColumnNumber" : 41
      },
      "nodeContext" : "swap(array,j,j + 1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 25,
        "startColumnNumber" : 20,
        "endLineNumber" : 25,
        "endColumnNumber" : 42
      },
      "nodeContext" : "swap(array,j,j + 1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 24,
        "startColumnNumber" : 53,
        "endLineNumber" : 27,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  swap(array,j,j + 1);\n  swapped=true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 24,
        "startColumnNumber" : 16,
        "endLineNumber" : 27,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (greater(array[j],array[j + 1])) {\n  swap(array,j,j + 1);\n  swapped=true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 172,
        "startLineNumber" : 23,
        "startColumnNumber" : 47,
        "endLineNumber" : 28,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (greater(array[j],array[j + 1])) {\n    swap(array,j,j + 1);\n    swapped=true;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 207,
        "startLineNumber" : 23,
        "startColumnNumber" : 12,
        "endLineNumber" : 28,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int j=0; j < size - i; ++j) {\n  if (greater(array[j],array[j + 1])) {\n    swap(array,j,j + 1);\n    swapped=true;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 38,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 339,
        "startLineNumber" : 21,
        "startColumnNumber" : 60,
        "endLineNumber" : 32,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  boolean swapped=false;\n  for (int j=0; j < size - i; ++j) {\n    if (greater(array[j],array[j + 1])) {\n      swap(array,j,j + 1);\n      swapped=true;\n    }\n  }\n  if (!swapped) {\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 49,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 391,
        "startLineNumber" : 21,
        "startColumnNumber" : 8,
        "endLineNumber" : 32,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=1, size=array.length; i < size; ++i) {\n  boolean swapped=false;\n  for (int j=0; j < size - i; ++j) {\n    if (greater(array[j],array[j + 1])) {\n      swap(array,j,j + 1);\n      swapped=true;\n    }\n  }\n  if (!swapped) {\n    break;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 432,
        "startLineNumber" : 20,
        "startColumnNumber" : 57,
        "endLineNumber" : 34,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (int i=1, size=array.length; i < size; ++i) {\n    boolean swapped=false;\n    for (int j=0; j < size - i; ++j) {\n      if (greater(array[j],array[j + 1])) {\n        swap(array,j,j + 1);\n        swapped=true;\n      }\n    }\n    if (!swapped) {\n      break;\n    }\n  }\n  return array;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 709,
        "startLineNumber" : 12,
        "startColumnNumber" : 4,
        "endLineNumber" : 34,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Implements generic bubble sort algorithm.\n * @param array the array to be sorted.\n * @param < T > the type of elements in the array.\n * @return the sorted array.\n */\n@Override public <T extends Comparable<T>>T[] sort(T[] array){\n  for (int i=1, size=array.length; i < size; ++i) {\n    boolean swapped=false;\n    for (int j=0; j < size - i; ++j) {\n      if (greater(array[j],array[j + 1])) {\n        swap(array,j,j + 1);\n        swapped=true;\n      }\n    }\n    if (!swapped) {\n      break;\n    }\n  }\n  return array;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 91,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 25,
        "startColumnNumber" : 20,
        "endLineNumber" : 25,
        "endColumnNumber" : 42
      },
      "nodeContext" : "swap(array,j,j + 1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 23,
    "startColumnNumber" : 28,
    "endLineNumber" : 23,
    "endColumnNumber" : 29
  }, {
    "charLength" : 1,
    "startLineNumber" : 24,
    "startColumnNumber" : 34,
    "endLineNumber" : 24,
    "endColumnNumber" : 35
  }, {
    "charLength" : 1,
    "startLineNumber" : 24,
    "startColumnNumber" : 44,
    "endLineNumber" : 24,
    "endColumnNumber" : 45
  }, {
    "charLength" : 1,
    "startLineNumber" : 25,
    "startColumnNumber" : 32,
    "endLineNumber" : 25,
    "endColumnNumber" : 33
  }, {
    "charLength" : 1,
    "startLineNumber" : 25,
    "startColumnNumber" : 35,
    "endLineNumber" : 25,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 0
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 1
  } ]
}