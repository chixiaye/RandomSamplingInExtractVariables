{
  "id" : 87,
  "expression" : "bufferIndex >= 0",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/core/src/main/java/com/google/android/exoplayer2/mediacodec/AsynchronousMediaCodecCallback.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "bufferIndex >= 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 156,
      "startColumnNumber" : 14,
      "endLineNumber" : 156,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 471,
        "startLineNumber" : 156,
        "startColumnNumber" : 10,
        "endLineNumber" : 166,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (bufferIndex >= 0) {\n  checkStateNotNull(currentFormat);\n  MediaCodec.BufferInfo nextBufferInfo=bufferInfos.remove();\n  bufferInfo.set(nextBufferInfo.offset,nextBufferInfo.size,nextBufferInfo.presentationTimeUs,nextBufferInfo.flags);\n}\n else if (bufferIndex == MediaCodec.INFO_OUTPUT_FORMAT_CHANGED) {\n  currentFormat=formats.remove();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 48,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 584,
        "startLineNumber" : 154,
        "startColumnNumber" : 15,
        "endLineNumber" : 168,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int bufferIndex=availableOutputBuffers.remove();\n  if (bufferIndex >= 0) {\n    checkStateNotNull(currentFormat);\n    MediaCodec.BufferInfo nextBufferInfo=bufferInfos.remove();\n    bufferInfo.set(nextBufferInfo.offset,nextBufferInfo.size,nextBufferInfo.presentationTimeUs,nextBufferInfo.flags);\n  }\n else   if (bufferIndex == MediaCodec.INFO_OUTPUT_FORMAT_CHANGED) {\n    currentFormat=formats.remove();\n  }\n  return bufferIndex;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 689,
        "startLineNumber" : 152,
        "startColumnNumber" : 8,
        "endLineNumber" : 168,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (availableOutputBuffers.isEmpty()) {\n  return MediaCodec.INFO_TRY_AGAIN_LATER;\n}\n else {\n  int bufferIndex=availableOutputBuffers.remove();\n  if (bufferIndex >= 0) {\n    checkStateNotNull(currentFormat);\n    MediaCodec.BufferInfo nextBufferInfo=bufferInfos.remove();\n    bufferInfo.set(nextBufferInfo.offset,nextBufferInfo.size,nextBufferInfo.presentationTimeUs,nextBufferInfo.flags);\n  }\n else   if (bufferIndex == MediaCodec.INFO_OUTPUT_FORMAT_CHANGED) {\n    currentFormat=formats.remove();\n  }\n  return bufferIndex;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 67,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 738,
        "startLineNumber" : 150,
        "startColumnNumber" : 13,
        "endLineNumber" : 169,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  maybeThrowException();\n  if (availableOutputBuffers.isEmpty()) {\n    return MediaCodec.INFO_TRY_AGAIN_LATER;\n  }\n else {\n    int bufferIndex=availableOutputBuffers.remove();\n    if (bufferIndex >= 0) {\n      checkStateNotNull(currentFormat);\n      MediaCodec.BufferInfo nextBufferInfo=bufferInfos.remove();\n      bufferInfo.set(nextBufferInfo.offset,nextBufferInfo.size,nextBufferInfo.presentationTimeUs,nextBufferInfo.flags);\n    }\n else     if (bufferIndex == MediaCodec.INFO_OUTPUT_FORMAT_CHANGED) {\n      currentFormat=formats.remove();\n    }\n    return bufferIndex;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 71,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 829,
        "startLineNumber" : 148,
        "startColumnNumber" : 6,
        "endLineNumber" : 169,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (isFlushingOrShutdown()) {\n  return MediaCodec.INFO_TRY_AGAIN_LATER;\n}\n else {\n  maybeThrowException();\n  if (availableOutputBuffers.isEmpty()) {\n    return MediaCodec.INFO_TRY_AGAIN_LATER;\n  }\n else {\n    int bufferIndex=availableOutputBuffers.remove();\n    if (bufferIndex >= 0) {\n      checkStateNotNull(currentFormat);\n      MediaCodec.BufferInfo nextBufferInfo=bufferInfos.remove();\n      bufferInfo.set(nextBufferInfo.offset,nextBufferInfo.size,nextBufferInfo.presentationTimeUs,nextBufferInfo.flags);\n    }\n else     if (bufferIndex == MediaCodec.INFO_OUTPUT_FORMAT_CHANGED) {\n      currentFormat=formats.remove();\n    }\n    return bufferIndex;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 79,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SynchronizedStatement,body]",
      "nodePosition" : {
        "charLength" : 843,
        "startLineNumber" : 147,
        "startColumnNumber" : 24,
        "endLineNumber" : 170,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (isFlushingOrShutdown()) {\n    return MediaCodec.INFO_TRY_AGAIN_LATER;\n  }\n else {\n    maybeThrowException();\n    if (availableOutputBuffers.isEmpty()) {\n      return MediaCodec.INFO_TRY_AGAIN_LATER;\n    }\n else {\n      int bufferIndex=availableOutputBuffers.remove();\n      if (bufferIndex >= 0) {\n        checkStateNotNull(currentFormat);\n        MediaCodec.BufferInfo nextBufferInfo=bufferInfos.remove();\n        bufferInfo.set(nextBufferInfo.offset,nextBufferInfo.size,nextBufferInfo.presentationTimeUs,nextBufferInfo.flags);\n      }\n else       if (bufferIndex == MediaCodec.INFO_OUTPUT_FORMAT_CHANGED) {\n        currentFormat=formats.remove();\n      }\n      return bufferIndex;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 863,
        "startLineNumber" : 147,
        "startColumnNumber" : 4,
        "endLineNumber" : 170,
        "endColumnNumber" : 5
      },
      "nodeContext" : "synchronized (lock) {\n  if (isFlushingOrShutdown()) {\n    return MediaCodec.INFO_TRY_AGAIN_LATER;\n  }\n else {\n    maybeThrowException();\n    if (availableOutputBuffers.isEmpty()) {\n      return MediaCodec.INFO_TRY_AGAIN_LATER;\n    }\n else {\n      int bufferIndex=availableOutputBuffers.remove();\n      if (bufferIndex >= 0) {\n        checkStateNotNull(currentFormat);\n        MediaCodec.BufferInfo nextBufferInfo=bufferInfos.remove();\n        bufferInfo.set(nextBufferInfo.offset,nextBufferInfo.size,nextBufferInfo.presentationTimeUs,nextBufferInfo.flags);\n      }\n else       if (bufferIndex == MediaCodec.INFO_OUTPUT_FORMAT_CHANGED) {\n        currentFormat=formats.remove();\n      }\n      return bufferIndex;\n    }\n  }\n}\n",
      "nodeType" : "SynchronizedStatement",
      "astNodeNumber" : 82,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 873,
        "startLineNumber" : 146,
        "startColumnNumber" : 72,
        "endLineNumber" : 171,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\nsynchronized (lock) {\n    if (isFlushingOrShutdown()) {\n      return MediaCodec.INFO_TRY_AGAIN_LATER;\n    }\n else {\n      maybeThrowException();\n      if (availableOutputBuffers.isEmpty()) {\n        return MediaCodec.INFO_TRY_AGAIN_LATER;\n      }\n else {\n        int bufferIndex=availableOutputBuffers.remove();\n        if (bufferIndex >= 0) {\n          checkStateNotNull(currentFormat);\n          MediaCodec.BufferInfo nextBufferInfo=bufferInfos.remove();\n          bufferInfo.set(nextBufferInfo.offset,nextBufferInfo.size,nextBufferInfo.presentationTimeUs,nextBufferInfo.flags);\n        }\n else         if (bufferIndex == MediaCodec.INFO_OUTPUT_FORMAT_CHANGED) {\n          currentFormat=formats.remove();\n        }\n        return bufferIndex;\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 83,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1302,
        "startLineNumber" : 140,
        "startColumnNumber" : 2,
        "endLineNumber" : 171,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns the next available output buffer index. If the next available output is a MediaFormat change, it will return  {@link MediaCodec#INFO_OUTPUT_FORMAT_CHANGED} and you should call {@link #getOutputFormat()} to get the format. If there is no available output, this method will return{@link MediaCodec#INFO_TRY_AGAIN_LATER}.\n */\npublic int dequeueOutputBufferIndex(MediaCodec.BufferInfo bufferInfo){\nsynchronized (lock) {\n    if (isFlushingOrShutdown()) {\n      return MediaCodec.INFO_TRY_AGAIN_LATER;\n    }\n else {\n      maybeThrowException();\n      if (availableOutputBuffers.isEmpty()) {\n        return MediaCodec.INFO_TRY_AGAIN_LATER;\n      }\n else {\n        int bufferIndex=availableOutputBuffers.remove();\n        if (bufferIndex >= 0) {\n          checkStateNotNull(currentFormat);\n          MediaCodec.BufferInfo nextBufferInfo=bufferInfos.remove();\n          bufferInfo.set(nextBufferInfo.offset,nextBufferInfo.size,nextBufferInfo.presentationTimeUs,nextBufferInfo.flags);\n        }\n else         if (bufferIndex == MediaCodec.INFO_OUTPUT_FORMAT_CHANGED) {\n          currentFormat=formats.remove();\n        }\n        return bufferIndex;\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 94,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 471,
        "startLineNumber" : 156,
        "startColumnNumber" : 10,
        "endLineNumber" : 166,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (bufferIndex >= 0) {\n  checkStateNotNull(currentFormat);\n  MediaCodec.BufferInfo nextBufferInfo=bufferInfos.remove();\n  bufferInfo.set(nextBufferInfo.offset,nextBufferInfo.size,nextBufferInfo.presentationTimeUs,nextBufferInfo.flags);\n}\n else if (bufferIndex == MediaCodec.INFO_OUTPUT_FORMAT_CHANGED) {\n  currentFormat=formats.remove();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 48,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 156,
    "startColumnNumber" : 14,
    "endLineNumber" : 156,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}