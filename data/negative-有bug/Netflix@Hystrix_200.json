{
  "id" : 200,
  "expression" : "new TestRequestCollapser(timer,3,2,10)",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-core/src/test/java/com/netflix/hystrix/HystrixCollapserTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new TestRequestCollapser(timer,3,2,10)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 41,
      "startLineNumber" : 128,
      "startColumnNumber" : 68,
      "endLineNumber" : 128,
      "endColumnNumber" : 109
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 128,
        "startColumnNumber" : 55,
        "endLineNumber" : 128,
        "endColumnNumber" : 109
      },
      "nodeContext" : "collapser3=new TestRequestCollapser(timer,3,2,10)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 128,
        "startColumnNumber" : 8,
        "endLineNumber" : 128,
        "endColumnNumber" : 110
      },
      "nodeContext" : "HystrixCollapser<List<String>,String,String> collapser3=new TestRequestCollapser(timer,3,2,10);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 22,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1831,
        "startLineNumber" : 124,
        "startColumnNumber" : 58,
        "endLineNumber" : 148,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestCollapserTimer timer=new TestCollapserTimer();\n  HystrixCollapser<List<String>,String,String> collapser1=new TestRequestCollapser(timer,1,2,10);\n  HystrixCollapser<List<String>,String,String> collapser2=new TestRequestCollapser(timer,2,2,10);\n  HystrixCollapser<List<String>,String,String> collapser3=new TestRequestCollapser(timer,3,2,10);\n  System.out.println(\"*** \" + System.currentTimeMillis() + \" : \"+ Thread.currentThread().getName()+ \" Constructed the collapsers\");\n  Future<String> response1=collapser1.queue();\n  Future<String> response2=collapser2.queue();\n  Future<String> response3=collapser3.queue();\n  System.out.println(\"*** \" + System.currentTimeMillis() + \" : \"+ Thread.currentThread().getName()+ \" queued the collapsers\");\n  timer.incrementTime(10);\n  System.out.println(\"*** \" + System.currentTimeMillis() + \" : \"+ Thread.currentThread().getName()+ \" incremented the virtual timer\");\n  assertEquals(\"1\",response1.get(1000,TimeUnit.MILLISECONDS));\n  assertEquals(\"2\",response2.get(1000,TimeUnit.MILLISECONDS));\n  assertEquals(\"3\",response3.get(1000,TimeUnit.MILLISECONDS));\n  System.out.println(\"ReqLog : \" + HystrixRequestLog.getCurrentRequest().getExecutedCommandsAsString());\n  assertEquals(2,HystrixRequestLog.getCurrentRequest().getAllExecutedCommands().size());\n  Iterator<HystrixInvokableInfo<?>> cmdIterator=HystrixRequestLog.getCurrentRequest().getAllExecutedCommands().iterator();\n  assertEquals(2,cmdIterator.next().getNumberCollapsed());\n  assertEquals(1,cmdIterator.next().getNumberCollapsed());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 259,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1895,
        "startLineNumber" : 123,
        "startColumnNumber" : 4,
        "endLineNumber" : 148,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testMaxRequestsInBatch() throws Exception {\n  TestCollapserTimer timer=new TestCollapserTimer();\n  HystrixCollapser<List<String>,String,String> collapser1=new TestRequestCollapser(timer,1,2,10);\n  HystrixCollapser<List<String>,String,String> collapser2=new TestRequestCollapser(timer,2,2,10);\n  HystrixCollapser<List<String>,String,String> collapser3=new TestRequestCollapser(timer,3,2,10);\n  System.out.println(\"*** \" + System.currentTimeMillis() + \" : \"+ Thread.currentThread().getName()+ \" Constructed the collapsers\");\n  Future<String> response1=collapser1.queue();\n  Future<String> response2=collapser2.queue();\n  Future<String> response3=collapser3.queue();\n  System.out.println(\"*** \" + System.currentTimeMillis() + \" : \"+ Thread.currentThread().getName()+ \" queued the collapsers\");\n  timer.incrementTime(10);\n  System.out.println(\"*** \" + System.currentTimeMillis() + \" : \"+ Thread.currentThread().getName()+ \" incremented the virtual timer\");\n  assertEquals(\"1\",response1.get(1000,TimeUnit.MILLISECONDS));\n  assertEquals(\"2\",response2.get(1000,TimeUnit.MILLISECONDS));\n  assertEquals(\"3\",response3.get(1000,TimeUnit.MILLISECONDS));\n  System.out.println(\"ReqLog : \" + HystrixRequestLog.getCurrentRequest().getExecutedCommandsAsString());\n  assertEquals(2,HystrixRequestLog.getCurrentRequest().getAllExecutedCommands().size());\n  Iterator<HystrixInvokableInfo<?>> cmdIterator=HystrixRequestLog.getCurrentRequest().getAllExecutedCommands().iterator();\n  assertEquals(2,cmdIterator.next().getNumberCollapsed());\n  assertEquals(1,cmdIterator.next().getNumberCollapsed());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 267,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 128,
        "startColumnNumber" : 8,
        "endLineNumber" : 128,
        "endColumnNumber" : 110
      },
      "nodeContext" : "HystrixCollapser<List<String>,String,String> collapser3=new TestRequestCollapser(timer,3,2,10);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 22,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "com.netflix.hystrix.HystrixCollapserTest.TestRequestCollapser"
  } ],
  "positionList" : [ {
    "charLength" : 41,
    "startLineNumber" : 128,
    "startColumnNumber" : 68,
    "endLineNumber" : 128,
    "endColumnNumber" : 109
  } ],
  "layoutRelationDataList" : [ ]
}