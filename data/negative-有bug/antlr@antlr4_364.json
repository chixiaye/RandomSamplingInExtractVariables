{
  "id" : 364,
  "expression" : "\"reuse state \" + s.stateNumber + \" edge to \"+ target.stateNumber",
  "projectName" : "antlr@antlr4",
  "commitID" : "f2b93e550cd912be3973743d09206db98f4092c9",
  "filePath" : "/runtime/Java/src/org/antlr/v4/runtime/atn/LexerATNSimulator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"reuse state \" + s.stateNumber + \" edge to \"+ target.stateNumber",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 71,
      "startLineNumber" : 252,
      "startColumnNumber" : 22,
      "endLineNumber" : 253,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 9,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 252,
        "startColumnNumber" : 3,
        "endLineNumber" : 253,
        "endColumnNumber" : 41
      },
      "nodeContext" : "System.out.println(\"reuse state \" + s.stateNumber + \" edge to \"+ target.stateNumber)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 252,
        "startColumnNumber" : 3,
        "endLineNumber" : 253,
        "endColumnNumber" : 42
      },
      "nodeContext" : "System.out.println(\"reuse state \" + s.stateNumber + \" edge to \"+ target.stateNumber);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 251,
        "startColumnNumber" : 31,
        "endLineNumber" : 254,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  System.out.println(\"reuse state \" + s.stateNumber + \" edge to \"+ target.stateNumber);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 251,
        "startColumnNumber" : 2,
        "endLineNumber" : 254,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (debug && target != null) {\n  System.out.println(\"reuse state \" + s.stateNumber + \" edge to \"+ target.stateNumber);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 299,
        "startLineNumber" : 245,
        "startColumnNumber" : 62,
        "endLineNumber" : 257,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (s.edges == null || t < MIN_DFA_EDGE || t > MAX_DFA_EDGE) {\n    return null;\n  }\n  DFAState target=s.edges[t - MIN_DFA_EDGE];\n  if (debug && target != null) {\n    System.out.println(\"reuse state \" + s.stateNumber + \" edge to \"+ target.stateNumber);\n  }\n  return target;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 54,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 806,
        "startLineNumber" : 233,
        "startColumnNumber" : 1,
        "endLineNumber" : 257,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Get an existing target state for an edge in the DFA. If the target state for the edge has not yet been computed or is otherwise not available, this method returns  {@code null}.\n * @param s The current DFA state\n * @param t The next input symbol\n * @return The existing target DFA state for the given input symbol{@code t}, or  {@code null} if the target state for this edge is notalready cached\n */\nprotected DFAState getExistingTargetState(DFAState s,int t){\n  if (s.edges == null || t < MIN_DFA_EDGE || t > MAX_DFA_EDGE) {\n    return null;\n  }\n  DFAState target=s.edges[t - MIN_DFA_EDGE];\n  if (debug && target != null) {\n    System.out.println(\"reuse state \" + s.stateNumber + \" edge to \"+ target.stateNumber);\n  }\n  return target;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 67,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 252,
        "startColumnNumber" : 3,
        "endLineNumber" : 253,
        "endColumnNumber" : 42
      },
      "nodeContext" : "System.out.println(\"reuse state \" + s.stateNumber + \" edge to \"+ target.stateNumber);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 11,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 71,
    "startLineNumber" : 252,
    "startColumnNumber" : 22,
    "endLineNumber" : 253,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ ]
}