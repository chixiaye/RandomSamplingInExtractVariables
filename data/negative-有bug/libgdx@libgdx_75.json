{
  "id" : 75,
  "expression" : "MathUtils.PI",
  "projectName" : "libgdx@libgdx",
  "commitID" : "3485b16e8979c0141421bc80cb8831b7a0403f67",
  "filePath" : "/gdx/test/com/badlogic/gdx/math/Vector2Test.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "MathUtils.PI",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 31,
      "startColumnNumber" : 17,
      "endLineNumber" : 31,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 31,
        "startColumnNumber" : 15,
        "endLineNumber" : 31,
        "endColumnNumber" : 29
      },
      "nodeContext" : "-MathUtils.PI",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 31,
        "startColumnNumber" : 15,
        "endLineNumber" : 31,
        "endColumnNumber" : 34
      },
      "nodeContext" : "-MathUtils.PI / 2f",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 31,
        "startColumnNumber" : 2,
        "endLineNumber" : 31,
        "endColumnNumber" : 99
      },
      "nodeContext" : "assertEquals(-MathUtils.PI / 2f,new Vector2(0,-1f).angleRad(),MathUtils.FLOAT_ROUNDING_ERROR)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 31,
        "startColumnNumber" : 2,
        "endLineNumber" : 31,
        "endColumnNumber" : 100
      },
      "nodeContext" : "assertEquals(-MathUtils.PI / 2f,new Vector2(0,-1f).angleRad(),MathUtils.FLOAT_ROUNDING_ERROR);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 30,
        "startColumnNumber" : 28,
        "endLineNumber" : 32,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  assertEquals(-MathUtils.PI / 2f,new Vector2(0,-1f).angleRad(),MathUtils.FLOAT_ROUNDING_ERROR);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 29,
        "startColumnNumber" : 1,
        "endLineNumber" : 32,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testAngleRad(){\n  assertEquals(-MathUtils.PI / 2f,new Vector2(0,-1f).angleRad(),MathUtils.FLOAT_ROUNDING_ERROR);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 27,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 31,
        "startColumnNumber" : 2,
        "endLineNumber" : 31,
        "endColumnNumber" : 100
      },
      "nodeContext" : "assertEquals(-MathUtils.PI / 2f,new Vector2(0,-1f).angleRad(),MathUtils.FLOAT_ROUNDING_ERROR);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 31,
    "startColumnNumber" : 17,
    "endLineNumber" : 31,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ ]
}