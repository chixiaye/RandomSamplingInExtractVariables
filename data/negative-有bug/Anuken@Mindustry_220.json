{
  "id" : 220,
  "expression" : "tiley",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/input/Placement.java",
  "occurrences" : 9,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "tiley",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 244,
      "startColumnNumber" : 49,
      "endLineNumber" : 244,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 244,
        "startColumnNumber" : 49,
        "endLineNumber" : 244,
        "endColumnNumber" : 61
      },
      "nodeContext" : "tiley - endy",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 244,
        "startColumnNumber" : 40,
        "endLineNumber" : 244,
        "endColumnNumber" : 62
      },
      "nodeContext" : "Math.abs(tiley - endy)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 244,
        "startColumnNumber" : 15,
        "endLineNumber" : 244,
        "endColumnNumber" : 62
      },
      "nodeContext" : "Math.abs(tilex - endx) > Math.abs(tiley - endy)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 244,
        "startColumnNumber" : 12,
        "endLineNumber" : 248,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (Math.abs(tilex - endx) > Math.abs(tiley - endy)) {\n  endy=tiley;\n}\n else {\n  endx=tilex;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 169,
        "startLineNumber" : 243,
        "startColumnNumber" : 16,
        "endLineNumber" : 249,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (Math.abs(tilex - endx) > Math.abs(tiley - endy)) {\n    endy=tiley;\n  }\n else {\n    endx=tilex;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 177,
        "startLineNumber" : 243,
        "startColumnNumber" : 8,
        "endLineNumber" : 249,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (snap) {\n  if (Math.abs(tilex - endx) > Math.abs(tiley - endy)) {\n    endy=tiley;\n  }\n else {\n    endx=tilex;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1215,
        "startLineNumber" : 242,
        "startColumnNumber" : 132,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (snap) {\n    if (Math.abs(tilex - endx) > Math.abs(tiley - endy)) {\n      endy=tiley;\n    }\n else {\n      endx=tilex;\n    }\n  }\n  if (Math.abs(endx - tilex) > maxLength) {\n    endx=Mathf.sign(endx - tilex) * maxLength + tilex;\n  }\n  if (Math.abs(endy - tiley) > maxLength) {\n    endy=Mathf.sign(endy - tiley) * maxLength + tiley;\n  }\n  int dx=endx - tilex, dy=endy - tiley;\n  if (Math.abs(dx) > Math.abs(dy)) {\n    if (dx >= 0) {\n      rotation=0;\n    }\n else {\n      rotation=2;\n    }\n  }\n else   if (Math.abs(dx) < Math.abs(dy)) {\n    if (dy >= 0) {\n      rotation=1;\n    }\n else {\n      rotation=3;\n    }\n  }\n  if (endx < tilex) {\n    int t=endx;\n    endx=tilex;\n    tilex=t;\n  }\n  if (endy < tiley) {\n    int t=endy;\n    endy=tiley;\n    tiley=t;\n  }\n  result.x2=endx;\n  result.y2=endy;\n  result.x=tilex;\n  result.y=tiley;\n  result.rotation=rotation;\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 204,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1784,
        "startLineNumber" : 231,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Normalizes a placement area and returns the result. Returned x2 and y2 will <i>always</i> be greater than x and y.\n * @param tilex starting X coordinate\n * @param tiley starting Y coordinate\n * @param endx ending X coordinate\n * @param endy ending Y coordinate\n * @param snap whether to snap to a line\n * @param rotation placement rotation\n * @param maxLength maximum length of area\n */\npublic static NormalizeResult normalizeArea(int tilex,int tiley,int endx,int endy,int rotation,boolean snap,int maxLength){\n  if (snap) {\n    if (Math.abs(tilex - endx) > Math.abs(tiley - endy)) {\n      endy=tiley;\n    }\n else {\n      endx=tilex;\n    }\n  }\n  if (Math.abs(endx - tilex) > maxLength) {\n    endx=Mathf.sign(endx - tilex) * maxLength + tilex;\n  }\n  if (Math.abs(endy - tiley) > maxLength) {\n    endy=Mathf.sign(endy - tiley) * maxLength + tiley;\n  }\n  int dx=endx - tilex, dy=endy - tiley;\n  if (Math.abs(dx) > Math.abs(dy)) {\n    if (dx >= 0) {\n      rotation=0;\n    }\n else {\n      rotation=2;\n    }\n  }\n else   if (Math.abs(dx) < Math.abs(dy)) {\n    if (dy >= 0) {\n      rotation=1;\n    }\n else {\n      rotation=3;\n    }\n  }\n  if (endx < tilex) {\n    int t=endx;\n    endx=tilex;\n    tilex=t;\n  }\n  if (endy < tiley) {\n    int t=endy;\n    endy=tiley;\n    tiley=t;\n  }\n  result.x2=endx;\n  result.y2=endy;\n  result.x=tilex;\n  result.y=tiley;\n  result.rotation=rotation;\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 232,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 244,
        "startColumnNumber" : 15,
        "endLineNumber" : 244,
        "endColumnNumber" : 62
      },
      "nodeContext" : "Math.abs(tilex - endx) > Math.abs(tiley - endy)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "tiley",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 245,
      "startColumnNumber" : 23,
      "endLineNumber" : 245,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 245,
        "startColumnNumber" : 16,
        "endLineNumber" : 245,
        "endColumnNumber" : 28
      },
      "nodeContext" : "endy=tiley",
      "nodeType" : "Assignment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 245,
        "startColumnNumber" : 16,
        "endLineNumber" : 245,
        "endColumnNumber" : 29
      },
      "nodeContext" : "endy=tiley;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 244,
        "startColumnNumber" : 63,
        "endLineNumber" : 246,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  endy=tiley;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 244,
        "startColumnNumber" : 12,
        "endLineNumber" : 248,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (Math.abs(tilex - endx) > Math.abs(tiley - endy)) {\n  endy=tiley;\n}\n else {\n  endx=tilex;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 169,
        "startLineNumber" : 243,
        "startColumnNumber" : 16,
        "endLineNumber" : 249,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (Math.abs(tilex - endx) > Math.abs(tiley - endy)) {\n    endy=tiley;\n  }\n else {\n    endx=tilex;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 177,
        "startLineNumber" : 243,
        "startColumnNumber" : 8,
        "endLineNumber" : 249,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (snap) {\n  if (Math.abs(tilex - endx) > Math.abs(tiley - endy)) {\n    endy=tiley;\n  }\n else {\n    endx=tilex;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1215,
        "startLineNumber" : 242,
        "startColumnNumber" : 132,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (snap) {\n    if (Math.abs(tilex - endx) > Math.abs(tiley - endy)) {\n      endy=tiley;\n    }\n else {\n      endx=tilex;\n    }\n  }\n  if (Math.abs(endx - tilex) > maxLength) {\n    endx=Mathf.sign(endx - tilex) * maxLength + tilex;\n  }\n  if (Math.abs(endy - tiley) > maxLength) {\n    endy=Mathf.sign(endy - tiley) * maxLength + tiley;\n  }\n  int dx=endx - tilex, dy=endy - tiley;\n  if (Math.abs(dx) > Math.abs(dy)) {\n    if (dx >= 0) {\n      rotation=0;\n    }\n else {\n      rotation=2;\n    }\n  }\n else   if (Math.abs(dx) < Math.abs(dy)) {\n    if (dy >= 0) {\n      rotation=1;\n    }\n else {\n      rotation=3;\n    }\n  }\n  if (endx < tilex) {\n    int t=endx;\n    endx=tilex;\n    tilex=t;\n  }\n  if (endy < tiley) {\n    int t=endy;\n    endy=tiley;\n    tiley=t;\n  }\n  result.x2=endx;\n  result.y2=endy;\n  result.x=tilex;\n  result.y=tiley;\n  result.rotation=rotation;\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 204,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1784,
        "startLineNumber" : 231,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Normalizes a placement area and returns the result. Returned x2 and y2 will <i>always</i> be greater than x and y.\n * @param tilex starting X coordinate\n * @param tiley starting Y coordinate\n * @param endx ending X coordinate\n * @param endy ending Y coordinate\n * @param snap whether to snap to a line\n * @param rotation placement rotation\n * @param maxLength maximum length of area\n */\npublic static NormalizeResult normalizeArea(int tilex,int tiley,int endx,int endy,int rotation,boolean snap,int maxLength){\n  if (snap) {\n    if (Math.abs(tilex - endx) > Math.abs(tiley - endy)) {\n      endy=tiley;\n    }\n else {\n      endx=tilex;\n    }\n  }\n  if (Math.abs(endx - tilex) > maxLength) {\n    endx=Mathf.sign(endx - tilex) * maxLength + tilex;\n  }\n  if (Math.abs(endy - tiley) > maxLength) {\n    endy=Mathf.sign(endy - tiley) * maxLength + tiley;\n  }\n  int dx=endx - tilex, dy=endy - tiley;\n  if (Math.abs(dx) > Math.abs(dy)) {\n    if (dx >= 0) {\n      rotation=0;\n    }\n else {\n      rotation=2;\n    }\n  }\n else   if (Math.abs(dx) < Math.abs(dy)) {\n    if (dy >= 0) {\n      rotation=1;\n    }\n else {\n      rotation=3;\n    }\n  }\n  if (endx < tilex) {\n    int t=endx;\n    endx=tilex;\n    tilex=t;\n  }\n  if (endy < tiley) {\n    int t=endy;\n    endy=tiley;\n    tiley=t;\n  }\n  result.x2=endx;\n  result.y2=endy;\n  result.x=tilex;\n  result.y=tiley;\n  result.rotation=rotation;\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 232,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 245,
        "startColumnNumber" : 16,
        "endLineNumber" : 245,
        "endColumnNumber" : 29
      },
      "nodeContext" : "endy=tiley;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "tiley",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 255,
      "startColumnNumber" : 27,
      "endLineNumber" : 255,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 255,
        "startColumnNumber" : 20,
        "endLineNumber" : 255,
        "endColumnNumber" : 32
      },
      "nodeContext" : "endy - tiley",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 255,
        "startColumnNumber" : 11,
        "endLineNumber" : 255,
        "endColumnNumber" : 33
      },
      "nodeContext" : "Math.abs(endy - tiley)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 255,
        "startColumnNumber" : 11,
        "endLineNumber" : 255,
        "endColumnNumber" : 45
      },
      "nodeContext" : "Math.abs(endy - tiley) > maxLength",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 255,
        "startColumnNumber" : 8,
        "endLineNumber" : 257,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (Math.abs(endy - tiley) > maxLength) {\n  endy=Mathf.sign(endy - tiley) * maxLength + tiley;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1215,
        "startLineNumber" : 242,
        "startColumnNumber" : 132,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (snap) {\n    if (Math.abs(tilex - endx) > Math.abs(tiley - endy)) {\n      endy=tiley;\n    }\n else {\n      endx=tilex;\n    }\n  }\n  if (Math.abs(endx - tilex) > maxLength) {\n    endx=Mathf.sign(endx - tilex) * maxLength + tilex;\n  }\n  if (Math.abs(endy - tiley) > maxLength) {\n    endy=Mathf.sign(endy - tiley) * maxLength + tiley;\n  }\n  int dx=endx - tilex, dy=endy - tiley;\n  if (Math.abs(dx) > Math.abs(dy)) {\n    if (dx >= 0) {\n      rotation=0;\n    }\n else {\n      rotation=2;\n    }\n  }\n else   if (Math.abs(dx) < Math.abs(dy)) {\n    if (dy >= 0) {\n      rotation=1;\n    }\n else {\n      rotation=3;\n    }\n  }\n  if (endx < tilex) {\n    int t=endx;\n    endx=tilex;\n    tilex=t;\n  }\n  if (endy < tiley) {\n    int t=endy;\n    endy=tiley;\n    tiley=t;\n  }\n  result.x2=endx;\n  result.y2=endy;\n  result.x=tilex;\n  result.y=tiley;\n  result.rotation=rotation;\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 204,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1784,
        "startLineNumber" : 231,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Normalizes a placement area and returns the result. Returned x2 and y2 will <i>always</i> be greater than x and y.\n * @param tilex starting X coordinate\n * @param tiley starting Y coordinate\n * @param endx ending X coordinate\n * @param endy ending Y coordinate\n * @param snap whether to snap to a line\n * @param rotation placement rotation\n * @param maxLength maximum length of area\n */\npublic static NormalizeResult normalizeArea(int tilex,int tiley,int endx,int endy,int rotation,boolean snap,int maxLength){\n  if (snap) {\n    if (Math.abs(tilex - endx) > Math.abs(tiley - endy)) {\n      endy=tiley;\n    }\n else {\n      endx=tilex;\n    }\n  }\n  if (Math.abs(endx - tilex) > maxLength) {\n    endx=Mathf.sign(endx - tilex) * maxLength + tilex;\n  }\n  if (Math.abs(endy - tiley) > maxLength) {\n    endy=Mathf.sign(endy - tiley) * maxLength + tiley;\n  }\n  int dx=endx - tilex, dy=endy - tiley;\n  if (Math.abs(dx) > Math.abs(dy)) {\n    if (dx >= 0) {\n      rotation=0;\n    }\n else {\n      rotation=2;\n    }\n  }\n else   if (Math.abs(dx) < Math.abs(dy)) {\n    if (dy >= 0) {\n      rotation=1;\n    }\n else {\n      rotation=3;\n    }\n  }\n  if (endx < tilex) {\n    int t=endx;\n    endx=tilex;\n    tilex=t;\n  }\n  if (endy < tiley) {\n    int t=endy;\n    endy=tiley;\n    tiley=t;\n  }\n  result.x2=endx;\n  result.y2=endy;\n  result.x=tilex;\n  result.y=tiley;\n  result.rotation=rotation;\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 232,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 255,
        "startColumnNumber" : 11,
        "endLineNumber" : 255,
        "endColumnNumber" : 45
      },
      "nodeContext" : "Math.abs(endy - tiley) > maxLength",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "tiley",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 256,
      "startColumnNumber" : 37,
      "endLineNumber" : 256,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 256,
        "startColumnNumber" : 30,
        "endLineNumber" : 256,
        "endColumnNumber" : 42
      },
      "nodeContext" : "endy - tiley",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 256,
        "startColumnNumber" : 19,
        "endLineNumber" : 256,
        "endColumnNumber" : 43
      },
      "nodeContext" : "Mathf.sign(endy - tiley)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 256,
        "startColumnNumber" : 19,
        "endLineNumber" : 256,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Mathf.sign(endy - tiley) * maxLength",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 256,
        "startColumnNumber" : 19,
        "endLineNumber" : 256,
        "endColumnNumber" : 63
      },
      "nodeContext" : "Mathf.sign(endy - tiley) * maxLength + tiley",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 256,
        "startColumnNumber" : 12,
        "endLineNumber" : 256,
        "endColumnNumber" : 63
      },
      "nodeContext" : "endy=Mathf.sign(endy - tiley) * maxLength + tiley",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 256,
        "startColumnNumber" : 12,
        "endLineNumber" : 256,
        "endColumnNumber" : 64
      },
      "nodeContext" : "endy=Mathf.sign(endy - tiley) * maxLength + tiley;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 255,
        "startColumnNumber" : 46,
        "endLineNumber" : 257,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  endy=Mathf.sign(endy - tiley) * maxLength + tiley;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 255,
        "startColumnNumber" : 8,
        "endLineNumber" : 257,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (Math.abs(endy - tiley) > maxLength) {\n  endy=Mathf.sign(endy - tiley) * maxLength + tiley;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1215,
        "startLineNumber" : 242,
        "startColumnNumber" : 132,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (snap) {\n    if (Math.abs(tilex - endx) > Math.abs(tiley - endy)) {\n      endy=tiley;\n    }\n else {\n      endx=tilex;\n    }\n  }\n  if (Math.abs(endx - tilex) > maxLength) {\n    endx=Mathf.sign(endx - tilex) * maxLength + tilex;\n  }\n  if (Math.abs(endy - tiley) > maxLength) {\n    endy=Mathf.sign(endy - tiley) * maxLength + tiley;\n  }\n  int dx=endx - tilex, dy=endy - tiley;\n  if (Math.abs(dx) > Math.abs(dy)) {\n    if (dx >= 0) {\n      rotation=0;\n    }\n else {\n      rotation=2;\n    }\n  }\n else   if (Math.abs(dx) < Math.abs(dy)) {\n    if (dy >= 0) {\n      rotation=1;\n    }\n else {\n      rotation=3;\n    }\n  }\n  if (endx < tilex) {\n    int t=endx;\n    endx=tilex;\n    tilex=t;\n  }\n  if (endy < tiley) {\n    int t=endy;\n    endy=tiley;\n    tiley=t;\n  }\n  result.x2=endx;\n  result.y2=endy;\n  result.x=tilex;\n  result.y=tiley;\n  result.rotation=rotation;\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 204,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1784,
        "startLineNumber" : 231,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Normalizes a placement area and returns the result. Returned x2 and y2 will <i>always</i> be greater than x and y.\n * @param tilex starting X coordinate\n * @param tiley starting Y coordinate\n * @param endx ending X coordinate\n * @param endy ending Y coordinate\n * @param snap whether to snap to a line\n * @param rotation placement rotation\n * @param maxLength maximum length of area\n */\npublic static NormalizeResult normalizeArea(int tilex,int tiley,int endx,int endy,int rotation,boolean snap,int maxLength){\n  if (snap) {\n    if (Math.abs(tilex - endx) > Math.abs(tiley - endy)) {\n      endy=tiley;\n    }\n else {\n      endx=tilex;\n    }\n  }\n  if (Math.abs(endx - tilex) > maxLength) {\n    endx=Mathf.sign(endx - tilex) * maxLength + tilex;\n  }\n  if (Math.abs(endy - tiley) > maxLength) {\n    endy=Mathf.sign(endy - tiley) * maxLength + tiley;\n  }\n  int dx=endx - tilex, dy=endy - tiley;\n  if (Math.abs(dx) > Math.abs(dy)) {\n    if (dx >= 0) {\n      rotation=0;\n    }\n else {\n      rotation=2;\n    }\n  }\n else   if (Math.abs(dx) < Math.abs(dy)) {\n    if (dy >= 0) {\n      rotation=1;\n    }\n else {\n      rotation=3;\n    }\n  }\n  if (endx < tilex) {\n    int t=endx;\n    endx=tilex;\n    tilex=t;\n  }\n  if (endy < tiley) {\n    int t=endy;\n    endy=tiley;\n    tiley=t;\n  }\n  result.x2=endx;\n  result.y2=endy;\n  result.x=tilex;\n  result.y=tiley;\n  result.rotation=rotation;\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 232,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 256,
        "startColumnNumber" : 12,
        "endLineNumber" : 256,
        "endColumnNumber" : 64
      },
      "nodeContext" : "endy=Mathf.sign(endy - tiley) * maxLength + tiley;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "tiley",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 256,
      "startColumnNumber" : 58,
      "endLineNumber" : 256,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 256,
        "startColumnNumber" : 19,
        "endLineNumber" : 256,
        "endColumnNumber" : 63
      },
      "nodeContext" : "Mathf.sign(endy - tiley) * maxLength + tiley",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 256,
        "startColumnNumber" : 12,
        "endLineNumber" : 256,
        "endColumnNumber" : 63
      },
      "nodeContext" : "endy=Mathf.sign(endy - tiley) * maxLength + tiley",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 256,
        "startColumnNumber" : 12,
        "endLineNumber" : 256,
        "endColumnNumber" : 64
      },
      "nodeContext" : "endy=Mathf.sign(endy - tiley) * maxLength + tiley;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 255,
        "startColumnNumber" : 46,
        "endLineNumber" : 257,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  endy=Mathf.sign(endy - tiley) * maxLength + tiley;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 255,
        "startColumnNumber" : 8,
        "endLineNumber" : 257,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (Math.abs(endy - tiley) > maxLength) {\n  endy=Mathf.sign(endy - tiley) * maxLength + tiley;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1215,
        "startLineNumber" : 242,
        "startColumnNumber" : 132,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (snap) {\n    if (Math.abs(tilex - endx) > Math.abs(tiley - endy)) {\n      endy=tiley;\n    }\n else {\n      endx=tilex;\n    }\n  }\n  if (Math.abs(endx - tilex) > maxLength) {\n    endx=Mathf.sign(endx - tilex) * maxLength + tilex;\n  }\n  if (Math.abs(endy - tiley) > maxLength) {\n    endy=Mathf.sign(endy - tiley) * maxLength + tiley;\n  }\n  int dx=endx - tilex, dy=endy - tiley;\n  if (Math.abs(dx) > Math.abs(dy)) {\n    if (dx >= 0) {\n      rotation=0;\n    }\n else {\n      rotation=2;\n    }\n  }\n else   if (Math.abs(dx) < Math.abs(dy)) {\n    if (dy >= 0) {\n      rotation=1;\n    }\n else {\n      rotation=3;\n    }\n  }\n  if (endx < tilex) {\n    int t=endx;\n    endx=tilex;\n    tilex=t;\n  }\n  if (endy < tiley) {\n    int t=endy;\n    endy=tiley;\n    tiley=t;\n  }\n  result.x2=endx;\n  result.y2=endy;\n  result.x=tilex;\n  result.y=tiley;\n  result.rotation=rotation;\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 204,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1784,
        "startLineNumber" : 231,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Normalizes a placement area and returns the result. Returned x2 and y2 will <i>always</i> be greater than x and y.\n * @param tilex starting X coordinate\n * @param tiley starting Y coordinate\n * @param endx ending X coordinate\n * @param endy ending Y coordinate\n * @param snap whether to snap to a line\n * @param rotation placement rotation\n * @param maxLength maximum length of area\n */\npublic static NormalizeResult normalizeArea(int tilex,int tiley,int endx,int endy,int rotation,boolean snap,int maxLength){\n  if (snap) {\n    if (Math.abs(tilex - endx) > Math.abs(tiley - endy)) {\n      endy=tiley;\n    }\n else {\n      endx=tilex;\n    }\n  }\n  if (Math.abs(endx - tilex) > maxLength) {\n    endx=Mathf.sign(endx - tilex) * maxLength + tilex;\n  }\n  if (Math.abs(endy - tiley) > maxLength) {\n    endy=Mathf.sign(endy - tiley) * maxLength + tiley;\n  }\n  int dx=endx - tilex, dy=endy - tiley;\n  if (Math.abs(dx) > Math.abs(dy)) {\n    if (dx >= 0) {\n      rotation=0;\n    }\n else {\n      rotation=2;\n    }\n  }\n else   if (Math.abs(dx) < Math.abs(dy)) {\n    if (dy >= 0) {\n      rotation=1;\n    }\n else {\n      rotation=3;\n    }\n  }\n  if (endx < tilex) {\n    int t=endx;\n    endx=tilex;\n    tilex=t;\n  }\n  if (endy < tiley) {\n    int t=endy;\n    endy=tiley;\n    tiley=t;\n  }\n  result.x2=endx;\n  result.y2=endy;\n  result.x=tilex;\n  result.y=tiley;\n  result.rotation=rotation;\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 232,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 256,
        "startColumnNumber" : 12,
        "endLineNumber" : 256,
        "endColumnNumber" : 64
      },
      "nodeContext" : "endy=Mathf.sign(endy - tiley) * maxLength + tiley;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "tiley",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 259,
      "startColumnNumber" : 43,
      "endLineNumber" : 259,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 259,
        "startColumnNumber" : 36,
        "endLineNumber" : 259,
        "endColumnNumber" : 48
      },
      "nodeContext" : "endy - tiley",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 259,
        "startColumnNumber" : 31,
        "endLineNumber" : 259,
        "endColumnNumber" : 48
      },
      "nodeContext" : "dy=endy - tiley",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 259,
        "startColumnNumber" : 8,
        "endLineNumber" : 259,
        "endColumnNumber" : 49
      },
      "nodeContext" : "int dx=endx - tilex, dy=endy - tiley;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1215,
        "startLineNumber" : 242,
        "startColumnNumber" : 132,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (snap) {\n    if (Math.abs(tilex - endx) > Math.abs(tiley - endy)) {\n      endy=tiley;\n    }\n else {\n      endx=tilex;\n    }\n  }\n  if (Math.abs(endx - tilex) > maxLength) {\n    endx=Mathf.sign(endx - tilex) * maxLength + tilex;\n  }\n  if (Math.abs(endy - tiley) > maxLength) {\n    endy=Mathf.sign(endy - tiley) * maxLength + tiley;\n  }\n  int dx=endx - tilex, dy=endy - tiley;\n  if (Math.abs(dx) > Math.abs(dy)) {\n    if (dx >= 0) {\n      rotation=0;\n    }\n else {\n      rotation=2;\n    }\n  }\n else   if (Math.abs(dx) < Math.abs(dy)) {\n    if (dy >= 0) {\n      rotation=1;\n    }\n else {\n      rotation=3;\n    }\n  }\n  if (endx < tilex) {\n    int t=endx;\n    endx=tilex;\n    tilex=t;\n  }\n  if (endy < tiley) {\n    int t=endy;\n    endy=tiley;\n    tiley=t;\n  }\n  result.x2=endx;\n  result.y2=endy;\n  result.x=tilex;\n  result.y=tiley;\n  result.rotation=rotation;\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 204,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1784,
        "startLineNumber" : 231,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Normalizes a placement area and returns the result. Returned x2 and y2 will <i>always</i> be greater than x and y.\n * @param tilex starting X coordinate\n * @param tiley starting Y coordinate\n * @param endx ending X coordinate\n * @param endy ending Y coordinate\n * @param snap whether to snap to a line\n * @param rotation placement rotation\n * @param maxLength maximum length of area\n */\npublic static NormalizeResult normalizeArea(int tilex,int tiley,int endx,int endy,int rotation,boolean snap,int maxLength){\n  if (snap) {\n    if (Math.abs(tilex - endx) > Math.abs(tiley - endy)) {\n      endy=tiley;\n    }\n else {\n      endx=tilex;\n    }\n  }\n  if (Math.abs(endx - tilex) > maxLength) {\n    endx=Mathf.sign(endx - tilex) * maxLength + tilex;\n  }\n  if (Math.abs(endy - tiley) > maxLength) {\n    endy=Mathf.sign(endy - tiley) * maxLength + tiley;\n  }\n  int dx=endx - tilex, dy=endy - tiley;\n  if (Math.abs(dx) > Math.abs(dy)) {\n    if (dx >= 0) {\n      rotation=0;\n    }\n else {\n      rotation=2;\n    }\n  }\n else   if (Math.abs(dx) < Math.abs(dy)) {\n    if (dy >= 0) {\n      rotation=1;\n    }\n else {\n      rotation=3;\n    }\n  }\n  if (endx < tilex) {\n    int t=endx;\n    endx=tilex;\n    tilex=t;\n  }\n  if (endy < tiley) {\n    int t=endy;\n    endy=tiley;\n    tiley=t;\n  }\n  result.x2=endx;\n  result.y2=endy;\n  result.x=tilex;\n  result.y=tiley;\n  result.rotation=rotation;\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 232,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 259,
        "startColumnNumber" : 8,
        "endLineNumber" : 259,
        "endColumnNumber" : 49
      },
      "nodeContext" : "int dx=endx - tilex, dy=endy - tiley;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "tiley",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 280,
      "startColumnNumber" : 18,
      "endLineNumber" : 280,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 280,
        "startColumnNumber" : 11,
        "endLineNumber" : 280,
        "endColumnNumber" : 23
      },
      "nodeContext" : "endy < tiley",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 280,
        "startColumnNumber" : 8,
        "endLineNumber" : 284,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (endy < tiley) {\n  int t=endy;\n  endy=tiley;\n  tiley=t;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1215,
        "startLineNumber" : 242,
        "startColumnNumber" : 132,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (snap) {\n    if (Math.abs(tilex - endx) > Math.abs(tiley - endy)) {\n      endy=tiley;\n    }\n else {\n      endx=tilex;\n    }\n  }\n  if (Math.abs(endx - tilex) > maxLength) {\n    endx=Mathf.sign(endx - tilex) * maxLength + tilex;\n  }\n  if (Math.abs(endy - tiley) > maxLength) {\n    endy=Mathf.sign(endy - tiley) * maxLength + tiley;\n  }\n  int dx=endx - tilex, dy=endy - tiley;\n  if (Math.abs(dx) > Math.abs(dy)) {\n    if (dx >= 0) {\n      rotation=0;\n    }\n else {\n      rotation=2;\n    }\n  }\n else   if (Math.abs(dx) < Math.abs(dy)) {\n    if (dy >= 0) {\n      rotation=1;\n    }\n else {\n      rotation=3;\n    }\n  }\n  if (endx < tilex) {\n    int t=endx;\n    endx=tilex;\n    tilex=t;\n  }\n  if (endy < tiley) {\n    int t=endy;\n    endy=tiley;\n    tiley=t;\n  }\n  result.x2=endx;\n  result.y2=endy;\n  result.x=tilex;\n  result.y=tiley;\n  result.rotation=rotation;\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 204,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1784,
        "startLineNumber" : 231,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Normalizes a placement area and returns the result. Returned x2 and y2 will <i>always</i> be greater than x and y.\n * @param tilex starting X coordinate\n * @param tiley starting Y coordinate\n * @param endx ending X coordinate\n * @param endy ending Y coordinate\n * @param snap whether to snap to a line\n * @param rotation placement rotation\n * @param maxLength maximum length of area\n */\npublic static NormalizeResult normalizeArea(int tilex,int tiley,int endx,int endy,int rotation,boolean snap,int maxLength){\n  if (snap) {\n    if (Math.abs(tilex - endx) > Math.abs(tiley - endy)) {\n      endy=tiley;\n    }\n else {\n      endx=tilex;\n    }\n  }\n  if (Math.abs(endx - tilex) > maxLength) {\n    endx=Mathf.sign(endx - tilex) * maxLength + tilex;\n  }\n  if (Math.abs(endy - tiley) > maxLength) {\n    endy=Mathf.sign(endy - tiley) * maxLength + tiley;\n  }\n  int dx=endx - tilex, dy=endy - tiley;\n  if (Math.abs(dx) > Math.abs(dy)) {\n    if (dx >= 0) {\n      rotation=0;\n    }\n else {\n      rotation=2;\n    }\n  }\n else   if (Math.abs(dx) < Math.abs(dy)) {\n    if (dy >= 0) {\n      rotation=1;\n    }\n else {\n      rotation=3;\n    }\n  }\n  if (endx < tilex) {\n    int t=endx;\n    endx=tilex;\n    tilex=t;\n  }\n  if (endy < tiley) {\n    int t=endy;\n    endy=tiley;\n    tiley=t;\n  }\n  result.x2=endx;\n  result.y2=endy;\n  result.x=tilex;\n  result.y=tiley;\n  result.rotation=rotation;\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 232,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 280,
        "startColumnNumber" : 11,
        "endLineNumber" : 280,
        "endColumnNumber" : 23
      },
      "nodeContext" : "endy < tiley",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "tiley",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 282,
      "startColumnNumber" : 19,
      "endLineNumber" : 282,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 282,
        "startColumnNumber" : 12,
        "endLineNumber" : 282,
        "endColumnNumber" : 24
      },
      "nodeContext" : "endy=tiley",
      "nodeType" : "Assignment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 282,
        "startColumnNumber" : 12,
        "endLineNumber" : 282,
        "endColumnNumber" : 25
      },
      "nodeContext" : "endy=tiley;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 280,
        "startColumnNumber" : 24,
        "endLineNumber" : 284,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int t=endy;\n  endy=tiley;\n  tiley=t;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 280,
        "startColumnNumber" : 8,
        "endLineNumber" : 284,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (endy < tiley) {\n  int t=endy;\n  endy=tiley;\n  tiley=t;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1215,
        "startLineNumber" : 242,
        "startColumnNumber" : 132,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (snap) {\n    if (Math.abs(tilex - endx) > Math.abs(tiley - endy)) {\n      endy=tiley;\n    }\n else {\n      endx=tilex;\n    }\n  }\n  if (Math.abs(endx - tilex) > maxLength) {\n    endx=Mathf.sign(endx - tilex) * maxLength + tilex;\n  }\n  if (Math.abs(endy - tiley) > maxLength) {\n    endy=Mathf.sign(endy - tiley) * maxLength + tiley;\n  }\n  int dx=endx - tilex, dy=endy - tiley;\n  if (Math.abs(dx) > Math.abs(dy)) {\n    if (dx >= 0) {\n      rotation=0;\n    }\n else {\n      rotation=2;\n    }\n  }\n else   if (Math.abs(dx) < Math.abs(dy)) {\n    if (dy >= 0) {\n      rotation=1;\n    }\n else {\n      rotation=3;\n    }\n  }\n  if (endx < tilex) {\n    int t=endx;\n    endx=tilex;\n    tilex=t;\n  }\n  if (endy < tiley) {\n    int t=endy;\n    endy=tiley;\n    tiley=t;\n  }\n  result.x2=endx;\n  result.y2=endy;\n  result.x=tilex;\n  result.y=tiley;\n  result.rotation=rotation;\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 204,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1784,
        "startLineNumber" : 231,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Normalizes a placement area and returns the result. Returned x2 and y2 will <i>always</i> be greater than x and y.\n * @param tilex starting X coordinate\n * @param tiley starting Y coordinate\n * @param endx ending X coordinate\n * @param endy ending Y coordinate\n * @param snap whether to snap to a line\n * @param rotation placement rotation\n * @param maxLength maximum length of area\n */\npublic static NormalizeResult normalizeArea(int tilex,int tiley,int endx,int endy,int rotation,boolean snap,int maxLength){\n  if (snap) {\n    if (Math.abs(tilex - endx) > Math.abs(tiley - endy)) {\n      endy=tiley;\n    }\n else {\n      endx=tilex;\n    }\n  }\n  if (Math.abs(endx - tilex) > maxLength) {\n    endx=Mathf.sign(endx - tilex) * maxLength + tilex;\n  }\n  if (Math.abs(endy - tiley) > maxLength) {\n    endy=Mathf.sign(endy - tiley) * maxLength + tiley;\n  }\n  int dx=endx - tilex, dy=endy - tiley;\n  if (Math.abs(dx) > Math.abs(dy)) {\n    if (dx >= 0) {\n      rotation=0;\n    }\n else {\n      rotation=2;\n    }\n  }\n else   if (Math.abs(dx) < Math.abs(dy)) {\n    if (dy >= 0) {\n      rotation=1;\n    }\n else {\n      rotation=3;\n    }\n  }\n  if (endx < tilex) {\n    int t=endx;\n    endx=tilex;\n    tilex=t;\n  }\n  if (endy < tiley) {\n    int t=endy;\n    endy=tiley;\n    tiley=t;\n  }\n  result.x2=endx;\n  result.y2=endy;\n  result.x=tilex;\n  result.y=tiley;\n  result.rotation=rotation;\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 232,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 282,
        "startColumnNumber" : 12,
        "endLineNumber" : 282,
        "endColumnNumber" : 25
      },
      "nodeContext" : "endy=tiley;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "tiley",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 289,
      "startColumnNumber" : 19,
      "endLineNumber" : 289,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 289,
        "startColumnNumber" : 8,
        "endLineNumber" : 289,
        "endColumnNumber" : 24
      },
      "nodeContext" : "result.y=tiley",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 289,
        "startColumnNumber" : 8,
        "endLineNumber" : 289,
        "endColumnNumber" : 25
      },
      "nodeContext" : "result.y=tiley;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1215,
        "startLineNumber" : 242,
        "startColumnNumber" : 132,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (snap) {\n    if (Math.abs(tilex - endx) > Math.abs(tiley - endy)) {\n      endy=tiley;\n    }\n else {\n      endx=tilex;\n    }\n  }\n  if (Math.abs(endx - tilex) > maxLength) {\n    endx=Mathf.sign(endx - tilex) * maxLength + tilex;\n  }\n  if (Math.abs(endy - tiley) > maxLength) {\n    endy=Mathf.sign(endy - tiley) * maxLength + tiley;\n  }\n  int dx=endx - tilex, dy=endy - tiley;\n  if (Math.abs(dx) > Math.abs(dy)) {\n    if (dx >= 0) {\n      rotation=0;\n    }\n else {\n      rotation=2;\n    }\n  }\n else   if (Math.abs(dx) < Math.abs(dy)) {\n    if (dy >= 0) {\n      rotation=1;\n    }\n else {\n      rotation=3;\n    }\n  }\n  if (endx < tilex) {\n    int t=endx;\n    endx=tilex;\n    tilex=t;\n  }\n  if (endy < tiley) {\n    int t=endy;\n    endy=tiley;\n    tiley=t;\n  }\n  result.x2=endx;\n  result.y2=endy;\n  result.x=tilex;\n  result.y=tiley;\n  result.rotation=rotation;\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 204,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1784,
        "startLineNumber" : 231,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Normalizes a placement area and returns the result. Returned x2 and y2 will <i>always</i> be greater than x and y.\n * @param tilex starting X coordinate\n * @param tiley starting Y coordinate\n * @param endx ending X coordinate\n * @param endy ending Y coordinate\n * @param snap whether to snap to a line\n * @param rotation placement rotation\n * @param maxLength maximum length of area\n */\npublic static NormalizeResult normalizeArea(int tilex,int tiley,int endx,int endy,int rotation,boolean snap,int maxLength){\n  if (snap) {\n    if (Math.abs(tilex - endx) > Math.abs(tiley - endy)) {\n      endy=tiley;\n    }\n else {\n      endx=tilex;\n    }\n  }\n  if (Math.abs(endx - tilex) > maxLength) {\n    endx=Mathf.sign(endx - tilex) * maxLength + tilex;\n  }\n  if (Math.abs(endy - tiley) > maxLength) {\n    endy=Mathf.sign(endy - tiley) * maxLength + tiley;\n  }\n  int dx=endx - tilex, dy=endy - tiley;\n  if (Math.abs(dx) > Math.abs(dy)) {\n    if (dx >= 0) {\n      rotation=0;\n    }\n else {\n      rotation=2;\n    }\n  }\n else   if (Math.abs(dx) < Math.abs(dy)) {\n    if (dy >= 0) {\n      rotation=1;\n    }\n else {\n      rotation=3;\n    }\n  }\n  if (endx < tilex) {\n    int t=endx;\n    endx=tilex;\n    tilex=t;\n  }\n  if (endy < tiley) {\n    int t=endy;\n    endy=tiley;\n    tiley=t;\n  }\n  result.x2=endx;\n  result.y2=endy;\n  result.x=tilex;\n  result.y=tiley;\n  result.rotation=rotation;\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 232,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 289,
        "startColumnNumber" : 8,
        "endLineNumber" : 289,
        "endColumnNumber" : 25
      },
      "nodeContext" : "result.y=tiley;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 244,
    "startColumnNumber" : 49,
    "endLineNumber" : 244,
    "endColumnNumber" : 54
  }, {
    "charLength" : 5,
    "startLineNumber" : 245,
    "startColumnNumber" : 23,
    "endLineNumber" : 245,
    "endColumnNumber" : 28
  }, {
    "charLength" : 5,
    "startLineNumber" : 255,
    "startColumnNumber" : 27,
    "endLineNumber" : 255,
    "endColumnNumber" : 32
  }, {
    "charLength" : 5,
    "startLineNumber" : 256,
    "startColumnNumber" : 37,
    "endLineNumber" : 256,
    "endColumnNumber" : 42
  }, {
    "charLength" : 5,
    "startLineNumber" : 256,
    "startColumnNumber" : 58,
    "endLineNumber" : 256,
    "endColumnNumber" : 63
  }, {
    "charLength" : 5,
    "startLineNumber" : 259,
    "startColumnNumber" : 43,
    "endLineNumber" : 259,
    "endColumnNumber" : 48
  }, {
    "charLength" : 5,
    "startLineNumber" : 280,
    "startColumnNumber" : 18,
    "endLineNumber" : 280,
    "endColumnNumber" : 23
  }, {
    "charLength" : 5,
    "startLineNumber" : 282,
    "startColumnNumber" : 19,
    "endLineNumber" : 282,
    "endColumnNumber" : 24
  }, {
    "charLength" : 5,
    "startLineNumber" : 289,
    "startColumnNumber" : 19,
    "endLineNumber" : 289,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 8
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 0
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 1
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 2
  } ]
}