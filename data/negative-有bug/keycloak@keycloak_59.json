{
  "id" : 59,
  "expression" : "testingClient",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/federation/ldap/LDAPReadOnlyTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "testingClient",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 79,
      "startColumnNumber" : 8,
      "endLineNumber" : 79,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 30
      },
      "nodeContext" : "testingClient.server()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 1181,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 10
      },
      "nodeContext" : "testingClient.server().run(session -> {\n  LDAPTestContext ctx=LDAPTestContext.init(session);\n  RealmModel appRealm=ctx.getRealm();\n  LDAPTestUtils.addZipCodeLDAPMapper(appRealm,ctx.getLdapModel());\n  LDAPTestUtils.removeAllLDAPUsers(ctx.getLdapProvider(),appRealm);\n  LDAPObject john=LDAPTestUtils.addLDAPUser(ctx.getLdapProvider(),appRealm,\"johnkeycloak\",\"John\",\"Doe\",\"john@email.org\",null,\"1234\");\n  LDAPTestUtils.updateLDAPPassword(ctx.getLdapProvider(),john,\"Password1\");\n  LDAPObject existing=LDAPTestUtils.addLDAPUser(ctx.getLdapProvider(),appRealm,\"existing\",\"Existing\",\"Foo\",\"existing@email.org\",null,\"5678\");\n  appRealm.getClientByClientId(\"test-app\").setDirectAccessGrantsEnabled(true);\n  LDAPStorageProvider ldapFedProvider=LDAPTestUtils.getLdapProvider(session,ctx.getLdapModel());\n  ldapFedProvider.getModel().put(LDAPConstants.EDIT_MODE,UserStorageProvider.EditMode.READ_ONLY.toString());\n  appRealm.updateComponent(ldapFedProvider.getModel());\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 130,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1182,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 11
      },
      "nodeContext" : "testingClient.server().run(session -> {\n  LDAPTestContext ctx=LDAPTestContext.init(session);\n  RealmModel appRealm=ctx.getRealm();\n  LDAPTestUtils.addZipCodeLDAPMapper(appRealm,ctx.getLdapModel());\n  LDAPTestUtils.removeAllLDAPUsers(ctx.getLdapProvider(),appRealm);\n  LDAPObject john=LDAPTestUtils.addLDAPUser(ctx.getLdapProvider(),appRealm,\"johnkeycloak\",\"John\",\"Doe\",\"john@email.org\",null,\"1234\");\n  LDAPTestUtils.updateLDAPPassword(ctx.getLdapProvider(),john,\"Password1\");\n  LDAPObject existing=LDAPTestUtils.addLDAPUser(ctx.getLdapProvider(),appRealm,\"existing\",\"Existing\",\"Foo\",\"existing@email.org\",null,\"5678\");\n  appRealm.getClientByClientId(\"test-app\").setDirectAccessGrantsEnabled(true);\n  LDAPStorageProvider ldapFedProvider=LDAPTestUtils.getLdapProvider(session,ctx.getLdapModel());\n  ldapFedProvider.getModel().put(LDAPConstants.EDIT_MODE,UserStorageProvider.EditMode.READ_ONLY.toString());\n  appRealm.updateComponent(ldapFedProvider.getModel());\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 131,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1198,
        "startLineNumber" : 78,
        "startColumnNumber" : 42,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  testingClient.server().run(session -> {\n    LDAPTestContext ctx=LDAPTestContext.init(session);\n    RealmModel appRealm=ctx.getRealm();\n    LDAPTestUtils.addZipCodeLDAPMapper(appRealm,ctx.getLdapModel());\n    LDAPTestUtils.removeAllLDAPUsers(ctx.getLdapProvider(),appRealm);\n    LDAPObject john=LDAPTestUtils.addLDAPUser(ctx.getLdapProvider(),appRealm,\"johnkeycloak\",\"John\",\"Doe\",\"john@email.org\",null,\"1234\");\n    LDAPTestUtils.updateLDAPPassword(ctx.getLdapProvider(),john,\"Password1\");\n    LDAPObject existing=LDAPTestUtils.addLDAPUser(ctx.getLdapProvider(),appRealm,\"existing\",\"Existing\",\"Foo\",\"existing@email.org\",null,\"5678\");\n    appRealm.getClientByClientId(\"test-app\").setDirectAccessGrantsEnabled(true);\n    LDAPStorageProvider ldapFedProvider=LDAPTestUtils.getLdapProvider(session,ctx.getLdapModel());\n    ldapFedProvider.getModel().put(LDAPConstants.EDIT_MODE,UserStorageProvider.EditMode.READ_ONLY.toString());\n    appRealm.updateComponent(ldapFedProvider.getModel());\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 132,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1250,
        "startLineNumber" : 77,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected void afterImportTestRealm(){\n  testingClient.server().run(session -> {\n    LDAPTestContext ctx=LDAPTestContext.init(session);\n    RealmModel appRealm=ctx.getRealm();\n    LDAPTestUtils.addZipCodeLDAPMapper(appRealm,ctx.getLdapModel());\n    LDAPTestUtils.removeAllLDAPUsers(ctx.getLdapProvider(),appRealm);\n    LDAPObject john=LDAPTestUtils.addLDAPUser(ctx.getLdapProvider(),appRealm,\"johnkeycloak\",\"John\",\"Doe\",\"john@email.org\",null,\"1234\");\n    LDAPTestUtils.updateLDAPPassword(ctx.getLdapProvider(),john,\"Password1\");\n    LDAPObject existing=LDAPTestUtils.addLDAPUser(ctx.getLdapProvider(),appRealm,\"existing\",\"Existing\",\"Foo\",\"existing@email.org\",null,\"5678\");\n    appRealm.getClientByClientId(\"test-app\").setDirectAccessGrantsEnabled(true);\n    LDAPStorageProvider ldapFedProvider=LDAPTestUtils.getLdapProvider(session,ctx.getLdapModel());\n    ldapFedProvider.getModel().put(LDAPConstants.EDIT_MODE,UserStorageProvider.EditMode.READ_ONLY.toString());\n    appRealm.updateComponent(ldapFedProvider.getModel());\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 138,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 30
      },
      "nodeContext" : "testingClient.server()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.keycloak.testsuite.client.KeycloakTestingClient"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 79,
    "startColumnNumber" : 8,
    "endLineNumber" : 79,
    "endColumnNumber" : 21
  } ],
  "layoutRelationDataList" : [ ]
}