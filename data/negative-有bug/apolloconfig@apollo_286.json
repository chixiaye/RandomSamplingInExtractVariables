{
  "id" : 286,
  "expression" : "new Properties()",
  "projectName" : "apolloconfig@apollo",
  "commitID" : "7b7d753f78e444f9cf97b0f238f7e33f585cb277",
  "filePath" : "/apollo-client/src/main/java/com/ctrip/framework/apollo/internals/AbstractConfig.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new Properties()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 120,
      "startColumnNumber" : 17,
      "endLineNumber" : 120,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 120,
        "startColumnNumber" : 6,
        "endLineNumber" : 120,
        "endColumnNumber" : 33
      },
      "nodeContext" : "previous=new Properties()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 120,
        "startColumnNumber" : 6,
        "endLineNumber" : 120,
        "endColumnNumber" : 34
      },
      "nodeContext" : "previous=new Properties();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 119,
        "startColumnNumber" : 26,
        "endLineNumber" : 121,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  previous=new Properties();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 119,
        "startColumnNumber" : 4,
        "endLineNumber" : 121,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (previous == null) {\n  previous=new Properties();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 11,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1300,
        "startLineNumber" : 118,
        "startColumnNumber" : 61,
        "endLineNumber" : 157,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (previous == null) {\n    previous=new Properties();\n  }\n  if (current == null) {\n    current=new Properties();\n  }\n  Set<String> previousKeys=previous.stringPropertyNames();\n  Set<String> currentKeys=current.stringPropertyNames();\n  Set<String> commonKeys=Sets.intersection(previousKeys,currentKeys);\n  Set<String> newKeys=Sets.difference(currentKeys,commonKeys);\n  Set<String> removedKeys=Sets.difference(previousKeys,commonKeys);\n  List<ConfigChange> changes=Lists.newArrayList();\n  for (  String newKey : newKeys) {\n    changes.add(new ConfigChange(namespace,newKey,null,current.getProperty(newKey),PropertyChangeType.ADDED));\n  }\n  for (  String removedKey : removedKeys) {\n    changes.add(new ConfigChange(namespace,removedKey,previous.getProperty(removedKey),null,PropertyChangeType.DELETED));\n  }\n  for (  String commonKey : commonKeys) {\n    String previousValue=previous.getProperty(commonKey);\n    String currentValue=current.getProperty(commonKey);\n    if (Objects.equal(previousValue,currentValue)) {\n      continue;\n    }\n    changes.add(new ConfigChange(namespace,commonKey,previousValue,currentValue,PropertyChangeType.MODIFIED));\n  }\n  return changes;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 192,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1439,
        "startLineNumber" : 117,
        "startColumnNumber" : 2,
        "endLineNumber" : 157,
        "endColumnNumber" : 3
      },
      "nodeContext" : "List<ConfigChange> calcPropertyChanges(String namespace,Properties previous,Properties current){\n  if (previous == null) {\n    previous=new Properties();\n  }\n  if (current == null) {\n    current=new Properties();\n  }\n  Set<String> previousKeys=previous.stringPropertyNames();\n  Set<String> currentKeys=current.stringPropertyNames();\n  Set<String> commonKeys=Sets.intersection(previousKeys,currentKeys);\n  Set<String> newKeys=Sets.difference(currentKeys,commonKeys);\n  Set<String> removedKeys=Sets.difference(previousKeys,commonKeys);\n  List<ConfigChange> changes=Lists.newArrayList();\n  for (  String newKey : newKeys) {\n    changes.add(new ConfigChange(namespace,newKey,null,current.getProperty(newKey),PropertyChangeType.ADDED));\n  }\n  for (  String removedKey : removedKeys) {\n    changes.add(new ConfigChange(namespace,removedKey,previous.getProperty(removedKey),null,PropertyChangeType.DELETED));\n  }\n  for (  String commonKey : commonKeys) {\n    String previousValue=previous.getProperty(commonKey);\n    String currentValue=current.getProperty(commonKey);\n    if (Objects.equal(previousValue,currentValue)) {\n      continue;\n    }\n    changes.add(new ConfigChange(namespace,commonKey,previousValue,currentValue,PropertyChangeType.MODIFIED));\n  }\n  return changes;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 211,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 120,
        "startColumnNumber" : 6,
        "endLineNumber" : 120,
        "endColumnNumber" : 34
      },
      "nodeContext" : "previous=new Properties();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.Properties"
  }, {
    "nodeContext" : "new Properties()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 124,
      "startColumnNumber" : 16,
      "endLineNumber" : 124,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 124,
        "startColumnNumber" : 6,
        "endLineNumber" : 124,
        "endColumnNumber" : 32
      },
      "nodeContext" : "current=new Properties()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 124,
        "startColumnNumber" : 6,
        "endLineNumber" : 124,
        "endColumnNumber" : 33
      },
      "nodeContext" : "current=new Properties();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 123,
        "startColumnNumber" : 25,
        "endLineNumber" : 125,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  current=new Properties();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 123,
        "startColumnNumber" : 4,
        "endLineNumber" : 125,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (current == null) {\n  current=new Properties();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 11,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1300,
        "startLineNumber" : 118,
        "startColumnNumber" : 61,
        "endLineNumber" : 157,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (previous == null) {\n    previous=new Properties();\n  }\n  if (current == null) {\n    current=new Properties();\n  }\n  Set<String> previousKeys=previous.stringPropertyNames();\n  Set<String> currentKeys=current.stringPropertyNames();\n  Set<String> commonKeys=Sets.intersection(previousKeys,currentKeys);\n  Set<String> newKeys=Sets.difference(currentKeys,commonKeys);\n  Set<String> removedKeys=Sets.difference(previousKeys,commonKeys);\n  List<ConfigChange> changes=Lists.newArrayList();\n  for (  String newKey : newKeys) {\n    changes.add(new ConfigChange(namespace,newKey,null,current.getProperty(newKey),PropertyChangeType.ADDED));\n  }\n  for (  String removedKey : removedKeys) {\n    changes.add(new ConfigChange(namespace,removedKey,previous.getProperty(removedKey),null,PropertyChangeType.DELETED));\n  }\n  for (  String commonKey : commonKeys) {\n    String previousValue=previous.getProperty(commonKey);\n    String currentValue=current.getProperty(commonKey);\n    if (Objects.equal(previousValue,currentValue)) {\n      continue;\n    }\n    changes.add(new ConfigChange(namespace,commonKey,previousValue,currentValue,PropertyChangeType.MODIFIED));\n  }\n  return changes;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 192,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1439,
        "startLineNumber" : 117,
        "startColumnNumber" : 2,
        "endLineNumber" : 157,
        "endColumnNumber" : 3
      },
      "nodeContext" : "List<ConfigChange> calcPropertyChanges(String namespace,Properties previous,Properties current){\n  if (previous == null) {\n    previous=new Properties();\n  }\n  if (current == null) {\n    current=new Properties();\n  }\n  Set<String> previousKeys=previous.stringPropertyNames();\n  Set<String> currentKeys=current.stringPropertyNames();\n  Set<String> commonKeys=Sets.intersection(previousKeys,currentKeys);\n  Set<String> newKeys=Sets.difference(currentKeys,commonKeys);\n  Set<String> removedKeys=Sets.difference(previousKeys,commonKeys);\n  List<ConfigChange> changes=Lists.newArrayList();\n  for (  String newKey : newKeys) {\n    changes.add(new ConfigChange(namespace,newKey,null,current.getProperty(newKey),PropertyChangeType.ADDED));\n  }\n  for (  String removedKey : removedKeys) {\n    changes.add(new ConfigChange(namespace,removedKey,previous.getProperty(removedKey),null,PropertyChangeType.DELETED));\n  }\n  for (  String commonKey : commonKeys) {\n    String previousValue=previous.getProperty(commonKey);\n    String currentValue=current.getProperty(commonKey);\n    if (Objects.equal(previousValue,currentValue)) {\n      continue;\n    }\n    changes.add(new ConfigChange(namespace,commonKey,previousValue,currentValue,PropertyChangeType.MODIFIED));\n  }\n  return changes;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 211,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 124,
        "startColumnNumber" : 6,
        "endLineNumber" : 124,
        "endColumnNumber" : 33
      },
      "nodeContext" : "current=new Properties();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.Properties"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 120,
    "startColumnNumber" : 17,
    "endLineNumber" : 120,
    "endColumnNumber" : 33
  }, {
    "charLength" : 16,
    "startLineNumber" : 124,
    "startColumnNumber" : 16,
    "endLineNumber" : 124,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}