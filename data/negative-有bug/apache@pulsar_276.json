{
  "id" : 276,
  "expression" : "entry.getBytes(\"UTF8\")",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/managed-ledger/src/test/java/org/apache/bookkeeper/mledger/impl/ManagedLedgerFactoryChangeLedgerPathTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "entry.getBytes(\"UTF8\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 69,
      "startColumnNumber" : 28,
      "endLineNumber" : 69,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 69,
        "startColumnNumber" : 12,
        "endLineNumber" : 69,
        "endColumnNumber" : 51
      },
      "nodeContext" : "ledger.addEntry(entry.getBytes(\"UTF8\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 69,
        "startColumnNumber" : 12,
        "endLineNumber" : 69,
        "endColumnNumber" : 52
      },
      "nodeContext" : "ledger.addEntry(entry.getBytes(\"UTF8\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 67,
        "startColumnNumber" : 37,
        "endLineNumber" : 70,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String entry=\"entry\" + i;\n  ledger.addEntry(entry.getBytes(\"UTF8\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 10; i++) {\n  String entry=\"entry\" + i;\n  ledger.addEntry(entry.getBytes(\"UTF8\"));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 28,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1366,
        "startLineNumber" : 47,
        "startColumnNumber" : 52,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ClientConfiguration configuration=new ClientConfiguration();\n  String zkConnectString=zkUtil.getZooKeeperConnectString() + \"/test\";\n  configuration.setMetadataServiceUri(\"zk://\" + zkConnectString + \"/ledgers\");\n  configuration.setUseV2WireProtocol(true);\n  configuration.setEnableDigestTypeAutodetection(true);\n  configuration.setAllocatorPoolingPolicy(PoolingPolicy.UnpooledHeap);\n  @Cleanup(\"shutdown\") ManagedLedgerFactory factory=new ManagedLedgerFactoryImpl(metadataStore,configuration);\n  ManagedLedgerConfig config=new ManagedLedgerConfig();\n  config.setEnsembleSize(1).setWriteQuorumSize(1).setAckQuorumSize(1).setMetadataAckQuorumSize(1).setMetadataAckQuorumSize(1);\n  ManagedLedger ledger=factory.open(\"test-ledger\",config);\n  ManagedCursor cursor=ledger.openCursor(\"test-c1\");\n  for (int i=0; i < 10; i++) {\n    String entry=\"entry\" + i;\n    ledger.addEntry(entry.getBytes(\"UTF8\"));\n  }\n  List<Entry> entryList=cursor.readEntries(10);\n  Assert.assertEquals(10,entryList.size());\n  for (int i=0; i < 10; i++) {\n    Entry entry=entryList.get(i);\n    Assert.assertEquals((\"entry\" + i).getBytes(\"UTF8\"),entry.getData());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 184,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1426,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 79,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test() public void testChangeZKPath() throws Exception {\n  ClientConfiguration configuration=new ClientConfiguration();\n  String zkConnectString=zkUtil.getZooKeeperConnectString() + \"/test\";\n  configuration.setMetadataServiceUri(\"zk://\" + zkConnectString + \"/ledgers\");\n  configuration.setUseV2WireProtocol(true);\n  configuration.setEnableDigestTypeAutodetection(true);\n  configuration.setAllocatorPoolingPolicy(PoolingPolicy.UnpooledHeap);\n  @Cleanup(\"shutdown\") ManagedLedgerFactory factory=new ManagedLedgerFactoryImpl(metadataStore,configuration);\n  ManagedLedgerConfig config=new ManagedLedgerConfig();\n  config.setEnsembleSize(1).setWriteQuorumSize(1).setAckQuorumSize(1).setMetadataAckQuorumSize(1).setMetadataAckQuorumSize(1);\n  ManagedLedger ledger=factory.open(\"test-ledger\",config);\n  ManagedCursor cursor=ledger.openCursor(\"test-c1\");\n  for (int i=0; i < 10; i++) {\n    String entry=\"entry\" + i;\n    ledger.addEntry(entry.getBytes(\"UTF8\"));\n  }\n  List<Entry> entryList=cursor.readEntries(10);\n  Assert.assertEquals(10,entryList.size());\n  for (int i=0; i < 10; i++) {\n    Entry entry=entryList.get(i);\n    Assert.assertEquals((\"entry\" + i).getBytes(\"UTF8\"),entry.getData());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 192,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 69,
        "startColumnNumber" : 12,
        "endLineNumber" : 69,
        "endColumnNumber" : 52
      },
      "nodeContext" : "ledger.addEntry(entry.getBytes(\"UTF8\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "byte[]"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 69,
    "startColumnNumber" : 28,
    "endLineNumber" : 69,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ ]
}