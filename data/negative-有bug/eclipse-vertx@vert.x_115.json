{
  "id" : 115,
  "expression" : "new VertxException(\"Thread blocked\")",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/main/java/io/vertx/core/impl/BlockedThreadChecker.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new VertxException(\"Thread blocked\")",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 55,
      "startColumnNumber" : 44,
      "endLineNumber" : 55,
      "endColumnNumber" : 80
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 55,
        "startColumnNumber" : 31,
        "endLineNumber" : 55,
        "endColumnNumber" : 80
      },
      "nodeContext" : "stackTrace=new VertxException(\"Thread blocked\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 55,
        "startColumnNumber" : 16,
        "endLineNumber" : 55,
        "endColumnNumber" : 81
      },
      "nodeContext" : "VertxException stackTrace=new VertxException(\"Thread blocked\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 212,
        "startLineNumber" : 54,
        "startColumnNumber" : 21,
        "endLineNumber" : 58,
        "endColumnNumber" : 15
      },
      "nodeContext" : "{\n  VertxException stackTrace=new VertxException(\"Thread blocked\");\n  stackTrace.setStackTrace(thread.getStackTrace());\n  log.warn(message,stackTrace);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 303,
        "startLineNumber" : 52,
        "startColumnNumber" : 14,
        "endLineNumber" : 58,
        "endColumnNumber" : 15
      },
      "nodeContext" : "if (dur <= warningExceptionTime) {\n  log.warn(message);\n}\n else {\n  VertxException stackTrace=new VertxException(\"Thread blocked\");\n  stackTrace.setStackTrace(thread.getStackTrace());\n  log.warn(message,stackTrace);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 483,
        "startLineNumber" : 50,
        "startColumnNumber" : 51,
        "endLineNumber" : 59,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  final String message=\"Thread \" + thread + \" has been blocked for \"+ (dur / 1000000)+ \" ms, time limit is \"+ (timeLimit / 1000000);\n  if (dur <= warningExceptionTime) {\n    log.warn(message);\n  }\n else {\n    VertxException stackTrace=new VertxException(\"Thread blocked\");\n    stackTrace.setStackTrace(thread.getStackTrace());\n    log.warn(message,stackTrace);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 522,
        "startLineNumber" : 50,
        "startColumnNumber" : 12,
        "endLineNumber" : 59,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (execStart != 0 && dur > timeLimit) {\n  final String message=\"Thread \" + thread + \" has been blocked for \"+ (dur / 1000000)+ \" ms, time limit is \"+ (timeLimit / 1000000);\n  if (dur <= warningExceptionTime) {\n    log.warn(message);\n  }\n else {\n    VertxException stackTrace=new VertxException(\"Thread blocked\");\n    stackTrace.setStackTrace(thread.getStackTrace());\n    log.warn(message,stackTrace);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 61,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 734,
        "startLineNumber" : 46,
        "startColumnNumber" : 54,
        "endLineNumber" : 60,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  long execStart=thread.startTime();\n  long dur=now - execStart;\n  final long timeLimit=thread.isWorker() ? maxWorkerExecTime : maxEventLoopExecTime;\n  if (execStart != 0 && dur > timeLimit) {\n    final String message=\"Thread \" + thread + \" has been blocked for \"+ (dur / 1000000)+ \" ms, time limit is \"+ (timeLimit / 1000000);\n    if (dur <= warningExceptionTime) {\n      log.warn(message);\n    }\n else {\n      VertxException stackTrace=new VertxException(\"Thread blocked\");\n      stackTrace.setStackTrace(thread.getStackTrace());\n      log.warn(message,stackTrace);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 778,
        "startLineNumber" : 46,
        "startColumnNumber" : 10,
        "endLineNumber" : 60,
        "endColumnNumber" : 11
      },
      "nodeContext" : "for (VertxThread thread : threads.keySet()) {\n  long execStart=thread.startTime();\n  long dur=now - execStart;\n  final long timeLimit=thread.isWorker() ? maxWorkerExecTime : maxEventLoopExecTime;\n  if (execStart != 0 && dur > timeLimit) {\n    final String message=\"Thread \" + thread + \" has been blocked for \"+ (dur / 1000000)+ \" ms, time limit is \"+ (timeLimit / 1000000);\n    if (dur <= warningExceptionTime) {\n      log.warn(message);\n    }\n else {\n      VertxException stackTrace=new VertxException(\"Thread blocked\");\n      stackTrace.setStackTrace(thread.getStackTrace());\n      log.warn(message,stackTrace);\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 95,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SynchronizedStatement,body]",
      "nodePosition" : {
        "charLength" : 840,
        "startLineNumber" : 44,
        "startColumnNumber" : 49,
        "endLineNumber" : 61,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  long now=System.nanoTime();\n  for (  VertxThread thread : threads.keySet()) {\n    long execStart=thread.startTime();\n    long dur=now - execStart;\n    final long timeLimit=thread.isWorker() ? maxWorkerExecTime : maxEventLoopExecTime;\n    if (execStart != 0 && dur > timeLimit) {\n      final String message=\"Thread \" + thread + \" has been blocked for \"+ (dur / 1000000)+ \" ms, time limit is \"+ (timeLimit / 1000000);\n      if (dur <= warningExceptionTime) {\n        log.warn(message);\n      }\n else {\n        VertxException stackTrace=new VertxException(\"Thread blocked\");\n        stackTrace.setStackTrace(thread.getStackTrace());\n        log.warn(message,stackTrace);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 881,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 9
      },
      "nodeContext" : "synchronized (BlockedThreadChecker.this) {\n  long now=System.nanoTime();\n  for (  VertxThread thread : threads.keySet()) {\n    long execStart=thread.startTime();\n    long dur=now - execStart;\n    final long timeLimit=thread.isWorker() ? maxWorkerExecTime : maxEventLoopExecTime;\n    if (execStart != 0 && dur > timeLimit) {\n      final String message=\"Thread \" + thread + \" has been blocked for \"+ (dur / 1000000)+ \" ms, time limit is \"+ (timeLimit / 1000000);\n      if (dur <= warningExceptionTime) {\n        log.warn(message);\n      }\n else {\n        VertxException stackTrace=new VertxException(\"Thread blocked\");\n        stackTrace.setStackTrace(thread.getStackTrace());\n        log.warn(message,stackTrace);\n      }\n    }\n  }\n}\n",
      "nodeType" : "SynchronizedStatement",
      "astNodeNumber" : 106,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 899,
        "startLineNumber" : 43,
        "startColumnNumber" : 24,
        "endLineNumber" : 62,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\nsynchronized (BlockedThreadChecker.this) {\n    long now=System.nanoTime();\n    for (    VertxThread thread : threads.keySet()) {\n      long execStart=thread.startTime();\n      long dur=now - execStart;\n      final long timeLimit=thread.isWorker() ? maxWorkerExecTime : maxEventLoopExecTime;\n      if (execStart != 0 && dur > timeLimit) {\n        final String message=\"Thread \" + thread + \" has been blocked for \"+ (dur / 1000000)+ \" ms, time limit is \"+ (timeLimit / 1000000);\n        if (dur <= warningExceptionTime) {\n          log.warn(message);\n        }\n else {\n          VertxException stackTrace=new VertxException(\"Thread blocked\");\n          stackTrace.setStackTrace(thread.getStackTrace());\n          log.warn(message,stackTrace);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 933,
        "startLineNumber" : 42,
        "startColumnNumber" : 6,
        "endLineNumber" : 62,
        "endColumnNumber" : 7
      },
      "nodeContext" : "@Override public void run(){\nsynchronized (BlockedThreadChecker.this) {\n    long now=System.nanoTime();\n    for (    VertxThread thread : threads.keySet()) {\n      long execStart=thread.startTime();\n      long dur=now - execStart;\n      final long timeLimit=thread.isWorker() ? maxWorkerExecTime : maxEventLoopExecTime;\n      if (execStart != 0 && dur > timeLimit) {\n        final String message=\"Thread \" + thread + \" has been blocked for \"+ (dur / 1000000)+ \" ms, time limit is \"+ (timeLimit / 1000000);\n        if (dur <= warningExceptionTime) {\n          log.warn(message);\n        }\n else {\n          VertxException stackTrace=new VertxException(\"Thread blocked\");\n          stackTrace.setStackTrace(thread.getStackTrace());\n          log.warn(message,stackTrace);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 113,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 55,
        "startColumnNumber" : 16,
        "endLineNumber" : 55,
        "endColumnNumber" : 81
      },
      "nodeContext" : "VertxException stackTrace=new VertxException(\"Thread blocked\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "io.vertx.core.VertxException"
  } ],
  "positionList" : [ {
    "charLength" : 36,
    "startLineNumber" : 55,
    "startColumnNumber" : 44,
    "endLineNumber" : 55,
    "endColumnNumber" : 80
  } ],
  "layoutRelationDataList" : [ ]
}