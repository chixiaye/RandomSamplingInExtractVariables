{
  "id" : 82,
  "expression" : "new HttpRequest(POST,String.format(\"/session/%s/url\",UUID.randomUUID()))",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/server/test/org/openqa/selenium/grid/node/NodeTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new HttpRequest(POST,String.format(\"/session/%s/url\",UUID.randomUUID()))",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 74,
      "startLineNumber" : 290,
      "startColumnNumber" : 10,
      "endLineNumber" : 290,
      "endColumnNumber" : 84
    },
    "astNodeNumber" : 11,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 290,
        "startColumnNumber" : 4,
        "endLineNumber" : 290,
        "endColumnNumber" : 84
      },
      "nodeContext" : "req=new HttpRequest(POST,String.format(\"/session/%s/url\",UUID.randomUUID()))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 290,
        "startColumnNumber" : 4,
        "endLineNumber" : 290,
        "endColumnNumber" : 85
      },
      "nodeContext" : "req=new HttpRequest(POST,String.format(\"/session/%s/url\",UUID.randomUUID()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 556,
        "startLineNumber" : 281,
        "startColumnNumber" : 75,
        "endLineNumber" : 293,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Session session=node.newSession(createSessionRequest(caps)).map(CreateSessionResponse::getSession).orElseThrow(() -> new RuntimeException(\"Session not created\"));\n  HttpRequest req=new HttpRequest(POST,String.format(\"/session/%s/url\",session.getId()));\n  assertThat(local.matches(req)).isTrue();\n  assertThat(node.matches(req)).isTrue();\n  req=new HttpRequest(POST,String.format(\"/session/%s/url\",UUID.randomUUID()));\n  assertThat(local.matches(req)).isFalse();\n  assertThat(node.matches(req)).isFalse();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 637,
        "startLineNumber" : 280,
        "startColumnNumber" : 2,
        "endLineNumber" : 293,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void shouldOnlyRespondToWebDriverCommandsForSessionsTheNodeOwns(){\n  Session session=node.newSession(createSessionRequest(caps)).map(CreateSessionResponse::getSession).orElseThrow(() -> new RuntimeException(\"Session not created\"));\n  HttpRequest req=new HttpRequest(POST,String.format(\"/session/%s/url\",session.getId()));\n  assertThat(local.matches(req)).isTrue();\n  assertThat(node.matches(req)).isTrue();\n  req=new HttpRequest(POST,String.format(\"/session/%s/url\",UUID.randomUUID()));\n  assertThat(local.matches(req)).isFalse();\n  assertThat(node.matches(req)).isFalse();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 96,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 290,
        "startColumnNumber" : 4,
        "endLineNumber" : 290,
        "endColumnNumber" : 85
      },
      "nodeContext" : "req=new HttpRequest(POST,String.format(\"/session/%s/url\",UUID.randomUUID()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 7,
    "type" : "org.openqa.selenium.remote.http.HttpRequest"
  } ],
  "positionList" : [ {
    "charLength" : 74,
    "startLineNumber" : 290,
    "startColumnNumber" : 10,
    "endLineNumber" : 290,
    "endColumnNumber" : 84
  } ],
  "layoutRelationDataList" : [ ]
}