{
  "id" : 152,
  "expression" : "servers",
  "projectName" : "alibaba@spring-cloud-alibaba",
  "commitID" : "89ad537f66927a647f6233cfc79d58b18f2f6928",
  "filePath" : "/spring-cloud-alicloud-ans/src/test/java/com/alibaba/alicloud/ans/ribbon/AnsServerListTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "servers",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 63,
      "startColumnNumber" : 24,
      "endLineNumber" : 63,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 63,
        "startColumnNumber" : 2,
        "endLineNumber" : 63,
        "endColumnNumber" : 32
      },
      "nodeContext" : "Assertions.assertThat(servers)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 63,
        "startColumnNumber" : 2,
        "endLineNumber" : 63,
        "endColumnNumber" : 42
      },
      "nodeContext" : "Assertions.assertThat(servers).isEmpty()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 63,
        "startColumnNumber" : 2,
        "endLineNumber" : 63,
        "endColumnNumber" : 43
      },
      "nodeContext" : "Assertions.assertThat(servers).isEmpty();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 478,
        "startLineNumber" : 53,
        "startColumnNumber" : 67,
        "endLineNumber" : 64,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  PowerMockito.mockStatic(NamingService.class);\n  when(NamingService.getHosts(anyString())).thenReturn(Collections.EMPTY_LIST);\n  IClientConfig clientConfig=mock(IClientConfig.class);\n  when(clientConfig.getClientName()).thenReturn(\"test-service\");\n  AnsServerList serverList=new AnsServerList(\"test-service\");\n  serverList.initWithNiwsConfig(clientConfig);\n  List<AnsServer> servers=serverList.getInitialListOfServers();\n  Assertions.assertThat(servers).isEmpty();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 583,
        "startLineNumber" : 51,
        "startColumnNumber" : 1,
        "endLineNumber" : 64,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test @SuppressWarnings(\"unchecked\") public void testEmptyInstancesReturnsEmptyList() throws Exception {\n  PowerMockito.mockStatic(NamingService.class);\n  when(NamingService.getHosts(anyString())).thenReturn(Collections.EMPTY_LIST);\n  IClientConfig clientConfig=mock(IClientConfig.class);\n  when(clientConfig.getClientName()).thenReturn(\"test-service\");\n  AnsServerList serverList=new AnsServerList(\"test-service\");\n  serverList.initWithNiwsConfig(clientConfig);\n  List<AnsServer> servers=serverList.getInitialListOfServers();\n  Assertions.assertThat(servers).isEmpty();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 83,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 63,
        "startColumnNumber" : 2,
        "endLineNumber" : 63,
        "endColumnNumber" : 43
      },
      "nodeContext" : "Assertions.assertThat(servers).isEmpty();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.List<com.alibaba.alicloud.ans.ribbon.AnsServer>"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 63,
    "startColumnNumber" : 24,
    "endLineNumber" : 63,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ ]
}