{
  "id" : 144,
  "expression" : "cache1.get(\"valueB\").toObservable()",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-core/src/test/java/com/netflix/hystrix/HystrixRequestCacheTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "cache1.get(\"valueB\").toObservable()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 35,
      "startLineNumber" : 49,
      "startColumnNumber" : 31,
      "endLineNumber" : 49,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 49,
        "startColumnNumber" : 31,
        "endLineNumber" : 49,
        "endColumnNumber" : 79
      },
      "nodeContext" : "cache1.get(\"valueB\").toObservable().toBlocking()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 49,
        "startColumnNumber" : 31,
        "endLineNumber" : 49,
        "endColumnNumber" : 86
      },
      "nodeContext" : "cache1.get(\"valueB\").toObservable().toBlocking().last()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 49,
        "endColumnNumber" : 87
      },
      "nodeContext" : "assertEquals(\"b1\",cache1.get(\"valueB\").toObservable().toBlocking().last())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 49,
        "endColumnNumber" : 88
      },
      "nodeContext" : "assertEquals(\"b1\",cache1.get(\"valueB\").toObservable().toBlocking().last());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 857,
        "startLineNumber" : 39,
        "startColumnNumber" : 12,
        "endLineNumber" : 53,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HystrixRequestCache cache1=HystrixRequestCache.getInstance(HystrixCommandKey.Factory.asKey(\"command1\"),strategy);\n  cache1.putIfAbsent(\"valueA\",new TestObservable(\"a1\"));\n  cache1.putIfAbsent(\"valueA\",new TestObservable(\"a2\"));\n  cache1.putIfAbsent(\"valueB\",new TestObservable(\"b1\"));\n  HystrixRequestCache cache2=HystrixRequestCache.getInstance(HystrixCommandKey.Factory.asKey(\"command2\"),strategy);\n  cache2.putIfAbsent(\"valueA\",new TestObservable(\"a3\"));\n  assertEquals(\"a1\",cache1.get(\"valueA\").toObservable().toBlocking().last());\n  assertEquals(\"b1\",cache1.get(\"valueB\").toObservable().toBlocking().last());\n  assertEquals(\"a3\",cache2.get(\"valueA\").toObservable().toBlocking().last());\n  assertNull(cache2.get(\"valueB\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 116,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1028,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  HystrixRequestCache cache1=HystrixRequestCache.getInstance(HystrixCommandKey.Factory.asKey(\"command1\"),strategy);\n  cache1.putIfAbsent(\"valueA\",new TestObservable(\"a1\"));\n  cache1.putIfAbsent(\"valueA\",new TestObservable(\"a2\"));\n  cache1.putIfAbsent(\"valueB\",new TestObservable(\"b1\"));\n  HystrixRequestCache cache2=HystrixRequestCache.getInstance(HystrixCommandKey.Factory.asKey(\"command2\"),strategy);\n  cache2.putIfAbsent(\"valueA\",new TestObservable(\"a3\"));\n  assertEquals(\"a1\",cache1.get(\"valueA\").toObservable().toBlocking().last());\n  assertEquals(\"b1\",cache1.get(\"valueB\").toObservable().toBlocking().last());\n  assertEquals(\"a3\",cache2.get(\"valueA\").toObservable().toBlocking().last());\n  assertNull(cache2.get(\"valueB\"));\n}\n catch (Exception e) {\n  fail(\"Exception: \" + e.getMessage());\n  e.printStackTrace();\n}\n finally {\n  context.shutdown();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 140,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1652,
        "startLineNumber" : 36,
        "startColumnNumber" : 28,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HystrixConcurrencyStrategy strategy=HystrixConcurrencyStrategyDefault.getInstance();\n  HystrixRequestContext context=HystrixRequestContext.initializeContext();\n  try {\n    HystrixRequestCache cache1=HystrixRequestCache.getInstance(HystrixCommandKey.Factory.asKey(\"command1\"),strategy);\n    cache1.putIfAbsent(\"valueA\",new TestObservable(\"a1\"));\n    cache1.putIfAbsent(\"valueA\",new TestObservable(\"a2\"));\n    cache1.putIfAbsent(\"valueB\",new TestObservable(\"b1\"));\n    HystrixRequestCache cache2=HystrixRequestCache.getInstance(HystrixCommandKey.Factory.asKey(\"command2\"),strategy);\n    cache2.putIfAbsent(\"valueA\",new TestObservable(\"a3\"));\n    assertEquals(\"a1\",cache1.get(\"valueA\").toObservable().toBlocking().last());\n    assertEquals(\"b1\",cache1.get(\"valueB\").toObservable().toBlocking().last());\n    assertEquals(\"a3\",cache2.get(\"valueA\").toObservable().toBlocking().last());\n    assertNull(cache2.get(\"valueB\"));\n  }\n catch (  Exception e) {\n    fail(\"Exception: \" + e.getMessage());\n    e.printStackTrace();\n  }\n finally {\n    context.shutdown();\n  }\n  context=HystrixRequestContext.initializeContext();\n  try {\n    HystrixRequestCache cache=HystrixRequestCache.getInstance(HystrixCommandKey.Factory.asKey(\"command1\"),strategy);\n    assertNull(cache.get(\"valueA\"));\n    assertNull(cache.get(\"valueB\"));\n  }\n  finally {\n    context.shutdown();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 199,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1686,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCache(){\n  HystrixConcurrencyStrategy strategy=HystrixConcurrencyStrategyDefault.getInstance();\n  HystrixRequestContext context=HystrixRequestContext.initializeContext();\n  try {\n    HystrixRequestCache cache1=HystrixRequestCache.getInstance(HystrixCommandKey.Factory.asKey(\"command1\"),strategy);\n    cache1.putIfAbsent(\"valueA\",new TestObservable(\"a1\"));\n    cache1.putIfAbsent(\"valueA\",new TestObservable(\"a2\"));\n    cache1.putIfAbsent(\"valueB\",new TestObservable(\"b1\"));\n    HystrixRequestCache cache2=HystrixRequestCache.getInstance(HystrixCommandKey.Factory.asKey(\"command2\"),strategy);\n    cache2.putIfAbsent(\"valueA\",new TestObservable(\"a3\"));\n    assertEquals(\"a1\",cache1.get(\"valueA\").toObservable().toBlocking().last());\n    assertEquals(\"b1\",cache1.get(\"valueB\").toObservable().toBlocking().last());\n    assertEquals(\"a3\",cache2.get(\"valueA\").toObservable().toBlocking().last());\n    assertNull(cache2.get(\"valueB\"));\n  }\n catch (  Exception e) {\n    fail(\"Exception: \" + e.getMessage());\n    e.printStackTrace();\n  }\n finally {\n    context.shutdown();\n  }\n  context=HystrixRequestContext.initializeContext();\n  try {\n    HystrixRequestCache cache=HystrixRequestCache.getInstance(HystrixCommandKey.Factory.asKey(\"command1\"),strategy);\n    assertNull(cache.get(\"valueA\"));\n    assertNull(cache.get(\"valueB\"));\n  }\n  finally {\n    context.shutdown();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 205,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 49,
        "endColumnNumber" : 88
      },
      "nodeContext" : "assertEquals(\"b1\",cache1.get(\"valueB\").toObservable().toBlocking().last());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    },
    "tokenLength" : 4,
    "type" : "com.netflix.hystrix.Observable<java.lang.Object>"
  } ],
  "positionList" : [ {
    "charLength" : 35,
    "startLineNumber" : 49,
    "startColumnNumber" : 31,
    "endLineNumber" : 49,
    "endColumnNumber" : 66
  } ],
  "layoutRelationDataList" : [ ]
}