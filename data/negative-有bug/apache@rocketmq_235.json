{
  "id" : 235,
  "expression" : "true",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/test/src/test/java/org/apache/rocketmq/test/client/consumer/cluster/DynamicAddAndCrashIT.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "true",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 73,
      "startColumnNumber" : 38,
      "endLineNumber" : 73,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 43
      },
      "nodeContext" : "assertThat(recvAll).isEqualTo(true)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 44
      },
      "nodeContext" : "assertThat(recvAll).isEqualTo(true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 910,
        "startLineNumber" : 53,
        "startColumnNumber" : 55,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int msgSize=150;\n  RMQNormalConsumer consumer1=getConsumer(nsAddr,topic,\"*\",new RMQNormalListener());\n  MQAsyncProducer asyncDefaultMQProducer=new MQAsyncProducer(producer,msgSize,100);\n  asyncDefaultMQProducer.start();\n  TestUtils.waitForSeconds(waitTime);\n  RMQNormalConsumer consumer2=getConsumer(nsAddr,consumer1.getConsumerGroup(),topic,\"*\",new RMQNormalListener());\n  TestUtils.waitForSeconds(waitTime);\n  consumer2.shutdown();\n  asyncDefaultMQProducer.waitSendAll(waitTime * 6);\n  MQWait.waitConsumeAll(consumeTime,producer.getAllMsgBody(),consumer1.getListener(),consumer2.getListener());\n  boolean recvAll=MQWait.waitConsumeAll(consumeTime,producer.getAllMsgBody(),consumer1.getListener(),consumer2.getListener());\n  assertThat(recvAll).isEqualTo(true);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 971,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testAddOneConsumerAndCrashAfterWhile(){\n  int msgSize=150;\n  RMQNormalConsumer consumer1=getConsumer(nsAddr,topic,\"*\",new RMQNormalListener());\n  MQAsyncProducer asyncDefaultMQProducer=new MQAsyncProducer(producer,msgSize,100);\n  asyncDefaultMQProducer.start();\n  TestUtils.waitForSeconds(waitTime);\n  RMQNormalConsumer consumer2=getConsumer(nsAddr,consumer1.getConsumerGroup(),topic,\"*\",new RMQNormalListener());\n  TestUtils.waitForSeconds(waitTime);\n  consumer2.shutdown();\n  asyncDefaultMQProducer.waitSendAll(waitTime * 6);\n  MQWait.waitConsumeAll(consumeTime,producer.getAllMsgBody(),consumer1.getListener(),consumer2.getListener());\n  boolean recvAll=MQWait.waitConsumeAll(consumeTime,producer.getAllMsgBody(),consumer1.getListener(),consumer2.getListener());\n  assertThat(recvAll).isEqualTo(true);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 115,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 44
      },
      "nodeContext" : "assertThat(recvAll).isEqualTo(true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 73,
    "startColumnNumber" : 38,
    "endLineNumber" : 73,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ ]
}