{
  "id" : 238,
  "expression" : "side",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/org/telegram/ui/Components/CheckBoxBase.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "side",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 422,
      "startColumnNumber" : 36,
      "endLineNumber" : 422,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 422,
        "startColumnNumber" : 32,
        "endLineNumber" : 422,
        "endColumnNumber" : 40
      },
      "nodeContext" : "x - side",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 422,
        "startColumnNumber" : 20,
        "endLineNumber" : 422,
        "endColumnNumber" : 51
      },
      "nodeContext" : "path.moveTo(x - side,y - side)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 422,
        "startColumnNumber" : 20,
        "endLineNumber" : 422,
        "endColumnNumber" : 52
      },
      "nodeContext" : "path.moveTo(x - side,y - side);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 785,
        "startLineNumber" : 413,
        "startColumnNumber" : 23,
        "endLineNumber" : 427,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  path.reset();\n  float scale=backgroundType == 5 ? 0.8f : 1.0f;\n  float checkSide=AndroidUtilities.dp(9 * scale) * checkProgress;\n  float smallCheckSide=AndroidUtilities.dp(4 * scale) * checkProgress;\n  int x=cx - AndroidUtilities.dp(1.5f);\n  int y=cy + AndroidUtilities.dp(4);\n  float side=(float)Math.sqrt(smallCheckSide * smallCheckSide / 2.0f);\n  path.moveTo(x - side,y - side);\n  path.lineTo(x,y);\n  side=(float)Math.sqrt(checkSide * checkSide / 2.0f);\n  path.lineTo(x + side,y - side);\n  canvas.drawPath(path,checkPaint);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2083,
        "startLineNumber" : 386,
        "startColumnNumber" : 16,
        "endLineNumber" : 427,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (checkedText != null) {\n  if (textPaint == null) {\n    textPaint=new TextPaint(Paint.ANTI_ALIAS_FLAG);\n    textPaint.setTypeface(AndroidUtilities.getTypeface(\"fonts/rmedium.ttf\"));\n  }\n  final float textSize, y;\nswitch (checkedText.length()) {\ncase 0:case 1:case 2:    textSize=14f;\n  y=18f;\nbreak;\ncase 3:textSize=10f;\ny=16.5f;\nbreak;\ndefault:textSize=8f;\ny=15.75f;\n}\ntextPaint.setTextSize(AndroidUtilities.dp(textSize));\ntextPaint.setColor(Theme.getColor(checkColorKey));\ncanvas.save();\ncanvas.scale(checkProgress,1.0f,cx,cy);\ncanvas.drawText(checkedText,cx - textPaint.measureText(checkedText) / 2f,AndroidUtilities.dp(y),textPaint);\ncanvas.restore();\n}\n else {\npath.reset();\nfloat scale=backgroundType == 5 ? 0.8f : 1.0f;\nfloat checkSide=AndroidUtilities.dp(9 * scale) * checkProgress;\nfloat smallCheckSide=AndroidUtilities.dp(4 * scale) * checkProgress;\nint x=cx - AndroidUtilities.dp(1.5f);\nint y=cy + AndroidUtilities.dp(4);\nfloat side=(float)Math.sqrt(smallCheckSide * smallCheckSide / 2.0f);\npath.moveTo(x - side,y - side);\npath.lineTo(x,y);\nside=(float)Math.sqrt(checkSide * checkSide / 2.0f);\npath.lineTo(x + side,y - side);\ncanvas.drawPath(path,checkPaint);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 241,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2115,
        "startLineNumber" : 385,
        "startColumnNumber" : 36,
        "endLineNumber" : 428,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (checkedText != null) {\n    if (textPaint == null) {\n      textPaint=new TextPaint(Paint.ANTI_ALIAS_FLAG);\n      textPaint.setTypeface(AndroidUtilities.getTypeface(\"fonts/rmedium.ttf\"));\n    }\n    final float textSize, y;\nswitch (checkedText.length()) {\ncase 0:case 1:case 2:      textSize=14f;\n    y=18f;\n  break;\ncase 3:textSize=10f;\ny=16.5f;\nbreak;\ndefault:textSize=8f;\ny=15.75f;\n}\ntextPaint.setTextSize(AndroidUtilities.dp(textSize));\ntextPaint.setColor(Theme.getColor(checkColorKey));\ncanvas.save();\ncanvas.scale(checkProgress,1.0f,cx,cy);\ncanvas.drawText(checkedText,cx - textPaint.measureText(checkedText) / 2f,AndroidUtilities.dp(y),textPaint);\ncanvas.restore();\n}\n else {\npath.reset();\nfloat scale=backgroundType == 5 ? 0.8f : 1.0f;\nfloat checkSide=AndroidUtilities.dp(9 * scale) * checkProgress;\nfloat smallCheckSide=AndroidUtilities.dp(4 * scale) * checkProgress;\nint x=cx - AndroidUtilities.dp(1.5f);\nint y=cy + AndroidUtilities.dp(4);\nfloat side=(float)Math.sqrt(smallCheckSide * smallCheckSide / 2.0f);\npath.moveTo(x - side,y - side);\npath.lineTo(x,y);\nside=(float)Math.sqrt(checkSide * checkSide / 2.0f);\npath.lineTo(x + side,y - side);\ncanvas.drawPath(path,checkPaint);\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 242,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2139,
        "startLineNumber" : 385,
        "startColumnNumber" : 12,
        "endLineNumber" : 428,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (checkProgress != 0) {\n  if (checkedText != null) {\n    if (textPaint == null) {\n      textPaint=new TextPaint(Paint.ANTI_ALIAS_FLAG);\n      textPaint.setTypeface(AndroidUtilities.getTypeface(\"fonts/rmedium.ttf\"));\n    }\n    final float textSize, y;\nswitch (checkedText.length()) {\ncase 0:case 1:case 2:      textSize=14f;\n    y=18f;\n  break;\ncase 3:textSize=10f;\ny=16.5f;\nbreak;\ndefault:textSize=8f;\ny=15.75f;\n}\ntextPaint.setTextSize(AndroidUtilities.dp(textSize));\ntextPaint.setColor(Theme.getColor(checkColorKey));\ncanvas.save();\ncanvas.scale(checkProgress,1.0f,cx,cy);\ncanvas.drawText(checkedText,cx - textPaint.measureText(checkedText) / 2f,AndroidUtilities.dp(y),textPaint);\ncanvas.restore();\n}\n else {\npath.reset();\nfloat scale=backgroundType == 5 ? 0.8f : 1.0f;\nfloat checkSide=AndroidUtilities.dp(9 * scale) * checkProgress;\nfloat smallCheckSide=AndroidUtilities.dp(4 * scale) * checkProgress;\nint x=cx - AndroidUtilities.dp(1.5f);\nint y=cy + AndroidUtilities.dp(4);\nfloat side=(float)Math.sqrt(smallCheckSide * smallCheckSide / 2.0f);\npath.moveTo(x - side,y - side);\npath.lineTo(x,y);\nside=(float)Math.sqrt(checkSide * checkSide / 2.0f);\npath.lineTo(x + side,y - side);\ncanvas.drawPath(path,checkPaint);\n}\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 246,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3666,
        "startLineNumber" : 359,
        "startColumnNumber" : 31,
        "endLineNumber" : 429,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  float checkProgress=progress < 0.5f ? 0.0f : (progress - 0.5f) / 0.5f;\n  if (backgroundType == 9) {\n    paint.setColor(Theme.getColor(background2ColorKey));\n  }\n else   if (backgroundType == 11 || backgroundType == 6 || backgroundType == 7 || backgroundType == 10 || !drawUnchecked && backgroundColorKey != null) {\n    paint.setColor(Theme.getColor(backgroundColorKey));\n  }\n else {\n    paint.setColor(Theme.getColor(enabled ? Theme.key_checkbox : Theme.key_checkboxDisabled));\n  }\n  if (!useDefaultCheck && checkColorKey != null) {\n    checkPaint.setColor(Theme.getColor(checkColorKey));\n  }\n else {\n    checkPaint.setColor(Theme.getColor(Theme.key_checkboxCheck));\n  }\n  if (backgroundType == 12 || backgroundType == 13) {\n    paint.setAlpha((int)(255 * roundProgress));\n    bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad * roundProgress,paint);\n  }\n else {\n    rad-=AndroidUtilities.dp(0.5f);\n    bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad,paint);\n    bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad * (1.0f - roundProgress),eraser);\n  }\n  canvas.drawBitmap(drawBitmap,cx - drawBitmap.getWidth() / 2,cy - drawBitmap.getHeight() / 2,null);\n  if (checkProgress != 0) {\n    if (checkedText != null) {\n      if (textPaint == null) {\n        textPaint=new TextPaint(Paint.ANTI_ALIAS_FLAG);\n        textPaint.setTypeface(AndroidUtilities.getTypeface(\"fonts/rmedium.ttf\"));\n      }\n      final float textSize, y;\nswitch (checkedText.length()) {\ncase 0:case 1:case 2:        textSize=14f;\n      y=18f;\n    break;\ncase 3:  textSize=10f;\ny=16.5f;\nbreak;\ndefault:textSize=8f;\ny=15.75f;\n}\ntextPaint.setTextSize(AndroidUtilities.dp(textSize));\ntextPaint.setColor(Theme.getColor(checkColorKey));\ncanvas.save();\ncanvas.scale(checkProgress,1.0f,cx,cy);\ncanvas.drawText(checkedText,cx - textPaint.measureText(checkedText) / 2f,AndroidUtilities.dp(y),textPaint);\ncanvas.restore();\n}\n else {\npath.reset();\nfloat scale=backgroundType == 5 ? 0.8f : 1.0f;\nfloat checkSide=AndroidUtilities.dp(9 * scale) * checkProgress;\nfloat smallCheckSide=AndroidUtilities.dp(4 * scale) * checkProgress;\nint x=cx - AndroidUtilities.dp(1.5f);\nint y=cy + AndroidUtilities.dp(4);\nfloat side=(float)Math.sqrt(smallCheckSide * smallCheckSide / 2.0f);\npath.moveTo(x - side,y - side);\npath.lineTo(x,y);\nside=(float)Math.sqrt(checkSide * checkSide / 2.0f);\npath.lineTo(x + side,y - side);\ncanvas.drawPath(path,checkPaint);\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 452,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3689,
        "startLineNumber" : 359,
        "startColumnNumber" : 8,
        "endLineNumber" : 429,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (roundProgress > 0) {\n  float checkProgress=progress < 0.5f ? 0.0f : (progress - 0.5f) / 0.5f;\n  if (backgroundType == 9) {\n    paint.setColor(Theme.getColor(background2ColorKey));\n  }\n else   if (backgroundType == 11 || backgroundType == 6 || backgroundType == 7 || backgroundType == 10 || !drawUnchecked && backgroundColorKey != null) {\n    paint.setColor(Theme.getColor(backgroundColorKey));\n  }\n else {\n    paint.setColor(Theme.getColor(enabled ? Theme.key_checkbox : Theme.key_checkboxDisabled));\n  }\n  if (!useDefaultCheck && checkColorKey != null) {\n    checkPaint.setColor(Theme.getColor(checkColorKey));\n  }\n else {\n    checkPaint.setColor(Theme.getColor(Theme.key_checkboxCheck));\n  }\n  if (backgroundType == 12 || backgroundType == 13) {\n    paint.setAlpha((int)(255 * roundProgress));\n    bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad * roundProgress,paint);\n  }\n else {\n    rad-=AndroidUtilities.dp(0.5f);\n    bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad,paint);\n    bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad * (1.0f - roundProgress),eraser);\n  }\n  canvas.drawBitmap(drawBitmap,cx - drawBitmap.getWidth() / 2,cy - drawBitmap.getHeight() / 2,null);\n  if (checkProgress != 0) {\n    if (checkedText != null) {\n      if (textPaint == null) {\n        textPaint=new TextPaint(Paint.ANTI_ALIAS_FLAG);\n        textPaint.setTypeface(AndroidUtilities.getTypeface(\"fonts/rmedium.ttf\"));\n      }\n      final float textSize, y;\nswitch (checkedText.length()) {\ncase 0:case 1:case 2:        textSize=14f;\n      y=18f;\n    break;\ncase 3:  textSize=10f;\ny=16.5f;\nbreak;\ndefault:textSize=8f;\ny=15.75f;\n}\ntextPaint.setTextSize(AndroidUtilities.dp(textSize));\ntextPaint.setColor(Theme.getColor(checkColorKey));\ncanvas.save();\ncanvas.scale(checkProgress,1.0f,cx,cy);\ncanvas.drawText(checkedText,cx - textPaint.measureText(checkedText) / 2f,AndroidUtilities.dp(y),textPaint);\ncanvas.restore();\n}\n else {\npath.reset();\nfloat scale=backgroundType == 5 ? 0.8f : 1.0f;\nfloat checkSide=AndroidUtilities.dp(9 * scale) * checkProgress;\nfloat smallCheckSide=AndroidUtilities.dp(4 * scale) * checkProgress;\nint x=cx - AndroidUtilities.dp(1.5f);\nint y=cy + AndroidUtilities.dp(4);\nfloat side=(float)Math.sqrt(smallCheckSide * smallCheckSide / 2.0f);\npath.moveTo(x - side,y - side);\npath.lineTo(x,y);\nside=(float)Math.sqrt(checkSide * checkSide / 2.0f);\npath.lineTo(x + side,y - side);\ncanvas.drawPath(path,checkPaint);\n}\n}\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 456,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 9257,
        "startLineNumber" : 248,
        "startColumnNumber" : 36,
        "endLineNumber" : 430,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (drawBitmap == null) {\n    return;\n  }\n  drawBitmap.eraseColor(0);\n  float rad=AndroidUtilities.dp(size / 2);\n  float outerRad=rad;\n  if (backgroundType == 12 || backgroundType == 13) {\n    rad=outerRad=AndroidUtilities.dp(10);\n  }\n else {\n    if (backgroundType != 0 && backgroundType != 11) {\n      outerRad-=AndroidUtilities.dp(0.2f);\n    }\n  }\n  float roundProgress=progress >= 0.5f ? 1.0f : progress / 0.5f;\n  int cx=bounds.centerX();\n  int cy=bounds.centerY();\n  if (backgroundColorKey != null) {\n    if (drawUnchecked) {\n      if (backgroundType == 12 || backgroundType == 13) {\n        paint.setColor(Theme.getColor(backgroundColorKey));\n        paint.setAlpha((int)(255 * backgroundAlpha));\n        backgroundPaint.setColor(Theme.getColor(checkColorKey));\n      }\n else       if (backgroundType == 6 || backgroundType == 7) {\n        paint.setColor(Theme.getColor(background2ColorKey));\n        backgroundPaint.setColor(Theme.getColor(checkColorKey));\n      }\n else       if (backgroundType == 10) {\n        backgroundPaint.setColor(Theme.getColor(background2ColorKey));\n      }\n else {\n        paint.setColor((Theme.getServiceMessageColor() & 0x00ffffff) | 0x28000000);\n        backgroundPaint.setColor(Theme.getColor(checkColorKey));\n      }\n    }\n else {\n      backgroundPaint.setColor(AndroidUtilities.getOffsetColor(0x00ffffff,Theme.getColor(background2ColorKey != null ? background2ColorKey : checkColorKey),progress,backgroundAlpha));\n    }\n  }\n else {\n    if (drawUnchecked) {\n      paint.setColor(Color.argb((int)(25 * backgroundAlpha),0,0,0));\n      if (backgroundType == 8) {\n        backgroundPaint.setColor(Theme.getColor(background2ColorKey));\n      }\n else {\n        backgroundPaint.setColor(AndroidUtilities.getOffsetColor(0xffffffff,Theme.getColor(checkColorKey),progress,backgroundAlpha));\n      }\n    }\n else {\n      backgroundPaint.setColor(AndroidUtilities.getOffsetColor(0x00ffffff,Theme.getColor(background2ColorKey != null ? background2ColorKey : checkColorKey),progress,backgroundAlpha));\n    }\n  }\n  if (drawUnchecked) {\n    if (backgroundType == 12 || backgroundType == 13) {\n    }\n else     if (backgroundType == 8 || backgroundType == 10) {\n      canvas.drawCircle(cx,cy,rad - AndroidUtilities.dp(1.5f),backgroundPaint);\n    }\n else     if (backgroundType == 6 || backgroundType == 7) {\n      canvas.drawCircle(cx,cy,rad - AndroidUtilities.dp(1),paint);\n      canvas.drawCircle(cx,cy,rad - AndroidUtilities.dp(1.5f),backgroundPaint);\n    }\n else {\n      canvas.drawCircle(cx,cy,rad,paint);\n    }\n  }\n  paint.setColor(Theme.getColor(checkColorKey));\n  if (backgroundType != 7 && backgroundType != 8 && backgroundType != 9 && backgroundType != 10) {\n    if (backgroundType == 12 || backgroundType == 13) {\n      backgroundPaint.setStyle(Paint.Style.FILL);\n      if (messageDrawable != null && messageDrawable.hasGradient()) {\n        LinearGradient shader=messageDrawable.getGradientShader();\n        Matrix matrix=messageDrawable.getMatrix();\n        matrix.setTranslate(0,-messageDrawable.getTopY() + bounds.top);\n        shader.setLocalMatrix(matrix);\n        backgroundPaint.setShader(shader);\n      }\n else {\n        backgroundPaint.setShader(null);\n      }\n      canvas.drawCircle(cx,cy,(rad - AndroidUtilities.dp(1)) * backgroundAlpha,backgroundPaint);\n      backgroundPaint.setStyle(Paint.Style.STROKE);\n    }\n else     if (backgroundType == 0 || backgroundType == 11) {\n      canvas.drawCircle(cx,cy,rad,backgroundPaint);\n    }\n else {\n      rect.set(cx - outerRad,cy - outerRad,cx + outerRad,cy + outerRad);\n      int startAngle;\n      int sweepAngle;\n      if (backgroundType == 6) {\n        startAngle=0;\n        sweepAngle=(int)(-360 * progress);\n      }\n else       if (backgroundType == 1) {\n        startAngle=-90;\n        sweepAngle=(int)(-270 * progress);\n      }\n else {\n        startAngle=90;\n        sweepAngle=(int)(270 * progress);\n      }\n      if (backgroundType == 6) {\n        int color=Theme.getColor(Theme.key_dialogBackground);\n        int alpha=Color.alpha(color);\n        backgroundPaint.setColor(color);\n        backgroundPaint.setAlpha((int)(alpha * progress));\n        canvas.drawArc(rect,startAngle,sweepAngle,false,backgroundPaint);\n        color=Theme.getColor(Theme.key_chat_attachPhotoBackground);\n        alpha=Color.alpha(color);\n        backgroundPaint.setColor(color);\n        backgroundPaint.setAlpha((int)(alpha * progress));\n      }\n      canvas.drawArc(rect,startAngle,sweepAngle,false,backgroundPaint);\n    }\n  }\n  if (roundProgress > 0) {\n    float checkProgress=progress < 0.5f ? 0.0f : (progress - 0.5f) / 0.5f;\n    if (backgroundType == 9) {\n      paint.setColor(Theme.getColor(background2ColorKey));\n    }\n else     if (backgroundType == 11 || backgroundType == 6 || backgroundType == 7 || backgroundType == 10 || !drawUnchecked && backgroundColorKey != null) {\n      paint.setColor(Theme.getColor(backgroundColorKey));\n    }\n else {\n      paint.setColor(Theme.getColor(enabled ? Theme.key_checkbox : Theme.key_checkboxDisabled));\n    }\n    if (!useDefaultCheck && checkColorKey != null) {\n      checkPaint.setColor(Theme.getColor(checkColorKey));\n    }\n else {\n      checkPaint.setColor(Theme.getColor(Theme.key_checkboxCheck));\n    }\n    if (backgroundType == 12 || backgroundType == 13) {\n      paint.setAlpha((int)(255 * roundProgress));\n      bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad * roundProgress,paint);\n    }\n else {\n      rad-=AndroidUtilities.dp(0.5f);\n      bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad,paint);\n      bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad * (1.0f - roundProgress),eraser);\n    }\n    canvas.drawBitmap(drawBitmap,cx - drawBitmap.getWidth() / 2,cy - drawBitmap.getHeight() / 2,null);\n    if (checkProgress != 0) {\n      if (checkedText != null) {\n        if (textPaint == null) {\n          textPaint=new TextPaint(Paint.ANTI_ALIAS_FLAG);\n          textPaint.setTypeface(AndroidUtilities.getTypeface(\"fonts/rmedium.ttf\"));\n        }\n        final float textSize, y;\nswitch (checkedText.length()) {\ncase 0:case 1:case 2:          textSize=14f;\n        y=18f;\n      break;\ncase 3:    textSize=10f;\n  y=16.5f;\nbreak;\ndefault:textSize=8f;\ny=15.75f;\n}\ntextPaint.setTextSize(AndroidUtilities.dp(textSize));\ntextPaint.setColor(Theme.getColor(checkColorKey));\ncanvas.save();\ncanvas.scale(checkProgress,1.0f,cx,cy);\ncanvas.drawText(checkedText,cx - textPaint.measureText(checkedText) / 2f,AndroidUtilities.dp(y),textPaint);\ncanvas.restore();\n}\n else {\npath.reset();\nfloat scale=backgroundType == 5 ? 0.8f : 1.0f;\nfloat checkSide=AndroidUtilities.dp(9 * scale) * checkProgress;\nfloat smallCheckSide=AndroidUtilities.dp(4 * scale) * checkProgress;\nint x=cx - AndroidUtilities.dp(1.5f);\nint y=cy + AndroidUtilities.dp(4);\nfloat side=(float)Math.sqrt(smallCheckSide * smallCheckSide / 2.0f);\npath.moveTo(x - side,y - side);\npath.lineTo(x,y);\nside=(float)Math.sqrt(checkSide * checkSide / 2.0f);\npath.lineTo(x + side,y - side);\ncanvas.drawPath(path,checkPaint);\n}\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1116,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 9289,
        "startLineNumber" : 248,
        "startColumnNumber" : 4,
        "endLineNumber" : 430,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void draw(Canvas canvas){\n  if (drawBitmap == null) {\n    return;\n  }\n  drawBitmap.eraseColor(0);\n  float rad=AndroidUtilities.dp(size / 2);\n  float outerRad=rad;\n  if (backgroundType == 12 || backgroundType == 13) {\n    rad=outerRad=AndroidUtilities.dp(10);\n  }\n else {\n    if (backgroundType != 0 && backgroundType != 11) {\n      outerRad-=AndroidUtilities.dp(0.2f);\n    }\n  }\n  float roundProgress=progress >= 0.5f ? 1.0f : progress / 0.5f;\n  int cx=bounds.centerX();\n  int cy=bounds.centerY();\n  if (backgroundColorKey != null) {\n    if (drawUnchecked) {\n      if (backgroundType == 12 || backgroundType == 13) {\n        paint.setColor(Theme.getColor(backgroundColorKey));\n        paint.setAlpha((int)(255 * backgroundAlpha));\n        backgroundPaint.setColor(Theme.getColor(checkColorKey));\n      }\n else       if (backgroundType == 6 || backgroundType == 7) {\n        paint.setColor(Theme.getColor(background2ColorKey));\n        backgroundPaint.setColor(Theme.getColor(checkColorKey));\n      }\n else       if (backgroundType == 10) {\n        backgroundPaint.setColor(Theme.getColor(background2ColorKey));\n      }\n else {\n        paint.setColor((Theme.getServiceMessageColor() & 0x00ffffff) | 0x28000000);\n        backgroundPaint.setColor(Theme.getColor(checkColorKey));\n      }\n    }\n else {\n      backgroundPaint.setColor(AndroidUtilities.getOffsetColor(0x00ffffff,Theme.getColor(background2ColorKey != null ? background2ColorKey : checkColorKey),progress,backgroundAlpha));\n    }\n  }\n else {\n    if (drawUnchecked) {\n      paint.setColor(Color.argb((int)(25 * backgroundAlpha),0,0,0));\n      if (backgroundType == 8) {\n        backgroundPaint.setColor(Theme.getColor(background2ColorKey));\n      }\n else {\n        backgroundPaint.setColor(AndroidUtilities.getOffsetColor(0xffffffff,Theme.getColor(checkColorKey),progress,backgroundAlpha));\n      }\n    }\n else {\n      backgroundPaint.setColor(AndroidUtilities.getOffsetColor(0x00ffffff,Theme.getColor(background2ColorKey != null ? background2ColorKey : checkColorKey),progress,backgroundAlpha));\n    }\n  }\n  if (drawUnchecked) {\n    if (backgroundType == 12 || backgroundType == 13) {\n    }\n else     if (backgroundType == 8 || backgroundType == 10) {\n      canvas.drawCircle(cx,cy,rad - AndroidUtilities.dp(1.5f),backgroundPaint);\n    }\n else     if (backgroundType == 6 || backgroundType == 7) {\n      canvas.drawCircle(cx,cy,rad - AndroidUtilities.dp(1),paint);\n      canvas.drawCircle(cx,cy,rad - AndroidUtilities.dp(1.5f),backgroundPaint);\n    }\n else {\n      canvas.drawCircle(cx,cy,rad,paint);\n    }\n  }\n  paint.setColor(Theme.getColor(checkColorKey));\n  if (backgroundType != 7 && backgroundType != 8 && backgroundType != 9 && backgroundType != 10) {\n    if (backgroundType == 12 || backgroundType == 13) {\n      backgroundPaint.setStyle(Paint.Style.FILL);\n      if (messageDrawable != null && messageDrawable.hasGradient()) {\n        LinearGradient shader=messageDrawable.getGradientShader();\n        Matrix matrix=messageDrawable.getMatrix();\n        matrix.setTranslate(0,-messageDrawable.getTopY() + bounds.top);\n        shader.setLocalMatrix(matrix);\n        backgroundPaint.setShader(shader);\n      }\n else {\n        backgroundPaint.setShader(null);\n      }\n      canvas.drawCircle(cx,cy,(rad - AndroidUtilities.dp(1)) * backgroundAlpha,backgroundPaint);\n      backgroundPaint.setStyle(Paint.Style.STROKE);\n    }\n else     if (backgroundType == 0 || backgroundType == 11) {\n      canvas.drawCircle(cx,cy,rad,backgroundPaint);\n    }\n else {\n      rect.set(cx - outerRad,cy - outerRad,cx + outerRad,cy + outerRad);\n      int startAngle;\n      int sweepAngle;\n      if (backgroundType == 6) {\n        startAngle=0;\n        sweepAngle=(int)(-360 * progress);\n      }\n else       if (backgroundType == 1) {\n        startAngle=-90;\n        sweepAngle=(int)(-270 * progress);\n      }\n else {\n        startAngle=90;\n        sweepAngle=(int)(270 * progress);\n      }\n      if (backgroundType == 6) {\n        int color=Theme.getColor(Theme.key_dialogBackground);\n        int alpha=Color.alpha(color);\n        backgroundPaint.setColor(color);\n        backgroundPaint.setAlpha((int)(alpha * progress));\n        canvas.drawArc(rect,startAngle,sweepAngle,false,backgroundPaint);\n        color=Theme.getColor(Theme.key_chat_attachPhotoBackground);\n        alpha=Color.alpha(color);\n        backgroundPaint.setColor(color);\n        backgroundPaint.setAlpha((int)(alpha * progress));\n      }\n      canvas.drawArc(rect,startAngle,sweepAngle,false,backgroundPaint);\n    }\n  }\n  if (roundProgress > 0) {\n    float checkProgress=progress < 0.5f ? 0.0f : (progress - 0.5f) / 0.5f;\n    if (backgroundType == 9) {\n      paint.setColor(Theme.getColor(background2ColorKey));\n    }\n else     if (backgroundType == 11 || backgroundType == 6 || backgroundType == 7 || backgroundType == 10 || !drawUnchecked && backgroundColorKey != null) {\n      paint.setColor(Theme.getColor(backgroundColorKey));\n    }\n else {\n      paint.setColor(Theme.getColor(enabled ? Theme.key_checkbox : Theme.key_checkboxDisabled));\n    }\n    if (!useDefaultCheck && checkColorKey != null) {\n      checkPaint.setColor(Theme.getColor(checkColorKey));\n    }\n else {\n      checkPaint.setColor(Theme.getColor(Theme.key_checkboxCheck));\n    }\n    if (backgroundType == 12 || backgroundType == 13) {\n      paint.setAlpha((int)(255 * roundProgress));\n      bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad * roundProgress,paint);\n    }\n else {\n      rad-=AndroidUtilities.dp(0.5f);\n      bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad,paint);\n      bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad * (1.0f - roundProgress),eraser);\n    }\n    canvas.drawBitmap(drawBitmap,cx - drawBitmap.getWidth() / 2,cy - drawBitmap.getHeight() / 2,null);\n    if (checkProgress != 0) {\n      if (checkedText != null) {\n        if (textPaint == null) {\n          textPaint=new TextPaint(Paint.ANTI_ALIAS_FLAG);\n          textPaint.setTypeface(AndroidUtilities.getTypeface(\"fonts/rmedium.ttf\"));\n        }\n        final float textSize, y;\nswitch (checkedText.length()) {\ncase 0:case 1:case 2:          textSize=14f;\n        y=18f;\n      break;\ncase 3:    textSize=10f;\n  y=16.5f;\nbreak;\ndefault:textSize=8f;\ny=15.75f;\n}\ntextPaint.setTextSize(AndroidUtilities.dp(textSize));\ntextPaint.setColor(Theme.getColor(checkColorKey));\ncanvas.save();\ncanvas.scale(checkProgress,1.0f,cx,cy);\ncanvas.drawText(checkedText,cx - textPaint.measureText(checkedText) / 2f,AndroidUtilities.dp(y),textPaint);\ncanvas.restore();\n}\n else {\npath.reset();\nfloat scale=backgroundType == 5 ? 0.8f : 1.0f;\nfloat checkSide=AndroidUtilities.dp(9 * scale) * checkProgress;\nfloat smallCheckSide=AndroidUtilities.dp(4 * scale) * checkProgress;\nint x=cx - AndroidUtilities.dp(1.5f);\nint y=cy + AndroidUtilities.dp(4);\nfloat side=(float)Math.sqrt(smallCheckSide * smallCheckSide / 2.0f);\npath.moveTo(x - side,y - side);\npath.lineTo(x,y);\nside=(float)Math.sqrt(checkSide * checkSide / 2.0f);\npath.lineTo(x + side,y - side);\ncanvas.drawPath(path,checkPaint);\n}\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1124,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 422,
        "startColumnNumber" : 20,
        "endLineNumber" : 422,
        "endColumnNumber" : 52
      },
      "nodeContext" : "path.moveTo(x - side,y - side);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "float"
  }, {
    "nodeContext" : "side",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 422,
      "startColumnNumber" : 46,
      "endLineNumber" : 422,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 422,
        "startColumnNumber" : 42,
        "endLineNumber" : 422,
        "endColumnNumber" : 50
      },
      "nodeContext" : "y - side",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 422,
        "startColumnNumber" : 20,
        "endLineNumber" : 422,
        "endColumnNumber" : 51
      },
      "nodeContext" : "path.moveTo(x - side,y - side)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 422,
        "startColumnNumber" : 20,
        "endLineNumber" : 422,
        "endColumnNumber" : 52
      },
      "nodeContext" : "path.moveTo(x - side,y - side);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 785,
        "startLineNumber" : 413,
        "startColumnNumber" : 23,
        "endLineNumber" : 427,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  path.reset();\n  float scale=backgroundType == 5 ? 0.8f : 1.0f;\n  float checkSide=AndroidUtilities.dp(9 * scale) * checkProgress;\n  float smallCheckSide=AndroidUtilities.dp(4 * scale) * checkProgress;\n  int x=cx - AndroidUtilities.dp(1.5f);\n  int y=cy + AndroidUtilities.dp(4);\n  float side=(float)Math.sqrt(smallCheckSide * smallCheckSide / 2.0f);\n  path.moveTo(x - side,y - side);\n  path.lineTo(x,y);\n  side=(float)Math.sqrt(checkSide * checkSide / 2.0f);\n  path.lineTo(x + side,y - side);\n  canvas.drawPath(path,checkPaint);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2083,
        "startLineNumber" : 386,
        "startColumnNumber" : 16,
        "endLineNumber" : 427,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (checkedText != null) {\n  if (textPaint == null) {\n    textPaint=new TextPaint(Paint.ANTI_ALIAS_FLAG);\n    textPaint.setTypeface(AndroidUtilities.getTypeface(\"fonts/rmedium.ttf\"));\n  }\n  final float textSize, y;\nswitch (checkedText.length()) {\ncase 0:case 1:case 2:    textSize=14f;\n  y=18f;\nbreak;\ncase 3:textSize=10f;\ny=16.5f;\nbreak;\ndefault:textSize=8f;\ny=15.75f;\n}\ntextPaint.setTextSize(AndroidUtilities.dp(textSize));\ntextPaint.setColor(Theme.getColor(checkColorKey));\ncanvas.save();\ncanvas.scale(checkProgress,1.0f,cx,cy);\ncanvas.drawText(checkedText,cx - textPaint.measureText(checkedText) / 2f,AndroidUtilities.dp(y),textPaint);\ncanvas.restore();\n}\n else {\npath.reset();\nfloat scale=backgroundType == 5 ? 0.8f : 1.0f;\nfloat checkSide=AndroidUtilities.dp(9 * scale) * checkProgress;\nfloat smallCheckSide=AndroidUtilities.dp(4 * scale) * checkProgress;\nint x=cx - AndroidUtilities.dp(1.5f);\nint y=cy + AndroidUtilities.dp(4);\nfloat side=(float)Math.sqrt(smallCheckSide * smallCheckSide / 2.0f);\npath.moveTo(x - side,y - side);\npath.lineTo(x,y);\nside=(float)Math.sqrt(checkSide * checkSide / 2.0f);\npath.lineTo(x + side,y - side);\ncanvas.drawPath(path,checkPaint);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 241,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2115,
        "startLineNumber" : 385,
        "startColumnNumber" : 36,
        "endLineNumber" : 428,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (checkedText != null) {\n    if (textPaint == null) {\n      textPaint=new TextPaint(Paint.ANTI_ALIAS_FLAG);\n      textPaint.setTypeface(AndroidUtilities.getTypeface(\"fonts/rmedium.ttf\"));\n    }\n    final float textSize, y;\nswitch (checkedText.length()) {\ncase 0:case 1:case 2:      textSize=14f;\n    y=18f;\n  break;\ncase 3:textSize=10f;\ny=16.5f;\nbreak;\ndefault:textSize=8f;\ny=15.75f;\n}\ntextPaint.setTextSize(AndroidUtilities.dp(textSize));\ntextPaint.setColor(Theme.getColor(checkColorKey));\ncanvas.save();\ncanvas.scale(checkProgress,1.0f,cx,cy);\ncanvas.drawText(checkedText,cx - textPaint.measureText(checkedText) / 2f,AndroidUtilities.dp(y),textPaint);\ncanvas.restore();\n}\n else {\npath.reset();\nfloat scale=backgroundType == 5 ? 0.8f : 1.0f;\nfloat checkSide=AndroidUtilities.dp(9 * scale) * checkProgress;\nfloat smallCheckSide=AndroidUtilities.dp(4 * scale) * checkProgress;\nint x=cx - AndroidUtilities.dp(1.5f);\nint y=cy + AndroidUtilities.dp(4);\nfloat side=(float)Math.sqrt(smallCheckSide * smallCheckSide / 2.0f);\npath.moveTo(x - side,y - side);\npath.lineTo(x,y);\nside=(float)Math.sqrt(checkSide * checkSide / 2.0f);\npath.lineTo(x + side,y - side);\ncanvas.drawPath(path,checkPaint);\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 242,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2139,
        "startLineNumber" : 385,
        "startColumnNumber" : 12,
        "endLineNumber" : 428,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (checkProgress != 0) {\n  if (checkedText != null) {\n    if (textPaint == null) {\n      textPaint=new TextPaint(Paint.ANTI_ALIAS_FLAG);\n      textPaint.setTypeface(AndroidUtilities.getTypeface(\"fonts/rmedium.ttf\"));\n    }\n    final float textSize, y;\nswitch (checkedText.length()) {\ncase 0:case 1:case 2:      textSize=14f;\n    y=18f;\n  break;\ncase 3:textSize=10f;\ny=16.5f;\nbreak;\ndefault:textSize=8f;\ny=15.75f;\n}\ntextPaint.setTextSize(AndroidUtilities.dp(textSize));\ntextPaint.setColor(Theme.getColor(checkColorKey));\ncanvas.save();\ncanvas.scale(checkProgress,1.0f,cx,cy);\ncanvas.drawText(checkedText,cx - textPaint.measureText(checkedText) / 2f,AndroidUtilities.dp(y),textPaint);\ncanvas.restore();\n}\n else {\npath.reset();\nfloat scale=backgroundType == 5 ? 0.8f : 1.0f;\nfloat checkSide=AndroidUtilities.dp(9 * scale) * checkProgress;\nfloat smallCheckSide=AndroidUtilities.dp(4 * scale) * checkProgress;\nint x=cx - AndroidUtilities.dp(1.5f);\nint y=cy + AndroidUtilities.dp(4);\nfloat side=(float)Math.sqrt(smallCheckSide * smallCheckSide / 2.0f);\npath.moveTo(x - side,y - side);\npath.lineTo(x,y);\nside=(float)Math.sqrt(checkSide * checkSide / 2.0f);\npath.lineTo(x + side,y - side);\ncanvas.drawPath(path,checkPaint);\n}\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 246,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3666,
        "startLineNumber" : 359,
        "startColumnNumber" : 31,
        "endLineNumber" : 429,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  float checkProgress=progress < 0.5f ? 0.0f : (progress - 0.5f) / 0.5f;\n  if (backgroundType == 9) {\n    paint.setColor(Theme.getColor(background2ColorKey));\n  }\n else   if (backgroundType == 11 || backgroundType == 6 || backgroundType == 7 || backgroundType == 10 || !drawUnchecked && backgroundColorKey != null) {\n    paint.setColor(Theme.getColor(backgroundColorKey));\n  }\n else {\n    paint.setColor(Theme.getColor(enabled ? Theme.key_checkbox : Theme.key_checkboxDisabled));\n  }\n  if (!useDefaultCheck && checkColorKey != null) {\n    checkPaint.setColor(Theme.getColor(checkColorKey));\n  }\n else {\n    checkPaint.setColor(Theme.getColor(Theme.key_checkboxCheck));\n  }\n  if (backgroundType == 12 || backgroundType == 13) {\n    paint.setAlpha((int)(255 * roundProgress));\n    bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad * roundProgress,paint);\n  }\n else {\n    rad-=AndroidUtilities.dp(0.5f);\n    bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad,paint);\n    bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad * (1.0f - roundProgress),eraser);\n  }\n  canvas.drawBitmap(drawBitmap,cx - drawBitmap.getWidth() / 2,cy - drawBitmap.getHeight() / 2,null);\n  if (checkProgress != 0) {\n    if (checkedText != null) {\n      if (textPaint == null) {\n        textPaint=new TextPaint(Paint.ANTI_ALIAS_FLAG);\n        textPaint.setTypeface(AndroidUtilities.getTypeface(\"fonts/rmedium.ttf\"));\n      }\n      final float textSize, y;\nswitch (checkedText.length()) {\ncase 0:case 1:case 2:        textSize=14f;\n      y=18f;\n    break;\ncase 3:  textSize=10f;\ny=16.5f;\nbreak;\ndefault:textSize=8f;\ny=15.75f;\n}\ntextPaint.setTextSize(AndroidUtilities.dp(textSize));\ntextPaint.setColor(Theme.getColor(checkColorKey));\ncanvas.save();\ncanvas.scale(checkProgress,1.0f,cx,cy);\ncanvas.drawText(checkedText,cx - textPaint.measureText(checkedText) / 2f,AndroidUtilities.dp(y),textPaint);\ncanvas.restore();\n}\n else {\npath.reset();\nfloat scale=backgroundType == 5 ? 0.8f : 1.0f;\nfloat checkSide=AndroidUtilities.dp(9 * scale) * checkProgress;\nfloat smallCheckSide=AndroidUtilities.dp(4 * scale) * checkProgress;\nint x=cx - AndroidUtilities.dp(1.5f);\nint y=cy + AndroidUtilities.dp(4);\nfloat side=(float)Math.sqrt(smallCheckSide * smallCheckSide / 2.0f);\npath.moveTo(x - side,y - side);\npath.lineTo(x,y);\nside=(float)Math.sqrt(checkSide * checkSide / 2.0f);\npath.lineTo(x + side,y - side);\ncanvas.drawPath(path,checkPaint);\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 452,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3689,
        "startLineNumber" : 359,
        "startColumnNumber" : 8,
        "endLineNumber" : 429,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (roundProgress > 0) {\n  float checkProgress=progress < 0.5f ? 0.0f : (progress - 0.5f) / 0.5f;\n  if (backgroundType == 9) {\n    paint.setColor(Theme.getColor(background2ColorKey));\n  }\n else   if (backgroundType == 11 || backgroundType == 6 || backgroundType == 7 || backgroundType == 10 || !drawUnchecked && backgroundColorKey != null) {\n    paint.setColor(Theme.getColor(backgroundColorKey));\n  }\n else {\n    paint.setColor(Theme.getColor(enabled ? Theme.key_checkbox : Theme.key_checkboxDisabled));\n  }\n  if (!useDefaultCheck && checkColorKey != null) {\n    checkPaint.setColor(Theme.getColor(checkColorKey));\n  }\n else {\n    checkPaint.setColor(Theme.getColor(Theme.key_checkboxCheck));\n  }\n  if (backgroundType == 12 || backgroundType == 13) {\n    paint.setAlpha((int)(255 * roundProgress));\n    bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad * roundProgress,paint);\n  }\n else {\n    rad-=AndroidUtilities.dp(0.5f);\n    bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad,paint);\n    bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad * (1.0f - roundProgress),eraser);\n  }\n  canvas.drawBitmap(drawBitmap,cx - drawBitmap.getWidth() / 2,cy - drawBitmap.getHeight() / 2,null);\n  if (checkProgress != 0) {\n    if (checkedText != null) {\n      if (textPaint == null) {\n        textPaint=new TextPaint(Paint.ANTI_ALIAS_FLAG);\n        textPaint.setTypeface(AndroidUtilities.getTypeface(\"fonts/rmedium.ttf\"));\n      }\n      final float textSize, y;\nswitch (checkedText.length()) {\ncase 0:case 1:case 2:        textSize=14f;\n      y=18f;\n    break;\ncase 3:  textSize=10f;\ny=16.5f;\nbreak;\ndefault:textSize=8f;\ny=15.75f;\n}\ntextPaint.setTextSize(AndroidUtilities.dp(textSize));\ntextPaint.setColor(Theme.getColor(checkColorKey));\ncanvas.save();\ncanvas.scale(checkProgress,1.0f,cx,cy);\ncanvas.drawText(checkedText,cx - textPaint.measureText(checkedText) / 2f,AndroidUtilities.dp(y),textPaint);\ncanvas.restore();\n}\n else {\npath.reset();\nfloat scale=backgroundType == 5 ? 0.8f : 1.0f;\nfloat checkSide=AndroidUtilities.dp(9 * scale) * checkProgress;\nfloat smallCheckSide=AndroidUtilities.dp(4 * scale) * checkProgress;\nint x=cx - AndroidUtilities.dp(1.5f);\nint y=cy + AndroidUtilities.dp(4);\nfloat side=(float)Math.sqrt(smallCheckSide * smallCheckSide / 2.0f);\npath.moveTo(x - side,y - side);\npath.lineTo(x,y);\nside=(float)Math.sqrt(checkSide * checkSide / 2.0f);\npath.lineTo(x + side,y - side);\ncanvas.drawPath(path,checkPaint);\n}\n}\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 456,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 9257,
        "startLineNumber" : 248,
        "startColumnNumber" : 36,
        "endLineNumber" : 430,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (drawBitmap == null) {\n    return;\n  }\n  drawBitmap.eraseColor(0);\n  float rad=AndroidUtilities.dp(size / 2);\n  float outerRad=rad;\n  if (backgroundType == 12 || backgroundType == 13) {\n    rad=outerRad=AndroidUtilities.dp(10);\n  }\n else {\n    if (backgroundType != 0 && backgroundType != 11) {\n      outerRad-=AndroidUtilities.dp(0.2f);\n    }\n  }\n  float roundProgress=progress >= 0.5f ? 1.0f : progress / 0.5f;\n  int cx=bounds.centerX();\n  int cy=bounds.centerY();\n  if (backgroundColorKey != null) {\n    if (drawUnchecked) {\n      if (backgroundType == 12 || backgroundType == 13) {\n        paint.setColor(Theme.getColor(backgroundColorKey));\n        paint.setAlpha((int)(255 * backgroundAlpha));\n        backgroundPaint.setColor(Theme.getColor(checkColorKey));\n      }\n else       if (backgroundType == 6 || backgroundType == 7) {\n        paint.setColor(Theme.getColor(background2ColorKey));\n        backgroundPaint.setColor(Theme.getColor(checkColorKey));\n      }\n else       if (backgroundType == 10) {\n        backgroundPaint.setColor(Theme.getColor(background2ColorKey));\n      }\n else {\n        paint.setColor((Theme.getServiceMessageColor() & 0x00ffffff) | 0x28000000);\n        backgroundPaint.setColor(Theme.getColor(checkColorKey));\n      }\n    }\n else {\n      backgroundPaint.setColor(AndroidUtilities.getOffsetColor(0x00ffffff,Theme.getColor(background2ColorKey != null ? background2ColorKey : checkColorKey),progress,backgroundAlpha));\n    }\n  }\n else {\n    if (drawUnchecked) {\n      paint.setColor(Color.argb((int)(25 * backgroundAlpha),0,0,0));\n      if (backgroundType == 8) {\n        backgroundPaint.setColor(Theme.getColor(background2ColorKey));\n      }\n else {\n        backgroundPaint.setColor(AndroidUtilities.getOffsetColor(0xffffffff,Theme.getColor(checkColorKey),progress,backgroundAlpha));\n      }\n    }\n else {\n      backgroundPaint.setColor(AndroidUtilities.getOffsetColor(0x00ffffff,Theme.getColor(background2ColorKey != null ? background2ColorKey : checkColorKey),progress,backgroundAlpha));\n    }\n  }\n  if (drawUnchecked) {\n    if (backgroundType == 12 || backgroundType == 13) {\n    }\n else     if (backgroundType == 8 || backgroundType == 10) {\n      canvas.drawCircle(cx,cy,rad - AndroidUtilities.dp(1.5f),backgroundPaint);\n    }\n else     if (backgroundType == 6 || backgroundType == 7) {\n      canvas.drawCircle(cx,cy,rad - AndroidUtilities.dp(1),paint);\n      canvas.drawCircle(cx,cy,rad - AndroidUtilities.dp(1.5f),backgroundPaint);\n    }\n else {\n      canvas.drawCircle(cx,cy,rad,paint);\n    }\n  }\n  paint.setColor(Theme.getColor(checkColorKey));\n  if (backgroundType != 7 && backgroundType != 8 && backgroundType != 9 && backgroundType != 10) {\n    if (backgroundType == 12 || backgroundType == 13) {\n      backgroundPaint.setStyle(Paint.Style.FILL);\n      if (messageDrawable != null && messageDrawable.hasGradient()) {\n        LinearGradient shader=messageDrawable.getGradientShader();\n        Matrix matrix=messageDrawable.getMatrix();\n        matrix.setTranslate(0,-messageDrawable.getTopY() + bounds.top);\n        shader.setLocalMatrix(matrix);\n        backgroundPaint.setShader(shader);\n      }\n else {\n        backgroundPaint.setShader(null);\n      }\n      canvas.drawCircle(cx,cy,(rad - AndroidUtilities.dp(1)) * backgroundAlpha,backgroundPaint);\n      backgroundPaint.setStyle(Paint.Style.STROKE);\n    }\n else     if (backgroundType == 0 || backgroundType == 11) {\n      canvas.drawCircle(cx,cy,rad,backgroundPaint);\n    }\n else {\n      rect.set(cx - outerRad,cy - outerRad,cx + outerRad,cy + outerRad);\n      int startAngle;\n      int sweepAngle;\n      if (backgroundType == 6) {\n        startAngle=0;\n        sweepAngle=(int)(-360 * progress);\n      }\n else       if (backgroundType == 1) {\n        startAngle=-90;\n        sweepAngle=(int)(-270 * progress);\n      }\n else {\n        startAngle=90;\n        sweepAngle=(int)(270 * progress);\n      }\n      if (backgroundType == 6) {\n        int color=Theme.getColor(Theme.key_dialogBackground);\n        int alpha=Color.alpha(color);\n        backgroundPaint.setColor(color);\n        backgroundPaint.setAlpha((int)(alpha * progress));\n        canvas.drawArc(rect,startAngle,sweepAngle,false,backgroundPaint);\n        color=Theme.getColor(Theme.key_chat_attachPhotoBackground);\n        alpha=Color.alpha(color);\n        backgroundPaint.setColor(color);\n        backgroundPaint.setAlpha((int)(alpha * progress));\n      }\n      canvas.drawArc(rect,startAngle,sweepAngle,false,backgroundPaint);\n    }\n  }\n  if (roundProgress > 0) {\n    float checkProgress=progress < 0.5f ? 0.0f : (progress - 0.5f) / 0.5f;\n    if (backgroundType == 9) {\n      paint.setColor(Theme.getColor(background2ColorKey));\n    }\n else     if (backgroundType == 11 || backgroundType == 6 || backgroundType == 7 || backgroundType == 10 || !drawUnchecked && backgroundColorKey != null) {\n      paint.setColor(Theme.getColor(backgroundColorKey));\n    }\n else {\n      paint.setColor(Theme.getColor(enabled ? Theme.key_checkbox : Theme.key_checkboxDisabled));\n    }\n    if (!useDefaultCheck && checkColorKey != null) {\n      checkPaint.setColor(Theme.getColor(checkColorKey));\n    }\n else {\n      checkPaint.setColor(Theme.getColor(Theme.key_checkboxCheck));\n    }\n    if (backgroundType == 12 || backgroundType == 13) {\n      paint.setAlpha((int)(255 * roundProgress));\n      bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad * roundProgress,paint);\n    }\n else {\n      rad-=AndroidUtilities.dp(0.5f);\n      bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad,paint);\n      bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad * (1.0f - roundProgress),eraser);\n    }\n    canvas.drawBitmap(drawBitmap,cx - drawBitmap.getWidth() / 2,cy - drawBitmap.getHeight() / 2,null);\n    if (checkProgress != 0) {\n      if (checkedText != null) {\n        if (textPaint == null) {\n          textPaint=new TextPaint(Paint.ANTI_ALIAS_FLAG);\n          textPaint.setTypeface(AndroidUtilities.getTypeface(\"fonts/rmedium.ttf\"));\n        }\n        final float textSize, y;\nswitch (checkedText.length()) {\ncase 0:case 1:case 2:          textSize=14f;\n        y=18f;\n      break;\ncase 3:    textSize=10f;\n  y=16.5f;\nbreak;\ndefault:textSize=8f;\ny=15.75f;\n}\ntextPaint.setTextSize(AndroidUtilities.dp(textSize));\ntextPaint.setColor(Theme.getColor(checkColorKey));\ncanvas.save();\ncanvas.scale(checkProgress,1.0f,cx,cy);\ncanvas.drawText(checkedText,cx - textPaint.measureText(checkedText) / 2f,AndroidUtilities.dp(y),textPaint);\ncanvas.restore();\n}\n else {\npath.reset();\nfloat scale=backgroundType == 5 ? 0.8f : 1.0f;\nfloat checkSide=AndroidUtilities.dp(9 * scale) * checkProgress;\nfloat smallCheckSide=AndroidUtilities.dp(4 * scale) * checkProgress;\nint x=cx - AndroidUtilities.dp(1.5f);\nint y=cy + AndroidUtilities.dp(4);\nfloat side=(float)Math.sqrt(smallCheckSide * smallCheckSide / 2.0f);\npath.moveTo(x - side,y - side);\npath.lineTo(x,y);\nside=(float)Math.sqrt(checkSide * checkSide / 2.0f);\npath.lineTo(x + side,y - side);\ncanvas.drawPath(path,checkPaint);\n}\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1116,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 9289,
        "startLineNumber" : 248,
        "startColumnNumber" : 4,
        "endLineNumber" : 430,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void draw(Canvas canvas){\n  if (drawBitmap == null) {\n    return;\n  }\n  drawBitmap.eraseColor(0);\n  float rad=AndroidUtilities.dp(size / 2);\n  float outerRad=rad;\n  if (backgroundType == 12 || backgroundType == 13) {\n    rad=outerRad=AndroidUtilities.dp(10);\n  }\n else {\n    if (backgroundType != 0 && backgroundType != 11) {\n      outerRad-=AndroidUtilities.dp(0.2f);\n    }\n  }\n  float roundProgress=progress >= 0.5f ? 1.0f : progress / 0.5f;\n  int cx=bounds.centerX();\n  int cy=bounds.centerY();\n  if (backgroundColorKey != null) {\n    if (drawUnchecked) {\n      if (backgroundType == 12 || backgroundType == 13) {\n        paint.setColor(Theme.getColor(backgroundColorKey));\n        paint.setAlpha((int)(255 * backgroundAlpha));\n        backgroundPaint.setColor(Theme.getColor(checkColorKey));\n      }\n else       if (backgroundType == 6 || backgroundType == 7) {\n        paint.setColor(Theme.getColor(background2ColorKey));\n        backgroundPaint.setColor(Theme.getColor(checkColorKey));\n      }\n else       if (backgroundType == 10) {\n        backgroundPaint.setColor(Theme.getColor(background2ColorKey));\n      }\n else {\n        paint.setColor((Theme.getServiceMessageColor() & 0x00ffffff) | 0x28000000);\n        backgroundPaint.setColor(Theme.getColor(checkColorKey));\n      }\n    }\n else {\n      backgroundPaint.setColor(AndroidUtilities.getOffsetColor(0x00ffffff,Theme.getColor(background2ColorKey != null ? background2ColorKey : checkColorKey),progress,backgroundAlpha));\n    }\n  }\n else {\n    if (drawUnchecked) {\n      paint.setColor(Color.argb((int)(25 * backgroundAlpha),0,0,0));\n      if (backgroundType == 8) {\n        backgroundPaint.setColor(Theme.getColor(background2ColorKey));\n      }\n else {\n        backgroundPaint.setColor(AndroidUtilities.getOffsetColor(0xffffffff,Theme.getColor(checkColorKey),progress,backgroundAlpha));\n      }\n    }\n else {\n      backgroundPaint.setColor(AndroidUtilities.getOffsetColor(0x00ffffff,Theme.getColor(background2ColorKey != null ? background2ColorKey : checkColorKey),progress,backgroundAlpha));\n    }\n  }\n  if (drawUnchecked) {\n    if (backgroundType == 12 || backgroundType == 13) {\n    }\n else     if (backgroundType == 8 || backgroundType == 10) {\n      canvas.drawCircle(cx,cy,rad - AndroidUtilities.dp(1.5f),backgroundPaint);\n    }\n else     if (backgroundType == 6 || backgroundType == 7) {\n      canvas.drawCircle(cx,cy,rad - AndroidUtilities.dp(1),paint);\n      canvas.drawCircle(cx,cy,rad - AndroidUtilities.dp(1.5f),backgroundPaint);\n    }\n else {\n      canvas.drawCircle(cx,cy,rad,paint);\n    }\n  }\n  paint.setColor(Theme.getColor(checkColorKey));\n  if (backgroundType != 7 && backgroundType != 8 && backgroundType != 9 && backgroundType != 10) {\n    if (backgroundType == 12 || backgroundType == 13) {\n      backgroundPaint.setStyle(Paint.Style.FILL);\n      if (messageDrawable != null && messageDrawable.hasGradient()) {\n        LinearGradient shader=messageDrawable.getGradientShader();\n        Matrix matrix=messageDrawable.getMatrix();\n        matrix.setTranslate(0,-messageDrawable.getTopY() + bounds.top);\n        shader.setLocalMatrix(matrix);\n        backgroundPaint.setShader(shader);\n      }\n else {\n        backgroundPaint.setShader(null);\n      }\n      canvas.drawCircle(cx,cy,(rad - AndroidUtilities.dp(1)) * backgroundAlpha,backgroundPaint);\n      backgroundPaint.setStyle(Paint.Style.STROKE);\n    }\n else     if (backgroundType == 0 || backgroundType == 11) {\n      canvas.drawCircle(cx,cy,rad,backgroundPaint);\n    }\n else {\n      rect.set(cx - outerRad,cy - outerRad,cx + outerRad,cy + outerRad);\n      int startAngle;\n      int sweepAngle;\n      if (backgroundType == 6) {\n        startAngle=0;\n        sweepAngle=(int)(-360 * progress);\n      }\n else       if (backgroundType == 1) {\n        startAngle=-90;\n        sweepAngle=(int)(-270 * progress);\n      }\n else {\n        startAngle=90;\n        sweepAngle=(int)(270 * progress);\n      }\n      if (backgroundType == 6) {\n        int color=Theme.getColor(Theme.key_dialogBackground);\n        int alpha=Color.alpha(color);\n        backgroundPaint.setColor(color);\n        backgroundPaint.setAlpha((int)(alpha * progress));\n        canvas.drawArc(rect,startAngle,sweepAngle,false,backgroundPaint);\n        color=Theme.getColor(Theme.key_chat_attachPhotoBackground);\n        alpha=Color.alpha(color);\n        backgroundPaint.setColor(color);\n        backgroundPaint.setAlpha((int)(alpha * progress));\n      }\n      canvas.drawArc(rect,startAngle,sweepAngle,false,backgroundPaint);\n    }\n  }\n  if (roundProgress > 0) {\n    float checkProgress=progress < 0.5f ? 0.0f : (progress - 0.5f) / 0.5f;\n    if (backgroundType == 9) {\n      paint.setColor(Theme.getColor(background2ColorKey));\n    }\n else     if (backgroundType == 11 || backgroundType == 6 || backgroundType == 7 || backgroundType == 10 || !drawUnchecked && backgroundColorKey != null) {\n      paint.setColor(Theme.getColor(backgroundColorKey));\n    }\n else {\n      paint.setColor(Theme.getColor(enabled ? Theme.key_checkbox : Theme.key_checkboxDisabled));\n    }\n    if (!useDefaultCheck && checkColorKey != null) {\n      checkPaint.setColor(Theme.getColor(checkColorKey));\n    }\n else {\n      checkPaint.setColor(Theme.getColor(Theme.key_checkboxCheck));\n    }\n    if (backgroundType == 12 || backgroundType == 13) {\n      paint.setAlpha((int)(255 * roundProgress));\n      bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad * roundProgress,paint);\n    }\n else {\n      rad-=AndroidUtilities.dp(0.5f);\n      bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad,paint);\n      bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad * (1.0f - roundProgress),eraser);\n    }\n    canvas.drawBitmap(drawBitmap,cx - drawBitmap.getWidth() / 2,cy - drawBitmap.getHeight() / 2,null);\n    if (checkProgress != 0) {\n      if (checkedText != null) {\n        if (textPaint == null) {\n          textPaint=new TextPaint(Paint.ANTI_ALIAS_FLAG);\n          textPaint.setTypeface(AndroidUtilities.getTypeface(\"fonts/rmedium.ttf\"));\n        }\n        final float textSize, y;\nswitch (checkedText.length()) {\ncase 0:case 1:case 2:          textSize=14f;\n        y=18f;\n      break;\ncase 3:    textSize=10f;\n  y=16.5f;\nbreak;\ndefault:textSize=8f;\ny=15.75f;\n}\ntextPaint.setTextSize(AndroidUtilities.dp(textSize));\ntextPaint.setColor(Theme.getColor(checkColorKey));\ncanvas.save();\ncanvas.scale(checkProgress,1.0f,cx,cy);\ncanvas.drawText(checkedText,cx - textPaint.measureText(checkedText) / 2f,AndroidUtilities.dp(y),textPaint);\ncanvas.restore();\n}\n else {\npath.reset();\nfloat scale=backgroundType == 5 ? 0.8f : 1.0f;\nfloat checkSide=AndroidUtilities.dp(9 * scale) * checkProgress;\nfloat smallCheckSide=AndroidUtilities.dp(4 * scale) * checkProgress;\nint x=cx - AndroidUtilities.dp(1.5f);\nint y=cy + AndroidUtilities.dp(4);\nfloat side=(float)Math.sqrt(smallCheckSide * smallCheckSide / 2.0f);\npath.moveTo(x - side,y - side);\npath.lineTo(x,y);\nside=(float)Math.sqrt(checkSide * checkSide / 2.0f);\npath.lineTo(x + side,y - side);\ncanvas.drawPath(path,checkPaint);\n}\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1124,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 422,
        "startColumnNumber" : 20,
        "endLineNumber" : 422,
        "endColumnNumber" : 52
      },
      "nodeContext" : "path.moveTo(x - side,y - side);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "float"
  }, {
    "nodeContext" : "side",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 425,
      "startColumnNumber" : 36,
      "endLineNumber" : 425,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 425,
        "startColumnNumber" : 32,
        "endLineNumber" : 425,
        "endColumnNumber" : 40
      },
      "nodeContext" : "x + side",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 425,
        "startColumnNumber" : 20,
        "endLineNumber" : 425,
        "endColumnNumber" : 51
      },
      "nodeContext" : "path.lineTo(x + side,y - side)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 425,
        "startColumnNumber" : 20,
        "endLineNumber" : 425,
        "endColumnNumber" : 52
      },
      "nodeContext" : "path.lineTo(x + side,y - side);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 785,
        "startLineNumber" : 413,
        "startColumnNumber" : 23,
        "endLineNumber" : 427,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  path.reset();\n  float scale=backgroundType == 5 ? 0.8f : 1.0f;\n  float checkSide=AndroidUtilities.dp(9 * scale) * checkProgress;\n  float smallCheckSide=AndroidUtilities.dp(4 * scale) * checkProgress;\n  int x=cx - AndroidUtilities.dp(1.5f);\n  int y=cy + AndroidUtilities.dp(4);\n  float side=(float)Math.sqrt(smallCheckSide * smallCheckSide / 2.0f);\n  path.moveTo(x - side,y - side);\n  path.lineTo(x,y);\n  side=(float)Math.sqrt(checkSide * checkSide / 2.0f);\n  path.lineTo(x + side,y - side);\n  canvas.drawPath(path,checkPaint);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2083,
        "startLineNumber" : 386,
        "startColumnNumber" : 16,
        "endLineNumber" : 427,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (checkedText != null) {\n  if (textPaint == null) {\n    textPaint=new TextPaint(Paint.ANTI_ALIAS_FLAG);\n    textPaint.setTypeface(AndroidUtilities.getTypeface(\"fonts/rmedium.ttf\"));\n  }\n  final float textSize, y;\nswitch (checkedText.length()) {\ncase 0:case 1:case 2:    textSize=14f;\n  y=18f;\nbreak;\ncase 3:textSize=10f;\ny=16.5f;\nbreak;\ndefault:textSize=8f;\ny=15.75f;\n}\ntextPaint.setTextSize(AndroidUtilities.dp(textSize));\ntextPaint.setColor(Theme.getColor(checkColorKey));\ncanvas.save();\ncanvas.scale(checkProgress,1.0f,cx,cy);\ncanvas.drawText(checkedText,cx - textPaint.measureText(checkedText) / 2f,AndroidUtilities.dp(y),textPaint);\ncanvas.restore();\n}\n else {\npath.reset();\nfloat scale=backgroundType == 5 ? 0.8f : 1.0f;\nfloat checkSide=AndroidUtilities.dp(9 * scale) * checkProgress;\nfloat smallCheckSide=AndroidUtilities.dp(4 * scale) * checkProgress;\nint x=cx - AndroidUtilities.dp(1.5f);\nint y=cy + AndroidUtilities.dp(4);\nfloat side=(float)Math.sqrt(smallCheckSide * smallCheckSide / 2.0f);\npath.moveTo(x - side,y - side);\npath.lineTo(x,y);\nside=(float)Math.sqrt(checkSide * checkSide / 2.0f);\npath.lineTo(x + side,y - side);\ncanvas.drawPath(path,checkPaint);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 241,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2115,
        "startLineNumber" : 385,
        "startColumnNumber" : 36,
        "endLineNumber" : 428,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (checkedText != null) {\n    if (textPaint == null) {\n      textPaint=new TextPaint(Paint.ANTI_ALIAS_FLAG);\n      textPaint.setTypeface(AndroidUtilities.getTypeface(\"fonts/rmedium.ttf\"));\n    }\n    final float textSize, y;\nswitch (checkedText.length()) {\ncase 0:case 1:case 2:      textSize=14f;\n    y=18f;\n  break;\ncase 3:textSize=10f;\ny=16.5f;\nbreak;\ndefault:textSize=8f;\ny=15.75f;\n}\ntextPaint.setTextSize(AndroidUtilities.dp(textSize));\ntextPaint.setColor(Theme.getColor(checkColorKey));\ncanvas.save();\ncanvas.scale(checkProgress,1.0f,cx,cy);\ncanvas.drawText(checkedText,cx - textPaint.measureText(checkedText) / 2f,AndroidUtilities.dp(y),textPaint);\ncanvas.restore();\n}\n else {\npath.reset();\nfloat scale=backgroundType == 5 ? 0.8f : 1.0f;\nfloat checkSide=AndroidUtilities.dp(9 * scale) * checkProgress;\nfloat smallCheckSide=AndroidUtilities.dp(4 * scale) * checkProgress;\nint x=cx - AndroidUtilities.dp(1.5f);\nint y=cy + AndroidUtilities.dp(4);\nfloat side=(float)Math.sqrt(smallCheckSide * smallCheckSide / 2.0f);\npath.moveTo(x - side,y - side);\npath.lineTo(x,y);\nside=(float)Math.sqrt(checkSide * checkSide / 2.0f);\npath.lineTo(x + side,y - side);\ncanvas.drawPath(path,checkPaint);\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 242,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2139,
        "startLineNumber" : 385,
        "startColumnNumber" : 12,
        "endLineNumber" : 428,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (checkProgress != 0) {\n  if (checkedText != null) {\n    if (textPaint == null) {\n      textPaint=new TextPaint(Paint.ANTI_ALIAS_FLAG);\n      textPaint.setTypeface(AndroidUtilities.getTypeface(\"fonts/rmedium.ttf\"));\n    }\n    final float textSize, y;\nswitch (checkedText.length()) {\ncase 0:case 1:case 2:      textSize=14f;\n    y=18f;\n  break;\ncase 3:textSize=10f;\ny=16.5f;\nbreak;\ndefault:textSize=8f;\ny=15.75f;\n}\ntextPaint.setTextSize(AndroidUtilities.dp(textSize));\ntextPaint.setColor(Theme.getColor(checkColorKey));\ncanvas.save();\ncanvas.scale(checkProgress,1.0f,cx,cy);\ncanvas.drawText(checkedText,cx - textPaint.measureText(checkedText) / 2f,AndroidUtilities.dp(y),textPaint);\ncanvas.restore();\n}\n else {\npath.reset();\nfloat scale=backgroundType == 5 ? 0.8f : 1.0f;\nfloat checkSide=AndroidUtilities.dp(9 * scale) * checkProgress;\nfloat smallCheckSide=AndroidUtilities.dp(4 * scale) * checkProgress;\nint x=cx - AndroidUtilities.dp(1.5f);\nint y=cy + AndroidUtilities.dp(4);\nfloat side=(float)Math.sqrt(smallCheckSide * smallCheckSide / 2.0f);\npath.moveTo(x - side,y - side);\npath.lineTo(x,y);\nside=(float)Math.sqrt(checkSide * checkSide / 2.0f);\npath.lineTo(x + side,y - side);\ncanvas.drawPath(path,checkPaint);\n}\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 246,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3666,
        "startLineNumber" : 359,
        "startColumnNumber" : 31,
        "endLineNumber" : 429,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  float checkProgress=progress < 0.5f ? 0.0f : (progress - 0.5f) / 0.5f;\n  if (backgroundType == 9) {\n    paint.setColor(Theme.getColor(background2ColorKey));\n  }\n else   if (backgroundType == 11 || backgroundType == 6 || backgroundType == 7 || backgroundType == 10 || !drawUnchecked && backgroundColorKey != null) {\n    paint.setColor(Theme.getColor(backgroundColorKey));\n  }\n else {\n    paint.setColor(Theme.getColor(enabled ? Theme.key_checkbox : Theme.key_checkboxDisabled));\n  }\n  if (!useDefaultCheck && checkColorKey != null) {\n    checkPaint.setColor(Theme.getColor(checkColorKey));\n  }\n else {\n    checkPaint.setColor(Theme.getColor(Theme.key_checkboxCheck));\n  }\n  if (backgroundType == 12 || backgroundType == 13) {\n    paint.setAlpha((int)(255 * roundProgress));\n    bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad * roundProgress,paint);\n  }\n else {\n    rad-=AndroidUtilities.dp(0.5f);\n    bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad,paint);\n    bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad * (1.0f - roundProgress),eraser);\n  }\n  canvas.drawBitmap(drawBitmap,cx - drawBitmap.getWidth() / 2,cy - drawBitmap.getHeight() / 2,null);\n  if (checkProgress != 0) {\n    if (checkedText != null) {\n      if (textPaint == null) {\n        textPaint=new TextPaint(Paint.ANTI_ALIAS_FLAG);\n        textPaint.setTypeface(AndroidUtilities.getTypeface(\"fonts/rmedium.ttf\"));\n      }\n      final float textSize, y;\nswitch (checkedText.length()) {\ncase 0:case 1:case 2:        textSize=14f;\n      y=18f;\n    break;\ncase 3:  textSize=10f;\ny=16.5f;\nbreak;\ndefault:textSize=8f;\ny=15.75f;\n}\ntextPaint.setTextSize(AndroidUtilities.dp(textSize));\ntextPaint.setColor(Theme.getColor(checkColorKey));\ncanvas.save();\ncanvas.scale(checkProgress,1.0f,cx,cy);\ncanvas.drawText(checkedText,cx - textPaint.measureText(checkedText) / 2f,AndroidUtilities.dp(y),textPaint);\ncanvas.restore();\n}\n else {\npath.reset();\nfloat scale=backgroundType == 5 ? 0.8f : 1.0f;\nfloat checkSide=AndroidUtilities.dp(9 * scale) * checkProgress;\nfloat smallCheckSide=AndroidUtilities.dp(4 * scale) * checkProgress;\nint x=cx - AndroidUtilities.dp(1.5f);\nint y=cy + AndroidUtilities.dp(4);\nfloat side=(float)Math.sqrt(smallCheckSide * smallCheckSide / 2.0f);\npath.moveTo(x - side,y - side);\npath.lineTo(x,y);\nside=(float)Math.sqrt(checkSide * checkSide / 2.0f);\npath.lineTo(x + side,y - side);\ncanvas.drawPath(path,checkPaint);\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 452,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3689,
        "startLineNumber" : 359,
        "startColumnNumber" : 8,
        "endLineNumber" : 429,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (roundProgress > 0) {\n  float checkProgress=progress < 0.5f ? 0.0f : (progress - 0.5f) / 0.5f;\n  if (backgroundType == 9) {\n    paint.setColor(Theme.getColor(background2ColorKey));\n  }\n else   if (backgroundType == 11 || backgroundType == 6 || backgroundType == 7 || backgroundType == 10 || !drawUnchecked && backgroundColorKey != null) {\n    paint.setColor(Theme.getColor(backgroundColorKey));\n  }\n else {\n    paint.setColor(Theme.getColor(enabled ? Theme.key_checkbox : Theme.key_checkboxDisabled));\n  }\n  if (!useDefaultCheck && checkColorKey != null) {\n    checkPaint.setColor(Theme.getColor(checkColorKey));\n  }\n else {\n    checkPaint.setColor(Theme.getColor(Theme.key_checkboxCheck));\n  }\n  if (backgroundType == 12 || backgroundType == 13) {\n    paint.setAlpha((int)(255 * roundProgress));\n    bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad * roundProgress,paint);\n  }\n else {\n    rad-=AndroidUtilities.dp(0.5f);\n    bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad,paint);\n    bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad * (1.0f - roundProgress),eraser);\n  }\n  canvas.drawBitmap(drawBitmap,cx - drawBitmap.getWidth() / 2,cy - drawBitmap.getHeight() / 2,null);\n  if (checkProgress != 0) {\n    if (checkedText != null) {\n      if (textPaint == null) {\n        textPaint=new TextPaint(Paint.ANTI_ALIAS_FLAG);\n        textPaint.setTypeface(AndroidUtilities.getTypeface(\"fonts/rmedium.ttf\"));\n      }\n      final float textSize, y;\nswitch (checkedText.length()) {\ncase 0:case 1:case 2:        textSize=14f;\n      y=18f;\n    break;\ncase 3:  textSize=10f;\ny=16.5f;\nbreak;\ndefault:textSize=8f;\ny=15.75f;\n}\ntextPaint.setTextSize(AndroidUtilities.dp(textSize));\ntextPaint.setColor(Theme.getColor(checkColorKey));\ncanvas.save();\ncanvas.scale(checkProgress,1.0f,cx,cy);\ncanvas.drawText(checkedText,cx - textPaint.measureText(checkedText) / 2f,AndroidUtilities.dp(y),textPaint);\ncanvas.restore();\n}\n else {\npath.reset();\nfloat scale=backgroundType == 5 ? 0.8f : 1.0f;\nfloat checkSide=AndroidUtilities.dp(9 * scale) * checkProgress;\nfloat smallCheckSide=AndroidUtilities.dp(4 * scale) * checkProgress;\nint x=cx - AndroidUtilities.dp(1.5f);\nint y=cy + AndroidUtilities.dp(4);\nfloat side=(float)Math.sqrt(smallCheckSide * smallCheckSide / 2.0f);\npath.moveTo(x - side,y - side);\npath.lineTo(x,y);\nside=(float)Math.sqrt(checkSide * checkSide / 2.0f);\npath.lineTo(x + side,y - side);\ncanvas.drawPath(path,checkPaint);\n}\n}\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 456,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 9257,
        "startLineNumber" : 248,
        "startColumnNumber" : 36,
        "endLineNumber" : 430,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (drawBitmap == null) {\n    return;\n  }\n  drawBitmap.eraseColor(0);\n  float rad=AndroidUtilities.dp(size / 2);\n  float outerRad=rad;\n  if (backgroundType == 12 || backgroundType == 13) {\n    rad=outerRad=AndroidUtilities.dp(10);\n  }\n else {\n    if (backgroundType != 0 && backgroundType != 11) {\n      outerRad-=AndroidUtilities.dp(0.2f);\n    }\n  }\n  float roundProgress=progress >= 0.5f ? 1.0f : progress / 0.5f;\n  int cx=bounds.centerX();\n  int cy=bounds.centerY();\n  if (backgroundColorKey != null) {\n    if (drawUnchecked) {\n      if (backgroundType == 12 || backgroundType == 13) {\n        paint.setColor(Theme.getColor(backgroundColorKey));\n        paint.setAlpha((int)(255 * backgroundAlpha));\n        backgroundPaint.setColor(Theme.getColor(checkColorKey));\n      }\n else       if (backgroundType == 6 || backgroundType == 7) {\n        paint.setColor(Theme.getColor(background2ColorKey));\n        backgroundPaint.setColor(Theme.getColor(checkColorKey));\n      }\n else       if (backgroundType == 10) {\n        backgroundPaint.setColor(Theme.getColor(background2ColorKey));\n      }\n else {\n        paint.setColor((Theme.getServiceMessageColor() & 0x00ffffff) | 0x28000000);\n        backgroundPaint.setColor(Theme.getColor(checkColorKey));\n      }\n    }\n else {\n      backgroundPaint.setColor(AndroidUtilities.getOffsetColor(0x00ffffff,Theme.getColor(background2ColorKey != null ? background2ColorKey : checkColorKey),progress,backgroundAlpha));\n    }\n  }\n else {\n    if (drawUnchecked) {\n      paint.setColor(Color.argb((int)(25 * backgroundAlpha),0,0,0));\n      if (backgroundType == 8) {\n        backgroundPaint.setColor(Theme.getColor(background2ColorKey));\n      }\n else {\n        backgroundPaint.setColor(AndroidUtilities.getOffsetColor(0xffffffff,Theme.getColor(checkColorKey),progress,backgroundAlpha));\n      }\n    }\n else {\n      backgroundPaint.setColor(AndroidUtilities.getOffsetColor(0x00ffffff,Theme.getColor(background2ColorKey != null ? background2ColorKey : checkColorKey),progress,backgroundAlpha));\n    }\n  }\n  if (drawUnchecked) {\n    if (backgroundType == 12 || backgroundType == 13) {\n    }\n else     if (backgroundType == 8 || backgroundType == 10) {\n      canvas.drawCircle(cx,cy,rad - AndroidUtilities.dp(1.5f),backgroundPaint);\n    }\n else     if (backgroundType == 6 || backgroundType == 7) {\n      canvas.drawCircle(cx,cy,rad - AndroidUtilities.dp(1),paint);\n      canvas.drawCircle(cx,cy,rad - AndroidUtilities.dp(1.5f),backgroundPaint);\n    }\n else {\n      canvas.drawCircle(cx,cy,rad,paint);\n    }\n  }\n  paint.setColor(Theme.getColor(checkColorKey));\n  if (backgroundType != 7 && backgroundType != 8 && backgroundType != 9 && backgroundType != 10) {\n    if (backgroundType == 12 || backgroundType == 13) {\n      backgroundPaint.setStyle(Paint.Style.FILL);\n      if (messageDrawable != null && messageDrawable.hasGradient()) {\n        LinearGradient shader=messageDrawable.getGradientShader();\n        Matrix matrix=messageDrawable.getMatrix();\n        matrix.setTranslate(0,-messageDrawable.getTopY() + bounds.top);\n        shader.setLocalMatrix(matrix);\n        backgroundPaint.setShader(shader);\n      }\n else {\n        backgroundPaint.setShader(null);\n      }\n      canvas.drawCircle(cx,cy,(rad - AndroidUtilities.dp(1)) * backgroundAlpha,backgroundPaint);\n      backgroundPaint.setStyle(Paint.Style.STROKE);\n    }\n else     if (backgroundType == 0 || backgroundType == 11) {\n      canvas.drawCircle(cx,cy,rad,backgroundPaint);\n    }\n else {\n      rect.set(cx - outerRad,cy - outerRad,cx + outerRad,cy + outerRad);\n      int startAngle;\n      int sweepAngle;\n      if (backgroundType == 6) {\n        startAngle=0;\n        sweepAngle=(int)(-360 * progress);\n      }\n else       if (backgroundType == 1) {\n        startAngle=-90;\n        sweepAngle=(int)(-270 * progress);\n      }\n else {\n        startAngle=90;\n        sweepAngle=(int)(270 * progress);\n      }\n      if (backgroundType == 6) {\n        int color=Theme.getColor(Theme.key_dialogBackground);\n        int alpha=Color.alpha(color);\n        backgroundPaint.setColor(color);\n        backgroundPaint.setAlpha((int)(alpha * progress));\n        canvas.drawArc(rect,startAngle,sweepAngle,false,backgroundPaint);\n        color=Theme.getColor(Theme.key_chat_attachPhotoBackground);\n        alpha=Color.alpha(color);\n        backgroundPaint.setColor(color);\n        backgroundPaint.setAlpha((int)(alpha * progress));\n      }\n      canvas.drawArc(rect,startAngle,sweepAngle,false,backgroundPaint);\n    }\n  }\n  if (roundProgress > 0) {\n    float checkProgress=progress < 0.5f ? 0.0f : (progress - 0.5f) / 0.5f;\n    if (backgroundType == 9) {\n      paint.setColor(Theme.getColor(background2ColorKey));\n    }\n else     if (backgroundType == 11 || backgroundType == 6 || backgroundType == 7 || backgroundType == 10 || !drawUnchecked && backgroundColorKey != null) {\n      paint.setColor(Theme.getColor(backgroundColorKey));\n    }\n else {\n      paint.setColor(Theme.getColor(enabled ? Theme.key_checkbox : Theme.key_checkboxDisabled));\n    }\n    if (!useDefaultCheck && checkColorKey != null) {\n      checkPaint.setColor(Theme.getColor(checkColorKey));\n    }\n else {\n      checkPaint.setColor(Theme.getColor(Theme.key_checkboxCheck));\n    }\n    if (backgroundType == 12 || backgroundType == 13) {\n      paint.setAlpha((int)(255 * roundProgress));\n      bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad * roundProgress,paint);\n    }\n else {\n      rad-=AndroidUtilities.dp(0.5f);\n      bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad,paint);\n      bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad * (1.0f - roundProgress),eraser);\n    }\n    canvas.drawBitmap(drawBitmap,cx - drawBitmap.getWidth() / 2,cy - drawBitmap.getHeight() / 2,null);\n    if (checkProgress != 0) {\n      if (checkedText != null) {\n        if (textPaint == null) {\n          textPaint=new TextPaint(Paint.ANTI_ALIAS_FLAG);\n          textPaint.setTypeface(AndroidUtilities.getTypeface(\"fonts/rmedium.ttf\"));\n        }\n        final float textSize, y;\nswitch (checkedText.length()) {\ncase 0:case 1:case 2:          textSize=14f;\n        y=18f;\n      break;\ncase 3:    textSize=10f;\n  y=16.5f;\nbreak;\ndefault:textSize=8f;\ny=15.75f;\n}\ntextPaint.setTextSize(AndroidUtilities.dp(textSize));\ntextPaint.setColor(Theme.getColor(checkColorKey));\ncanvas.save();\ncanvas.scale(checkProgress,1.0f,cx,cy);\ncanvas.drawText(checkedText,cx - textPaint.measureText(checkedText) / 2f,AndroidUtilities.dp(y),textPaint);\ncanvas.restore();\n}\n else {\npath.reset();\nfloat scale=backgroundType == 5 ? 0.8f : 1.0f;\nfloat checkSide=AndroidUtilities.dp(9 * scale) * checkProgress;\nfloat smallCheckSide=AndroidUtilities.dp(4 * scale) * checkProgress;\nint x=cx - AndroidUtilities.dp(1.5f);\nint y=cy + AndroidUtilities.dp(4);\nfloat side=(float)Math.sqrt(smallCheckSide * smallCheckSide / 2.0f);\npath.moveTo(x - side,y - side);\npath.lineTo(x,y);\nside=(float)Math.sqrt(checkSide * checkSide / 2.0f);\npath.lineTo(x + side,y - side);\ncanvas.drawPath(path,checkPaint);\n}\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1116,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 9289,
        "startLineNumber" : 248,
        "startColumnNumber" : 4,
        "endLineNumber" : 430,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void draw(Canvas canvas){\n  if (drawBitmap == null) {\n    return;\n  }\n  drawBitmap.eraseColor(0);\n  float rad=AndroidUtilities.dp(size / 2);\n  float outerRad=rad;\n  if (backgroundType == 12 || backgroundType == 13) {\n    rad=outerRad=AndroidUtilities.dp(10);\n  }\n else {\n    if (backgroundType != 0 && backgroundType != 11) {\n      outerRad-=AndroidUtilities.dp(0.2f);\n    }\n  }\n  float roundProgress=progress >= 0.5f ? 1.0f : progress / 0.5f;\n  int cx=bounds.centerX();\n  int cy=bounds.centerY();\n  if (backgroundColorKey != null) {\n    if (drawUnchecked) {\n      if (backgroundType == 12 || backgroundType == 13) {\n        paint.setColor(Theme.getColor(backgroundColorKey));\n        paint.setAlpha((int)(255 * backgroundAlpha));\n        backgroundPaint.setColor(Theme.getColor(checkColorKey));\n      }\n else       if (backgroundType == 6 || backgroundType == 7) {\n        paint.setColor(Theme.getColor(background2ColorKey));\n        backgroundPaint.setColor(Theme.getColor(checkColorKey));\n      }\n else       if (backgroundType == 10) {\n        backgroundPaint.setColor(Theme.getColor(background2ColorKey));\n      }\n else {\n        paint.setColor((Theme.getServiceMessageColor() & 0x00ffffff) | 0x28000000);\n        backgroundPaint.setColor(Theme.getColor(checkColorKey));\n      }\n    }\n else {\n      backgroundPaint.setColor(AndroidUtilities.getOffsetColor(0x00ffffff,Theme.getColor(background2ColorKey != null ? background2ColorKey : checkColorKey),progress,backgroundAlpha));\n    }\n  }\n else {\n    if (drawUnchecked) {\n      paint.setColor(Color.argb((int)(25 * backgroundAlpha),0,0,0));\n      if (backgroundType == 8) {\n        backgroundPaint.setColor(Theme.getColor(background2ColorKey));\n      }\n else {\n        backgroundPaint.setColor(AndroidUtilities.getOffsetColor(0xffffffff,Theme.getColor(checkColorKey),progress,backgroundAlpha));\n      }\n    }\n else {\n      backgroundPaint.setColor(AndroidUtilities.getOffsetColor(0x00ffffff,Theme.getColor(background2ColorKey != null ? background2ColorKey : checkColorKey),progress,backgroundAlpha));\n    }\n  }\n  if (drawUnchecked) {\n    if (backgroundType == 12 || backgroundType == 13) {\n    }\n else     if (backgroundType == 8 || backgroundType == 10) {\n      canvas.drawCircle(cx,cy,rad - AndroidUtilities.dp(1.5f),backgroundPaint);\n    }\n else     if (backgroundType == 6 || backgroundType == 7) {\n      canvas.drawCircle(cx,cy,rad - AndroidUtilities.dp(1),paint);\n      canvas.drawCircle(cx,cy,rad - AndroidUtilities.dp(1.5f),backgroundPaint);\n    }\n else {\n      canvas.drawCircle(cx,cy,rad,paint);\n    }\n  }\n  paint.setColor(Theme.getColor(checkColorKey));\n  if (backgroundType != 7 && backgroundType != 8 && backgroundType != 9 && backgroundType != 10) {\n    if (backgroundType == 12 || backgroundType == 13) {\n      backgroundPaint.setStyle(Paint.Style.FILL);\n      if (messageDrawable != null && messageDrawable.hasGradient()) {\n        LinearGradient shader=messageDrawable.getGradientShader();\n        Matrix matrix=messageDrawable.getMatrix();\n        matrix.setTranslate(0,-messageDrawable.getTopY() + bounds.top);\n        shader.setLocalMatrix(matrix);\n        backgroundPaint.setShader(shader);\n      }\n else {\n        backgroundPaint.setShader(null);\n      }\n      canvas.drawCircle(cx,cy,(rad - AndroidUtilities.dp(1)) * backgroundAlpha,backgroundPaint);\n      backgroundPaint.setStyle(Paint.Style.STROKE);\n    }\n else     if (backgroundType == 0 || backgroundType == 11) {\n      canvas.drawCircle(cx,cy,rad,backgroundPaint);\n    }\n else {\n      rect.set(cx - outerRad,cy - outerRad,cx + outerRad,cy + outerRad);\n      int startAngle;\n      int sweepAngle;\n      if (backgroundType == 6) {\n        startAngle=0;\n        sweepAngle=(int)(-360 * progress);\n      }\n else       if (backgroundType == 1) {\n        startAngle=-90;\n        sweepAngle=(int)(-270 * progress);\n      }\n else {\n        startAngle=90;\n        sweepAngle=(int)(270 * progress);\n      }\n      if (backgroundType == 6) {\n        int color=Theme.getColor(Theme.key_dialogBackground);\n        int alpha=Color.alpha(color);\n        backgroundPaint.setColor(color);\n        backgroundPaint.setAlpha((int)(alpha * progress));\n        canvas.drawArc(rect,startAngle,sweepAngle,false,backgroundPaint);\n        color=Theme.getColor(Theme.key_chat_attachPhotoBackground);\n        alpha=Color.alpha(color);\n        backgroundPaint.setColor(color);\n        backgroundPaint.setAlpha((int)(alpha * progress));\n      }\n      canvas.drawArc(rect,startAngle,sweepAngle,false,backgroundPaint);\n    }\n  }\n  if (roundProgress > 0) {\n    float checkProgress=progress < 0.5f ? 0.0f : (progress - 0.5f) / 0.5f;\n    if (backgroundType == 9) {\n      paint.setColor(Theme.getColor(background2ColorKey));\n    }\n else     if (backgroundType == 11 || backgroundType == 6 || backgroundType == 7 || backgroundType == 10 || !drawUnchecked && backgroundColorKey != null) {\n      paint.setColor(Theme.getColor(backgroundColorKey));\n    }\n else {\n      paint.setColor(Theme.getColor(enabled ? Theme.key_checkbox : Theme.key_checkboxDisabled));\n    }\n    if (!useDefaultCheck && checkColorKey != null) {\n      checkPaint.setColor(Theme.getColor(checkColorKey));\n    }\n else {\n      checkPaint.setColor(Theme.getColor(Theme.key_checkboxCheck));\n    }\n    if (backgroundType == 12 || backgroundType == 13) {\n      paint.setAlpha((int)(255 * roundProgress));\n      bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad * roundProgress,paint);\n    }\n else {\n      rad-=AndroidUtilities.dp(0.5f);\n      bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad,paint);\n      bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad * (1.0f - roundProgress),eraser);\n    }\n    canvas.drawBitmap(drawBitmap,cx - drawBitmap.getWidth() / 2,cy - drawBitmap.getHeight() / 2,null);\n    if (checkProgress != 0) {\n      if (checkedText != null) {\n        if (textPaint == null) {\n          textPaint=new TextPaint(Paint.ANTI_ALIAS_FLAG);\n          textPaint.setTypeface(AndroidUtilities.getTypeface(\"fonts/rmedium.ttf\"));\n        }\n        final float textSize, y;\nswitch (checkedText.length()) {\ncase 0:case 1:case 2:          textSize=14f;\n        y=18f;\n      break;\ncase 3:    textSize=10f;\n  y=16.5f;\nbreak;\ndefault:textSize=8f;\ny=15.75f;\n}\ntextPaint.setTextSize(AndroidUtilities.dp(textSize));\ntextPaint.setColor(Theme.getColor(checkColorKey));\ncanvas.save();\ncanvas.scale(checkProgress,1.0f,cx,cy);\ncanvas.drawText(checkedText,cx - textPaint.measureText(checkedText) / 2f,AndroidUtilities.dp(y),textPaint);\ncanvas.restore();\n}\n else {\npath.reset();\nfloat scale=backgroundType == 5 ? 0.8f : 1.0f;\nfloat checkSide=AndroidUtilities.dp(9 * scale) * checkProgress;\nfloat smallCheckSide=AndroidUtilities.dp(4 * scale) * checkProgress;\nint x=cx - AndroidUtilities.dp(1.5f);\nint y=cy + AndroidUtilities.dp(4);\nfloat side=(float)Math.sqrt(smallCheckSide * smallCheckSide / 2.0f);\npath.moveTo(x - side,y - side);\npath.lineTo(x,y);\nside=(float)Math.sqrt(checkSide * checkSide / 2.0f);\npath.lineTo(x + side,y - side);\ncanvas.drawPath(path,checkPaint);\n}\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1124,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 425,
        "startColumnNumber" : 20,
        "endLineNumber" : 425,
        "endColumnNumber" : 52
      },
      "nodeContext" : "path.lineTo(x + side,y - side);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "float"
  }, {
    "nodeContext" : "side",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 425,
      "startColumnNumber" : 46,
      "endLineNumber" : 425,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 425,
        "startColumnNumber" : 42,
        "endLineNumber" : 425,
        "endColumnNumber" : 50
      },
      "nodeContext" : "y - side",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 425,
        "startColumnNumber" : 20,
        "endLineNumber" : 425,
        "endColumnNumber" : 51
      },
      "nodeContext" : "path.lineTo(x + side,y - side)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 425,
        "startColumnNumber" : 20,
        "endLineNumber" : 425,
        "endColumnNumber" : 52
      },
      "nodeContext" : "path.lineTo(x + side,y - side);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 785,
        "startLineNumber" : 413,
        "startColumnNumber" : 23,
        "endLineNumber" : 427,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  path.reset();\n  float scale=backgroundType == 5 ? 0.8f : 1.0f;\n  float checkSide=AndroidUtilities.dp(9 * scale) * checkProgress;\n  float smallCheckSide=AndroidUtilities.dp(4 * scale) * checkProgress;\n  int x=cx - AndroidUtilities.dp(1.5f);\n  int y=cy + AndroidUtilities.dp(4);\n  float side=(float)Math.sqrt(smallCheckSide * smallCheckSide / 2.0f);\n  path.moveTo(x - side,y - side);\n  path.lineTo(x,y);\n  side=(float)Math.sqrt(checkSide * checkSide / 2.0f);\n  path.lineTo(x + side,y - side);\n  canvas.drawPath(path,checkPaint);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2083,
        "startLineNumber" : 386,
        "startColumnNumber" : 16,
        "endLineNumber" : 427,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (checkedText != null) {\n  if (textPaint == null) {\n    textPaint=new TextPaint(Paint.ANTI_ALIAS_FLAG);\n    textPaint.setTypeface(AndroidUtilities.getTypeface(\"fonts/rmedium.ttf\"));\n  }\n  final float textSize, y;\nswitch (checkedText.length()) {\ncase 0:case 1:case 2:    textSize=14f;\n  y=18f;\nbreak;\ncase 3:textSize=10f;\ny=16.5f;\nbreak;\ndefault:textSize=8f;\ny=15.75f;\n}\ntextPaint.setTextSize(AndroidUtilities.dp(textSize));\ntextPaint.setColor(Theme.getColor(checkColorKey));\ncanvas.save();\ncanvas.scale(checkProgress,1.0f,cx,cy);\ncanvas.drawText(checkedText,cx - textPaint.measureText(checkedText) / 2f,AndroidUtilities.dp(y),textPaint);\ncanvas.restore();\n}\n else {\npath.reset();\nfloat scale=backgroundType == 5 ? 0.8f : 1.0f;\nfloat checkSide=AndroidUtilities.dp(9 * scale) * checkProgress;\nfloat smallCheckSide=AndroidUtilities.dp(4 * scale) * checkProgress;\nint x=cx - AndroidUtilities.dp(1.5f);\nint y=cy + AndroidUtilities.dp(4);\nfloat side=(float)Math.sqrt(smallCheckSide * smallCheckSide / 2.0f);\npath.moveTo(x - side,y - side);\npath.lineTo(x,y);\nside=(float)Math.sqrt(checkSide * checkSide / 2.0f);\npath.lineTo(x + side,y - side);\ncanvas.drawPath(path,checkPaint);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 241,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2115,
        "startLineNumber" : 385,
        "startColumnNumber" : 36,
        "endLineNumber" : 428,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (checkedText != null) {\n    if (textPaint == null) {\n      textPaint=new TextPaint(Paint.ANTI_ALIAS_FLAG);\n      textPaint.setTypeface(AndroidUtilities.getTypeface(\"fonts/rmedium.ttf\"));\n    }\n    final float textSize, y;\nswitch (checkedText.length()) {\ncase 0:case 1:case 2:      textSize=14f;\n    y=18f;\n  break;\ncase 3:textSize=10f;\ny=16.5f;\nbreak;\ndefault:textSize=8f;\ny=15.75f;\n}\ntextPaint.setTextSize(AndroidUtilities.dp(textSize));\ntextPaint.setColor(Theme.getColor(checkColorKey));\ncanvas.save();\ncanvas.scale(checkProgress,1.0f,cx,cy);\ncanvas.drawText(checkedText,cx - textPaint.measureText(checkedText) / 2f,AndroidUtilities.dp(y),textPaint);\ncanvas.restore();\n}\n else {\npath.reset();\nfloat scale=backgroundType == 5 ? 0.8f : 1.0f;\nfloat checkSide=AndroidUtilities.dp(9 * scale) * checkProgress;\nfloat smallCheckSide=AndroidUtilities.dp(4 * scale) * checkProgress;\nint x=cx - AndroidUtilities.dp(1.5f);\nint y=cy + AndroidUtilities.dp(4);\nfloat side=(float)Math.sqrt(smallCheckSide * smallCheckSide / 2.0f);\npath.moveTo(x - side,y - side);\npath.lineTo(x,y);\nside=(float)Math.sqrt(checkSide * checkSide / 2.0f);\npath.lineTo(x + side,y - side);\ncanvas.drawPath(path,checkPaint);\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 242,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2139,
        "startLineNumber" : 385,
        "startColumnNumber" : 12,
        "endLineNumber" : 428,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (checkProgress != 0) {\n  if (checkedText != null) {\n    if (textPaint == null) {\n      textPaint=new TextPaint(Paint.ANTI_ALIAS_FLAG);\n      textPaint.setTypeface(AndroidUtilities.getTypeface(\"fonts/rmedium.ttf\"));\n    }\n    final float textSize, y;\nswitch (checkedText.length()) {\ncase 0:case 1:case 2:      textSize=14f;\n    y=18f;\n  break;\ncase 3:textSize=10f;\ny=16.5f;\nbreak;\ndefault:textSize=8f;\ny=15.75f;\n}\ntextPaint.setTextSize(AndroidUtilities.dp(textSize));\ntextPaint.setColor(Theme.getColor(checkColorKey));\ncanvas.save();\ncanvas.scale(checkProgress,1.0f,cx,cy);\ncanvas.drawText(checkedText,cx - textPaint.measureText(checkedText) / 2f,AndroidUtilities.dp(y),textPaint);\ncanvas.restore();\n}\n else {\npath.reset();\nfloat scale=backgroundType == 5 ? 0.8f : 1.0f;\nfloat checkSide=AndroidUtilities.dp(9 * scale) * checkProgress;\nfloat smallCheckSide=AndroidUtilities.dp(4 * scale) * checkProgress;\nint x=cx - AndroidUtilities.dp(1.5f);\nint y=cy + AndroidUtilities.dp(4);\nfloat side=(float)Math.sqrt(smallCheckSide * smallCheckSide / 2.0f);\npath.moveTo(x - side,y - side);\npath.lineTo(x,y);\nside=(float)Math.sqrt(checkSide * checkSide / 2.0f);\npath.lineTo(x + side,y - side);\ncanvas.drawPath(path,checkPaint);\n}\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 246,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3666,
        "startLineNumber" : 359,
        "startColumnNumber" : 31,
        "endLineNumber" : 429,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  float checkProgress=progress < 0.5f ? 0.0f : (progress - 0.5f) / 0.5f;\n  if (backgroundType == 9) {\n    paint.setColor(Theme.getColor(background2ColorKey));\n  }\n else   if (backgroundType == 11 || backgroundType == 6 || backgroundType == 7 || backgroundType == 10 || !drawUnchecked && backgroundColorKey != null) {\n    paint.setColor(Theme.getColor(backgroundColorKey));\n  }\n else {\n    paint.setColor(Theme.getColor(enabled ? Theme.key_checkbox : Theme.key_checkboxDisabled));\n  }\n  if (!useDefaultCheck && checkColorKey != null) {\n    checkPaint.setColor(Theme.getColor(checkColorKey));\n  }\n else {\n    checkPaint.setColor(Theme.getColor(Theme.key_checkboxCheck));\n  }\n  if (backgroundType == 12 || backgroundType == 13) {\n    paint.setAlpha((int)(255 * roundProgress));\n    bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad * roundProgress,paint);\n  }\n else {\n    rad-=AndroidUtilities.dp(0.5f);\n    bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad,paint);\n    bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad * (1.0f - roundProgress),eraser);\n  }\n  canvas.drawBitmap(drawBitmap,cx - drawBitmap.getWidth() / 2,cy - drawBitmap.getHeight() / 2,null);\n  if (checkProgress != 0) {\n    if (checkedText != null) {\n      if (textPaint == null) {\n        textPaint=new TextPaint(Paint.ANTI_ALIAS_FLAG);\n        textPaint.setTypeface(AndroidUtilities.getTypeface(\"fonts/rmedium.ttf\"));\n      }\n      final float textSize, y;\nswitch (checkedText.length()) {\ncase 0:case 1:case 2:        textSize=14f;\n      y=18f;\n    break;\ncase 3:  textSize=10f;\ny=16.5f;\nbreak;\ndefault:textSize=8f;\ny=15.75f;\n}\ntextPaint.setTextSize(AndroidUtilities.dp(textSize));\ntextPaint.setColor(Theme.getColor(checkColorKey));\ncanvas.save();\ncanvas.scale(checkProgress,1.0f,cx,cy);\ncanvas.drawText(checkedText,cx - textPaint.measureText(checkedText) / 2f,AndroidUtilities.dp(y),textPaint);\ncanvas.restore();\n}\n else {\npath.reset();\nfloat scale=backgroundType == 5 ? 0.8f : 1.0f;\nfloat checkSide=AndroidUtilities.dp(9 * scale) * checkProgress;\nfloat smallCheckSide=AndroidUtilities.dp(4 * scale) * checkProgress;\nint x=cx - AndroidUtilities.dp(1.5f);\nint y=cy + AndroidUtilities.dp(4);\nfloat side=(float)Math.sqrt(smallCheckSide * smallCheckSide / 2.0f);\npath.moveTo(x - side,y - side);\npath.lineTo(x,y);\nside=(float)Math.sqrt(checkSide * checkSide / 2.0f);\npath.lineTo(x + side,y - side);\ncanvas.drawPath(path,checkPaint);\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 452,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3689,
        "startLineNumber" : 359,
        "startColumnNumber" : 8,
        "endLineNumber" : 429,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (roundProgress > 0) {\n  float checkProgress=progress < 0.5f ? 0.0f : (progress - 0.5f) / 0.5f;\n  if (backgroundType == 9) {\n    paint.setColor(Theme.getColor(background2ColorKey));\n  }\n else   if (backgroundType == 11 || backgroundType == 6 || backgroundType == 7 || backgroundType == 10 || !drawUnchecked && backgroundColorKey != null) {\n    paint.setColor(Theme.getColor(backgroundColorKey));\n  }\n else {\n    paint.setColor(Theme.getColor(enabled ? Theme.key_checkbox : Theme.key_checkboxDisabled));\n  }\n  if (!useDefaultCheck && checkColorKey != null) {\n    checkPaint.setColor(Theme.getColor(checkColorKey));\n  }\n else {\n    checkPaint.setColor(Theme.getColor(Theme.key_checkboxCheck));\n  }\n  if (backgroundType == 12 || backgroundType == 13) {\n    paint.setAlpha((int)(255 * roundProgress));\n    bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad * roundProgress,paint);\n  }\n else {\n    rad-=AndroidUtilities.dp(0.5f);\n    bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad,paint);\n    bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad * (1.0f - roundProgress),eraser);\n  }\n  canvas.drawBitmap(drawBitmap,cx - drawBitmap.getWidth() / 2,cy - drawBitmap.getHeight() / 2,null);\n  if (checkProgress != 0) {\n    if (checkedText != null) {\n      if (textPaint == null) {\n        textPaint=new TextPaint(Paint.ANTI_ALIAS_FLAG);\n        textPaint.setTypeface(AndroidUtilities.getTypeface(\"fonts/rmedium.ttf\"));\n      }\n      final float textSize, y;\nswitch (checkedText.length()) {\ncase 0:case 1:case 2:        textSize=14f;\n      y=18f;\n    break;\ncase 3:  textSize=10f;\ny=16.5f;\nbreak;\ndefault:textSize=8f;\ny=15.75f;\n}\ntextPaint.setTextSize(AndroidUtilities.dp(textSize));\ntextPaint.setColor(Theme.getColor(checkColorKey));\ncanvas.save();\ncanvas.scale(checkProgress,1.0f,cx,cy);\ncanvas.drawText(checkedText,cx - textPaint.measureText(checkedText) / 2f,AndroidUtilities.dp(y),textPaint);\ncanvas.restore();\n}\n else {\npath.reset();\nfloat scale=backgroundType == 5 ? 0.8f : 1.0f;\nfloat checkSide=AndroidUtilities.dp(9 * scale) * checkProgress;\nfloat smallCheckSide=AndroidUtilities.dp(4 * scale) * checkProgress;\nint x=cx - AndroidUtilities.dp(1.5f);\nint y=cy + AndroidUtilities.dp(4);\nfloat side=(float)Math.sqrt(smallCheckSide * smallCheckSide / 2.0f);\npath.moveTo(x - side,y - side);\npath.lineTo(x,y);\nside=(float)Math.sqrt(checkSide * checkSide / 2.0f);\npath.lineTo(x + side,y - side);\ncanvas.drawPath(path,checkPaint);\n}\n}\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 456,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 9257,
        "startLineNumber" : 248,
        "startColumnNumber" : 36,
        "endLineNumber" : 430,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (drawBitmap == null) {\n    return;\n  }\n  drawBitmap.eraseColor(0);\n  float rad=AndroidUtilities.dp(size / 2);\n  float outerRad=rad;\n  if (backgroundType == 12 || backgroundType == 13) {\n    rad=outerRad=AndroidUtilities.dp(10);\n  }\n else {\n    if (backgroundType != 0 && backgroundType != 11) {\n      outerRad-=AndroidUtilities.dp(0.2f);\n    }\n  }\n  float roundProgress=progress >= 0.5f ? 1.0f : progress / 0.5f;\n  int cx=bounds.centerX();\n  int cy=bounds.centerY();\n  if (backgroundColorKey != null) {\n    if (drawUnchecked) {\n      if (backgroundType == 12 || backgroundType == 13) {\n        paint.setColor(Theme.getColor(backgroundColorKey));\n        paint.setAlpha((int)(255 * backgroundAlpha));\n        backgroundPaint.setColor(Theme.getColor(checkColorKey));\n      }\n else       if (backgroundType == 6 || backgroundType == 7) {\n        paint.setColor(Theme.getColor(background2ColorKey));\n        backgroundPaint.setColor(Theme.getColor(checkColorKey));\n      }\n else       if (backgroundType == 10) {\n        backgroundPaint.setColor(Theme.getColor(background2ColorKey));\n      }\n else {\n        paint.setColor((Theme.getServiceMessageColor() & 0x00ffffff) | 0x28000000);\n        backgroundPaint.setColor(Theme.getColor(checkColorKey));\n      }\n    }\n else {\n      backgroundPaint.setColor(AndroidUtilities.getOffsetColor(0x00ffffff,Theme.getColor(background2ColorKey != null ? background2ColorKey : checkColorKey),progress,backgroundAlpha));\n    }\n  }\n else {\n    if (drawUnchecked) {\n      paint.setColor(Color.argb((int)(25 * backgroundAlpha),0,0,0));\n      if (backgroundType == 8) {\n        backgroundPaint.setColor(Theme.getColor(background2ColorKey));\n      }\n else {\n        backgroundPaint.setColor(AndroidUtilities.getOffsetColor(0xffffffff,Theme.getColor(checkColorKey),progress,backgroundAlpha));\n      }\n    }\n else {\n      backgroundPaint.setColor(AndroidUtilities.getOffsetColor(0x00ffffff,Theme.getColor(background2ColorKey != null ? background2ColorKey : checkColorKey),progress,backgroundAlpha));\n    }\n  }\n  if (drawUnchecked) {\n    if (backgroundType == 12 || backgroundType == 13) {\n    }\n else     if (backgroundType == 8 || backgroundType == 10) {\n      canvas.drawCircle(cx,cy,rad - AndroidUtilities.dp(1.5f),backgroundPaint);\n    }\n else     if (backgroundType == 6 || backgroundType == 7) {\n      canvas.drawCircle(cx,cy,rad - AndroidUtilities.dp(1),paint);\n      canvas.drawCircle(cx,cy,rad - AndroidUtilities.dp(1.5f),backgroundPaint);\n    }\n else {\n      canvas.drawCircle(cx,cy,rad,paint);\n    }\n  }\n  paint.setColor(Theme.getColor(checkColorKey));\n  if (backgroundType != 7 && backgroundType != 8 && backgroundType != 9 && backgroundType != 10) {\n    if (backgroundType == 12 || backgroundType == 13) {\n      backgroundPaint.setStyle(Paint.Style.FILL);\n      if (messageDrawable != null && messageDrawable.hasGradient()) {\n        LinearGradient shader=messageDrawable.getGradientShader();\n        Matrix matrix=messageDrawable.getMatrix();\n        matrix.setTranslate(0,-messageDrawable.getTopY() + bounds.top);\n        shader.setLocalMatrix(matrix);\n        backgroundPaint.setShader(shader);\n      }\n else {\n        backgroundPaint.setShader(null);\n      }\n      canvas.drawCircle(cx,cy,(rad - AndroidUtilities.dp(1)) * backgroundAlpha,backgroundPaint);\n      backgroundPaint.setStyle(Paint.Style.STROKE);\n    }\n else     if (backgroundType == 0 || backgroundType == 11) {\n      canvas.drawCircle(cx,cy,rad,backgroundPaint);\n    }\n else {\n      rect.set(cx - outerRad,cy - outerRad,cx + outerRad,cy + outerRad);\n      int startAngle;\n      int sweepAngle;\n      if (backgroundType == 6) {\n        startAngle=0;\n        sweepAngle=(int)(-360 * progress);\n      }\n else       if (backgroundType == 1) {\n        startAngle=-90;\n        sweepAngle=(int)(-270 * progress);\n      }\n else {\n        startAngle=90;\n        sweepAngle=(int)(270 * progress);\n      }\n      if (backgroundType == 6) {\n        int color=Theme.getColor(Theme.key_dialogBackground);\n        int alpha=Color.alpha(color);\n        backgroundPaint.setColor(color);\n        backgroundPaint.setAlpha((int)(alpha * progress));\n        canvas.drawArc(rect,startAngle,sweepAngle,false,backgroundPaint);\n        color=Theme.getColor(Theme.key_chat_attachPhotoBackground);\n        alpha=Color.alpha(color);\n        backgroundPaint.setColor(color);\n        backgroundPaint.setAlpha((int)(alpha * progress));\n      }\n      canvas.drawArc(rect,startAngle,sweepAngle,false,backgroundPaint);\n    }\n  }\n  if (roundProgress > 0) {\n    float checkProgress=progress < 0.5f ? 0.0f : (progress - 0.5f) / 0.5f;\n    if (backgroundType == 9) {\n      paint.setColor(Theme.getColor(background2ColorKey));\n    }\n else     if (backgroundType == 11 || backgroundType == 6 || backgroundType == 7 || backgroundType == 10 || !drawUnchecked && backgroundColorKey != null) {\n      paint.setColor(Theme.getColor(backgroundColorKey));\n    }\n else {\n      paint.setColor(Theme.getColor(enabled ? Theme.key_checkbox : Theme.key_checkboxDisabled));\n    }\n    if (!useDefaultCheck && checkColorKey != null) {\n      checkPaint.setColor(Theme.getColor(checkColorKey));\n    }\n else {\n      checkPaint.setColor(Theme.getColor(Theme.key_checkboxCheck));\n    }\n    if (backgroundType == 12 || backgroundType == 13) {\n      paint.setAlpha((int)(255 * roundProgress));\n      bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad * roundProgress,paint);\n    }\n else {\n      rad-=AndroidUtilities.dp(0.5f);\n      bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad,paint);\n      bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad * (1.0f - roundProgress),eraser);\n    }\n    canvas.drawBitmap(drawBitmap,cx - drawBitmap.getWidth() / 2,cy - drawBitmap.getHeight() / 2,null);\n    if (checkProgress != 0) {\n      if (checkedText != null) {\n        if (textPaint == null) {\n          textPaint=new TextPaint(Paint.ANTI_ALIAS_FLAG);\n          textPaint.setTypeface(AndroidUtilities.getTypeface(\"fonts/rmedium.ttf\"));\n        }\n        final float textSize, y;\nswitch (checkedText.length()) {\ncase 0:case 1:case 2:          textSize=14f;\n        y=18f;\n      break;\ncase 3:    textSize=10f;\n  y=16.5f;\nbreak;\ndefault:textSize=8f;\ny=15.75f;\n}\ntextPaint.setTextSize(AndroidUtilities.dp(textSize));\ntextPaint.setColor(Theme.getColor(checkColorKey));\ncanvas.save();\ncanvas.scale(checkProgress,1.0f,cx,cy);\ncanvas.drawText(checkedText,cx - textPaint.measureText(checkedText) / 2f,AndroidUtilities.dp(y),textPaint);\ncanvas.restore();\n}\n else {\npath.reset();\nfloat scale=backgroundType == 5 ? 0.8f : 1.0f;\nfloat checkSide=AndroidUtilities.dp(9 * scale) * checkProgress;\nfloat smallCheckSide=AndroidUtilities.dp(4 * scale) * checkProgress;\nint x=cx - AndroidUtilities.dp(1.5f);\nint y=cy + AndroidUtilities.dp(4);\nfloat side=(float)Math.sqrt(smallCheckSide * smallCheckSide / 2.0f);\npath.moveTo(x - side,y - side);\npath.lineTo(x,y);\nside=(float)Math.sqrt(checkSide * checkSide / 2.0f);\npath.lineTo(x + side,y - side);\ncanvas.drawPath(path,checkPaint);\n}\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1116,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 9289,
        "startLineNumber" : 248,
        "startColumnNumber" : 4,
        "endLineNumber" : 430,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void draw(Canvas canvas){\n  if (drawBitmap == null) {\n    return;\n  }\n  drawBitmap.eraseColor(0);\n  float rad=AndroidUtilities.dp(size / 2);\n  float outerRad=rad;\n  if (backgroundType == 12 || backgroundType == 13) {\n    rad=outerRad=AndroidUtilities.dp(10);\n  }\n else {\n    if (backgroundType != 0 && backgroundType != 11) {\n      outerRad-=AndroidUtilities.dp(0.2f);\n    }\n  }\n  float roundProgress=progress >= 0.5f ? 1.0f : progress / 0.5f;\n  int cx=bounds.centerX();\n  int cy=bounds.centerY();\n  if (backgroundColorKey != null) {\n    if (drawUnchecked) {\n      if (backgroundType == 12 || backgroundType == 13) {\n        paint.setColor(Theme.getColor(backgroundColorKey));\n        paint.setAlpha((int)(255 * backgroundAlpha));\n        backgroundPaint.setColor(Theme.getColor(checkColorKey));\n      }\n else       if (backgroundType == 6 || backgroundType == 7) {\n        paint.setColor(Theme.getColor(background2ColorKey));\n        backgroundPaint.setColor(Theme.getColor(checkColorKey));\n      }\n else       if (backgroundType == 10) {\n        backgroundPaint.setColor(Theme.getColor(background2ColorKey));\n      }\n else {\n        paint.setColor((Theme.getServiceMessageColor() & 0x00ffffff) | 0x28000000);\n        backgroundPaint.setColor(Theme.getColor(checkColorKey));\n      }\n    }\n else {\n      backgroundPaint.setColor(AndroidUtilities.getOffsetColor(0x00ffffff,Theme.getColor(background2ColorKey != null ? background2ColorKey : checkColorKey),progress,backgroundAlpha));\n    }\n  }\n else {\n    if (drawUnchecked) {\n      paint.setColor(Color.argb((int)(25 * backgroundAlpha),0,0,0));\n      if (backgroundType == 8) {\n        backgroundPaint.setColor(Theme.getColor(background2ColorKey));\n      }\n else {\n        backgroundPaint.setColor(AndroidUtilities.getOffsetColor(0xffffffff,Theme.getColor(checkColorKey),progress,backgroundAlpha));\n      }\n    }\n else {\n      backgroundPaint.setColor(AndroidUtilities.getOffsetColor(0x00ffffff,Theme.getColor(background2ColorKey != null ? background2ColorKey : checkColorKey),progress,backgroundAlpha));\n    }\n  }\n  if (drawUnchecked) {\n    if (backgroundType == 12 || backgroundType == 13) {\n    }\n else     if (backgroundType == 8 || backgroundType == 10) {\n      canvas.drawCircle(cx,cy,rad - AndroidUtilities.dp(1.5f),backgroundPaint);\n    }\n else     if (backgroundType == 6 || backgroundType == 7) {\n      canvas.drawCircle(cx,cy,rad - AndroidUtilities.dp(1),paint);\n      canvas.drawCircle(cx,cy,rad - AndroidUtilities.dp(1.5f),backgroundPaint);\n    }\n else {\n      canvas.drawCircle(cx,cy,rad,paint);\n    }\n  }\n  paint.setColor(Theme.getColor(checkColorKey));\n  if (backgroundType != 7 && backgroundType != 8 && backgroundType != 9 && backgroundType != 10) {\n    if (backgroundType == 12 || backgroundType == 13) {\n      backgroundPaint.setStyle(Paint.Style.FILL);\n      if (messageDrawable != null && messageDrawable.hasGradient()) {\n        LinearGradient shader=messageDrawable.getGradientShader();\n        Matrix matrix=messageDrawable.getMatrix();\n        matrix.setTranslate(0,-messageDrawable.getTopY() + bounds.top);\n        shader.setLocalMatrix(matrix);\n        backgroundPaint.setShader(shader);\n      }\n else {\n        backgroundPaint.setShader(null);\n      }\n      canvas.drawCircle(cx,cy,(rad - AndroidUtilities.dp(1)) * backgroundAlpha,backgroundPaint);\n      backgroundPaint.setStyle(Paint.Style.STROKE);\n    }\n else     if (backgroundType == 0 || backgroundType == 11) {\n      canvas.drawCircle(cx,cy,rad,backgroundPaint);\n    }\n else {\n      rect.set(cx - outerRad,cy - outerRad,cx + outerRad,cy + outerRad);\n      int startAngle;\n      int sweepAngle;\n      if (backgroundType == 6) {\n        startAngle=0;\n        sweepAngle=(int)(-360 * progress);\n      }\n else       if (backgroundType == 1) {\n        startAngle=-90;\n        sweepAngle=(int)(-270 * progress);\n      }\n else {\n        startAngle=90;\n        sweepAngle=(int)(270 * progress);\n      }\n      if (backgroundType == 6) {\n        int color=Theme.getColor(Theme.key_dialogBackground);\n        int alpha=Color.alpha(color);\n        backgroundPaint.setColor(color);\n        backgroundPaint.setAlpha((int)(alpha * progress));\n        canvas.drawArc(rect,startAngle,sweepAngle,false,backgroundPaint);\n        color=Theme.getColor(Theme.key_chat_attachPhotoBackground);\n        alpha=Color.alpha(color);\n        backgroundPaint.setColor(color);\n        backgroundPaint.setAlpha((int)(alpha * progress));\n      }\n      canvas.drawArc(rect,startAngle,sweepAngle,false,backgroundPaint);\n    }\n  }\n  if (roundProgress > 0) {\n    float checkProgress=progress < 0.5f ? 0.0f : (progress - 0.5f) / 0.5f;\n    if (backgroundType == 9) {\n      paint.setColor(Theme.getColor(background2ColorKey));\n    }\n else     if (backgroundType == 11 || backgroundType == 6 || backgroundType == 7 || backgroundType == 10 || !drawUnchecked && backgroundColorKey != null) {\n      paint.setColor(Theme.getColor(backgroundColorKey));\n    }\n else {\n      paint.setColor(Theme.getColor(enabled ? Theme.key_checkbox : Theme.key_checkboxDisabled));\n    }\n    if (!useDefaultCheck && checkColorKey != null) {\n      checkPaint.setColor(Theme.getColor(checkColorKey));\n    }\n else {\n      checkPaint.setColor(Theme.getColor(Theme.key_checkboxCheck));\n    }\n    if (backgroundType == 12 || backgroundType == 13) {\n      paint.setAlpha((int)(255 * roundProgress));\n      bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad * roundProgress,paint);\n    }\n else {\n      rad-=AndroidUtilities.dp(0.5f);\n      bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad,paint);\n      bitmapCanvas.drawCircle(drawBitmap.getWidth() / 2,drawBitmap.getHeight() / 2,rad * (1.0f - roundProgress),eraser);\n    }\n    canvas.drawBitmap(drawBitmap,cx - drawBitmap.getWidth() / 2,cy - drawBitmap.getHeight() / 2,null);\n    if (checkProgress != 0) {\n      if (checkedText != null) {\n        if (textPaint == null) {\n          textPaint=new TextPaint(Paint.ANTI_ALIAS_FLAG);\n          textPaint.setTypeface(AndroidUtilities.getTypeface(\"fonts/rmedium.ttf\"));\n        }\n        final float textSize, y;\nswitch (checkedText.length()) {\ncase 0:case 1:case 2:          textSize=14f;\n        y=18f;\n      break;\ncase 3:    textSize=10f;\n  y=16.5f;\nbreak;\ndefault:textSize=8f;\ny=15.75f;\n}\ntextPaint.setTextSize(AndroidUtilities.dp(textSize));\ntextPaint.setColor(Theme.getColor(checkColorKey));\ncanvas.save();\ncanvas.scale(checkProgress,1.0f,cx,cy);\ncanvas.drawText(checkedText,cx - textPaint.measureText(checkedText) / 2f,AndroidUtilities.dp(y),textPaint);\ncanvas.restore();\n}\n else {\npath.reset();\nfloat scale=backgroundType == 5 ? 0.8f : 1.0f;\nfloat checkSide=AndroidUtilities.dp(9 * scale) * checkProgress;\nfloat smallCheckSide=AndroidUtilities.dp(4 * scale) * checkProgress;\nint x=cx - AndroidUtilities.dp(1.5f);\nint y=cy + AndroidUtilities.dp(4);\nfloat side=(float)Math.sqrt(smallCheckSide * smallCheckSide / 2.0f);\npath.moveTo(x - side,y - side);\npath.lineTo(x,y);\nside=(float)Math.sqrt(checkSide * checkSide / 2.0f);\npath.lineTo(x + side,y - side);\ncanvas.drawPath(path,checkPaint);\n}\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1124,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 425,
        "startColumnNumber" : 20,
        "endLineNumber" : 425,
        "endColumnNumber" : 52
      },
      "nodeContext" : "path.lineTo(x + side,y - side);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 422,
    "startColumnNumber" : 36,
    "endLineNumber" : 422,
    "endColumnNumber" : 40
  }, {
    "charLength" : 4,
    "startLineNumber" : 422,
    "startColumnNumber" : 46,
    "endLineNumber" : 422,
    "endColumnNumber" : 50
  }, {
    "charLength" : 4,
    "startLineNumber" : 425,
    "startColumnNumber" : 36,
    "endLineNumber" : 425,
    "endColumnNumber" : 40
  }, {
    "charLength" : 4,
    "startLineNumber" : 425,
    "startColumnNumber" : 46,
    "endLineNumber" : 425,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 1
  } ]
}