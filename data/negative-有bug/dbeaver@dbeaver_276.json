{
  "id" : 276,
  "expression" : "new DBeaverIdentityRepository(this,getAgentData())",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.net.ssh.jsch/src/org/jkiss/dbeaver/model/net/ssh/SSHImplementationJsch.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new DBeaverIdentityRepository(this,getAgentData())",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 51,
      "startLineNumber" : 63,
      "startColumnNumber" : 56,
      "endLineNumber" : 63,
      "endColumnNumber" : 107
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 63,
        "startColumnNumber" : 35,
        "endLineNumber" : 63,
        "endColumnNumber" : 107
      },
      "nodeContext" : "identityRepository=new DBeaverIdentityRepository(this,getAgentData())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 63,
        "startColumnNumber" : 16,
        "endLineNumber" : 63,
        "endColumnNumber" : 108
      },
      "nodeContext" : "IdentityRepository identityRepository=new DBeaverIdentityRepository(this,getAgentData());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 246,
        "startLineNumber" : 61,
        "startColumnNumber" : 51,
        "endLineNumber" : 65,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  log.debug(\"Creating identityRepository\");\n  IdentityRepository identityRepository=new DBeaverIdentityRepository(this,getAgentData());\n  jsch.setIdentityRepository(identityRepository);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 278,
        "startLineNumber" : 61,
        "startColumnNumber" : 19,
        "endLineNumber" : 65,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (authType == AuthType.AGENT) {\n  log.debug(\"Creating identityRepository\");\n  IdentityRepository identityRepository=new DBeaverIdentityRepository(this,getAgentData());\n  jsch.setIdentityRepository(identityRepository);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 28,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 450,
        "startLineNumber" : 59,
        "startColumnNumber" : 12,
        "endLineNumber" : 65,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (authType == AuthType.PUBLIC_KEY) {\n  addIdentityKey(monitor,configuration.getDataSource(),privKeyFile,configuration.getPassword());\n}\n else if (authType == AuthType.AGENT) {\n  log.debug(\"Creating identityRepository\");\n  IdentityRepository identityRepository=new DBeaverIdentityRepository(this,getAgentData());\n  jsch.setIdentityRepository(identityRepository);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 46,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2676,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 104,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (jsch == null) {\n    jsch=new JSch();\n    JSch.setLogger(new LoggerProxy());\n  }\n  String autoTypeString=CommonUtils.toString(configuration.getProperty(SSHConstants.PROP_AUTH_TYPE));\n  AuthType authType=CommonUtils.isEmpty(autoTypeString) ? (privKeyFile == null ? AuthType.PASSWORD : AuthType.PUBLIC_KEY) : CommonUtils.valueOf(AuthType.class,autoTypeString,AuthType.PASSWORD);\n  if (authType == AuthType.PUBLIC_KEY) {\n    addIdentityKey(monitor,configuration.getDataSource(),privKeyFile,configuration.getPassword());\n  }\n else   if (authType == AuthType.AGENT) {\n    log.debug(\"Creating identityRepository\");\n    IdentityRepository identityRepository=new DBeaverIdentityRepository(this,getAgentData());\n    jsch.setIdentityRepository(identityRepository);\n  }\n  log.debug(\"Instantiate SSH tunnel\");\n  session=jsch.getSession(configuration.getUserName(),sshHost,sshPortNum);\n  session.setConfig(\"StrictHostKeyChecking\",\"no\");\n  if (authType == AuthType.PASSWORD) {\n    session.setConfig(\"PreferredAuthentications\",\"password,keyboard-interactive\");\n  }\n else {\n    session.setConfig(\"PreferredAuthentications\",\"publickey,keyboard-interactive,password\");\n  }\n  session.setConfig(\"ConnectTimeout\",String.valueOf(connectTimeout));\n  UserInfo userInfo=null;\n  JSCHUserInfoPromptProvider promptProvider=GeneralUtils.adapt(this,JSCHUserInfoPromptProvider.class);\n  if (promptProvider != null) {\n    userInfo=promptProvider.createUserInfoPrompt(configuration,session);\n  }\n  if (userInfo == null) {\n    userInfo=new UIUserInfo(configuration);\n  }\n  session.setUserInfo(userInfo);\n  if (aliveInterval != 0) {\n    session.setServerAliveInterval(aliveInterval);\n  }\n  log.debug(\"Connect to tunnel host\");\n  session.connect(connectTimeout);\n  try {\n    if (CommonUtils.isEmpty(sshLocalHost)) {\n      session.setPortForwardingL(sshLocalPort,sshRemoteHost,sshRemotePort);\n    }\n else {\n      session.setPortForwardingL(sshLocalHost,sshLocalPort,sshRemoteHost,sshRemotePort);\n    }\n  }\n catch (  JSchException e) {\n    closeTunnel(monitor);\n    throw e;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 265,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2781,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 106,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  if (jsch == null) {\n    jsch=new JSch();\n    JSch.setLogger(new LoggerProxy());\n  }\n  String autoTypeString=CommonUtils.toString(configuration.getProperty(SSHConstants.PROP_AUTH_TYPE));\n  AuthType authType=CommonUtils.isEmpty(autoTypeString) ? (privKeyFile == null ? AuthType.PASSWORD : AuthType.PUBLIC_KEY) : CommonUtils.valueOf(AuthType.class,autoTypeString,AuthType.PASSWORD);\n  if (authType == AuthType.PUBLIC_KEY) {\n    addIdentityKey(monitor,configuration.getDataSource(),privKeyFile,configuration.getPassword());\n  }\n else   if (authType == AuthType.AGENT) {\n    log.debug(\"Creating identityRepository\");\n    IdentityRepository identityRepository=new DBeaverIdentityRepository(this,getAgentData());\n    jsch.setIdentityRepository(identityRepository);\n  }\n  log.debug(\"Instantiate SSH tunnel\");\n  session=jsch.getSession(configuration.getUserName(),sshHost,sshPortNum);\n  session.setConfig(\"StrictHostKeyChecking\",\"no\");\n  if (authType == AuthType.PASSWORD) {\n    session.setConfig(\"PreferredAuthentications\",\"password,keyboard-interactive\");\n  }\n else {\n    session.setConfig(\"PreferredAuthentications\",\"publickey,keyboard-interactive,password\");\n  }\n  session.setConfig(\"ConnectTimeout\",String.valueOf(connectTimeout));\n  UserInfo userInfo=null;\n  JSCHUserInfoPromptProvider promptProvider=GeneralUtils.adapt(this,JSCHUserInfoPromptProvider.class);\n  if (promptProvider != null) {\n    userInfo=promptProvider.createUserInfoPrompt(configuration,session);\n  }\n  if (userInfo == null) {\n    userInfo=new UIUserInfo(configuration);\n  }\n  session.setUserInfo(userInfo);\n  if (aliveInterval != 0) {\n    session.setServerAliveInterval(aliveInterval);\n  }\n  log.debug(\"Connect to tunnel host\");\n  session.connect(connectTimeout);\n  try {\n    if (CommonUtils.isEmpty(sshLocalHost)) {\n      session.setPortForwardingL(sshLocalPort,sshRemoteHost,sshRemotePort);\n    }\n else {\n      session.setPortForwardingL(sshLocalHost,sshLocalPort,sshRemoteHost,sshRemotePort);\n    }\n  }\n catch (  JSchException e) {\n    closeTunnel(monitor);\n    throw e;\n  }\n}\n catch (JSchException e) {\n  throw new DBException(\"Cannot establish tunnel\",e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 278,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2797,
        "startLineNumber" : 48,
        "startColumnNumber" : 312,
        "endLineNumber" : 107,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    if (jsch == null) {\n      jsch=new JSch();\n      JSch.setLogger(new LoggerProxy());\n    }\n    String autoTypeString=CommonUtils.toString(configuration.getProperty(SSHConstants.PROP_AUTH_TYPE));\n    AuthType authType=CommonUtils.isEmpty(autoTypeString) ? (privKeyFile == null ? AuthType.PASSWORD : AuthType.PUBLIC_KEY) : CommonUtils.valueOf(AuthType.class,autoTypeString,AuthType.PASSWORD);\n    if (authType == AuthType.PUBLIC_KEY) {\n      addIdentityKey(monitor,configuration.getDataSource(),privKeyFile,configuration.getPassword());\n    }\n else     if (authType == AuthType.AGENT) {\n      log.debug(\"Creating identityRepository\");\n      IdentityRepository identityRepository=new DBeaverIdentityRepository(this,getAgentData());\n      jsch.setIdentityRepository(identityRepository);\n    }\n    log.debug(\"Instantiate SSH tunnel\");\n    session=jsch.getSession(configuration.getUserName(),sshHost,sshPortNum);\n    session.setConfig(\"StrictHostKeyChecking\",\"no\");\n    if (authType == AuthType.PASSWORD) {\n      session.setConfig(\"PreferredAuthentications\",\"password,keyboard-interactive\");\n    }\n else {\n      session.setConfig(\"PreferredAuthentications\",\"publickey,keyboard-interactive,password\");\n    }\n    session.setConfig(\"ConnectTimeout\",String.valueOf(connectTimeout));\n    UserInfo userInfo=null;\n    JSCHUserInfoPromptProvider promptProvider=GeneralUtils.adapt(this,JSCHUserInfoPromptProvider.class);\n    if (promptProvider != null) {\n      userInfo=promptProvider.createUserInfoPrompt(configuration,session);\n    }\n    if (userInfo == null) {\n      userInfo=new UIUserInfo(configuration);\n    }\n    session.setUserInfo(userInfo);\n    if (aliveInterval != 0) {\n      session.setServerAliveInterval(aliveInterval);\n    }\n    log.debug(\"Connect to tunnel host\");\n    session.connect(connectTimeout);\n    try {\n      if (CommonUtils.isEmpty(sshLocalHost)) {\n        session.setPortForwardingL(sshLocalPort,sshRemoteHost,sshRemotePort);\n      }\n else {\n        session.setPortForwardingL(sshLocalHost,sshLocalPort,sshRemoteHost,sshRemotePort);\n      }\n    }\n catch (    JSchException e) {\n      closeTunnel(monitor);\n      throw e;\n    }\n  }\n catch (  JSchException e) {\n    throw new DBException(\"Cannot establish tunnel\",e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 279,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3119,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 107,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected synchronized void setupTunnel(DBRProgressMonitor monitor,DBWHandlerConfiguration configuration,String sshHost,int aliveInterval,int sshPortNum,File privKeyFile,int connectTimeout,String sshLocalHost,int sshLocalPort,String sshRemoteHost,int sshRemotePort) throws DBException, IOException {\n  try {\n    if (jsch == null) {\n      jsch=new JSch();\n      JSch.setLogger(new LoggerProxy());\n    }\n    String autoTypeString=CommonUtils.toString(configuration.getProperty(SSHConstants.PROP_AUTH_TYPE));\n    AuthType authType=CommonUtils.isEmpty(autoTypeString) ? (privKeyFile == null ? AuthType.PASSWORD : AuthType.PUBLIC_KEY) : CommonUtils.valueOf(AuthType.class,autoTypeString,AuthType.PASSWORD);\n    if (authType == AuthType.PUBLIC_KEY) {\n      addIdentityKey(monitor,configuration.getDataSource(),privKeyFile,configuration.getPassword());\n    }\n else     if (authType == AuthType.AGENT) {\n      log.debug(\"Creating identityRepository\");\n      IdentityRepository identityRepository=new DBeaverIdentityRepository(this,getAgentData());\n      jsch.setIdentityRepository(identityRepository);\n    }\n    log.debug(\"Instantiate SSH tunnel\");\n    session=jsch.getSession(configuration.getUserName(),sshHost,sshPortNum);\n    session.setConfig(\"StrictHostKeyChecking\",\"no\");\n    if (authType == AuthType.PASSWORD) {\n      session.setConfig(\"PreferredAuthentications\",\"password,keyboard-interactive\");\n    }\n else {\n      session.setConfig(\"PreferredAuthentications\",\"publickey,keyboard-interactive,password\");\n    }\n    session.setConfig(\"ConnectTimeout\",String.valueOf(connectTimeout));\n    UserInfo userInfo=null;\n    JSCHUserInfoPromptProvider promptProvider=GeneralUtils.adapt(this,JSCHUserInfoPromptProvider.class);\n    if (promptProvider != null) {\n      userInfo=promptProvider.createUserInfoPrompt(configuration,session);\n    }\n    if (userInfo == null) {\n      userInfo=new UIUserInfo(configuration);\n    }\n    session.setUserInfo(userInfo);\n    if (aliveInterval != 0) {\n      session.setServerAliveInterval(aliveInterval);\n    }\n    log.debug(\"Connect to tunnel host\");\n    session.connect(connectTimeout);\n    try {\n      if (CommonUtils.isEmpty(sshLocalHost)) {\n        session.setPortForwardingL(sshLocalPort,sshRemoteHost,sshRemotePort);\n      }\n else {\n        session.setPortForwardingL(sshLocalHost,sshLocalPort,sshRemoteHost,sshRemotePort);\n      }\n    }\n catch (    JSchException e) {\n      closeTunnel(monitor);\n      throw e;\n    }\n  }\n catch (  JSchException e) {\n    throw new DBException(\"Cannot establish tunnel\",e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 329,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 63,
        "startColumnNumber" : 16,
        "endLineNumber" : 63,
        "endColumnNumber" : 108
      },
      "nodeContext" : "IdentityRepository identityRepository=new DBeaverIdentityRepository(this,getAgentData());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "org.jkiss.dbeaver.model.net.ssh.DBeaverIdentityRepository"
  } ],
  "positionList" : [ {
    "charLength" : 51,
    "startLineNumber" : 63,
    "startColumnNumber" : 56,
    "endLineNumber" : 63,
    "endColumnNumber" : 107
  } ],
  "layoutRelationDataList" : [ ]
}