{
  "id" : 413,
  "expression" : "\"jdbc:postgresql:\"",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "7815611a659da4cc8d5443f5ef4c10ca0d937582",
  "filePath" : "/mybatis-plus-support/src/main/java/com/baomidou/mybatisplus/toolkit/JdbcUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"jdbc:postgresql:\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 59,
      "startColumnNumber" : 38,
      "endLineNumber" : 59,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 59,
        "startColumnNumber" : 19,
        "endLineNumber" : 59,
        "endColumnNumber" : 57
      },
      "nodeContext" : "jdbcUrl.startsWith(\"jdbc:postgresql:\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 59,
        "startColumnNumber" : 19,
        "endLineNumber" : 59,
        "endColumnNumber" : 108
      },
      "nodeContext" : "jdbcUrl.startsWith(\"jdbc:postgresql:\") || jdbcUrl.startsWith(\"jdbc:log4jdbc:postgresql:\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 761,
        "startLineNumber" : 59,
        "startColumnNumber" : 15,
        "endLineNumber" : 72,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (jdbcUrl.startsWith(\"jdbc:postgresql:\") || jdbcUrl.startsWith(\"jdbc:log4jdbc:postgresql:\")) {\n  return DBType.POSTGRE;\n}\n else if (jdbcUrl.startsWith(\"jdbc:hsqldb:\") || jdbcUrl.startsWith(\"jdbc:log4jdbc:hsqldb:\")) {\n  return DBType.HSQL;\n}\n else if (jdbcUrl.startsWith(\"jdbc:db2:\")) {\n  return DBType.DB2;\n}\n else if (jdbcUrl.startsWith(\"jdbc:sqlite:\")) {\n  return DBType.SQLITE;\n}\n else if (jdbcUrl.startsWith(\"jdbc:h2:\") || jdbcUrl.startsWith(\"jdbc:log4jdbc:h2:\")) {\n  return DBType.H2;\n}\n else {\n  logger.warn(\"The jdbcUrl is \" + jdbcUrl + \", Mybatis Plus Cannot Read Database type or The Database's Not Supported!\");\n  return DBType.OTHER;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 78,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 862,
        "startLineNumber" : 57,
        "startColumnNumber" : 15,
        "endLineNumber" : 72,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (jdbcUrl.startsWith(\"jdbc:sqlserver2012:\")) {\n  return DBType.SQLSERVER;\n}\n else if (jdbcUrl.startsWith(\"jdbc:postgresql:\") || jdbcUrl.startsWith(\"jdbc:log4jdbc:postgresql:\")) {\n  return DBType.POSTGRE;\n}\n else if (jdbcUrl.startsWith(\"jdbc:hsqldb:\") || jdbcUrl.startsWith(\"jdbc:log4jdbc:hsqldb:\")) {\n  return DBType.HSQL;\n}\n else if (jdbcUrl.startsWith(\"jdbc:db2:\")) {\n  return DBType.DB2;\n}\n else if (jdbcUrl.startsWith(\"jdbc:sqlite:\")) {\n  return DBType.SQLITE;\n}\n else if (jdbcUrl.startsWith(\"jdbc:h2:\") || jdbcUrl.startsWith(\"jdbc:log4jdbc:h2:\")) {\n  return DBType.H2;\n}\n else {\n  logger.warn(\"The jdbcUrl is \" + jdbcUrl + \", Mybatis Plus Cannot Read Database type or The Database's Not Supported!\");\n  return DBType.OTHER;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 88,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1004,
        "startLineNumber" : 55,
        "startColumnNumber" : 15,
        "endLineNumber" : 72,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (jdbcUrl.startsWith(\"jdbc:sqlserver:\") || jdbcUrl.startsWith(\"jdbc:microsoft:\")) {\n  return DBType.SQLSERVER2005;\n}\n else if (jdbcUrl.startsWith(\"jdbc:sqlserver2012:\")) {\n  return DBType.SQLSERVER;\n}\n else if (jdbcUrl.startsWith(\"jdbc:postgresql:\") || jdbcUrl.startsWith(\"jdbc:log4jdbc:postgresql:\")) {\n  return DBType.POSTGRE;\n}\n else if (jdbcUrl.startsWith(\"jdbc:hsqldb:\") || jdbcUrl.startsWith(\"jdbc:log4jdbc:hsqldb:\")) {\n  return DBType.HSQL;\n}\n else if (jdbcUrl.startsWith(\"jdbc:db2:\")) {\n  return DBType.DB2;\n}\n else if (jdbcUrl.startsWith(\"jdbc:sqlite:\")) {\n  return DBType.SQLITE;\n}\n else if (jdbcUrl.startsWith(\"jdbc:h2:\") || jdbcUrl.startsWith(\"jdbc:log4jdbc:h2:\")) {\n  return DBType.H2;\n}\n else {\n  logger.warn(\"The jdbcUrl is \" + jdbcUrl + \", Mybatis Plus Cannot Read Database type or The Database's Not Supported!\");\n  return DBType.OTHER;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 103,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1142,
        "startLineNumber" : 53,
        "startColumnNumber" : 15,
        "endLineNumber" : 72,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (jdbcUrl.startsWith(\"jdbc:oracle:\") || jdbcUrl.startsWith(\"jdbc:log4jdbc:oracle:\")) {\n  return DBType.ORACLE;\n}\n else if (jdbcUrl.startsWith(\"jdbc:sqlserver:\") || jdbcUrl.startsWith(\"jdbc:microsoft:\")) {\n  return DBType.SQLSERVER2005;\n}\n else if (jdbcUrl.startsWith(\"jdbc:sqlserver2012:\")) {\n  return DBType.SQLSERVER;\n}\n else if (jdbcUrl.startsWith(\"jdbc:postgresql:\") || jdbcUrl.startsWith(\"jdbc:log4jdbc:postgresql:\")) {\n  return DBType.POSTGRE;\n}\n else if (jdbcUrl.startsWith(\"jdbc:hsqldb:\") || jdbcUrl.startsWith(\"jdbc:log4jdbc:hsqldb:\")) {\n  return DBType.HSQL;\n}\n else if (jdbcUrl.startsWith(\"jdbc:db2:\")) {\n  return DBType.DB2;\n}\n else if (jdbcUrl.startsWith(\"jdbc:sqlite:\")) {\n  return DBType.SQLITE;\n}\n else if (jdbcUrl.startsWith(\"jdbc:h2:\") || jdbcUrl.startsWith(\"jdbc:log4jdbc:h2:\")) {\n  return DBType.H2;\n}\n else {\n  logger.warn(\"The jdbcUrl is \" + jdbcUrl + \", Mybatis Plus Cannot Read Database type or The Database's Not Supported!\");\n  return DBType.OTHER;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 118,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1235,
        "startLineNumber" : 51,
        "startColumnNumber" : 15,
        "endLineNumber" : 72,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (jdbcUrl.startsWith(\"jdbc:mariadb:\")) {\n  return DBType.MARIADB;\n}\n else if (jdbcUrl.startsWith(\"jdbc:oracle:\") || jdbcUrl.startsWith(\"jdbc:log4jdbc:oracle:\")) {\n  return DBType.ORACLE;\n}\n else if (jdbcUrl.startsWith(\"jdbc:sqlserver:\") || jdbcUrl.startsWith(\"jdbc:microsoft:\")) {\n  return DBType.SQLSERVER2005;\n}\n else if (jdbcUrl.startsWith(\"jdbc:sqlserver2012:\")) {\n  return DBType.SQLSERVER;\n}\n else if (jdbcUrl.startsWith(\"jdbc:postgresql:\") || jdbcUrl.startsWith(\"jdbc:log4jdbc:postgresql:\")) {\n  return DBType.POSTGRE;\n}\n else if (jdbcUrl.startsWith(\"jdbc:hsqldb:\") || jdbcUrl.startsWith(\"jdbc:log4jdbc:hsqldb:\")) {\n  return DBType.HSQL;\n}\n else if (jdbcUrl.startsWith(\"jdbc:db2:\")) {\n  return DBType.DB2;\n}\n else if (jdbcUrl.startsWith(\"jdbc:sqlite:\")) {\n  return DBType.SQLITE;\n}\n else if (jdbcUrl.startsWith(\"jdbc:h2:\") || jdbcUrl.startsWith(\"jdbc:log4jdbc:h2:\")) {\n  return DBType.H2;\n}\n else {\n  logger.warn(\"The jdbcUrl is \" + jdbcUrl + \", Mybatis Plus Cannot Read Database type or The Database's Not Supported!\");\n  return DBType.OTHER;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 128,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1419,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (jdbcUrl.startsWith(\"jdbc:mysql:\") || jdbcUrl.startsWith(\"jdbc:cobar:\") || jdbcUrl.startsWith(\"jdbc:log4jdbc:mysql:\")) {\n  return DBType.MYSQL;\n}\n else if (jdbcUrl.startsWith(\"jdbc:mariadb:\")) {\n  return DBType.MARIADB;\n}\n else if (jdbcUrl.startsWith(\"jdbc:oracle:\") || jdbcUrl.startsWith(\"jdbc:log4jdbc:oracle:\")) {\n  return DBType.ORACLE;\n}\n else if (jdbcUrl.startsWith(\"jdbc:sqlserver:\") || jdbcUrl.startsWith(\"jdbc:microsoft:\")) {\n  return DBType.SQLSERVER2005;\n}\n else if (jdbcUrl.startsWith(\"jdbc:sqlserver2012:\")) {\n  return DBType.SQLSERVER;\n}\n else if (jdbcUrl.startsWith(\"jdbc:postgresql:\") || jdbcUrl.startsWith(\"jdbc:log4jdbc:postgresql:\")) {\n  return DBType.POSTGRE;\n}\n else if (jdbcUrl.startsWith(\"jdbc:hsqldb:\") || jdbcUrl.startsWith(\"jdbc:log4jdbc:hsqldb:\")) {\n  return DBType.HSQL;\n}\n else if (jdbcUrl.startsWith(\"jdbc:db2:\")) {\n  return DBType.DB2;\n}\n else if (jdbcUrl.startsWith(\"jdbc:sqlite:\")) {\n  return DBType.SQLITE;\n}\n else if (jdbcUrl.startsWith(\"jdbc:h2:\") || jdbcUrl.startsWith(\"jdbc:log4jdbc:h2:\")) {\n  return DBType.H2;\n}\n else {\n  logger.warn(\"The jdbcUrl is \" + jdbcUrl + \", Mybatis Plus Cannot Read Database type or The Database's Not Supported!\");\n  return DBType.OTHER;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 147,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1590,
        "startLineNumber" : 44,
        "startColumnNumber" : 51,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (StringUtils.isEmpty(jdbcUrl)) {\n    throw new MybatisPlusException(\"Error: The jdbcUrl is Null, Cannot read database type\");\n  }\n  if (jdbcUrl.startsWith(\"jdbc:mysql:\") || jdbcUrl.startsWith(\"jdbc:cobar:\") || jdbcUrl.startsWith(\"jdbc:log4jdbc:mysql:\")) {\n    return DBType.MYSQL;\n  }\n else   if (jdbcUrl.startsWith(\"jdbc:mariadb:\")) {\n    return DBType.MARIADB;\n  }\n else   if (jdbcUrl.startsWith(\"jdbc:oracle:\") || jdbcUrl.startsWith(\"jdbc:log4jdbc:oracle:\")) {\n    return DBType.ORACLE;\n  }\n else   if (jdbcUrl.startsWith(\"jdbc:sqlserver:\") || jdbcUrl.startsWith(\"jdbc:microsoft:\")) {\n    return DBType.SQLSERVER2005;\n  }\n else   if (jdbcUrl.startsWith(\"jdbc:sqlserver2012:\")) {\n    return DBType.SQLSERVER;\n  }\n else   if (jdbcUrl.startsWith(\"jdbc:postgresql:\") || jdbcUrl.startsWith(\"jdbc:log4jdbc:postgresql:\")) {\n    return DBType.POSTGRE;\n  }\n else   if (jdbcUrl.startsWith(\"jdbc:hsqldb:\") || jdbcUrl.startsWith(\"jdbc:log4jdbc:hsqldb:\")) {\n    return DBType.HSQL;\n  }\n else   if (jdbcUrl.startsWith(\"jdbc:db2:\")) {\n    return DBType.DB2;\n  }\n else   if (jdbcUrl.startsWith(\"jdbc:sqlite:\")) {\n    return DBType.SQLITE;\n  }\n else   if (jdbcUrl.startsWith(\"jdbc:h2:\") || jdbcUrl.startsWith(\"jdbc:log4jdbc:h2:\")) {\n    return DBType.H2;\n  }\n else {\n    logger.warn(\"The jdbcUrl is \" + jdbcUrl + \", Mybatis Plus Cannot Read Database type or The Database's Not Supported!\");\n    return DBType.OTHER;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 159,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1746,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * <p> 根据连接地址判断数据库类型 </p>\n * @param jdbcUrl 连接地址\n * @return\n */\npublic static DBType getDbType(String jdbcUrl){\n  if (StringUtils.isEmpty(jdbcUrl)) {\n    throw new MybatisPlusException(\"Error: The jdbcUrl is Null, Cannot read database type\");\n  }\n  if (jdbcUrl.startsWith(\"jdbc:mysql:\") || jdbcUrl.startsWith(\"jdbc:cobar:\") || jdbcUrl.startsWith(\"jdbc:log4jdbc:mysql:\")) {\n    return DBType.MYSQL;\n  }\n else   if (jdbcUrl.startsWith(\"jdbc:mariadb:\")) {\n    return DBType.MARIADB;\n  }\n else   if (jdbcUrl.startsWith(\"jdbc:oracle:\") || jdbcUrl.startsWith(\"jdbc:log4jdbc:oracle:\")) {\n    return DBType.ORACLE;\n  }\n else   if (jdbcUrl.startsWith(\"jdbc:sqlserver:\") || jdbcUrl.startsWith(\"jdbc:microsoft:\")) {\n    return DBType.SQLSERVER2005;\n  }\n else   if (jdbcUrl.startsWith(\"jdbc:sqlserver2012:\")) {\n    return DBType.SQLSERVER;\n  }\n else   if (jdbcUrl.startsWith(\"jdbc:postgresql:\") || jdbcUrl.startsWith(\"jdbc:log4jdbc:postgresql:\")) {\n    return DBType.POSTGRE;\n  }\n else   if (jdbcUrl.startsWith(\"jdbc:hsqldb:\") || jdbcUrl.startsWith(\"jdbc:log4jdbc:hsqldb:\")) {\n    return DBType.HSQL;\n  }\n else   if (jdbcUrl.startsWith(\"jdbc:db2:\")) {\n    return DBType.DB2;\n  }\n else   if (jdbcUrl.startsWith(\"jdbc:sqlite:\")) {\n    return DBType.SQLITE;\n  }\n else   if (jdbcUrl.startsWith(\"jdbc:h2:\") || jdbcUrl.startsWith(\"jdbc:log4jdbc:h2:\")) {\n    return DBType.H2;\n  }\n else {\n    logger.warn(\"The jdbcUrl is \" + jdbcUrl + \", Mybatis Plus Cannot Read Database type or The Database's Not Supported!\");\n    return DBType.OTHER;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 170,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 59,
        "startColumnNumber" : 19,
        "endLineNumber" : 59,
        "endColumnNumber" : 108
      },
      "nodeContext" : "jdbcUrl.startsWith(\"jdbc:postgresql:\") || jdbcUrl.startsWith(\"jdbc:log4jdbc:postgresql:\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 59,
    "startColumnNumber" : 38,
    "endLineNumber" : 59,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}