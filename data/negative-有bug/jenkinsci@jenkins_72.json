{
  "id" : 72,
  "expression" : "CLICommandInvoker",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/test/src/test/java/hudson/cli/ListPluginsCommandTest.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "CLICommandInvoker",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 46,
      "startColumnNumber" : 8,
      "endLineNumber" : 46,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SimpleType,name]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 32
      },
      "nodeContext" : "CLICommandInvoker.Result",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,type]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 32
      },
      "nodeContext" : "CLICommandInvoker.Result",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 26
      },
      "nodeContext" : "CLICommandInvoker.Result result=new CLICommandInvoker(j,new ListPluginsCommand()).invoke();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1095,
        "startLineNumber" : 44,
        "startColumnNumber" : 60,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertNull(j.jenkins.getPluginManager().getPlugin(\"token-macro\"));\n  CLICommandInvoker.Result result=new CLICommandInvoker(j,new ListPluginsCommand()).invoke();\n  assertThat(result,CLICommandInvoker.Matcher.succeeded());\n  assertThat(result,CLICommandInvoker.Matcher.hasNoStandardOutput());\n  assertThat(result.stdout(),not(containsString(\"token-macro\")));\n  assertThat(new CLICommandInvoker(j,new InstallPluginCommand()).withStdin(ListPluginsCommandTest.class.getResourceAsStream(\"/plugins/token-macro.hpi\")).invokeWithArgs(\"-name\",\"token-macro\",\"-deploy\",\"=\"),CLICommandInvoker.Matcher.succeeded());\n  assertNotNull(j.jenkins.getPluginManager().getPlugin(\"token-macro\"));\n  result=new CLICommandInvoker(j,new ListPluginsCommand()).invoke();\n  assertThat(result,CLICommandInvoker.Matcher.succeeded());\n  assertThat(result.stdout(),containsString(\"token-macro\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 127,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1162,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void listPluginsExpectedUsage() throws Exception {\n  assertNull(j.jenkins.getPluginManager().getPlugin(\"token-macro\"));\n  CLICommandInvoker.Result result=new CLICommandInvoker(j,new ListPluginsCommand()).invoke();\n  assertThat(result,CLICommandInvoker.Matcher.succeeded());\n  assertThat(result,CLICommandInvoker.Matcher.hasNoStandardOutput());\n  assertThat(result.stdout(),not(containsString(\"token-macro\")));\n  assertThat(new CLICommandInvoker(j,new InstallPluginCommand()).withStdin(ListPluginsCommandTest.class.getResourceAsStream(\"/plugins/token-macro.hpi\")).invokeWithArgs(\"-name\",\"token-macro\",\"-deploy\",\"=\"),CLICommandInvoker.Matcher.succeeded());\n  assertNotNull(j.jenkins.getPluginManager().getPlugin(\"token-macro\"));\n  result=new CLICommandInvoker(j,new ListPluginsCommand()).invoke();\n  assertThat(result,CLICommandInvoker.Matcher.succeeded());\n  assertThat(result.stdout(),containsString(\"token-macro\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 135,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,type]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 32
      },
      "nodeContext" : "CLICommandInvoker.Result",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "CLICommandInvoker"
  }, {
    "nodeContext" : "CLICommandInvoker",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 48,
      "startColumnNumber" : 27,
      "endLineNumber" : 48,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 48,
        "startColumnNumber" : 27,
        "endLineNumber" : 48,
        "endColumnNumber" : 52
      },
      "nodeContext" : "CLICommandInvoker.Matcher",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 48,
        "startColumnNumber" : 27,
        "endLineNumber" : 48,
        "endColumnNumber" : 64
      },
      "nodeContext" : "CLICommandInvoker.Matcher.succeeded()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 65
      },
      "nodeContext" : "assertThat(result,CLICommandInvoker.Matcher.succeeded())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 66
      },
      "nodeContext" : "assertThat(result,CLICommandInvoker.Matcher.succeeded());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1095,
        "startLineNumber" : 44,
        "startColumnNumber" : 60,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertNull(j.jenkins.getPluginManager().getPlugin(\"token-macro\"));\n  CLICommandInvoker.Result result=new CLICommandInvoker(j,new ListPluginsCommand()).invoke();\n  assertThat(result,CLICommandInvoker.Matcher.succeeded());\n  assertThat(result,CLICommandInvoker.Matcher.hasNoStandardOutput());\n  assertThat(result.stdout(),not(containsString(\"token-macro\")));\n  assertThat(new CLICommandInvoker(j,new InstallPluginCommand()).withStdin(ListPluginsCommandTest.class.getResourceAsStream(\"/plugins/token-macro.hpi\")).invokeWithArgs(\"-name\",\"token-macro\",\"-deploy\",\"=\"),CLICommandInvoker.Matcher.succeeded());\n  assertNotNull(j.jenkins.getPluginManager().getPlugin(\"token-macro\"));\n  result=new CLICommandInvoker(j,new ListPluginsCommand()).invoke();\n  assertThat(result,CLICommandInvoker.Matcher.succeeded());\n  assertThat(result.stdout(),containsString(\"token-macro\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 127,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1162,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void listPluginsExpectedUsage() throws Exception {\n  assertNull(j.jenkins.getPluginManager().getPlugin(\"token-macro\"));\n  CLICommandInvoker.Result result=new CLICommandInvoker(j,new ListPluginsCommand()).invoke();\n  assertThat(result,CLICommandInvoker.Matcher.succeeded());\n  assertThat(result,CLICommandInvoker.Matcher.hasNoStandardOutput());\n  assertThat(result.stdout(),not(containsString(\"token-macro\")));\n  assertThat(new CLICommandInvoker(j,new InstallPluginCommand()).withStdin(ListPluginsCommandTest.class.getResourceAsStream(\"/plugins/token-macro.hpi\")).invokeWithArgs(\"-name\",\"token-macro\",\"-deploy\",\"=\"),CLICommandInvoker.Matcher.succeeded());\n  assertNotNull(j.jenkins.getPluginManager().getPlugin(\"token-macro\"));\n  result=new CLICommandInvoker(j,new ListPluginsCommand()).invoke();\n  assertThat(result,CLICommandInvoker.Matcher.succeeded());\n  assertThat(result.stdout(),containsString(\"token-macro\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 135,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 66
      },
      "nodeContext" : "assertThat(result,CLICommandInvoker.Matcher.succeeded());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "CLICommandInvoker",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 49,
      "startColumnNumber" : 27,
      "endLineNumber" : 49,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 49,
        "startColumnNumber" : 27,
        "endLineNumber" : 49,
        "endColumnNumber" : 52
      },
      "nodeContext" : "CLICommandInvoker.Matcher",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 49,
        "startColumnNumber" : 27,
        "endLineNumber" : 49,
        "endColumnNumber" : 74
      },
      "nodeContext" : "CLICommandInvoker.Matcher.hasNoStandardOutput()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 75
      },
      "nodeContext" : "assertThat(result,CLICommandInvoker.Matcher.hasNoStandardOutput())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 76
      },
      "nodeContext" : "assertThat(result,CLICommandInvoker.Matcher.hasNoStandardOutput());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1095,
        "startLineNumber" : 44,
        "startColumnNumber" : 60,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertNull(j.jenkins.getPluginManager().getPlugin(\"token-macro\"));\n  CLICommandInvoker.Result result=new CLICommandInvoker(j,new ListPluginsCommand()).invoke();\n  assertThat(result,CLICommandInvoker.Matcher.succeeded());\n  assertThat(result,CLICommandInvoker.Matcher.hasNoStandardOutput());\n  assertThat(result.stdout(),not(containsString(\"token-macro\")));\n  assertThat(new CLICommandInvoker(j,new InstallPluginCommand()).withStdin(ListPluginsCommandTest.class.getResourceAsStream(\"/plugins/token-macro.hpi\")).invokeWithArgs(\"-name\",\"token-macro\",\"-deploy\",\"=\"),CLICommandInvoker.Matcher.succeeded());\n  assertNotNull(j.jenkins.getPluginManager().getPlugin(\"token-macro\"));\n  result=new CLICommandInvoker(j,new ListPluginsCommand()).invoke();\n  assertThat(result,CLICommandInvoker.Matcher.succeeded());\n  assertThat(result.stdout(),containsString(\"token-macro\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 127,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1162,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void listPluginsExpectedUsage() throws Exception {\n  assertNull(j.jenkins.getPluginManager().getPlugin(\"token-macro\"));\n  CLICommandInvoker.Result result=new CLICommandInvoker(j,new ListPluginsCommand()).invoke();\n  assertThat(result,CLICommandInvoker.Matcher.succeeded());\n  assertThat(result,CLICommandInvoker.Matcher.hasNoStandardOutput());\n  assertThat(result.stdout(),not(containsString(\"token-macro\")));\n  assertThat(new CLICommandInvoker(j,new InstallPluginCommand()).withStdin(ListPluginsCommandTest.class.getResourceAsStream(\"/plugins/token-macro.hpi\")).invokeWithArgs(\"-name\",\"token-macro\",\"-deploy\",\"=\"),CLICommandInvoker.Matcher.succeeded());\n  assertNotNull(j.jenkins.getPluginManager().getPlugin(\"token-macro\"));\n  result=new CLICommandInvoker(j,new ListPluginsCommand()).invoke();\n  assertThat(result,CLICommandInvoker.Matcher.succeeded());\n  assertThat(result.stdout(),containsString(\"token-macro\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 135,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 76
      },
      "nodeContext" : "assertThat(result,CLICommandInvoker.Matcher.hasNoStandardOutput());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "CLICommandInvoker",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 55,
      "startColumnNumber" : 16,
      "endLineNumber" : 55,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 55,
        "startColumnNumber" : 16,
        "endLineNumber" : 55,
        "endColumnNumber" : 41
      },
      "nodeContext" : "CLICommandInvoker.Matcher",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 55,
        "startColumnNumber" : 16,
        "endLineNumber" : 55,
        "endColumnNumber" : 53
      },
      "nodeContext" : "CLICommandInvoker.Matcher.succeeded()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 315,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertThat(new CLICommandInvoker(j,new InstallPluginCommand()).withStdin(ListPluginsCommandTest.class.getResourceAsStream(\"/plugins/token-macro.hpi\")).invokeWithArgs(\"-name\",\"token-macro\",\"-deploy\",\"=\"),CLICommandInvoker.Matcher.succeeded())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 28,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 316,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 55
      },
      "nodeContext" : "assertThat(new CLICommandInvoker(j,new InstallPluginCommand()).withStdin(ListPluginsCommandTest.class.getResourceAsStream(\"/plugins/token-macro.hpi\")).invokeWithArgs(\"-name\",\"token-macro\",\"-deploy\",\"=\"),CLICommandInvoker.Matcher.succeeded());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 29,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1095,
        "startLineNumber" : 44,
        "startColumnNumber" : 60,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertNull(j.jenkins.getPluginManager().getPlugin(\"token-macro\"));\n  CLICommandInvoker.Result result=new CLICommandInvoker(j,new ListPluginsCommand()).invoke();\n  assertThat(result,CLICommandInvoker.Matcher.succeeded());\n  assertThat(result,CLICommandInvoker.Matcher.hasNoStandardOutput());\n  assertThat(result.stdout(),not(containsString(\"token-macro\")));\n  assertThat(new CLICommandInvoker(j,new InstallPluginCommand()).withStdin(ListPluginsCommandTest.class.getResourceAsStream(\"/plugins/token-macro.hpi\")).invokeWithArgs(\"-name\",\"token-macro\",\"-deploy\",\"=\"),CLICommandInvoker.Matcher.succeeded());\n  assertNotNull(j.jenkins.getPluginManager().getPlugin(\"token-macro\"));\n  result=new CLICommandInvoker(j,new ListPluginsCommand()).invoke();\n  assertThat(result,CLICommandInvoker.Matcher.succeeded());\n  assertThat(result.stdout(),containsString(\"token-macro\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 127,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1162,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void listPluginsExpectedUsage() throws Exception {\n  assertNull(j.jenkins.getPluginManager().getPlugin(\"token-macro\"));\n  CLICommandInvoker.Result result=new CLICommandInvoker(j,new ListPluginsCommand()).invoke();\n  assertThat(result,CLICommandInvoker.Matcher.succeeded());\n  assertThat(result,CLICommandInvoker.Matcher.hasNoStandardOutput());\n  assertThat(result.stdout(),not(containsString(\"token-macro\")));\n  assertThat(new CLICommandInvoker(j,new InstallPluginCommand()).withStdin(ListPluginsCommandTest.class.getResourceAsStream(\"/plugins/token-macro.hpi\")).invokeWithArgs(\"-name\",\"token-macro\",\"-deploy\",\"=\"),CLICommandInvoker.Matcher.succeeded());\n  assertNotNull(j.jenkins.getPluginManager().getPlugin(\"token-macro\"));\n  result=new CLICommandInvoker(j,new ListPluginsCommand()).invoke();\n  assertThat(result,CLICommandInvoker.Matcher.succeeded());\n  assertThat(result.stdout(),containsString(\"token-macro\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 135,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 55,
        "startColumnNumber" : 16,
        "endLineNumber" : 55,
        "endColumnNumber" : 53
      },
      "nodeContext" : "CLICommandInvoker.Matcher.succeeded()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "CLICommandInvoker",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 61,
      "startColumnNumber" : 27,
      "endLineNumber" : 61,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 61,
        "startColumnNumber" : 27,
        "endLineNumber" : 61,
        "endColumnNumber" : 52
      },
      "nodeContext" : "CLICommandInvoker.Matcher",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 61,
        "startColumnNumber" : 27,
        "endLineNumber" : 61,
        "endColumnNumber" : 64
      },
      "nodeContext" : "CLICommandInvoker.Matcher.succeeded()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 65
      },
      "nodeContext" : "assertThat(result,CLICommandInvoker.Matcher.succeeded())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 66
      },
      "nodeContext" : "assertThat(result,CLICommandInvoker.Matcher.succeeded());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1095,
        "startLineNumber" : 44,
        "startColumnNumber" : 60,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertNull(j.jenkins.getPluginManager().getPlugin(\"token-macro\"));\n  CLICommandInvoker.Result result=new CLICommandInvoker(j,new ListPluginsCommand()).invoke();\n  assertThat(result,CLICommandInvoker.Matcher.succeeded());\n  assertThat(result,CLICommandInvoker.Matcher.hasNoStandardOutput());\n  assertThat(result.stdout(),not(containsString(\"token-macro\")));\n  assertThat(new CLICommandInvoker(j,new InstallPluginCommand()).withStdin(ListPluginsCommandTest.class.getResourceAsStream(\"/plugins/token-macro.hpi\")).invokeWithArgs(\"-name\",\"token-macro\",\"-deploy\",\"=\"),CLICommandInvoker.Matcher.succeeded());\n  assertNotNull(j.jenkins.getPluginManager().getPlugin(\"token-macro\"));\n  result=new CLICommandInvoker(j,new ListPluginsCommand()).invoke();\n  assertThat(result,CLICommandInvoker.Matcher.succeeded());\n  assertThat(result.stdout(),containsString(\"token-macro\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 127,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1162,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void listPluginsExpectedUsage() throws Exception {\n  assertNull(j.jenkins.getPluginManager().getPlugin(\"token-macro\"));\n  CLICommandInvoker.Result result=new CLICommandInvoker(j,new ListPluginsCommand()).invoke();\n  assertThat(result,CLICommandInvoker.Matcher.succeeded());\n  assertThat(result,CLICommandInvoker.Matcher.hasNoStandardOutput());\n  assertThat(result.stdout(),not(containsString(\"token-macro\")));\n  assertThat(new CLICommandInvoker(j,new InstallPluginCommand()).withStdin(ListPluginsCommandTest.class.getResourceAsStream(\"/plugins/token-macro.hpi\")).invokeWithArgs(\"-name\",\"token-macro\",\"-deploy\",\"=\"),CLICommandInvoker.Matcher.succeeded());\n  assertNotNull(j.jenkins.getPluginManager().getPlugin(\"token-macro\"));\n  result=new CLICommandInvoker(j,new ListPluginsCommand()).invoke();\n  assertThat(result,CLICommandInvoker.Matcher.succeeded());\n  assertThat(result.stdout(),containsString(\"token-macro\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 135,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 66
      },
      "nodeContext" : "assertThat(result,CLICommandInvoker.Matcher.succeeded());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 46,
    "startColumnNumber" : 8,
    "endLineNumber" : 46,
    "endColumnNumber" : 25
  }, {
    "charLength" : 17,
    "startLineNumber" : 48,
    "startColumnNumber" : 27,
    "endLineNumber" : 48,
    "endColumnNumber" : 44
  }, {
    "charLength" : 17,
    "startLineNumber" : 49,
    "startColumnNumber" : 27,
    "endLineNumber" : 49,
    "endColumnNumber" : 44
  }, {
    "charLength" : 17,
    "startLineNumber" : 55,
    "startColumnNumber" : 16,
    "endLineNumber" : 55,
    "endColumnNumber" : 33
  }, {
    "charLength" : 17,
    "startLineNumber" : 61,
    "startColumnNumber" : 27,
    "endLineNumber" : 61,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 4
  } ]
}