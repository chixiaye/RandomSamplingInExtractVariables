{
  "id" : 507,
  "expression" : "o",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/perf/java/io/reactivex/OperatorMergePerf.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "o",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 41,
      "startColumnNumber" : 37,
      "endLineNumber" : 41,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 39
      },
      "nodeContext" : "Flowable.merge(os).subscribe(o)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 40
      },
      "nodeContext" : "Flowable.merge(os).subscribe(o);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 584,
        "startLineNumber" : 32,
        "startColumnNumber" : 96,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Flowable<Flowable<Integer>> os=Flowable.range(1,input.size).map(new Function<Integer,Flowable<Integer>>(){\n    @Override public Flowable<Integer> apply(    Integer v){\n      return Flowable.just(v);\n    }\n  }\n);\n  LatchedObserver<Integer> o=input.newLatchedObserver();\n  Flowable.merge(os).subscribe(o);\n  if (input.size == 1) {\n    while (o.latch.getCount() != 0)     ;\n  }\n else {\n    o.latch.await();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 692,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Benchmark public void oneStreamOfNthatMergesIn1(final InputMillion input) throws InterruptedException {\n  Flowable<Flowable<Integer>> os=Flowable.range(1,input.size).map(new Function<Integer,Flowable<Integer>>(){\n    @Override public Flowable<Integer> apply(    Integer v){\n      return Flowable.just(v);\n    }\n  }\n);\n  LatchedObserver<Integer> o=input.newLatchedObserver();\n  Flowable.merge(os).subscribe(o);\n  if (input.size == 1) {\n    while (o.latch.getCount() != 0)     ;\n  }\n else {\n    o.latch.await();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 40
      },
      "nodeContext" : "Flowable.merge(os).subscribe(o);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.LatchedObserver<java.lang.Integer>"
  }, {
    "nodeContext" : "o",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 44,
      "startColumnNumber" : 19,
      "endLineNumber" : 44,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 44,
        "startColumnNumber" : 19,
        "endLineNumber" : 44,
        "endColumnNumber" : 26
      },
      "nodeContext" : "o.latch",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 44,
        "startColumnNumber" : 19,
        "endLineNumber" : 44,
        "endColumnNumber" : 37
      },
      "nodeContext" : "o.latch.getCount()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 44,
        "startColumnNumber" : 19,
        "endLineNumber" : 44,
        "endColumnNumber" : 42
      },
      "nodeContext" : "o.latch.getCount() != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 44,
        "startColumnNumber" : 12,
        "endLineNumber" : 44,
        "endColumnNumber" : 44
      },
      "nodeContext" : "while (o.latch.getCount() != 0) ;\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 43,
        "startColumnNumber" : 29,
        "endLineNumber" : 45,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  while (o.latch.getCount() != 0)   ;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (input.size == 1) {\n  while (o.latch.getCount() != 0)   ;\n}\n else {\n  o.latch.await();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 584,
        "startLineNumber" : 32,
        "startColumnNumber" : 96,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Flowable<Flowable<Integer>> os=Flowable.range(1,input.size).map(new Function<Integer,Flowable<Integer>>(){\n    @Override public Flowable<Integer> apply(    Integer v){\n      return Flowable.just(v);\n    }\n  }\n);\n  LatchedObserver<Integer> o=input.newLatchedObserver();\n  Flowable.merge(os).subscribe(o);\n  if (input.size == 1) {\n    while (o.latch.getCount() != 0)     ;\n  }\n else {\n    o.latch.await();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 692,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Benchmark public void oneStreamOfNthatMergesIn1(final InputMillion input) throws InterruptedException {\n  Flowable<Flowable<Integer>> os=Flowable.range(1,input.size).map(new Function<Integer,Flowable<Integer>>(){\n    @Override public Flowable<Integer> apply(    Integer v){\n      return Flowable.just(v);\n    }\n  }\n);\n  LatchedObserver<Integer> o=input.newLatchedObserver();\n  Flowable.merge(os).subscribe(o);\n  if (input.size == 1) {\n    while (o.latch.getCount() != 0)     ;\n  }\n else {\n    o.latch.await();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 44,
        "startColumnNumber" : 12,
        "endLineNumber" : 44,
        "endColumnNumber" : 44
      },
      "nodeContext" : "while (o.latch.getCount() != 0) ;\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.LatchedObserver<java.lang.Integer>"
  }, {
    "nodeContext" : "o",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 46,
      "startColumnNumber" : 12,
      "endLineNumber" : 46,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 19
      },
      "nodeContext" : "o.latch",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 27
      },
      "nodeContext" : "o.latch.await()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 28
      },
      "nodeContext" : "o.latch.await();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 45,
        "startColumnNumber" : 15,
        "endLineNumber" : 47,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  o.latch.await();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (input.size == 1) {\n  while (o.latch.getCount() != 0)   ;\n}\n else {\n  o.latch.await();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 584,
        "startLineNumber" : 32,
        "startColumnNumber" : 96,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Flowable<Flowable<Integer>> os=Flowable.range(1,input.size).map(new Function<Integer,Flowable<Integer>>(){\n    @Override public Flowable<Integer> apply(    Integer v){\n      return Flowable.just(v);\n    }\n  }\n);\n  LatchedObserver<Integer> o=input.newLatchedObserver();\n  Flowable.merge(os).subscribe(o);\n  if (input.size == 1) {\n    while (o.latch.getCount() != 0)     ;\n  }\n else {\n    o.latch.await();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 692,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Benchmark public void oneStreamOfNthatMergesIn1(final InputMillion input) throws InterruptedException {\n  Flowable<Flowable<Integer>> os=Flowable.range(1,input.size).map(new Function<Integer,Flowable<Integer>>(){\n    @Override public Flowable<Integer> apply(    Integer v){\n      return Flowable.just(v);\n    }\n  }\n);\n  LatchedObserver<Integer> o=input.newLatchedObserver();\n  Flowable.merge(os).subscribe(o);\n  if (input.size == 1) {\n    while (o.latch.getCount() != 0)     ;\n  }\n else {\n    o.latch.await();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 28
      },
      "nodeContext" : "o.latch.await();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.LatchedObserver<java.lang.Integer>"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 41,
    "startColumnNumber" : 37,
    "endLineNumber" : 41,
    "endColumnNumber" : 38
  }, {
    "charLength" : 1,
    "startLineNumber" : 44,
    "startColumnNumber" : 19,
    "endLineNumber" : 44,
    "endColumnNumber" : 20
  }, {
    "charLength" : 1,
    "startLineNumber" : 46,
    "startColumnNumber" : 12,
    "endLineNumber" : 46,
    "endColumnNumber" : 13
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  } ]
}