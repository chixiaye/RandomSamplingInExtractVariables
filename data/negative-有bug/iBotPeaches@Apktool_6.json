{
  "id" : 6,
  "expression" : "\".9\"",
  "projectName" : "iBotPeaches@Apktool",
  "commitID" : "719a25afd69d2211259a65d4fce197340cbae819",
  "filePath" : "/src/brut/androlib/res/decoder/ResFileDecoder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\".9\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 65,
      "startColumnNumber" : 47,
      "endLineNumber" : 65,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 65,
        "startColumnNumber" : 34,
        "endLineNumber" : 65,
        "endColumnNumber" : 57
      },
      "nodeContext" : "outResName + \".9\" + ext",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 65,
        "startColumnNumber" : 20,
        "endLineNumber" : 65,
        "endColumnNumber" : 57
      },
      "nodeContext" : "outFileName=outResName + \".9\" + ext",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 65,
        "startColumnNumber" : 20,
        "endLineNumber" : 65,
        "endColumnNumber" : 58
      },
      "nodeContext" : "outFileName=outResName + \".9\" + ext;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 666,
        "startLineNumber" : 64,
        "startColumnNumber" : 65,
        "endLineNumber" : 79,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  outFileName=outResName + \".9\" + ext;\n  try {\n    decode(inDir,inFileName,outDir,outFileName,\"9patch\");\n    return;\n  }\n catch (  CantFind9PatchChunk ex) {\n    LOGGER.log(Level.WARNING,String.format(\"Cant find 9patch chunk in file: \\\"%s\\\". Renaming it to *.png.\",inFileName),ex);\n    outDir.removeFile(outFileName);\n    outFileName=outResName + ext;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 49,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 715,
        "startLineNumber" : 64,
        "startColumnNumber" : 16,
        "endLineNumber" : 79,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (inFileName.toLowerCase().endsWith(\".9.png\")) {\n  outFileName=outResName + \".9\" + ext;\n  try {\n    decode(inDir,inFileName,outDir,outFileName,\"9patch\");\n    return;\n  }\n catch (  CantFind9PatchChunk ex) {\n    LOGGER.log(Level.WARNING,String.format(\"Cant find 9patch chunk in file: \\\"%s\\\". Renaming it to *.png.\",inFileName),ex);\n    outDir.removeFile(outFileName);\n    outFileName=outResName + ext;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 56,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 912,
        "startLineNumber" : 63,
        "startColumnNumber" : 45,
        "endLineNumber" : 84,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (inFileName.toLowerCase().endsWith(\".9.png\")) {\n    outFileName=outResName + \".9\" + ext;\n    try {\n      decode(inDir,inFileName,outDir,outFileName,\"9patch\");\n      return;\n    }\n catch (    CantFind9PatchChunk ex) {\n      LOGGER.log(Level.WARNING,String.format(\"Cant find 9patch chunk in file: \\\"%s\\\". Renaming it to *.png.\",inFileName),ex);\n      outDir.removeFile(outFileName);\n      outFileName=outResName + ext;\n    }\n  }\n  if (!\".xml\".equals(ext)) {\n    decode(inDir,inFileName,outDir,outFileName,\"raw\");\n    return;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 945,
        "startLineNumber" : 63,
        "startColumnNumber" : 12,
        "endLineNumber" : 84,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (typeName.equals(\"drawable\")) {\n  if (inFileName.toLowerCase().endsWith(\".9.png\")) {\n    outFileName=outResName + \".9\" + ext;\n    try {\n      decode(inDir,inFileName,outDir,outFileName,\"9patch\");\n      return;\n    }\n catch (    CantFind9PatchChunk ex) {\n      LOGGER.log(Level.WARNING,String.format(\"Cant find 9patch chunk in file: \\\"%s\\\". Renaming it to *.png.\",inFileName),ex);\n      outDir.removeFile(outFileName);\n      outFileName=outResName + ext;\n    }\n  }\n  if (!\".xml\".equals(ext)) {\n    decode(inDir,inFileName,outDir,outFileName,\"raw\");\n    return;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 78,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1188,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 87,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (typeName.equals(\"raw\")) {\n    decode(inDir,inFileName,outDir,outFileName,\"raw\");\n    return;\n  }\n  if (typeName.equals(\"drawable\")) {\n    if (inFileName.toLowerCase().endsWith(\".9.png\")) {\n      outFileName=outResName + \".9\" + ext;\n      try {\n        decode(inDir,inFileName,outDir,outFileName,\"9patch\");\n        return;\n      }\n catch (      CantFind9PatchChunk ex) {\n        LOGGER.log(Level.WARNING,String.format(\"Cant find 9patch chunk in file: \\\"%s\\\". Renaming it to *.png.\",inFileName),ex);\n        outDir.removeFile(outFileName);\n        outFileName=outResName + ext;\n      }\n    }\n    if (!\".xml\".equals(ext)) {\n      decode(inDir,inFileName,outDir,outFileName,\"raw\");\n      return;\n    }\n  }\n  decode(inDir,inFileName,outDir,outFileName,\"xml\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1390,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 91,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  if (typeName.equals(\"raw\")) {\n    decode(inDir,inFileName,outDir,outFileName,\"raw\");\n    return;\n  }\n  if (typeName.equals(\"drawable\")) {\n    if (inFileName.toLowerCase().endsWith(\".9.png\")) {\n      outFileName=outResName + \".9\" + ext;\n      try {\n        decode(inDir,inFileName,outDir,outFileName,\"9patch\");\n        return;\n      }\n catch (      CantFind9PatchChunk ex) {\n        LOGGER.log(Level.WARNING,String.format(\"Cant find 9patch chunk in file: \\\"%s\\\". Renaming it to *.png.\",inFileName),ex);\n        outDir.removeFile(outFileName);\n        outFileName=outResName + ext;\n      }\n    }\n    if (!\".xml\".equals(ext)) {\n      decode(inDir,inFileName,outDir,outFileName,\"raw\");\n      return;\n    }\n  }\n  decode(inDir,inFileName,outDir,outFileName,\"xml\");\n}\n catch (AndrolibException ex) {\n  LOGGER.log(Level.SEVERE,String.format(\"Could not decode file \\\"%s\\\" to \\\"%s\\\"\",inFileName,outFileName),ex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 123,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1931,
        "startLineNumber" : 41,
        "startColumnNumber" : 37,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ResFileValue fileValue=(ResFileValue)res.getValue();\n  String inFileName=fileValue.getStrippedPath();\n  String outResName=res.getFilePath();\n  String typeName=res.getResSpec().getType().getName();\n  String ext=null;\n  String outFileName;\n  int extPos=inFileName.lastIndexOf(\".\");\n  if (extPos == -1) {\n    outFileName=outResName;\n  }\n else {\n    ext=inFileName.substring(extPos);\n    outFileName=outResName + ext;\n  }\n  try {\n    if (typeName.equals(\"raw\")) {\n      decode(inDir,inFileName,outDir,outFileName,\"raw\");\n      return;\n    }\n    if (typeName.equals(\"drawable\")) {\n      if (inFileName.toLowerCase().endsWith(\".9.png\")) {\n        outFileName=outResName + \".9\" + ext;\n        try {\n          decode(inDir,inFileName,outDir,outFileName,\"9patch\");\n          return;\n        }\n catch (        CantFind9PatchChunk ex) {\n          LOGGER.log(Level.WARNING,String.format(\"Cant find 9patch chunk in file: \\\"%s\\\". Renaming it to *.png.\",inFileName),ex);\n          outDir.removeFile(outFileName);\n          outFileName=outResName + ext;\n        }\n      }\n      if (!\".xml\".equals(ext)) {\n        decode(inDir,inFileName,outDir,outFileName,\"raw\");\n        return;\n      }\n    }\n    decode(inDir,inFileName,outDir,outFileName,\"xml\");\n  }\n catch (  AndrolibException ex) {\n    LOGGER.log(Level.SEVERE,String.format(\"Could not decode file \\\"%s\\\" to \\\"%s\\\"\",inFileName,outFileName),ex);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 206,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2039,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void decode(ResResource res,Directory inDir,Directory outDir) throws AndrolibException {\n  ResFileValue fileValue=(ResFileValue)res.getValue();\n  String inFileName=fileValue.getStrippedPath();\n  String outResName=res.getFilePath();\n  String typeName=res.getResSpec().getType().getName();\n  String ext=null;\n  String outFileName;\n  int extPos=inFileName.lastIndexOf(\".\");\n  if (extPos == -1) {\n    outFileName=outResName;\n  }\n else {\n    ext=inFileName.substring(extPos);\n    outFileName=outResName + ext;\n  }\n  try {\n    if (typeName.equals(\"raw\")) {\n      decode(inDir,inFileName,outDir,outFileName,\"raw\");\n      return;\n    }\n    if (typeName.equals(\"drawable\")) {\n      if (inFileName.toLowerCase().endsWith(\".9.png\")) {\n        outFileName=outResName + \".9\" + ext;\n        try {\n          decode(inDir,inFileName,outDir,outFileName,\"9patch\");\n          return;\n        }\n catch (        CantFind9PatchChunk ex) {\n          LOGGER.log(Level.WARNING,String.format(\"Cant find 9patch chunk in file: \\\"%s\\\". Renaming it to *.png.\",inFileName),ex);\n          outDir.removeFile(outFileName);\n          outFileName=outResName + ext;\n        }\n      }\n      if (!\".xml\".equals(ext)) {\n        decode(inDir,inFileName,outDir,outFileName,\"raw\");\n        return;\n      }\n    }\n    decode(inDir,inFileName,outDir,outFileName,\"xml\");\n  }\n catch (  AndrolibException ex) {\n    LOGGER.log(Level.SEVERE,String.format(\"Could not decode file \\\"%s\\\" to \\\"%s\\\"\",inFileName,outFileName),ex);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 224,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 65,
        "startColumnNumber" : 20,
        "endLineNumber" : 65,
        "endColumnNumber" : 58
      },
      "nodeContext" : "outFileName=outResName + \".9\" + ext;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 65,
    "startColumnNumber" : 47,
    "endLineNumber" : 65,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ ]
}