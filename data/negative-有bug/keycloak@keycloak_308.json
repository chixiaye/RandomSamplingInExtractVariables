{
  "id" : 308,
  "expression" : "11444",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/model/map-hot-rod/src/main/java/org/keycloak/models/map/storage/hotRod/connections/DefaultHotRodConnectionProviderFactory.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "11444",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 84,
      "startColumnNumber" : 81,
      "endLineNumber" : 84,
      "endColumnNumber" : 86
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 84,
        "startColumnNumber" : 51,
        "endLineNumber" : 84,
        "endColumnNumber" : 87
      },
      "nodeContext" : "config.getInt(\"embeddedPort\",11444)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 84,
        "startColumnNumber" : 12,
        "endLineNumber" : 84,
        "endColumnNumber" : 88
      },
      "nodeContext" : "HotRodUtils.createHotRodMapStoreServer(config.getInt(\"embeddedPort\",11444))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 84,
        "startColumnNumber" : 12,
        "endLineNumber" : 84,
        "endColumnNumber" : 89
      },
      "nodeContext" : "HotRodUtils.createHotRodMapStoreServer(config.getInt(\"embeddedPort\",11444));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 83,
        "startColumnNumber" : 50,
        "endLineNumber" : 85,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HotRodUtils.createHotRodMapStoreServer(config.getInt(\"embeddedPort\",11444));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 143,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 85,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (config.getBoolean(\"embedded\",false)) {\n  HotRodUtils.createHotRodMapStoreServer(config.getInt(\"embeddedPort\",11444));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2665,
        "startLineNumber" : 82,
        "startColumnNumber" : 27,
        "endLineNumber" : 136,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (config.getBoolean(\"embedded\",false)) {\n    HotRodUtils.createHotRodMapStoreServer(config.getInt(\"embeddedPort\",11444));\n  }\n  ConfigurationBuilder remoteBuilder=new ConfigurationBuilder();\n  remoteBuilder.addServer().host(config.get(\"host\",\"localhost\")).port(config.getInt(\"port\",11444)).clientIntelligence(ClientIntelligence.HASH_DISTRIBUTION_AWARE).marshaller(new ProtoStreamMarshaller());\n  if (config.getBoolean(\"enableSecurity\",true)) {\n    remoteBuilder.security().authentication().saslMechanism(\"SCRAM-SHA-512\").username(config.get(\"username\",\"admin\")).password(config.get(\"password\",\"admin\")).realm(config.get(\"realm\",\"default\"));\n  }\n  boolean configureRemoteCaches=config.getBoolean(\"configureRemoteCaches\",false);\n  if (configureRemoteCaches) {\n    configureRemoteCaches(remoteBuilder);\n  }\n  remoteBuilder.addContextInitializer(ProtoSchemaInitializer.INSTANCE);\n  remoteCacheManager=new RemoteCacheManager(remoteBuilder.build());\n  Set<String> remoteCaches=HotRodMapStorageProviderFactory.ENTITY_DESCRIPTOR_MAP.values().stream().map(HotRodEntityDescriptor::getCacheName).collect(Collectors.toSet());\n  if (configureRemoteCaches) {\n    remoteCaches.forEach(remoteCacheManager::getCache);\n  }\n  registerSchemata(ProtoSchemaInitializer.INSTANCE);\n  RemoteCacheManagerAdmin administration=remoteCacheManager.administration();\n  if (config.getBoolean(\"reindexAllCaches\",false)) {\n    LOG.infof(\"Reindexing all caches. This can take a long time to complete. While the rebuild operation is in progress, queries might return fewer results.\");\n    remoteCaches.forEach(administration::reindexCache);\n  }\n else {\n    String reindexCaches=config.get(\"reindexCaches\",\"\");\n    if (reindexCaches != null) {\n      Arrays.stream(reindexCaches.split(\",\")).map(String::trim).filter(e -> !e.isEmpty()).filter(remoteCaches::contains).peek(cacheName -> LOG.infof(\"Reindexing %s cache. This can take a long time to complete. While the rebuild operation is in progress, queries might return fewer results.\",cacheName)).forEach(administration::reindexCache);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 248,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2688,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 136,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void lazyInit(){\n  if (config.getBoolean(\"embedded\",false)) {\n    HotRodUtils.createHotRodMapStoreServer(config.getInt(\"embeddedPort\",11444));\n  }\n  ConfigurationBuilder remoteBuilder=new ConfigurationBuilder();\n  remoteBuilder.addServer().host(config.get(\"host\",\"localhost\")).port(config.getInt(\"port\",11444)).clientIntelligence(ClientIntelligence.HASH_DISTRIBUTION_AWARE).marshaller(new ProtoStreamMarshaller());\n  if (config.getBoolean(\"enableSecurity\",true)) {\n    remoteBuilder.security().authentication().saslMechanism(\"SCRAM-SHA-512\").username(config.get(\"username\",\"admin\")).password(config.get(\"password\",\"admin\")).realm(config.get(\"realm\",\"default\"));\n  }\n  boolean configureRemoteCaches=config.getBoolean(\"configureRemoteCaches\",false);\n  if (configureRemoteCaches) {\n    configureRemoteCaches(remoteBuilder);\n  }\n  remoteBuilder.addContextInitializer(ProtoSchemaInitializer.INSTANCE);\n  remoteCacheManager=new RemoteCacheManager(remoteBuilder.build());\n  Set<String> remoteCaches=HotRodMapStorageProviderFactory.ENTITY_DESCRIPTOR_MAP.values().stream().map(HotRodEntityDescriptor::getCacheName).collect(Collectors.toSet());\n  if (configureRemoteCaches) {\n    remoteCaches.forEach(remoteCacheManager::getCache);\n  }\n  registerSchemata(ProtoSchemaInitializer.INSTANCE);\n  RemoteCacheManagerAdmin administration=remoteCacheManager.administration();\n  if (config.getBoolean(\"reindexAllCaches\",false)) {\n    LOG.infof(\"Reindexing all caches. This can take a long time to complete. While the rebuild operation is in progress, queries might return fewer results.\");\n    remoteCaches.forEach(administration::reindexCache);\n  }\n else {\n    String reindexCaches=config.get(\"reindexCaches\",\"\");\n    if (reindexCaches != null) {\n      Arrays.stream(reindexCaches.split(\",\")).map(String::trim).filter(e -> !e.isEmpty()).filter(remoteCaches::contains).peek(cacheName -> LOG.infof(\"Reindexing %s cache. This can take a long time to complete. While the rebuild operation is in progress, queries might return fewer results.\",cacheName)).forEach(administration::reindexCache);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 252,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 84,
        "startColumnNumber" : 12,
        "endLineNumber" : 84,
        "endColumnNumber" : 89
      },
      "nodeContext" : "HotRodUtils.createHotRodMapStoreServer(config.getInt(\"embeddedPort\",11444));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "11444",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 90,
      "startColumnNumber" : 44,
      "endLineNumber" : 90,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 90,
        "startColumnNumber" : 22,
        "endLineNumber" : 90,
        "endColumnNumber" : 50
      },
      "nodeContext" : "config.getInt(\"port\",11444)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 51
      },
      "nodeContext" : "remoteBuilder.addServer().host(config.get(\"host\",\"localhost\")).port(config.getInt(\"port\",11444))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 212,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 91,
        "endColumnNumber" : 79
      },
      "nodeContext" : "remoteBuilder.addServer().host(config.get(\"host\",\"localhost\")).port(config.getInt(\"port\",11444)).clientIntelligence(ClientIntelligence.HASH_DISTRIBUTION_AWARE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 269,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 92,
        "endColumnNumber" : 56
      },
      "nodeContext" : "remoteBuilder.addServer().host(config.get(\"host\",\"localhost\")).port(config.getInt(\"port\",11444)).clientIntelligence(ClientIntelligence.HASH_DISTRIBUTION_AWARE).marshaller(new ProtoStreamMarshaller())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 270,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 92,
        "endColumnNumber" : 57
      },
      "nodeContext" : "remoteBuilder.addServer().host(config.get(\"host\",\"localhost\")).port(config.getInt(\"port\",11444)).clientIntelligence(ClientIntelligence.HASH_DISTRIBUTION_AWARE).marshaller(new ProtoStreamMarshaller());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 28,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2665,
        "startLineNumber" : 82,
        "startColumnNumber" : 27,
        "endLineNumber" : 136,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (config.getBoolean(\"embedded\",false)) {\n    HotRodUtils.createHotRodMapStoreServer(config.getInt(\"embeddedPort\",11444));\n  }\n  ConfigurationBuilder remoteBuilder=new ConfigurationBuilder();\n  remoteBuilder.addServer().host(config.get(\"host\",\"localhost\")).port(config.getInt(\"port\",11444)).clientIntelligence(ClientIntelligence.HASH_DISTRIBUTION_AWARE).marshaller(new ProtoStreamMarshaller());\n  if (config.getBoolean(\"enableSecurity\",true)) {\n    remoteBuilder.security().authentication().saslMechanism(\"SCRAM-SHA-512\").username(config.get(\"username\",\"admin\")).password(config.get(\"password\",\"admin\")).realm(config.get(\"realm\",\"default\"));\n  }\n  boolean configureRemoteCaches=config.getBoolean(\"configureRemoteCaches\",false);\n  if (configureRemoteCaches) {\n    configureRemoteCaches(remoteBuilder);\n  }\n  remoteBuilder.addContextInitializer(ProtoSchemaInitializer.INSTANCE);\n  remoteCacheManager=new RemoteCacheManager(remoteBuilder.build());\n  Set<String> remoteCaches=HotRodMapStorageProviderFactory.ENTITY_DESCRIPTOR_MAP.values().stream().map(HotRodEntityDescriptor::getCacheName).collect(Collectors.toSet());\n  if (configureRemoteCaches) {\n    remoteCaches.forEach(remoteCacheManager::getCache);\n  }\n  registerSchemata(ProtoSchemaInitializer.INSTANCE);\n  RemoteCacheManagerAdmin administration=remoteCacheManager.administration();\n  if (config.getBoolean(\"reindexAllCaches\",false)) {\n    LOG.infof(\"Reindexing all caches. This can take a long time to complete. While the rebuild operation is in progress, queries might return fewer results.\");\n    remoteCaches.forEach(administration::reindexCache);\n  }\n else {\n    String reindexCaches=config.get(\"reindexCaches\",\"\");\n    if (reindexCaches != null) {\n      Arrays.stream(reindexCaches.split(\",\")).map(String::trim).filter(e -> !e.isEmpty()).filter(remoteCaches::contains).peek(cacheName -> LOG.infof(\"Reindexing %s cache. This can take a long time to complete. While the rebuild operation is in progress, queries might return fewer results.\",cacheName)).forEach(administration::reindexCache);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 248,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2688,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 136,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void lazyInit(){\n  if (config.getBoolean(\"embedded\",false)) {\n    HotRodUtils.createHotRodMapStoreServer(config.getInt(\"embeddedPort\",11444));\n  }\n  ConfigurationBuilder remoteBuilder=new ConfigurationBuilder();\n  remoteBuilder.addServer().host(config.get(\"host\",\"localhost\")).port(config.getInt(\"port\",11444)).clientIntelligence(ClientIntelligence.HASH_DISTRIBUTION_AWARE).marshaller(new ProtoStreamMarshaller());\n  if (config.getBoolean(\"enableSecurity\",true)) {\n    remoteBuilder.security().authentication().saslMechanism(\"SCRAM-SHA-512\").username(config.get(\"username\",\"admin\")).password(config.get(\"password\",\"admin\")).realm(config.get(\"realm\",\"default\"));\n  }\n  boolean configureRemoteCaches=config.getBoolean(\"configureRemoteCaches\",false);\n  if (configureRemoteCaches) {\n    configureRemoteCaches(remoteBuilder);\n  }\n  remoteBuilder.addContextInitializer(ProtoSchemaInitializer.INSTANCE);\n  remoteCacheManager=new RemoteCacheManager(remoteBuilder.build());\n  Set<String> remoteCaches=HotRodMapStorageProviderFactory.ENTITY_DESCRIPTOR_MAP.values().stream().map(HotRodEntityDescriptor::getCacheName).collect(Collectors.toSet());\n  if (configureRemoteCaches) {\n    remoteCaches.forEach(remoteCacheManager::getCache);\n  }\n  registerSchemata(ProtoSchemaInitializer.INSTANCE);\n  RemoteCacheManagerAdmin administration=remoteCacheManager.administration();\n  if (config.getBoolean(\"reindexAllCaches\",false)) {\n    LOG.infof(\"Reindexing all caches. This can take a long time to complete. While the rebuild operation is in progress, queries might return fewer results.\");\n    remoteCaches.forEach(administration::reindexCache);\n  }\n else {\n    String reindexCaches=config.get(\"reindexCaches\",\"\");\n    if (reindexCaches != null) {\n      Arrays.stream(reindexCaches.split(\",\")).map(String::trim).filter(e -> !e.isEmpty()).filter(remoteCaches::contains).peek(cacheName -> LOG.infof(\"Reindexing %s cache. This can take a long time to complete. While the rebuild operation is in progress, queries might return fewer results.\",cacheName)).forEach(administration::reindexCache);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 252,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 90,
        "startColumnNumber" : 22,
        "endLineNumber" : 90,
        "endColumnNumber" : 50
      },
      "nodeContext" : "config.getInt(\"port\",11444)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 84,
    "startColumnNumber" : 81,
    "endLineNumber" : 84,
    "endColumnNumber" : 86
  }, {
    "charLength" : 5,
    "startLineNumber" : 90,
    "startColumnNumber" : 44,
    "endLineNumber" : 90,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}