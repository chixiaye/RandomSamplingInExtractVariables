{
  "id" : 409,
  "expression" : "buf[start + i]",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/cli/src/main/java/hudson/cli/HexDump.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "buf[start + i]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 18,
      "startColumnNumber" : 21,
      "endLineNumber" : 18,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 18,
        "startColumnNumber" : 17,
        "endLineNumber" : 18,
        "endColumnNumber" : 33
      },
      "nodeContext" : "b=buf[start + i]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 18,
        "startColumnNumber" : 12,
        "endLineNumber" : 18,
        "endColumnNumber" : 34
      },
      "nodeContext" : "byte b=buf[start + i];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 768,
        "startLineNumber" : 17,
        "startColumnNumber" : 34,
        "endLineNumber" : 41,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  byte b=buf[start + i];\n  if (b >= 0x20 && b <= 0x7e) {\n    if (!inText) {\n      inText=true;\n      r.append('\\'');\n    }\n    r.append((char)b);\n  }\n else {\n    if (inText) {\n      r.append(\"' \");\n      inText=false;\n    }\n    r.append(\"0x\");\n    r.append(CODE.charAt((b >> 4) & 15));\n    r.append(CODE.charAt(b & 15));\n    if (i < len - 1) {\n      if (b == 10) {\n        r.append('\\n');\n      }\n else {\n        r.append(' ');\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 794,
        "startLineNumber" : 17,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < len; i++) {\n  byte b=buf[start + i];\n  if (b >= 0x20 && b <= 0x7e) {\n    if (!inText) {\n      inText=true;\n      r.append('\\'');\n    }\n    r.append((char)b);\n  }\n else {\n    if (inText) {\n      r.append(\"' \");\n      inText=false;\n    }\n    r.append(\"0x\");\n    r.append(CODE.charAt((b >> 4) & 15));\n    r.append(CODE.charAt(b & 15));\n    if (i < len - 1) {\n      if (b == 10) {\n        r.append('\\n');\n      }\n else {\n        r.append(' ');\n      }\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 114,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 991,
        "startLineNumber" : 14,
        "startColumnNumber" : 63,
        "endLineNumber" : 46,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringBuilder r=new StringBuilder(len * 2);\n  boolean inText=false;\n  for (int i=0; i < len; i++) {\n    byte b=buf[start + i];\n    if (b >= 0x20 && b <= 0x7e) {\n      if (!inText) {\n        inText=true;\n        r.append('\\'');\n      }\n      r.append((char)b);\n    }\n else {\n      if (inText) {\n        r.append(\"' \");\n        inText=false;\n      }\n      r.append(\"0x\");\n      r.append(CODE.charAt((b >> 4) & 15));\n      r.append(CODE.charAt(b & 15));\n      if (i < len - 1) {\n        if (b == 10) {\n          r.append('\\n');\n        }\n else {\n          r.append(' ');\n        }\n      }\n    }\n  }\n  if (inText) {\n    r.append('\\'');\n  }\n  return r.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 143,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1050,
        "startLineNumber" : 14,
        "startColumnNumber" : 4,
        "endLineNumber" : 46,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static String toHex(byte[] buf,int start,int len){\n  StringBuilder r=new StringBuilder(len * 2);\n  boolean inText=false;\n  for (int i=0; i < len; i++) {\n    byte b=buf[start + i];\n    if (b >= 0x20 && b <= 0x7e) {\n      if (!inText) {\n        inText=true;\n        r.append('\\'');\n      }\n      r.append((char)b);\n    }\n else {\n      if (inText) {\n        r.append(\"' \");\n        inText=false;\n      }\n      r.append(\"0x\");\n      r.append(CODE.charAt((b >> 4) & 15));\n      r.append(CODE.charAt(b & 15));\n      if (i < len - 1) {\n        if (b == 10) {\n          r.append('\\n');\n        }\n else {\n          r.append(' ');\n        }\n      }\n    }\n  }\n  if (inText) {\n    r.append('\\'');\n  }\n  return r.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 160,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 18,
        "startColumnNumber" : 12,
        "endLineNumber" : 18,
        "endColumnNumber" : 34
      },
      "nodeContext" : "byte b=buf[start + i];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "byte"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 18,
    "startColumnNumber" : 21,
    "endLineNumber" : 18,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ ]
}