{
  "id" : 127,
  "expression" : "bytesLeft == 0",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/extractor/src/main/java/com/google/android/exoplayer2/extractor/wav/WavExtractor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "bytesLeft == 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 459,
      "startColumnNumber" : 32,
      "endLineNumber" : 459,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 459,
        "startColumnNumber" : 14,
        "endLineNumber" : 459,
        "endColumnNumber" : 46
      },
      "nodeContext" : "endOfSampleData=bytesLeft == 0",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 459,
        "startColumnNumber" : 6,
        "endLineNumber" : 459,
        "endColumnNumber" : 47
      },
      "nodeContext" : "boolean endOfSampleData=bytesLeft == 0;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2168,
        "startLineNumber" : 449,
        "startColumnNumber" : 87,
        "endLineNumber" : 497,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int targetFramesRemaining=targetSampleSizeFrames - numOutputBytesToFrames(pendingOutputBytes);\n  int blocksToDecode=Util.ceilDivide(targetFramesRemaining,framesPerBlock);\n  int targetReadBytes=blocksToDecode * header.blockSize;\n  boolean endOfSampleData=bytesLeft == 0;\n  while (!endOfSampleData && pendingInputBytes < targetReadBytes) {\n    int bytesToRead=(int)min(targetReadBytes - pendingInputBytes,bytesLeft);\n    int bytesAppended=input.read(inputData,pendingInputBytes,bytesToRead);\n    if (bytesAppended == RESULT_END_OF_INPUT) {\n      endOfSampleData=true;\n    }\n else {\n      pendingInputBytes+=bytesAppended;\n    }\n  }\n  int pendingBlockCount=pendingInputBytes / header.blockSize;\n  if (pendingBlockCount > 0) {\n    decode(inputData,pendingBlockCount,decodedData);\n    pendingInputBytes-=pendingBlockCount * header.blockSize;\n    int decodedDataSize=decodedData.limit();\n    trackOutput.sampleData(decodedData,decodedDataSize);\n    pendingOutputBytes+=decodedDataSize;\n    int pendingOutputFrames=numOutputBytesToFrames(pendingOutputBytes);\n    if (pendingOutputFrames >= targetSampleSizeFrames) {\n      writeSampleMetadata(targetSampleSizeFrames);\n    }\n  }\n  if (endOfSampleData) {\n    int pendingOutputFrames=numOutputBytesToFrames(pendingOutputBytes);\n    if (pendingOutputFrames > 0) {\n      writeSampleMetadata(pendingOutputFrames);\n    }\n  }\n  return endOfSampleData;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 161,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2265,
        "startLineNumber" : 448,
        "startColumnNumber" : 4,
        "endLineNumber" : 497,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public boolean sampleData(ExtractorInput input,long bytesLeft) throws IOException {\n  int targetFramesRemaining=targetSampleSizeFrames - numOutputBytesToFrames(pendingOutputBytes);\n  int blocksToDecode=Util.ceilDivide(targetFramesRemaining,framesPerBlock);\n  int targetReadBytes=blocksToDecode * header.blockSize;\n  boolean endOfSampleData=bytesLeft == 0;\n  while (!endOfSampleData && pendingInputBytes < targetReadBytes) {\n    int bytesToRead=(int)min(targetReadBytes - pendingInputBytes,bytesLeft);\n    int bytesAppended=input.read(inputData,pendingInputBytes,bytesToRead);\n    if (bytesAppended == RESULT_END_OF_INPUT) {\n      endOfSampleData=true;\n    }\n else {\n      pendingInputBytes+=bytesAppended;\n    }\n  }\n  int pendingBlockCount=pendingInputBytes / header.blockSize;\n  if (pendingBlockCount > 0) {\n    decode(inputData,pendingBlockCount,decodedData);\n    pendingInputBytes-=pendingBlockCount * header.blockSize;\n    int decodedDataSize=decodedData.limit();\n    trackOutput.sampleData(decodedData,decodedDataSize);\n    pendingOutputBytes+=decodedDataSize;\n    int pendingOutputFrames=numOutputBytesToFrames(pendingOutputBytes);\n    if (pendingOutputFrames >= targetSampleSizeFrames) {\n      writeSampleMetadata(targetSampleSizeFrames);\n    }\n  }\n  if (endOfSampleData) {\n    int pendingOutputFrames=numOutputBytesToFrames(pendingOutputBytes);\n    if (pendingOutputFrames > 0) {\n      writeSampleMetadata(pendingOutputFrames);\n    }\n  }\n  return endOfSampleData;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 176,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 459,
        "startColumnNumber" : 6,
        "endLineNumber" : 459,
        "endColumnNumber" : 47
      },
      "nodeContext" : "boolean endOfSampleData=bytesLeft == 0;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 459,
    "startColumnNumber" : 32,
    "endLineNumber" : 459,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ ]
}