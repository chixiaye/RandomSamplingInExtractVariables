{
  "id" : 160,
  "expression" : "\"Clicking social \" + bc.getIDPAlias()",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/broker/KcOidcBrokerAcrParameterTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Clicking social \" + bc.getIDPAlias()",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 28,
      "startColumnNumber" : 18,
      "endLineNumber" : 28,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 56
      },
      "nodeContext" : "log.debug(\"Clicking social \" + bc.getIDPAlias())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 57
      },
      "nodeContext" : "log.debug(\"Clicking social \" + bc.getIDPAlias());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1971,
        "startLineNumber" : 23,
        "startColumnNumber" : 31,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  driver.navigate().to(getAccountUrl(getConsumerRoot(),bc.consumerRealmName()));\n  driver.navigate().to(driver.getCurrentUrl() + \"&\" + ACR_VALUES+ \"=\"+ ACR_3);\n  log.debug(\"Clicking social \" + bc.getIDPAlias());\n  loginPage.clickSocial(bc.getIDPAlias());\n  waitForPage(driver,\"sign in to\",true);\n  Assert.assertTrue(\"Driver should be on the provider realm page right now\",driver.getCurrentUrl().contains(\"/auth/realms/\" + bc.providerRealmName() + \"/\"));\n  Assert.assertTrue(ACR_VALUES + \"=\" + ACR_3+ \" should be part of the url\",driver.getCurrentUrl().contains(ACR_VALUES + \"=\" + ACR_3));\n  log.debug(\"Logging in\");\n  loginPage.login(bc.getUserLogin(),bc.getUserPassword());\n  waitForPage(driver,\"update account information\",false);\n  updateAccountInformationPage.assertCurrent();\n  Assert.assertTrue(\"We must be on correct realm right now\",driver.getCurrentUrl().contains(\"/auth/realms/\" + bc.consumerRealmName() + \"/\"));\n  log.debug(\"Updating info on updateAccount page\");\n  updateAccountInformationPage.updateAccountInformation(bc.getUserLogin(),bc.getUserEmail(),\"Firstname\",\"Lastname\");\n  UsersResource consumerUsers=adminClient.realm(bc.consumerRealmName()).users();\n  int userCount=consumerUsers.count();\n  Assert.assertTrue(\"There must be at least one user\",userCount > 0);\n  List<UserRepresentation> users=consumerUsers.search(\"\",0,userCount);\n  boolean isUserFound=false;\n  for (  UserRepresentation user : users) {\n    if (user.getUsername().equals(bc.getUserLogin()) && user.getEmail().equals(bc.getUserEmail())) {\n      isUserFound=true;\n      break;\n    }\n  }\n  Assert.assertTrue(\"There must be user \" + bc.getUserLogin() + \" in realm \"+ bc.consumerRealmName(),isUserFound);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2012,
        "startLineNumber" : 22,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected void loginUser(){\n  driver.navigate().to(getAccountUrl(getConsumerRoot(),bc.consumerRealmName()));\n  driver.navigate().to(driver.getCurrentUrl() + \"&\" + ACR_VALUES+ \"=\"+ ACR_3);\n  log.debug(\"Clicking social \" + bc.getIDPAlias());\n  loginPage.clickSocial(bc.getIDPAlias());\n  waitForPage(driver,\"sign in to\",true);\n  Assert.assertTrue(\"Driver should be on the provider realm page right now\",driver.getCurrentUrl().contains(\"/auth/realms/\" + bc.providerRealmName() + \"/\"));\n  Assert.assertTrue(ACR_VALUES + \"=\" + ACR_3+ \" should be part of the url\",driver.getCurrentUrl().contains(ACR_VALUES + \"=\" + ACR_3));\n  log.debug(\"Logging in\");\n  loginPage.login(bc.getUserLogin(),bc.getUserPassword());\n  waitForPage(driver,\"update account information\",false);\n  updateAccountInformationPage.assertCurrent();\n  Assert.assertTrue(\"We must be on correct realm right now\",driver.getCurrentUrl().contains(\"/auth/realms/\" + bc.consumerRealmName() + \"/\"));\n  log.debug(\"Updating info on updateAccount page\");\n  updateAccountInformationPage.updateAccountInformation(bc.getUserLogin(),bc.getUserEmail(),\"Firstname\",\"Lastname\");\n  UsersResource consumerUsers=adminClient.realm(bc.consumerRealmName()).users();\n  int userCount=consumerUsers.count();\n  Assert.assertTrue(\"There must be at least one user\",userCount > 0);\n  List<UserRepresentation> users=consumerUsers.search(\"\",0,userCount);\n  boolean isUserFound=false;\n  for (  UserRepresentation user : users) {\n    if (user.getUsername().equals(bc.getUserLogin()) && user.getEmail().equals(bc.getUserEmail())) {\n      isUserFound=true;\n      break;\n    }\n  }\n  Assert.assertTrue(\"There must be user \" + bc.getUserLogin() + \" in realm \"+ bc.consumerRealmName(),isUserFound);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 240,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 57
      },
      "nodeContext" : "log.debug(\"Clicking social \" + bc.getIDPAlias());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 37,
    "startLineNumber" : 28,
    "startColumnNumber" : 18,
    "endLineNumber" : 28,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ ]
}