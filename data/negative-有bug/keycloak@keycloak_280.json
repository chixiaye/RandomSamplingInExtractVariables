{
  "id" : 280,
  "expression" : "\"::\"",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/server-spi/src/main/java/org/keycloak/component/JsonConfigComponentModel.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"::\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 54,
      "startColumnNumber" : 37,
      "endLineNumber" : 54,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 54,
        "startColumnNumber" : 27,
        "endLineNumber" : 54,
        "endColumnNumber" : 112
      },
      "nodeContext" : "realmId + \"::\" + providerType+ \"::\"+ this.providerId+ \"::\"+ configNode.hashCode()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 112
      },
      "nodeContext" : "this.componentId=realmId + \"::\" + providerType+ \"::\"+ this.providerId+ \"::\"+ configNode.hashCode()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 113
      },
      "nodeContext" : "this.componentId=realmId + \"::\" + providerType+ \"::\"+ this.providerId+ \"::\"+ configNode.hashCode();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 687,
        "startLineNumber" : 44,
        "startColumnNumber" : 132,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  checkNotNull(providerType,\"providerType must be not null\");\n  checkNotNull(realmId,\"realmId must be not null\");\n  checkNotNull(providerId,\"providerId must be not null\");\n  checkNotNull(configNode,\"configNode must be not null for provider \" + providerId);\n  this.providerType=providerType.getName();\n  this.providerId=providerId;\n  this.configNode=configNode;\n  this.componentId=realmId + \"::\" + providerType+ \"::\"+ this.providerId+ \"::\"+ configNode.hashCode();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 60,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1155,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * @param providerType\n * @param realmId\n * @param providerId\n * @param configNode JSON configuration of this provider. For example if node corresponds to JSON like \"{\\\"foo\\\":\\\"bar\\\"}\", thencomponent configuration is supposed to have one configuration option \"foo\" with value \"bar\"\n */\npublic JsonConfigComponentModel(Class<? extends Provider> providerType,String realmId,String providerId,JsonNode configNode){\n  checkNotNull(providerType,\"providerType must be not null\");\n  checkNotNull(realmId,\"realmId must be not null\");\n  checkNotNull(providerId,\"providerId must be not null\");\n  checkNotNull(configNode,\"configNode must be not null for provider \" + providerId);\n  this.providerType=providerType.getName();\n  this.providerId=providerId;\n  this.configNode=configNode;\n  this.componentId=realmId + \"::\" + providerType+ \"::\"+ this.providerId+ \"::\"+ configNode.hashCode();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 84,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 113
      },
      "nodeContext" : "this.componentId=realmId + \"::\" + providerType+ \"::\"+ this.providerId+ \"::\"+ configNode.hashCode();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"::\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 54,
      "startColumnNumber" : 59,
      "endLineNumber" : 54,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 54,
        "startColumnNumber" : 27,
        "endLineNumber" : 54,
        "endColumnNumber" : 112
      },
      "nodeContext" : "realmId + \"::\" + providerType+ \"::\"+ this.providerId+ \"::\"+ configNode.hashCode()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 112
      },
      "nodeContext" : "this.componentId=realmId + \"::\" + providerType+ \"::\"+ this.providerId+ \"::\"+ configNode.hashCode()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 113
      },
      "nodeContext" : "this.componentId=realmId + \"::\" + providerType+ \"::\"+ this.providerId+ \"::\"+ configNode.hashCode();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 687,
        "startLineNumber" : 44,
        "startColumnNumber" : 132,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  checkNotNull(providerType,\"providerType must be not null\");\n  checkNotNull(realmId,\"realmId must be not null\");\n  checkNotNull(providerId,\"providerId must be not null\");\n  checkNotNull(configNode,\"configNode must be not null for provider \" + providerId);\n  this.providerType=providerType.getName();\n  this.providerId=providerId;\n  this.configNode=configNode;\n  this.componentId=realmId + \"::\" + providerType+ \"::\"+ this.providerId+ \"::\"+ configNode.hashCode();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 60,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1155,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * @param providerType\n * @param realmId\n * @param providerId\n * @param configNode JSON configuration of this provider. For example if node corresponds to JSON like \"{\\\"foo\\\":\\\"bar\\\"}\", thencomponent configuration is supposed to have one configuration option \"foo\" with value \"bar\"\n */\npublic JsonConfigComponentModel(Class<? extends Provider> providerType,String realmId,String providerId,JsonNode configNode){\n  checkNotNull(providerType,\"providerType must be not null\");\n  checkNotNull(realmId,\"realmId must be not null\");\n  checkNotNull(providerId,\"providerId must be not null\");\n  checkNotNull(configNode,\"configNode must be not null for provider \" + providerId);\n  this.providerType=providerType.getName();\n  this.providerId=providerId;\n  this.configNode=configNode;\n  this.componentId=realmId + \"::\" + providerType+ \"::\"+ this.providerId+ \"::\"+ configNode.hashCode();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 84,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 113
      },
      "nodeContext" : "this.componentId=realmId + \"::\" + providerType+ \"::\"+ this.providerId+ \"::\"+ configNode.hashCode();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"::\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 54,
      "startColumnNumber" : 84,
      "endLineNumber" : 54,
      "endColumnNumber" : 88
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 54,
        "startColumnNumber" : 27,
        "endLineNumber" : 54,
        "endColumnNumber" : 112
      },
      "nodeContext" : "realmId + \"::\" + providerType+ \"::\"+ this.providerId+ \"::\"+ configNode.hashCode()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 112
      },
      "nodeContext" : "this.componentId=realmId + \"::\" + providerType+ \"::\"+ this.providerId+ \"::\"+ configNode.hashCode()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 113
      },
      "nodeContext" : "this.componentId=realmId + \"::\" + providerType+ \"::\"+ this.providerId+ \"::\"+ configNode.hashCode();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 687,
        "startLineNumber" : 44,
        "startColumnNumber" : 132,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  checkNotNull(providerType,\"providerType must be not null\");\n  checkNotNull(realmId,\"realmId must be not null\");\n  checkNotNull(providerId,\"providerId must be not null\");\n  checkNotNull(configNode,\"configNode must be not null for provider \" + providerId);\n  this.providerType=providerType.getName();\n  this.providerId=providerId;\n  this.configNode=configNode;\n  this.componentId=realmId + \"::\" + providerType+ \"::\"+ this.providerId+ \"::\"+ configNode.hashCode();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 60,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1155,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * @param providerType\n * @param realmId\n * @param providerId\n * @param configNode JSON configuration of this provider. For example if node corresponds to JSON like \"{\\\"foo\\\":\\\"bar\\\"}\", thencomponent configuration is supposed to have one configuration option \"foo\" with value \"bar\"\n */\npublic JsonConfigComponentModel(Class<? extends Provider> providerType,String realmId,String providerId,JsonNode configNode){\n  checkNotNull(providerType,\"providerType must be not null\");\n  checkNotNull(realmId,\"realmId must be not null\");\n  checkNotNull(providerId,\"providerId must be not null\");\n  checkNotNull(configNode,\"configNode must be not null for provider \" + providerId);\n  this.providerType=providerType.getName();\n  this.providerId=providerId;\n  this.configNode=configNode;\n  this.componentId=realmId + \"::\" + providerType+ \"::\"+ this.providerId+ \"::\"+ configNode.hashCode();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 84,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 113
      },
      "nodeContext" : "this.componentId=realmId + \"::\" + providerType+ \"::\"+ this.providerId+ \"::\"+ configNode.hashCode();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 54,
    "startColumnNumber" : 37,
    "endLineNumber" : 54,
    "endColumnNumber" : 41
  }, {
    "charLength" : 4,
    "startLineNumber" : 54,
    "startColumnNumber" : 59,
    "endLineNumber" : 54,
    "endColumnNumber" : 63
  }, {
    "charLength" : 4,
    "startLineNumber" : 54,
    "startColumnNumber" : 84,
    "endLineNumber" : 54,
    "endColumnNumber" : 88
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 0
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 0
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 0
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 0
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 0
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 0
  } ]
}