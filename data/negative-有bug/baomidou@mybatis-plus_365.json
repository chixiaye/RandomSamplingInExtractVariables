{
  "id" : 365,
  "expression" : "0",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "7815611a659da4cc8d5443f5ef4c10ca0d937582",
  "filePath" : "/mybatis-plus-support/src/main/java/com/baomidou/mybatisplus/toolkit/SqlUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 126,
      "startColumnNumber" : 25,
      "endLineNumber" : 126,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 126,
        "startColumnNumber" : 21,
        "endLineNumber" : 126,
        "endColumnNumber" : 26
      },
      "nodeContext" : "i=0",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 126,
        "startColumnNumber" : 17,
        "endLineNumber" : 126,
        "endColumnNumber" : 26
      },
      "nodeContext" : "int i=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 358,
        "startLineNumber" : 126,
        "startColumnNumber" : 12,
        "endLineNumber" : 134,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < columns.size(); ) {\n  String cs=columns.get(i);\n  if (StringUtils.isNotEmpty(cs)) {\n    builder.append(cs).append(orderWord);\n  }\n  if (++i != columns.size() && StringUtils.isNotEmpty(cs)) {\n    builder.append(\", \");\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 480,
        "startLineNumber" : 124,
        "startColumnNumber" : 49,
        "endLineNumber" : 136,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  StringBuilder builder=new StringBuilder(16);\n  for (int i=0; i < columns.size(); ) {\n    String cs=columns.get(i);\n    if (StringUtils.isNotEmpty(cs)) {\n      builder.append(cs).append(orderWord);\n    }\n    if (++i != columns.size() && StringUtils.isNotEmpty(cs)) {\n      builder.append(\", \");\n    }\n  }\n  return builder.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 67,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 521,
        "startLineNumber" : 124,
        "startColumnNumber" : 8,
        "endLineNumber" : 136,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (CollectionUtils.isNotEmpty(columns)) {\n  StringBuilder builder=new StringBuilder(16);\n  for (int i=0; i < columns.size(); ) {\n    String cs=columns.get(i);\n    if (StringUtils.isNotEmpty(cs)) {\n      builder.append(cs).append(orderWord);\n    }\n    if (++i != columns.size() && StringUtils.isNotEmpty(cs)) {\n      builder.append(\", \");\n    }\n  }\n  return builder.toString();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 72,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 571,
        "startLineNumber" : 123,
        "startColumnNumber" : 85,
        "endLineNumber" : 138,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (CollectionUtils.isNotEmpty(columns)) {\n    StringBuilder builder=new StringBuilder(16);\n    for (int i=0; i < columns.size(); ) {\n      String cs=columns.get(i);\n      if (StringUtils.isNotEmpty(cs)) {\n        builder.append(cs).append(orderWord);\n      }\n      if (++i != columns.size() && StringUtils.isNotEmpty(cs)) {\n        builder.append(\", \");\n      }\n    }\n    return builder.toString();\n  }\n  return StringUtils.EMPTY;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 737,
        "startLineNumber" : 117,
        "startColumnNumber" : 4,
        "endLineNumber" : 138,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * 拼接多个排序方法\n * @param columns\n * @param orderWord\n */\nprivate static String concatOrderBuilder(List<String> columns,String orderWord){\n  if (CollectionUtils.isNotEmpty(columns)) {\n    StringBuilder builder=new StringBuilder(16);\n    for (int i=0; i < columns.size(); ) {\n      String cs=columns.get(i);\n      if (StringUtils.isNotEmpty(cs)) {\n        builder.append(cs).append(orderWord);\n      }\n      if (++i != columns.size() && StringUtils.isNotEmpty(cs)) {\n        builder.append(\", \");\n      }\n    }\n    return builder.toString();\n  }\n  return StringUtils.EMPTY;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 95,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 126,
        "startColumnNumber" : 17,
        "endLineNumber" : 126,
        "endColumnNumber" : 26
      },
      "nodeContext" : "int i=0",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 126,
    "startColumnNumber" : 25,
    "endLineNumber" : 126,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ ]
}