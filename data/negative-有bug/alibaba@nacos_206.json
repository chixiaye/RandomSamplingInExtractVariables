{
  "id" : 206,
  "expression" : "server",
  "projectName" : "alibaba@nacos",
  "commitID" : "4e7346db1d6657ffe07c96bebd2d348229c2812f",
  "filePath" : "/common/src/main/java/com/alibaba/nacos/common/remote/client/RpcClient.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "server",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 311,
      "startColumnNumber" : 54,
      "endLineNumber" : 311,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 311,
        "startColumnNumber" : 36,
        "endLineNumber" : 311,
        "endColumnNumber" : 61
      },
      "nodeContext" : "resolveServerInfo(server)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 311,
        "startColumnNumber" : 36,
        "endLineNumber" : 311,
        "endColumnNumber" : 74
      },
      "nodeContext" : "resolveServerInfo(server).getAddress()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 128,
        "startLineNumber" : 311,
        "startColumnNumber" : 36,
        "endLineNumber" : 312,
        "endColumnNumber" : 89
      },
      "nodeContext" : "resolveServerInfo(server).getAddress().equals(reconnectContext.serverInfo.getAddress())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 268,
        "startLineNumber" : 311,
        "startColumnNumber" : 32,
        "endLineNumber" : 315,
        "endColumnNumber" : 33
      },
      "nodeContext" : "if (resolveServerInfo(server).getAddress().equals(reconnectContext.serverInfo.getAddress())) {\n  serverExist=true;\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 332,
        "startLineNumber" : 310,
        "startColumnNumber" : 89,
        "endLineNumber" : 316,
        "endColumnNumber" : 29
      },
      "nodeContext" : "{\n  if (resolveServerInfo(server).getAddress().equals(reconnectContext.serverInfo.getAddress())) {\n    serverExist=true;\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 393,
        "startLineNumber" : 310,
        "startColumnNumber" : 28,
        "endLineNumber" : 316,
        "endColumnNumber" : 29
      },
      "nodeContext" : "for (String server : getServerListFactory().getServerList()) {\n  if (resolveServerInfo(server).getAddress().equals(reconnectContext.serverInfo.getAddress())) {\n    serverExist=true;\n    break;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 29,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1259,
        "startLineNumber" : 305,
        "startColumnNumber" : 65,
        "endLineNumber" : 325,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  String address=reconnectContext.serverInfo.serverIp + Constants.COLON + (reconnectContext.serverInfo.serverPort);\n  boolean serverExist=false;\n  for (  String server : getServerListFactory().getServerList()) {\n    if (resolveServerInfo(server).getAddress().equals(reconnectContext.serverInfo.getAddress())) {\n      serverExist=true;\n      break;\n    }\n  }\n  if (!serverExist) {\n    LoggerUtils.printIfInfoEnabled(LOGGER,\"[{}] Recommend server is not in server list ,ignore recommend server {}\",name,reconnectContext.serverInfo.getAddress());\n    reconnectContext.serverInfo=null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1300,
        "startLineNumber" : 305,
        "startColumnNumber" : 24,
        "endLineNumber" : 325,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (reconnectContext.serverInfo != null) {\n  String address=reconnectContext.serverInfo.serverIp + Constants.COLON + (reconnectContext.serverInfo.serverPort);\n  boolean serverExist=false;\n  for (  String server : getServerListFactory().getServerList()) {\n    if (resolveServerInfo(server).getAddress().equals(reconnectContext.serverInfo.getAddress())) {\n      serverExist=true;\n      break;\n    }\n  }\n  if (!serverExist) {\n    LoggerUtils.printIfInfoEnabled(LOGGER,\"[{}] Recommend server is not in server list ,ignore recommend server {}\",name,reconnectContext.serverInfo.getAddress());\n    reconnectContext.serverInfo=null;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 83,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 3191,
        "startLineNumber" : 273,
        "startColumnNumber" : 24,
        "endLineNumber" : 327,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  ReconnectContext reconnectContext=reconnectionSignal.poll(keepAliveTime,TimeUnit.MILLISECONDS);\n  if (reconnectContext == null) {\n    long now=System.currentTimeMillis();\n    if (now - lastActiveTimeStamp >= keepAliveTime) {\n      boolean isHealthy=healthCheck();\n      if (!isHealthy) {\n        if (currentConnection == null) {\n          continue;\n        }\n        LoggerUtils.printIfInfoEnabled(LOGGER,\"[{}]Server healthy check fail,currentConnection={}\",name,currentConnection.getConnectionId());\n        if (rpcClientStatus.compareAndSet(RpcClientStatus.RUNNING,RpcClientStatus.UNHEALTHY)) {\n          reconnectContext=new ReconnectContext(null,false);\n        }\n else {\n          continue;\n        }\n      }\n else {\n        lastActiveTimeStamp=now;\n        continue;\n      }\n    }\n else {\n      continue;\n    }\n  }\n  if (reconnectContext.serverInfo != null) {\n    String address=reconnectContext.serverInfo.serverIp + Constants.COLON + (reconnectContext.serverInfo.serverPort);\n    boolean serverExist=false;\n    for (    String server : getServerListFactory().getServerList()) {\n      if (resolveServerInfo(server).getAddress().equals(reconnectContext.serverInfo.getAddress())) {\n        serverExist=true;\n        break;\n      }\n    }\n    if (!serverExist) {\n      LoggerUtils.printIfInfoEnabled(LOGGER,\"[{}] Recommend server is not in server list ,ignore recommend server {}\",name,reconnectContext.serverInfo.getAddress());\n      reconnectContext.serverInfo=null;\n    }\n  }\n  reconnect(reconnectContext.serverInfo,reconnectContext.onRequestFail);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 179,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3284,
        "startLineNumber" : 273,
        "startColumnNumber" : 20,
        "endLineNumber" : 329,
        "endColumnNumber" : 21
      },
      "nodeContext" : "try {\n  ReconnectContext reconnectContext=reconnectionSignal.poll(keepAliveTime,TimeUnit.MILLISECONDS);\n  if (reconnectContext == null) {\n    long now=System.currentTimeMillis();\n    if (now - lastActiveTimeStamp >= keepAliveTime) {\n      boolean isHealthy=healthCheck();\n      if (!isHealthy) {\n        if (currentConnection == null) {\n          continue;\n        }\n        LoggerUtils.printIfInfoEnabled(LOGGER,\"[{}]Server healthy check fail,currentConnection={}\",name,currentConnection.getConnectionId());\n        if (rpcClientStatus.compareAndSet(RpcClientStatus.RUNNING,RpcClientStatus.UNHEALTHY)) {\n          reconnectContext=new ReconnectContext(null,false);\n        }\n else {\n          continue;\n        }\n      }\n else {\n        lastActiveTimeStamp=now;\n        continue;\n      }\n    }\n else {\n      continue;\n    }\n  }\n  if (reconnectContext.serverInfo != null) {\n    String address=reconnectContext.serverInfo.serverIp + Constants.COLON + (reconnectContext.serverInfo.serverPort);\n    boolean serverExist=false;\n    for (    String server : getServerListFactory().getServerList()) {\n      if (resolveServerInfo(server).getAddress().equals(reconnectContext.serverInfo.getAddress())) {\n        serverExist=true;\n        break;\n      }\n    }\n    if (!serverExist) {\n      LoggerUtils.printIfInfoEnabled(LOGGER,\"[{}] Recommend server is not in server list ,ignore recommend server {}\",name,reconnectContext.serverInfo.getAddress());\n      reconnectContext.serverInfo=null;\n    }\n  }\n  reconnect(reconnectContext.serverInfo,reconnectContext.onRequestFail);\n}\n catch (Throwable throwable) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 186,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 3324,
        "startLineNumber" : 272,
        "startColumnNumber" : 29,
        "endLineNumber" : 330,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  try {\n    ReconnectContext reconnectContext=reconnectionSignal.poll(keepAliveTime,TimeUnit.MILLISECONDS);\n    if (reconnectContext == null) {\n      long now=System.currentTimeMillis();\n      if (now - lastActiveTimeStamp >= keepAliveTime) {\n        boolean isHealthy=healthCheck();\n        if (!isHealthy) {\n          if (currentConnection == null) {\n            continue;\n          }\n          LoggerUtils.printIfInfoEnabled(LOGGER,\"[{}]Server healthy check fail,currentConnection={}\",name,currentConnection.getConnectionId());\n          if (rpcClientStatus.compareAndSet(RpcClientStatus.RUNNING,RpcClientStatus.UNHEALTHY)) {\n            reconnectContext=new ReconnectContext(null,false);\n          }\n else {\n            continue;\n          }\n        }\n else {\n          lastActiveTimeStamp=now;\n          continue;\n        }\n      }\n else {\n        continue;\n      }\n    }\n    if (reconnectContext.serverInfo != null) {\n      String address=reconnectContext.serverInfo.serverIp + Constants.COLON + (reconnectContext.serverInfo.serverPort);\n      boolean serverExist=false;\n      for (      String server : getServerListFactory().getServerList()) {\n        if (resolveServerInfo(server).getAddress().equals(reconnectContext.serverInfo.getAddress())) {\n          serverExist=true;\n          break;\n        }\n      }\n      if (!serverExist) {\n        LoggerUtils.printIfInfoEnabled(LOGGER,\"[{}] Recommend server is not in server list ,ignore recommend server {}\",name,reconnectContext.serverInfo.getAddress());\n        reconnectContext.serverInfo=null;\n      }\n    }\n    reconnect(reconnectContext.serverInfo,reconnectContext.onRequestFail);\n  }\n catch (  Throwable throwable) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 187,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3337,
        "startLineNumber" : 272,
        "startColumnNumber" : 16,
        "endLineNumber" : 330,
        "endColumnNumber" : 17
      },
      "nodeContext" : "while (true) {\n  try {\n    ReconnectContext reconnectContext=reconnectionSignal.poll(keepAliveTime,TimeUnit.MILLISECONDS);\n    if (reconnectContext == null) {\n      long now=System.currentTimeMillis();\n      if (now - lastActiveTimeStamp >= keepAliveTime) {\n        boolean isHealthy=healthCheck();\n        if (!isHealthy) {\n          if (currentConnection == null) {\n            continue;\n          }\n          LoggerUtils.printIfInfoEnabled(LOGGER,\"[{}]Server healthy check fail,currentConnection={}\",name,currentConnection.getConnectionId());\n          if (rpcClientStatus.compareAndSet(RpcClientStatus.RUNNING,RpcClientStatus.UNHEALTHY)) {\n            reconnectContext=new ReconnectContext(null,false);\n          }\n else {\n            continue;\n          }\n        }\n else {\n          lastActiveTimeStamp=now;\n          continue;\n        }\n      }\n else {\n        continue;\n      }\n    }\n    if (reconnectContext.serverInfo != null) {\n      String address=reconnectContext.serverInfo.serverIp + Constants.COLON + (reconnectContext.serverInfo.serverPort);\n      boolean serverExist=false;\n      for (      String server : getServerListFactory().getServerList()) {\n        if (resolveServerInfo(server).getAddress().equals(reconnectContext.serverInfo.getAddress())) {\n          serverExist=true;\n          break;\n        }\n      }\n      if (!serverExist) {\n        LoggerUtils.printIfInfoEnabled(LOGGER,\"[{}] Recommend server is not in server list ,ignore recommend server {}\",name,reconnectContext.serverInfo.getAddress());\n        reconnectContext.serverInfo=null;\n      }\n    }\n    reconnect(reconnectContext.serverInfo,reconnectContext.onRequestFail);\n  }\n catch (  Throwable throwable) {\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 189,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3369,
        "startLineNumber" : 271,
        "startColumnNumber" : 30,
        "endLineNumber" : 331,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  while (true) {\n    try {\n      ReconnectContext reconnectContext=reconnectionSignal.poll(keepAliveTime,TimeUnit.MILLISECONDS);\n      if (reconnectContext == null) {\n        long now=System.currentTimeMillis();\n        if (now - lastActiveTimeStamp >= keepAliveTime) {\n          boolean isHealthy=healthCheck();\n          if (!isHealthy) {\n            if (currentConnection == null) {\n              continue;\n            }\n            LoggerUtils.printIfInfoEnabled(LOGGER,\"[{}]Server healthy check fail,currentConnection={}\",name,currentConnection.getConnectionId());\n            if (rpcClientStatus.compareAndSet(RpcClientStatus.RUNNING,RpcClientStatus.UNHEALTHY)) {\n              reconnectContext=new ReconnectContext(null,false);\n            }\n else {\n              continue;\n            }\n          }\n else {\n            lastActiveTimeStamp=now;\n            continue;\n          }\n        }\n else {\n          continue;\n        }\n      }\n      if (reconnectContext.serverInfo != null) {\n        String address=reconnectContext.serverInfo.serverIp + Constants.COLON + (reconnectContext.serverInfo.serverPort);\n        boolean serverExist=false;\n        for (        String server : getServerListFactory().getServerList()) {\n          if (resolveServerInfo(server).getAddress().equals(reconnectContext.serverInfo.getAddress())) {\n            serverExist=true;\n            break;\n          }\n        }\n        if (!serverExist) {\n          LoggerUtils.printIfInfoEnabled(LOGGER,\"[{}] Recommend server is not in server list ,ignore recommend server {}\",name,reconnectContext.serverInfo.getAddress());\n          reconnectContext.serverInfo=null;\n        }\n      }\n      reconnect(reconnectContext.serverInfo,reconnectContext.onRequestFail);\n    }\n catch (    Throwable throwable) {\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 190,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3409,
        "startLineNumber" : 270,
        "startColumnNumber" : 12,
        "endLineNumber" : 331,
        "endColumnNumber" : 13
      },
      "nodeContext" : "@Override public void run(){\n  while (true) {\n    try {\n      ReconnectContext reconnectContext=reconnectionSignal.poll(keepAliveTime,TimeUnit.MILLISECONDS);\n      if (reconnectContext == null) {\n        long now=System.currentTimeMillis();\n        if (now - lastActiveTimeStamp >= keepAliveTime) {\n          boolean isHealthy=healthCheck();\n          if (!isHealthy) {\n            if (currentConnection == null) {\n              continue;\n            }\n            LoggerUtils.printIfInfoEnabled(LOGGER,\"[{}]Server healthy check fail,currentConnection={}\",name,currentConnection.getConnectionId());\n            if (rpcClientStatus.compareAndSet(RpcClientStatus.RUNNING,RpcClientStatus.UNHEALTHY)) {\n              reconnectContext=new ReconnectContext(null,false);\n            }\n else {\n              continue;\n            }\n          }\n else {\n            lastActiveTimeStamp=now;\n            continue;\n          }\n        }\n else {\n          continue;\n        }\n      }\n      if (reconnectContext.serverInfo != null) {\n        String address=reconnectContext.serverInfo.serverIp + Constants.COLON + (reconnectContext.serverInfo.serverPort);\n        boolean serverExist=false;\n        for (        String server : getServerListFactory().getServerList()) {\n          if (resolveServerInfo(server).getAddress().equals(reconnectContext.serverInfo.getAddress())) {\n            serverExist=true;\n            break;\n          }\n        }\n        if (!serverExist) {\n          LoggerUtils.printIfInfoEnabled(LOGGER,\"[{}] Recommend server is not in server list ,ignore recommend server {}\",name,reconnectContext.serverInfo.getAddress());\n          reconnectContext.serverInfo=null;\n        }\n      }\n      reconnect(reconnectContext.serverInfo,reconnectContext.onRequestFail);\n    }\n catch (    Throwable throwable) {\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 196,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 311,
        "startColumnNumber" : 36,
        "endLineNumber" : 311,
        "endColumnNumber" : 74
      },
      "nodeContext" : "resolveServerInfo(server).getAddress()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 311,
    "startColumnNumber" : 54,
    "endLineNumber" : 311,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ ]
}