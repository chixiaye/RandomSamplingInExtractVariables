{
  "id" : 6,
  "expression" : "value",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/server/src/org/openqa/selenium/docker/v1_40/PullImage.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "value",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 70,
      "startColumnNumber" : 27,
      "endLineNumber" : 70,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 70,
        "startColumnNumber" : 27,
        "endLineNumber" : 70,
        "endColumnNumber" : 47
      },
      "nodeContext" : "value.get(\"message\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 70,
        "startColumnNumber" : 18,
        "endLineNumber" : 70,
        "endColumnNumber" : 47
      },
      "nodeContext" : "(String)value.get(\"message\")",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 47
      },
      "nodeContext" : "message=(String)value.get(\"message\")",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 48
      },
      "nodeContext" : "message=(String)value.get(\"message\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 68,
        "startColumnNumber" : 10,
        "endLineNumber" : 71,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  Map<String,Object> value=JSON.toType(Contents.string(res),MAP_TYPE);\n  message=(String)value.get(\"message\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 197,
        "startLineNumber" : 68,
        "startColumnNumber" : 6,
        "endLineNumber" : 73,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  Map<String,Object> value=JSON.toType(Contents.string(res),MAP_TYPE);\n  message=(String)value.get(\"message\");\n}\n catch (Exception e) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 328,
        "startLineNumber" : 65,
        "startColumnNumber" : 29,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String message=\"Unable to pull image: \" + ref.getFamiliarName();\n  try {\n    Map<String,Object> value=JSON.toType(Contents.string(res),MAP_TYPE);\n    message=(String)value.get(\"message\");\n  }\n catch (  Exception e) {\n  }\n  throw new DockerException(message);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 353,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!res.isSuccessful()) {\n  String message=\"Unable to pull image: \" + ref.getFamiliarName();\n  try {\n    Map<String,Object> value=JSON.toType(Contents.string(res),MAP_TYPE);\n    message=(String)value.get(\"message\");\n  }\n catch (  Exception e) {\n  }\n  throw new DockerException(message);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 57,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 970,
        "startLineNumber" : 45,
        "startColumnNumber" : 35,
        "endLineNumber" : 77,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Require.nonNull(\"Reference to pull\",ref);\n  LOG.info(\"Pulling \" + ref);\n  HttpRequest req=new HttpRequest(POST,\"/v1.40/images/create\").addHeader(\"Content-Type\",JSON_UTF_8).addHeader(\"Content-Length\",\"0\").addQueryParameter(\"fromImage\",String.format(\"%s/%s\",ref.getRepository(),ref.getName()));\n  if (ref.getDigest() != null) {\n    req.addQueryParameter(\"tag\",ref.getDigest());\n  }\n else   if (ref.getTag() != null) {\n    req.addQueryParameter(\"tag\",ref.getTag());\n  }\n  HttpResponse res=client.execute(req);\n  LOG.info(\"Have response from server\");\n  if (!res.isSuccessful()) {\n    String message=\"Unable to pull image: \" + ref.getFamiliarName();\n    try {\n      Map<String,Object> value=JSON.toType(Contents.string(res),MAP_TYPE);\n      message=(String)value.get(\"message\");\n    }\n catch (    Exception e) {\n    }\n    throw new DockerException(message);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1003,
        "startLineNumber" : 45,
        "startColumnNumber" : 2,
        "endLineNumber" : 77,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void apply(Reference ref){\n  Require.nonNull(\"Reference to pull\",ref);\n  LOG.info(\"Pulling \" + ref);\n  HttpRequest req=new HttpRequest(POST,\"/v1.40/images/create\").addHeader(\"Content-Type\",JSON_UTF_8).addHeader(\"Content-Length\",\"0\").addQueryParameter(\"fromImage\",String.format(\"%s/%s\",ref.getRepository(),ref.getName()));\n  if (ref.getDigest() != null) {\n    req.addQueryParameter(\"tag\",ref.getDigest());\n  }\n else   if (ref.getTag() != null) {\n    req.addQueryParameter(\"tag\",ref.getTag());\n  }\n  HttpResponse res=client.execute(req);\n  LOG.info(\"Have response from server\");\n  if (!res.isSuccessful()) {\n    String message=\"Unable to pull image: \" + ref.getFamiliarName();\n    try {\n      Map<String,Object> value=JSON.toType(Contents.string(res),MAP_TYPE);\n      message=(String)value.get(\"message\");\n    }\n catch (    Exception e) {\n    }\n    throw new DockerException(message);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 154,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 48
      },
      "nodeContext" : "message=(String)value.get(\"message\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.Object>"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 70,
    "startColumnNumber" : 27,
    "endLineNumber" : 70,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}