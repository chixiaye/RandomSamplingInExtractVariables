{
  "id" : 192,
  "expression" : "B * B - 4 * A * C",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/geometry/LineCircleIntersection.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "B * B - 4 * A * C",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 35,
      "startColumnNumber" : 15,
      "endLineNumber" : 35,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 8,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 35,
        "startColumnNumber" : 11,
        "endLineNumber" : 35,
        "endColumnNumber" : 32
      },
      "nodeContext" : "D=B * B - 4 * A * C",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 35,
        "endColumnNumber" : 33
      },
      "nodeContext" : "double D=B * B - 4 * A * C;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1645,
        "startLineNumber" : 23,
        "startColumnNumber" : 66,
        "endLineNumber" : 81,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  double A=a * a + b * b;\n  double B=2 * a * b* y - 2 * a * c - 2 * b * b* x;\n  double C=b * b * x* x + b * b * y* y - 2 * b * c* y + c * c - b * b * r* r;\n  double D=B * B - 4 * A * C;\n  double x1, y1, x2, y2;\n  if (abs(b) < EPS) {\n    double vx=c / a;\n    if (abs(x - vx) > r)     return new Point2D[]{};\n    if (abs((vx - r) - x) < EPS || abs((vx + r) - x) < EPS)     return new Point2D[]{new Point2D.Double(vx,y)};\n    double dx=abs(vx - x);\n    double dy=sqrt(r * r - dx * dx);\n    return new Point2D[]{new Point2D.Double(vx,y + dy),new Point2D.Double(vx,y - dy)};\n  }\n else   if (abs(D) < EPS) {\n    x1=-B / (2 * A);\n    y1=(c - a * x1) / b;\n    return new Point2D[]{new Point2D.Double(x1,y1)};\n  }\n else   if (D < 0) {\n    return new Point2D[]{};\n  }\n else {\n    D=sqrt(D);\n    x1=(-B + D) / (2 * A);\n    y1=(c - a * x1) / b;\n    x2=(-B - D) / (2 * A);\n    y2=(c - a * x2) / b;\n    return new Point2D[]{new Point2D.Double(x1,y1),new Point2D.Double(x2,y2)};\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 327,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1759,
        "startLineNumber" : 22,
        "startColumnNumber" : 2,
        "endLineNumber" : 81,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static Point2D[] lineCircleIntersection(double a,double b,double c,double x,double y,double r){\n  double A=a * a + b * b;\n  double B=2 * a * b* y - 2 * a * c - 2 * b * b* x;\n  double C=b * b * x* x + b * b * y* y - 2 * b * c* y + c * c - b * b * r* r;\n  double D=B * B - 4 * A * C;\n  double x1, y1, x2, y2;\n  if (abs(b) < EPS) {\n    double vx=c / a;\n    if (abs(x - vx) > r)     return new Point2D[]{};\n    if (abs((vx - r) - x) < EPS || abs((vx + r) - x) < EPS)     return new Point2D[]{new Point2D.Double(vx,y)};\n    double dx=abs(vx - x);\n    double dy=sqrt(r * r - dx * dx);\n    return new Point2D[]{new Point2D.Double(vx,y + dy),new Point2D.Double(vx,y - dy)};\n  }\n else   if (abs(D) < EPS) {\n    x1=-B / (2 * A);\n    y1=(c - a * x1) / b;\n    return new Point2D[]{new Point2D.Double(x1,y1)};\n  }\n else   if (D < 0) {\n    return new Point2D[]{};\n  }\n else {\n    D=sqrt(D);\n    x1=(-B + D) / (2 * A);\n    y1=(c - a * x1) / b;\n    x2=(-B - D) / (2 * A);\n    y2=(c - a * x2) / b;\n    return new Point2D[]{new Point2D.Double(x1,y1),new Point2D.Double(x2,y2)};\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 353,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 35,
        "endColumnNumber" : 33
      },
      "nodeContext" : "double D=B * B - 4 * A * C;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 9,
    "type" : "double"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 35,
    "startColumnNumber" : 15,
    "endLineNumber" : 35,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}