{
  "id" : 372,
  "expression" : "TableRuleAssert",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-test/shardingsphere-parser-test/src/main/java/org/apache/shardingsphere/test/sql/parser/parameterized/asserts/statement/distsql/rdl/create/impl/CreateShardingTableRuleStatementAssert.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "TableRuleAssert",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 94,
      "startColumnNumber" : 16,
      "endLineNumber" : 94,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 94,
        "startColumnNumber" : 16,
        "endLineNumber" : 94,
        "endColumnNumber" : 92
      },
      "nodeContext" : "TableRuleAssert.assertIs(assertContext,tableRuleSegment,expectedTableRule)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 94,
        "startColumnNumber" : 16,
        "endLineNumber" : 94,
        "endColumnNumber" : 93
      },
      "nodeContext" : "TableRuleAssert.assertIs(assertContext,tableRuleSegment,expectedTableRule);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 209,
        "startLineNumber" : 92,
        "startColumnNumber" : 61,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  ExpectedTableRule expectedTableRule=expected.get(count);\n  TableRuleAssert.assertIs(assertContext,tableRuleSegment,expectedTableRule);\n  count++;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 258,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (TableRuleSegment tableRuleSegment : actual) {\n  ExpectedTableRule expectedTableRule=expected.get(count);\n  TableRuleAssert.assertIs(assertContext,tableRuleSegment,expectedTableRule);\n  count++;\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 411,
        "startLineNumber" : 89,
        "startColumnNumber" : 15,
        "endLineNumber" : 97,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  assertNotNull(assertContext.getText(\"Actual sharding table rule should exist.\"),actual);\n  int count=0;\n  for (  TableRuleSegment tableRuleSegment : actual) {\n    ExpectedTableRule expectedTableRule=expected.get(count);\n    TableRuleAssert.assertIs(assertContext,tableRuleSegment,expectedTableRule);\n    count++;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 553,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (null == expected) {\n  assertNull(assertContext.getText(\"Actual sharding table rule should not exist.\"),actual);\n}\n else {\n  assertNotNull(assertContext.getText(\"Actual sharding table rule should exist.\"),actual);\n  int count=0;\n  for (  TableRuleSegment tableRuleSegment : actual) {\n    ExpectedTableRule expectedTableRule=expected.get(count);\n    TableRuleAssert.assertIs(assertContext,tableRuleSegment,expectedTableRule);\n    count++;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 569,
        "startLineNumber" : 86,
        "startColumnNumber" : 174,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (null == expected) {\n    assertNull(assertContext.getText(\"Actual sharding table rule should not exist.\"),actual);\n  }\n else {\n    assertNotNull(assertContext.getText(\"Actual sharding table rule should exist.\"),actual);\n    int count=0;\n    for (    TableRuleSegment tableRuleSegment : actual) {\n      ExpectedTableRule expectedTableRule=expected.get(count);\n      TableRuleAssert.assertIs(assertContext,tableRuleSegment,expectedTableRule);\n      count++;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 54,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 739,
        "startLineNumber" : 86,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static void assertShardingTableRules(final SQLCaseAssertContext assertContext,final Collection<TableRuleSegment> actual,final List<ExpectedTableRule> expected){\n  if (null == expected) {\n    assertNull(assertContext.getText(\"Actual sharding table rule should not exist.\"),actual);\n  }\n else {\n    assertNotNull(assertContext.getText(\"Actual sharding table rule should exist.\"),actual);\n    int count=0;\n    for (    TableRuleSegment tableRuleSegment : actual) {\n      ExpectedTableRule expectedTableRule=expected.get(count);\n      TableRuleAssert.assertIs(assertContext,tableRuleSegment,expectedTableRule);\n      count++;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 80,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 94,
        "startColumnNumber" : 16,
        "endLineNumber" : 94,
        "endColumnNumber" : 93
      },
      "nodeContext" : "TableRuleAssert.assertIs(assertContext,tableRuleSegment,expectedTableRule);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.shardingsphere.test.sql.parser.parameterized.asserts.segment.distsql.TableRuleAssert"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 94,
    "startColumnNumber" : 16,
    "endLineNumber" : 94,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ ]
}