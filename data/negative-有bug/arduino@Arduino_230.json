{
  "id" : 230,
  "expression" : "selectionStart == selectionEnd",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/app/src/processing/app/syntax/TextAreaPainter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "selectionStart == selectionEnd",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 688,
      "startColumnNumber" : 8,
      "endLineNumber" : 688,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1975,
        "startLineNumber" : 688,
        "startColumnNumber" : 4,
        "endLineNumber" : 732,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (selectionStart == selectionEnd) {\n  if (lineHighlight) {\n    gfx.setColor(lineHighlightColor);\n    gfx.fillRect(0,y,getWidth(),height);\n  }\n}\n else {\n  gfx.setColor(selectionColor);\n  int selectionStartLine=textArea.getSelectionStartLine();\n  int selectionEndLine=textArea.getSelectionStopLine();\n  int lineStart=textArea.getLineStartOffset(line);\n  int x1, x2;\n  if (textArea.isSelectionRectangular()) {\n    int lineLen=textArea.getLineLength(line);\n    x1=textArea._offsetToX(line,Math.min(lineLen,selectionStart - textArea.getLineStartOffset(selectionStartLine)));\n    x2=textArea._offsetToX(line,Math.min(lineLen,selectionEnd - textArea.getLineStartOffset(selectionEndLine)));\n    if (x1 == x2)     x2++;\n  }\n else   if (selectionStartLine == selectionEndLine) {\n    x1=textArea._offsetToX(line,selectionStart - lineStart);\n    x2=textArea._offsetToX(line,selectionEnd - lineStart);\n  }\n else   if (line == selectionStartLine) {\n    x1=textArea._offsetToX(line,selectionStart - lineStart);\n    x2=getWidth();\n  }\n else   if (line == selectionEndLine) {\n    x1=textArea._offsetToX(line,0);\n    x2=textArea._offsetToX(line,selectionEnd - lineStart);\n  }\n else {\n    x1=textArea._offsetToX(line,0);\n    x2=getWidth();\n  }\n  gfx.fillRect(x1 > x2 ? x2 : x1,y,x1 > x2 ? (x1 - x2) : (x2 - x1),height);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 216,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2175,
        "startLineNumber" : 681,
        "startColumnNumber" : 2,
        "endLineNumber" : 734,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int height=fm.getHeight();\n  y+=fm.getLeading() + fm.getMaxDescent();\n  int selectionStart=textArea.getSelectionStart();\n  int selectionEnd=textArea.getSelectionStop();\n  if (selectionStart == selectionEnd) {\n    if (lineHighlight) {\n      gfx.setColor(lineHighlightColor);\n      gfx.fillRect(0,y,getWidth(),height);\n    }\n  }\n else {\n    gfx.setColor(selectionColor);\n    int selectionStartLine=textArea.getSelectionStartLine();\n    int selectionEndLine=textArea.getSelectionStopLine();\n    int lineStart=textArea.getLineStartOffset(line);\n    int x1, x2;\n    if (textArea.isSelectionRectangular()) {\n      int lineLen=textArea.getLineLength(line);\n      x1=textArea._offsetToX(line,Math.min(lineLen,selectionStart - textArea.getLineStartOffset(selectionStartLine)));\n      x2=textArea._offsetToX(line,Math.min(lineLen,selectionEnd - textArea.getLineStartOffset(selectionEndLine)));\n      if (x1 == x2)       x2++;\n    }\n else     if (selectionStartLine == selectionEndLine) {\n      x1=textArea._offsetToX(line,selectionStart - lineStart);\n      x2=textArea._offsetToX(line,selectionEnd - lineStart);\n    }\n else     if (line == selectionStartLine) {\n      x1=textArea._offsetToX(line,selectionStart - lineStart);\n      x2=getWidth();\n    }\n else     if (line == selectionEndLine) {\n      x1=textArea._offsetToX(line,0);\n      x2=textArea._offsetToX(line,selectionEnd - lineStart);\n    }\n else {\n      x1=textArea._offsetToX(line,0);\n      x2=getWidth();\n    }\n    gfx.fillRect(x1 > x2 ? x2 : x1,y,x1 > x2 ? (x1 - x2) : (x2 - x1),height);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 248,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2242,
        "startLineNumber" : 680,
        "startColumnNumber" : 2,
        "endLineNumber" : 734,
        "endColumnNumber" : 3
      },
      "nodeContext" : "protected void paintLineHighlight(Graphics gfx,int line,int y){\n  int height=fm.getHeight();\n  y+=fm.getLeading() + fm.getMaxDescent();\n  int selectionStart=textArea.getSelectionStart();\n  int selectionEnd=textArea.getSelectionStop();\n  if (selectionStart == selectionEnd) {\n    if (lineHighlight) {\n      gfx.setColor(lineHighlightColor);\n      gfx.fillRect(0,y,getWidth(),height);\n    }\n  }\n else {\n    gfx.setColor(selectionColor);\n    int selectionStartLine=textArea.getSelectionStartLine();\n    int selectionEndLine=textArea.getSelectionStopLine();\n    int lineStart=textArea.getLineStartOffset(line);\n    int x1, x2;\n    if (textArea.isSelectionRectangular()) {\n      int lineLen=textArea.getLineLength(line);\n      x1=textArea._offsetToX(line,Math.min(lineLen,selectionStart - textArea.getLineStartOffset(selectionStartLine)));\n      x2=textArea._offsetToX(line,Math.min(lineLen,selectionEnd - textArea.getLineStartOffset(selectionEndLine)));\n      if (x1 == x2)       x2++;\n    }\n else     if (selectionStartLine == selectionEndLine) {\n      x1=textArea._offsetToX(line,selectionStart - lineStart);\n      x2=textArea._offsetToX(line,selectionEnd - lineStart);\n    }\n else     if (line == selectionStartLine) {\n      x1=textArea._offsetToX(line,selectionStart - lineStart);\n      x2=getWidth();\n    }\n else     if (line == selectionEndLine) {\n      x1=textArea._offsetToX(line,0);\n      x2=textArea._offsetToX(line,selectionEnd - lineStart);\n    }\n else {\n      x1=textArea._offsetToX(line,0);\n      x2=getWidth();\n    }\n    gfx.fillRect(x1 > x2 ? x2 : x1,y,x1 > x2 ? (x1 - x2) : (x2 - x1),height);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 262,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1975,
        "startLineNumber" : 688,
        "startColumnNumber" : 4,
        "endLineNumber" : 732,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (selectionStart == selectionEnd) {\n  if (lineHighlight) {\n    gfx.setColor(lineHighlightColor);\n    gfx.fillRect(0,y,getWidth(),height);\n  }\n}\n else {\n  gfx.setColor(selectionColor);\n  int selectionStartLine=textArea.getSelectionStartLine();\n  int selectionEndLine=textArea.getSelectionStopLine();\n  int lineStart=textArea.getLineStartOffset(line);\n  int x1, x2;\n  if (textArea.isSelectionRectangular()) {\n    int lineLen=textArea.getLineLength(line);\n    x1=textArea._offsetToX(line,Math.min(lineLen,selectionStart - textArea.getLineStartOffset(selectionStartLine)));\n    x2=textArea._offsetToX(line,Math.min(lineLen,selectionEnd - textArea.getLineStartOffset(selectionEndLine)));\n    if (x1 == x2)     x2++;\n  }\n else   if (selectionStartLine == selectionEndLine) {\n    x1=textArea._offsetToX(line,selectionStart - lineStart);\n    x2=textArea._offsetToX(line,selectionEnd - lineStart);\n  }\n else   if (line == selectionStartLine) {\n    x1=textArea._offsetToX(line,selectionStart - lineStart);\n    x2=getWidth();\n  }\n else   if (line == selectionEndLine) {\n    x1=textArea._offsetToX(line,0);\n    x2=textArea._offsetToX(line,selectionEnd - lineStart);\n  }\n else {\n    x1=textArea._offsetToX(line,0);\n    x2=getWidth();\n  }\n  gfx.fillRect(x1 > x2 ? x2 : x1,y,x1 > x2 ? (x1 - x2) : (x2 - x1),height);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 216,
      "astHeight" : 12
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 30,
    "startLineNumber" : 688,
    "startColumnNumber" : 8,
    "endLineNumber" : 688,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ ]
}