{
  "id" : 34,
  "expression" : "elementKey",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-context/src/main/java/org/springframework/context/expression/CachedExpressionEvaluator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "elementKey",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 85,
      "startColumnNumber" : 42,
      "endLineNumber" : 85,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 85,
        "startColumnNumber" : 32,
        "endLineNumber" : 85,
        "endColumnNumber" : 65
      },
      "nodeContext" : "createKey(elementKey,expression)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 85,
        "startColumnNumber" : 16,
        "endLineNumber" : 85,
        "endColumnNumber" : 65
      },
      "nodeContext" : "expressionKey=createKey(elementKey,expression)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 85,
        "startColumnNumber" : 2,
        "endLineNumber" : 85,
        "endColumnNumber" : 66
      },
      "nodeContext" : "ExpressionKey expressionKey=createKey(elementKey,expression);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 245,
        "startLineNumber" : 83,
        "startColumnNumber" : 54,
        "endLineNumber" : 92,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  ExpressionKey expressionKey=createKey(elementKey,expression);\n  Expression expr=cache.get(expressionKey);\n  if (expr == null) {\n    expr=getParser().parseExpression(expression);\n    cache.put(expressionKey,expr);\n  }\n  return expr;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 649,
        "startLineNumber" : 75,
        "startColumnNumber" : 1,
        "endLineNumber" : 92,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Return the  {@link Expression} for the specified SpEL value<p>Parse the expression if it hasn't been already.\n * @param cache the cache to use\n * @param elementKey the element on which the expression is defined\n * @param expression the expression to parse\n */\nprotected Expression getExpression(Map<ExpressionKey,Expression> cache,AnnotatedElementKey elementKey,String expression){\n  ExpressionKey expressionKey=createKey(elementKey,expression);\n  Expression expr=cache.get(expressionKey);\n  if (expr == null) {\n    expr=getParser().parseExpression(expression);\n    cache.put(expressionKey,expr);\n  }\n  return expr;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 63,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 85,
        "startColumnNumber" : 2,
        "endLineNumber" : 85,
        "endColumnNumber" : 66
      },
      "nodeContext" : "ExpressionKey expressionKey=createKey(elementKey,expression);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.springframework.context.expression.AnnotatedElementKey"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 85,
    "startColumnNumber" : 42,
    "endLineNumber" : 85,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}