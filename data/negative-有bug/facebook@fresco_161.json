{
  "id" : 161,
  "expression" : "fields[i].getName()",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/vito/litho/src/test/java/com/facebook/fresco/vito/litho/BaseImageSpecTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "fields[i].getName()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 78,
      "startColumnNumber" : 22,
      "endLineNumber" : 78,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 78,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 42
      },
      "nodeContext" : "propNames.add(fields[i].getName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 78,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 43
      },
      "nodeContext" : "propNames.add(fields[i].getName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 77,
        "startColumnNumber" : 55,
        "endLineNumber" : 79,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  propNames.add(fields[i].getName());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 77,
        "startColumnNumber" : 6,
        "endLineNumber" : 79,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (fields[i].getAnnotation(Prop.class) != null) {\n  propNames.add(fields[i].getName());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 76,
        "startColumnNumber" : 44,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (fields[i].getAnnotation(Prop.class) != null) {\n    propNames.add(fields[i].getName());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 156,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < fields.length; i++) {\n  if (fields[i].getAnnotation(Prop.class) != null) {\n    propNames.add(fields[i].getName());\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 35,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 872,
        "startLineNumber" : 72,
        "startColumnNumber" : 57,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Field[] fields=getSpecClassName().getDeclaredFields();\n  List<String> propNames=new LinkedList<>();\n  for (int i=0; i < fields.length; i++) {\n    if (fields[i].getAnnotation(Prop.class) != null) {\n      propNames.add(fields[i].getName());\n    }\n  }\n  propNames.removeAll(SHOULD_UPDATE_PROPS_WHITELIST);\n  final int propsCount=propNames.size();\n  final Method[] methods=getSpecClassName().getDeclaredMethods();\n  final int parametersCount=mShouldUpdateMethod.getParameterCount();\n  assertThat(parametersCount).withFailMessage(\"Expecting %s props to be checked %s, but shouldUpdate accepts only %d parameters\",propsCount,propNames,parametersCount).isGreaterThanOrEqualTo(propsCount);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 935,
        "startLineNumber" : 71,
        "startColumnNumber" : 2,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testShouldUpdateMethodChecksForEveryProp(){\n  Field[] fields=getSpecClassName().getDeclaredFields();\n  List<String> propNames=new LinkedList<>();\n  for (int i=0; i < fields.length; i++) {\n    if (fields[i].getAnnotation(Prop.class) != null) {\n      propNames.add(fields[i].getName());\n    }\n  }\n  propNames.removeAll(SHOULD_UPDATE_PROPS_WHITELIST);\n  final int propsCount=propNames.size();\n  final Method[] methods=getSpecClassName().getDeclaredMethods();\n  final int parametersCount=mShouldUpdateMethod.getParameterCount();\n  assertThat(parametersCount).withFailMessage(\"Expecting %s props to be checked %s, but shouldUpdate accepts only %d parameters\",propsCount,propNames,parametersCount).isGreaterThanOrEqualTo(propsCount);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 111,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 78,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 43
      },
      "nodeContext" : "propNames.add(fields[i].getName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 78,
    "startColumnNumber" : 22,
    "endLineNumber" : 78,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}