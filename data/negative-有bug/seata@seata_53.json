{
  "id" : 53,
  "expression" : "decodeResult",
  "projectName" : "seata@seata",
  "commitID" : "42d41623178ab076b11b27a0f049ac3ed7f1a9dc",
  "filePath" : "/core/src/test/java/io/seata/core/protocol/MergedWarpMessageTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "decodeResult",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 59,
      "startColumnNumber" : 8,
      "endLineNumber" : 59,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 54
      },
      "nodeContext" : "decodeResult.decode(buffer.writeBytes(result))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 55
      },
      "nodeContext" : "decodeResult.decode(buffer.writeBytes(result));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1100,
        "startLineNumber" : 54,
        "startColumnNumber" : 25,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final GlobalBeginRequest globalBeginRequest=buildGlobalBeginRequest();\n  byte[] result=new byte[]{0,0,0,12,0,1,0,1,0,0,11,-72,0,2,120,120};\n  ByteBuf buffer=ByteBufAllocator.DEFAULT.buffer();\n  MergedWarpMessage decodeResult=new MergedWarpMessage();\n  decodeResult.decode(buffer.writeBytes(result));\n  final AbstractMessage expected=decodeResult.msgs.get(0);\n  assertThat(true).isEqualTo(expected instanceof GlobalBeginRequest);\n  GlobalBeginRequest decodeGlobalBeginRequest=(GlobalBeginRequest)expected;\n  assertThat(globalBeginRequest.getTransactionName()).isEqualTo(decodeGlobalBeginRequest.getTransactionName());\n  assertThat(globalBeginRequest.getTimeout()).isEqualTo(decodeGlobalBeginRequest.getTimeout());\n  assertThat(globalBeginRequest.getTimeout()).isEqualTo(decodeGlobalBeginRequest.getTimeout());\n  assertThat(globalBeginRequest.getTypeCode()).isEqualTo(decodeGlobalBeginRequest.getTypeCode());\n  assertThat(\"xx\").isEqualTo(decodeGlobalBeginRequest.getTransactionName());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 147,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1131,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void decode(){\n  final GlobalBeginRequest globalBeginRequest=buildGlobalBeginRequest();\n  byte[] result=new byte[]{0,0,0,12,0,1,0,1,0,0,11,-72,0,2,120,120};\n  ByteBuf buffer=ByteBufAllocator.DEFAULT.buffer();\n  MergedWarpMessage decodeResult=new MergedWarpMessage();\n  decodeResult.decode(buffer.writeBytes(result));\n  final AbstractMessage expected=decodeResult.msgs.get(0);\n  assertThat(true).isEqualTo(expected instanceof GlobalBeginRequest);\n  GlobalBeginRequest decodeGlobalBeginRequest=(GlobalBeginRequest)expected;\n  assertThat(globalBeginRequest.getTransactionName()).isEqualTo(decodeGlobalBeginRequest.getTransactionName());\n  assertThat(globalBeginRequest.getTimeout()).isEqualTo(decodeGlobalBeginRequest.getTimeout());\n  assertThat(globalBeginRequest.getTimeout()).isEqualTo(decodeGlobalBeginRequest.getTimeout());\n  assertThat(globalBeginRequest.getTypeCode()).isEqualTo(decodeGlobalBeginRequest.getTypeCode());\n  assertThat(\"xx\").isEqualTo(decodeGlobalBeginRequest.getTransactionName());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 153,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 55
      },
      "nodeContext" : "decodeResult.decode(buffer.writeBytes(result));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "io.seata.core.protocol.MergedWarpMessage"
  }, {
    "nodeContext" : "decodeResult",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 60,
      "startColumnNumber" : 41,
      "endLineNumber" : 60,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 60,
        "startColumnNumber" : 41,
        "endLineNumber" : 60,
        "endColumnNumber" : 58
      },
      "nodeContext" : "decodeResult.msgs",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 60,
        "startColumnNumber" : 41,
        "endLineNumber" : 60,
        "endColumnNumber" : 65
      },
      "nodeContext" : "decodeResult.msgs.get(0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 60,
        "startColumnNumber" : 30,
        "endLineNumber" : 60,
        "endColumnNumber" : 65
      },
      "nodeContext" : "expected=decodeResult.msgs.get(0)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 66
      },
      "nodeContext" : "final AbstractMessage expected=decodeResult.msgs.get(0);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1100,
        "startLineNumber" : 54,
        "startColumnNumber" : 25,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final GlobalBeginRequest globalBeginRequest=buildGlobalBeginRequest();\n  byte[] result=new byte[]{0,0,0,12,0,1,0,1,0,0,11,-72,0,2,120,120};\n  ByteBuf buffer=ByteBufAllocator.DEFAULT.buffer();\n  MergedWarpMessage decodeResult=new MergedWarpMessage();\n  decodeResult.decode(buffer.writeBytes(result));\n  final AbstractMessage expected=decodeResult.msgs.get(0);\n  assertThat(true).isEqualTo(expected instanceof GlobalBeginRequest);\n  GlobalBeginRequest decodeGlobalBeginRequest=(GlobalBeginRequest)expected;\n  assertThat(globalBeginRequest.getTransactionName()).isEqualTo(decodeGlobalBeginRequest.getTransactionName());\n  assertThat(globalBeginRequest.getTimeout()).isEqualTo(decodeGlobalBeginRequest.getTimeout());\n  assertThat(globalBeginRequest.getTimeout()).isEqualTo(decodeGlobalBeginRequest.getTimeout());\n  assertThat(globalBeginRequest.getTypeCode()).isEqualTo(decodeGlobalBeginRequest.getTypeCode());\n  assertThat(\"xx\").isEqualTo(decodeGlobalBeginRequest.getTransactionName());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 147,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1131,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void decode(){\n  final GlobalBeginRequest globalBeginRequest=buildGlobalBeginRequest();\n  byte[] result=new byte[]{0,0,0,12,0,1,0,1,0,0,11,-72,0,2,120,120};\n  ByteBuf buffer=ByteBufAllocator.DEFAULT.buffer();\n  MergedWarpMessage decodeResult=new MergedWarpMessage();\n  decodeResult.decode(buffer.writeBytes(result));\n  final AbstractMessage expected=decodeResult.msgs.get(0);\n  assertThat(true).isEqualTo(expected instanceof GlobalBeginRequest);\n  GlobalBeginRequest decodeGlobalBeginRequest=(GlobalBeginRequest)expected;\n  assertThat(globalBeginRequest.getTransactionName()).isEqualTo(decodeGlobalBeginRequest.getTransactionName());\n  assertThat(globalBeginRequest.getTimeout()).isEqualTo(decodeGlobalBeginRequest.getTimeout());\n  assertThat(globalBeginRequest.getTimeout()).isEqualTo(decodeGlobalBeginRequest.getTimeout());\n  assertThat(globalBeginRequest.getTypeCode()).isEqualTo(decodeGlobalBeginRequest.getTypeCode());\n  assertThat(\"xx\").isEqualTo(decodeGlobalBeginRequest.getTransactionName());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 153,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 66
      },
      "nodeContext" : "final AbstractMessage expected=decodeResult.msgs.get(0);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "io.seata.core.protocol.MergedWarpMessage"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 59,
    "startColumnNumber" : 8,
    "endLineNumber" : 59,
    "endColumnNumber" : 20
  }, {
    "charLength" : 12,
    "startLineNumber" : 60,
    "startColumnNumber" : 41,
    "endLineNumber" : 60,
    "endColumnNumber" : 53
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}