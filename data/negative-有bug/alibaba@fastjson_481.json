{
  "id" : 481,
  "expression" : "\"setValue\"",
  "projectName" : "alibaba@fastjson",
  "commitID" : "d3797da65a3d9f804c9e275c25395c59e31f097d",
  "filePath" : "/src/test/java/com/alibaba/json/bvt/util/FieldInfoTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"setValue\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 36,
      "startColumnNumber" : 60,
      "endLineNumber" : 36,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 36,
        "startColumnNumber" : 24,
        "endLineNumber" : 36,
        "endColumnNumber" : 85
      },
      "nodeContext" : "GenericSetterEntity.class.getMethod(\"setValue\",Object.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 36,
        "startColumnNumber" : 15,
        "endLineNumber" : 36,
        "endColumnNumber" : 85
      },
      "nodeContext" : "method=GenericSetterEntity.class.getMethod(\"setValue\",Object.class)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 36,
        "startColumnNumber" : 8,
        "endLineNumber" : 36,
        "endColumnNumber" : 86
      },
      "nodeContext" : "Method method=GenericSetterEntity.class.getMethod(\"setValue\",Object.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2514,
        "startLineNumber" : 17,
        "startColumnNumber" : 45,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  FieldInfo fieldInfo=new FieldInfo(\"getValue\",Entity.class.getMethod(\"getValue\"),null,null,null,0,0,null,null,true);\n  Assert.assertEquals(null,fieldInfo.getAnnotation());\n  Field field=GenericFieldEntity.class.getField(\"value\");\n  Type type=new ParameterizedTypeImpl(new Type[]{ValueObject.class},null,GenericFieldEntity.class);\n  FieldInfo fieldInfoOfField=new FieldInfo(\"value\",null,field,GenericFieldEntity.class,type,0,0,null,null,true);\n  Assert.assertEquals(fieldInfoOfField.fieldType,ValueObject.class);\n  Assert.assertEquals(fieldInfoOfField.fieldClass,ValueObject.class);\n  field=GenericListFieldEntity.class.getField(\"value\");\n  type=new ParameterizedTypeImpl(new Type[]{ValueObject.class},null,GenericListFieldEntity.class);\n  FieldInfo fieldInfoOfListField=new FieldInfo(\"value\",null,field,GenericListFieldEntity.class,type,0,0,null,null,true);\n  ParameterizedTypeImpl actualFieldType=(ParameterizedTypeImpl)fieldInfoOfListField.fieldType;\n  Assert.assertEquals(actualFieldType.getActualTypeArguments()[0],ValueObject.class);\n  Assert.assertEquals(actualFieldType.getRawType(),List.class);\n  Assert.assertEquals(fieldInfoOfListField.fieldClass,List.class);\n  Assert.assertEquals(null,((ParameterizedTypeImpl)type).getOwnerType());\n  Method method=GenericSetterEntity.class.getMethod(\"setValue\",Object.class);\n  type=new ParameterizedTypeImpl(new Type[]{ValueObject.class},null,GenericSetterEntity.class);\n  FieldInfo fieldInfoOfSetter=new FieldInfo(\"value\",method,null,GenericSetterEntity.class,type,0,0,null,null,true);\n  Assert.assertEquals(fieldInfoOfSetter.fieldType,ValueObject.class);\n  Assert.assertEquals(fieldInfoOfSetter.fieldClass,ValueObject.class);\n  fieldInfoOfSetter.toString();\n  method=GenericListSetterEntity.class.getMethod(\"setValue\",List.class);\n  type=new ParameterizedTypeImpl(new Type[]{ValueObject.class},null,GenericListSetterEntity.class);\n  FieldInfo fieldInfoOfListSetter=new FieldInfo(\"value\",method,null,GenericListSetterEntity.class,type,0,0,null,null,true);\n  Assert.assertEquals(actualFieldType.getActualTypeArguments()[0],ValueObject.class);\n  Assert.assertEquals(actualFieldType.getRawType(),List.class);\n  Assert.assertEquals(fieldInfoOfListSetter.fieldClass,List.class);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 367,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2555,
        "startLineNumber" : 17,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void test_null() throws Exception {\n  FieldInfo fieldInfo=new FieldInfo(\"getValue\",Entity.class.getMethod(\"getValue\"),null,null,null,0,0,null,null,true);\n  Assert.assertEquals(null,fieldInfo.getAnnotation());\n  Field field=GenericFieldEntity.class.getField(\"value\");\n  Type type=new ParameterizedTypeImpl(new Type[]{ValueObject.class},null,GenericFieldEntity.class);\n  FieldInfo fieldInfoOfField=new FieldInfo(\"value\",null,field,GenericFieldEntity.class,type,0,0,null,null,true);\n  Assert.assertEquals(fieldInfoOfField.fieldType,ValueObject.class);\n  Assert.assertEquals(fieldInfoOfField.fieldClass,ValueObject.class);\n  field=GenericListFieldEntity.class.getField(\"value\");\n  type=new ParameterizedTypeImpl(new Type[]{ValueObject.class},null,GenericListFieldEntity.class);\n  FieldInfo fieldInfoOfListField=new FieldInfo(\"value\",null,field,GenericListFieldEntity.class,type,0,0,null,null,true);\n  ParameterizedTypeImpl actualFieldType=(ParameterizedTypeImpl)fieldInfoOfListField.fieldType;\n  Assert.assertEquals(actualFieldType.getActualTypeArguments()[0],ValueObject.class);\n  Assert.assertEquals(actualFieldType.getRawType(),List.class);\n  Assert.assertEquals(fieldInfoOfListField.fieldClass,List.class);\n  Assert.assertEquals(null,((ParameterizedTypeImpl)type).getOwnerType());\n  Method method=GenericSetterEntity.class.getMethod(\"setValue\",Object.class);\n  type=new ParameterizedTypeImpl(new Type[]{ValueObject.class},null,GenericSetterEntity.class);\n  FieldInfo fieldInfoOfSetter=new FieldInfo(\"value\",method,null,GenericSetterEntity.class,type,0,0,null,null,true);\n  Assert.assertEquals(fieldInfoOfSetter.fieldType,ValueObject.class);\n  Assert.assertEquals(fieldInfoOfSetter.fieldClass,ValueObject.class);\n  fieldInfoOfSetter.toString();\n  method=GenericListSetterEntity.class.getMethod(\"setValue\",List.class);\n  type=new ParameterizedTypeImpl(new Type[]{ValueObject.class},null,GenericListSetterEntity.class);\n  FieldInfo fieldInfoOfListSetter=new FieldInfo(\"value\",method,null,GenericListSetterEntity.class,type,0,0,null,null,true);\n  Assert.assertEquals(actualFieldType.getActualTypeArguments()[0],ValueObject.class);\n  Assert.assertEquals(actualFieldType.getRawType(),List.class);\n  Assert.assertEquals(fieldInfoOfListSetter.fieldClass,List.class);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 373,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 36,
        "startColumnNumber" : 8,
        "endLineNumber" : 36,
        "endColumnNumber" : 86
      },
      "nodeContext" : "Method method=GenericSetterEntity.class.getMethod(\"setValue\",Object.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"setValue\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 44,
      "startColumnNumber" : 57,
      "endLineNumber" : 44,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 44,
        "startColumnNumber" : 17,
        "endLineNumber" : 44,
        "endColumnNumber" : 80
      },
      "nodeContext" : "GenericListSetterEntity.class.getMethod(\"setValue\",List.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 80
      },
      "nodeContext" : "method=GenericListSetterEntity.class.getMethod(\"setValue\",List.class)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 81
      },
      "nodeContext" : "method=GenericListSetterEntity.class.getMethod(\"setValue\",List.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2514,
        "startLineNumber" : 17,
        "startColumnNumber" : 45,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  FieldInfo fieldInfo=new FieldInfo(\"getValue\",Entity.class.getMethod(\"getValue\"),null,null,null,0,0,null,null,true);\n  Assert.assertEquals(null,fieldInfo.getAnnotation());\n  Field field=GenericFieldEntity.class.getField(\"value\");\n  Type type=new ParameterizedTypeImpl(new Type[]{ValueObject.class},null,GenericFieldEntity.class);\n  FieldInfo fieldInfoOfField=new FieldInfo(\"value\",null,field,GenericFieldEntity.class,type,0,0,null,null,true);\n  Assert.assertEquals(fieldInfoOfField.fieldType,ValueObject.class);\n  Assert.assertEquals(fieldInfoOfField.fieldClass,ValueObject.class);\n  field=GenericListFieldEntity.class.getField(\"value\");\n  type=new ParameterizedTypeImpl(new Type[]{ValueObject.class},null,GenericListFieldEntity.class);\n  FieldInfo fieldInfoOfListField=new FieldInfo(\"value\",null,field,GenericListFieldEntity.class,type,0,0,null,null,true);\n  ParameterizedTypeImpl actualFieldType=(ParameterizedTypeImpl)fieldInfoOfListField.fieldType;\n  Assert.assertEquals(actualFieldType.getActualTypeArguments()[0],ValueObject.class);\n  Assert.assertEquals(actualFieldType.getRawType(),List.class);\n  Assert.assertEquals(fieldInfoOfListField.fieldClass,List.class);\n  Assert.assertEquals(null,((ParameterizedTypeImpl)type).getOwnerType());\n  Method method=GenericSetterEntity.class.getMethod(\"setValue\",Object.class);\n  type=new ParameterizedTypeImpl(new Type[]{ValueObject.class},null,GenericSetterEntity.class);\n  FieldInfo fieldInfoOfSetter=new FieldInfo(\"value\",method,null,GenericSetterEntity.class,type,0,0,null,null,true);\n  Assert.assertEquals(fieldInfoOfSetter.fieldType,ValueObject.class);\n  Assert.assertEquals(fieldInfoOfSetter.fieldClass,ValueObject.class);\n  fieldInfoOfSetter.toString();\n  method=GenericListSetterEntity.class.getMethod(\"setValue\",List.class);\n  type=new ParameterizedTypeImpl(new Type[]{ValueObject.class},null,GenericListSetterEntity.class);\n  FieldInfo fieldInfoOfListSetter=new FieldInfo(\"value\",method,null,GenericListSetterEntity.class,type,0,0,null,null,true);\n  Assert.assertEquals(actualFieldType.getActualTypeArguments()[0],ValueObject.class);\n  Assert.assertEquals(actualFieldType.getRawType(),List.class);\n  Assert.assertEquals(fieldInfoOfListSetter.fieldClass,List.class);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 367,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2555,
        "startLineNumber" : 17,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void test_null() throws Exception {\n  FieldInfo fieldInfo=new FieldInfo(\"getValue\",Entity.class.getMethod(\"getValue\"),null,null,null,0,0,null,null,true);\n  Assert.assertEquals(null,fieldInfo.getAnnotation());\n  Field field=GenericFieldEntity.class.getField(\"value\");\n  Type type=new ParameterizedTypeImpl(new Type[]{ValueObject.class},null,GenericFieldEntity.class);\n  FieldInfo fieldInfoOfField=new FieldInfo(\"value\",null,field,GenericFieldEntity.class,type,0,0,null,null,true);\n  Assert.assertEquals(fieldInfoOfField.fieldType,ValueObject.class);\n  Assert.assertEquals(fieldInfoOfField.fieldClass,ValueObject.class);\n  field=GenericListFieldEntity.class.getField(\"value\");\n  type=new ParameterizedTypeImpl(new Type[]{ValueObject.class},null,GenericListFieldEntity.class);\n  FieldInfo fieldInfoOfListField=new FieldInfo(\"value\",null,field,GenericListFieldEntity.class,type,0,0,null,null,true);\n  ParameterizedTypeImpl actualFieldType=(ParameterizedTypeImpl)fieldInfoOfListField.fieldType;\n  Assert.assertEquals(actualFieldType.getActualTypeArguments()[0],ValueObject.class);\n  Assert.assertEquals(actualFieldType.getRawType(),List.class);\n  Assert.assertEquals(fieldInfoOfListField.fieldClass,List.class);\n  Assert.assertEquals(null,((ParameterizedTypeImpl)type).getOwnerType());\n  Method method=GenericSetterEntity.class.getMethod(\"setValue\",Object.class);\n  type=new ParameterizedTypeImpl(new Type[]{ValueObject.class},null,GenericSetterEntity.class);\n  FieldInfo fieldInfoOfSetter=new FieldInfo(\"value\",method,null,GenericSetterEntity.class,type,0,0,null,null,true);\n  Assert.assertEquals(fieldInfoOfSetter.fieldType,ValueObject.class);\n  Assert.assertEquals(fieldInfoOfSetter.fieldClass,ValueObject.class);\n  fieldInfoOfSetter.toString();\n  method=GenericListSetterEntity.class.getMethod(\"setValue\",List.class);\n  type=new ParameterizedTypeImpl(new Type[]{ValueObject.class},null,GenericListSetterEntity.class);\n  FieldInfo fieldInfoOfListSetter=new FieldInfo(\"value\",method,null,GenericListSetterEntity.class,type,0,0,null,null,true);\n  Assert.assertEquals(actualFieldType.getActualTypeArguments()[0],ValueObject.class);\n  Assert.assertEquals(actualFieldType.getRawType(),List.class);\n  Assert.assertEquals(fieldInfoOfListSetter.fieldClass,List.class);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 373,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 81
      },
      "nodeContext" : "method=GenericListSetterEntity.class.getMethod(\"setValue\",List.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 36,
    "startColumnNumber" : 60,
    "endLineNumber" : 36,
    "endColumnNumber" : 70
  }, {
    "charLength" : 10,
    "startLineNumber" : 44,
    "startColumnNumber" : 57,
    "endLineNumber" : 44,
    "endColumnNumber" : 67
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}