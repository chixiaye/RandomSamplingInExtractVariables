{
  "id" : 207,
  "expression" : "attributeMap",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/server/src/org/openqa/selenium/grid/sessionqueue/local/LocalNewSessionQueue.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "attributeMap",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 115,
      "startColumnNumber" : 6,
      "endLineNumber" : 115,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 115,
        "startColumnNumber" : 6,
        "endLineNumber" : 116,
        "endColumnNumber" : 54
      },
      "nodeContext" : "attributeMap.put(AttributeKey.LOGGER_CLASS.getKey(),EventAttribute.setValue(getClass().getName()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 115,
        "startColumnNumber" : 6,
        "endLineNumber" : 116,
        "endColumnNumber" : 55
      },
      "nodeContext" : "attributeMap.put(AttributeKey.LOGGER_CLASS.getKey(),EventAttribute.setValue(getClass().getName()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 580,
        "startLineNumber" : 113,
        "startColumnNumber" : 8,
        "endLineNumber" : 127,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<String,EventAttributeValue> attributeMap=new HashMap<>();\n  attributeMap.put(AttributeKey.LOGGER_CLASS.getKey(),EventAttribute.setValue(getClass().getName()));\n  added=sessionRequests.offerLast(sessionRequest);\n  addRequestHeaders(request,requestId);\n  attributeMap.put(AttributeKey.REQUEST_ID.getKey(),EventAttribute.setValue(requestId.toString()));\n  attributeMap.put(\"request.added\",EventAttribute.setValue(added));\n  span.addEvent(\"Add new session request to the queue\",attributeMap);\n  return added;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 75,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 730,
        "startLineNumber" : 113,
        "startColumnNumber" : 4,
        "endLineNumber" : 133,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  Map<String,EventAttributeValue> attributeMap=new HashMap<>();\n  attributeMap.put(AttributeKey.LOGGER_CLASS.getKey(),EventAttribute.setValue(getClass().getName()));\n  added=sessionRequests.offerLast(sessionRequest);\n  addRequestHeaders(request,requestId);\n  attributeMap.put(AttributeKey.REQUEST_ID.getKey(),EventAttribute.setValue(requestId.toString()));\n  attributeMap.put(\"request.added\",EventAttribute.setValue(added));\n  span.addEvent(\"Add new session request to the queue\",attributeMap);\n  return added;\n}\n  finally {\n  writeLock.unlock();\n  span.close();\n  if (added) {\n    bus.fire(new NewSessionRequestEvent(requestId));\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 96,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1040,
        "startLineNumber" : 104,
        "startColumnNumber" : 69,
        "endLineNumber" : 134,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Require.nonNull(\"New Session request\",request);\n  Span span=tracer.getCurrentContext().createSpan(\"local_sessionqueue.add\");\n  boolean added=false;\n  SessionRequest sessionRequest=new SessionRequest(requestId,request);\n  Lock writeLock=lock.writeLock();\n  writeLock.lock();\n  try {\n    Map<String,EventAttributeValue> attributeMap=new HashMap<>();\n    attributeMap.put(AttributeKey.LOGGER_CLASS.getKey(),EventAttribute.setValue(getClass().getName()));\n    added=sessionRequests.offerLast(sessionRequest);\n    addRequestHeaders(request,requestId);\n    attributeMap.put(AttributeKey.REQUEST_ID.getKey(),EventAttribute.setValue(requestId.toString()));\n    attributeMap.put(\"request.added\",EventAttribute.setValue(added));\n    span.addEvent(\"Add new session request to the queue\",attributeMap);\n    return added;\n  }\n  finally {\n    writeLock.unlock();\n    span.close();\n    if (added) {\n      bus.fire(new NewSessionRequestEvent(requestId));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1119,
        "startLineNumber" : 103,
        "startColumnNumber" : 2,
        "endLineNumber" : 134,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public boolean offerLast(HttpRequest request,RequestId requestId){\n  Require.nonNull(\"New Session request\",request);\n  Span span=tracer.getCurrentContext().createSpan(\"local_sessionqueue.add\");\n  boolean added=false;\n  SessionRequest sessionRequest=new SessionRequest(requestId,request);\n  Lock writeLock=lock.writeLock();\n  writeLock.lock();\n  try {\n    Map<String,EventAttributeValue> attributeMap=new HashMap<>();\n    attributeMap.put(AttributeKey.LOGGER_CLASS.getKey(),EventAttribute.setValue(getClass().getName()));\n    added=sessionRequests.offerLast(sessionRequest);\n    addRequestHeaders(request,requestId);\n    attributeMap.put(AttributeKey.REQUEST_ID.getKey(),EventAttribute.setValue(requestId.toString()));\n    attributeMap.put(\"request.added\",EventAttribute.setValue(added));\n    span.addEvent(\"Add new session request to the queue\",attributeMap);\n    return added;\n  }\n  finally {\n    writeLock.unlock();\n    span.close();\n    if (added) {\n      bus.fire(new NewSessionRequestEvent(requestId));\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 155,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 115,
        "startColumnNumber" : 6,
        "endLineNumber" : 116,
        "endColumnNumber" : 54
      },
      "nodeContext" : "attributeMap.put(AttributeKey.LOGGER_CLASS.getKey(),EventAttribute.setValue(getClass().getName()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,org.openqa.selenium.remote.tracing.EventAttributeValue>"
  }, {
    "nodeContext" : "attributeMap",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 121,
      "startColumnNumber" : 6,
      "endLineNumber" : 121,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 121,
        "startColumnNumber" : 6,
        "endLineNumber" : 122,
        "endColumnNumber" : 88
      },
      "nodeContext" : "attributeMap.put(AttributeKey.REQUEST_ID.getKey(),EventAttribute.setValue(requestId.toString()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 121,
        "startColumnNumber" : 6,
        "endLineNumber" : 122,
        "endColumnNumber" : 89
      },
      "nodeContext" : "attributeMap.put(AttributeKey.REQUEST_ID.getKey(),EventAttribute.setValue(requestId.toString()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 580,
        "startLineNumber" : 113,
        "startColumnNumber" : 8,
        "endLineNumber" : 127,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<String,EventAttributeValue> attributeMap=new HashMap<>();\n  attributeMap.put(AttributeKey.LOGGER_CLASS.getKey(),EventAttribute.setValue(getClass().getName()));\n  added=sessionRequests.offerLast(sessionRequest);\n  addRequestHeaders(request,requestId);\n  attributeMap.put(AttributeKey.REQUEST_ID.getKey(),EventAttribute.setValue(requestId.toString()));\n  attributeMap.put(\"request.added\",EventAttribute.setValue(added));\n  span.addEvent(\"Add new session request to the queue\",attributeMap);\n  return added;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 75,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 730,
        "startLineNumber" : 113,
        "startColumnNumber" : 4,
        "endLineNumber" : 133,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  Map<String,EventAttributeValue> attributeMap=new HashMap<>();\n  attributeMap.put(AttributeKey.LOGGER_CLASS.getKey(),EventAttribute.setValue(getClass().getName()));\n  added=sessionRequests.offerLast(sessionRequest);\n  addRequestHeaders(request,requestId);\n  attributeMap.put(AttributeKey.REQUEST_ID.getKey(),EventAttribute.setValue(requestId.toString()));\n  attributeMap.put(\"request.added\",EventAttribute.setValue(added));\n  span.addEvent(\"Add new session request to the queue\",attributeMap);\n  return added;\n}\n  finally {\n  writeLock.unlock();\n  span.close();\n  if (added) {\n    bus.fire(new NewSessionRequestEvent(requestId));\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 96,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1040,
        "startLineNumber" : 104,
        "startColumnNumber" : 69,
        "endLineNumber" : 134,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Require.nonNull(\"New Session request\",request);\n  Span span=tracer.getCurrentContext().createSpan(\"local_sessionqueue.add\");\n  boolean added=false;\n  SessionRequest sessionRequest=new SessionRequest(requestId,request);\n  Lock writeLock=lock.writeLock();\n  writeLock.lock();\n  try {\n    Map<String,EventAttributeValue> attributeMap=new HashMap<>();\n    attributeMap.put(AttributeKey.LOGGER_CLASS.getKey(),EventAttribute.setValue(getClass().getName()));\n    added=sessionRequests.offerLast(sessionRequest);\n    addRequestHeaders(request,requestId);\n    attributeMap.put(AttributeKey.REQUEST_ID.getKey(),EventAttribute.setValue(requestId.toString()));\n    attributeMap.put(\"request.added\",EventAttribute.setValue(added));\n    span.addEvent(\"Add new session request to the queue\",attributeMap);\n    return added;\n  }\n  finally {\n    writeLock.unlock();\n    span.close();\n    if (added) {\n      bus.fire(new NewSessionRequestEvent(requestId));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1119,
        "startLineNumber" : 103,
        "startColumnNumber" : 2,
        "endLineNumber" : 134,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public boolean offerLast(HttpRequest request,RequestId requestId){\n  Require.nonNull(\"New Session request\",request);\n  Span span=tracer.getCurrentContext().createSpan(\"local_sessionqueue.add\");\n  boolean added=false;\n  SessionRequest sessionRequest=new SessionRequest(requestId,request);\n  Lock writeLock=lock.writeLock();\n  writeLock.lock();\n  try {\n    Map<String,EventAttributeValue> attributeMap=new HashMap<>();\n    attributeMap.put(AttributeKey.LOGGER_CLASS.getKey(),EventAttribute.setValue(getClass().getName()));\n    added=sessionRequests.offerLast(sessionRequest);\n    addRequestHeaders(request,requestId);\n    attributeMap.put(AttributeKey.REQUEST_ID.getKey(),EventAttribute.setValue(requestId.toString()));\n    attributeMap.put(\"request.added\",EventAttribute.setValue(added));\n    span.addEvent(\"Add new session request to the queue\",attributeMap);\n    return added;\n  }\n  finally {\n    writeLock.unlock();\n    span.close();\n    if (added) {\n      bus.fire(new NewSessionRequestEvent(requestId));\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 155,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 121,
        "startColumnNumber" : 6,
        "endLineNumber" : 122,
        "endColumnNumber" : 88
      },
      "nodeContext" : "attributeMap.put(AttributeKey.REQUEST_ID.getKey(),EventAttribute.setValue(requestId.toString()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,org.openqa.selenium.remote.tracing.EventAttributeValue>"
  }, {
    "nodeContext" : "attributeMap",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 123,
      "startColumnNumber" : 6,
      "endLineNumber" : 123,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 123,
        "startColumnNumber" : 6,
        "endLineNumber" : 123,
        "endColumnNumber" : 71
      },
      "nodeContext" : "attributeMap.put(\"request.added\",EventAttribute.setValue(added))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 123,
        "startColumnNumber" : 6,
        "endLineNumber" : 123,
        "endColumnNumber" : 72
      },
      "nodeContext" : "attributeMap.put(\"request.added\",EventAttribute.setValue(added));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 580,
        "startLineNumber" : 113,
        "startColumnNumber" : 8,
        "endLineNumber" : 127,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<String,EventAttributeValue> attributeMap=new HashMap<>();\n  attributeMap.put(AttributeKey.LOGGER_CLASS.getKey(),EventAttribute.setValue(getClass().getName()));\n  added=sessionRequests.offerLast(sessionRequest);\n  addRequestHeaders(request,requestId);\n  attributeMap.put(AttributeKey.REQUEST_ID.getKey(),EventAttribute.setValue(requestId.toString()));\n  attributeMap.put(\"request.added\",EventAttribute.setValue(added));\n  span.addEvent(\"Add new session request to the queue\",attributeMap);\n  return added;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 75,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 730,
        "startLineNumber" : 113,
        "startColumnNumber" : 4,
        "endLineNumber" : 133,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  Map<String,EventAttributeValue> attributeMap=new HashMap<>();\n  attributeMap.put(AttributeKey.LOGGER_CLASS.getKey(),EventAttribute.setValue(getClass().getName()));\n  added=sessionRequests.offerLast(sessionRequest);\n  addRequestHeaders(request,requestId);\n  attributeMap.put(AttributeKey.REQUEST_ID.getKey(),EventAttribute.setValue(requestId.toString()));\n  attributeMap.put(\"request.added\",EventAttribute.setValue(added));\n  span.addEvent(\"Add new session request to the queue\",attributeMap);\n  return added;\n}\n  finally {\n  writeLock.unlock();\n  span.close();\n  if (added) {\n    bus.fire(new NewSessionRequestEvent(requestId));\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 96,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1040,
        "startLineNumber" : 104,
        "startColumnNumber" : 69,
        "endLineNumber" : 134,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Require.nonNull(\"New Session request\",request);\n  Span span=tracer.getCurrentContext().createSpan(\"local_sessionqueue.add\");\n  boolean added=false;\n  SessionRequest sessionRequest=new SessionRequest(requestId,request);\n  Lock writeLock=lock.writeLock();\n  writeLock.lock();\n  try {\n    Map<String,EventAttributeValue> attributeMap=new HashMap<>();\n    attributeMap.put(AttributeKey.LOGGER_CLASS.getKey(),EventAttribute.setValue(getClass().getName()));\n    added=sessionRequests.offerLast(sessionRequest);\n    addRequestHeaders(request,requestId);\n    attributeMap.put(AttributeKey.REQUEST_ID.getKey(),EventAttribute.setValue(requestId.toString()));\n    attributeMap.put(\"request.added\",EventAttribute.setValue(added));\n    span.addEvent(\"Add new session request to the queue\",attributeMap);\n    return added;\n  }\n  finally {\n    writeLock.unlock();\n    span.close();\n    if (added) {\n      bus.fire(new NewSessionRequestEvent(requestId));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1119,
        "startLineNumber" : 103,
        "startColumnNumber" : 2,
        "endLineNumber" : 134,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public boolean offerLast(HttpRequest request,RequestId requestId){\n  Require.nonNull(\"New Session request\",request);\n  Span span=tracer.getCurrentContext().createSpan(\"local_sessionqueue.add\");\n  boolean added=false;\n  SessionRequest sessionRequest=new SessionRequest(requestId,request);\n  Lock writeLock=lock.writeLock();\n  writeLock.lock();\n  try {\n    Map<String,EventAttributeValue> attributeMap=new HashMap<>();\n    attributeMap.put(AttributeKey.LOGGER_CLASS.getKey(),EventAttribute.setValue(getClass().getName()));\n    added=sessionRequests.offerLast(sessionRequest);\n    addRequestHeaders(request,requestId);\n    attributeMap.put(AttributeKey.REQUEST_ID.getKey(),EventAttribute.setValue(requestId.toString()));\n    attributeMap.put(\"request.added\",EventAttribute.setValue(added));\n    span.addEvent(\"Add new session request to the queue\",attributeMap);\n    return added;\n  }\n  finally {\n    writeLock.unlock();\n    span.close();\n    if (added) {\n      bus.fire(new NewSessionRequestEvent(requestId));\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 155,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 123,
        "startColumnNumber" : 6,
        "endLineNumber" : 123,
        "endColumnNumber" : 72
      },
      "nodeContext" : "attributeMap.put(\"request.added\",EventAttribute.setValue(added));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,org.openqa.selenium.remote.tracing.EventAttributeValue>"
  }, {
    "nodeContext" : "attributeMap",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 124,
      "startColumnNumber" : 60,
      "endLineNumber" : 124,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 124,
        "startColumnNumber" : 6,
        "endLineNumber" : 124,
        "endColumnNumber" : 73
      },
      "nodeContext" : "span.addEvent(\"Add new session request to the queue\",attributeMap)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 124,
        "startColumnNumber" : 6,
        "endLineNumber" : 124,
        "endColumnNumber" : 74
      },
      "nodeContext" : "span.addEvent(\"Add new session request to the queue\",attributeMap);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 580,
        "startLineNumber" : 113,
        "startColumnNumber" : 8,
        "endLineNumber" : 127,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<String,EventAttributeValue> attributeMap=new HashMap<>();\n  attributeMap.put(AttributeKey.LOGGER_CLASS.getKey(),EventAttribute.setValue(getClass().getName()));\n  added=sessionRequests.offerLast(sessionRequest);\n  addRequestHeaders(request,requestId);\n  attributeMap.put(AttributeKey.REQUEST_ID.getKey(),EventAttribute.setValue(requestId.toString()));\n  attributeMap.put(\"request.added\",EventAttribute.setValue(added));\n  span.addEvent(\"Add new session request to the queue\",attributeMap);\n  return added;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 75,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 730,
        "startLineNumber" : 113,
        "startColumnNumber" : 4,
        "endLineNumber" : 133,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  Map<String,EventAttributeValue> attributeMap=new HashMap<>();\n  attributeMap.put(AttributeKey.LOGGER_CLASS.getKey(),EventAttribute.setValue(getClass().getName()));\n  added=sessionRequests.offerLast(sessionRequest);\n  addRequestHeaders(request,requestId);\n  attributeMap.put(AttributeKey.REQUEST_ID.getKey(),EventAttribute.setValue(requestId.toString()));\n  attributeMap.put(\"request.added\",EventAttribute.setValue(added));\n  span.addEvent(\"Add new session request to the queue\",attributeMap);\n  return added;\n}\n  finally {\n  writeLock.unlock();\n  span.close();\n  if (added) {\n    bus.fire(new NewSessionRequestEvent(requestId));\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 96,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1040,
        "startLineNumber" : 104,
        "startColumnNumber" : 69,
        "endLineNumber" : 134,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Require.nonNull(\"New Session request\",request);\n  Span span=tracer.getCurrentContext().createSpan(\"local_sessionqueue.add\");\n  boolean added=false;\n  SessionRequest sessionRequest=new SessionRequest(requestId,request);\n  Lock writeLock=lock.writeLock();\n  writeLock.lock();\n  try {\n    Map<String,EventAttributeValue> attributeMap=new HashMap<>();\n    attributeMap.put(AttributeKey.LOGGER_CLASS.getKey(),EventAttribute.setValue(getClass().getName()));\n    added=sessionRequests.offerLast(sessionRequest);\n    addRequestHeaders(request,requestId);\n    attributeMap.put(AttributeKey.REQUEST_ID.getKey(),EventAttribute.setValue(requestId.toString()));\n    attributeMap.put(\"request.added\",EventAttribute.setValue(added));\n    span.addEvent(\"Add new session request to the queue\",attributeMap);\n    return added;\n  }\n  finally {\n    writeLock.unlock();\n    span.close();\n    if (added) {\n      bus.fire(new NewSessionRequestEvent(requestId));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1119,
        "startLineNumber" : 103,
        "startColumnNumber" : 2,
        "endLineNumber" : 134,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public boolean offerLast(HttpRequest request,RequestId requestId){\n  Require.nonNull(\"New Session request\",request);\n  Span span=tracer.getCurrentContext().createSpan(\"local_sessionqueue.add\");\n  boolean added=false;\n  SessionRequest sessionRequest=new SessionRequest(requestId,request);\n  Lock writeLock=lock.writeLock();\n  writeLock.lock();\n  try {\n    Map<String,EventAttributeValue> attributeMap=new HashMap<>();\n    attributeMap.put(AttributeKey.LOGGER_CLASS.getKey(),EventAttribute.setValue(getClass().getName()));\n    added=sessionRequests.offerLast(sessionRequest);\n    addRequestHeaders(request,requestId);\n    attributeMap.put(AttributeKey.REQUEST_ID.getKey(),EventAttribute.setValue(requestId.toString()));\n    attributeMap.put(\"request.added\",EventAttribute.setValue(added));\n    span.addEvent(\"Add new session request to the queue\",attributeMap);\n    return added;\n  }\n  finally {\n    writeLock.unlock();\n    span.close();\n    if (added) {\n      bus.fire(new NewSessionRequestEvent(requestId));\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 155,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 124,
        "startColumnNumber" : 6,
        "endLineNumber" : 124,
        "endColumnNumber" : 74
      },
      "nodeContext" : "span.addEvent(\"Add new session request to the queue\",attributeMap);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,org.openqa.selenium.remote.tracing.EventAttributeValue>"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 115,
    "startColumnNumber" : 6,
    "endLineNumber" : 115,
    "endColumnNumber" : 18
  }, {
    "charLength" : 12,
    "startLineNumber" : 121,
    "startColumnNumber" : 6,
    "endLineNumber" : 121,
    "endColumnNumber" : 18
  }, {
    "charLength" : 12,
    "startLineNumber" : 123,
    "startColumnNumber" : 6,
    "endLineNumber" : 123,
    "endColumnNumber" : 18
  }, {
    "charLength" : 12,
    "startLineNumber" : 124,
    "startColumnNumber" : 60,
    "endLineNumber" : 124,
    "endColumnNumber" : 72
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  } ]
}