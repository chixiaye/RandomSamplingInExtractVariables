{
  "id" : 63,
  "expression" : "blendingAttribute != null",
  "projectName" : "libgdx@libgdx",
  "commitID" : "3485b16e8979c0141421bc80cb8831b7a0403f67",
  "filePath" : "/gdx/src/com/badlogic/gdx/graphics/g3d/particles/renderers/ModelInstanceRenderer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "blendingAttribute != null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 84,
      "startColumnNumber" : 8,
      "endLineNumber" : 84,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 106
      },
      "nodeContext" : "if (blendingAttribute != null) blendingAttribute.opacity=renderData.colorChannel.data[colorOffset + ParticleChannels.AlphaOffset];\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 739,
        "startLineNumber" : 77,
        "startColumnNumber" : 17,
        "endLineNumber" : 86,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  int colorOffset=i * renderData.colorChannel.strideSize;\n  ColorAttribute colorAttribute=(ColorAttribute)instance.materials.get(0).get(ColorAttribute.Diffuse);\n  BlendingAttribute blendingAttribute=(BlendingAttribute)instance.materials.get(0).get(BlendingAttribute.Type);\n  colorAttribute.color.r=renderData.colorChannel.data[colorOffset + ParticleChannels.RedOffset];\n  colorAttribute.color.g=renderData.colorChannel.data[colorOffset + ParticleChannels.GreenOffset];\n  colorAttribute.color.b=renderData.colorChannel.data[colorOffset + ParticleChannels.BlueOffset];\n  if (blendingAttribute != null)   blendingAttribute.opacity=renderData.colorChannel.data[colorOffset + ParticleChannels.AlphaOffset];\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 753,
        "startLineNumber" : 77,
        "startColumnNumber" : 3,
        "endLineNumber" : 86,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (hasColor) {\n  int colorOffset=i * renderData.colorChannel.strideSize;\n  ColorAttribute colorAttribute=(ColorAttribute)instance.materials.get(0).get(ColorAttribute.Diffuse);\n  BlendingAttribute blendingAttribute=(BlendingAttribute)instance.materials.get(0).get(BlendingAttribute.Type);\n  colorAttribute.color.r=renderData.colorChannel.data[colorOffset + ParticleChannels.RedOffset];\n  colorAttribute.color.g=renderData.colorChannel.data[colorOffset + ParticleChannels.GreenOffset];\n  colorAttribute.color.b=renderData.colorChannel.data[colorOffset + ParticleChannels.BlueOffset];\n  if (blendingAttribute != null)   blendingAttribute.opacity=renderData.colorChannel.data[colorOffset + ParticleChannels.AlphaOffset];\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 126,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1673,
        "startLineNumber" : 62,
        "startColumnNumber" : 138,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ModelInstance instance=renderData.modelInstanceChannel.data[i];\n  float scale=hasScale ? renderData.scaleChannel.data[i] : 1;\n  float qx=0, qy=0, qz=0, qw=1;\n  if (hasRotation) {\n    int rotationOffset=i * renderData.rotationChannel.strideSize;\n    qx=renderData.rotationChannel.data[rotationOffset + ParticleChannels.XOffset];\n    qy=renderData.rotationChannel.data[rotationOffset + ParticleChannels.YOffset];\n    qz=renderData.rotationChannel.data[rotationOffset + ParticleChannels.ZOffset];\n    qw=renderData.rotationChannel.data[rotationOffset + ParticleChannels.WOffset];\n  }\n  instance.transform.set(renderData.positionChannel.data[positionOffset + ParticleChannels.XOffset],renderData.positionChannel.data[positionOffset + ParticleChannels.YOffset],renderData.positionChannel.data[positionOffset + ParticleChannels.ZOffset],qx,qy,qz,qw,scale,scale,scale);\n  if (hasColor) {\n    int colorOffset=i * renderData.colorChannel.strideSize;\n    ColorAttribute colorAttribute=(ColorAttribute)instance.materials.get(0).get(ColorAttribute.Diffuse);\n    BlendingAttribute blendingAttribute=(BlendingAttribute)instance.materials.get(0).get(BlendingAttribute.Type);\n    colorAttribute.color.r=renderData.colorChannel.data[colorOffset + ParticleChannels.RedOffset];\n    colorAttribute.color.g=renderData.colorChannel.data[colorOffset + ParticleChannels.GreenOffset];\n    colorAttribute.color.b=renderData.colorChannel.data[colorOffset + ParticleChannels.BlueOffset];\n    if (blendingAttribute != null)     blendingAttribute.opacity=renderData.colorChannel.data[colorOffset + ParticleChannels.AlphaOffset];\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1809,
        "startLineNumber" : 62,
        "startColumnNumber" : 2,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=0, positionOffset=0, c=controller.particles.size; i < c; ++i, positionOffset+=renderData.positionChannel.strideSize) {\n  ModelInstance instance=renderData.modelInstanceChannel.data[i];\n  float scale=hasScale ? renderData.scaleChannel.data[i] : 1;\n  float qx=0, qy=0, qz=0, qw=1;\n  if (hasRotation) {\n    int rotationOffset=i * renderData.rotationChannel.strideSize;\n    qx=renderData.rotationChannel.data[rotationOffset + ParticleChannels.XOffset];\n    qy=renderData.rotationChannel.data[rotationOffset + ParticleChannels.YOffset];\n    qz=renderData.rotationChannel.data[rotationOffset + ParticleChannels.ZOffset];\n    qw=renderData.rotationChannel.data[rotationOffset + ParticleChannels.WOffset];\n  }\n  instance.transform.set(renderData.positionChannel.data[positionOffset + ParticleChannels.XOffset],renderData.positionChannel.data[positionOffset + ParticleChannels.YOffset],renderData.positionChannel.data[positionOffset + ParticleChannels.ZOffset],qx,qy,qz,qw,scale,scale,scale);\n  if (hasColor) {\n    int colorOffset=i * renderData.colorChannel.strideSize;\n    ColorAttribute colorAttribute=(ColorAttribute)instance.materials.get(0).get(ColorAttribute.Diffuse);\n    BlendingAttribute blendingAttribute=(BlendingAttribute)instance.materials.get(0).get(BlendingAttribute.Type);\n    colorAttribute.color.r=renderData.colorChannel.data[colorOffset + ParticleChannels.RedOffset];\n    colorAttribute.color.g=renderData.colorChannel.data[colorOffset + ParticleChannels.GreenOffset];\n    colorAttribute.color.b=renderData.colorChannel.data[colorOffset + ParticleChannels.BlueOffset];\n    if (blendingAttribute != null)     blendingAttribute.opacity=renderData.colorChannel.data[colorOffset + ParticleChannels.AlphaOffset];\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 311,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1834,
        "startLineNumber" : 61,
        "startColumnNumber" : 23,
        "endLineNumber" : 89,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  for (int i=0, positionOffset=0, c=controller.particles.size; i < c; ++i, positionOffset+=renderData.positionChannel.strideSize) {\n    ModelInstance instance=renderData.modelInstanceChannel.data[i];\n    float scale=hasScale ? renderData.scaleChannel.data[i] : 1;\n    float qx=0, qy=0, qz=0, qw=1;\n    if (hasRotation) {\n      int rotationOffset=i * renderData.rotationChannel.strideSize;\n      qx=renderData.rotationChannel.data[rotationOffset + ParticleChannels.XOffset];\n      qy=renderData.rotationChannel.data[rotationOffset + ParticleChannels.YOffset];\n      qz=renderData.rotationChannel.data[rotationOffset + ParticleChannels.ZOffset];\n      qw=renderData.rotationChannel.data[rotationOffset + ParticleChannels.WOffset];\n    }\n    instance.transform.set(renderData.positionChannel.data[positionOffset + ParticleChannels.XOffset],renderData.positionChannel.data[positionOffset + ParticleChannels.YOffset],renderData.positionChannel.data[positionOffset + ParticleChannels.ZOffset],qx,qy,qz,qw,scale,scale,scale);\n    if (hasColor) {\n      int colorOffset=i * renderData.colorChannel.strideSize;\n      ColorAttribute colorAttribute=(ColorAttribute)instance.materials.get(0).get(ColorAttribute.Diffuse);\n      BlendingAttribute blendingAttribute=(BlendingAttribute)instance.materials.get(0).get(BlendingAttribute.Type);\n      colorAttribute.color.r=renderData.colorChannel.data[colorOffset + ParticleChannels.RedOffset];\n      colorAttribute.color.g=renderData.colorChannel.data[colorOffset + ParticleChannels.GreenOffset];\n      colorAttribute.color.b=renderData.colorChannel.data[colorOffset + ParticleChannels.BlueOffset];\n      if (blendingAttribute != null)       blendingAttribute.opacity=renderData.colorChannel.data[colorOffset + ParticleChannels.AlphaOffset];\n    }\n  }\n  super.update();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 315,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1867,
        "startLineNumber" : 60,
        "startColumnNumber" : 1,
        "endLineNumber" : 89,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void update(){\n  for (int i=0, positionOffset=0, c=controller.particles.size; i < c; ++i, positionOffset+=renderData.positionChannel.strideSize) {\n    ModelInstance instance=renderData.modelInstanceChannel.data[i];\n    float scale=hasScale ? renderData.scaleChannel.data[i] : 1;\n    float qx=0, qy=0, qz=0, qw=1;\n    if (hasRotation) {\n      int rotationOffset=i * renderData.rotationChannel.strideSize;\n      qx=renderData.rotationChannel.data[rotationOffset + ParticleChannels.XOffset];\n      qy=renderData.rotationChannel.data[rotationOffset + ParticleChannels.YOffset];\n      qz=renderData.rotationChannel.data[rotationOffset + ParticleChannels.ZOffset];\n      qw=renderData.rotationChannel.data[rotationOffset + ParticleChannels.WOffset];\n    }\n    instance.transform.set(renderData.positionChannel.data[positionOffset + ParticleChannels.XOffset],renderData.positionChannel.data[positionOffset + ParticleChannels.YOffset],renderData.positionChannel.data[positionOffset + ParticleChannels.ZOffset],qx,qy,qz,qw,scale,scale,scale);\n    if (hasColor) {\n      int colorOffset=i * renderData.colorChannel.strideSize;\n      ColorAttribute colorAttribute=(ColorAttribute)instance.materials.get(0).get(ColorAttribute.Diffuse);\n      BlendingAttribute blendingAttribute=(BlendingAttribute)instance.materials.get(0).get(BlendingAttribute.Type);\n      colorAttribute.color.r=renderData.colorChannel.data[colorOffset + ParticleChannels.RedOffset];\n      colorAttribute.color.g=renderData.colorChannel.data[colorOffset + ParticleChannels.GreenOffset];\n      colorAttribute.color.b=renderData.colorChannel.data[colorOffset + ParticleChannels.BlueOffset];\n      if (blendingAttribute != null)       blendingAttribute.opacity=renderData.colorChannel.data[colorOffset + ParticleChannels.AlphaOffset];\n    }\n  }\n  super.update();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 321,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 106
      },
      "nodeContext" : "if (blendingAttribute != null) blendingAttribute.opacity=renderData.colorChannel.data[colorOffset + ParticleChannels.AlphaOffset];\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 84,
    "startColumnNumber" : 8,
    "endLineNumber" : 84,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ ]
}