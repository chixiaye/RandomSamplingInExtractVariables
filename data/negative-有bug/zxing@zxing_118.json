{
  "id" : 118,
  "expression" : "new ResultPoint(loc[1],i)",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/pdf417/detector/Detector.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new ResultPoint(loc[1],i)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 151,
      "startColumnNumber" : 20,
      "endLineNumber" : 151,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 151,
        "startColumnNumber" : 8,
        "endLineNumber" : 151,
        "endColumnNumber" : 46
      },
      "nodeContext" : "result[4]=new ResultPoint(loc[1],i)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 151,
        "startColumnNumber" : 8,
        "endLineNumber" : 151,
        "endColumnNumber" : 47
      },
      "nodeContext" : "result[4]=new ResultPoint(loc[1],i);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 149,
        "startColumnNumber" : 23,
        "endLineNumber" : 154,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  result[0]=new ResultPoint(loc[0],i);\n  result[4]=new ResultPoint(loc[1],i);\n  found=true;\n  break;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 30,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 149,
        "startColumnNumber" : 6,
        "endLineNumber" : 154,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (loc != null) {\n  result[0]=new ResultPoint(loc[0],i);\n  result[4]=new ResultPoint(loc[1],i);\n  found=true;\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 270,
        "startLineNumber" : 147,
        "startColumnNumber" : 46,
        "endLineNumber" : 155,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int[] loc=findGuardPattern(matrix,0,i,width,false,START_PATTERN,counters);\n  if (loc != null) {\n    result[0]=new ResultPoint(loc[0],i);\n    result[4]=new ResultPoint(loc[1],i);\n    found=true;\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 312,
        "startLineNumber" : 147,
        "startColumnNumber" : 4,
        "endLineNumber" : 155,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < height; i+=rowStep) {\n  int[] loc=findGuardPattern(matrix,0,i,width,false,START_PATTERN,counters);\n  if (loc != null) {\n    result[0]=new ResultPoint(loc[0],i);\n    result[4]=new ResultPoint(loc[1],i);\n    found=true;\n    break;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 62,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2005,
        "startLineNumber" : 135,
        "startColumnNumber" : 81,
        "endLineNumber" : 199,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int height=matrix.getHeight();\n  int width=matrix.getWidth();\n  ResultPoint[] result=new ResultPoint[8];\n  boolean found=false;\n  int[] counters=new int[START_PATTERN.length];\n  int rowStep=Math.max(1,height >> (tryHarder ? 9 : 7));\n  for (int i=0; i < height; i+=rowStep) {\n    int[] loc=findGuardPattern(matrix,0,i,width,false,START_PATTERN,counters);\n    if (loc != null) {\n      result[0]=new ResultPoint(loc[0],i);\n      result[4]=new ResultPoint(loc[1],i);\n      found=true;\n      break;\n    }\n  }\n  if (found) {\n    found=false;\n    for (int i=height - 1; i > 0; i-=rowStep) {\n      int[] loc=findGuardPattern(matrix,0,i,width,false,START_PATTERN,counters);\n      if (loc != null) {\n        result[1]=new ResultPoint(loc[0],i);\n        result[5]=new ResultPoint(loc[1],i);\n        found=true;\n        break;\n      }\n    }\n  }\n  counters=new int[STOP_PATTERN.length];\n  if (found) {\n    found=false;\n    for (int i=0; i < height; i+=rowStep) {\n      int[] loc=findGuardPattern(matrix,0,i,width,false,STOP_PATTERN,counters);\n      if (loc != null) {\n        result[2]=new ResultPoint(loc[1],i);\n        result[6]=new ResultPoint(loc[0],i);\n        found=true;\n        break;\n      }\n    }\n  }\n  if (found) {\n    found=false;\n    for (int i=height - 1; i > 0; i-=rowStep) {\n      int[] loc=findGuardPattern(matrix,0,i,width,false,STOP_PATTERN,counters);\n      if (loc != null) {\n        result[3]=new ResultPoint(loc[1],i);\n        result[7]=new ResultPoint(loc[0],i);\n        found=true;\n        break;\n      }\n    }\n  }\n  return found ? result : null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 349,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2757,
        "startLineNumber" : 120,
        "startColumnNumber" : 2,
        "endLineNumber" : 199,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Locate the vertices and the codewords area of a black blob using the Start and Stop patterns as locators.\n * @param matrix the scanned barcode image.\n * @return an array containing the vertices:vertices[0] x, y top left barcode vertices[1] x, y bottom left barcode vertices[2] x, y top right barcode vertices[3] x, y bottom right barcode vertices[4] x, y top left codeword area vertices[5] x, y bottom left codeword area vertices[6] x, y top right codeword area vertices[7] x, y bottom right codeword area\n */\nprivate static ResultPoint[] findVertices(BitMatrix matrix,boolean tryHarder){\n  int height=matrix.getHeight();\n  int width=matrix.getWidth();\n  ResultPoint[] result=new ResultPoint[8];\n  boolean found=false;\n  int[] counters=new int[START_PATTERN.length];\n  int rowStep=Math.max(1,height >> (tryHarder ? 9 : 7));\n  for (int i=0; i < height; i+=rowStep) {\n    int[] loc=findGuardPattern(matrix,0,i,width,false,START_PATTERN,counters);\n    if (loc != null) {\n      result[0]=new ResultPoint(loc[0],i);\n      result[4]=new ResultPoint(loc[1],i);\n      found=true;\n      break;\n    }\n  }\n  if (found) {\n    found=false;\n    for (int i=height - 1; i > 0; i-=rowStep) {\n      int[] loc=findGuardPattern(matrix,0,i,width,false,START_PATTERN,counters);\n      if (loc != null) {\n        result[1]=new ResultPoint(loc[0],i);\n        result[5]=new ResultPoint(loc[1],i);\n        found=true;\n        break;\n      }\n    }\n  }\n  counters=new int[STOP_PATTERN.length];\n  if (found) {\n    found=false;\n    for (int i=0; i < height; i+=rowStep) {\n      int[] loc=findGuardPattern(matrix,0,i,width,false,STOP_PATTERN,counters);\n      if (loc != null) {\n        result[2]=new ResultPoint(loc[1],i);\n        result[6]=new ResultPoint(loc[0],i);\n        found=true;\n        break;\n      }\n    }\n  }\n  if (found) {\n    found=false;\n    for (int i=height - 1; i > 0; i-=rowStep) {\n      int[] loc=findGuardPattern(matrix,0,i,width,false,STOP_PATTERN,counters);\n      if (loc != null) {\n        result[3]=new ResultPoint(loc[1],i);\n        result[7]=new ResultPoint(loc[0],i);\n        found=true;\n        break;\n      }\n    }\n  }\n  return found ? result : null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 365,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 151,
        "startColumnNumber" : 8,
        "endLineNumber" : 151,
        "endColumnNumber" : 47
      },
      "nodeContext" : "result[4]=new ResultPoint(loc[1],i);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "com.google.zxing.ResultPoint"
  }, {
    "nodeContext" : "new ResultPoint(loc[1],i)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 163,
      "startColumnNumber" : 22,
      "endLineNumber" : 163,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 163,
        "startColumnNumber" : 10,
        "endLineNumber" : 163,
        "endColumnNumber" : 48
      },
      "nodeContext" : "result[5]=new ResultPoint(loc[1],i)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 163,
        "startColumnNumber" : 10,
        "endLineNumber" : 163,
        "endColumnNumber" : 49
      },
      "nodeContext" : "result[5]=new ResultPoint(loc[1],i);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 157,
        "startLineNumber" : 161,
        "startColumnNumber" : 25,
        "endLineNumber" : 166,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  result[1]=new ResultPoint(loc[0],i);\n  result[5]=new ResultPoint(loc[1],i);\n  found=true;\n  break;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 30,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 174,
        "startLineNumber" : 161,
        "startColumnNumber" : 8,
        "endLineNumber" : 166,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (loc != null) {\n  result[1]=new ResultPoint(loc[0],i);\n  result[5]=new ResultPoint(loc[1],i);\n  found=true;\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 286,
        "startLineNumber" : 159,
        "startColumnNumber" : 52,
        "endLineNumber" : 167,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  int[] loc=findGuardPattern(matrix,0,i,width,false,START_PATTERN,counters);\n  if (loc != null) {\n    result[1]=new ResultPoint(loc[0],i);\n    result[5]=new ResultPoint(loc[1],i);\n    found=true;\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 332,
        "startLineNumber" : 159,
        "startColumnNumber" : 6,
        "endLineNumber" : 167,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int i=height - 1; i > 0; i-=rowStep) {\n  int[] loc=findGuardPattern(matrix,0,i,width,false,START_PATTERN,counters);\n  if (loc != null) {\n    result[1]=new ResultPoint(loc[0],i);\n    result[5]=new ResultPoint(loc[1],i);\n    found=true;\n    break;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 64,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 399,
        "startLineNumber" : 157,
        "startColumnNumber" : 15,
        "endLineNumber" : 168,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  found=false;\n  for (int i=height - 1; i > 0; i-=rowStep) {\n    int[] loc=findGuardPattern(matrix,0,i,width,false,START_PATTERN,counters);\n    if (loc != null) {\n      result[1]=new ResultPoint(loc[0],i);\n      result[5]=new ResultPoint(loc[1],i);\n      found=true;\n      break;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 410,
        "startLineNumber" : 157,
        "startColumnNumber" : 4,
        "endLineNumber" : 168,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (found) {\n  found=false;\n  for (int i=height - 1; i > 0; i-=rowStep) {\n    int[] loc=findGuardPattern(matrix,0,i,width,false,START_PATTERN,counters);\n    if (loc != null) {\n      result[1]=new ResultPoint(loc[0],i);\n      result[5]=new ResultPoint(loc[1],i);\n      found=true;\n      break;\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 71,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2005,
        "startLineNumber" : 135,
        "startColumnNumber" : 81,
        "endLineNumber" : 199,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int height=matrix.getHeight();\n  int width=matrix.getWidth();\n  ResultPoint[] result=new ResultPoint[8];\n  boolean found=false;\n  int[] counters=new int[START_PATTERN.length];\n  int rowStep=Math.max(1,height >> (tryHarder ? 9 : 7));\n  for (int i=0; i < height; i+=rowStep) {\n    int[] loc=findGuardPattern(matrix,0,i,width,false,START_PATTERN,counters);\n    if (loc != null) {\n      result[0]=new ResultPoint(loc[0],i);\n      result[4]=new ResultPoint(loc[1],i);\n      found=true;\n      break;\n    }\n  }\n  if (found) {\n    found=false;\n    for (int i=height - 1; i > 0; i-=rowStep) {\n      int[] loc=findGuardPattern(matrix,0,i,width,false,START_PATTERN,counters);\n      if (loc != null) {\n        result[1]=new ResultPoint(loc[0],i);\n        result[5]=new ResultPoint(loc[1],i);\n        found=true;\n        break;\n      }\n    }\n  }\n  counters=new int[STOP_PATTERN.length];\n  if (found) {\n    found=false;\n    for (int i=0; i < height; i+=rowStep) {\n      int[] loc=findGuardPattern(matrix,0,i,width,false,STOP_PATTERN,counters);\n      if (loc != null) {\n        result[2]=new ResultPoint(loc[1],i);\n        result[6]=new ResultPoint(loc[0],i);\n        found=true;\n        break;\n      }\n    }\n  }\n  if (found) {\n    found=false;\n    for (int i=height - 1; i > 0; i-=rowStep) {\n      int[] loc=findGuardPattern(matrix,0,i,width,false,STOP_PATTERN,counters);\n      if (loc != null) {\n        result[3]=new ResultPoint(loc[1],i);\n        result[7]=new ResultPoint(loc[0],i);\n        found=true;\n        break;\n      }\n    }\n  }\n  return found ? result : null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 349,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2757,
        "startLineNumber" : 120,
        "startColumnNumber" : 2,
        "endLineNumber" : 199,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Locate the vertices and the codewords area of a black blob using the Start and Stop patterns as locators.\n * @param matrix the scanned barcode image.\n * @return an array containing the vertices:vertices[0] x, y top left barcode vertices[1] x, y bottom left barcode vertices[2] x, y top right barcode vertices[3] x, y bottom right barcode vertices[4] x, y top left codeword area vertices[5] x, y bottom left codeword area vertices[6] x, y top right codeword area vertices[7] x, y bottom right codeword area\n */\nprivate static ResultPoint[] findVertices(BitMatrix matrix,boolean tryHarder){\n  int height=matrix.getHeight();\n  int width=matrix.getWidth();\n  ResultPoint[] result=new ResultPoint[8];\n  boolean found=false;\n  int[] counters=new int[START_PATTERN.length];\n  int rowStep=Math.max(1,height >> (tryHarder ? 9 : 7));\n  for (int i=0; i < height; i+=rowStep) {\n    int[] loc=findGuardPattern(matrix,0,i,width,false,START_PATTERN,counters);\n    if (loc != null) {\n      result[0]=new ResultPoint(loc[0],i);\n      result[4]=new ResultPoint(loc[1],i);\n      found=true;\n      break;\n    }\n  }\n  if (found) {\n    found=false;\n    for (int i=height - 1; i > 0; i-=rowStep) {\n      int[] loc=findGuardPattern(matrix,0,i,width,false,START_PATTERN,counters);\n      if (loc != null) {\n        result[1]=new ResultPoint(loc[0],i);\n        result[5]=new ResultPoint(loc[1],i);\n        found=true;\n        break;\n      }\n    }\n  }\n  counters=new int[STOP_PATTERN.length];\n  if (found) {\n    found=false;\n    for (int i=0; i < height; i+=rowStep) {\n      int[] loc=findGuardPattern(matrix,0,i,width,false,STOP_PATTERN,counters);\n      if (loc != null) {\n        result[2]=new ResultPoint(loc[1],i);\n        result[6]=new ResultPoint(loc[0],i);\n        found=true;\n        break;\n      }\n    }\n  }\n  if (found) {\n    found=false;\n    for (int i=height - 1; i > 0; i-=rowStep) {\n      int[] loc=findGuardPattern(matrix,0,i,width,false,STOP_PATTERN,counters);\n      if (loc != null) {\n        result[3]=new ResultPoint(loc[1],i);\n        result[7]=new ResultPoint(loc[0],i);\n        found=true;\n        break;\n      }\n    }\n  }\n  return found ? result : null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 365,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 163,
        "startColumnNumber" : 10,
        "endLineNumber" : 163,
        "endColumnNumber" : 49
      },
      "nodeContext" : "result[5]=new ResultPoint(loc[1],i);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "com.google.zxing.ResultPoint"
  }, {
    "nodeContext" : "new ResultPoint(loc[1],i)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 178,
      "startColumnNumber" : 22,
      "endLineNumber" : 178,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 178,
        "startColumnNumber" : 10,
        "endLineNumber" : 178,
        "endColumnNumber" : 48
      },
      "nodeContext" : "result[2]=new ResultPoint(loc[1],i)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 178,
        "startColumnNumber" : 10,
        "endLineNumber" : 178,
        "endColumnNumber" : 49
      },
      "nodeContext" : "result[2]=new ResultPoint(loc[1],i);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 157,
        "startLineNumber" : 177,
        "startColumnNumber" : 25,
        "endLineNumber" : 182,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  result[2]=new ResultPoint(loc[1],i);\n  result[6]=new ResultPoint(loc[0],i);\n  found=true;\n  break;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 30,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 174,
        "startLineNumber" : 177,
        "startColumnNumber" : 8,
        "endLineNumber" : 182,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (loc != null) {\n  result[2]=new ResultPoint(loc[1],i);\n  result[6]=new ResultPoint(loc[0],i);\n  found=true;\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 285,
        "startLineNumber" : 175,
        "startColumnNumber" : 48,
        "endLineNumber" : 183,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  int[] loc=findGuardPattern(matrix,0,i,width,false,STOP_PATTERN,counters);\n  if (loc != null) {\n    result[2]=new ResultPoint(loc[1],i);\n    result[6]=new ResultPoint(loc[0],i);\n    found=true;\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 327,
        "startLineNumber" : 175,
        "startColumnNumber" : 6,
        "endLineNumber" : 183,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int i=0; i < height; i+=rowStep) {\n  int[] loc=findGuardPattern(matrix,0,i,width,false,STOP_PATTERN,counters);\n  if (loc != null) {\n    result[2]=new ResultPoint(loc[1],i);\n    result[6]=new ResultPoint(loc[0],i);\n    found=true;\n    break;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 62,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 397,
        "startLineNumber" : 173,
        "startColumnNumber" : 15,
        "endLineNumber" : 184,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  found=false;\n  for (int i=0; i < height; i+=rowStep) {\n    int[] loc=findGuardPattern(matrix,0,i,width,false,STOP_PATTERN,counters);\n    if (loc != null) {\n      result[2]=new ResultPoint(loc[1],i);\n      result[6]=new ResultPoint(loc[0],i);\n      found=true;\n      break;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 67,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 408,
        "startLineNumber" : 173,
        "startColumnNumber" : 4,
        "endLineNumber" : 184,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (found) {\n  found=false;\n  for (int i=0; i < height; i+=rowStep) {\n    int[] loc=findGuardPattern(matrix,0,i,width,false,STOP_PATTERN,counters);\n    if (loc != null) {\n      result[2]=new ResultPoint(loc[1],i);\n      result[6]=new ResultPoint(loc[0],i);\n      found=true;\n      break;\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 69,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2005,
        "startLineNumber" : 135,
        "startColumnNumber" : 81,
        "endLineNumber" : 199,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int height=matrix.getHeight();\n  int width=matrix.getWidth();\n  ResultPoint[] result=new ResultPoint[8];\n  boolean found=false;\n  int[] counters=new int[START_PATTERN.length];\n  int rowStep=Math.max(1,height >> (tryHarder ? 9 : 7));\n  for (int i=0; i < height; i+=rowStep) {\n    int[] loc=findGuardPattern(matrix,0,i,width,false,START_PATTERN,counters);\n    if (loc != null) {\n      result[0]=new ResultPoint(loc[0],i);\n      result[4]=new ResultPoint(loc[1],i);\n      found=true;\n      break;\n    }\n  }\n  if (found) {\n    found=false;\n    for (int i=height - 1; i > 0; i-=rowStep) {\n      int[] loc=findGuardPattern(matrix,0,i,width,false,START_PATTERN,counters);\n      if (loc != null) {\n        result[1]=new ResultPoint(loc[0],i);\n        result[5]=new ResultPoint(loc[1],i);\n        found=true;\n        break;\n      }\n    }\n  }\n  counters=new int[STOP_PATTERN.length];\n  if (found) {\n    found=false;\n    for (int i=0; i < height; i+=rowStep) {\n      int[] loc=findGuardPattern(matrix,0,i,width,false,STOP_PATTERN,counters);\n      if (loc != null) {\n        result[2]=new ResultPoint(loc[1],i);\n        result[6]=new ResultPoint(loc[0],i);\n        found=true;\n        break;\n      }\n    }\n  }\n  if (found) {\n    found=false;\n    for (int i=height - 1; i > 0; i-=rowStep) {\n      int[] loc=findGuardPattern(matrix,0,i,width,false,STOP_PATTERN,counters);\n      if (loc != null) {\n        result[3]=new ResultPoint(loc[1],i);\n        result[7]=new ResultPoint(loc[0],i);\n        found=true;\n        break;\n      }\n    }\n  }\n  return found ? result : null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 349,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2757,
        "startLineNumber" : 120,
        "startColumnNumber" : 2,
        "endLineNumber" : 199,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Locate the vertices and the codewords area of a black blob using the Start and Stop patterns as locators.\n * @param matrix the scanned barcode image.\n * @return an array containing the vertices:vertices[0] x, y top left barcode vertices[1] x, y bottom left barcode vertices[2] x, y top right barcode vertices[3] x, y bottom right barcode vertices[4] x, y top left codeword area vertices[5] x, y bottom left codeword area vertices[6] x, y top right codeword area vertices[7] x, y bottom right codeword area\n */\nprivate static ResultPoint[] findVertices(BitMatrix matrix,boolean tryHarder){\n  int height=matrix.getHeight();\n  int width=matrix.getWidth();\n  ResultPoint[] result=new ResultPoint[8];\n  boolean found=false;\n  int[] counters=new int[START_PATTERN.length];\n  int rowStep=Math.max(1,height >> (tryHarder ? 9 : 7));\n  for (int i=0; i < height; i+=rowStep) {\n    int[] loc=findGuardPattern(matrix,0,i,width,false,START_PATTERN,counters);\n    if (loc != null) {\n      result[0]=new ResultPoint(loc[0],i);\n      result[4]=new ResultPoint(loc[1],i);\n      found=true;\n      break;\n    }\n  }\n  if (found) {\n    found=false;\n    for (int i=height - 1; i > 0; i-=rowStep) {\n      int[] loc=findGuardPattern(matrix,0,i,width,false,START_PATTERN,counters);\n      if (loc != null) {\n        result[1]=new ResultPoint(loc[0],i);\n        result[5]=new ResultPoint(loc[1],i);\n        found=true;\n        break;\n      }\n    }\n  }\n  counters=new int[STOP_PATTERN.length];\n  if (found) {\n    found=false;\n    for (int i=0; i < height; i+=rowStep) {\n      int[] loc=findGuardPattern(matrix,0,i,width,false,STOP_PATTERN,counters);\n      if (loc != null) {\n        result[2]=new ResultPoint(loc[1],i);\n        result[6]=new ResultPoint(loc[0],i);\n        found=true;\n        break;\n      }\n    }\n  }\n  if (found) {\n    found=false;\n    for (int i=height - 1; i > 0; i-=rowStep) {\n      int[] loc=findGuardPattern(matrix,0,i,width,false,STOP_PATTERN,counters);\n      if (loc != null) {\n        result[3]=new ResultPoint(loc[1],i);\n        result[7]=new ResultPoint(loc[0],i);\n        found=true;\n        break;\n      }\n    }\n  }\n  return found ? result : null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 365,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 178,
        "startColumnNumber" : 10,
        "endLineNumber" : 178,
        "endColumnNumber" : 49
      },
      "nodeContext" : "result[2]=new ResultPoint(loc[1],i);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "com.google.zxing.ResultPoint"
  }, {
    "nodeContext" : "new ResultPoint(loc[1],i)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 191,
      "startColumnNumber" : 22,
      "endLineNumber" : 191,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 191,
        "startColumnNumber" : 10,
        "endLineNumber" : 191,
        "endColumnNumber" : 48
      },
      "nodeContext" : "result[3]=new ResultPoint(loc[1],i)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 191,
        "startColumnNumber" : 10,
        "endLineNumber" : 191,
        "endColumnNumber" : 49
      },
      "nodeContext" : "result[3]=new ResultPoint(loc[1],i);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 157,
        "startLineNumber" : 190,
        "startColumnNumber" : 25,
        "endLineNumber" : 195,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  result[3]=new ResultPoint(loc[1],i);\n  result[7]=new ResultPoint(loc[0],i);\n  found=true;\n  break;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 30,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 174,
        "startLineNumber" : 190,
        "startColumnNumber" : 8,
        "endLineNumber" : 195,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (loc != null) {\n  result[3]=new ResultPoint(loc[1],i);\n  result[7]=new ResultPoint(loc[0],i);\n  found=true;\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 285,
        "startLineNumber" : 188,
        "startColumnNumber" : 52,
        "endLineNumber" : 196,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  int[] loc=findGuardPattern(matrix,0,i,width,false,STOP_PATTERN,counters);\n  if (loc != null) {\n    result[3]=new ResultPoint(loc[1],i);\n    result[7]=new ResultPoint(loc[0],i);\n    found=true;\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 331,
        "startLineNumber" : 188,
        "startColumnNumber" : 6,
        "endLineNumber" : 196,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int i=height - 1; i > 0; i-=rowStep) {\n  int[] loc=findGuardPattern(matrix,0,i,width,false,STOP_PATTERN,counters);\n  if (loc != null) {\n    result[3]=new ResultPoint(loc[1],i);\n    result[7]=new ResultPoint(loc[0],i);\n    found=true;\n    break;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 64,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 399,
        "startLineNumber" : 186,
        "startColumnNumber" : 15,
        "endLineNumber" : 197,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  found=false;\n  for (int i=height - 1; i > 0; i-=rowStep) {\n    int[] loc=findGuardPattern(matrix,0,i,width,false,STOP_PATTERN,counters);\n    if (loc != null) {\n      result[3]=new ResultPoint(loc[1],i);\n      result[7]=new ResultPoint(loc[0],i);\n      found=true;\n      break;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 410,
        "startLineNumber" : 186,
        "startColumnNumber" : 4,
        "endLineNumber" : 197,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (found) {\n  found=false;\n  for (int i=height - 1; i > 0; i-=rowStep) {\n    int[] loc=findGuardPattern(matrix,0,i,width,false,STOP_PATTERN,counters);\n    if (loc != null) {\n      result[3]=new ResultPoint(loc[1],i);\n      result[7]=new ResultPoint(loc[0],i);\n      found=true;\n      break;\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 71,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2005,
        "startLineNumber" : 135,
        "startColumnNumber" : 81,
        "endLineNumber" : 199,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int height=matrix.getHeight();\n  int width=matrix.getWidth();\n  ResultPoint[] result=new ResultPoint[8];\n  boolean found=false;\n  int[] counters=new int[START_PATTERN.length];\n  int rowStep=Math.max(1,height >> (tryHarder ? 9 : 7));\n  for (int i=0; i < height; i+=rowStep) {\n    int[] loc=findGuardPattern(matrix,0,i,width,false,START_PATTERN,counters);\n    if (loc != null) {\n      result[0]=new ResultPoint(loc[0],i);\n      result[4]=new ResultPoint(loc[1],i);\n      found=true;\n      break;\n    }\n  }\n  if (found) {\n    found=false;\n    for (int i=height - 1; i > 0; i-=rowStep) {\n      int[] loc=findGuardPattern(matrix,0,i,width,false,START_PATTERN,counters);\n      if (loc != null) {\n        result[1]=new ResultPoint(loc[0],i);\n        result[5]=new ResultPoint(loc[1],i);\n        found=true;\n        break;\n      }\n    }\n  }\n  counters=new int[STOP_PATTERN.length];\n  if (found) {\n    found=false;\n    for (int i=0; i < height; i+=rowStep) {\n      int[] loc=findGuardPattern(matrix,0,i,width,false,STOP_PATTERN,counters);\n      if (loc != null) {\n        result[2]=new ResultPoint(loc[1],i);\n        result[6]=new ResultPoint(loc[0],i);\n        found=true;\n        break;\n      }\n    }\n  }\n  if (found) {\n    found=false;\n    for (int i=height - 1; i > 0; i-=rowStep) {\n      int[] loc=findGuardPattern(matrix,0,i,width,false,STOP_PATTERN,counters);\n      if (loc != null) {\n        result[3]=new ResultPoint(loc[1],i);\n        result[7]=new ResultPoint(loc[0],i);\n        found=true;\n        break;\n      }\n    }\n  }\n  return found ? result : null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 349,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2757,
        "startLineNumber" : 120,
        "startColumnNumber" : 2,
        "endLineNumber" : 199,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Locate the vertices and the codewords area of a black blob using the Start and Stop patterns as locators.\n * @param matrix the scanned barcode image.\n * @return an array containing the vertices:vertices[0] x, y top left barcode vertices[1] x, y bottom left barcode vertices[2] x, y top right barcode vertices[3] x, y bottom right barcode vertices[4] x, y top left codeword area vertices[5] x, y bottom left codeword area vertices[6] x, y top right codeword area vertices[7] x, y bottom right codeword area\n */\nprivate static ResultPoint[] findVertices(BitMatrix matrix,boolean tryHarder){\n  int height=matrix.getHeight();\n  int width=matrix.getWidth();\n  ResultPoint[] result=new ResultPoint[8];\n  boolean found=false;\n  int[] counters=new int[START_PATTERN.length];\n  int rowStep=Math.max(1,height >> (tryHarder ? 9 : 7));\n  for (int i=0; i < height; i+=rowStep) {\n    int[] loc=findGuardPattern(matrix,0,i,width,false,START_PATTERN,counters);\n    if (loc != null) {\n      result[0]=new ResultPoint(loc[0],i);\n      result[4]=new ResultPoint(loc[1],i);\n      found=true;\n      break;\n    }\n  }\n  if (found) {\n    found=false;\n    for (int i=height - 1; i > 0; i-=rowStep) {\n      int[] loc=findGuardPattern(matrix,0,i,width,false,START_PATTERN,counters);\n      if (loc != null) {\n        result[1]=new ResultPoint(loc[0],i);\n        result[5]=new ResultPoint(loc[1],i);\n        found=true;\n        break;\n      }\n    }\n  }\n  counters=new int[STOP_PATTERN.length];\n  if (found) {\n    found=false;\n    for (int i=0; i < height; i+=rowStep) {\n      int[] loc=findGuardPattern(matrix,0,i,width,false,STOP_PATTERN,counters);\n      if (loc != null) {\n        result[2]=new ResultPoint(loc[1],i);\n        result[6]=new ResultPoint(loc[0],i);\n        found=true;\n        break;\n      }\n    }\n  }\n  if (found) {\n    found=false;\n    for (int i=height - 1; i > 0; i-=rowStep) {\n      int[] loc=findGuardPattern(matrix,0,i,width,false,STOP_PATTERN,counters);\n      if (loc != null) {\n        result[3]=new ResultPoint(loc[1],i);\n        result[7]=new ResultPoint(loc[0],i);\n        found=true;\n        break;\n      }\n    }\n  }\n  return found ? result : null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 365,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 191,
        "startColumnNumber" : 10,
        "endLineNumber" : 191,
        "endColumnNumber" : 49
      },
      "nodeContext" : "result[3]=new ResultPoint(loc[1],i);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "com.google.zxing.ResultPoint"
  } ],
  "positionList" : [ {
    "charLength" : 26,
    "startLineNumber" : 151,
    "startColumnNumber" : 20,
    "endLineNumber" : 151,
    "endColumnNumber" : 46
  }, {
    "charLength" : 26,
    "startLineNumber" : 163,
    "startColumnNumber" : 22,
    "endLineNumber" : 163,
    "endColumnNumber" : 48
  }, {
    "charLength" : 26,
    "startLineNumber" : 178,
    "startColumnNumber" : 22,
    "endLineNumber" : 178,
    "endColumnNumber" : 48
  }, {
    "charLength" : 26,
    "startLineNumber" : 191,
    "startColumnNumber" : 22,
    "endLineNumber" : 191,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 8
  } ]
}