{
  "id" : 210,
  "expression" : "Build",
  "projectName" : "bumptech@glide",
  "commitID" : "7d9c28ec2763e973775abd5c3e3c971728a48a56",
  "filePath" : "/library/src/main/java/com/bumptech/glide/util/Util.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Build",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 85,
      "startColumnNumber" : 8,
      "endLineNumber" : 85,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.QualifiedName,qualifier]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 85,
        "startColumnNumber" : 8,
        "endLineNumber" : 85,
        "endColumnNumber" : 21
      },
      "nodeContext" : "Build.VERSION",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 85,
        "startColumnNumber" : 8,
        "endLineNumber" : 85,
        "endColumnNumber" : 29
      },
      "nodeContext" : "Build.VERSION.SDK_INT",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 85,
        "startColumnNumber" : 8,
        "endLineNumber" : 85,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 288,
        "startLineNumber" : 85,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {\n  try {\n    return bitmap.getAllocationByteCount();\n  }\n catch (  NullPointerException e) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 794,
        "startLineNumber" : 77,
        "startColumnNumber" : 53,
        "endLineNumber" : 94,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (bitmap.isRecycled()) {\n    throw new IllegalStateException(\"Cannot obtain size for recycled Bitmap: \" + bitmap + \"[\"+ bitmap.getWidth()+ \"x\"+ bitmap.getHeight()+ \"] \"+ bitmap.getConfig());\n  }\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {\n    try {\n      return bitmap.getAllocationByteCount();\n    }\n catch (    NullPointerException e) {\n    }\n  }\n  return bitmap.getHeight() * bitmap.getRowBytes();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 968,
        "startLineNumber" : 73,
        "startColumnNumber" : 2,
        "endLineNumber" : 94,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns the in memory size of the given  {@link Bitmap} in bytes.\n */\n@TargetApi(Build.VERSION_CODES.KITKAT) public static int getBitmapByteSize(Bitmap bitmap){\n  if (bitmap.isRecycled()) {\n    throw new IllegalStateException(\"Cannot obtain size for recycled Bitmap: \" + bitmap + \"[\"+ bitmap.getWidth()+ \"x\"+ bitmap.getHeight()+ \"] \"+ bitmap.getConfig());\n  }\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {\n    try {\n      return bitmap.getAllocationByteCount();\n    }\n catch (    NullPointerException e) {\n    }\n  }\n  return bitmap.getHeight() * bitmap.getRowBytes();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 75,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 85,
        "startColumnNumber" : 8,
        "endLineNumber" : 85,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "Build",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 85,
      "startColumnNumber" : 33,
      "endLineNumber" : 85,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.QualifiedName,qualifier]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 85,
        "startColumnNumber" : 33,
        "endLineNumber" : 85,
        "endColumnNumber" : 52
      },
      "nodeContext" : "Build.VERSION_CODES",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 85,
        "startColumnNumber" : 33,
        "endLineNumber" : 85,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Build.VERSION_CODES.KITKAT",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 85,
        "startColumnNumber" : 8,
        "endLineNumber" : 85,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 288,
        "startLineNumber" : 85,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {\n  try {\n    return bitmap.getAllocationByteCount();\n  }\n catch (  NullPointerException e) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 794,
        "startLineNumber" : 77,
        "startColumnNumber" : 53,
        "endLineNumber" : 94,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (bitmap.isRecycled()) {\n    throw new IllegalStateException(\"Cannot obtain size for recycled Bitmap: \" + bitmap + \"[\"+ bitmap.getWidth()+ \"x\"+ bitmap.getHeight()+ \"] \"+ bitmap.getConfig());\n  }\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {\n    try {\n      return bitmap.getAllocationByteCount();\n    }\n catch (    NullPointerException e) {\n    }\n  }\n  return bitmap.getHeight() * bitmap.getRowBytes();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 968,
        "startLineNumber" : 73,
        "startColumnNumber" : 2,
        "endLineNumber" : 94,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns the in memory size of the given  {@link Bitmap} in bytes.\n */\n@TargetApi(Build.VERSION_CODES.KITKAT) public static int getBitmapByteSize(Bitmap bitmap){\n  if (bitmap.isRecycled()) {\n    throw new IllegalStateException(\"Cannot obtain size for recycled Bitmap: \" + bitmap + \"[\"+ bitmap.getWidth()+ \"x\"+ bitmap.getHeight()+ \"] \"+ bitmap.getConfig());\n  }\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT) {\n    try {\n      return bitmap.getAllocationByteCount();\n    }\n catch (    NullPointerException e) {\n    }\n  }\n  return bitmap.getHeight() * bitmap.getRowBytes();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 75,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 85,
        "startColumnNumber" : 8,
        "endLineNumber" : 85,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Build.VERSION.SDK_INT >= Build.VERSION_CODES.KITKAT",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 85,
    "startColumnNumber" : 8,
    "endLineNumber" : 85,
    "endColumnNumber" : 13
  }, {
    "charLength" : 5,
    "startLineNumber" : 85,
    "startColumnNumber" : 33,
    "endLineNumber" : 85,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}