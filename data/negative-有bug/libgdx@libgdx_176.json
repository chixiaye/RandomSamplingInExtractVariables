{
  "id" : 176,
  "expression" : "getLineHeight()",
  "projectName" : "libgdx@libgdx",
  "commitID" : "3485b16e8979c0141421bc80cb8831b7a0403f67",
  "filePath" : "/extensions/gdx-tools/src/com/badlogic/gdx/tools/hiero/unicodefont/UnicodeFont.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "getLineHeight()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 368,
      "startColumnNumber" : 14,
      "endLineNumber" : 368,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 368,
        "startColumnNumber" : 4,
        "endLineNumber" : 368,
        "endColumnNumber" : 29
      },
      "nodeContext" : "extraY+=getLineHeight()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 368,
        "startColumnNumber" : 4,
        "endLineNumber" : 368,
        "endColumnNumber" : 30
      },
      "nodeContext" : "extraY+=getLineHeight();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 178,
        "startLineNumber" : 366,
        "startColumnNumber" : 26,
        "endLineNumber" : 371,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  startNewLine=true;\n  extraY+=getLineHeight();\n  lines++;\n  totalHeight=0;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 268,
        "startLineNumber" : 366,
        "startColumnNumber" : 3,
        "endLineNumber" : 371,
        "endColumnNumber" : 71
      },
      "nodeContext" : "if (codePoint == '\\n') {\n  startNewLine=true;\n  extraY+=getLineHeight();\n  lines++;\n  totalHeight=0;\n}\n else if (renderType == RenderType.Native) offsetX+=bounds.width;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 2013,
        "startLineNumber" : 321,
        "startColumnNumber" : 84,
        "endLineNumber" : 372,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int charIndex=vector.getGlyphCharIndex(glyphIndex);\n  if (charIndex < startIndex)   continue;\n  if (charIndex > endIndex)   break;\n  int codePoint=text.codePointAt(charIndex);\n  Rectangle bounds=getGlyphBounds(vector,glyphIndex,codePoint);\n  bounds.x+=offsetX;\n  Glyph glyph=getGlyph(vector.getGlyphCode(glyphIndex),codePoint,bounds,vector,glyphIndex);\n  if (startNewLine && codePoint != '\\n') {\n    extraX=-bounds.x;\n    startNewLine=false;\n  }\n  if (glyph.getTexture() == null && missingGlyph != null && glyph.isMissing())   glyph=missingGlyph;\n  if (glyph.getTexture() != null) {\n    Texture texture=glyph.getTexture();\n    if (lastBind != null && lastBind != texture) {\n      GL11.glEnd();\n      lastBind=null;\n    }\n    if (lastBind == null) {\n      texture.bind();\n      GL11.glBegin(GL11.GL_QUADS);\n      lastBind=texture;\n    }\n    int glyphX=bounds.x + extraX;\n    int glyphY=bounds.y + extraY;\n    GL11.glTexCoord2f(glyph.getU(),glyph.getV());\n    GL11.glVertex3f(glyphX,glyphY,0);\n    GL11.glTexCoord2f(glyph.getU(),glyph.getV2());\n    GL11.glVertex3f(glyphX,glyphY + glyph.getHeight(),0);\n    GL11.glTexCoord2f(glyph.getU2(),glyph.getV2());\n    GL11.glVertex3f(glyphX + glyph.getWidth(),glyphY + glyph.getHeight(),0);\n    GL11.glTexCoord2f(glyph.getU2(),glyph.getV());\n    GL11.glVertex3f(glyphX + glyph.getWidth(),glyphY,0);\n  }\n  if (glyphIndex > 0)   extraX+=paddingRight + paddingLeft + paddingAdvanceX;\n  maxWidth=Math.max(maxWidth,bounds.x + extraX + bounds.width);\n  totalHeight=Math.max(totalHeight,ascent + bounds.y + bounds.height);\n  if (codePoint == '\\n') {\n    startNewLine=true;\n    extraY+=getLineHeight();\n    lines++;\n    totalHeight=0;\n  }\n else   if (renderType == RenderType.Native)   offsetX+=bounds.width;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 322,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2095,
        "startLineNumber" : 321,
        "startColumnNumber" : 2,
        "endLineNumber" : 372,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int glyphIndex=0, n=vector.getNumGlyphs(); glyphIndex < n; glyphIndex++) {\n  int charIndex=vector.getGlyphCharIndex(glyphIndex);\n  if (charIndex < startIndex)   continue;\n  if (charIndex > endIndex)   break;\n  int codePoint=text.codePointAt(charIndex);\n  Rectangle bounds=getGlyphBounds(vector,glyphIndex,codePoint);\n  bounds.x+=offsetX;\n  Glyph glyph=getGlyph(vector.getGlyphCode(glyphIndex),codePoint,bounds,vector,glyphIndex);\n  if (startNewLine && codePoint != '\\n') {\n    extraX=-bounds.x;\n    startNewLine=false;\n  }\n  if (glyph.getTexture() == null && missingGlyph != null && glyph.isMissing())   glyph=missingGlyph;\n  if (glyph.getTexture() != null) {\n    Texture texture=glyph.getTexture();\n    if (lastBind != null && lastBind != texture) {\n      GL11.glEnd();\n      lastBind=null;\n    }\n    if (lastBind == null) {\n      texture.bind();\n      GL11.glBegin(GL11.GL_QUADS);\n      lastBind=texture;\n    }\n    int glyphX=bounds.x + extraX;\n    int glyphY=bounds.y + extraY;\n    GL11.glTexCoord2f(glyph.getU(),glyph.getV());\n    GL11.glVertex3f(glyphX,glyphY,0);\n    GL11.glTexCoord2f(glyph.getU(),glyph.getV2());\n    GL11.glVertex3f(glyphX,glyphY + glyph.getHeight(),0);\n    GL11.glTexCoord2f(glyph.getU2(),glyph.getV2());\n    GL11.glVertex3f(glyphX + glyph.getWidth(),glyphY + glyph.getHeight(),0);\n    GL11.glTexCoord2f(glyph.getU2(),glyph.getV());\n    GL11.glVertex3f(glyphX + glyph.getWidth(),glyphY,0);\n  }\n  if (glyphIndex > 0)   extraX+=paddingRight + paddingLeft + paddingAdvanceX;\n  maxWidth=Math.max(maxWidth,bounds.x + extraX + bounds.width);\n  totalHeight=Math.max(totalHeight,ascent + bounds.y + bounds.height);\n  if (codePoint == '\\n') {\n    startNewLine=true;\n    extraY+=getLineHeight();\n    lines++;\n    totalHeight=0;\n  }\n else   if (renderType == RenderType.Native)   offsetX+=bounds.width;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 338,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2496,
        "startLineNumber" : 312,
        "startColumnNumber" : 70,
        "endLineNumber" : 374,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  char[] chars=text.substring(0,endIndex).toCharArray();\n  GlyphVector vector=font.layoutGlyphVector(GlyphPage.renderContext,chars,0,chars.length,Font.LAYOUT_LEFT_TO_RIGHT);\n  int maxWidth=0, totalHeight=0, lines=0;\n  int extraX=0, extraY=ascent;\n  boolean startNewLine=false;\n  Texture lastBind=null;\n  int offsetX=0;\n  for (int glyphIndex=0, n=vector.getNumGlyphs(); glyphIndex < n; glyphIndex++) {\n    int charIndex=vector.getGlyphCharIndex(glyphIndex);\n    if (charIndex < startIndex)     continue;\n    if (charIndex > endIndex)     break;\n    int codePoint=text.codePointAt(charIndex);\n    Rectangle bounds=getGlyphBounds(vector,glyphIndex,codePoint);\n    bounds.x+=offsetX;\n    Glyph glyph=getGlyph(vector.getGlyphCode(glyphIndex),codePoint,bounds,vector,glyphIndex);\n    if (startNewLine && codePoint != '\\n') {\n      extraX=-bounds.x;\n      startNewLine=false;\n    }\n    if (glyph.getTexture() == null && missingGlyph != null && glyph.isMissing())     glyph=missingGlyph;\n    if (glyph.getTexture() != null) {\n      Texture texture=glyph.getTexture();\n      if (lastBind != null && lastBind != texture) {\n        GL11.glEnd();\n        lastBind=null;\n      }\n      if (lastBind == null) {\n        texture.bind();\n        GL11.glBegin(GL11.GL_QUADS);\n        lastBind=texture;\n      }\n      int glyphX=bounds.x + extraX;\n      int glyphY=bounds.y + extraY;\n      GL11.glTexCoord2f(glyph.getU(),glyph.getV());\n      GL11.glVertex3f(glyphX,glyphY,0);\n      GL11.glTexCoord2f(glyph.getU(),glyph.getV2());\n      GL11.glVertex3f(glyphX,glyphY + glyph.getHeight(),0);\n      GL11.glTexCoord2f(glyph.getU2(),glyph.getV2());\n      GL11.glVertex3f(glyphX + glyph.getWidth(),glyphY + glyph.getHeight(),0);\n      GL11.glTexCoord2f(glyph.getU2(),glyph.getV());\n      GL11.glVertex3f(glyphX + glyph.getWidth(),glyphY,0);\n    }\n    if (glyphIndex > 0)     extraX+=paddingRight + paddingLeft + paddingAdvanceX;\n    maxWidth=Math.max(maxWidth,bounds.x + extraX + bounds.width);\n    totalHeight=Math.max(totalHeight,ascent + bounds.y + bounds.height);\n    if (codePoint == '\\n') {\n      startNewLine=true;\n      extraY+=getLineHeight();\n      lines++;\n      totalHeight=0;\n    }\n else     if (renderType == RenderType.Native)     offsetX+=bounds.width;\n  }\n  if (lastBind != null)   GL11.glEnd();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 414,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2565,
        "startLineNumber" : 312,
        "startColumnNumber" : 1,
        "endLineNumber" : 374,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private void drawUnicode(String text,int startIndex,int endIndex){\n  char[] chars=text.substring(0,endIndex).toCharArray();\n  GlyphVector vector=font.layoutGlyphVector(GlyphPage.renderContext,chars,0,chars.length,Font.LAYOUT_LEFT_TO_RIGHT);\n  int maxWidth=0, totalHeight=0, lines=0;\n  int extraX=0, extraY=ascent;\n  boolean startNewLine=false;\n  Texture lastBind=null;\n  int offsetX=0;\n  for (int glyphIndex=0, n=vector.getNumGlyphs(); glyphIndex < n; glyphIndex++) {\n    int charIndex=vector.getGlyphCharIndex(glyphIndex);\n    if (charIndex < startIndex)     continue;\n    if (charIndex > endIndex)     break;\n    int codePoint=text.codePointAt(charIndex);\n    Rectangle bounds=getGlyphBounds(vector,glyphIndex,codePoint);\n    bounds.x+=offsetX;\n    Glyph glyph=getGlyph(vector.getGlyphCode(glyphIndex),codePoint,bounds,vector,glyphIndex);\n    if (startNewLine && codePoint != '\\n') {\n      extraX=-bounds.x;\n      startNewLine=false;\n    }\n    if (glyph.getTexture() == null && missingGlyph != null && glyph.isMissing())     glyph=missingGlyph;\n    if (glyph.getTexture() != null) {\n      Texture texture=glyph.getTexture();\n      if (lastBind != null && lastBind != texture) {\n        GL11.glEnd();\n        lastBind=null;\n      }\n      if (lastBind == null) {\n        texture.bind();\n        GL11.glBegin(GL11.GL_QUADS);\n        lastBind=texture;\n      }\n      int glyphX=bounds.x + extraX;\n      int glyphY=bounds.y + extraY;\n      GL11.glTexCoord2f(glyph.getU(),glyph.getV());\n      GL11.glVertex3f(glyphX,glyphY,0);\n      GL11.glTexCoord2f(glyph.getU(),glyph.getV2());\n      GL11.glVertex3f(glyphX,glyphY + glyph.getHeight(),0);\n      GL11.glTexCoord2f(glyph.getU2(),glyph.getV2());\n      GL11.glVertex3f(glyphX + glyph.getWidth(),glyphY + glyph.getHeight(),0);\n      GL11.glTexCoord2f(glyph.getU2(),glyph.getV());\n      GL11.glVertex3f(glyphX + glyph.getWidth(),glyphY,0);\n    }\n    if (glyphIndex > 0)     extraX+=paddingRight + paddingLeft + paddingAdvanceX;\n    maxWidth=Math.max(maxWidth,bounds.x + extraX + bounds.width);\n    totalHeight=Math.max(totalHeight,ascent + bounds.y + bounds.height);\n    if (codePoint == '\\n') {\n      startNewLine=true;\n      extraY+=getLineHeight();\n      lines++;\n      totalHeight=0;\n    }\n else     if (renderType == RenderType.Native)     offsetX+=bounds.width;\n  }\n  if (lastBind != null)   GL11.glEnd();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 428,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 368,
        "startColumnNumber" : 4,
        "endLineNumber" : 368,
        "endColumnNumber" : 30
      },
      "nodeContext" : "extraY+=getLineHeight();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 368,
    "startColumnNumber" : 14,
    "endLineNumber" : 368,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ ]
}