{
  "id" : 356,
  "expression" : "FlinkTypeFactory",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/functions/utils/HiveTableSqlFunction.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "FlinkTypeFactory",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 115,
      "startColumnNumber" : 24,
      "endLineNumber" : 115,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 340,
        "startLineNumber" : 115,
        "startColumnNumber" : 24,
        "endLineNumber" : 120,
        "endColumnNumber" : 72
      },
      "nodeContext" : "FlinkTypeFactory.toLogicalType(invokeGetResultType(hiveUdtf,argumentsArray,operandTypeChecker.previousArgTypes,(FlinkTypeFactory)typeFactory))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 392,
        "startLineNumber" : 114,
        "startColumnNumber" : 16,
        "endLineNumber" : 120,
        "endColumnNumber" : 73
      },
      "nodeContext" : "fromLogicalTypeToDataType(FlinkTypeFactory.toLogicalType(invokeGetResultType(hiveUdtf,argumentsArray,operandTypeChecker.previousArgTypes,(FlinkTypeFactory)typeFactory)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 421,
        "startLineNumber" : 113,
        "startColumnNumber" : 17,
        "endLineNumber" : 120,
        "endColumnNumber" : 73
      },
      "nodeContext" : "resultType=fromLogicalTypeToDataType(FlinkTypeFactory.toLogicalType(invokeGetResultType(hiveUdtf,argumentsArray,operandTypeChecker.previousArgTypes,(FlinkTypeFactory)typeFactory)))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 431,
        "startLineNumber" : 113,
        "startColumnNumber" : 8,
        "endLineNumber" : 120,
        "endColumnNumber" : 74
      },
      "nodeContext" : "DataType resultType=fromLogicalTypeToDataType(FlinkTypeFactory.toLogicalType(invokeGetResultType(hiveUdtf,argumentsArray,operandTypeChecker.previousArgTypes,(FlinkTypeFactory)typeFactory)));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1167,
        "startLineNumber" : 104,
        "startColumnNumber" : 90,
        "endLineNumber" : 125,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Preconditions.checkNotNull(operandTypeChecker.previousArgTypes);\n  FlinkTypeFactory factory=(FlinkTypeFactory)typeFactory;\n  Object[] argumentsArray=convertArguments(Arrays.stream(operandTypeChecker.previousArgTypes).map(factory::createFieldTypeFromLogicalType).collect(Collectors.toList()),arguments);\n  DataType resultType=fromLogicalTypeToDataType(FlinkTypeFactory.toLogicalType(invokeGetResultType(hiveUdtf,argumentsArray,operandTypeChecker.previousArgTypes,(FlinkTypeFactory)typeFactory)));\n  Tuple3<String[],int[],LogicalType[]> fieldInfo=UserDefinedFunctionUtils.getFieldInfo(resultType);\n  return buildRelDataType(typeFactory,fromDataTypeToLogicalType(resultType),fieldInfo._1(),fieldInfo._2());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1267,
        "startLineNumber" : 103,
        "startColumnNumber" : 4,
        "endLineNumber" : 125,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public RelDataType getRowType(RelDataTypeFactory typeFactory,List<Object> arguments){\n  Preconditions.checkNotNull(operandTypeChecker.previousArgTypes);\n  FlinkTypeFactory factory=(FlinkTypeFactory)typeFactory;\n  Object[] argumentsArray=convertArguments(Arrays.stream(operandTypeChecker.previousArgTypes).map(factory::createFieldTypeFromLogicalType).collect(Collectors.toList()),arguments);\n  DataType resultType=fromLogicalTypeToDataType(FlinkTypeFactory.toLogicalType(invokeGetResultType(hiveUdtf,argumentsArray,operandTypeChecker.previousArgTypes,(FlinkTypeFactory)typeFactory)));\n  Tuple3<String[],int[],LogicalType[]> fieldInfo=UserDefinedFunctionUtils.getFieldInfo(resultType);\n  return buildRelDataType(typeFactory,fromDataTypeToLogicalType(resultType),fieldInfo._1(),fieldInfo._2());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 116,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 340,
        "startLineNumber" : 115,
        "startColumnNumber" : 24,
        "endLineNumber" : 120,
        "endColumnNumber" : 72
      },
      "nodeContext" : "FlinkTypeFactory.toLogicalType(invokeGetResultType(hiveUdtf,argumentsArray,operandTypeChecker.previousArgTypes,(FlinkTypeFactory)typeFactory))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 115,
    "startColumnNumber" : 24,
    "endLineNumber" : 115,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ ]
}