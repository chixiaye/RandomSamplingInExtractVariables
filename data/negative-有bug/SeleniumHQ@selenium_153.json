{
  "id" : 153,
  "expression" : "\"unwanted\"",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/server/test/org/openqa/selenium/remote/server/commandhandler/UploadFileTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"unwanted\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 99,
      "startColumnNumber" : 19,
      "endLineNumber" : 99,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 99,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 30
      },
      "nodeContext" : "touch(baseDir,\"unwanted\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 99,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 31
      },
      "nodeContext" : "touch(baseDir,\"unwanted\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 947,
        "startLineNumber" : 91,
        "startColumnNumber" : 79,
        "endLineNumber" : 116,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ActiveSession session=mock(ActiveSession.class);\n  when(session.getId()).thenReturn(new SessionId(\"1234567\"));\n  when(session.getFileSystem()).thenReturn(tempFs);\n  when(session.getDownstreamDialect()).thenReturn(Dialect.OSS);\n  File baseDir=Files.createTempDir();\n  touch(baseDir,\"example\");\n  touch(baseDir,\"unwanted\");\n  String encoded=Zip.zip(baseDir);\n  UploadFile uploadFile=new UploadFile(new Json(),session);\n  Map<String,Object> args=ImmutableMap.of(\"file\",encoded);\n  HttpRequest request=new HttpRequest(HttpMethod.POST,\"/session/%d/se/file\");\n  request.setContent(asJson(args));\n  HttpResponse response=uploadFile.execute(request);\n  try {\n    new ErrorHandler(false).throwIfResponseFailed(new Json().toType(string(response),Response.class),100);\n    fail(\"Should not get this far\");\n  }\n catch (  WebDriverException ignored) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1032,
        "startLineNumber" : 90,
        "startColumnNumber" : 2,
        "endLineNumber" : 116,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void shouldThrowAnExceptionIfMoreThanOneFileIsSent() throws Exception {\n  ActiveSession session=mock(ActiveSession.class);\n  when(session.getId()).thenReturn(new SessionId(\"1234567\"));\n  when(session.getFileSystem()).thenReturn(tempFs);\n  when(session.getDownstreamDialect()).thenReturn(Dialect.OSS);\n  File baseDir=Files.createTempDir();\n  touch(baseDir,\"example\");\n  touch(baseDir,\"unwanted\");\n  String encoded=Zip.zip(baseDir);\n  UploadFile uploadFile=new UploadFile(new Json(),session);\n  Map<String,Object> args=ImmutableMap.of(\"file\",encoded);\n  HttpRequest request=new HttpRequest(HttpMethod.POST,\"/session/%d/se/file\");\n  request.setContent(asJson(args));\n  HttpResponse response=uploadFile.execute(request);\n  try {\n    new ErrorHandler(false).throwIfResponseFailed(new Json().toType(string(response),Response.class),100);\n    fail(\"Should not get this far\");\n  }\n catch (  WebDriverException ignored) {\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 164,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 99,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 31
      },
      "nodeContext" : "touch(baseDir,\"unwanted\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 99,
    "startColumnNumber" : 19,
    "endLineNumber" : 99,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ ]
}