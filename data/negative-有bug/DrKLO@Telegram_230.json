{
  "id" : 230,
  "expression" : "textures.get(index)",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/org/telegram/ui/Components/Premium/GLIcon/ObjLoader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "textures.get(index)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 57,
      "startColumnNumber" : 56,
      "endLineNumber" : 57,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 57,
        "startColumnNumber" : 52,
        "endLineNumber" : 57,
        "endColumnNumber" : 75
      },
      "nodeContext" : "1 - textures.get(index)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 57,
        "startColumnNumber" : 16,
        "endLineNumber" : 57,
        "endColumnNumber" : 75
      },
      "nodeContext" : "textureCoordinates[normalIndex++]=1 - textures.get(index)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 57,
        "startColumnNumber" : 16,
        "endLineNumber" : 57,
        "endColumnNumber" : 76
      },
      "nodeContext" : "textureCoordinates[normalIndex++]=1 - textures.get(index);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 747,
        "startLineNumber" : 49,
        "startColumnNumber" : 40,
        "endLineNumber" : 63,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  int index=3 * inputStream.readInt();\n  positions[positionIndex++]=vertices.get(index++);\n  positions[positionIndex++]=vertices.get(index++);\n  positions[positionIndex++]=vertices.get(index);\n  index=2 * inputStream.readInt();\n  textureCoordinates[normalIndex++]=textures.get(index++);\n  textureCoordinates[normalIndex++]=1 - textures.get(index);\n  index=3 * inputStream.readInt();\n  this.normals[textureIndex++]=normals.get(index++);\n  this.normals[textureIndex++]=normals.get(index++);\n  this.normals[textureIndex++]=normals.get(index);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 775,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 63,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < n; i++) {\n  int index=3 * inputStream.readInt();\n  positions[positionIndex++]=vertices.get(index++);\n  positions[positionIndex++]=vertices.get(index++);\n  positions[positionIndex++]=vertices.get(index);\n  index=2 * inputStream.readInt();\n  textureCoordinates[normalIndex++]=textures.get(index++);\n  textureCoordinates[normalIndex++]=1 - textures.get(index);\n  index=3 * inputStream.readInt();\n  this.normals[textureIndex++]=normals.get(index++);\n  this.normals[textureIndex++]=normals.get(index++);\n  this.normals[textureIndex++]=normals.get(index);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 130,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1708,
        "startLineNumber" : 22,
        "startColumnNumber" : 12,
        "endLineNumber" : 65,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  DataInputStream inputStream=new DataInputStream(context.getAssets().open(file));\n  int n=inputStream.readInt();\n  for (int i=0; i < n; i++) {\n    vertices.add(inputStream.readFloat());\n  }\n  n=inputStream.readInt();\n  for (int i=0; i < n; i++) {\n    textures.add(inputStream.readFloat());\n  }\n  n=inputStream.readInt();\n  for (int i=0; i < n; i++) {\n    normals.add(inputStream.readFloat());\n  }\n  n=inputStream.readInt();\n  numFaces=n;\n  this.normals=new float[numFaces * 3];\n  textureCoordinates=new float[numFaces * 2];\n  positions=new float[numFaces * 3];\n  int positionIndex=0;\n  int normalIndex=0;\n  int textureIndex=0;\n  for (int i=0; i < n; i++) {\n    int index=3 * inputStream.readInt();\n    positions[positionIndex++]=vertices.get(index++);\n    positions[positionIndex++]=vertices.get(index++);\n    positions[positionIndex++]=vertices.get(index);\n    index=2 * inputStream.readInt();\n    textureCoordinates[normalIndex++]=textures.get(index++);\n    textureCoordinates[normalIndex++]=1 - textures.get(index);\n    index=3 * inputStream.readInt();\n    this.normals[textureIndex++]=normals.get(index++);\n    this.normals[textureIndex++]=normals.get(index++);\n    this.normals[textureIndex++]=normals.get(index);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 278,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1781,
        "startLineNumber" : 22,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  DataInputStream inputStream=new DataInputStream(context.getAssets().open(file));\n  int n=inputStream.readInt();\n  for (int i=0; i < n; i++) {\n    vertices.add(inputStream.readFloat());\n  }\n  n=inputStream.readInt();\n  for (int i=0; i < n; i++) {\n    textures.add(inputStream.readFloat());\n  }\n  n=inputStream.readInt();\n  for (int i=0; i < n; i++) {\n    normals.add(inputStream.readFloat());\n  }\n  n=inputStream.readInt();\n  numFaces=n;\n  this.normals=new float[numFaces * 3];\n  textureCoordinates=new float[numFaces * 2];\n  positions=new float[numFaces * 3];\n  int positionIndex=0;\n  int normalIndex=0;\n  int textureIndex=0;\n  for (int i=0; i < n; i++) {\n    int index=3 * inputStream.readInt();\n    positions[positionIndex++]=vertices.get(index++);\n    positions[positionIndex++]=vertices.get(index++);\n    positions[positionIndex++]=vertices.get(index);\n    index=2 * inputStream.readInt();\n    textureCoordinates[normalIndex++]=textures.get(index++);\n    textureCoordinates[normalIndex++]=1 - textures.get(index);\n    index=3 * inputStream.readInt();\n    this.normals[textureIndex++]=normals.get(index++);\n    this.normals[textureIndex++]=normals.get(index++);\n    this.normals[textureIndex++]=normals.get(index);\n  }\n}\n catch (IOException e) {\n  e.printStackTrace();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 289,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1968,
        "startLineNumber" : 17,
        "startColumnNumber" : 51,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ArrayList<Float> vertices=new ArrayList<>();\n  ArrayList<Float> normals=new ArrayList<>();\n  ArrayList<Float> textures=new ArrayList<>();\n  try {\n    DataInputStream inputStream=new DataInputStream(context.getAssets().open(file));\n    int n=inputStream.readInt();\n    for (int i=0; i < n; i++) {\n      vertices.add(inputStream.readFloat());\n    }\n    n=inputStream.readInt();\n    for (int i=0; i < n; i++) {\n      textures.add(inputStream.readFloat());\n    }\n    n=inputStream.readInt();\n    for (int i=0; i < n; i++) {\n      normals.add(inputStream.readFloat());\n    }\n    n=inputStream.readInt();\n    numFaces=n;\n    this.normals=new float[numFaces * 3];\n    textureCoordinates=new float[numFaces * 2];\n    positions=new float[numFaces * 3];\n    int positionIndex=0;\n    int normalIndex=0;\n    int textureIndex=0;\n    for (int i=0; i < n; i++) {\n      int index=3 * inputStream.readInt();\n      positions[positionIndex++]=vertices.get(index++);\n      positions[positionIndex++]=vertices.get(index++);\n      positions[positionIndex++]=vertices.get(index);\n      index=2 * inputStream.readInt();\n      textureCoordinates[normalIndex++]=textures.get(index++);\n      textureCoordinates[normalIndex++]=1 - textures.get(index);\n      index=3 * inputStream.readInt();\n      this.normals[textureIndex++]=normals.get(index++);\n      this.normals[textureIndex++]=normals.get(index++);\n      this.normals[textureIndex++]=normals.get(index);\n    }\n  }\n catch (  IOException e) {\n    e.printStackTrace();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 326,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2015,
        "startLineNumber" : 17,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public ObjLoader(Context context,String file){\n  ArrayList<Float> vertices=new ArrayList<>();\n  ArrayList<Float> normals=new ArrayList<>();\n  ArrayList<Float> textures=new ArrayList<>();\n  try {\n    DataInputStream inputStream=new DataInputStream(context.getAssets().open(file));\n    int n=inputStream.readInt();\n    for (int i=0; i < n; i++) {\n      vertices.add(inputStream.readFloat());\n    }\n    n=inputStream.readInt();\n    for (int i=0; i < n; i++) {\n      textures.add(inputStream.readFloat());\n    }\n    n=inputStream.readInt();\n    for (int i=0; i < n; i++) {\n      normals.add(inputStream.readFloat());\n    }\n    n=inputStream.readInt();\n    numFaces=n;\n    this.normals=new float[numFaces * 3];\n    textureCoordinates=new float[numFaces * 2];\n    positions=new float[numFaces * 3];\n    int positionIndex=0;\n    int normalIndex=0;\n    int textureIndex=0;\n    for (int i=0; i < n; i++) {\n      int index=3 * inputStream.readInt();\n      positions[positionIndex++]=vertices.get(index++);\n      positions[positionIndex++]=vertices.get(index++);\n      positions[positionIndex++]=vertices.get(index);\n      index=2 * inputStream.readInt();\n      textureCoordinates[normalIndex++]=textures.get(index++);\n      textureCoordinates[normalIndex++]=1 - textures.get(index);\n      index=3 * inputStream.readInt();\n      this.normals[textureIndex++]=normals.get(index++);\n      this.normals[textureIndex++]=normals.get(index++);\n      this.normals[textureIndex++]=normals.get(index);\n    }\n  }\n catch (  IOException e) {\n    e.printStackTrace();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 337,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 57,
        "startColumnNumber" : 16,
        "endLineNumber" : 57,
        "endColumnNumber" : 76
      },
      "nodeContext" : "textureCoordinates[normalIndex++]=1 - textures.get(index);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.lang.Float"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 57,
    "startColumnNumber" : 56,
    "endLineNumber" : 57,
    "endColumnNumber" : 75
  } ],
  "layoutRelationDataList" : [ ]
}