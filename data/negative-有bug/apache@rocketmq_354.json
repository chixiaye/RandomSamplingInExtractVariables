{
  "id" : 354,
  "expression" : "MessageConst",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/proxy/src/main/java/org/apache/rocketmq/proxy/service/mqclient/ProxyClientRemotingProcessor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "MessageConst",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 61,
      "startColumnNumber" : 56,
      "endLineNumber" : 61,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 61,
        "startColumnNumber" : 56,
        "endLineNumber" : 61,
        "endColumnNumber" : 92
      },
      "nodeContext" : "MessageConst.PROPERTY_PRODUCER_GROUP",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 61,
        "startColumnNumber" : 33,
        "endLineNumber" : 61,
        "endColumnNumber" : 93
      },
      "nodeContext" : "messageExt.getProperty(MessageConst.PROPERTY_PRODUCER_GROUP)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 61,
        "startColumnNumber" : 25,
        "endLineNumber" : 61,
        "endColumnNumber" : 93
      },
      "nodeContext" : "group=messageExt.getProperty(MessageConst.PROPERTY_PRODUCER_GROUP)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 61,
        "startColumnNumber" : 12,
        "endLineNumber" : 61,
        "endColumnNumber" : 94
      },
      "nodeContext" : "final String group=messageExt.getProperty(MessageConst.PROPERTY_PRODUCER_GROUP);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 898,
        "startLineNumber" : 60,
        "startColumnNumber" : 32,
        "endLineNumber" : 74,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final String group=messageExt.getProperty(MessageConst.PROPERTY_PRODUCER_GROUP);\n  if (group != null) {\n    CheckTransactionStateRequestHeader requestHeader=(CheckTransactionStateRequestHeader)request.decodeCommandCustomHeader(CheckTransactionStateRequestHeader.class);\n    request.writeCustomHeader(requestHeader);\n    request.addExtField(ProxyUtils.BROKER_ADDR,RemotingUtil.socketAddress2String(ctx.channel().remoteAddress()));\n    Channel channel=this.producerManager.getAvailableChannel(group);\n    if (channel != null) {\n      channel.writeAndFlush(request);\n    }\n else {\n      log.warn(\"check transaction failed, channel is empty. groupId={}, requestHeader:{}\",group,requestHeader);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 922,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (messageExt != null) {\n  final String group=messageExt.getProperty(MessageConst.PROPERTY_PRODUCER_GROUP);\n  if (group != null) {\n    CheckTransactionStateRequestHeader requestHeader=(CheckTransactionStateRequestHeader)request.decodeCommandCustomHeader(CheckTransactionStateRequestHeader.class);\n    request.writeCustomHeader(requestHeader);\n    request.addExtField(ProxyUtils.BROKER_ADDR,RemotingUtil.socketAddress2String(ctx.channel().remoteAddress()));\n    Channel channel=this.producerManager.getAvailableChannel(group);\n    if (channel != null) {\n      channel.writeAndFlush(request);\n    }\n else {\n      log.warn(\"check transaction failed, channel is empty. groupId={}, requestHeader:{}\",group,requestHeader);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 85,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1131,
        "startLineNumber" : 57,
        "startColumnNumber" : 65,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final ByteBuffer byteBuffer=ByteBuffer.wrap(request.getBody());\n  final MessageExt messageExt=MessageDecoder.decode(byteBuffer,true,false,false);\n  if (messageExt != null) {\n    final String group=messageExt.getProperty(MessageConst.PROPERTY_PRODUCER_GROUP);\n    if (group != null) {\n      CheckTransactionStateRequestHeader requestHeader=(CheckTransactionStateRequestHeader)request.decodeCommandCustomHeader(CheckTransactionStateRequestHeader.class);\n      request.writeCustomHeader(requestHeader);\n      request.addExtField(ProxyUtils.BROKER_ADDR,RemotingUtil.socketAddress2String(ctx.channel().remoteAddress()));\n      Channel channel=this.producerManager.getAvailableChannel(group);\n      if (channel != null) {\n        channel.writeAndFlush(request);\n      }\n else {\n        log.warn(\"check transaction failed, channel is empty. groupId={}, requestHeader:{}\",group,requestHeader);\n      }\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1284,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public RemotingCommand checkTransactionState(ChannelHandlerContext ctx,RemotingCommand request) throws RemotingCommandException {\n  final ByteBuffer byteBuffer=ByteBuffer.wrap(request.getBody());\n  final MessageExt messageExt=MessageDecoder.decode(byteBuffer,true,false,false);\n  if (messageExt != null) {\n    final String group=messageExt.getProperty(MessageConst.PROPERTY_PRODUCER_GROUP);\n    if (group != null) {\n      CheckTransactionStateRequestHeader requestHeader=(CheckTransactionStateRequestHeader)request.decodeCommandCustomHeader(CheckTransactionStateRequestHeader.class);\n      request.writeCustomHeader(requestHeader);\n      request.addExtField(ProxyUtils.BROKER_ADDR,RemotingUtil.socketAddress2String(ctx.channel().remoteAddress()));\n      Channel channel=this.producerManager.getAvailableChannel(group);\n      if (channel != null) {\n        channel.writeAndFlush(request);\n      }\n else {\n        log.warn(\"check transaction failed, channel is empty. groupId={}, requestHeader:{}\",group,requestHeader);\n      }\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 130,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 61,
        "startColumnNumber" : 12,
        "endLineNumber" : 61,
        "endColumnNumber" : 94
      },
      "nodeContext" : "final String group=messageExt.getProperty(MessageConst.PROPERTY_PRODUCER_GROUP);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.rocketmq.common.message.MessageConst"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 61,
    "startColumnNumber" : 56,
    "endLineNumber" : 61,
    "endColumnNumber" : 68
  } ],
  "layoutRelationDataList" : [ ]
}