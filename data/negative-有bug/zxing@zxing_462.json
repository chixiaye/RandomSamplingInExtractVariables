{
  "id" : 462,
  "expression" : "\"0000000000\".substring(0,ps2Length)",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/main/java/com/google/zxing/maxicode/decoder/DecodedBitStreamParser.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"0000000000\".substring(0,ps2Length)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 99,
      "startColumnNumber" : 46,
      "endLineNumber" : 99,
      "endColumnNumber" : 82
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 99,
        "startColumnNumber" : 28,
        "endLineNumber" : 99,
        "endColumnNumber" : 83
      },
      "nodeContext" : "new DecimalFormat(\"0000000000\".substring(0,ps2Length))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 99,
        "startColumnNumber" : 23,
        "endLineNumber" : 99,
        "endColumnNumber" : 83
      },
      "nodeContext" : "df=new DecimalFormat(\"0000000000\".substring(0,ps2Length))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 99,
        "startColumnNumber" : 10,
        "endLineNumber" : 99,
        "endColumnNumber" : 84
      },
      "nodeContext" : "NumberFormat df=new DecimalFormat(\"0000000000\".substring(0,ps2Length));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 332,
        "startLineNumber" : 93,
        "startColumnNumber" : 23,
        "endLineNumber" : 101,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int pc=getPostCode2(bytes);\n  int ps2Length=getPostCode2Length(bytes);\n  if (ps2Length > 10) {\n    throw FormatException.getFormatInstance();\n  }\n  NumberFormat df=new DecimalFormat(\"0000000000\".substring(0,ps2Length));\n  postcode=df.format(pc);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 408,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 103,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mode == 2) {\n  int pc=getPostCode2(bytes);\n  int ps2Length=getPostCode2Length(bytes);\n  if (ps2Length > 10) {\n    throw FormatException.getFormatInstance();\n  }\n  NumberFormat df=new DecimalFormat(\"0000000000\".substring(0,ps2Length));\n  postcode=df.format(pc);\n}\n else {\n  postcode=getPostCode3(bytes);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1168,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 120,
        "endColumnNumber" : 5
      },
      "nodeContext" : "switch (mode) {\ncase 2:case 3:  String postcode;\nif (mode == 2) {\n  int pc=getPostCode2(bytes);\n  int ps2Length=getPostCode2Length(bytes);\n  if (ps2Length > 10) {\n    throw FormatException.getFormatInstance();\n  }\n  NumberFormat df=new DecimalFormat(\"0000000000\".substring(0,ps2Length));\n  postcode=df.format(pc);\n}\n else {\n  postcode=getPostCode3(bytes);\n}\nNumberFormat threeDigits=new DecimalFormat(\"000\");\nString country=threeDigits.format(getCountry(bytes));\nString service=threeDigits.format(getServiceClass(bytes));\nresult.append(getMessage(bytes,10,84));\nif (result.toString().startsWith(\"[)>\" + RS + \"01\"+ GS)) {\nresult.insert(9,postcode + GS + country+ GS+ service+ GS);\n}\n else {\nresult.insert(0,postcode + GS + country+ GS+ service+ GS);\n}\nbreak;\ncase 4:result.append(getMessage(bytes,1,93));\nbreak;\ncase 5:result.append(getMessage(bytes,1,77));\nbreak;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 168,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1317,
        "startLineNumber" : 87,
        "startColumnNumber" : 77,
        "endLineNumber" : 122,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  StringBuilder result=new StringBuilder(144);\nswitch (mode) {\ncase 2:case 3:    String postcode;\n  if (mode == 2) {\n    int pc=getPostCode2(bytes);\n    int ps2Length=getPostCode2Length(bytes);\n    if (ps2Length > 10) {\n      throw FormatException.getFormatInstance();\n    }\n    NumberFormat df=new DecimalFormat(\"0000000000\".substring(0,ps2Length));\n    postcode=df.format(pc);\n  }\n else {\n    postcode=getPostCode3(bytes);\n  }\nNumberFormat threeDigits=new DecimalFormat(\"000\");\nString country=threeDigits.format(getCountry(bytes));\nString service=threeDigits.format(getServiceClass(bytes));\nresult.append(getMessage(bytes,10,84));\nif (result.toString().startsWith(\"[)>\" + RS + \"01\"+ GS)) {\nresult.insert(9,postcode + GS + country+ GS+ service+ GS);\n}\n else {\nresult.insert(0,postcode + GS + country+ GS+ service+ GS);\n}\nbreak;\ncase 4:result.append(getMessage(bytes,1,93));\nbreak;\ncase 5:result.append(getMessage(bytes,1,77));\nbreak;\n}\nreturn new DecoderResult(bytes,result.toString(),null,String.valueOf(mode));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 191,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1392,
        "startLineNumber" : 87,
        "startColumnNumber" : 2,
        "endLineNumber" : 122,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static DecoderResult decode(byte[] bytes,int mode) throws FormatException {\n  StringBuilder result=new StringBuilder(144);\nswitch (mode) {\ncase 2:case 3:    String postcode;\n  if (mode == 2) {\n    int pc=getPostCode2(bytes);\n    int ps2Length=getPostCode2Length(bytes);\n    if (ps2Length > 10) {\n      throw FormatException.getFormatInstance();\n    }\n    NumberFormat df=new DecimalFormat(\"0000000000\".substring(0,ps2Length));\n    postcode=df.format(pc);\n  }\n else {\n    postcode=getPostCode3(bytes);\n  }\nNumberFormat threeDigits=new DecimalFormat(\"000\");\nString country=threeDigits.format(getCountry(bytes));\nString service=threeDigits.format(getServiceClass(bytes));\nresult.append(getMessage(bytes,10,84));\nif (result.toString().startsWith(\"[)>\" + RS + \"01\"+ GS)) {\nresult.insert(9,postcode + GS + country+ GS+ service+ GS);\n}\n else {\nresult.insert(0,postcode + GS + country+ GS+ service+ GS);\n}\nbreak;\ncase 4:result.append(getMessage(bytes,1,93));\nbreak;\ncase 5:result.append(getMessage(bytes,1,77));\nbreak;\n}\nreturn new DecoderResult(bytes,result.toString(),null,String.valueOf(mode));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 206,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 99,
        "startColumnNumber" : 10,
        "endLineNumber" : 99,
        "endColumnNumber" : 84
      },
      "nodeContext" : "NumberFormat df=new DecimalFormat(\"0000000000\".substring(0,ps2Length));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 36,
    "startLineNumber" : 99,
    "startColumnNumber" : 46,
    "endLineNumber" : 99,
    "endColumnNumber" : 82
  } ],
  "layoutRelationDataList" : [ ]
}