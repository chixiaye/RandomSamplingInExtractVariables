{
  "id" : 484,
  "expression" : "\"a2,2,p1\\n\"",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-connectors/flink-connector-files/src/test/java/org/apache/flink/connector/file/table/FileSystemOutputFormatTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"a2,2,p1\\n\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 101,
      "startColumnNumber" : 30,
      "endLineNumber" : 101,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 101,
        "startColumnNumber" : 16,
        "endLineNumber" : 101,
        "endColumnNumber" : 69
      },
      "nodeContext" : "\"a1,1,p1\\n\" + \"a2,2,p1\\n\" + \"a2,2,p2\\n\"+ \"a3,3,p1\\n\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 102,
        "endColumnNumber" : 51
      },
      "nodeContext" : "assertEquals(\"a1,1,p1\\n\" + \"a2,2,p1\\n\" + \"a2,2,p2\\n\"+ \"a3,3,p1\\n\",content.values().iterator().next())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 102,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertEquals(\"a1,1,p1\\n\" + \"a2,2,p1\\n\" + \"a2,2,p2\\n\"+ \"a3,3,p1\\n\",content.values().iterator().next());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 664,
        "startLineNumber" : 89,
        "startColumnNumber" : 52,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  AtomicReference<FileSystemOutputFormat<Row>> ref=new AtomicReference<>();\n  try (OneInputStreamOperatorTestHarness<Row,Object> testHarness=createSink(false,false,false,new LinkedHashMap<>(),ref)){\n    writeUnorderedRecords(testHarness);\n    assertEquals(1,getFileContentByPath(tmpFile).size());\n  }\n   ref.get().finalizeGlobal(1);\n  Map<File,String> content=getFileContentByPath(outputFile);\n  assertEquals(1,content.size());\n  assertEquals(\"a1,1,p1\\n\" + \"a2,2,p1\\n\" + \"a2,2,p2\\n\"+ \"a3,3,p1\\n\",content.values().iterator().next());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 722,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testNonPartition() throws Exception {\n  AtomicReference<FileSystemOutputFormat<Row>> ref=new AtomicReference<>();\n  try (OneInputStreamOperatorTestHarness<Row,Object> testHarness=createSink(false,false,false,new LinkedHashMap<>(),ref)){\n    writeUnorderedRecords(testHarness);\n    assertEquals(1,getFileContentByPath(tmpFile).size());\n  }\n   ref.get().finalizeGlobal(1);\n  Map<File,String> content=getFileContentByPath(outputFile);\n  assertEquals(1,content.size());\n  assertEquals(\"a1,1,p1\\n\" + \"a2,2,p1\\n\" + \"a2,2,p2\\n\"+ \"a3,3,p1\\n\",content.values().iterator().next());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 101,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 101,
        "startColumnNumber" : 16,
        "endLineNumber" : 101,
        "endColumnNumber" : 69
      },
      "nodeContext" : "\"a1,1,p1\\n\" + \"a2,2,p1\\n\" + \"a2,2,p2\\n\"+ \"a3,3,p1\\n\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 2
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 101,
    "startColumnNumber" : 30,
    "endLineNumber" : 101,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}