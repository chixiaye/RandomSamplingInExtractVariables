{
  "id" : 250,
  "expression" : "(ProducerBuilderImpl<?>)client.newProducer().blockIfQueueFull(true).enableBatching(true).batchingMaxPublishDelay(1,TimeUnit.MILLISECONDS)",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-functions/instance/src/main/java/org/apache/pulsar/functions/instance/ContextImpl.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(ProducerBuilderImpl<?>)client.newProducer().blockIfQueueFull(true).enableBatching(true).batchingMaxPublishDelay(1,TimeUnit.MILLISECONDS)",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 156,
      "startLineNumber" : 143,
      "startColumnNumber" : 31,
      "endLineNumber" : 144,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 20,
    "astHeight" : 6,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 179,
        "startLineNumber" : 143,
        "startColumnNumber" : 8,
        "endLineNumber" : 144,
        "endColumnNumber" : 66
      },
      "nodeContext" : "this.producerBuilder=(ProducerBuilderImpl<?>)client.newProducer().blockIfQueueFull(true).enableBatching(true).batchingMaxPublishDelay(1,TimeUnit.MILLISECONDS)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 180,
        "startLineNumber" : 143,
        "startColumnNumber" : 8,
        "endLineNumber" : 144,
        "endColumnNumber" : 67
      },
      "nodeContext" : "this.producerBuilder=(ProducerBuilderImpl<?>)client.newProducer().blockIfQueueFull(true).enableBatching(true).batchingMaxPublishDelay(1,TimeUnit.MILLISECONDS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4184,
        "startLineNumber" : 135,
        "startColumnNumber" : 75,
        "endLineNumber" : 224,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.config=config;\n  this.logger=logger;\n  this.client=client;\n  this.pulsarAdmin=pulsarAdmin;\n  this.topicSchema=new TopicSchema(client);\n  this.statsManager=statsManager;\n  this.producerBuilder=(ProducerBuilderImpl<?>)client.newProducer().blockIfQueueFull(true).enableBatching(true).batchingMaxPublishDelay(1,TimeUnit.MILLISECONDS);\n  boolean useThreadLocalProducers=false;\n  if (config.getFunctionDetails().getSink().getProducerSpec() != null) {\n    if (config.getFunctionDetails().getSink().getProducerSpec().getMaxPendingMessages() != 0) {\n      this.producerBuilder.maxPendingMessages(config.getFunctionDetails().getSink().getProducerSpec().getMaxPendingMessages());\n    }\n    if (config.getFunctionDetails().getSink().getProducerSpec().getMaxPendingMessagesAcrossPartitions() != 0) {\n      this.producerBuilder.maxPendingMessagesAcrossPartitions(config.getFunctionDetails().getSink().getProducerSpec().getMaxPendingMessagesAcrossPartitions());\n    }\n    useThreadLocalProducers=config.getFunctionDetails().getSink().getProducerSpec().getUseThreadLocalProducers();\n  }\n  if (useThreadLocalProducers) {\n    tlPublishProducers=new ThreadLocal<>();\n  }\n else {\n    publishProducers=new HashMap<>();\n  }\n  if (config.getFunctionDetails().getUserConfig().isEmpty()) {\n    userConfigs=new HashMap<>();\n  }\n else {\n    userConfigs=new Gson().fromJson(config.getFunctionDetails().getUserConfig(),new TypeToken<Map<String,Object>>(){\n    }\n.getType());\n  }\n  this.secretsProvider=secretsProvider;\n  if (!StringUtils.isEmpty(config.getFunctionDetails().getSecretsMap())) {\n    secretsMap=new Gson().fromJson(config.getFunctionDetails().getSecretsMap(),new TypeToken<Map<String,Object>>(){\n    }\n.getType());\n  }\n else {\n    secretsMap=new HashMap<>();\n  }\n  this.metricsLabels=metricsLabels;\n  String prefix;\nswitch (componentType) {\ncase FUNCTION:    prefix=FunctionStatsManager.PULSAR_FUNCTION_METRICS_PREFIX;\n  break;\ncase SINK:prefix=SinkStatsManager.PULSAR_SINK_METRICS_PREFIX;\nbreak;\ncase SOURCE:prefix=SourceStatsManager.PULSAR_SOURCE_METRICS_PREFIX;\nbreak;\ndefault:throw new RuntimeException(\"Unknown component type: \" + componentType);\n}\nthis.userMetricsSummary=collectorRegistry.registerIfNotExist(prefix + ComponentStatsManager.USER_METRIC_PREFIX,Summary.build().name(prefix + ComponentStatsManager.USER_METRIC_PREFIX).help(\"User defined metric.\").labelNames(userMetricsLabelNames).quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).create());\nthis.componentType=componentType;\nthis.stateManager=stateManager;\nthis.defaultStateStore=(DefaultStateStore)stateManager.getStore(config.getFunctionDetails().getTenant(),config.getFunctionDetails().getNamespace(),config.getFunctionDetails().getName());\nthis.exposePulsarAdminClientEnabled=config.isExposePulsarAdminClientEnabled();\nFunction.SourceSpec sourceSpec=config.getFunctionDetails().getSource();\nswitch (sourceSpec.getSubscriptionType()) {\ncase FAILOVER:subscriptionType=SubscriptionType.Failover;\nbreak;\ncase KEY_SHARED:subscriptionType=SubscriptionType.Key_Shared;\nbreak;\ndefault:subscriptionType=SubscriptionType.Shared;\nbreak;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 446,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4575,
        "startLineNumber" : 132,
        "startColumnNumber" : 4,
        "endLineNumber" : 224,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public ContextImpl(InstanceConfig config,Logger logger,PulsarClient client,SecretsProvider secretsProvider,FunctionCollectorRegistry collectorRegistry,String[] metricsLabels,Function.FunctionDetails.ComponentType componentType,ComponentStatsManager statsManager,StateManager stateManager,PulsarAdmin pulsarAdmin){\n  this.config=config;\n  this.logger=logger;\n  this.client=client;\n  this.pulsarAdmin=pulsarAdmin;\n  this.topicSchema=new TopicSchema(client);\n  this.statsManager=statsManager;\n  this.producerBuilder=(ProducerBuilderImpl<?>)client.newProducer().blockIfQueueFull(true).enableBatching(true).batchingMaxPublishDelay(1,TimeUnit.MILLISECONDS);\n  boolean useThreadLocalProducers=false;\n  if (config.getFunctionDetails().getSink().getProducerSpec() != null) {\n    if (config.getFunctionDetails().getSink().getProducerSpec().getMaxPendingMessages() != 0) {\n      this.producerBuilder.maxPendingMessages(config.getFunctionDetails().getSink().getProducerSpec().getMaxPendingMessages());\n    }\n    if (config.getFunctionDetails().getSink().getProducerSpec().getMaxPendingMessagesAcrossPartitions() != 0) {\n      this.producerBuilder.maxPendingMessagesAcrossPartitions(config.getFunctionDetails().getSink().getProducerSpec().getMaxPendingMessagesAcrossPartitions());\n    }\n    useThreadLocalProducers=config.getFunctionDetails().getSink().getProducerSpec().getUseThreadLocalProducers();\n  }\n  if (useThreadLocalProducers) {\n    tlPublishProducers=new ThreadLocal<>();\n  }\n else {\n    publishProducers=new HashMap<>();\n  }\n  if (config.getFunctionDetails().getUserConfig().isEmpty()) {\n    userConfigs=new HashMap<>();\n  }\n else {\n    userConfigs=new Gson().fromJson(config.getFunctionDetails().getUserConfig(),new TypeToken<Map<String,Object>>(){\n    }\n.getType());\n  }\n  this.secretsProvider=secretsProvider;\n  if (!StringUtils.isEmpty(config.getFunctionDetails().getSecretsMap())) {\n    secretsMap=new Gson().fromJson(config.getFunctionDetails().getSecretsMap(),new TypeToken<Map<String,Object>>(){\n    }\n.getType());\n  }\n else {\n    secretsMap=new HashMap<>();\n  }\n  this.metricsLabels=metricsLabels;\n  String prefix;\nswitch (componentType) {\ncase FUNCTION:    prefix=FunctionStatsManager.PULSAR_FUNCTION_METRICS_PREFIX;\n  break;\ncase SINK:prefix=SinkStatsManager.PULSAR_SINK_METRICS_PREFIX;\nbreak;\ncase SOURCE:prefix=SourceStatsManager.PULSAR_SOURCE_METRICS_PREFIX;\nbreak;\ndefault:throw new RuntimeException(\"Unknown component type: \" + componentType);\n}\nthis.userMetricsSummary=collectorRegistry.registerIfNotExist(prefix + ComponentStatsManager.USER_METRIC_PREFIX,Summary.build().name(prefix + ComponentStatsManager.USER_METRIC_PREFIX).help(\"User defined metric.\").labelNames(userMetricsLabelNames).quantile(0.5,0.01).quantile(0.9,0.01).quantile(0.99,0.01).quantile(0.999,0.01).create());\nthis.componentType=componentType;\nthis.stateManager=stateManager;\nthis.defaultStateStore=(DefaultStateStore)stateManager.getStore(config.getFunctionDetails().getTenant(),config.getFunctionDetails().getNamespace(),config.getFunctionDetails().getName());\nthis.exposePulsarAdminClientEnabled=config.isExposePulsarAdminClientEnabled();\nFunction.SourceSpec sourceSpec=config.getFunctionDetails().getSource();\nswitch (sourceSpec.getSubscriptionType()) {\ncase FAILOVER:subscriptionType=SubscriptionType.Failover;\nbreak;\ncase KEY_SHARED:subscriptionType=SubscriptionType.Key_Shared;\nbreak;\ndefault:subscriptionType=SubscriptionType.Shared;\nbreak;\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 495,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 180,
        "startLineNumber" : 143,
        "startColumnNumber" : 8,
        "endLineNumber" : 144,
        "endColumnNumber" : 67
      },
      "nodeContext" : "this.producerBuilder=(ProducerBuilderImpl<?>)client.newProducer().blockIfQueueFull(true).enableBatching(true).batchingMaxPublishDelay(1,TimeUnit.MILLISECONDS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 8
    },
    "tokenLength" : 12,
    "type" : "org.apache.pulsar.client.impl.ProducerBuilderImpl<>"
  } ],
  "positionList" : [ {
    "charLength" : 156,
    "startLineNumber" : 143,
    "startColumnNumber" : 31,
    "endLineNumber" : 144,
    "endColumnNumber" : 66
  } ],
  "layoutRelationDataList" : [ ]
}