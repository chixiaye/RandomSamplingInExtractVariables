{
  "id" : 106,
  "expression" : "System",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/example/src/main/java/io/netty/example/spdy/client/HttpResponseClientHandler.java",
  "occurrences" : 10,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "System",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 45,
      "startColumnNumber" : 12,
      "endLineNumber" : 45,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 45,
        "startColumnNumber" : 12,
        "endLineNumber" : 45,
        "endColumnNumber" : 22
      },
      "nodeContext" : "System.out",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 45,
        "startColumnNumber" : 12,
        "endLineNumber" : 45,
        "endColumnNumber" : 62
      },
      "nodeContext" : "System.out.println(\"STATUS: \" + response.status())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 45,
        "startColumnNumber" : 12,
        "endLineNumber" : 45,
        "endColumnNumber" : 63
      },
      "nodeContext" : "System.out.println(\"STATUS: \" + response.status());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 840,
        "startLineNumber" : 42,
        "startColumnNumber" : 41,
        "endLineNumber" : 63,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HttpResponse response=(HttpResponse)msg;\n  System.out.println(\"STATUS: \" + response.status());\n  System.out.println(\"VERSION: \" + response.protocolVersion());\n  System.out.println();\n  if (!response.headers().isEmpty()) {\n    for (    CharSequence name : response.headers().names()) {\n      for (      CharSequence value : response.headers().getAll(name)) {\n        System.out.println(\"HEADER: \" + name + \" = \"+ value);\n      }\n    }\n    System.out.println();\n  }\n  if (HttpUtil.isTransferEncodingChunked(response)) {\n    System.out.println(\"CHUNKED CONTENT {\");\n  }\n else {\n    System.out.println(\"CONTENT {\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 873,
        "startLineNumber" : 42,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (msg instanceof HttpResponse) {\n  HttpResponse response=(HttpResponse)msg;\n  System.out.println(\"STATUS: \" + response.status());\n  System.out.println(\"VERSION: \" + response.protocolVersion());\n  System.out.println();\n  if (!response.headers().isEmpty()) {\n    for (    CharSequence name : response.headers().names()) {\n      for (      CharSequence value : response.headers().getAll(name)) {\n        System.out.println(\"HEADER: \" + name + \" = \"+ value);\n      }\n    }\n    System.out.println();\n  }\n  if (HttpUtil.isTransferEncodingChunked(response)) {\n    System.out.println(\"CHUNKED CONTENT {\");\n  }\n else {\n    System.out.println(\"CONTENT {\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 112,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1305,
        "startLineNumber" : 41,
        "startColumnNumber" : 89,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (msg instanceof HttpResponse) {\n    HttpResponse response=(HttpResponse)msg;\n    System.out.println(\"STATUS: \" + response.status());\n    System.out.println(\"VERSION: \" + response.protocolVersion());\n    System.out.println();\n    if (!response.headers().isEmpty()) {\n      for (      CharSequence name : response.headers().names()) {\n        for (        CharSequence value : response.headers().getAll(name)) {\n          System.out.println(\"HEADER: \" + name + \" = \"+ value);\n        }\n      }\n      System.out.println();\n    }\n    if (HttpUtil.isTransferEncodingChunked(response)) {\n      System.out.println(\"CHUNKED CONTENT {\");\n    }\n else {\n      System.out.println(\"CONTENT {\");\n    }\n  }\n  if (msg instanceof HttpContent) {\n    HttpContent content=(HttpContent)msg;\n    System.out.print(content.content().toString(CharsetUtil.UTF_8));\n    System.out.flush();\n    if (content instanceof LastHttpContent) {\n      System.out.println(\"} END OF CONTENT\");\n      queue.add(ctx.channel().newSucceededFuture());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1405,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void channelRead0(ChannelHandlerContext ctx,HttpObject msg) throws Exception {\n  if (msg instanceof HttpResponse) {\n    HttpResponse response=(HttpResponse)msg;\n    System.out.println(\"STATUS: \" + response.status());\n    System.out.println(\"VERSION: \" + response.protocolVersion());\n    System.out.println();\n    if (!response.headers().isEmpty()) {\n      for (      CharSequence name : response.headers().names()) {\n        for (        CharSequence value : response.headers().getAll(name)) {\n          System.out.println(\"HEADER: \" + name + \" = \"+ value);\n        }\n      }\n      System.out.println();\n    }\n    if (HttpUtil.isTransferEncodingChunked(response)) {\n      System.out.println(\"CHUNKED CONTENT {\");\n    }\n else {\n      System.out.println(\"CONTENT {\");\n    }\n  }\n  if (msg instanceof HttpContent) {\n    HttpContent content=(HttpContent)msg;\n    System.out.print(content.content().toString(CharsetUtil.UTF_8));\n    System.out.flush();\n    if (content instanceof LastHttpContent) {\n      System.out.println(\"} END OF CONTENT\");\n      queue.add(ctx.channel().newSucceededFuture());\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 186,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 45,
        "startColumnNumber" : 12,
        "endLineNumber" : 45,
        "endColumnNumber" : 63
      },
      "nodeContext" : "System.out.println(\"STATUS: \" + response.status());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.System"
  }, {
    "nodeContext" : "System",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 46,
      "startColumnNumber" : 12,
      "endLineNumber" : 46,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 22
      },
      "nodeContext" : "System.out",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 72
      },
      "nodeContext" : "System.out.println(\"VERSION: \" + response.protocolVersion())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 73
      },
      "nodeContext" : "System.out.println(\"VERSION: \" + response.protocolVersion());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 840,
        "startLineNumber" : 42,
        "startColumnNumber" : 41,
        "endLineNumber" : 63,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HttpResponse response=(HttpResponse)msg;\n  System.out.println(\"STATUS: \" + response.status());\n  System.out.println(\"VERSION: \" + response.protocolVersion());\n  System.out.println();\n  if (!response.headers().isEmpty()) {\n    for (    CharSequence name : response.headers().names()) {\n      for (      CharSequence value : response.headers().getAll(name)) {\n        System.out.println(\"HEADER: \" + name + \" = \"+ value);\n      }\n    }\n    System.out.println();\n  }\n  if (HttpUtil.isTransferEncodingChunked(response)) {\n    System.out.println(\"CHUNKED CONTENT {\");\n  }\n else {\n    System.out.println(\"CONTENT {\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 873,
        "startLineNumber" : 42,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (msg instanceof HttpResponse) {\n  HttpResponse response=(HttpResponse)msg;\n  System.out.println(\"STATUS: \" + response.status());\n  System.out.println(\"VERSION: \" + response.protocolVersion());\n  System.out.println();\n  if (!response.headers().isEmpty()) {\n    for (    CharSequence name : response.headers().names()) {\n      for (      CharSequence value : response.headers().getAll(name)) {\n        System.out.println(\"HEADER: \" + name + \" = \"+ value);\n      }\n    }\n    System.out.println();\n  }\n  if (HttpUtil.isTransferEncodingChunked(response)) {\n    System.out.println(\"CHUNKED CONTENT {\");\n  }\n else {\n    System.out.println(\"CONTENT {\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 112,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1305,
        "startLineNumber" : 41,
        "startColumnNumber" : 89,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (msg instanceof HttpResponse) {\n    HttpResponse response=(HttpResponse)msg;\n    System.out.println(\"STATUS: \" + response.status());\n    System.out.println(\"VERSION: \" + response.protocolVersion());\n    System.out.println();\n    if (!response.headers().isEmpty()) {\n      for (      CharSequence name : response.headers().names()) {\n        for (        CharSequence value : response.headers().getAll(name)) {\n          System.out.println(\"HEADER: \" + name + \" = \"+ value);\n        }\n      }\n      System.out.println();\n    }\n    if (HttpUtil.isTransferEncodingChunked(response)) {\n      System.out.println(\"CHUNKED CONTENT {\");\n    }\n else {\n      System.out.println(\"CONTENT {\");\n    }\n  }\n  if (msg instanceof HttpContent) {\n    HttpContent content=(HttpContent)msg;\n    System.out.print(content.content().toString(CharsetUtil.UTF_8));\n    System.out.flush();\n    if (content instanceof LastHttpContent) {\n      System.out.println(\"} END OF CONTENT\");\n      queue.add(ctx.channel().newSucceededFuture());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1405,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void channelRead0(ChannelHandlerContext ctx,HttpObject msg) throws Exception {\n  if (msg instanceof HttpResponse) {\n    HttpResponse response=(HttpResponse)msg;\n    System.out.println(\"STATUS: \" + response.status());\n    System.out.println(\"VERSION: \" + response.protocolVersion());\n    System.out.println();\n    if (!response.headers().isEmpty()) {\n      for (      CharSequence name : response.headers().names()) {\n        for (        CharSequence value : response.headers().getAll(name)) {\n          System.out.println(\"HEADER: \" + name + \" = \"+ value);\n        }\n      }\n      System.out.println();\n    }\n    if (HttpUtil.isTransferEncodingChunked(response)) {\n      System.out.println(\"CHUNKED CONTENT {\");\n    }\n else {\n      System.out.println(\"CONTENT {\");\n    }\n  }\n  if (msg instanceof HttpContent) {\n    HttpContent content=(HttpContent)msg;\n    System.out.print(content.content().toString(CharsetUtil.UTF_8));\n    System.out.flush();\n    if (content instanceof LastHttpContent) {\n      System.out.println(\"} END OF CONTENT\");\n      queue.add(ctx.channel().newSucceededFuture());\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 186,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 73
      },
      "nodeContext" : "System.out.println(\"VERSION: \" + response.protocolVersion());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.System"
  }, {
    "nodeContext" : "System",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 47,
      "startColumnNumber" : 12,
      "endLineNumber" : 47,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 47,
        "endColumnNumber" : 22
      },
      "nodeContext" : "System.out",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 47,
        "endColumnNumber" : 32
      },
      "nodeContext" : "System.out.println()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 47,
        "endColumnNumber" : 33
      },
      "nodeContext" : "System.out.println();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 840,
        "startLineNumber" : 42,
        "startColumnNumber" : 41,
        "endLineNumber" : 63,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HttpResponse response=(HttpResponse)msg;\n  System.out.println(\"STATUS: \" + response.status());\n  System.out.println(\"VERSION: \" + response.protocolVersion());\n  System.out.println();\n  if (!response.headers().isEmpty()) {\n    for (    CharSequence name : response.headers().names()) {\n      for (      CharSequence value : response.headers().getAll(name)) {\n        System.out.println(\"HEADER: \" + name + \" = \"+ value);\n      }\n    }\n    System.out.println();\n  }\n  if (HttpUtil.isTransferEncodingChunked(response)) {\n    System.out.println(\"CHUNKED CONTENT {\");\n  }\n else {\n    System.out.println(\"CONTENT {\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 873,
        "startLineNumber" : 42,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (msg instanceof HttpResponse) {\n  HttpResponse response=(HttpResponse)msg;\n  System.out.println(\"STATUS: \" + response.status());\n  System.out.println(\"VERSION: \" + response.protocolVersion());\n  System.out.println();\n  if (!response.headers().isEmpty()) {\n    for (    CharSequence name : response.headers().names()) {\n      for (      CharSequence value : response.headers().getAll(name)) {\n        System.out.println(\"HEADER: \" + name + \" = \"+ value);\n      }\n    }\n    System.out.println();\n  }\n  if (HttpUtil.isTransferEncodingChunked(response)) {\n    System.out.println(\"CHUNKED CONTENT {\");\n  }\n else {\n    System.out.println(\"CONTENT {\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 112,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1305,
        "startLineNumber" : 41,
        "startColumnNumber" : 89,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (msg instanceof HttpResponse) {\n    HttpResponse response=(HttpResponse)msg;\n    System.out.println(\"STATUS: \" + response.status());\n    System.out.println(\"VERSION: \" + response.protocolVersion());\n    System.out.println();\n    if (!response.headers().isEmpty()) {\n      for (      CharSequence name : response.headers().names()) {\n        for (        CharSequence value : response.headers().getAll(name)) {\n          System.out.println(\"HEADER: \" + name + \" = \"+ value);\n        }\n      }\n      System.out.println();\n    }\n    if (HttpUtil.isTransferEncodingChunked(response)) {\n      System.out.println(\"CHUNKED CONTENT {\");\n    }\n else {\n      System.out.println(\"CONTENT {\");\n    }\n  }\n  if (msg instanceof HttpContent) {\n    HttpContent content=(HttpContent)msg;\n    System.out.print(content.content().toString(CharsetUtil.UTF_8));\n    System.out.flush();\n    if (content instanceof LastHttpContent) {\n      System.out.println(\"} END OF CONTENT\");\n      queue.add(ctx.channel().newSucceededFuture());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1405,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void channelRead0(ChannelHandlerContext ctx,HttpObject msg) throws Exception {\n  if (msg instanceof HttpResponse) {\n    HttpResponse response=(HttpResponse)msg;\n    System.out.println(\"STATUS: \" + response.status());\n    System.out.println(\"VERSION: \" + response.protocolVersion());\n    System.out.println();\n    if (!response.headers().isEmpty()) {\n      for (      CharSequence name : response.headers().names()) {\n        for (        CharSequence value : response.headers().getAll(name)) {\n          System.out.println(\"HEADER: \" + name + \" = \"+ value);\n        }\n      }\n      System.out.println();\n    }\n    if (HttpUtil.isTransferEncodingChunked(response)) {\n      System.out.println(\"CHUNKED CONTENT {\");\n    }\n else {\n      System.out.println(\"CONTENT {\");\n    }\n  }\n  if (msg instanceof HttpContent) {\n    HttpContent content=(HttpContent)msg;\n    System.out.print(content.content().toString(CharsetUtil.UTF_8));\n    System.out.flush();\n    if (content instanceof LastHttpContent) {\n      System.out.println(\"} END OF CONTENT\");\n      queue.add(ctx.channel().newSucceededFuture());\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 186,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 47,
        "endColumnNumber" : 33
      },
      "nodeContext" : "System.out.println();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.System"
  }, {
    "nodeContext" : "System",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 52,
      "startColumnNumber" : 24,
      "endLineNumber" : 52,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 52,
        "startColumnNumber" : 24,
        "endLineNumber" : 52,
        "endColumnNumber" : 34
      },
      "nodeContext" : "System.out",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 52,
        "startColumnNumber" : 24,
        "endLineNumber" : 52,
        "endColumnNumber" : 77
      },
      "nodeContext" : "System.out.println(\"HEADER: \" + name + \" = \"+ value)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 52,
        "startColumnNumber" : 24,
        "endLineNumber" : 52,
        "endColumnNumber" : 78
      },
      "nodeContext" : "System.out.println(\"HEADER: \" + name + \" = \"+ value);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 51,
        "startColumnNumber" : 79,
        "endLineNumber" : 53,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  System.out.println(\"HEADER: \" + name + \" = \"+ value);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 51,
        "startColumnNumber" : 20,
        "endLineNumber" : 53,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (CharSequence value : response.headers().getAll(name)) {\n  System.out.println(\"HEADER: \" + name + \" = \"+ value);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 205,
        "startLineNumber" : 50,
        "startColumnNumber" : 69,
        "endLineNumber" : 54,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  for (  CharSequence value : response.headers().getAll(name)) {\n    System.out.println(\"HEADER: \" + name + \" = \"+ value);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 258,
        "startLineNumber" : 50,
        "startColumnNumber" : 16,
        "endLineNumber" : 54,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (CharSequence name : response.headers().names()) {\n  for (  CharSequence value : response.headers().getAll(name)) {\n    System.out.println(\"HEADER: \" + name + \" = \"+ value);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 34,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 331,
        "startLineNumber" : 49,
        "startColumnNumber" : 47,
        "endLineNumber" : 56,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  for (  CharSequence name : response.headers().names()) {\n    for (    CharSequence value : response.headers().getAll(name)) {\n      System.out.println(\"HEADER: \" + name + \" = \"+ value);\n    }\n  }\n  System.out.println();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 366,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 56,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!response.headers().isEmpty()) {\n  for (  CharSequence name : response.headers().names()) {\n    for (    CharSequence value : response.headers().getAll(name)) {\n      System.out.println(\"HEADER: \" + name + \" = \"+ value);\n    }\n  }\n  System.out.println();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 48,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 840,
        "startLineNumber" : 42,
        "startColumnNumber" : 41,
        "endLineNumber" : 63,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HttpResponse response=(HttpResponse)msg;\n  System.out.println(\"STATUS: \" + response.status());\n  System.out.println(\"VERSION: \" + response.protocolVersion());\n  System.out.println();\n  if (!response.headers().isEmpty()) {\n    for (    CharSequence name : response.headers().names()) {\n      for (      CharSequence value : response.headers().getAll(name)) {\n        System.out.println(\"HEADER: \" + name + \" = \"+ value);\n      }\n    }\n    System.out.println();\n  }\n  if (HttpUtil.isTransferEncodingChunked(response)) {\n    System.out.println(\"CHUNKED CONTENT {\");\n  }\n else {\n    System.out.println(\"CONTENT {\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 873,
        "startLineNumber" : 42,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (msg instanceof HttpResponse) {\n  HttpResponse response=(HttpResponse)msg;\n  System.out.println(\"STATUS: \" + response.status());\n  System.out.println(\"VERSION: \" + response.protocolVersion());\n  System.out.println();\n  if (!response.headers().isEmpty()) {\n    for (    CharSequence name : response.headers().names()) {\n      for (      CharSequence value : response.headers().getAll(name)) {\n        System.out.println(\"HEADER: \" + name + \" = \"+ value);\n      }\n    }\n    System.out.println();\n  }\n  if (HttpUtil.isTransferEncodingChunked(response)) {\n    System.out.println(\"CHUNKED CONTENT {\");\n  }\n else {\n    System.out.println(\"CONTENT {\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 112,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1305,
        "startLineNumber" : 41,
        "startColumnNumber" : 89,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (msg instanceof HttpResponse) {\n    HttpResponse response=(HttpResponse)msg;\n    System.out.println(\"STATUS: \" + response.status());\n    System.out.println(\"VERSION: \" + response.protocolVersion());\n    System.out.println();\n    if (!response.headers().isEmpty()) {\n      for (      CharSequence name : response.headers().names()) {\n        for (        CharSequence value : response.headers().getAll(name)) {\n          System.out.println(\"HEADER: \" + name + \" = \"+ value);\n        }\n      }\n      System.out.println();\n    }\n    if (HttpUtil.isTransferEncodingChunked(response)) {\n      System.out.println(\"CHUNKED CONTENT {\");\n    }\n else {\n      System.out.println(\"CONTENT {\");\n    }\n  }\n  if (msg instanceof HttpContent) {\n    HttpContent content=(HttpContent)msg;\n    System.out.print(content.content().toString(CharsetUtil.UTF_8));\n    System.out.flush();\n    if (content instanceof LastHttpContent) {\n      System.out.println(\"} END OF CONTENT\");\n      queue.add(ctx.channel().newSucceededFuture());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1405,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void channelRead0(ChannelHandlerContext ctx,HttpObject msg) throws Exception {\n  if (msg instanceof HttpResponse) {\n    HttpResponse response=(HttpResponse)msg;\n    System.out.println(\"STATUS: \" + response.status());\n    System.out.println(\"VERSION: \" + response.protocolVersion());\n    System.out.println();\n    if (!response.headers().isEmpty()) {\n      for (      CharSequence name : response.headers().names()) {\n        for (        CharSequence value : response.headers().getAll(name)) {\n          System.out.println(\"HEADER: \" + name + \" = \"+ value);\n        }\n      }\n      System.out.println();\n    }\n    if (HttpUtil.isTransferEncodingChunked(response)) {\n      System.out.println(\"CHUNKED CONTENT {\");\n    }\n else {\n      System.out.println(\"CONTENT {\");\n    }\n  }\n  if (msg instanceof HttpContent) {\n    HttpContent content=(HttpContent)msg;\n    System.out.print(content.content().toString(CharsetUtil.UTF_8));\n    System.out.flush();\n    if (content instanceof LastHttpContent) {\n      System.out.println(\"} END OF CONTENT\");\n      queue.add(ctx.channel().newSucceededFuture());\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 186,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 52,
        "startColumnNumber" : 24,
        "endLineNumber" : 52,
        "endColumnNumber" : 78
      },
      "nodeContext" : "System.out.println(\"HEADER: \" + name + \" = \"+ value);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.System"
  }, {
    "nodeContext" : "System",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 55,
      "startColumnNumber" : 16,
      "endLineNumber" : 55,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 55,
        "startColumnNumber" : 16,
        "endLineNumber" : 55,
        "endColumnNumber" : 26
      },
      "nodeContext" : "System.out",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 55,
        "startColumnNumber" : 16,
        "endLineNumber" : 55,
        "endColumnNumber" : 36
      },
      "nodeContext" : "System.out.println()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 55,
        "startColumnNumber" : 16,
        "endLineNumber" : 55,
        "endColumnNumber" : 37
      },
      "nodeContext" : "System.out.println();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 331,
        "startLineNumber" : 49,
        "startColumnNumber" : 47,
        "endLineNumber" : 56,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  for (  CharSequence name : response.headers().names()) {\n    for (    CharSequence value : response.headers().getAll(name)) {\n      System.out.println(\"HEADER: \" + name + \" = \"+ value);\n    }\n  }\n  System.out.println();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 366,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 56,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!response.headers().isEmpty()) {\n  for (  CharSequence name : response.headers().names()) {\n    for (    CharSequence value : response.headers().getAll(name)) {\n      System.out.println(\"HEADER: \" + name + \" = \"+ value);\n    }\n  }\n  System.out.println();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 48,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 840,
        "startLineNumber" : 42,
        "startColumnNumber" : 41,
        "endLineNumber" : 63,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HttpResponse response=(HttpResponse)msg;\n  System.out.println(\"STATUS: \" + response.status());\n  System.out.println(\"VERSION: \" + response.protocolVersion());\n  System.out.println();\n  if (!response.headers().isEmpty()) {\n    for (    CharSequence name : response.headers().names()) {\n      for (      CharSequence value : response.headers().getAll(name)) {\n        System.out.println(\"HEADER: \" + name + \" = \"+ value);\n      }\n    }\n    System.out.println();\n  }\n  if (HttpUtil.isTransferEncodingChunked(response)) {\n    System.out.println(\"CHUNKED CONTENT {\");\n  }\n else {\n    System.out.println(\"CONTENT {\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 873,
        "startLineNumber" : 42,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (msg instanceof HttpResponse) {\n  HttpResponse response=(HttpResponse)msg;\n  System.out.println(\"STATUS: \" + response.status());\n  System.out.println(\"VERSION: \" + response.protocolVersion());\n  System.out.println();\n  if (!response.headers().isEmpty()) {\n    for (    CharSequence name : response.headers().names()) {\n      for (      CharSequence value : response.headers().getAll(name)) {\n        System.out.println(\"HEADER: \" + name + \" = \"+ value);\n      }\n    }\n    System.out.println();\n  }\n  if (HttpUtil.isTransferEncodingChunked(response)) {\n    System.out.println(\"CHUNKED CONTENT {\");\n  }\n else {\n    System.out.println(\"CONTENT {\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 112,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1305,
        "startLineNumber" : 41,
        "startColumnNumber" : 89,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (msg instanceof HttpResponse) {\n    HttpResponse response=(HttpResponse)msg;\n    System.out.println(\"STATUS: \" + response.status());\n    System.out.println(\"VERSION: \" + response.protocolVersion());\n    System.out.println();\n    if (!response.headers().isEmpty()) {\n      for (      CharSequence name : response.headers().names()) {\n        for (        CharSequence value : response.headers().getAll(name)) {\n          System.out.println(\"HEADER: \" + name + \" = \"+ value);\n        }\n      }\n      System.out.println();\n    }\n    if (HttpUtil.isTransferEncodingChunked(response)) {\n      System.out.println(\"CHUNKED CONTENT {\");\n    }\n else {\n      System.out.println(\"CONTENT {\");\n    }\n  }\n  if (msg instanceof HttpContent) {\n    HttpContent content=(HttpContent)msg;\n    System.out.print(content.content().toString(CharsetUtil.UTF_8));\n    System.out.flush();\n    if (content instanceof LastHttpContent) {\n      System.out.println(\"} END OF CONTENT\");\n      queue.add(ctx.channel().newSucceededFuture());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1405,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void channelRead0(ChannelHandlerContext ctx,HttpObject msg) throws Exception {\n  if (msg instanceof HttpResponse) {\n    HttpResponse response=(HttpResponse)msg;\n    System.out.println(\"STATUS: \" + response.status());\n    System.out.println(\"VERSION: \" + response.protocolVersion());\n    System.out.println();\n    if (!response.headers().isEmpty()) {\n      for (      CharSequence name : response.headers().names()) {\n        for (        CharSequence value : response.headers().getAll(name)) {\n          System.out.println(\"HEADER: \" + name + \" = \"+ value);\n        }\n      }\n      System.out.println();\n    }\n    if (HttpUtil.isTransferEncodingChunked(response)) {\n      System.out.println(\"CHUNKED CONTENT {\");\n    }\n else {\n      System.out.println(\"CONTENT {\");\n    }\n  }\n  if (msg instanceof HttpContent) {\n    HttpContent content=(HttpContent)msg;\n    System.out.print(content.content().toString(CharsetUtil.UTF_8));\n    System.out.flush();\n    if (content instanceof LastHttpContent) {\n      System.out.println(\"} END OF CONTENT\");\n      queue.add(ctx.channel().newSucceededFuture());\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 186,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 55,
        "startColumnNumber" : 16,
        "endLineNumber" : 55,
        "endColumnNumber" : 37
      },
      "nodeContext" : "System.out.println();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.System"
  }, {
    "nodeContext" : "System",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 59,
      "startColumnNumber" : 16,
      "endLineNumber" : 59,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 59,
        "startColumnNumber" : 16,
        "endLineNumber" : 59,
        "endColumnNumber" : 26
      },
      "nodeContext" : "System.out",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 59,
        "startColumnNumber" : 16,
        "endLineNumber" : 59,
        "endColumnNumber" : 55
      },
      "nodeContext" : "System.out.println(\"CHUNKED CONTENT {\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 59,
        "startColumnNumber" : 16,
        "endLineNumber" : 59,
        "endColumnNumber" : 56
      },
      "nodeContext" : "System.out.println(\"CHUNKED CONTENT {\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 58,
        "startColumnNumber" : 62,
        "endLineNumber" : 60,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  System.out.println(\"CHUNKED CONTENT {\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 196,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 62,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (HttpUtil.isTransferEncodingChunked(response)) {\n  System.out.println(\"CHUNKED CONTENT {\");\n}\n else {\n  System.out.println(\"CONTENT {\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 840,
        "startLineNumber" : 42,
        "startColumnNumber" : 41,
        "endLineNumber" : 63,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HttpResponse response=(HttpResponse)msg;\n  System.out.println(\"STATUS: \" + response.status());\n  System.out.println(\"VERSION: \" + response.protocolVersion());\n  System.out.println();\n  if (!response.headers().isEmpty()) {\n    for (    CharSequence name : response.headers().names()) {\n      for (      CharSequence value : response.headers().getAll(name)) {\n        System.out.println(\"HEADER: \" + name + \" = \"+ value);\n      }\n    }\n    System.out.println();\n  }\n  if (HttpUtil.isTransferEncodingChunked(response)) {\n    System.out.println(\"CHUNKED CONTENT {\");\n  }\n else {\n    System.out.println(\"CONTENT {\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 873,
        "startLineNumber" : 42,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (msg instanceof HttpResponse) {\n  HttpResponse response=(HttpResponse)msg;\n  System.out.println(\"STATUS: \" + response.status());\n  System.out.println(\"VERSION: \" + response.protocolVersion());\n  System.out.println();\n  if (!response.headers().isEmpty()) {\n    for (    CharSequence name : response.headers().names()) {\n      for (      CharSequence value : response.headers().getAll(name)) {\n        System.out.println(\"HEADER: \" + name + \" = \"+ value);\n      }\n    }\n    System.out.println();\n  }\n  if (HttpUtil.isTransferEncodingChunked(response)) {\n    System.out.println(\"CHUNKED CONTENT {\");\n  }\n else {\n    System.out.println(\"CONTENT {\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 112,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1305,
        "startLineNumber" : 41,
        "startColumnNumber" : 89,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (msg instanceof HttpResponse) {\n    HttpResponse response=(HttpResponse)msg;\n    System.out.println(\"STATUS: \" + response.status());\n    System.out.println(\"VERSION: \" + response.protocolVersion());\n    System.out.println();\n    if (!response.headers().isEmpty()) {\n      for (      CharSequence name : response.headers().names()) {\n        for (        CharSequence value : response.headers().getAll(name)) {\n          System.out.println(\"HEADER: \" + name + \" = \"+ value);\n        }\n      }\n      System.out.println();\n    }\n    if (HttpUtil.isTransferEncodingChunked(response)) {\n      System.out.println(\"CHUNKED CONTENT {\");\n    }\n else {\n      System.out.println(\"CONTENT {\");\n    }\n  }\n  if (msg instanceof HttpContent) {\n    HttpContent content=(HttpContent)msg;\n    System.out.print(content.content().toString(CharsetUtil.UTF_8));\n    System.out.flush();\n    if (content instanceof LastHttpContent) {\n      System.out.println(\"} END OF CONTENT\");\n      queue.add(ctx.channel().newSucceededFuture());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1405,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void channelRead0(ChannelHandlerContext ctx,HttpObject msg) throws Exception {\n  if (msg instanceof HttpResponse) {\n    HttpResponse response=(HttpResponse)msg;\n    System.out.println(\"STATUS: \" + response.status());\n    System.out.println(\"VERSION: \" + response.protocolVersion());\n    System.out.println();\n    if (!response.headers().isEmpty()) {\n      for (      CharSequence name : response.headers().names()) {\n        for (        CharSequence value : response.headers().getAll(name)) {\n          System.out.println(\"HEADER: \" + name + \" = \"+ value);\n        }\n      }\n      System.out.println();\n    }\n    if (HttpUtil.isTransferEncodingChunked(response)) {\n      System.out.println(\"CHUNKED CONTENT {\");\n    }\n else {\n      System.out.println(\"CONTENT {\");\n    }\n  }\n  if (msg instanceof HttpContent) {\n    HttpContent content=(HttpContent)msg;\n    System.out.print(content.content().toString(CharsetUtil.UTF_8));\n    System.out.flush();\n    if (content instanceof LastHttpContent) {\n      System.out.println(\"} END OF CONTENT\");\n      queue.add(ctx.channel().newSucceededFuture());\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 186,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 59,
        "startColumnNumber" : 16,
        "endLineNumber" : 59,
        "endColumnNumber" : 56
      },
      "nodeContext" : "System.out.println(\"CHUNKED CONTENT {\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.System"
  }, {
    "nodeContext" : "System",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 61,
      "startColumnNumber" : 16,
      "endLineNumber" : 61,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 61,
        "startColumnNumber" : 16,
        "endLineNumber" : 61,
        "endColumnNumber" : 26
      },
      "nodeContext" : "System.out",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 61,
        "startColumnNumber" : 16,
        "endLineNumber" : 61,
        "endColumnNumber" : 47
      },
      "nodeContext" : "System.out.println(\"CONTENT {\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 61,
        "startColumnNumber" : 16,
        "endLineNumber" : 61,
        "endColumnNumber" : 48
      },
      "nodeContext" : "System.out.println(\"CONTENT {\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 60,
        "startColumnNumber" : 19,
        "endLineNumber" : 62,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  System.out.println(\"CONTENT {\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 196,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 62,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (HttpUtil.isTransferEncodingChunked(response)) {\n  System.out.println(\"CHUNKED CONTENT {\");\n}\n else {\n  System.out.println(\"CONTENT {\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 840,
        "startLineNumber" : 42,
        "startColumnNumber" : 41,
        "endLineNumber" : 63,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HttpResponse response=(HttpResponse)msg;\n  System.out.println(\"STATUS: \" + response.status());\n  System.out.println(\"VERSION: \" + response.protocolVersion());\n  System.out.println();\n  if (!response.headers().isEmpty()) {\n    for (    CharSequence name : response.headers().names()) {\n      for (      CharSequence value : response.headers().getAll(name)) {\n        System.out.println(\"HEADER: \" + name + \" = \"+ value);\n      }\n    }\n    System.out.println();\n  }\n  if (HttpUtil.isTransferEncodingChunked(response)) {\n    System.out.println(\"CHUNKED CONTENT {\");\n  }\n else {\n    System.out.println(\"CONTENT {\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 873,
        "startLineNumber" : 42,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (msg instanceof HttpResponse) {\n  HttpResponse response=(HttpResponse)msg;\n  System.out.println(\"STATUS: \" + response.status());\n  System.out.println(\"VERSION: \" + response.protocolVersion());\n  System.out.println();\n  if (!response.headers().isEmpty()) {\n    for (    CharSequence name : response.headers().names()) {\n      for (      CharSequence value : response.headers().getAll(name)) {\n        System.out.println(\"HEADER: \" + name + \" = \"+ value);\n      }\n    }\n    System.out.println();\n  }\n  if (HttpUtil.isTransferEncodingChunked(response)) {\n    System.out.println(\"CHUNKED CONTENT {\");\n  }\n else {\n    System.out.println(\"CONTENT {\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 112,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1305,
        "startLineNumber" : 41,
        "startColumnNumber" : 89,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (msg instanceof HttpResponse) {\n    HttpResponse response=(HttpResponse)msg;\n    System.out.println(\"STATUS: \" + response.status());\n    System.out.println(\"VERSION: \" + response.protocolVersion());\n    System.out.println();\n    if (!response.headers().isEmpty()) {\n      for (      CharSequence name : response.headers().names()) {\n        for (        CharSequence value : response.headers().getAll(name)) {\n          System.out.println(\"HEADER: \" + name + \" = \"+ value);\n        }\n      }\n      System.out.println();\n    }\n    if (HttpUtil.isTransferEncodingChunked(response)) {\n      System.out.println(\"CHUNKED CONTENT {\");\n    }\n else {\n      System.out.println(\"CONTENT {\");\n    }\n  }\n  if (msg instanceof HttpContent) {\n    HttpContent content=(HttpContent)msg;\n    System.out.print(content.content().toString(CharsetUtil.UTF_8));\n    System.out.flush();\n    if (content instanceof LastHttpContent) {\n      System.out.println(\"} END OF CONTENT\");\n      queue.add(ctx.channel().newSucceededFuture());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1405,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void channelRead0(ChannelHandlerContext ctx,HttpObject msg) throws Exception {\n  if (msg instanceof HttpResponse) {\n    HttpResponse response=(HttpResponse)msg;\n    System.out.println(\"STATUS: \" + response.status());\n    System.out.println(\"VERSION: \" + response.protocolVersion());\n    System.out.println();\n    if (!response.headers().isEmpty()) {\n      for (      CharSequence name : response.headers().names()) {\n        for (        CharSequence value : response.headers().getAll(name)) {\n          System.out.println(\"HEADER: \" + name + \" = \"+ value);\n        }\n      }\n      System.out.println();\n    }\n    if (HttpUtil.isTransferEncodingChunked(response)) {\n      System.out.println(\"CHUNKED CONTENT {\");\n    }\n else {\n      System.out.println(\"CONTENT {\");\n    }\n  }\n  if (msg instanceof HttpContent) {\n    HttpContent content=(HttpContent)msg;\n    System.out.print(content.content().toString(CharsetUtil.UTF_8));\n    System.out.flush();\n    if (content instanceof LastHttpContent) {\n      System.out.println(\"} END OF CONTENT\");\n      queue.add(ctx.channel().newSucceededFuture());\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 186,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 61,
        "startColumnNumber" : 16,
        "endLineNumber" : 61,
        "endColumnNumber" : 48
      },
      "nodeContext" : "System.out.println(\"CONTENT {\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.System"
  }, {
    "nodeContext" : "System",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 67,
      "startColumnNumber" : 12,
      "endLineNumber" : 67,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 67,
        "startColumnNumber" : 12,
        "endLineNumber" : 67,
        "endColumnNumber" : 22
      },
      "nodeContext" : "System.out",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 67,
        "startColumnNumber" : 12,
        "endLineNumber" : 67,
        "endColumnNumber" : 75
      },
      "nodeContext" : "System.out.print(content.content().toString(CharsetUtil.UTF_8))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 67,
        "startColumnNumber" : 12,
        "endLineNumber" : 67,
        "endColumnNumber" : 76
      },
      "nodeContext" : "System.out.print(content.content().toString(CharsetUtil.UTF_8));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 372,
        "startLineNumber" : 64,
        "startColumnNumber" : 40,
        "endLineNumber" : 74,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HttpContent content=(HttpContent)msg;\n  System.out.print(content.content().toString(CharsetUtil.UTF_8));\n  System.out.flush();\n  if (content instanceof LastHttpContent) {\n    System.out.println(\"} END OF CONTENT\");\n    queue.add(ctx.channel().newSucceededFuture());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 404,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (msg instanceof HttpContent) {\n  HttpContent content=(HttpContent)msg;\n  System.out.print(content.content().toString(CharsetUtil.UTF_8));\n  System.out.flush();\n  if (content instanceof LastHttpContent) {\n    System.out.println(\"} END OF CONTENT\");\n    queue.add(ctx.channel().newSucceededFuture());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 57,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1305,
        "startLineNumber" : 41,
        "startColumnNumber" : 89,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (msg instanceof HttpResponse) {\n    HttpResponse response=(HttpResponse)msg;\n    System.out.println(\"STATUS: \" + response.status());\n    System.out.println(\"VERSION: \" + response.protocolVersion());\n    System.out.println();\n    if (!response.headers().isEmpty()) {\n      for (      CharSequence name : response.headers().names()) {\n        for (        CharSequence value : response.headers().getAll(name)) {\n          System.out.println(\"HEADER: \" + name + \" = \"+ value);\n        }\n      }\n      System.out.println();\n    }\n    if (HttpUtil.isTransferEncodingChunked(response)) {\n      System.out.println(\"CHUNKED CONTENT {\");\n    }\n else {\n      System.out.println(\"CONTENT {\");\n    }\n  }\n  if (msg instanceof HttpContent) {\n    HttpContent content=(HttpContent)msg;\n    System.out.print(content.content().toString(CharsetUtil.UTF_8));\n    System.out.flush();\n    if (content instanceof LastHttpContent) {\n      System.out.println(\"} END OF CONTENT\");\n      queue.add(ctx.channel().newSucceededFuture());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1405,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void channelRead0(ChannelHandlerContext ctx,HttpObject msg) throws Exception {\n  if (msg instanceof HttpResponse) {\n    HttpResponse response=(HttpResponse)msg;\n    System.out.println(\"STATUS: \" + response.status());\n    System.out.println(\"VERSION: \" + response.protocolVersion());\n    System.out.println();\n    if (!response.headers().isEmpty()) {\n      for (      CharSequence name : response.headers().names()) {\n        for (        CharSequence value : response.headers().getAll(name)) {\n          System.out.println(\"HEADER: \" + name + \" = \"+ value);\n        }\n      }\n      System.out.println();\n    }\n    if (HttpUtil.isTransferEncodingChunked(response)) {\n      System.out.println(\"CHUNKED CONTENT {\");\n    }\n else {\n      System.out.println(\"CONTENT {\");\n    }\n  }\n  if (msg instanceof HttpContent) {\n    HttpContent content=(HttpContent)msg;\n    System.out.print(content.content().toString(CharsetUtil.UTF_8));\n    System.out.flush();\n    if (content instanceof LastHttpContent) {\n      System.out.println(\"} END OF CONTENT\");\n      queue.add(ctx.channel().newSucceededFuture());\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 186,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 67,
        "startColumnNumber" : 12,
        "endLineNumber" : 67,
        "endColumnNumber" : 76
      },
      "nodeContext" : "System.out.print(content.content().toString(CharsetUtil.UTF_8));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.System"
  }, {
    "nodeContext" : "System",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 68,
      "startColumnNumber" : 12,
      "endLineNumber" : 68,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 68,
        "startColumnNumber" : 12,
        "endLineNumber" : 68,
        "endColumnNumber" : 22
      },
      "nodeContext" : "System.out",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 68,
        "startColumnNumber" : 12,
        "endLineNumber" : 68,
        "endColumnNumber" : 30
      },
      "nodeContext" : "System.out.flush()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 68,
        "startColumnNumber" : 12,
        "endLineNumber" : 68,
        "endColumnNumber" : 31
      },
      "nodeContext" : "System.out.flush();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 372,
        "startLineNumber" : 64,
        "startColumnNumber" : 40,
        "endLineNumber" : 74,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HttpContent content=(HttpContent)msg;\n  System.out.print(content.content().toString(CharsetUtil.UTF_8));\n  System.out.flush();\n  if (content instanceof LastHttpContent) {\n    System.out.println(\"} END OF CONTENT\");\n    queue.add(ctx.channel().newSucceededFuture());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 404,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (msg instanceof HttpContent) {\n  HttpContent content=(HttpContent)msg;\n  System.out.print(content.content().toString(CharsetUtil.UTF_8));\n  System.out.flush();\n  if (content instanceof LastHttpContent) {\n    System.out.println(\"} END OF CONTENT\");\n    queue.add(ctx.channel().newSucceededFuture());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 57,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1305,
        "startLineNumber" : 41,
        "startColumnNumber" : 89,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (msg instanceof HttpResponse) {\n    HttpResponse response=(HttpResponse)msg;\n    System.out.println(\"STATUS: \" + response.status());\n    System.out.println(\"VERSION: \" + response.protocolVersion());\n    System.out.println();\n    if (!response.headers().isEmpty()) {\n      for (      CharSequence name : response.headers().names()) {\n        for (        CharSequence value : response.headers().getAll(name)) {\n          System.out.println(\"HEADER: \" + name + \" = \"+ value);\n        }\n      }\n      System.out.println();\n    }\n    if (HttpUtil.isTransferEncodingChunked(response)) {\n      System.out.println(\"CHUNKED CONTENT {\");\n    }\n else {\n      System.out.println(\"CONTENT {\");\n    }\n  }\n  if (msg instanceof HttpContent) {\n    HttpContent content=(HttpContent)msg;\n    System.out.print(content.content().toString(CharsetUtil.UTF_8));\n    System.out.flush();\n    if (content instanceof LastHttpContent) {\n      System.out.println(\"} END OF CONTENT\");\n      queue.add(ctx.channel().newSucceededFuture());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1405,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void channelRead0(ChannelHandlerContext ctx,HttpObject msg) throws Exception {\n  if (msg instanceof HttpResponse) {\n    HttpResponse response=(HttpResponse)msg;\n    System.out.println(\"STATUS: \" + response.status());\n    System.out.println(\"VERSION: \" + response.protocolVersion());\n    System.out.println();\n    if (!response.headers().isEmpty()) {\n      for (      CharSequence name : response.headers().names()) {\n        for (        CharSequence value : response.headers().getAll(name)) {\n          System.out.println(\"HEADER: \" + name + \" = \"+ value);\n        }\n      }\n      System.out.println();\n    }\n    if (HttpUtil.isTransferEncodingChunked(response)) {\n      System.out.println(\"CHUNKED CONTENT {\");\n    }\n else {\n      System.out.println(\"CONTENT {\");\n    }\n  }\n  if (msg instanceof HttpContent) {\n    HttpContent content=(HttpContent)msg;\n    System.out.print(content.content().toString(CharsetUtil.UTF_8));\n    System.out.flush();\n    if (content instanceof LastHttpContent) {\n      System.out.println(\"} END OF CONTENT\");\n      queue.add(ctx.channel().newSucceededFuture());\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 186,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 68,
        "startColumnNumber" : 12,
        "endLineNumber" : 68,
        "endColumnNumber" : 31
      },
      "nodeContext" : "System.out.flush();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.System"
  }, {
    "nodeContext" : "System",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 71,
      "startColumnNumber" : 16,
      "endLineNumber" : 71,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 71,
        "startColumnNumber" : 16,
        "endLineNumber" : 71,
        "endColumnNumber" : 26
      },
      "nodeContext" : "System.out",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 71,
        "startColumnNumber" : 16,
        "endLineNumber" : 71,
        "endColumnNumber" : 54
      },
      "nodeContext" : "System.out.println(\"} END OF CONTENT\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 71,
        "startColumnNumber" : 16,
        "endLineNumber" : 71,
        "endColumnNumber" : 55
      },
      "nodeContext" : "System.out.println(\"} END OF CONTENT\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 70,
        "startColumnNumber" : 52,
        "endLineNumber" : 73,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  System.out.println(\"} END OF CONTENT\");\n  queue.add(ctx.channel().newSucceededFuture());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 177,
        "startLineNumber" : 70,
        "startColumnNumber" : 12,
        "endLineNumber" : 73,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (content instanceof LastHttpContent) {\n  System.out.println(\"} END OF CONTENT\");\n  queue.add(ctx.channel().newSucceededFuture());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 372,
        "startLineNumber" : 64,
        "startColumnNumber" : 40,
        "endLineNumber" : 74,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HttpContent content=(HttpContent)msg;\n  System.out.print(content.content().toString(CharsetUtil.UTF_8));\n  System.out.flush();\n  if (content instanceof LastHttpContent) {\n    System.out.println(\"} END OF CONTENT\");\n    queue.add(ctx.channel().newSucceededFuture());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 404,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (msg instanceof HttpContent) {\n  HttpContent content=(HttpContent)msg;\n  System.out.print(content.content().toString(CharsetUtil.UTF_8));\n  System.out.flush();\n  if (content instanceof LastHttpContent) {\n    System.out.println(\"} END OF CONTENT\");\n    queue.add(ctx.channel().newSucceededFuture());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 57,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1305,
        "startLineNumber" : 41,
        "startColumnNumber" : 89,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (msg instanceof HttpResponse) {\n    HttpResponse response=(HttpResponse)msg;\n    System.out.println(\"STATUS: \" + response.status());\n    System.out.println(\"VERSION: \" + response.protocolVersion());\n    System.out.println();\n    if (!response.headers().isEmpty()) {\n      for (      CharSequence name : response.headers().names()) {\n        for (        CharSequence value : response.headers().getAll(name)) {\n          System.out.println(\"HEADER: \" + name + \" = \"+ value);\n        }\n      }\n      System.out.println();\n    }\n    if (HttpUtil.isTransferEncodingChunked(response)) {\n      System.out.println(\"CHUNKED CONTENT {\");\n    }\n else {\n      System.out.println(\"CONTENT {\");\n    }\n  }\n  if (msg instanceof HttpContent) {\n    HttpContent content=(HttpContent)msg;\n    System.out.print(content.content().toString(CharsetUtil.UTF_8));\n    System.out.flush();\n    if (content instanceof LastHttpContent) {\n      System.out.println(\"} END OF CONTENT\");\n      queue.add(ctx.channel().newSucceededFuture());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1405,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void channelRead0(ChannelHandlerContext ctx,HttpObject msg) throws Exception {\n  if (msg instanceof HttpResponse) {\n    HttpResponse response=(HttpResponse)msg;\n    System.out.println(\"STATUS: \" + response.status());\n    System.out.println(\"VERSION: \" + response.protocolVersion());\n    System.out.println();\n    if (!response.headers().isEmpty()) {\n      for (      CharSequence name : response.headers().names()) {\n        for (        CharSequence value : response.headers().getAll(name)) {\n          System.out.println(\"HEADER: \" + name + \" = \"+ value);\n        }\n      }\n      System.out.println();\n    }\n    if (HttpUtil.isTransferEncodingChunked(response)) {\n      System.out.println(\"CHUNKED CONTENT {\");\n    }\n else {\n      System.out.println(\"CONTENT {\");\n    }\n  }\n  if (msg instanceof HttpContent) {\n    HttpContent content=(HttpContent)msg;\n    System.out.print(content.content().toString(CharsetUtil.UTF_8));\n    System.out.flush();\n    if (content instanceof LastHttpContent) {\n      System.out.println(\"} END OF CONTENT\");\n      queue.add(ctx.channel().newSucceededFuture());\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 186,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 71,
        "startColumnNumber" : 16,
        "endLineNumber" : 71,
        "endColumnNumber" : 55
      },
      "nodeContext" : "System.out.println(\"} END OF CONTENT\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.System"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 45,
    "startColumnNumber" : 12,
    "endLineNumber" : 45,
    "endColumnNumber" : 18
  }, {
    "charLength" : 6,
    "startLineNumber" : 46,
    "startColumnNumber" : 12,
    "endLineNumber" : 46,
    "endColumnNumber" : 18
  }, {
    "charLength" : 6,
    "startLineNumber" : 47,
    "startColumnNumber" : 12,
    "endLineNumber" : 47,
    "endColumnNumber" : 18
  }, {
    "charLength" : 6,
    "startLineNumber" : 52,
    "startColumnNumber" : 24,
    "endLineNumber" : 52,
    "endColumnNumber" : 30
  }, {
    "charLength" : 6,
    "startLineNumber" : 55,
    "startColumnNumber" : 16,
    "endLineNumber" : 55,
    "endColumnNumber" : 22
  }, {
    "charLength" : 6,
    "startLineNumber" : 59,
    "startColumnNumber" : 16,
    "endLineNumber" : 59,
    "endColumnNumber" : 22
  }, {
    "charLength" : 6,
    "startLineNumber" : 61,
    "startColumnNumber" : 16,
    "endLineNumber" : 61,
    "endColumnNumber" : 22
  }, {
    "charLength" : 6,
    "startLineNumber" : 67,
    "startColumnNumber" : 12,
    "endLineNumber" : 67,
    "endColumnNumber" : 18
  }, {
    "charLength" : 6,
    "startLineNumber" : 68,
    "startColumnNumber" : 12,
    "endLineNumber" : 68,
    "endColumnNumber" : 18
  }, {
    "charLength" : 6,
    "startLineNumber" : 71,
    "startColumnNumber" : 16,
    "endLineNumber" : 71,
    "endColumnNumber" : 22
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 9
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 9
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 9
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 9
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 9
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 11
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 11
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 11
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 7
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 7
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 7
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 7
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 7
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 7
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 7
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 7
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 7
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 5
  } ]
}