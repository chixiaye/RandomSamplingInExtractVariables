{
  "id" : 130,
  "expression" : "false",
  "projectName" : "seata@seata",
  "commitID" : "42d41623178ab076b11b27a0f049ac3ed7f1a9dc",
  "filePath" : "/common/src/main/java/io/seata/common/loader/EnhancedServiceLoader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "false",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 164,
      "startColumnNumber" : 41,
      "endLineNumber" : 164,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 164,
        "startColumnNumber" : 24,
        "endLineNumber" : 164,
        "endColumnNumber" : 46
      },
      "nodeContext" : "foundFromCache=false",
      "nodeType" : "Assignment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 164,
        "startColumnNumber" : 24,
        "endLineNumber" : 164,
        "endColumnNumber" : 47
      },
      "nodeContext" : "foundFromCache=false;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 222,
        "startLineNumber" : 162,
        "startColumnNumber" : 44,
        "endLineNumber" : 166,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  extensions=findAllExtensionClass(service,activateName,loader);\n  foundFromCache=false;\n  providers.put(service,extensions);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 246,
        "startLineNumber" : 162,
        "startColumnNumber" : 20,
        "endLineNumber" : 166,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (extensions == null) {\n  extensions=findAllExtensionClass(service,activateName,loader);\n  foundFromCache=false;\n  providers.put(service,extensions);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SynchronizedStatement,body]",
      "nodePosition" : {
        "charLength" : 343,
        "startLineNumber" : 160,
        "startColumnNumber" : 39,
        "endLineNumber" : 167,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  extensions=providers.get(service);\n  if (extensions == null) {\n    extensions=findAllExtensionClass(service,activateName,loader);\n    foundFromCache=false;\n    providers.put(service,extensions);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 366,
        "startLineNumber" : 160,
        "startColumnNumber" : 16,
        "endLineNumber" : 167,
        "endColumnNumber" : 17
      },
      "nodeContext" : "synchronized (service) {\n  extensions=providers.get(service);\n  if (extensions == null) {\n    extensions=findAllExtensionClass(service,activateName,loader);\n    foundFromCache=false;\n    providers.put(service,extensions);\n  }\n}\n",
      "nodeType" : "SynchronizedStatement",
      "astNodeNumber" : 33,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 398,
        "startLineNumber" : 159,
        "startColumnNumber" : 36,
        "endLineNumber" : 168,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\nsynchronized (service) {\n    extensions=providers.get(service);\n    if (extensions == null) {\n      extensions=findAllExtensionClass(service,activateName,loader);\n      foundFromCache=false;\n      providers.put(service,extensions);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 422,
        "startLineNumber" : 159,
        "startColumnNumber" : 12,
        "endLineNumber" : 168,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (extensions == null) {\nsynchronized (service) {\n    extensions=providers.get(service);\n    if (extensions == null) {\n      extensions=findAllExtensionClass(service,activateName,loader);\n      foundFromCache=false;\n      providers.put(service,extensions);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 38,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1965,
        "startLineNumber" : 156,
        "startColumnNumber" : 12,
        "endLineNumber" : 197,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  boolean foundFromCache=true;\n  List<Class> extensions=providers.get(service);\n  if (extensions == null) {\nsynchronized (service) {\n      extensions=providers.get(service);\n      if (extensions == null) {\n        extensions=findAllExtensionClass(service,activateName,loader);\n        foundFromCache=false;\n        providers.put(service,extensions);\n      }\n    }\n  }\n  if (StringUtils.isNotEmpty(activateName)) {\n    loadFile(service,SEATA_DIRECTORY + activateName.toLowerCase() + \"/\",loader,extensions);\n    List<Class> activateExtensions=new ArrayList<Class>();\n    for (int i=0; i < extensions.size(); i++) {\n      Class clz=extensions.get(i);\n      @SuppressWarnings(\"unchecked\") LoadLevel activate=(LoadLevel)clz.getAnnotation(LoadLevel.class);\n      if (activate != null && activateName.equals(activate.name())) {\n        activateExtensions.add(clz);\n      }\n    }\n    extensions=activateExtensions;\n  }\n  if (extensions.isEmpty()) {\n    throw new EnhancedServiceNotFoundException(\"not found service provider for : \" + service.getName() + \"[\"+ activateName+ \"] and classloader : \"+ ObjectUtils.toString(loader));\n  }\n  Class<?> extension=extensions.get(extensions.size() - 1);\n  S result=initInstance(service,extension);\n  if (!foundFromCache && LOGGER.isInfoEnabled()) {\n    LOGGER.info(\"load \" + service.getSimpleName() + \"[\"+ activateName+ \"] extension by class[\"+ extension.getName()+ \"]\");\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 220,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2377,
        "startLineNumber" : 156,
        "startColumnNumber" : 8,
        "endLineNumber" : 205,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  boolean foundFromCache=true;\n  List<Class> extensions=providers.get(service);\n  if (extensions == null) {\nsynchronized (service) {\n      extensions=providers.get(service);\n      if (extensions == null) {\n        extensions=findAllExtensionClass(service,activateName,loader);\n        foundFromCache=false;\n        providers.put(service,extensions);\n      }\n    }\n  }\n  if (StringUtils.isNotEmpty(activateName)) {\n    loadFile(service,SEATA_DIRECTORY + activateName.toLowerCase() + \"/\",loader,extensions);\n    List<Class> activateExtensions=new ArrayList<Class>();\n    for (int i=0; i < extensions.size(); i++) {\n      Class clz=extensions.get(i);\n      @SuppressWarnings(\"unchecked\") LoadLevel activate=(LoadLevel)clz.getAnnotation(LoadLevel.class);\n      if (activate != null && activateName.equals(activate.name())) {\n        activateExtensions.add(clz);\n      }\n    }\n    extensions=activateExtensions;\n  }\n  if (extensions.isEmpty()) {\n    throw new EnhancedServiceNotFoundException(\"not found service provider for : \" + service.getName() + \"[\"+ activateName+ \"] and classloader : \"+ ObjectUtils.toString(loader));\n  }\n  Class<?> extension=extensions.get(extensions.size() - 1);\n  S result=initInstance(service,extension);\n  if (!foundFromCache && LOGGER.isInfoEnabled()) {\n    LOGGER.info(\"load \" + service.getSimpleName() + \"[\"+ activateName+ \"] extension by class[\"+ extension.getName()+ \"]\");\n  }\n  return result;\n}\n catch (Throwable e) {\n  if (e instanceof EnhancedServiceNotFoundException) {\n    throw (EnhancedServiceNotFoundException)e;\n  }\n else {\n    throw new EnhancedServiceNotFoundException(\"not found service provider for : \" + service.getName() + \" caused by \"+ ExceptionUtils.getFullStackTrace(e));\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 253,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2393,
        "startLineNumber" : 155,
        "startColumnNumber" : 93,
        "endLineNumber" : 206,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    boolean foundFromCache=true;\n    List<Class> extensions=providers.get(service);\n    if (extensions == null) {\nsynchronized (service) {\n        extensions=providers.get(service);\n        if (extensions == null) {\n          extensions=findAllExtensionClass(service,activateName,loader);\n          foundFromCache=false;\n          providers.put(service,extensions);\n        }\n      }\n    }\n    if (StringUtils.isNotEmpty(activateName)) {\n      loadFile(service,SEATA_DIRECTORY + activateName.toLowerCase() + \"/\",loader,extensions);\n      List<Class> activateExtensions=new ArrayList<Class>();\n      for (int i=0; i < extensions.size(); i++) {\n        Class clz=extensions.get(i);\n        @SuppressWarnings(\"unchecked\") LoadLevel activate=(LoadLevel)clz.getAnnotation(LoadLevel.class);\n        if (activate != null && activateName.equals(activate.name())) {\n          activateExtensions.add(clz);\n        }\n      }\n      extensions=activateExtensions;\n    }\n    if (extensions.isEmpty()) {\n      throw new EnhancedServiceNotFoundException(\"not found service provider for : \" + service.getName() + \"[\"+ activateName+ \"] and classloader : \"+ ObjectUtils.toString(loader));\n    }\n    Class<?> extension=extensions.get(extensions.size() - 1);\n    S result=initInstance(service,extension);\n    if (!foundFromCache && LOGGER.isInfoEnabled()) {\n      LOGGER.info(\"load \" + service.getSimpleName() + \"[\"+ activateName+ \"] extension by class[\"+ extension.getName()+ \"]\");\n    }\n    return result;\n  }\n catch (  Throwable e) {\n    if (e instanceof EnhancedServiceNotFoundException) {\n      throw (EnhancedServiceNotFoundException)e;\n    }\n else {\n      throw new EnhancedServiceNotFoundException(\"not found service provider for : \" + service.getName() + \" caused by \"+ ExceptionUtils.getFullStackTrace(e));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 254,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2516,
        "startLineNumber" : 154,
        "startColumnNumber" : 4,
        "endLineNumber" : 206,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"rawtypes\") private static <S>S loadFile(Class<S> service,String activateName,ClassLoader loader){\n  try {\n    boolean foundFromCache=true;\n    List<Class> extensions=providers.get(service);\n    if (extensions == null) {\nsynchronized (service) {\n        extensions=providers.get(service);\n        if (extensions == null) {\n          extensions=findAllExtensionClass(service,activateName,loader);\n          foundFromCache=false;\n          providers.put(service,extensions);\n        }\n      }\n    }\n    if (StringUtils.isNotEmpty(activateName)) {\n      loadFile(service,SEATA_DIRECTORY + activateName.toLowerCase() + \"/\",loader,extensions);\n      List<Class> activateExtensions=new ArrayList<Class>();\n      for (int i=0; i < extensions.size(); i++) {\n        Class clz=extensions.get(i);\n        @SuppressWarnings(\"unchecked\") LoadLevel activate=(LoadLevel)clz.getAnnotation(LoadLevel.class);\n        if (activate != null && activateName.equals(activate.name())) {\n          activateExtensions.add(clz);\n        }\n      }\n      extensions=activateExtensions;\n    }\n    if (extensions.isEmpty()) {\n      throw new EnhancedServiceNotFoundException(\"not found service provider for : \" + service.getName() + \"[\"+ activateName+ \"] and classloader : \"+ ObjectUtils.toString(loader));\n    }\n    Class<?> extension=extensions.get(extensions.size() - 1);\n    S result=initInstance(service,extension);\n    if (!foundFromCache && LOGGER.isInfoEnabled()) {\n      LOGGER.info(\"load \" + service.getSimpleName() + \"[\"+ activateName+ \"] extension by class[\"+ extension.getName()+ \"]\");\n    }\n    return result;\n  }\n catch (  Throwable e) {\n    if (e instanceof EnhancedServiceNotFoundException) {\n      throw (EnhancedServiceNotFoundException)e;\n    }\n else {\n      throw new EnhancedServiceNotFoundException(\"not found service provider for : \" + service.getName() + \" caused by \"+ ExceptionUtils.getFullStackTrace(e));\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 280,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 164,
        "startColumnNumber" : 24,
        "endLineNumber" : 164,
        "endColumnNumber" : 47
      },
      "nodeContext" : "foundFromCache=false;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 164,
    "startColumnNumber" : 41,
    "endLineNumber" : 164,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ ]
}