{
  "id" : 415,
  "expression" : "\", diffSize=\"",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/decoder/BsDiffDecoder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\", diffSize=\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 145,
      "startColumnNumber" : 56,
      "endLineNumber" : 145,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 183,
        "startLineNumber" : 144,
        "startColumnNumber" : 25,
        "endLineNumber" : 145,
        "endColumnNumber" : 106
      },
      "nodeContext" : "relative + \", oldSize=\" + FileOperation.getFileSizes(oldFile)+ \", newSize=\"+ FileOperation.getFileSizes(newFile)+ \", diffSize=\"+ FileOperation.getFileSizes(bsDiff)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 17,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 189,
        "startLineNumber" : 144,
        "startColumnNumber" : 19,
        "endLineNumber" : 145,
        "endColumnNumber" : 106
      },
      "nodeContext" : "log=relative + \", oldSize=\" + FileOperation.getFileSizes(oldFile)+ \", newSize=\"+ FileOperation.getFileSizes(newFile)+ \", diffSize=\"+ FileOperation.getFileSizes(bsDiff)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 19,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 197,
        "startLineNumber" : 144,
        "startColumnNumber" : 12,
        "endLineNumber" : 145,
        "endColumnNumber" : 107
      },
      "nodeContext" : "String log=relative + \", oldSize=\" + FileOperation.getFileSizes(oldFile)+ \", newSize=\"+ FileOperation.getFileSizes(newFile)+ \", diffSize=\"+ FileOperation.getFileSizes(bsDiff);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 22,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 270,
        "startLineNumber" : 143,
        "startColumnNumber" : 31,
        "endLineNumber" : 148,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String log=relative + \", oldSize=\" + FileOperation.getFileSizes(oldFile)+ \", newSize=\"+ FileOperation.getFileSizes(newFile)+ \", diffSize=\"+ FileOperation.getFileSizes(bsDiff);\n  logWriter.writeLineToInfoFile(log);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 293,
        "startLineNumber" : 143,
        "startColumnNumber" : 8,
        "endLineNumber" : 148,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (logWriter != null) {\n  String log=relative + \", oldSize=\" + FileOperation.getFileSizes(oldFile)+ \", newSize=\"+ FileOperation.getFileSizes(newFile)+ \", diffSize=\"+ FileOperation.getFileSizes(bsDiff);\n  logWriter.writeLineToInfoFile(log);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1443,
        "startLineNumber" : 117,
        "startColumnNumber" : 108,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (metaWriter == null && logWriter == null) {\n    return;\n  }\n  String parentRelative=getParentRelativePathStringToNewFile(newFile);\n  String relative=getRelativePathStringToNewFile(newFile);\n  if (metaWriter != null) {\n    String fileName=newFile.getName();\n    String meta;\n    if (bsDiff == null || oldFile == null) {\n      meta=fileName + \",\" + parentRelative+ \",\"+ newMd5+ \",\"+ 0+ \",\"+ 0;\n    }\n else {\n      String oldCrc=FileOperation.getZipEntryCrc(config.mOldApkFile,relative);\n      if (oldCrc == null || oldCrc.equals(\"0\")) {\n        throw new TinkerPatchException(String.format(\"can't find zipEntry %s from old apk file %s\",relative,config.mOldApkFile.getPath()));\n      }\n      meta=fileName + \",\" + parentRelative+ \",\"+ newMd5+ \",\"+ oldCrc+ \",\"+ MD5.getMD5(bsDiff);\n    }\n    Logger.d(\"BsDiffDecoder:write meta file data: %s\",meta);\n    metaWriter.writeLineToInfoFile(meta);\n  }\n  if (logWriter != null) {\n    String log=relative + \", oldSize=\" + FileOperation.getFileSizes(oldFile)+ \", newSize=\"+ FileOperation.getFileSizes(newFile)+ \", diffSize=\"+ FileOperation.getFileSizes(bsDiff);\n    logWriter.writeLineToInfoFile(log);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 163,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1547,
        "startLineNumber" : 117,
        "startColumnNumber" : 4,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected void writeLogFiles(File newFile,File oldFile,File bsDiff,String newMd5) throws IOException {\n  if (metaWriter == null && logWriter == null) {\n    return;\n  }\n  String parentRelative=getParentRelativePathStringToNewFile(newFile);\n  String relative=getRelativePathStringToNewFile(newFile);\n  if (metaWriter != null) {\n    String fileName=newFile.getName();\n    String meta;\n    if (bsDiff == null || oldFile == null) {\n      meta=fileName + \",\" + parentRelative+ \",\"+ newMd5+ \",\"+ 0+ \",\"+ 0;\n    }\n else {\n      String oldCrc=FileOperation.getZipEntryCrc(config.mOldApkFile,relative);\n      if (oldCrc == null || oldCrc.equals(\"0\")) {\n        throw new TinkerPatchException(String.format(\"can't find zipEntry %s from old apk file %s\",relative,config.mOldApkFile.getPath()));\n      }\n      meta=fileName + \",\" + parentRelative+ \",\"+ newMd5+ \",\"+ oldCrc+ \",\"+ MD5.getMD5(bsDiff);\n    }\n    Logger.d(\"BsDiffDecoder:write meta file data: %s\",meta);\n    metaWriter.writeLineToInfoFile(meta);\n  }\n  if (logWriter != null) {\n    String log=relative + \", oldSize=\" + FileOperation.getFileSizes(oldFile)+ \", newSize=\"+ FileOperation.getFileSizes(newFile)+ \", diffSize=\"+ FileOperation.getFileSizes(bsDiff);\n    logWriter.writeLineToInfoFile(log);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 185,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 183,
        "startLineNumber" : 144,
        "startColumnNumber" : 25,
        "endLineNumber" : 145,
        "endColumnNumber" : 106
      },
      "nodeContext" : "relative + \", oldSize=\" + FileOperation.getFileSizes(oldFile)+ \", newSize=\"+ FileOperation.getFileSizes(newFile)+ \", diffSize=\"+ FileOperation.getFileSizes(bsDiff)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 17,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 145,
    "startColumnNumber" : 56,
    "endLineNumber" : 145,
    "endColumnNumber" : 69
  } ],
  "layoutRelationDataList" : [ ]
}