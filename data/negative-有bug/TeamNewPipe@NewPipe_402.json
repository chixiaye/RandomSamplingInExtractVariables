{
  "id" : 402,
  "expression" : "resultCode",
  "projectName" : "TeamNewPipe@NewPipe",
  "commitID" : "d7574973e97fa7a3a21aa59967311f6091941830",
  "filePath" : "/app/src/main/java/org/schabi/newpipe/settings/DownloadSettingsFragment.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "resultCode",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 220,
      "startColumnNumber" : 44,
      "endLineNumber" : 220,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 220,
        "startColumnNumber" : 8,
        "endLineNumber" : 220,
        "endColumnNumber" : 61
      },
      "nodeContext" : "super.onActivityResult(requestCode,resultCode,data)",
      "nodeType" : "SuperMethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 220,
        "startColumnNumber" : 8,
        "endLineNumber" : 220,
        "endColumnNumber" : 62
      },
      "nodeContext" : "super.onActivityResult(requestCode,resultCode,data);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2704,
        "startLineNumber" : 218,
        "startColumnNumber" : 97,
        "endLineNumber" : 288,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assureCorrectAppLanguage(getContext());\n  super.onActivityResult(requestCode,resultCode,data);\n  if (DEBUG) {\n    Log.d(TAG,\"onActivityResult() called with: \" + \"requestCode = [\" + requestCode + \"], \"+ \"resultCode = [\"+ resultCode+ \"], data = [\"+ data+ \"]\");\n  }\n  if (resultCode != Activity.RESULT_OK) {\n    return;\n  }\n  String key;\n  if (requestCode == REQUEST_DOWNLOAD_VIDEO_PATH) {\n    key=downloadPathVideoPreference;\n  }\n else   if (requestCode == REQUEST_DOWNLOAD_AUDIO_PATH) {\n    key=downloadPathAudioPreference;\n  }\n else {\n    return;\n  }\n  Uri uri=data.getData();\n  if (uri == null) {\n    showMessageDialog(R.string.general_error,R.string.invalid_directory);\n    return;\n  }\n  final Context context=getContext();\n  if (context == null) {\n    throw new NullPointerException(\"getContext()\");\n  }\n  forgetSAFTree(context,defaultPreferences.getString(key,\"\"));\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP && !FilePickerActivityHelper.isOwnFileUri(context,uri)) {\n    try {\n      context.grantUriPermission(context.getPackageName(),uri,StoredDirectoryHelper.PERMISSION_FLAGS);\n      StoredDirectoryHelper mainStorage=new StoredDirectoryHelper(context,uri,null);\n      Log.i(TAG,\"Acquiring tree success from \" + uri.toString());\n      if (!mainStorage.canWrite()) {\n        throw new IOException(\"No write permissions on \" + uri.toString());\n      }\n    }\n catch (    IOException err) {\n      Log.e(TAG,\"Error acquiring tree from \" + uri.toString(),err);\n      showMessageDialog(R.string.general_error,R.string.no_available_dir);\n      return;\n    }\n  }\n else {\n    File target=Utils.getFileForUri(uri);\n    if (!target.canWrite()) {\n      showMessageDialog(R.string.download_to_sdcard_error_title,R.string.download_to_sdcard_error_message);\n      return;\n    }\n    uri=Uri.fromFile(target);\n  }\n  defaultPreferences.edit().putString(key,uri.toString()).apply();\n  updatePreferencesSummary();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 270,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2811,
        "startLineNumber" : 217,
        "startColumnNumber" : 4,
        "endLineNumber" : 288,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void onActivityResult(final int requestCode,final int resultCode,final Intent data){\n  assureCorrectAppLanguage(getContext());\n  super.onActivityResult(requestCode,resultCode,data);\n  if (DEBUG) {\n    Log.d(TAG,\"onActivityResult() called with: \" + \"requestCode = [\" + requestCode + \"], \"+ \"resultCode = [\"+ resultCode+ \"], data = [\"+ data+ \"]\");\n  }\n  if (resultCode != Activity.RESULT_OK) {\n    return;\n  }\n  String key;\n  if (requestCode == REQUEST_DOWNLOAD_VIDEO_PATH) {\n    key=downloadPathVideoPreference;\n  }\n else   if (requestCode == REQUEST_DOWNLOAD_AUDIO_PATH) {\n    key=downloadPathAudioPreference;\n  }\n else {\n    return;\n  }\n  Uri uri=data.getData();\n  if (uri == null) {\n    showMessageDialog(R.string.general_error,R.string.invalid_directory);\n    return;\n  }\n  final Context context=getContext();\n  if (context == null) {\n    throw new NullPointerException(\"getContext()\");\n  }\n  forgetSAFTree(context,defaultPreferences.getString(key,\"\"));\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP && !FilePickerActivityHelper.isOwnFileUri(context,uri)) {\n    try {\n      context.grantUriPermission(context.getPackageName(),uri,StoredDirectoryHelper.PERMISSION_FLAGS);\n      StoredDirectoryHelper mainStorage=new StoredDirectoryHelper(context,uri,null);\n      Log.i(TAG,\"Acquiring tree success from \" + uri.toString());\n      if (!mainStorage.canWrite()) {\n        throw new IOException(\"No write permissions on \" + uri.toString());\n      }\n    }\n catch (    IOException err) {\n      Log.e(TAG,\"Error acquiring tree from \" + uri.toString(),err);\n      showMessageDialog(R.string.general_error,R.string.no_available_dir);\n      return;\n    }\n  }\n else {\n    File target=Utils.getFileForUri(uri);\n    if (!target.canWrite()) {\n      showMessageDialog(R.string.download_to_sdcard_error_title,R.string.download_to_sdcard_error_message);\n      return;\n    }\n    uri=Uri.fromFile(target);\n  }\n  defaultPreferences.edit().putString(key,uri.toString()).apply();\n  updatePreferencesSummary();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 289,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 220,
        "startColumnNumber" : 8,
        "endLineNumber" : 220,
        "endColumnNumber" : 62
      },
      "nodeContext" : "super.onActivityResult(requestCode,resultCode,data);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "resultCode",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 224,
      "startColumnNumber" : 41,
      "endLineNumber" : 224,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 177,
        "startLineNumber" : 222,
        "startColumnNumber" : 23,
        "endLineNumber" : 224,
        "endColumnNumber" : 80
      },
      "nodeContext" : "\"onActivityResult() called with: \" + \"requestCode = [\" + requestCode + \"], \"+ \"resultCode = [\"+ resultCode+ \"], data = [\"+ data+ \"]\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 202,
        "startLineNumber" : 222,
        "startColumnNumber" : 12,
        "endLineNumber" : 225,
        "endColumnNumber" : 13
      },
      "nodeContext" : "Log.d(TAG,\"onActivityResult() called with: \" + \"requestCode = [\" + requestCode + \"], \"+ \"resultCode = [\"+ resultCode+ \"], data = [\"+ data+ \"]\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 203,
        "startLineNumber" : 222,
        "startColumnNumber" : 12,
        "endLineNumber" : 225,
        "endColumnNumber" : 14
      },
      "nodeContext" : "Log.d(TAG,\"onActivityResult() called with: \" + \"requestCode = [\" + requestCode + \"], \"+ \"resultCode = [\"+ resultCode+ \"], data = [\"+ data+ \"]\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 227,
        "startLineNumber" : 221,
        "startColumnNumber" : 19,
        "endLineNumber" : 226,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Log.d(TAG,\"onActivityResult() called with: \" + \"requestCode = [\" + requestCode + \"], \"+ \"resultCode = [\"+ resultCode+ \"], data = [\"+ data+ \"]\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 238,
        "startLineNumber" : 221,
        "startColumnNumber" : 8,
        "endLineNumber" : 226,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (DEBUG) {\n  Log.d(TAG,\"onActivityResult() called with: \" + \"requestCode = [\" + requestCode + \"], \"+ \"resultCode = [\"+ resultCode+ \"], data = [\"+ data+ \"]\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2704,
        "startLineNumber" : 218,
        "startColumnNumber" : 97,
        "endLineNumber" : 288,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assureCorrectAppLanguage(getContext());\n  super.onActivityResult(requestCode,resultCode,data);\n  if (DEBUG) {\n    Log.d(TAG,\"onActivityResult() called with: \" + \"requestCode = [\" + requestCode + \"], \"+ \"resultCode = [\"+ resultCode+ \"], data = [\"+ data+ \"]\");\n  }\n  if (resultCode != Activity.RESULT_OK) {\n    return;\n  }\n  String key;\n  if (requestCode == REQUEST_DOWNLOAD_VIDEO_PATH) {\n    key=downloadPathVideoPreference;\n  }\n else   if (requestCode == REQUEST_DOWNLOAD_AUDIO_PATH) {\n    key=downloadPathAudioPreference;\n  }\n else {\n    return;\n  }\n  Uri uri=data.getData();\n  if (uri == null) {\n    showMessageDialog(R.string.general_error,R.string.invalid_directory);\n    return;\n  }\n  final Context context=getContext();\n  if (context == null) {\n    throw new NullPointerException(\"getContext()\");\n  }\n  forgetSAFTree(context,defaultPreferences.getString(key,\"\"));\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP && !FilePickerActivityHelper.isOwnFileUri(context,uri)) {\n    try {\n      context.grantUriPermission(context.getPackageName(),uri,StoredDirectoryHelper.PERMISSION_FLAGS);\n      StoredDirectoryHelper mainStorage=new StoredDirectoryHelper(context,uri,null);\n      Log.i(TAG,\"Acquiring tree success from \" + uri.toString());\n      if (!mainStorage.canWrite()) {\n        throw new IOException(\"No write permissions on \" + uri.toString());\n      }\n    }\n catch (    IOException err) {\n      Log.e(TAG,\"Error acquiring tree from \" + uri.toString(),err);\n      showMessageDialog(R.string.general_error,R.string.no_available_dir);\n      return;\n    }\n  }\n else {\n    File target=Utils.getFileForUri(uri);\n    if (!target.canWrite()) {\n      showMessageDialog(R.string.download_to_sdcard_error_title,R.string.download_to_sdcard_error_message);\n      return;\n    }\n    uri=Uri.fromFile(target);\n  }\n  defaultPreferences.edit().putString(key,uri.toString()).apply();\n  updatePreferencesSummary();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 270,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2811,
        "startLineNumber" : 217,
        "startColumnNumber" : 4,
        "endLineNumber" : 288,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void onActivityResult(final int requestCode,final int resultCode,final Intent data){\n  assureCorrectAppLanguage(getContext());\n  super.onActivityResult(requestCode,resultCode,data);\n  if (DEBUG) {\n    Log.d(TAG,\"onActivityResult() called with: \" + \"requestCode = [\" + requestCode + \"], \"+ \"resultCode = [\"+ resultCode+ \"], data = [\"+ data+ \"]\");\n  }\n  if (resultCode != Activity.RESULT_OK) {\n    return;\n  }\n  String key;\n  if (requestCode == REQUEST_DOWNLOAD_VIDEO_PATH) {\n    key=downloadPathVideoPreference;\n  }\n else   if (requestCode == REQUEST_DOWNLOAD_AUDIO_PATH) {\n    key=downloadPathAudioPreference;\n  }\n else {\n    return;\n  }\n  Uri uri=data.getData();\n  if (uri == null) {\n    showMessageDialog(R.string.general_error,R.string.invalid_directory);\n    return;\n  }\n  final Context context=getContext();\n  if (context == null) {\n    throw new NullPointerException(\"getContext()\");\n  }\n  forgetSAFTree(context,defaultPreferences.getString(key,\"\"));\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP && !FilePickerActivityHelper.isOwnFileUri(context,uri)) {\n    try {\n      context.grantUriPermission(context.getPackageName(),uri,StoredDirectoryHelper.PERMISSION_FLAGS);\n      StoredDirectoryHelper mainStorage=new StoredDirectoryHelper(context,uri,null);\n      Log.i(TAG,\"Acquiring tree success from \" + uri.toString());\n      if (!mainStorage.canWrite()) {\n        throw new IOException(\"No write permissions on \" + uri.toString());\n      }\n    }\n catch (    IOException err) {\n      Log.e(TAG,\"Error acquiring tree from \" + uri.toString(),err);\n      showMessageDialog(R.string.general_error,R.string.no_available_dir);\n      return;\n    }\n  }\n else {\n    File target=Utils.getFileForUri(uri);\n    if (!target.canWrite()) {\n      showMessageDialog(R.string.download_to_sdcard_error_title,R.string.download_to_sdcard_error_message);\n      return;\n    }\n    uri=Uri.fromFile(target);\n  }\n  defaultPreferences.edit().putString(key,uri.toString()).apply();\n  updatePreferencesSummary();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 289,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 177,
        "startLineNumber" : 222,
        "startColumnNumber" : 23,
        "endLineNumber" : 224,
        "endColumnNumber" : 80
      },
      "nodeContext" : "\"onActivityResult() called with: \" + \"requestCode = [\" + requestCode + \"], \"+ \"resultCode = [\"+ resultCode+ \"], data = [\"+ data+ \"]\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "resultCode",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 228,
      "startColumnNumber" : 12,
      "endLineNumber" : 228,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 228,
        "startColumnNumber" : 12,
        "endLineNumber" : 228,
        "endColumnNumber" : 44
      },
      "nodeContext" : "resultCode != Activity.RESULT_OK",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 228,
        "startColumnNumber" : 8,
        "endLineNumber" : 230,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (resultCode != Activity.RESULT_OK) {\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2704,
        "startLineNumber" : 218,
        "startColumnNumber" : 97,
        "endLineNumber" : 288,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assureCorrectAppLanguage(getContext());\n  super.onActivityResult(requestCode,resultCode,data);\n  if (DEBUG) {\n    Log.d(TAG,\"onActivityResult() called with: \" + \"requestCode = [\" + requestCode + \"], \"+ \"resultCode = [\"+ resultCode+ \"], data = [\"+ data+ \"]\");\n  }\n  if (resultCode != Activity.RESULT_OK) {\n    return;\n  }\n  String key;\n  if (requestCode == REQUEST_DOWNLOAD_VIDEO_PATH) {\n    key=downloadPathVideoPreference;\n  }\n else   if (requestCode == REQUEST_DOWNLOAD_AUDIO_PATH) {\n    key=downloadPathAudioPreference;\n  }\n else {\n    return;\n  }\n  Uri uri=data.getData();\n  if (uri == null) {\n    showMessageDialog(R.string.general_error,R.string.invalid_directory);\n    return;\n  }\n  final Context context=getContext();\n  if (context == null) {\n    throw new NullPointerException(\"getContext()\");\n  }\n  forgetSAFTree(context,defaultPreferences.getString(key,\"\"));\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP && !FilePickerActivityHelper.isOwnFileUri(context,uri)) {\n    try {\n      context.grantUriPermission(context.getPackageName(),uri,StoredDirectoryHelper.PERMISSION_FLAGS);\n      StoredDirectoryHelper mainStorage=new StoredDirectoryHelper(context,uri,null);\n      Log.i(TAG,\"Acquiring tree success from \" + uri.toString());\n      if (!mainStorage.canWrite()) {\n        throw new IOException(\"No write permissions on \" + uri.toString());\n      }\n    }\n catch (    IOException err) {\n      Log.e(TAG,\"Error acquiring tree from \" + uri.toString(),err);\n      showMessageDialog(R.string.general_error,R.string.no_available_dir);\n      return;\n    }\n  }\n else {\n    File target=Utils.getFileForUri(uri);\n    if (!target.canWrite()) {\n      showMessageDialog(R.string.download_to_sdcard_error_title,R.string.download_to_sdcard_error_message);\n      return;\n    }\n    uri=Uri.fromFile(target);\n  }\n  defaultPreferences.edit().putString(key,uri.toString()).apply();\n  updatePreferencesSummary();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 270,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2811,
        "startLineNumber" : 217,
        "startColumnNumber" : 4,
        "endLineNumber" : 288,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void onActivityResult(final int requestCode,final int resultCode,final Intent data){\n  assureCorrectAppLanguage(getContext());\n  super.onActivityResult(requestCode,resultCode,data);\n  if (DEBUG) {\n    Log.d(TAG,\"onActivityResult() called with: \" + \"requestCode = [\" + requestCode + \"], \"+ \"resultCode = [\"+ resultCode+ \"], data = [\"+ data+ \"]\");\n  }\n  if (resultCode != Activity.RESULT_OK) {\n    return;\n  }\n  String key;\n  if (requestCode == REQUEST_DOWNLOAD_VIDEO_PATH) {\n    key=downloadPathVideoPreference;\n  }\n else   if (requestCode == REQUEST_DOWNLOAD_AUDIO_PATH) {\n    key=downloadPathAudioPreference;\n  }\n else {\n    return;\n  }\n  Uri uri=data.getData();\n  if (uri == null) {\n    showMessageDialog(R.string.general_error,R.string.invalid_directory);\n    return;\n  }\n  final Context context=getContext();\n  if (context == null) {\n    throw new NullPointerException(\"getContext()\");\n  }\n  forgetSAFTree(context,defaultPreferences.getString(key,\"\"));\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP && !FilePickerActivityHelper.isOwnFileUri(context,uri)) {\n    try {\n      context.grantUriPermission(context.getPackageName(),uri,StoredDirectoryHelper.PERMISSION_FLAGS);\n      StoredDirectoryHelper mainStorage=new StoredDirectoryHelper(context,uri,null);\n      Log.i(TAG,\"Acquiring tree success from \" + uri.toString());\n      if (!mainStorage.canWrite()) {\n        throw new IOException(\"No write permissions on \" + uri.toString());\n      }\n    }\n catch (    IOException err) {\n      Log.e(TAG,\"Error acquiring tree from \" + uri.toString(),err);\n      showMessageDialog(R.string.general_error,R.string.no_available_dir);\n      return;\n    }\n  }\n else {\n    File target=Utils.getFileForUri(uri);\n    if (!target.canWrite()) {\n      showMessageDialog(R.string.download_to_sdcard_error_title,R.string.download_to_sdcard_error_message);\n      return;\n    }\n    uri=Uri.fromFile(target);\n  }\n  defaultPreferences.edit().putString(key,uri.toString()).apply();\n  updatePreferencesSummary();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 289,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 228,
        "startColumnNumber" : 12,
        "endLineNumber" : 228,
        "endColumnNumber" : 44
      },
      "nodeContext" : "resultCode != Activity.RESULT_OK",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 220,
    "startColumnNumber" : 44,
    "endLineNumber" : 220,
    "endColumnNumber" : 54
  }, {
    "charLength" : 10,
    "startLineNumber" : 224,
    "startColumnNumber" : 41,
    "endLineNumber" : 224,
    "endColumnNumber" : 51
  }, {
    "charLength" : 10,
    "startLineNumber" : 228,
    "startColumnNumber" : 12,
    "endLineNumber" : 228,
    "endColumnNumber" : 22
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}