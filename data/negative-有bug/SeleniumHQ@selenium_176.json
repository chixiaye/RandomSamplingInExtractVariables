{
  "id" : 176,
  "expression" : "Boolean",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/buildtools/src/dev/selenium/tools/maven/MavenPublisher.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Boolean",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 61,
      "startColumnNumber" : 64,
      "endLineNumber" : 61,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 61,
        "startColumnNumber" : 64,
        "endLineNumber" : 61,
        "endColumnNumber" : 93
      },
      "nodeContext" : "Boolean.parseBoolean(args[1])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 61,
        "startColumnNumber" : 30,
        "endLineNumber" : 61,
        "endColumnNumber" : 94
      },
      "nodeContext" : "new Credentials(args[2],args[3],Boolean.parseBoolean(args[1]))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 61,
        "startColumnNumber" : 16,
        "endLineNumber" : 61,
        "endColumnNumber" : 94
      },
      "nodeContext" : "credentials=new Credentials(args[2],args[3],Boolean.parseBoolean(args[1]))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 95
      },
      "nodeContext" : "Credentials credentials=new Credentials(args[2],args[3],Boolean.parseBoolean(args[1]));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1202,
        "startLineNumber" : 55,
        "startColumnNumber" : 120,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String repo=args[0];\n  if (!(repo.startsWith(\"file://\") || repo.startsWith(\"https://\"))) {\n    throw new IllegalArgumentException(\"Repository must be accessed via file or https: \" + repo);\n  }\n  Credentials credentials=new Credentials(args[2],args[3],Boolean.parseBoolean(args[1]));\n  List<String> parts=Splitter.on(':').splitToList(args[4]);\n  if (parts.size() != 3) {\n    throw new IllegalArgumentException(\"Coordinates must be a triplet: \" + Arrays.toString(args));\n  }\n  Coordinates coords=new Coordinates(parts.get(0),parts.get(1),parts.get(2));\n  Path pom=Paths.get(args[5]);\n  Path binJar=Paths.get(args[6]);\n  Path srcJar=Paths.get(args[7]);\n  Path docJar=Paths.get(args[8]);\n  try {\n    CompletableFuture<Void> all=CompletableFuture.allOf(upload(repo,credentials,coords,\".pom\",pom),upload(repo,credentials,coords,\".jar\",binJar),upload(repo,credentials,coords,\"-sources.jar\",srcJar),upload(repo,credentials,coords,\"-javadoc.jar\",docJar));\n    all.get(30,MINUTES);\n  }\n  finally {\n    EXECUTOR.shutdown();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 199,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1320,
        "startLineNumber" : 55,
        "startColumnNumber" : 2,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static void main(String[] args) throws IOException, InterruptedException, ExecutionException, TimeoutException {\n  String repo=args[0];\n  if (!(repo.startsWith(\"file://\") || repo.startsWith(\"https://\"))) {\n    throw new IllegalArgumentException(\"Repository must be accessed via file or https: \" + repo);\n  }\n  Credentials credentials=new Credentials(args[2],args[3],Boolean.parseBoolean(args[1]));\n  List<String> parts=Splitter.on(':').splitToList(args[4]);\n  if (parts.size() != 3) {\n    throw new IllegalArgumentException(\"Coordinates must be a triplet: \" + Arrays.toString(args));\n  }\n  Coordinates coords=new Coordinates(parts.get(0),parts.get(1),parts.get(2));\n  Path pom=Paths.get(args[5]);\n  Path binJar=Paths.get(args[6]);\n  Path srcJar=Paths.get(args[7]);\n  Path docJar=Paths.get(args[8]);\n  try {\n    CompletableFuture<Void> all=CompletableFuture.allOf(upload(repo,credentials,coords,\".pom\",pom),upload(repo,credentials,coords,\".jar\",binJar),upload(repo,credentials,coords,\"-sources.jar\",srcJar),upload(repo,credentials,coords,\"-javadoc.jar\",docJar));\n    all.get(30,MINUTES);\n  }\n  finally {\n    EXECUTOR.shutdown();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 218,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 95
      },
      "nodeContext" : "Credentials credentials=new Credentials(args[2],args[3],Boolean.parseBoolean(args[1]));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.Boolean"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 61,
    "startColumnNumber" : 64,
    "endLineNumber" : 61,
    "endColumnNumber" : 71
  } ],
  "layoutRelationDataList" : [ ]
}