{
  "id" : 479,
  "expression" : "left",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-expression/src/main/java/org/springframework/expression/spel/ast/OpOr.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "left",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 76,
      "startColumnNumber" : 10,
      "endLineNumber" : 76,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 76,
        "startColumnNumber" : 10,
        "endLineNumber" : 76,
        "endColumnNumber" : 29
      },
      "nodeContext" : "left.isCompilable()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 166,
        "startLineNumber" : 76,
        "startColumnNumber" : 10,
        "endLineNumber" : 78,
        "endColumnNumber" : 58
      },
      "nodeContext" : "left.isCompilable() && right.isCompilable() && CodeFlow.isBooleanCompatible(left.exitTypeDescriptor)&& CodeFlow.isBooleanCompatible(right.exitTypeDescriptor)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 19,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 76,
        "startColumnNumber" : 9,
        "endLineNumber" : 78,
        "endColumnNumber" : 59
      },
      "nodeContext" : "(left.isCompilable() && right.isCompilable() && CodeFlow.isBooleanCompatible(left.exitTypeDescriptor)&& CodeFlow.isBooleanCompatible(right.exitTypeDescriptor))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 176,
        "startLineNumber" : 76,
        "startColumnNumber" : 2,
        "endLineNumber" : 78,
        "endColumnNumber" : 60
      },
      "nodeContext" : "return (left.isCompilable() && right.isCompilable() && CodeFlow.isBooleanCompatible(left.exitTypeDescriptor)&& CodeFlow.isBooleanCompatible(right.exitTypeDescriptor));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 265,
        "startLineNumber" : 73,
        "startColumnNumber" : 31,
        "endLineNumber" : 79,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  SpelNodeImpl left=getLeftOperand();\n  SpelNodeImpl right=getRightOperand();\n  return (left.isCompilable() && right.isCompilable() && CodeFlow.isBooleanCompatible(left.exitTypeDescriptor)&& CodeFlow.isBooleanCompatible(right.exitTypeDescriptor));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 306,
        "startLineNumber" : 72,
        "startColumnNumber" : 1,
        "endLineNumber" : 79,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public boolean isCompilable(){\n  SpelNodeImpl left=getLeftOperand();\n  SpelNodeImpl right=getRightOperand();\n  return (left.isCompilable() && right.isCompilable() && CodeFlow.isBooleanCompatible(left.exitTypeDescriptor)&& CodeFlow.isBooleanCompatible(right.exitTypeDescriptor));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 42,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 76,
        "startColumnNumber" : 10,
        "endLineNumber" : 76,
        "endColumnNumber" : 29
      },
      "nodeContext" : "left.isCompilable()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.springframework.expression.spel.ast.SpelNodeImpl"
  }, {
    "nodeContext" : "left",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 77,
      "startColumnNumber" : 33,
      "endLineNumber" : 77,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 77,
        "startColumnNumber" : 33,
        "endLineNumber" : 77,
        "endColumnNumber" : 56
      },
      "nodeContext" : "left.exitTypeDescriptor",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 77,
        "startColumnNumber" : 4,
        "endLineNumber" : 77,
        "endColumnNumber" : 57
      },
      "nodeContext" : "CodeFlow.isBooleanCompatible(left.exitTypeDescriptor)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 166,
        "startLineNumber" : 76,
        "startColumnNumber" : 10,
        "endLineNumber" : 78,
        "endColumnNumber" : 58
      },
      "nodeContext" : "left.isCompilable() && right.isCompilable() && CodeFlow.isBooleanCompatible(left.exitTypeDescriptor)&& CodeFlow.isBooleanCompatible(right.exitTypeDescriptor)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 19,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 76,
        "startColumnNumber" : 9,
        "endLineNumber" : 78,
        "endColumnNumber" : 59
      },
      "nodeContext" : "(left.isCompilable() && right.isCompilable() && CodeFlow.isBooleanCompatible(left.exitTypeDescriptor)&& CodeFlow.isBooleanCompatible(right.exitTypeDescriptor))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 176,
        "startLineNumber" : 76,
        "startColumnNumber" : 2,
        "endLineNumber" : 78,
        "endColumnNumber" : 60
      },
      "nodeContext" : "return (left.isCompilable() && right.isCompilable() && CodeFlow.isBooleanCompatible(left.exitTypeDescriptor)&& CodeFlow.isBooleanCompatible(right.exitTypeDescriptor));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 265,
        "startLineNumber" : 73,
        "startColumnNumber" : 31,
        "endLineNumber" : 79,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  SpelNodeImpl left=getLeftOperand();\n  SpelNodeImpl right=getRightOperand();\n  return (left.isCompilable() && right.isCompilable() && CodeFlow.isBooleanCompatible(left.exitTypeDescriptor)&& CodeFlow.isBooleanCompatible(right.exitTypeDescriptor));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 306,
        "startLineNumber" : 72,
        "startColumnNumber" : 1,
        "endLineNumber" : 79,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public boolean isCompilable(){\n  SpelNodeImpl left=getLeftOperand();\n  SpelNodeImpl right=getRightOperand();\n  return (left.isCompilable() && right.isCompilable() && CodeFlow.isBooleanCompatible(left.exitTypeDescriptor)&& CodeFlow.isBooleanCompatible(right.exitTypeDescriptor));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 42,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 77,
        "startColumnNumber" : 4,
        "endLineNumber" : 77,
        "endColumnNumber" : 57
      },
      "nodeContext" : "CodeFlow.isBooleanCompatible(left.exitTypeDescriptor)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.springframework.expression.spel.ast.SpelNodeImpl"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 76,
    "startColumnNumber" : 10,
    "endLineNumber" : 76,
    "endColumnNumber" : 14
  }, {
    "charLength" : 4,
    "startLineNumber" : 77,
    "startColumnNumber" : 33,
    "endLineNumber" : 77,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}