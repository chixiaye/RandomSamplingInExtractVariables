{
  "id" : 172,
  "expression" : "asList(zeroOne)",
  "projectName" : "openzipkin@zipkin",
  "commitID" : "f02a993656f506277ca83737ddf494ed45fde4b3",
  "filePath" : "/zipkin-tests/src/test/java/zipkin2/storage/GroupByTraceIdTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "asList(zeroOne)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 38,
      "startColumnNumber" : 55,
      "endLineNumber" : 38,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 38,
        "endColumnNumber" : 71
      },
      "nodeContext" : "assertThat(GroupByTraceId.create(true).map(spans)).containsExactly(asList(oneOne),asList(twoOne),asList(zeroOne))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 38,
        "endColumnNumber" : 72
      },
      "nodeContext" : "assertThat(GroupByTraceId.create(true).map(spans)).containsExactly(asList(oneOne),asList(twoOne),asList(zeroOne));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 190,
        "startLineNumber" : 34,
        "startColumnNumber" : 55,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<Span> spans=asList(oneOne,twoOne,zeroOne);\n  assertThat(GroupByTraceId.create(true).map(spans)).containsExactly(asList(oneOne),asList(twoOne),asList(zeroOne));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 243,
        "startLineNumber" : 34,
        "startColumnNumber" : 2,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void map_groupsByTraceIdHighWheStrict(){\n  List<Span> spans=asList(oneOne,twoOne,zeroOne);\n  assertThat(GroupByTraceId.create(true).map(spans)).containsExactly(asList(oneOne),asList(twoOne),asList(zeroOne));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 41,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 38,
        "endColumnNumber" : 71
      },
      "nodeContext" : "assertThat(GroupByTraceId.create(true).map(spans)).containsExactly(asList(oneOne),asList(twoOne),asList(zeroOne))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.util.List<zipkin2.Span>"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 38,
    "startColumnNumber" : 55,
    "endLineNumber" : 38,
    "endColumnNumber" : 70
  } ],
  "layoutRelationDataList" : [ ]
}