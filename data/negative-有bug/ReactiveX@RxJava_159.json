{
  "id" : 159,
  "expression" : "(vitNext=vit.hasNext())",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/main/java/io/reactivex/observers/TestObserver.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(vitNext=vit.hasNext())",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 536,
      "startColumnNumber" : 42,
      "endLineNumber" : 536,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 6,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 536,
        "startColumnNumber" : 15,
        "endLineNumber" : 536,
        "endColumnNumber" : 67
      },
      "nodeContext" : "(itNext=it.hasNext()) && (vitNext=vit.hasNext())",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 366,
        "startLineNumber" : 536,
        "startColumnNumber" : 8,
        "endLineNumber" : 544,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while ((itNext=it.hasNext()) && (vitNext=vit.hasNext())) {\n  T v=it.next();\n  T u=vit.next();\n  if (!Objects.equals(u,v)) {\n    fail(prefix,\"Values at position \" + i + \" differ; Expected: \"+ valueAndClass(u)+ \", Actual: \"+ valueAndClass(v),errors);\n  }\n  i++;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 58,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 977,
        "startLineNumber" : 526,
        "startColumnNumber" : 74,
        "endLineNumber" : 552,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String prefix=\"\";\n  if (done.getCount() != 0) {\n    prefix=\"Subscriber still running! \";\n  }\n  int i=0;\n  Iterator<T> vit=values.iterator();\n  Iterator<? extends T> it=sequence.iterator();\n  boolean itNext=false;\n  boolean vitNext=false;\n  while ((itNext=it.hasNext()) && (vitNext=vit.hasNext())) {\n    T v=it.next();\n    T u=vit.next();\n    if (!Objects.equals(u,v)) {\n      fail(prefix,\"Values at position \" + i + \" differ; Expected: \"+ valueAndClass(u)+ \", Actual: \"+ valueAndClass(v),errors);\n    }\n    i++;\n  }\n  if (itNext && !vitNext) {\n    fail(prefix,\"More values received than expected (\" + i + \")\",errors);\n  }\n  if (!itNext && !vitNext) {\n    fail(prefix,\"Fever values received than expected (\" + i + \")\",errors);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 145,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1235,
        "startLineNumber" : 522,
        "startColumnNumber" : 4,
        "endLineNumber" : 552,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Assert that the TestSubscriber received only the specified sequence of values in the same order.\n * @param sequence the sequence of expected values in order\n */\npublic final void assertValueSequence(Iterable<? extends T> sequence){\n  String prefix=\"\";\n  if (done.getCount() != 0) {\n    prefix=\"Subscriber still running! \";\n  }\n  int i=0;\n  Iterator<T> vit=values.iterator();\n  Iterator<? extends T> it=sequence.iterator();\n  boolean itNext=false;\n  boolean vitNext=false;\n  while ((itNext=it.hasNext()) && (vitNext=vit.hasNext())) {\n    T v=it.next();\n    T u=vit.next();\n    if (!Objects.equals(u,v)) {\n      fail(prefix,\"Values at position \" + i + \" differ; Expected: \"+ valueAndClass(u)+ \", Actual: \"+ valueAndClass(v),errors);\n    }\n    i++;\n  }\n  if (itNext && !vitNext) {\n    fail(prefix,\"More values received than expected (\" + i + \")\",errors);\n  }\n  if (!itNext && !vitNext) {\n    fail(prefix,\"Fever values received than expected (\" + i + \")\",errors);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 159,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 536,
        "startColumnNumber" : 15,
        "endLineNumber" : 536,
        "endColumnNumber" : 67
      },
      "nodeContext" : "(itNext=it.hasNext()) && (vitNext=vit.hasNext())",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 536,
    "startColumnNumber" : 42,
    "endLineNumber" : 536,
    "endColumnNumber" : 67
  } ],
  "layoutRelationDataList" : [ ]
}