{
  "id" : 298,
  "expression" : "atIndex",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-common/src/main/java/org/apache/pulsar/common/net/ServiceURI.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "atIndex",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 143,
      "startColumnNumber" : 12,
      "endLineNumber" : 143,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 143,
        "startColumnNumber" : 12,
        "endLineNumber" : 143,
        "endColumnNumber" : 23
      },
      "nodeContext" : "atIndex > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 318,
        "startLineNumber" : 143,
        "startColumnNumber" : 8,
        "endLineNumber" : 149,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (atIndex > 0) {\n  serviceUser=userAndHostInformation.substring(0,atIndex);\n  serviceHosts=splitter.splitToList(userAndHostInformation.substring(atIndex + 1));\n}\n else {\n  serviceUser=null;\n  serviceHosts=splitter.splitToList(userAndHostInformation);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 37,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1928,
        "startLineNumber" : 117,
        "startColumnNumber" : 45,
        "endLineNumber" : 166,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  checkNotNull(uri,\"service uri instance is null\");\n  String serviceName;\n  final String[] serviceInfos;\n  String scheme=uri.getScheme();\n  if (null != scheme) {\n    scheme=scheme.toLowerCase();\n    final String serviceSep=\"+\";\n    String[] schemeParts=StringUtils.split(scheme,serviceSep);\n    serviceName=schemeParts[0];\n    serviceInfos=new String[schemeParts.length - 1];\n    System.arraycopy(schemeParts,1,serviceInfos,0,serviceInfos.length);\n  }\n else {\n    serviceName=null;\n    serviceInfos=new String[0];\n  }\n  String userAndHostInformation=uri.getAuthority();\n  checkArgument(!Strings.isNullOrEmpty(userAndHostInformation),\"authority component is missing in service uri : \" + uri);\n  String serviceUser;\n  List<String> serviceHosts;\n  int atIndex=userAndHostInformation.indexOf('@');\n  Splitter splitter=Splitter.on(CharMatcher.anyOf(\",;\"));\n  if (atIndex > 0) {\n    serviceUser=userAndHostInformation.substring(0,atIndex);\n    serviceHosts=splitter.splitToList(userAndHostInformation.substring(atIndex + 1));\n  }\n else {\n    serviceUser=null;\n    serviceHosts=splitter.splitToList(userAndHostInformation);\n  }\n  serviceHosts=serviceHosts.stream().map(host -> validateHostName(serviceName,serviceInfos,host)).collect(Collectors.toList());\n  String servicePath=uri.getPath();\n  checkArgument(null != servicePath,\"service path component is missing in service uri : \" + uri);\n  return new ServiceURI(serviceName,serviceInfos,serviceUser,serviceHosts.toArray(new String[serviceHosts.size()]),servicePath,uri);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 248,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2280,
        "startLineNumber" : 109,
        "startColumnNumber" : 4,
        "endLineNumber" : 166,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Create a service uri instance from a  {@link URI} instance.\n * @param uri {@link URI} instance\n * @return a service uri instance\n * @throws NullPointerException if {@code uriStr} is null\n * @throws IllegalArgumentException if the given string violates RFC&nbsp;2396\n */\npublic static ServiceURI create(URI uri){\n  checkNotNull(uri,\"service uri instance is null\");\n  String serviceName;\n  final String[] serviceInfos;\n  String scheme=uri.getScheme();\n  if (null != scheme) {\n    scheme=scheme.toLowerCase();\n    final String serviceSep=\"+\";\n    String[] schemeParts=StringUtils.split(scheme,serviceSep);\n    serviceName=schemeParts[0];\n    serviceInfos=new String[schemeParts.length - 1];\n    System.arraycopy(schemeParts,1,serviceInfos,0,serviceInfos.length);\n  }\n else {\n    serviceName=null;\n    serviceInfos=new String[0];\n  }\n  String userAndHostInformation=uri.getAuthority();\n  checkArgument(!Strings.isNullOrEmpty(userAndHostInformation),\"authority component is missing in service uri : \" + uri);\n  String serviceUser;\n  List<String> serviceHosts;\n  int atIndex=userAndHostInformation.indexOf('@');\n  Splitter splitter=Splitter.on(CharMatcher.anyOf(\",;\"));\n  if (atIndex > 0) {\n    serviceUser=userAndHostInformation.substring(0,atIndex);\n    serviceHosts=splitter.splitToList(userAndHostInformation.substring(atIndex + 1));\n  }\n else {\n    serviceUser=null;\n    serviceHosts=splitter.splitToList(userAndHostInformation);\n  }\n  serviceHosts=serviceHosts.stream().map(host -> validateHostName(serviceName,serviceInfos,host)).collect(Collectors.toList());\n  String servicePath=uri.getPath();\n  checkArgument(null != servicePath,\"service path component is missing in service uri : \" + uri);\n  return new ServiceURI(serviceName,serviceInfos,serviceUser,serviceHosts.toArray(new String[serviceHosts.size()]),servicePath,uri);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 259,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 143,
        "startColumnNumber" : 12,
        "endLineNumber" : 143,
        "endColumnNumber" : 23
      },
      "nodeContext" : "atIndex > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "atIndex",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 144,
      "startColumnNumber" : 62,
      "endLineNumber" : 144,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 144,
        "startColumnNumber" : 26,
        "endLineNumber" : 144,
        "endColumnNumber" : 70
      },
      "nodeContext" : "userAndHostInformation.substring(0,atIndex)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 144,
        "startColumnNumber" : 12,
        "endLineNumber" : 144,
        "endColumnNumber" : 70
      },
      "nodeContext" : "serviceUser=userAndHostInformation.substring(0,atIndex)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 144,
        "startColumnNumber" : 12,
        "endLineNumber" : 144,
        "endColumnNumber" : 71
      },
      "nodeContext" : "serviceUser=userAndHostInformation.substring(0,atIndex);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 179,
        "startLineNumber" : 143,
        "startColumnNumber" : 25,
        "endLineNumber" : 146,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  serviceUser=userAndHostInformation.substring(0,atIndex);\n  serviceHosts=splitter.splitToList(userAndHostInformation.substring(atIndex + 1));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 318,
        "startLineNumber" : 143,
        "startColumnNumber" : 8,
        "endLineNumber" : 149,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (atIndex > 0) {\n  serviceUser=userAndHostInformation.substring(0,atIndex);\n  serviceHosts=splitter.splitToList(userAndHostInformation.substring(atIndex + 1));\n}\n else {\n  serviceUser=null;\n  serviceHosts=splitter.splitToList(userAndHostInformation);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 37,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1928,
        "startLineNumber" : 117,
        "startColumnNumber" : 45,
        "endLineNumber" : 166,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  checkNotNull(uri,\"service uri instance is null\");\n  String serviceName;\n  final String[] serviceInfos;\n  String scheme=uri.getScheme();\n  if (null != scheme) {\n    scheme=scheme.toLowerCase();\n    final String serviceSep=\"+\";\n    String[] schemeParts=StringUtils.split(scheme,serviceSep);\n    serviceName=schemeParts[0];\n    serviceInfos=new String[schemeParts.length - 1];\n    System.arraycopy(schemeParts,1,serviceInfos,0,serviceInfos.length);\n  }\n else {\n    serviceName=null;\n    serviceInfos=new String[0];\n  }\n  String userAndHostInformation=uri.getAuthority();\n  checkArgument(!Strings.isNullOrEmpty(userAndHostInformation),\"authority component is missing in service uri : \" + uri);\n  String serviceUser;\n  List<String> serviceHosts;\n  int atIndex=userAndHostInformation.indexOf('@');\n  Splitter splitter=Splitter.on(CharMatcher.anyOf(\",;\"));\n  if (atIndex > 0) {\n    serviceUser=userAndHostInformation.substring(0,atIndex);\n    serviceHosts=splitter.splitToList(userAndHostInformation.substring(atIndex + 1));\n  }\n else {\n    serviceUser=null;\n    serviceHosts=splitter.splitToList(userAndHostInformation);\n  }\n  serviceHosts=serviceHosts.stream().map(host -> validateHostName(serviceName,serviceInfos,host)).collect(Collectors.toList());\n  String servicePath=uri.getPath();\n  checkArgument(null != servicePath,\"service path component is missing in service uri : \" + uri);\n  return new ServiceURI(serviceName,serviceInfos,serviceUser,serviceHosts.toArray(new String[serviceHosts.size()]),servicePath,uri);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 248,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2280,
        "startLineNumber" : 109,
        "startColumnNumber" : 4,
        "endLineNumber" : 166,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Create a service uri instance from a  {@link URI} instance.\n * @param uri {@link URI} instance\n * @return a service uri instance\n * @throws NullPointerException if {@code uriStr} is null\n * @throws IllegalArgumentException if the given string violates RFC&nbsp;2396\n */\npublic static ServiceURI create(URI uri){\n  checkNotNull(uri,\"service uri instance is null\");\n  String serviceName;\n  final String[] serviceInfos;\n  String scheme=uri.getScheme();\n  if (null != scheme) {\n    scheme=scheme.toLowerCase();\n    final String serviceSep=\"+\";\n    String[] schemeParts=StringUtils.split(scheme,serviceSep);\n    serviceName=schemeParts[0];\n    serviceInfos=new String[schemeParts.length - 1];\n    System.arraycopy(schemeParts,1,serviceInfos,0,serviceInfos.length);\n  }\n else {\n    serviceName=null;\n    serviceInfos=new String[0];\n  }\n  String userAndHostInformation=uri.getAuthority();\n  checkArgument(!Strings.isNullOrEmpty(userAndHostInformation),\"authority component is missing in service uri : \" + uri);\n  String serviceUser;\n  List<String> serviceHosts;\n  int atIndex=userAndHostInformation.indexOf('@');\n  Splitter splitter=Splitter.on(CharMatcher.anyOf(\",;\"));\n  if (atIndex > 0) {\n    serviceUser=userAndHostInformation.substring(0,atIndex);\n    serviceHosts=splitter.splitToList(userAndHostInformation.substring(atIndex + 1));\n  }\n else {\n    serviceUser=null;\n    serviceHosts=splitter.splitToList(userAndHostInformation);\n  }\n  serviceHosts=serviceHosts.stream().map(host -> validateHostName(serviceName,serviceInfos,host)).collect(Collectors.toList());\n  String servicePath=uri.getPath();\n  checkArgument(null != servicePath,\"service path component is missing in service uri : \" + uri);\n  return new ServiceURI(serviceName,serviceInfos,serviceUser,serviceHosts.toArray(new String[serviceHosts.size()]),servicePath,uri);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 259,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 144,
        "startColumnNumber" : 12,
        "endLineNumber" : 144,
        "endColumnNumber" : 71
      },
      "nodeContext" : "serviceUser=userAndHostInformation.substring(0,atIndex);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "atIndex",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 145,
      "startColumnNumber" : 81,
      "endLineNumber" : 145,
      "endColumnNumber" : 88
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 145,
        "startColumnNumber" : 81,
        "endLineNumber" : 145,
        "endColumnNumber" : 92
      },
      "nodeContext" : "atIndex + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 145,
        "startColumnNumber" : 48,
        "endLineNumber" : 145,
        "endColumnNumber" : 93
      },
      "nodeContext" : "userAndHostInformation.substring(atIndex + 1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 145,
        "startColumnNumber" : 27,
        "endLineNumber" : 145,
        "endColumnNumber" : 94
      },
      "nodeContext" : "splitter.splitToList(userAndHostInformation.substring(atIndex + 1))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 145,
        "startColumnNumber" : 12,
        "endLineNumber" : 145,
        "endColumnNumber" : 94
      },
      "nodeContext" : "serviceHosts=splitter.splitToList(userAndHostInformation.substring(atIndex + 1))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 145,
        "startColumnNumber" : 12,
        "endLineNumber" : 145,
        "endColumnNumber" : 95
      },
      "nodeContext" : "serviceHosts=splitter.splitToList(userAndHostInformation.substring(atIndex + 1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 179,
        "startLineNumber" : 143,
        "startColumnNumber" : 25,
        "endLineNumber" : 146,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  serviceUser=userAndHostInformation.substring(0,atIndex);\n  serviceHosts=splitter.splitToList(userAndHostInformation.substring(atIndex + 1));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 318,
        "startLineNumber" : 143,
        "startColumnNumber" : 8,
        "endLineNumber" : 149,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (atIndex > 0) {\n  serviceUser=userAndHostInformation.substring(0,atIndex);\n  serviceHosts=splitter.splitToList(userAndHostInformation.substring(atIndex + 1));\n}\n else {\n  serviceUser=null;\n  serviceHosts=splitter.splitToList(userAndHostInformation);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 37,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1928,
        "startLineNumber" : 117,
        "startColumnNumber" : 45,
        "endLineNumber" : 166,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  checkNotNull(uri,\"service uri instance is null\");\n  String serviceName;\n  final String[] serviceInfos;\n  String scheme=uri.getScheme();\n  if (null != scheme) {\n    scheme=scheme.toLowerCase();\n    final String serviceSep=\"+\";\n    String[] schemeParts=StringUtils.split(scheme,serviceSep);\n    serviceName=schemeParts[0];\n    serviceInfos=new String[schemeParts.length - 1];\n    System.arraycopy(schemeParts,1,serviceInfos,0,serviceInfos.length);\n  }\n else {\n    serviceName=null;\n    serviceInfos=new String[0];\n  }\n  String userAndHostInformation=uri.getAuthority();\n  checkArgument(!Strings.isNullOrEmpty(userAndHostInformation),\"authority component is missing in service uri : \" + uri);\n  String serviceUser;\n  List<String> serviceHosts;\n  int atIndex=userAndHostInformation.indexOf('@');\n  Splitter splitter=Splitter.on(CharMatcher.anyOf(\",;\"));\n  if (atIndex > 0) {\n    serviceUser=userAndHostInformation.substring(0,atIndex);\n    serviceHosts=splitter.splitToList(userAndHostInformation.substring(atIndex + 1));\n  }\n else {\n    serviceUser=null;\n    serviceHosts=splitter.splitToList(userAndHostInformation);\n  }\n  serviceHosts=serviceHosts.stream().map(host -> validateHostName(serviceName,serviceInfos,host)).collect(Collectors.toList());\n  String servicePath=uri.getPath();\n  checkArgument(null != servicePath,\"service path component is missing in service uri : \" + uri);\n  return new ServiceURI(serviceName,serviceInfos,serviceUser,serviceHosts.toArray(new String[serviceHosts.size()]),servicePath,uri);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 248,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2280,
        "startLineNumber" : 109,
        "startColumnNumber" : 4,
        "endLineNumber" : 166,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Create a service uri instance from a  {@link URI} instance.\n * @param uri {@link URI} instance\n * @return a service uri instance\n * @throws NullPointerException if {@code uriStr} is null\n * @throws IllegalArgumentException if the given string violates RFC&nbsp;2396\n */\npublic static ServiceURI create(URI uri){\n  checkNotNull(uri,\"service uri instance is null\");\n  String serviceName;\n  final String[] serviceInfos;\n  String scheme=uri.getScheme();\n  if (null != scheme) {\n    scheme=scheme.toLowerCase();\n    final String serviceSep=\"+\";\n    String[] schemeParts=StringUtils.split(scheme,serviceSep);\n    serviceName=schemeParts[0];\n    serviceInfos=new String[schemeParts.length - 1];\n    System.arraycopy(schemeParts,1,serviceInfos,0,serviceInfos.length);\n  }\n else {\n    serviceName=null;\n    serviceInfos=new String[0];\n  }\n  String userAndHostInformation=uri.getAuthority();\n  checkArgument(!Strings.isNullOrEmpty(userAndHostInformation),\"authority component is missing in service uri : \" + uri);\n  String serviceUser;\n  List<String> serviceHosts;\n  int atIndex=userAndHostInformation.indexOf('@');\n  Splitter splitter=Splitter.on(CharMatcher.anyOf(\",;\"));\n  if (atIndex > 0) {\n    serviceUser=userAndHostInformation.substring(0,atIndex);\n    serviceHosts=splitter.splitToList(userAndHostInformation.substring(atIndex + 1));\n  }\n else {\n    serviceUser=null;\n    serviceHosts=splitter.splitToList(userAndHostInformation);\n  }\n  serviceHosts=serviceHosts.stream().map(host -> validateHostName(serviceName,serviceInfos,host)).collect(Collectors.toList());\n  String servicePath=uri.getPath();\n  checkArgument(null != servicePath,\"service path component is missing in service uri : \" + uri);\n  return new ServiceURI(serviceName,serviceInfos,serviceUser,serviceHosts.toArray(new String[serviceHosts.size()]),servicePath,uri);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 259,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 145,
        "startColumnNumber" : 12,
        "endLineNumber" : 145,
        "endColumnNumber" : 95
      },
      "nodeContext" : "serviceHosts=splitter.splitToList(userAndHostInformation.substring(atIndex + 1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 143,
    "startColumnNumber" : 12,
    "endLineNumber" : 143,
    "endColumnNumber" : 19
  }, {
    "charLength" : 7,
    "startLineNumber" : 144,
    "startColumnNumber" : 62,
    "endLineNumber" : 144,
    "endColumnNumber" : 69
  }, {
    "charLength" : 7,
    "startLineNumber" : 145,
    "startColumnNumber" : 81,
    "endLineNumber" : 145,
    "endColumnNumber" : 88
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  } ]
}