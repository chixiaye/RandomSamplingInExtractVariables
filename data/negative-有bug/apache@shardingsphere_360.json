{
  "id" : 360,
  "expression" : "Optional",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-proxy/shardingsphere-proxy-backend/src/main/java/org/apache/shardingsphere/proxy/backend/handler/admin/DatabaseAdminBackendHandlerFactory.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Optional",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 51,
      "startColumnNumber" : 19,
      "endLineNumber" : 51,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 51,
        "startColumnNumber" : 19,
        "endLineNumber" : 51,
        "endColumnNumber" : 35
      },
      "nodeContext" : "Optional.empty()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 36
      },
      "nodeContext" : "return Optional.empty();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 50,
        "startColumnNumber" : 34,
        "endLineNumber" : 52,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  return Optional.empty();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!creator.isPresent()) {\n  return Optional.empty();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 423,
        "startLineNumber" : 48,
        "startColumnNumber" : 186,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Optional<DatabaseAdminExecutorCreator> creator=DatabaseAdminExecutorCreatorFactory.findInstance(databaseType);\n  if (!creator.isPresent()) {\n    return Optional.empty();\n  }\n  Optional<DatabaseAdminExecutor> executor=creator.get().create(sqlStatementContext);\n  return executor.map(optional -> createProxyBackendHandler(sqlStatementContext,connectionSession,optional));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 49,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 948,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Create new instance of database admin backend handler, and this handler requires a connection containing a schema to be used.\n * @param databaseType database type\n * @param sqlStatementContext SQL statement context\n * @param connectionSession connection session\n * @return created instance\n */\npublic static Optional<ProxyBackendHandler> newInstance(final DatabaseType databaseType,final SQLStatementContext<?> sqlStatementContext,final ConnectionSession connectionSession){\n  Optional<DatabaseAdminExecutorCreator> creator=DatabaseAdminExecutorCreatorFactory.findInstance(databaseType);\n  if (!creator.isPresent()) {\n    return Optional.empty();\n  }\n  Optional<DatabaseAdminExecutor> executor=creator.get().create(sqlStatementContext);\n  return executor.map(optional -> createProxyBackendHandler(sqlStatementContext,connectionSession,optional));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 76,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 36
      },
      "nodeContext" : "return Optional.empty();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Optional"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 51,
    "startColumnNumber" : 19,
    "endLineNumber" : 51,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ ]
}