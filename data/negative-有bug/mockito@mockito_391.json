{
  "id" : 391,
  "expression" : "Mockito",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/main/java/org/mockito/ArgumentCaptor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Mockito",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 82,
      "startColumnNumber" : 8,
      "endLineNumber" : 82,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 41
      },
      "nodeContext" : "Mockito.argThat(capturingMatcher)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 42
      },
      "nodeContext" : "Mockito.argThat(capturingMatcher);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 81,
        "startColumnNumber" : 23,
        "endLineNumber" : 84,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Mockito.argThat(capturingMatcher);\n  return defaultValue(clazz);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 565,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Use it to capture the argument. This method <b>must be used inside of verification</b>. <p> Internally, this method registers a special implementation of an  {@link ArgumentMatcher}. This argument matcher stores the argument value so that you can use it later to perform assertions. <p> See examples in javadoc for  {@link ArgumentCaptor} class.\n * @return null or default values\n */\npublic T capture(){\n  Mockito.argThat(capturingMatcher);\n  return defaultValue(clazz);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 16,
      "astHeight" : 5
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 42
      },
      "nodeContext" : "Mockito.argThat(capturingMatcher);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.mockito.Mockito"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 82,
    "startColumnNumber" : 8,
    "endLineNumber" : 82,
    "endColumnNumber" : 15
  } ],
  "layoutRelationDataList" : [ ]
}