{
  "id" : 106,
  "expression" : "(accessFlags & Opcodes.ACC_SYNTHETIC) != 0 && useSyntheticAttribute",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-core/src/main/java/org/springframework/asm/FieldWriter.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(accessFlags & Opcodes.ACC_SYNTHETIC) != 0 && useSyntheticAttribute",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 67,
      "startLineNumber" : 272,
      "startColumnNumber" : 8,
      "endLineNumber" : 272,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 10,
    "astHeight" : 6,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 272,
        "startColumnNumber" : 4,
        "endLineNumber" : 274,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if ((accessFlags & Opcodes.ACC_SYNTHETIC) != 0 && useSyntheticAttribute) {\n  ++attributesCount;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3000,
        "startLineNumber" : 261,
        "startColumnNumber" : 45,
        "endLineNumber" : 336,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  boolean useSyntheticAttribute=symbolTable.getMajorVersion() < Opcodes.V1_5;\n  int mask=useSyntheticAttribute ? Opcodes.ACC_SYNTHETIC : 0;\n  output.putShort(accessFlags & ~mask).putShort(nameIndex).putShort(descriptorIndex);\n  int attributesCount=0;\n  if (constantValueIndex != 0) {\n    ++attributesCount;\n  }\n  if ((accessFlags & Opcodes.ACC_SYNTHETIC) != 0 && useSyntheticAttribute) {\n    ++attributesCount;\n  }\n  if (signatureIndex != 0) {\n    ++attributesCount;\n  }\n  if ((accessFlags & Opcodes.ACC_DEPRECATED) != 0) {\n    ++attributesCount;\n  }\n  if (lastRuntimeVisibleAnnotation != null) {\n    ++attributesCount;\n  }\n  if (lastRuntimeInvisibleAnnotation != null) {\n    ++attributesCount;\n  }\n  if (lastRuntimeVisibleTypeAnnotation != null) {\n    ++attributesCount;\n  }\n  if (lastRuntimeInvisibleTypeAnnotation != null) {\n    ++attributesCount;\n  }\n  if (firstAttribute != null) {\n    attributesCount+=firstAttribute.getAttributeCount();\n  }\n  output.putShort(attributesCount);\n  if (constantValueIndex != 0) {\n    output.putShort(symbolTable.addConstantUtf8(Constants.CONSTANT_VALUE)).putInt(2).putShort(constantValueIndex);\n  }\n  if ((accessFlags & Opcodes.ACC_SYNTHETIC) != 0 && useSyntheticAttribute) {\n    output.putShort(symbolTable.addConstantUtf8(Constants.SYNTHETIC)).putInt(0);\n  }\n  if (signatureIndex != 0) {\n    output.putShort(symbolTable.addConstantUtf8(Constants.SIGNATURE)).putInt(2).putShort(signatureIndex);\n  }\n  if ((accessFlags & Opcodes.ACC_DEPRECATED) != 0) {\n    output.putShort(symbolTable.addConstantUtf8(Constants.DEPRECATED)).putInt(0);\n  }\n  if (lastRuntimeVisibleAnnotation != null) {\n    lastRuntimeVisibleAnnotation.putAnnotations(symbolTable.addConstantUtf8(Constants.RUNTIME_VISIBLE_ANNOTATIONS),output);\n  }\n  if (lastRuntimeInvisibleAnnotation != null) {\n    lastRuntimeInvisibleAnnotation.putAnnotations(symbolTable.addConstantUtf8(Constants.RUNTIME_INVISIBLE_ANNOTATIONS),output);\n  }\n  if (lastRuntimeVisibleTypeAnnotation != null) {\n    lastRuntimeVisibleTypeAnnotation.putAnnotations(symbolTable.addConstantUtf8(Constants.RUNTIME_VISIBLE_TYPE_ANNOTATIONS),output);\n  }\n  if (lastRuntimeInvisibleTypeAnnotation != null) {\n    lastRuntimeInvisibleTypeAnnotation.putAnnotations(symbolTable.addConstantUtf8(Constants.RUNTIME_INVISIBLE_TYPE_ANNOTATIONS),output);\n  }\n  if (firstAttribute != null) {\n    firstAttribute.putAttributes(symbolTable,output);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 298,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3240,
        "startLineNumber" : 255,
        "startColumnNumber" : 2,
        "endLineNumber" : 336,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Puts the content of the field_info JVMS structure generated by this FieldWriter into the given ByteVector.\n * @param output where the field_info structure must be put.\n */\nvoid putFieldInfo(final ByteVector output){\n  boolean useSyntheticAttribute=symbolTable.getMajorVersion() < Opcodes.V1_5;\n  int mask=useSyntheticAttribute ? Opcodes.ACC_SYNTHETIC : 0;\n  output.putShort(accessFlags & ~mask).putShort(nameIndex).putShort(descriptorIndex);\n  int attributesCount=0;\n  if (constantValueIndex != 0) {\n    ++attributesCount;\n  }\n  if ((accessFlags & Opcodes.ACC_SYNTHETIC) != 0 && useSyntheticAttribute) {\n    ++attributesCount;\n  }\n  if (signatureIndex != 0) {\n    ++attributesCount;\n  }\n  if ((accessFlags & Opcodes.ACC_DEPRECATED) != 0) {\n    ++attributesCount;\n  }\n  if (lastRuntimeVisibleAnnotation != null) {\n    ++attributesCount;\n  }\n  if (lastRuntimeInvisibleAnnotation != null) {\n    ++attributesCount;\n  }\n  if (lastRuntimeVisibleTypeAnnotation != null) {\n    ++attributesCount;\n  }\n  if (lastRuntimeInvisibleTypeAnnotation != null) {\n    ++attributesCount;\n  }\n  if (firstAttribute != null) {\n    attributesCount+=firstAttribute.getAttributeCount();\n  }\n  output.putShort(attributesCount);\n  if (constantValueIndex != 0) {\n    output.putShort(symbolTable.addConstantUtf8(Constants.CONSTANT_VALUE)).putInt(2).putShort(constantValueIndex);\n  }\n  if ((accessFlags & Opcodes.ACC_SYNTHETIC) != 0 && useSyntheticAttribute) {\n    output.putShort(symbolTable.addConstantUtf8(Constants.SYNTHETIC)).putInt(0);\n  }\n  if (signatureIndex != 0) {\n    output.putShort(symbolTable.addConstantUtf8(Constants.SIGNATURE)).putInt(2).putShort(signatureIndex);\n  }\n  if ((accessFlags & Opcodes.ACC_DEPRECATED) != 0) {\n    output.putShort(symbolTable.addConstantUtf8(Constants.DEPRECATED)).putInt(0);\n  }\n  if (lastRuntimeVisibleAnnotation != null) {\n    lastRuntimeVisibleAnnotation.putAnnotations(symbolTable.addConstantUtf8(Constants.RUNTIME_VISIBLE_ANNOTATIONS),output);\n  }\n  if (lastRuntimeInvisibleAnnotation != null) {\n    lastRuntimeInvisibleAnnotation.putAnnotations(symbolTable.addConstantUtf8(Constants.RUNTIME_INVISIBLE_ANNOTATIONS),output);\n  }\n  if (lastRuntimeVisibleTypeAnnotation != null) {\n    lastRuntimeVisibleTypeAnnotation.putAnnotations(symbolTable.addConstantUtf8(Constants.RUNTIME_VISIBLE_TYPE_ANNOTATIONS),output);\n  }\n  if (lastRuntimeInvisibleTypeAnnotation != null) {\n    lastRuntimeInvisibleTypeAnnotation.putAnnotations(symbolTable.addConstantUtf8(Constants.RUNTIME_INVISIBLE_TYPE_ANNOTATIONS),output);\n  }\n  if (firstAttribute != null) {\n    firstAttribute.putAttributes(symbolTable,output);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 307,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 272,
        "startColumnNumber" : 4,
        "endLineNumber" : 274,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if ((accessFlags & Opcodes.ACC_SYNTHETIC) != 0 && useSyntheticAttribute) {\n  ++attributesCount;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    },
    "tokenLength" : 9,
    "type" : "boolean"
  }, {
    "nodeContext" : "(accessFlags & Opcodes.ACC_SYNTHETIC) != 0 && useSyntheticAttribute",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 67,
      "startLineNumber" : 305,
      "startColumnNumber" : 8,
      "endLineNumber" : 305,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 10,
    "astHeight" : 6,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 305,
        "startColumnNumber" : 4,
        "endLineNumber" : 307,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if ((accessFlags & Opcodes.ACC_SYNTHETIC) != 0 && useSyntheticAttribute) {\n  output.putShort(symbolTable.addConstantUtf8(Constants.SYNTHETIC)).putInt(0);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3000,
        "startLineNumber" : 261,
        "startColumnNumber" : 45,
        "endLineNumber" : 336,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  boolean useSyntheticAttribute=symbolTable.getMajorVersion() < Opcodes.V1_5;\n  int mask=useSyntheticAttribute ? Opcodes.ACC_SYNTHETIC : 0;\n  output.putShort(accessFlags & ~mask).putShort(nameIndex).putShort(descriptorIndex);\n  int attributesCount=0;\n  if (constantValueIndex != 0) {\n    ++attributesCount;\n  }\n  if ((accessFlags & Opcodes.ACC_SYNTHETIC) != 0 && useSyntheticAttribute) {\n    ++attributesCount;\n  }\n  if (signatureIndex != 0) {\n    ++attributesCount;\n  }\n  if ((accessFlags & Opcodes.ACC_DEPRECATED) != 0) {\n    ++attributesCount;\n  }\n  if (lastRuntimeVisibleAnnotation != null) {\n    ++attributesCount;\n  }\n  if (lastRuntimeInvisibleAnnotation != null) {\n    ++attributesCount;\n  }\n  if (lastRuntimeVisibleTypeAnnotation != null) {\n    ++attributesCount;\n  }\n  if (lastRuntimeInvisibleTypeAnnotation != null) {\n    ++attributesCount;\n  }\n  if (firstAttribute != null) {\n    attributesCount+=firstAttribute.getAttributeCount();\n  }\n  output.putShort(attributesCount);\n  if (constantValueIndex != 0) {\n    output.putShort(symbolTable.addConstantUtf8(Constants.CONSTANT_VALUE)).putInt(2).putShort(constantValueIndex);\n  }\n  if ((accessFlags & Opcodes.ACC_SYNTHETIC) != 0 && useSyntheticAttribute) {\n    output.putShort(symbolTable.addConstantUtf8(Constants.SYNTHETIC)).putInt(0);\n  }\n  if (signatureIndex != 0) {\n    output.putShort(symbolTable.addConstantUtf8(Constants.SIGNATURE)).putInt(2).putShort(signatureIndex);\n  }\n  if ((accessFlags & Opcodes.ACC_DEPRECATED) != 0) {\n    output.putShort(symbolTable.addConstantUtf8(Constants.DEPRECATED)).putInt(0);\n  }\n  if (lastRuntimeVisibleAnnotation != null) {\n    lastRuntimeVisibleAnnotation.putAnnotations(symbolTable.addConstantUtf8(Constants.RUNTIME_VISIBLE_ANNOTATIONS),output);\n  }\n  if (lastRuntimeInvisibleAnnotation != null) {\n    lastRuntimeInvisibleAnnotation.putAnnotations(symbolTable.addConstantUtf8(Constants.RUNTIME_INVISIBLE_ANNOTATIONS),output);\n  }\n  if (lastRuntimeVisibleTypeAnnotation != null) {\n    lastRuntimeVisibleTypeAnnotation.putAnnotations(symbolTable.addConstantUtf8(Constants.RUNTIME_VISIBLE_TYPE_ANNOTATIONS),output);\n  }\n  if (lastRuntimeInvisibleTypeAnnotation != null) {\n    lastRuntimeInvisibleTypeAnnotation.putAnnotations(symbolTable.addConstantUtf8(Constants.RUNTIME_INVISIBLE_TYPE_ANNOTATIONS),output);\n  }\n  if (firstAttribute != null) {\n    firstAttribute.putAttributes(symbolTable,output);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 298,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3240,
        "startLineNumber" : 255,
        "startColumnNumber" : 2,
        "endLineNumber" : 336,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Puts the content of the field_info JVMS structure generated by this FieldWriter into the given ByteVector.\n * @param output where the field_info structure must be put.\n */\nvoid putFieldInfo(final ByteVector output){\n  boolean useSyntheticAttribute=symbolTable.getMajorVersion() < Opcodes.V1_5;\n  int mask=useSyntheticAttribute ? Opcodes.ACC_SYNTHETIC : 0;\n  output.putShort(accessFlags & ~mask).putShort(nameIndex).putShort(descriptorIndex);\n  int attributesCount=0;\n  if (constantValueIndex != 0) {\n    ++attributesCount;\n  }\n  if ((accessFlags & Opcodes.ACC_SYNTHETIC) != 0 && useSyntheticAttribute) {\n    ++attributesCount;\n  }\n  if (signatureIndex != 0) {\n    ++attributesCount;\n  }\n  if ((accessFlags & Opcodes.ACC_DEPRECATED) != 0) {\n    ++attributesCount;\n  }\n  if (lastRuntimeVisibleAnnotation != null) {\n    ++attributesCount;\n  }\n  if (lastRuntimeInvisibleAnnotation != null) {\n    ++attributesCount;\n  }\n  if (lastRuntimeVisibleTypeAnnotation != null) {\n    ++attributesCount;\n  }\n  if (lastRuntimeInvisibleTypeAnnotation != null) {\n    ++attributesCount;\n  }\n  if (firstAttribute != null) {\n    attributesCount+=firstAttribute.getAttributeCount();\n  }\n  output.putShort(attributesCount);\n  if (constantValueIndex != 0) {\n    output.putShort(symbolTable.addConstantUtf8(Constants.CONSTANT_VALUE)).putInt(2).putShort(constantValueIndex);\n  }\n  if ((accessFlags & Opcodes.ACC_SYNTHETIC) != 0 && useSyntheticAttribute) {\n    output.putShort(symbolTable.addConstantUtf8(Constants.SYNTHETIC)).putInt(0);\n  }\n  if (signatureIndex != 0) {\n    output.putShort(symbolTable.addConstantUtf8(Constants.SIGNATURE)).putInt(2).putShort(signatureIndex);\n  }\n  if ((accessFlags & Opcodes.ACC_DEPRECATED) != 0) {\n    output.putShort(symbolTable.addConstantUtf8(Constants.DEPRECATED)).putInt(0);\n  }\n  if (lastRuntimeVisibleAnnotation != null) {\n    lastRuntimeVisibleAnnotation.putAnnotations(symbolTable.addConstantUtf8(Constants.RUNTIME_VISIBLE_ANNOTATIONS),output);\n  }\n  if (lastRuntimeInvisibleAnnotation != null) {\n    lastRuntimeInvisibleAnnotation.putAnnotations(symbolTable.addConstantUtf8(Constants.RUNTIME_INVISIBLE_ANNOTATIONS),output);\n  }\n  if (lastRuntimeVisibleTypeAnnotation != null) {\n    lastRuntimeVisibleTypeAnnotation.putAnnotations(symbolTable.addConstantUtf8(Constants.RUNTIME_VISIBLE_TYPE_ANNOTATIONS),output);\n  }\n  if (lastRuntimeInvisibleTypeAnnotation != null) {\n    lastRuntimeInvisibleTypeAnnotation.putAnnotations(symbolTable.addConstantUtf8(Constants.RUNTIME_INVISIBLE_TYPE_ANNOTATIONS),output);\n  }\n  if (firstAttribute != null) {\n    firstAttribute.putAttributes(symbolTable,output);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 307,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 305,
        "startColumnNumber" : 4,
        "endLineNumber" : 307,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if ((accessFlags & Opcodes.ACC_SYNTHETIC) != 0 && useSyntheticAttribute) {\n  output.putShort(symbolTable.addConstantUtf8(Constants.SYNTHETIC)).putInt(0);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 8
    },
    "tokenLength" : 9,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 67,
    "startLineNumber" : 272,
    "startColumnNumber" : 8,
    "endLineNumber" : 272,
    "endColumnNumber" : 75
  }, {
    "charLength" : 67,
    "startLineNumber" : 305,
    "startColumnNumber" : 8,
    "endLineNumber" : 305,
    "endColumnNumber" : 75
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}