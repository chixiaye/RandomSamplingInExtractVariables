{
  "id" : 277,
  "expression" : "out.toByteArray()",
  "projectName" : "quarkusio@quarkus",
  "commitID" : "2862b200ee266332150317795b9fe315be51d68b",
  "filePath" : "/integration-tests/main/src/test/java/io/quarkus/it/main/FaultToleranceTestCase.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "out.toByteArray()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 35,
      "startColumnNumber" : 54,
      "endLineNumber" : 35,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 35,
        "startColumnNumber" : 43,
        "endLineNumber" : 35,
        "endColumnNumber" : 96
      },
      "nodeContext" : "new String(out.toByteArray(),StandardCharsets.UTF_8)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 35,
        "startColumnNumber" : 8,
        "endLineNumber" : 35,
        "endColumnNumber" : 97
      },
      "nodeContext" : "Assertions.assertEquals(\"2:Lucie\",new String(out.toByteArray(),StandardCharsets.UTF_8))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 35,
        "startColumnNumber" : 8,
        "endLineNumber" : 35,
        "endColumnNumber" : 98
      },
      "nodeContext" : "Assertions.assertEquals(\"2:Lucie\",new String(out.toByteArray(),StandardCharsets.UTF_8));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 455,
        "startLineNumber" : 25,
        "startColumnNumber" : 45,
        "endLineNumber" : 36,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  URLConnection connection=uri.openConnection();\n  ByteArrayOutputStream out=new ByteArrayOutputStream();\n  try (InputStream in=connection.getInputStream()){\n    byte[] buf=new byte[100];\n    int r;\n    while ((r=in.read(buf)) > 0) {\n      out.write(buf,0,r);\n    }\n  }\n   Assertions.assertEquals(\"2:Lucie\",new String(out.toByteArray(),StandardCharsets.UTF_8));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 506,
        "startLineNumber" : 24,
        "startColumnNumber" : 4,
        "endLineNumber" : 36,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testRetry() throws Exception {\n  URLConnection connection=uri.openConnection();\n  ByteArrayOutputStream out=new ByteArrayOutputStream();\n  try (InputStream in=connection.getInputStream()){\n    byte[] buf=new byte[100];\n    int r;\n    while ((r=in.read(buf)) > 0) {\n      out.write(buf,0,r);\n    }\n  }\n   Assertions.assertEquals(\"2:Lucie\",new String(out.toByteArray(),StandardCharsets.UTF_8));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 82,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 35,
        "startColumnNumber" : 8,
        "endLineNumber" : 35,
        "endColumnNumber" : 98
      },
      "nodeContext" : "Assertions.assertEquals(\"2:Lucie\",new String(out.toByteArray(),StandardCharsets.UTF_8));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "byte[]"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 35,
    "startColumnNumber" : 54,
    "endLineNumber" : 35,
    "endColumnNumber" : 71
  } ],
  "layoutRelationDataList" : [ ]
}