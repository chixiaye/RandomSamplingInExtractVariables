{
  "id" : 186,
  "expression" : "record.getIndividualRecipient()",
  "projectName" : "signalapp@Signal-Android",
  "commitID" : "7e91132e7ed62a58b5f347de252ab1eda3f43b90",
  "filePath" : "/app/src/main/java/org/thoughtcrime/securesms/jobs/SmsSentJob.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "record.getIndividualRecipient()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 114,
      "startColumnNumber" : 82,
      "endLineNumber" : 114,
      "endColumnNumber" : 113
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 114,
        "startColumnNumber" : 56,
        "endLineNumber" : 114,
        "endColumnNumber" : 130
      },
      "nodeContext" : "new SmsSendJob(messageId,record.getIndividualRecipient(),runAttempt + 1)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 114,
        "startColumnNumber" : 12,
        "endLineNumber" : 114,
        "endColumnNumber" : 131
      },
      "nodeContext" : "ApplicationDependencies.getJobManager().add(new SmsSendJob(messageId,record.getIndividualRecipient(),runAttempt + 1))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 114,
        "startColumnNumber" : 12,
        "endLineNumber" : 114,
        "endColumnNumber" : 132
      },
      "nodeContext" : "ApplicationDependencies.getJobManager().add(new SmsSendJob(messageId,record.getIndividualRecipient(),runAttempt + 1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 216,
        "startLineNumber" : 112,
        "startColumnNumber" : 17,
        "endLineNumber" : 115,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  Log.w(TAG,\"Service connectivity problem, requeuing...\");\n  ApplicationDependencies.getJobManager().add(new SmsSendJob(messageId,record.getIndividualRecipient(),runAttempt + 1));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 533,
        "startLineNumber" : 108,
        "startColumnNumber" : 10,
        "endLineNumber" : 115,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (isMultipart) {\n  Log.w(TAG,\"Service connectivity problem, but not retrying due to multipart\");\n  database.markAsSentFailed(messageId);\n  ApplicationDependencies.getMessageNotifier().notifyMessageDeliveryFailed(context,record.getRecipient(),record.getThreadId());\n}\n else {\n  Log.w(TAG,\"Service connectivity problem, requeuing...\");\n  ApplicationDependencies.getJobManager().add(new SmsSendJob(messageId,record.getIndividualRecipient(),runAttempt + 1));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 50,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 985,
        "startLineNumber" : 102,
        "startColumnNumber" : 6,
        "endLineNumber" : 120,
        "endColumnNumber" : 7
      },
      "nodeContext" : "switch (result) {\ncase Activity.RESULT_OK:  database.markAsSent(messageId,false);\nbreak;\ncase SmsManager.RESULT_ERROR_NO_SERVICE:case SmsManager.RESULT_ERROR_RADIO_OFF:if (isMultipart) {\nLog.w(TAG,\"Service connectivity problem, but not retrying due to multipart\");\ndatabase.markAsSentFailed(messageId);\nApplicationDependencies.getMessageNotifier().notifyMessageDeliveryFailed(context,record.getRecipient(),record.getThreadId());\n}\n else {\nLog.w(TAG,\"Service connectivity problem, requeuing...\");\nApplicationDependencies.getJobManager().add(new SmsSendJob(messageId,record.getIndividualRecipient(),runAttempt + 1));\n}\nbreak;\ndefault:database.markAsSentFailed(messageId);\nApplicationDependencies.getMessageNotifier().notifyMessageDeliveryFailed(context,record.getRecipient(),record.getThreadId());\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 91,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1144,
        "startLineNumber" : 98,
        "startColumnNumber" : 8,
        "endLineNumber" : 121,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MessageDatabase database=DatabaseFactory.getSmsDatabase(context);\n  SmsMessageRecord record=database.getSmsMessage(messageId);\nswitch (result) {\ncase Activity.RESULT_OK:    database.markAsSent(messageId,false);\n  break;\ncase SmsManager.RESULT_ERROR_NO_SERVICE:case SmsManager.RESULT_ERROR_RADIO_OFF:if (isMultipart) {\n  Log.w(TAG,\"Service connectivity problem, but not retrying due to multipart\");\n  database.markAsSentFailed(messageId);\n  ApplicationDependencies.getMessageNotifier().notifyMessageDeliveryFailed(context,record.getRecipient(),record.getThreadId());\n}\n else {\n  Log.w(TAG,\"Service connectivity problem, requeuing...\");\n  ApplicationDependencies.getJobManager().add(new SmsSendJob(messageId,record.getIndividualRecipient(),runAttempt + 1));\n}\nbreak;\ndefault:database.markAsSentFailed(messageId);\nApplicationDependencies.getMessageNotifier().notifyMessageDeliveryFailed(context,record.getRecipient(),record.getThreadId());\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1210,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  MessageDatabase database=DatabaseFactory.getSmsDatabase(context);\n  SmsMessageRecord record=database.getSmsMessage(messageId);\nswitch (result) {\ncase Activity.RESULT_OK:    database.markAsSent(messageId,false);\n  break;\ncase SmsManager.RESULT_ERROR_NO_SERVICE:case SmsManager.RESULT_ERROR_RADIO_OFF:if (isMultipart) {\n  Log.w(TAG,\"Service connectivity problem, but not retrying due to multipart\");\n  database.markAsSentFailed(messageId);\n  ApplicationDependencies.getMessageNotifier().notifyMessageDeliveryFailed(context,record.getRecipient(),record.getThreadId());\n}\n else {\n  Log.w(TAG,\"Service connectivity problem, requeuing...\");\n  ApplicationDependencies.getJobManager().add(new SmsSendJob(messageId,record.getIndividualRecipient(),runAttempt + 1));\n}\nbreak;\ndefault:database.markAsSentFailed(messageId);\nApplicationDependencies.getMessageNotifier().notifyMessageDeliveryFailed(context,record.getRecipient(),record.getThreadId());\n}\n}\n catch (NoSuchMessageException e) {\nLog.w(TAG,e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 123,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1220,
        "startLineNumber" : 97,
        "startColumnNumber" : 60,
        "endLineNumber" : 124,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  try {\n    MessageDatabase database=DatabaseFactory.getSmsDatabase(context);\n    SmsMessageRecord record=database.getSmsMessage(messageId);\nswitch (result) {\ncase Activity.RESULT_OK:      database.markAsSent(messageId,false);\n    break;\ncase SmsManager.RESULT_ERROR_NO_SERVICE:case SmsManager.RESULT_ERROR_RADIO_OFF:  if (isMultipart) {\n    Log.w(TAG,\"Service connectivity problem, but not retrying due to multipart\");\n    database.markAsSentFailed(messageId);\n    ApplicationDependencies.getMessageNotifier().notifyMessageDeliveryFailed(context,record.getRecipient(),record.getThreadId());\n  }\n else {\n    Log.w(TAG,\"Service connectivity problem, requeuing...\");\n    ApplicationDependencies.getJobManager().add(new SmsSendJob(messageId,record.getIndividualRecipient(),runAttempt + 1));\n  }\nbreak;\ndefault:database.markAsSentFailed(messageId);\nApplicationDependencies.getMessageNotifier().notifyMessageDeliveryFailed(context,record.getRecipient(),record.getThreadId());\n}\n}\n catch (NoSuchMessageException e) {\nLog.w(TAG,e);\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1278,
        "startLineNumber" : 97,
        "startColumnNumber" : 2,
        "endLineNumber" : 124,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void handleSentResult(long messageId,int result){\n  try {\n    MessageDatabase database=DatabaseFactory.getSmsDatabase(context);\n    SmsMessageRecord record=database.getSmsMessage(messageId);\nswitch (result) {\ncase Activity.RESULT_OK:      database.markAsSent(messageId,false);\n    break;\ncase SmsManager.RESULT_ERROR_NO_SERVICE:case SmsManager.RESULT_ERROR_RADIO_OFF:  if (isMultipart) {\n    Log.w(TAG,\"Service connectivity problem, but not retrying due to multipart\");\n    database.markAsSentFailed(messageId);\n    ApplicationDependencies.getMessageNotifier().notifyMessageDeliveryFailed(context,record.getRecipient(),record.getThreadId());\n  }\n else {\n    Log.w(TAG,\"Service connectivity problem, requeuing...\");\n    ApplicationDependencies.getJobManager().add(new SmsSendJob(messageId,record.getIndividualRecipient(),runAttempt + 1));\n  }\nbreak;\ndefault:database.markAsSentFailed(messageId);\nApplicationDependencies.getMessageNotifier().notifyMessageDeliveryFailed(context,record.getRecipient(),record.getThreadId());\n}\n}\n catch (NoSuchMessageException e) {\nLog.w(TAG,e);\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 134,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 114,
        "startColumnNumber" : 12,
        "endLineNumber" : 114,
        "endColumnNumber" : 132
      },
      "nodeContext" : "ApplicationDependencies.getJobManager().add(new SmsSendJob(messageId,record.getIndividualRecipient(),runAttempt + 1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "org.thoughtcrime.securesms.recipients.Recipient"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 114,
    "startColumnNumber" : 82,
    "endLineNumber" : 114,
    "endColumnNumber" : 113
  } ],
  "layoutRelationDataList" : [ ]
}