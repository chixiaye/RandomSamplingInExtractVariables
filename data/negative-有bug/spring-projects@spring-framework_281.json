{
  "id" : 281,
  "expression" : "newDateFormat()",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-test/src/main/java/org/springframework/mock/web/MockHttpServletResponse.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "newDateFormat()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 537,
      "startColumnNumber" : 10,
      "endLineNumber" : 537,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 537,
        "startColumnNumber" : 10,
        "endLineNumber" : 537,
        "endColumnNumber" : 48
      },
      "nodeContext" : "newDateFormat().parse(getHeader(name))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 537,
        "startColumnNumber" : 10,
        "endLineNumber" : 537,
        "endColumnNumber" : 58
      },
      "nodeContext" : "newDateFormat().parse(getHeader(name)).getTime()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 537,
        "startColumnNumber" : 3,
        "endLineNumber" : 537,
        "endColumnNumber" : 59
      },
      "nodeContext" : "return newDateFormat().parse(getHeader(name)).getTime();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 536,
        "startColumnNumber" : 6,
        "endLineNumber" : 538,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  return newDateFormat().parse(getHeader(name)).getTime();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 219,
        "startLineNumber" : 536,
        "startColumnNumber" : 2,
        "endLineNumber" : 542,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  return newDateFormat().parse(getHeader(name)).getTime();\n}\n catch (ParseException ex) {\n  throw new IllegalArgumentException(\"Value for header '\" + name + \"' is not a valid Date: \"+ headerValue);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 313,
        "startLineNumber" : 531,
        "startColumnNumber" : 40,
        "endLineNumber" : 543,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  String headerValue=getHeader(name);\n  if (headerValue == null) {\n    return -1;\n  }\n  try {\n    return newDateFormat().parse(getHeader(name)).getTime();\n  }\n catch (  ParseException ex) {\n    throw new IllegalArgumentException(\"Value for header '\" + name + \"' is not a valid Date: \"+ headerValue);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 352,
        "startLineNumber" : 531,
        "startColumnNumber" : 1,
        "endLineNumber" : 543,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public long getDateHeader(String name){\n  String headerValue=getHeader(name);\n  if (headerValue == null) {\n    return -1;\n  }\n  try {\n    return newDateFormat().parse(getHeader(name)).getTime();\n  }\n catch (  ParseException ex) {\n    throw new IllegalArgumentException(\"Value for header '\" + name + \"' is not a valid Date: \"+ headerValue);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 52,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 537,
        "startColumnNumber" : 3,
        "endLineNumber" : 537,
        "endColumnNumber" : 59
      },
      "nodeContext" : "return newDateFormat().parse(getHeader(name)).getTime();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.text.DateFormat"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 537,
    "startColumnNumber" : 10,
    "endLineNumber" : 537,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ ]
}