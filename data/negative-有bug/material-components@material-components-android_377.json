{
  "id" : 377,
  "expression" : "originalY + slideDistance",
  "projectName" : "material-components@material-components-android",
  "commitID" : "79bf9d0e8e62eea9c2f2620d4e1a0a2ca0e12017",
  "filePath" : "/lib/java/com/google/android/material/transition/SlideDistanceProvider.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "originalY + slideDistance",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 139,
      "startColumnNumber" : 48,
      "endLineNumber" : 139,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 139,
        "startColumnNumber" : 15,
        "endLineNumber" : 139,
        "endColumnNumber" : 96
      },
      "nodeContext" : "createTranslationYAnimator(view,originalY + slideDistance,originalY,originalY)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 139,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 97
      },
      "nodeContext" : "return createTranslationYAnimator(view,originalY + slideDistance,originalY,originalY);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1058,
        "startLineNumber" : 131,
        "startColumnNumber" : 4,
        "endLineNumber" : 154,
        "endColumnNumber" : 5
      },
      "nodeContext" : "switch (slideEdge) {\ncase Gravity.LEFT:  return createTranslationXAnimator(view,originalX + slideDistance,originalX,originalX);\ncase Gravity.TOP:return createTranslationYAnimator(view,originalY - slideDistance,originalY,originalY);\ncase Gravity.RIGHT:return createTranslationXAnimator(view,originalX - slideDistance,originalX,originalX);\ncase Gravity.BOTTOM:return createTranslationYAnimator(view,originalY + slideDistance,originalY,originalY);\ncase Gravity.START:return createTranslationXAnimator(view,isRtl(sceneRoot) ? originalX + slideDistance : originalX - slideDistance,originalX,originalX);\ncase Gravity.END:return createTranslationXAnimator(view,isRtl(sceneRoot) ? originalX - slideDistance : originalX + slideDistance,originalX,originalX);\ndefault:throw new IllegalArgumentException(\"Invalid slide direction: \" + slideEdge);\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 102,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1172,
        "startLineNumber" : 128,
        "startColumnNumber" : 84,
        "endLineNumber" : 155,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final float originalX=view.getTranslationX();\n  final float originalY=view.getTranslationY();\nswitch (slideEdge) {\ncase Gravity.LEFT:    return createTranslationXAnimator(view,originalX + slideDistance,originalX,originalX);\ncase Gravity.TOP:  return createTranslationYAnimator(view,originalY - slideDistance,originalY,originalY);\ncase Gravity.RIGHT:return createTranslationXAnimator(view,originalX - slideDistance,originalX,originalX);\ncase Gravity.BOTTOM:return createTranslationYAnimator(view,originalY + slideDistance,originalY,originalY);\ncase Gravity.START:return createTranslationXAnimator(view,isRtl(sceneRoot) ? originalX + slideDistance : originalX - slideDistance,originalX,originalX);\ncase Gravity.END:return createTranslationXAnimator(view,isRtl(sceneRoot) ? originalX - slideDistance : originalX + slideDistance,originalX,originalX);\ndefault:throw new IllegalArgumentException(\"Invalid slide direction: \" + slideEdge);\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1313,
        "startLineNumber" : 127,
        "startColumnNumber" : 2,
        "endLineNumber" : 155,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static Animator createTranslationAppearAnimator(View sceneRoot,View view,@GravityFlag int slideEdge,@Px int slideDistance){\n  final float originalX=view.getTranslationX();\n  final float originalY=view.getTranslationY();\nswitch (slideEdge) {\ncase Gravity.LEFT:    return createTranslationXAnimator(view,originalX + slideDistance,originalX,originalX);\ncase Gravity.TOP:  return createTranslationYAnimator(view,originalY - slideDistance,originalY,originalY);\ncase Gravity.RIGHT:return createTranslationXAnimator(view,originalX - slideDistance,originalX,originalX);\ncase Gravity.BOTTOM:return createTranslationYAnimator(view,originalY + slideDistance,originalY,originalY);\ncase Gravity.START:return createTranslationXAnimator(view,isRtl(sceneRoot) ? originalX + slideDistance : originalX - slideDistance,originalX,originalX);\ncase Gravity.END:return createTranslationXAnimator(view,isRtl(sceneRoot) ? originalX - slideDistance : originalX + slideDistance,originalX,originalX);\ndefault:throw new IllegalArgumentException(\"Invalid slide direction: \" + slideEdge);\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 143,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 139,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 97
      },
      "nodeContext" : "return createTranslationYAnimator(view,originalY + slideDistance,originalY,originalY);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 139,
    "startColumnNumber" : 48,
    "endLineNumber" : 139,
    "endColumnNumber" : 73
  } ],
  "layoutRelationDataList" : [ ]
}