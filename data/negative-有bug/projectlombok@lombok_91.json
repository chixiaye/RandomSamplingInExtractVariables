{
  "id" : 91,
  "expression" : "it",
  "projectName" : "projectlombok@lombok",
  "commitID" : "25def866b50860715ee7c315c678b8c3d1ba9b56",
  "filePath" : "/src/delombok/lombok/delombok/ant/DelombokTask.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "it",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 127,
      "startColumnNumber" : 11,
      "endLineNumber" : 127,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 127,
        "startColumnNumber" : 11,
        "endLineNumber" : 127,
        "endColumnNumber" : 23
      },
      "nodeContext" : "it.hasNext()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 344,
        "startLineNumber" : 127,
        "startColumnNumber" : 4,
        "endLineNumber" : 136,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (it.hasNext()) {\n  FileResource fileResource=(FileResource)it.next();\n  File baseDir=fileResource.getBaseDir();\n  if (baseDir == null) {\n    File file=fileResource.getFile();\n    delombok.addFile(file.getParentFile(),file.getName());\n  }\n else {\n    delombok.addFile(baseDir,fileResource.getName());\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 56,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 393,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 137,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  Iterator<?> it=path.iterator();\n  while (it.hasNext()) {\n    FileResource fileResource=(FileResource)it.next();\n    File baseDir=fileResource.getBaseDir();\n    if (baseDir == null) {\n      File file=fileResource.getFile();\n      delombok.addFile(file.getParentFile(),file.getName());\n    }\n else {\n      delombok.addFile(baseDir,fileResource.getName());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 67,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 454,
        "startLineNumber" : 124,
        "startColumnNumber" : 3,
        "endLineNumber" : 137,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (fromDir != null) delombok.addDirectory(fromDir);\n else {\n  Iterator<?> it=path.iterator();\n  while (it.hasNext()) {\n    FileResource fileResource=(FileResource)it.next();\n    File baseDir=fileResource.getBaseDir();\n    if (baseDir == null) {\n      File file=fileResource.getFile();\n      delombok.addFile(file.getParentFile(),file.getName());\n    }\n else {\n      delombok.addFile(baseDir,fileResource.getName());\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 76,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 487,
        "startLineNumber" : 123,
        "startColumnNumber" : 6,
        "endLineNumber" : 139,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (fromDir != null)   delombok.addDirectory(fromDir);\n else {\n    Iterator<?> it=path.iterator();\n    while (it.hasNext()) {\n      FileResource fileResource=(FileResource)it.next();\n      File baseDir=fileResource.getBaseDir();\n      if (baseDir == null) {\n        File file=fileResource.getFile();\n        delombok.addFile(file.getParentFile(),file.getName());\n      }\n else {\n        delombok.addFile(baseDir,fileResource.getName());\n      }\n    }\n  }\n  delombok.delombok();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 597,
        "startLineNumber" : 123,
        "startColumnNumber" : 2,
        "endLineNumber" : 141,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  if (fromDir != null)   delombok.addDirectory(fromDir);\n else {\n    Iterator<?> it=path.iterator();\n    while (it.hasNext()) {\n      FileResource fileResource=(FileResource)it.next();\n      File baseDir=fileResource.getBaseDir();\n      if (baseDir == null) {\n        File file=fileResource.getFile();\n        delombok.addFile(file.getParentFile(),file.getName());\n      }\n else {\n        delombok.addFile(baseDir,fileResource.getName());\n      }\n    }\n  }\n  delombok.delombok();\n}\n catch (IOException e) {\n  throw new BuildException(\"I/O problem during delombok\",e,getLocation());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 96,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1421,
        "startLineNumber" : 106,
        "startColumnNumber" : 45,
        "endLineNumber" : 142,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (fromDir == null && path == null)   throw new BuildException(\"Either 'from' attribute, or nested <fileset> tags are required.\");\n  if (fromDir != null && path != null)   throw new BuildException(\"You can't specify both 'from' attribute and nested filesets. You need one or the other.\");\n  if (toDir == null)   throw new BuildException(\"The to attribute is required.\");\n  Delombok delombok=new Delombok();\n  if (verbose)   delombok.setVerbose(true);\n  try {\n    if (encoding != null)     delombok.setCharset(encoding);\n  }\n catch (  UnsupportedCharsetException e) {\n    throw new BuildException(\"Unknown charset: \" + encoding,getLocation());\n  }\n  if (classpath != null)   delombok.setClasspath(classpath.toString());\n  if (sourcepath != null)   delombok.setSourcepath(sourcepath.toString());\n  delombok.setOutput(toDir);\n  try {\n    if (fromDir != null)     delombok.addDirectory(fromDir);\n else {\n      Iterator<?> it=path.iterator();\n      while (it.hasNext()) {\n        FileResource fileResource=(FileResource)it.next();\n        File baseDir=fileResource.getBaseDir();\n        if (baseDir == null) {\n          File file=fileResource.getFile();\n          delombok.addFile(file.getParentFile(),file.getName());\n        }\n else {\n          delombok.addFile(baseDir,fileResource.getName());\n        }\n      }\n    }\n    delombok.delombok();\n  }\n catch (  IOException e) {\n    throw new BuildException(\"I/O problem during delombok\",e,getLocation());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 200,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1476,
        "startLineNumber" : 105,
        "startColumnNumber" : 1,
        "endLineNumber" : 142,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void execute() throws BuildException {\n  if (fromDir == null && path == null)   throw new BuildException(\"Either 'from' attribute, or nested <fileset> tags are required.\");\n  if (fromDir != null && path != null)   throw new BuildException(\"You can't specify both 'from' attribute and nested filesets. You need one or the other.\");\n  if (toDir == null)   throw new BuildException(\"The to attribute is required.\");\n  Delombok delombok=new Delombok();\n  if (verbose)   delombok.setVerbose(true);\n  try {\n    if (encoding != null)     delombok.setCharset(encoding);\n  }\n catch (  UnsupportedCharsetException e) {\n    throw new BuildException(\"Unknown charset: \" + encoding,getLocation());\n  }\n  if (classpath != null)   delombok.setClasspath(classpath.toString());\n  if (sourcepath != null)   delombok.setSourcepath(sourcepath.toString());\n  delombok.setOutput(toDir);\n  try {\n    if (fromDir != null)     delombok.addDirectory(fromDir);\n else {\n      Iterator<?> it=path.iterator();\n      while (it.hasNext()) {\n        FileResource fileResource=(FileResource)it.next();\n        File baseDir=fileResource.getBaseDir();\n        if (baseDir == null) {\n          File file=fileResource.getFile();\n          delombok.addFile(file.getParentFile(),file.getName());\n        }\n else {\n          delombok.addFile(baseDir,fileResource.getName());\n        }\n      }\n    }\n    delombok.delombok();\n  }\n catch (  IOException e) {\n    throw new BuildException(\"I/O problem during delombok\",e,getLocation());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 208,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 127,
        "startColumnNumber" : 11,
        "endLineNumber" : 127,
        "endColumnNumber" : 23
      },
      "nodeContext" : "it.hasNext()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.util.Iterator<>"
  }, {
    "nodeContext" : "it",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 128,
      "startColumnNumber" : 48,
      "endLineNumber" : 128,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 128,
        "startColumnNumber" : 48,
        "endLineNumber" : 128,
        "endColumnNumber" : 57
      },
      "nodeContext" : "it.next()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 128,
        "startColumnNumber" : 33,
        "endLineNumber" : 128,
        "endColumnNumber" : 57
      },
      "nodeContext" : "(FileResource)it.next()",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 128,
        "startColumnNumber" : 18,
        "endLineNumber" : 128,
        "endColumnNumber" : 57
      },
      "nodeContext" : "fileResource=(FileResource)it.next()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 128,
        "startColumnNumber" : 5,
        "endLineNumber" : 128,
        "endColumnNumber" : 58
      },
      "nodeContext" : "FileResource fileResource=(FileResource)it.next();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 323,
        "startLineNumber" : 127,
        "startColumnNumber" : 25,
        "endLineNumber" : 136,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  FileResource fileResource=(FileResource)it.next();\n  File baseDir=fileResource.getBaseDir();\n  if (baseDir == null) {\n    File file=fileResource.getFile();\n    delombok.addFile(file.getParentFile(),file.getName());\n  }\n else {\n    delombok.addFile(baseDir,fileResource.getName());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 344,
        "startLineNumber" : 127,
        "startColumnNumber" : 4,
        "endLineNumber" : 136,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (it.hasNext()) {\n  FileResource fileResource=(FileResource)it.next();\n  File baseDir=fileResource.getBaseDir();\n  if (baseDir == null) {\n    File file=fileResource.getFile();\n    delombok.addFile(file.getParentFile(),file.getName());\n  }\n else {\n    delombok.addFile(baseDir,fileResource.getName());\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 56,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 393,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 137,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  Iterator<?> it=path.iterator();\n  while (it.hasNext()) {\n    FileResource fileResource=(FileResource)it.next();\n    File baseDir=fileResource.getBaseDir();\n    if (baseDir == null) {\n      File file=fileResource.getFile();\n      delombok.addFile(file.getParentFile(),file.getName());\n    }\n else {\n      delombok.addFile(baseDir,fileResource.getName());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 67,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 454,
        "startLineNumber" : 124,
        "startColumnNumber" : 3,
        "endLineNumber" : 137,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (fromDir != null) delombok.addDirectory(fromDir);\n else {\n  Iterator<?> it=path.iterator();\n  while (it.hasNext()) {\n    FileResource fileResource=(FileResource)it.next();\n    File baseDir=fileResource.getBaseDir();\n    if (baseDir == null) {\n      File file=fileResource.getFile();\n      delombok.addFile(file.getParentFile(),file.getName());\n    }\n else {\n      delombok.addFile(baseDir,fileResource.getName());\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 76,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 487,
        "startLineNumber" : 123,
        "startColumnNumber" : 6,
        "endLineNumber" : 139,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (fromDir != null)   delombok.addDirectory(fromDir);\n else {\n    Iterator<?> it=path.iterator();\n    while (it.hasNext()) {\n      FileResource fileResource=(FileResource)it.next();\n      File baseDir=fileResource.getBaseDir();\n      if (baseDir == null) {\n        File file=fileResource.getFile();\n        delombok.addFile(file.getParentFile(),file.getName());\n      }\n else {\n        delombok.addFile(baseDir,fileResource.getName());\n      }\n    }\n  }\n  delombok.delombok();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 597,
        "startLineNumber" : 123,
        "startColumnNumber" : 2,
        "endLineNumber" : 141,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  if (fromDir != null)   delombok.addDirectory(fromDir);\n else {\n    Iterator<?> it=path.iterator();\n    while (it.hasNext()) {\n      FileResource fileResource=(FileResource)it.next();\n      File baseDir=fileResource.getBaseDir();\n      if (baseDir == null) {\n        File file=fileResource.getFile();\n        delombok.addFile(file.getParentFile(),file.getName());\n      }\n else {\n        delombok.addFile(baseDir,fileResource.getName());\n      }\n    }\n  }\n  delombok.delombok();\n}\n catch (IOException e) {\n  throw new BuildException(\"I/O problem during delombok\",e,getLocation());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 96,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1421,
        "startLineNumber" : 106,
        "startColumnNumber" : 45,
        "endLineNumber" : 142,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (fromDir == null && path == null)   throw new BuildException(\"Either 'from' attribute, or nested <fileset> tags are required.\");\n  if (fromDir != null && path != null)   throw new BuildException(\"You can't specify both 'from' attribute and nested filesets. You need one or the other.\");\n  if (toDir == null)   throw new BuildException(\"The to attribute is required.\");\n  Delombok delombok=new Delombok();\n  if (verbose)   delombok.setVerbose(true);\n  try {\n    if (encoding != null)     delombok.setCharset(encoding);\n  }\n catch (  UnsupportedCharsetException e) {\n    throw new BuildException(\"Unknown charset: \" + encoding,getLocation());\n  }\n  if (classpath != null)   delombok.setClasspath(classpath.toString());\n  if (sourcepath != null)   delombok.setSourcepath(sourcepath.toString());\n  delombok.setOutput(toDir);\n  try {\n    if (fromDir != null)     delombok.addDirectory(fromDir);\n else {\n      Iterator<?> it=path.iterator();\n      while (it.hasNext()) {\n        FileResource fileResource=(FileResource)it.next();\n        File baseDir=fileResource.getBaseDir();\n        if (baseDir == null) {\n          File file=fileResource.getFile();\n          delombok.addFile(file.getParentFile(),file.getName());\n        }\n else {\n          delombok.addFile(baseDir,fileResource.getName());\n        }\n      }\n    }\n    delombok.delombok();\n  }\n catch (  IOException e) {\n    throw new BuildException(\"I/O problem during delombok\",e,getLocation());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 200,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1476,
        "startLineNumber" : 105,
        "startColumnNumber" : 1,
        "endLineNumber" : 142,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void execute() throws BuildException {\n  if (fromDir == null && path == null)   throw new BuildException(\"Either 'from' attribute, or nested <fileset> tags are required.\");\n  if (fromDir != null && path != null)   throw new BuildException(\"You can't specify both 'from' attribute and nested filesets. You need one or the other.\");\n  if (toDir == null)   throw new BuildException(\"The to attribute is required.\");\n  Delombok delombok=new Delombok();\n  if (verbose)   delombok.setVerbose(true);\n  try {\n    if (encoding != null)     delombok.setCharset(encoding);\n  }\n catch (  UnsupportedCharsetException e) {\n    throw new BuildException(\"Unknown charset: \" + encoding,getLocation());\n  }\n  if (classpath != null)   delombok.setClasspath(classpath.toString());\n  if (sourcepath != null)   delombok.setSourcepath(sourcepath.toString());\n  delombok.setOutput(toDir);\n  try {\n    if (fromDir != null)     delombok.addDirectory(fromDir);\n else {\n      Iterator<?> it=path.iterator();\n      while (it.hasNext()) {\n        FileResource fileResource=(FileResource)it.next();\n        File baseDir=fileResource.getBaseDir();\n        if (baseDir == null) {\n          File file=fileResource.getFile();\n          delombok.addFile(file.getParentFile(),file.getName());\n        }\n else {\n          delombok.addFile(baseDir,fileResource.getName());\n        }\n      }\n    }\n    delombok.delombok();\n  }\n catch (  IOException e) {\n    throw new BuildException(\"I/O problem during delombok\",e,getLocation());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 208,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 128,
        "startColumnNumber" : 5,
        "endLineNumber" : 128,
        "endColumnNumber" : 58
      },
      "nodeContext" : "FileResource fileResource=(FileResource)it.next();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.Iterator<>"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 127,
    "startColumnNumber" : 11,
    "endLineNumber" : 127,
    "endColumnNumber" : 13
  }, {
    "charLength" : 2,
    "startLineNumber" : 128,
    "startColumnNumber" : 48,
    "endLineNumber" : 128,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}