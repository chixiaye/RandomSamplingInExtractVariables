{
  "id" : 238,
  "expression" : "codecCustomizers",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-project/spring-boot-test/src/main/java/org/springframework/boot/test/web/reactive/WebTestClientContextCustomizer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "codecCustomizers",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 140,
      "startColumnNumber" : 32,
      "endLineNumber" : 140,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 140,
        "startColumnNumber" : 8,
        "endLineNumber" : 140,
        "endColumnNumber" : 49
      },
      "nodeContext" : "CollectionUtils.isEmpty(codecCustomizers)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 140,
        "startColumnNumber" : 7,
        "endLineNumber" : 140,
        "endColumnNumber" : 49
      },
      "nodeContext" : "!CollectionUtils.isEmpty(codecCustomizers)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 254,
        "startLineNumber" : 140,
        "startColumnNumber" : 3,
        "endLineNumber" : 145,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (!CollectionUtils.isEmpty(codecCustomizers)) {\n  clientBuilder.exchangeStrategies(ExchangeStrategies.builder().codecs((codecs) -> codecCustomizers.forEach((codecCustomizer) -> codecCustomizer.customize(codecs))).build());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 31,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 375,
        "startLineNumber" : 137,
        "startColumnNumber" : 32,
        "endLineNumber" : 146,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Collection<CodecCustomizer> codecCustomizers=context.getBeansOfType(CodecCustomizer.class).values();\n  if (!CollectionUtils.isEmpty(codecCustomizers)) {\n    clientBuilder.exchangeStrategies(ExchangeStrategies.builder().codecs((codecs) -> codecCustomizers.forEach((codecCustomizer) -> codecCustomizer.customize(codecs))).build());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 486,
        "startLineNumber" : 136,
        "startColumnNumber" : 2,
        "endLineNumber" : 146,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void customizeWebTestClientCodecs(WebTestClient.Builder clientBuilder,ApplicationContext context){\n  Collection<CodecCustomizer> codecCustomizers=context.getBeansOfType(CodecCustomizer.class).values();\n  if (!CollectionUtils.isEmpty(codecCustomizers)) {\n    clientBuilder.exchangeStrategies(ExchangeStrategies.builder().codecs((codecs) -> codecCustomizers.forEach((codecCustomizer) -> codecCustomizer.customize(codecs))).build());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 62,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 140,
        "startColumnNumber" : 7,
        "endLineNumber" : 140,
        "endColumnNumber" : 49
      },
      "nodeContext" : "!CollectionUtils.isEmpty(codecCustomizers)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Collection<org.springframework.boot.web.codec.CodecCustomizer>"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 140,
    "startColumnNumber" : 32,
    "endLineNumber" : 140,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ ]
}