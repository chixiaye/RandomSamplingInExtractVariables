{
  "id" : 54,
  "expression" : "result2.getInt(\"age\")",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-db/src/test/java/cn/hutool/db/CRUDTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "result2.getInt(\"age\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 141,
      "startColumnNumber" : 24,
      "endLineNumber" : 141,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 141,
        "startColumnNumber" : 2,
        "endLineNumber" : 141,
        "endColumnNumber" : 46
      },
      "nodeContext" : "Assert.assertSame(88,result2.getInt(\"age\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 141,
        "startColumnNumber" : 2,
        "endLineNumber" : 141,
        "endColumnNumber" : 47
      },
      "nodeContext" : "Assert.assertSame(88,result2.getInt(\"age\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 705,
        "startLineNumber" : 129,
        "startColumnNumber" : 44,
        "endLineNumber" : 148,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Long id=db.insertForGeneratedKey(Entity.create(\"user\").set(\"name\",\"unitTestUser\").set(\"age\",66));\n  Assert.assertTrue(id > 0);\n  Entity result=db.get(\"user\",\"name\",\"unitTestUser\");\n  Assert.assertSame(66,result.getInt(\"age\"));\n  int update=db.update(Entity.create().set(\"age\",88),Entity.create(\"user\").set(\"name\",\"unitTestUser\"));\n  Assert.assertTrue(update > 0);\n  Entity result2=db.get(\"user\",\"name\",\"unitTestUser\");\n  Assert.assertSame(88,result2.getInt(\"age\"));\n  int del=db.del(\"user\",\"name\",\"unitTestUser\");\n  Assert.assertTrue(del > 0);\n  Entity result3=db.get(\"user\",\"name\",\"unitTestUser\");\n  Assert.assertNull(result3);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 130,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 831,
        "startLineNumber" : 122,
        "startColumnNumber" : 1,
        "endLineNumber" : 148,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 对增删改查做单元测试\n * @throws SQLException SQL异常\n */\n@Test @Ignore public void crudTest() throws SQLException {\n  Long id=db.insertForGeneratedKey(Entity.create(\"user\").set(\"name\",\"unitTestUser\").set(\"age\",66));\n  Assert.assertTrue(id > 0);\n  Entity result=db.get(\"user\",\"name\",\"unitTestUser\");\n  Assert.assertSame(66,result.getInt(\"age\"));\n  int update=db.update(Entity.create().set(\"age\",88),Entity.create(\"user\").set(\"name\",\"unitTestUser\"));\n  Assert.assertTrue(update > 0);\n  Entity result2=db.get(\"user\",\"name\",\"unitTestUser\");\n  Assert.assertSame(88,result2.getInt(\"age\"));\n  int del=db.del(\"user\",\"name\",\"unitTestUser\");\n  Assert.assertTrue(del > 0);\n  Entity result3=db.get(\"user\",\"name\",\"unitTestUser\");\n  Assert.assertNull(result3);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 141,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 141,
        "startColumnNumber" : 2,
        "endLineNumber" : 141,
        "endColumnNumber" : 47
      },
      "nodeContext" : "Assert.assertSame(88,result2.getInt(\"age\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.Integer"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 141,
    "startColumnNumber" : 24,
    "endLineNumber" : 141,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ ]
}