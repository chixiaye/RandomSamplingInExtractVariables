{
  "id" : 402,
  "expression" : "\"ff\".equalsIgnoreCase(browserName)",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/client/test/org/openqa/selenium/testing/drivers/Browser.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"ff\".equalsIgnoreCase(browserName)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 34,
      "startLineNumber" : 64,
      "startColumnNumber" : 8,
      "endLineNumber" : 64,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 85
      },
      "nodeContext" : "\"ff\".equalsIgnoreCase(browserName) || \"firefox\".equalsIgnoreCase(browserName)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 308,
        "startLineNumber" : 64,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (\"ff\".equalsIgnoreCase(browserName) || \"firefox\".equalsIgnoreCase(browserName)) {\n  if (System.getProperty(\"webdriver.firefox.marionette\") == null || Boolean.getBoolean(\"webdriver.firefox.marionette\")) {\n    return FIREFOX;\n  }\n else {\n    return LEGACY_FIREFOX_XPI;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 29,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 876,
        "startLineNumber" : 57,
        "startColumnNumber" : 33,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String browserName=System.getProperty(\"selenium.browser\");\n  if (browserName == null) {\n    log.info(\"No browser detected, returning null\");\n    return null;\n  }\n  if (\"ff\".equalsIgnoreCase(browserName) || \"firefox\".equalsIgnoreCase(browserName)) {\n    if (System.getProperty(\"webdriver.firefox.marionette\") == null || Boolean.getBoolean(\"webdriver.firefox.marionette\")) {\n      return FIREFOX;\n    }\n else {\n      return LEGACY_FIREFOX_XPI;\n    }\n  }\n  if (\"edge\".equalsIgnoreCase(browserName)) {\n    return EDGIUM;\n  }\n  if (\"edgehtml\".equalsIgnoreCase(browserName)) {\n    return EDGE_HTML;\n  }\n  try {\n    return Browser.valueOf(browserName.toUpperCase());\n  }\n catch (  IllegalArgumentException e) {\n    throw new RuntimeException(String.format(\"Cannot determine driver from name %s\",browserName),e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 92,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.EnumDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 907,
        "startLineNumber" : 57,
        "startColumnNumber" : 2,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static Browser detect(){\n  String browserName=System.getProperty(\"selenium.browser\");\n  if (browserName == null) {\n    log.info(\"No browser detected, returning null\");\n    return null;\n  }\n  if (\"ff\".equalsIgnoreCase(browserName) || \"firefox\".equalsIgnoreCase(browserName)) {\n    if (System.getProperty(\"webdriver.firefox.marionette\") == null || Boolean.getBoolean(\"webdriver.firefox.marionette\")) {\n      return FIREFOX;\n    }\n else {\n      return LEGACY_FIREFOX_XPI;\n    }\n  }\n  if (\"edge\".equalsIgnoreCase(browserName)) {\n    return EDGIUM;\n  }\n  if (\"edgehtml\".equalsIgnoreCase(browserName)) {\n    return EDGE_HTML;\n  }\n  try {\n    return Browser.valueOf(browserName.toUpperCase());\n  }\n catch (  IllegalArgumentException e) {\n    throw new RuntimeException(String.format(\"Cannot determine driver from name %s\",browserName),e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 98,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 85
      },
      "nodeContext" : "\"ff\".equalsIgnoreCase(browserName) || \"firefox\".equalsIgnoreCase(browserName)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 34,
    "startLineNumber" : 64,
    "startColumnNumber" : 8,
    "endLineNumber" : 64,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ ]
}