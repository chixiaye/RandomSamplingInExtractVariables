{
  "id" : 376,
  "expression" : "prefix",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-rpc/flink-rpc-core/src/main/java/org/apache/flink/runtime/rpc/RpcServiceUtils.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "prefix",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 35,
      "startColumnNumber" : 35,
      "endLineNumber" : 35,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 35,
        "startColumnNumber" : 8,
        "endLineNumber" : 35,
        "endColumnNumber" : 70
      },
      "nodeContext" : "Preconditions.checkNotNull(prefix,\"Prefix must not be null.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 35,
        "startColumnNumber" : 8,
        "endLineNumber" : 35,
        "endColumnNumber" : 71
      },
      "nodeContext" : "Preconditions.checkNotNull(prefix,\"Prefix must not be null.\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 356,
        "startLineNumber" : 34,
        "startColumnNumber" : 57,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Preconditions.checkNotNull(prefix,\"Prefix must not be null.\");\n  long nameOffset;\n  do {\n    nameOffset=nextNameOffset.get();\n  }\n while (!nextNameOffset.compareAndSet(nameOffset,nameOffset + 1L));\n  return prefix + '_' + nameOffset;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 695,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Creates a random name of the form prefix_X, where X is an increasing number.\n * @param prefix Prefix string to prepend to the monotonically increasing name offset number\n * @return A random name of the form prefix_X where X is an increasing number\n */\npublic static String createRandomName(String prefix){\n  Preconditions.checkNotNull(prefix,\"Prefix must not be null.\");\n  long nameOffset;\n  do {\n    nameOffset=nextNameOffset.get();\n  }\n while (!nextNameOffset.compareAndSet(nameOffset,nameOffset + 1L));\n  return prefix + '_' + nameOffset;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 43,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 35,
        "startColumnNumber" : 8,
        "endLineNumber" : 35,
        "endColumnNumber" : 71
      },
      "nodeContext" : "Preconditions.checkNotNull(prefix,\"Prefix must not be null.\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "prefix",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 44,
      "startColumnNumber" : 15,
      "endLineNumber" : 44,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 44,
        "startColumnNumber" : 15,
        "endLineNumber" : 44,
        "endColumnNumber" : 40
      },
      "nodeContext" : "prefix + '_' + nameOffset",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 41
      },
      "nodeContext" : "return prefix + '_' + nameOffset;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 356,
        "startLineNumber" : 34,
        "startColumnNumber" : 57,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Preconditions.checkNotNull(prefix,\"Prefix must not be null.\");\n  long nameOffset;\n  do {\n    nameOffset=nextNameOffset.get();\n  }\n while (!nextNameOffset.compareAndSet(nameOffset,nameOffset + 1L));\n  return prefix + '_' + nameOffset;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 695,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Creates a random name of the form prefix_X, where X is an increasing number.\n * @param prefix Prefix string to prepend to the monotonically increasing name offset number\n * @return A random name of the form prefix_X where X is an increasing number\n */\npublic static String createRandomName(String prefix){\n  Preconditions.checkNotNull(prefix,\"Prefix must not be null.\");\n  long nameOffset;\n  do {\n    nameOffset=nextNameOffset.get();\n  }\n while (!nextNameOffset.compareAndSet(nameOffset,nameOffset + 1L));\n  return prefix + '_' + nameOffset;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 43,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 41
      },
      "nodeContext" : "return prefix + '_' + nameOffset;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 35,
    "startColumnNumber" : 35,
    "endLineNumber" : 35,
    "endColumnNumber" : 41
  }, {
    "charLength" : 6,
    "startLineNumber" : 44,
    "startColumnNumber" : 15,
    "endLineNumber" : 44,
    "endColumnNumber" : 21
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}