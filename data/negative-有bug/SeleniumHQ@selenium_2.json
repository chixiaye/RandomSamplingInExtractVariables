{
  "id" : 2,
  "expression" : "\"http://www.get.com\"",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/client/test/org/openqa/selenium/support/events/EventFiringWebDriverTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"http://www.get.com\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 103,
      "startColumnNumber" : 21,
      "endLineNumber" : 103,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 103,
        "startColumnNumber" : 4,
        "endLineNumber" : 103,
        "endColumnNumber" : 42
      },
      "nodeContext" : "testedDriver.get(\"http://www.get.com\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 103,
        "startColumnNumber" : 4,
        "endLineNumber" : 103,
        "endColumnNumber" : 43
      },
      "nodeContext" : "testedDriver.get(\"http://www.get.com\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1983,
        "startLineNumber" : 93,
        "startColumnNumber" : 33,
        "endLineNumber" : 130,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final WebDriver mockedDriver=mock(WebDriver.class);\n  final Navigation mockedNavigation=mock(Navigation.class);\n  when(mockedDriver.navigate()).thenReturn(mockedNavigation);\n  WebDriverEventListener listener=mock(WebDriverEventListener.class);\n  EventFiringWebDriver testedDriver=new EventFiringWebDriver(mockedDriver).register(listener);\n  testedDriver.get(\"http://www.get.com\");\n  testedDriver.navigate().to(\"http://www.navigate-to.com\");\n  testedDriver.navigate().back();\n  testedDriver.navigate().forward();\n  testedDriver.navigate().refresh();\n  InOrder order=Mockito.inOrder(mockedDriver,mockedNavigation,listener);\n  order.verify(listener).beforeNavigateTo(eq(\"http://www.get.com\"),any(WebDriver.class));\n  order.verify(mockedDriver).get(\"http://www.get.com\");\n  order.verify(listener).afterNavigateTo(eq(\"http://www.get.com\"),any(WebDriver.class));\n  order.verify(mockedDriver).navigate();\n  order.verify(listener).beforeNavigateTo(eq(\"http://www.navigate-to.com\"),any(WebDriver.class));\n  order.verify(mockedNavigation).to(\"http://www.navigate-to.com\");\n  order.verify(listener).afterNavigateTo(eq(\"http://www.navigate-to.com\"),any(WebDriver.class));\n  order.verify(mockedDriver).navigate();\n  order.verify(listener).beforeNavigateBack(any(WebDriver.class));\n  order.verify(mockedNavigation).back();\n  order.verify(listener).afterNavigateBack(any(WebDriver.class));\n  order.verify(mockedDriver).navigate();\n  order.verify(listener).beforeNavigateForward(any(WebDriver.class));\n  order.verify(mockedNavigation).forward();\n  order.verify(listener).afterNavigateForward(any(WebDriver.class));\n  order.verify(mockedDriver).navigate();\n  order.verify(listener).beforeNavigateRefresh(any(WebDriver.class));\n  order.verify(mockedNavigation).refresh();\n  order.verify(listener).afterNavigateRefresh(any(WebDriver.class));\n  verifyNoMoreInteractions(mockedDriver,mockedNavigation,listener);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 298,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2022,
        "startLineNumber" : 92,
        "startColumnNumber" : 2,
        "endLineNumber" : 130,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void navigationEvents(){\n  final WebDriver mockedDriver=mock(WebDriver.class);\n  final Navigation mockedNavigation=mock(Navigation.class);\n  when(mockedDriver.navigate()).thenReturn(mockedNavigation);\n  WebDriverEventListener listener=mock(WebDriverEventListener.class);\n  EventFiringWebDriver testedDriver=new EventFiringWebDriver(mockedDriver).register(listener);\n  testedDriver.get(\"http://www.get.com\");\n  testedDriver.navigate().to(\"http://www.navigate-to.com\");\n  testedDriver.navigate().back();\n  testedDriver.navigate().forward();\n  testedDriver.navigate().refresh();\n  InOrder order=Mockito.inOrder(mockedDriver,mockedNavigation,listener);\n  order.verify(listener).beforeNavigateTo(eq(\"http://www.get.com\"),any(WebDriver.class));\n  order.verify(mockedDriver).get(\"http://www.get.com\");\n  order.verify(listener).afterNavigateTo(eq(\"http://www.get.com\"),any(WebDriver.class));\n  order.verify(mockedDriver).navigate();\n  order.verify(listener).beforeNavigateTo(eq(\"http://www.navigate-to.com\"),any(WebDriver.class));\n  order.verify(mockedNavigation).to(\"http://www.navigate-to.com\");\n  order.verify(listener).afterNavigateTo(eq(\"http://www.navigate-to.com\"),any(WebDriver.class));\n  order.verify(mockedDriver).navigate();\n  order.verify(listener).beforeNavigateBack(any(WebDriver.class));\n  order.verify(mockedNavigation).back();\n  order.verify(listener).afterNavigateBack(any(WebDriver.class));\n  order.verify(mockedDriver).navigate();\n  order.verify(listener).beforeNavigateForward(any(WebDriver.class));\n  order.verify(mockedNavigation).forward();\n  order.verify(listener).afterNavigateForward(any(WebDriver.class));\n  order.verify(mockedDriver).navigate();\n  order.verify(listener).beforeNavigateRefresh(any(WebDriver.class));\n  order.verify(mockedNavigation).refresh();\n  order.verify(listener).afterNavigateRefresh(any(WebDriver.class));\n  verifyNoMoreInteractions(mockedDriver,mockedNavigation,listener);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 304,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 103,
        "startColumnNumber" : 4,
        "endLineNumber" : 103,
        "endColumnNumber" : 43
      },
      "nodeContext" : "testedDriver.get(\"http://www.get.com\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"http://www.get.com\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 110,
      "startColumnNumber" : 47,
      "endLineNumber" : 110,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 110,
        "startColumnNumber" : 44,
        "endLineNumber" : 110,
        "endColumnNumber" : 68
      },
      "nodeContext" : "eq(\"http://www.get.com\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 110,
        "startColumnNumber" : 4,
        "endLineNumber" : 110,
        "endColumnNumber" : 91
      },
      "nodeContext" : "order.verify(listener).beforeNavigateTo(eq(\"http://www.get.com\"),any(WebDriver.class))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 110,
        "startColumnNumber" : 4,
        "endLineNumber" : 110,
        "endColumnNumber" : 92
      },
      "nodeContext" : "order.verify(listener).beforeNavigateTo(eq(\"http://www.get.com\"),any(WebDriver.class));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1983,
        "startLineNumber" : 93,
        "startColumnNumber" : 33,
        "endLineNumber" : 130,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final WebDriver mockedDriver=mock(WebDriver.class);\n  final Navigation mockedNavigation=mock(Navigation.class);\n  when(mockedDriver.navigate()).thenReturn(mockedNavigation);\n  WebDriverEventListener listener=mock(WebDriverEventListener.class);\n  EventFiringWebDriver testedDriver=new EventFiringWebDriver(mockedDriver).register(listener);\n  testedDriver.get(\"http://www.get.com\");\n  testedDriver.navigate().to(\"http://www.navigate-to.com\");\n  testedDriver.navigate().back();\n  testedDriver.navigate().forward();\n  testedDriver.navigate().refresh();\n  InOrder order=Mockito.inOrder(mockedDriver,mockedNavigation,listener);\n  order.verify(listener).beforeNavigateTo(eq(\"http://www.get.com\"),any(WebDriver.class));\n  order.verify(mockedDriver).get(\"http://www.get.com\");\n  order.verify(listener).afterNavigateTo(eq(\"http://www.get.com\"),any(WebDriver.class));\n  order.verify(mockedDriver).navigate();\n  order.verify(listener).beforeNavigateTo(eq(\"http://www.navigate-to.com\"),any(WebDriver.class));\n  order.verify(mockedNavigation).to(\"http://www.navigate-to.com\");\n  order.verify(listener).afterNavigateTo(eq(\"http://www.navigate-to.com\"),any(WebDriver.class));\n  order.verify(mockedDriver).navigate();\n  order.verify(listener).beforeNavigateBack(any(WebDriver.class));\n  order.verify(mockedNavigation).back();\n  order.verify(listener).afterNavigateBack(any(WebDriver.class));\n  order.verify(mockedDriver).navigate();\n  order.verify(listener).beforeNavigateForward(any(WebDriver.class));\n  order.verify(mockedNavigation).forward();\n  order.verify(listener).afterNavigateForward(any(WebDriver.class));\n  order.verify(mockedDriver).navigate();\n  order.verify(listener).beforeNavigateRefresh(any(WebDriver.class));\n  order.verify(mockedNavigation).refresh();\n  order.verify(listener).afterNavigateRefresh(any(WebDriver.class));\n  verifyNoMoreInteractions(mockedDriver,mockedNavigation,listener);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 298,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2022,
        "startLineNumber" : 92,
        "startColumnNumber" : 2,
        "endLineNumber" : 130,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void navigationEvents(){\n  final WebDriver mockedDriver=mock(WebDriver.class);\n  final Navigation mockedNavigation=mock(Navigation.class);\n  when(mockedDriver.navigate()).thenReturn(mockedNavigation);\n  WebDriverEventListener listener=mock(WebDriverEventListener.class);\n  EventFiringWebDriver testedDriver=new EventFiringWebDriver(mockedDriver).register(listener);\n  testedDriver.get(\"http://www.get.com\");\n  testedDriver.navigate().to(\"http://www.navigate-to.com\");\n  testedDriver.navigate().back();\n  testedDriver.navigate().forward();\n  testedDriver.navigate().refresh();\n  InOrder order=Mockito.inOrder(mockedDriver,mockedNavigation,listener);\n  order.verify(listener).beforeNavigateTo(eq(\"http://www.get.com\"),any(WebDriver.class));\n  order.verify(mockedDriver).get(\"http://www.get.com\");\n  order.verify(listener).afterNavigateTo(eq(\"http://www.get.com\"),any(WebDriver.class));\n  order.verify(mockedDriver).navigate();\n  order.verify(listener).beforeNavigateTo(eq(\"http://www.navigate-to.com\"),any(WebDriver.class));\n  order.verify(mockedNavigation).to(\"http://www.navigate-to.com\");\n  order.verify(listener).afterNavigateTo(eq(\"http://www.navigate-to.com\"),any(WebDriver.class));\n  order.verify(mockedDriver).navigate();\n  order.verify(listener).beforeNavigateBack(any(WebDriver.class));\n  order.verify(mockedNavigation).back();\n  order.verify(listener).afterNavigateBack(any(WebDriver.class));\n  order.verify(mockedDriver).navigate();\n  order.verify(listener).beforeNavigateForward(any(WebDriver.class));\n  order.verify(mockedNavigation).forward();\n  order.verify(listener).afterNavigateForward(any(WebDriver.class));\n  order.verify(mockedDriver).navigate();\n  order.verify(listener).beforeNavigateRefresh(any(WebDriver.class));\n  order.verify(mockedNavigation).refresh();\n  order.verify(listener).afterNavigateRefresh(any(WebDriver.class));\n  verifyNoMoreInteractions(mockedDriver,mockedNavigation,listener);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 304,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 110,
        "startColumnNumber" : 4,
        "endLineNumber" : 110,
        "endColumnNumber" : 92
      },
      "nodeContext" : "order.verify(listener).beforeNavigateTo(eq(\"http://www.get.com\"),any(WebDriver.class));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"http://www.get.com\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 111,
      "startColumnNumber" : 35,
      "endLineNumber" : 111,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 111,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 56
      },
      "nodeContext" : "order.verify(mockedDriver).get(\"http://www.get.com\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 111,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 57
      },
      "nodeContext" : "order.verify(mockedDriver).get(\"http://www.get.com\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1983,
        "startLineNumber" : 93,
        "startColumnNumber" : 33,
        "endLineNumber" : 130,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final WebDriver mockedDriver=mock(WebDriver.class);\n  final Navigation mockedNavigation=mock(Navigation.class);\n  when(mockedDriver.navigate()).thenReturn(mockedNavigation);\n  WebDriverEventListener listener=mock(WebDriverEventListener.class);\n  EventFiringWebDriver testedDriver=new EventFiringWebDriver(mockedDriver).register(listener);\n  testedDriver.get(\"http://www.get.com\");\n  testedDriver.navigate().to(\"http://www.navigate-to.com\");\n  testedDriver.navigate().back();\n  testedDriver.navigate().forward();\n  testedDriver.navigate().refresh();\n  InOrder order=Mockito.inOrder(mockedDriver,mockedNavigation,listener);\n  order.verify(listener).beforeNavigateTo(eq(\"http://www.get.com\"),any(WebDriver.class));\n  order.verify(mockedDriver).get(\"http://www.get.com\");\n  order.verify(listener).afterNavigateTo(eq(\"http://www.get.com\"),any(WebDriver.class));\n  order.verify(mockedDriver).navigate();\n  order.verify(listener).beforeNavigateTo(eq(\"http://www.navigate-to.com\"),any(WebDriver.class));\n  order.verify(mockedNavigation).to(\"http://www.navigate-to.com\");\n  order.verify(listener).afterNavigateTo(eq(\"http://www.navigate-to.com\"),any(WebDriver.class));\n  order.verify(mockedDriver).navigate();\n  order.verify(listener).beforeNavigateBack(any(WebDriver.class));\n  order.verify(mockedNavigation).back();\n  order.verify(listener).afterNavigateBack(any(WebDriver.class));\n  order.verify(mockedDriver).navigate();\n  order.verify(listener).beforeNavigateForward(any(WebDriver.class));\n  order.verify(mockedNavigation).forward();\n  order.verify(listener).afterNavigateForward(any(WebDriver.class));\n  order.verify(mockedDriver).navigate();\n  order.verify(listener).beforeNavigateRefresh(any(WebDriver.class));\n  order.verify(mockedNavigation).refresh();\n  order.verify(listener).afterNavigateRefresh(any(WebDriver.class));\n  verifyNoMoreInteractions(mockedDriver,mockedNavigation,listener);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 298,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2022,
        "startLineNumber" : 92,
        "startColumnNumber" : 2,
        "endLineNumber" : 130,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void navigationEvents(){\n  final WebDriver mockedDriver=mock(WebDriver.class);\n  final Navigation mockedNavigation=mock(Navigation.class);\n  when(mockedDriver.navigate()).thenReturn(mockedNavigation);\n  WebDriverEventListener listener=mock(WebDriverEventListener.class);\n  EventFiringWebDriver testedDriver=new EventFiringWebDriver(mockedDriver).register(listener);\n  testedDriver.get(\"http://www.get.com\");\n  testedDriver.navigate().to(\"http://www.navigate-to.com\");\n  testedDriver.navigate().back();\n  testedDriver.navigate().forward();\n  testedDriver.navigate().refresh();\n  InOrder order=Mockito.inOrder(mockedDriver,mockedNavigation,listener);\n  order.verify(listener).beforeNavigateTo(eq(\"http://www.get.com\"),any(WebDriver.class));\n  order.verify(mockedDriver).get(\"http://www.get.com\");\n  order.verify(listener).afterNavigateTo(eq(\"http://www.get.com\"),any(WebDriver.class));\n  order.verify(mockedDriver).navigate();\n  order.verify(listener).beforeNavigateTo(eq(\"http://www.navigate-to.com\"),any(WebDriver.class));\n  order.verify(mockedNavigation).to(\"http://www.navigate-to.com\");\n  order.verify(listener).afterNavigateTo(eq(\"http://www.navigate-to.com\"),any(WebDriver.class));\n  order.verify(mockedDriver).navigate();\n  order.verify(listener).beforeNavigateBack(any(WebDriver.class));\n  order.verify(mockedNavigation).back();\n  order.verify(listener).afterNavigateBack(any(WebDriver.class));\n  order.verify(mockedDriver).navigate();\n  order.verify(listener).beforeNavigateForward(any(WebDriver.class));\n  order.verify(mockedNavigation).forward();\n  order.verify(listener).afterNavigateForward(any(WebDriver.class));\n  order.verify(mockedDriver).navigate();\n  order.verify(listener).beforeNavigateRefresh(any(WebDriver.class));\n  order.verify(mockedNavigation).refresh();\n  order.verify(listener).afterNavigateRefresh(any(WebDriver.class));\n  verifyNoMoreInteractions(mockedDriver,mockedNavigation,listener);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 304,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 111,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 57
      },
      "nodeContext" : "order.verify(mockedDriver).get(\"http://www.get.com\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"http://www.get.com\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 112,
      "startColumnNumber" : 46,
      "endLineNumber" : 112,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 112,
        "startColumnNumber" : 43,
        "endLineNumber" : 112,
        "endColumnNumber" : 67
      },
      "nodeContext" : "eq(\"http://www.get.com\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 112,
        "startColumnNumber" : 4,
        "endLineNumber" : 112,
        "endColumnNumber" : 90
      },
      "nodeContext" : "order.verify(listener).afterNavigateTo(eq(\"http://www.get.com\"),any(WebDriver.class))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 112,
        "startColumnNumber" : 4,
        "endLineNumber" : 112,
        "endColumnNumber" : 91
      },
      "nodeContext" : "order.verify(listener).afterNavigateTo(eq(\"http://www.get.com\"),any(WebDriver.class));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1983,
        "startLineNumber" : 93,
        "startColumnNumber" : 33,
        "endLineNumber" : 130,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final WebDriver mockedDriver=mock(WebDriver.class);\n  final Navigation mockedNavigation=mock(Navigation.class);\n  when(mockedDriver.navigate()).thenReturn(mockedNavigation);\n  WebDriverEventListener listener=mock(WebDriverEventListener.class);\n  EventFiringWebDriver testedDriver=new EventFiringWebDriver(mockedDriver).register(listener);\n  testedDriver.get(\"http://www.get.com\");\n  testedDriver.navigate().to(\"http://www.navigate-to.com\");\n  testedDriver.navigate().back();\n  testedDriver.navigate().forward();\n  testedDriver.navigate().refresh();\n  InOrder order=Mockito.inOrder(mockedDriver,mockedNavigation,listener);\n  order.verify(listener).beforeNavigateTo(eq(\"http://www.get.com\"),any(WebDriver.class));\n  order.verify(mockedDriver).get(\"http://www.get.com\");\n  order.verify(listener).afterNavigateTo(eq(\"http://www.get.com\"),any(WebDriver.class));\n  order.verify(mockedDriver).navigate();\n  order.verify(listener).beforeNavigateTo(eq(\"http://www.navigate-to.com\"),any(WebDriver.class));\n  order.verify(mockedNavigation).to(\"http://www.navigate-to.com\");\n  order.verify(listener).afterNavigateTo(eq(\"http://www.navigate-to.com\"),any(WebDriver.class));\n  order.verify(mockedDriver).navigate();\n  order.verify(listener).beforeNavigateBack(any(WebDriver.class));\n  order.verify(mockedNavigation).back();\n  order.verify(listener).afterNavigateBack(any(WebDriver.class));\n  order.verify(mockedDriver).navigate();\n  order.verify(listener).beforeNavigateForward(any(WebDriver.class));\n  order.verify(mockedNavigation).forward();\n  order.verify(listener).afterNavigateForward(any(WebDriver.class));\n  order.verify(mockedDriver).navigate();\n  order.verify(listener).beforeNavigateRefresh(any(WebDriver.class));\n  order.verify(mockedNavigation).refresh();\n  order.verify(listener).afterNavigateRefresh(any(WebDriver.class));\n  verifyNoMoreInteractions(mockedDriver,mockedNavigation,listener);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 298,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2022,
        "startLineNumber" : 92,
        "startColumnNumber" : 2,
        "endLineNumber" : 130,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void navigationEvents(){\n  final WebDriver mockedDriver=mock(WebDriver.class);\n  final Navigation mockedNavigation=mock(Navigation.class);\n  when(mockedDriver.navigate()).thenReturn(mockedNavigation);\n  WebDriverEventListener listener=mock(WebDriverEventListener.class);\n  EventFiringWebDriver testedDriver=new EventFiringWebDriver(mockedDriver).register(listener);\n  testedDriver.get(\"http://www.get.com\");\n  testedDriver.navigate().to(\"http://www.navigate-to.com\");\n  testedDriver.navigate().back();\n  testedDriver.navigate().forward();\n  testedDriver.navigate().refresh();\n  InOrder order=Mockito.inOrder(mockedDriver,mockedNavigation,listener);\n  order.verify(listener).beforeNavigateTo(eq(\"http://www.get.com\"),any(WebDriver.class));\n  order.verify(mockedDriver).get(\"http://www.get.com\");\n  order.verify(listener).afterNavigateTo(eq(\"http://www.get.com\"),any(WebDriver.class));\n  order.verify(mockedDriver).navigate();\n  order.verify(listener).beforeNavigateTo(eq(\"http://www.navigate-to.com\"),any(WebDriver.class));\n  order.verify(mockedNavigation).to(\"http://www.navigate-to.com\");\n  order.verify(listener).afterNavigateTo(eq(\"http://www.navigate-to.com\"),any(WebDriver.class));\n  order.verify(mockedDriver).navigate();\n  order.verify(listener).beforeNavigateBack(any(WebDriver.class));\n  order.verify(mockedNavigation).back();\n  order.verify(listener).afterNavigateBack(any(WebDriver.class));\n  order.verify(mockedDriver).navigate();\n  order.verify(listener).beforeNavigateForward(any(WebDriver.class));\n  order.verify(mockedNavigation).forward();\n  order.verify(listener).afterNavigateForward(any(WebDriver.class));\n  order.verify(mockedDriver).navigate();\n  order.verify(listener).beforeNavigateRefresh(any(WebDriver.class));\n  order.verify(mockedNavigation).refresh();\n  order.verify(listener).afterNavigateRefresh(any(WebDriver.class));\n  verifyNoMoreInteractions(mockedDriver,mockedNavigation,listener);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 304,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 112,
        "startColumnNumber" : 4,
        "endLineNumber" : 112,
        "endColumnNumber" : 91
      },
      "nodeContext" : "order.verify(listener).afterNavigateTo(eq(\"http://www.get.com\"),any(WebDriver.class));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 103,
    "startColumnNumber" : 21,
    "endLineNumber" : 103,
    "endColumnNumber" : 41
  }, {
    "charLength" : 20,
    "startLineNumber" : 110,
    "startColumnNumber" : 47,
    "endLineNumber" : 110,
    "endColumnNumber" : 67
  }, {
    "charLength" : 20,
    "startLineNumber" : 111,
    "startColumnNumber" : 35,
    "endLineNumber" : 111,
    "endColumnNumber" : 55
  }, {
    "charLength" : 20,
    "startLineNumber" : 112,
    "startColumnNumber" : 46,
    "endLineNumber" : 112,
    "endColumnNumber" : 66
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  } ]
}