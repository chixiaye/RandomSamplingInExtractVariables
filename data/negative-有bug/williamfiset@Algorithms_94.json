{
  "id" : 94,
  "expression" : "impl2",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/test/java/com/williamfiset/algorithms/graphtheory/treealgorithms/TreeCenterTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "impl2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 84,
      "startColumnNumber" : 52,
      "endLineNumber" : 84,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 58
      },
      "nodeContext" : "assertThat(impl1).containsExactlyElementsIn(impl2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 59
      },
      "nodeContext" : "assertThat(impl1).containsExactlyElementsIn(impl2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 345,
        "startLineNumber" : 76,
        "startColumnNumber" : 48,
        "endLineNumber" : 85,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  List<List<Integer>> tree=generateRandomTree(n);\n  List<Integer> impl1=findTreeCenters(tree);\n  List<Integer> impl2=com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenterLongestPathImpl.findTreeCenters(tree);\n  assertThat(impl1).containsExactlyElementsIn(impl2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 387,
        "startLineNumber" : 76,
        "startColumnNumber" : 6,
        "endLineNumber" : 85,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int loops=0; loops < 100; loops++) {\n  List<List<Integer>> tree=generateRandomTree(n);\n  List<Integer> impl1=findTreeCenters(tree);\n  List<Integer> impl2=com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenterLongestPathImpl.findTreeCenters(tree);\n  assertThat(impl1).containsExactlyElementsIn(impl2);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 66,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 401,
        "startLineNumber" : 75,
        "startColumnNumber" : 34,
        "endLineNumber" : 86,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (int loops=0; loops < 100; loops++) {\n    List<List<Integer>> tree=generateRandomTree(n);\n    List<Integer> impl1=findTreeCenters(tree);\n    List<Integer> impl2=com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenterLongestPathImpl.findTreeCenters(tree);\n    assertThat(impl1).containsExactlyElementsIn(impl2);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 67,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 431,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 86,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int n=1; n < 500; n++) {\n  for (int loops=0; loops < 100; loops++) {\n    List<List<Integer>> tree=generateRandomTree(n);\n    List<Integer> impl1=findTreeCenters(tree);\n    List<Integer> impl2=com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenterLongestPathImpl.findTreeCenters(tree);\n    assertThat(impl1).containsExactlyElementsIn(impl2);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 78,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 441,
        "startLineNumber" : 74,
        "startColumnNumber" : 42,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int n=1; n < 500; n++) {\n    for (int loops=0; loops < 100; loops++) {\n      List<List<Integer>> tree=generateRandomTree(n);\n      List<Integer> impl1=findTreeCenters(tree);\n      List<Integer> impl2=com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenterLongestPathImpl.findTreeCenters(tree);\n      assertThat(impl1).containsExactlyElementsIn(impl2);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 489,
        "startLineNumber" : 73,
        "startColumnNumber" : 2,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testTreeCenterVsOtherImpl(){\n  for (int n=1; n < 500; n++) {\n    for (int loops=0; loops < 100; loops++) {\n      List<List<Integer>> tree=generateRandomTree(n);\n      List<Integer> impl1=findTreeCenters(tree);\n      List<Integer> impl2=com.williamfiset.algorithms.graphtheory.treealgorithms.TreeCenterLongestPathImpl.findTreeCenters(tree);\n      assertThat(impl1).containsExactlyElementsIn(impl2);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 85,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 59
      },
      "nodeContext" : "assertThat(impl1).containsExactlyElementsIn(impl2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.lang.Integer>"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 84,
    "startColumnNumber" : 52,
    "endLineNumber" : 84,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ ]
}