{
  "id" : 413,
  "expression" : "null",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/main/java/io/reactivex/internal/operators/completable/CompletableMergeArray.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 42,
      "startColumnNumber" : 21,
      "endLineNumber" : 42,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 42,
        "startColumnNumber" : 16,
        "endLineNumber" : 42,
        "endColumnNumber" : 25
      },
      "nodeContext" : "c == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 381,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (c == null) {\n  set.dispose();\n  NullPointerException npe=new NullPointerException(\"A completable source is null\");\n  if (once.compareAndSet(false,true)) {\n    s.onError(npe);\n    return;\n  }\n else {\n    RxJavaPlugins.onError(npe);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 37,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1383,
        "startLineNumber" : 37,
        "startColumnNumber" : 48,
        "endLineNumber" : 79,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (set.isDisposed()) {\n    return;\n  }\n  if (c == null) {\n    set.dispose();\n    NullPointerException npe=new NullPointerException(\"A completable source is null\");\n    if (once.compareAndSet(false,true)) {\n      s.onError(npe);\n      return;\n    }\n else {\n      RxJavaPlugins.onError(npe);\n    }\n  }\n  c.subscribe(new CompletableSubscriber(){\n    @Override public void onSubscribe(    Disposable d){\n      set.add(d);\n    }\n    @Override public void onError(    Throwable e){\n      set.dispose();\n      if (once.compareAndSet(false,true)) {\n        s.onError(e);\n      }\n else {\n        RxJavaPlugins.onError(e);\n      }\n    }\n    @Override public void onComplete(){\n      if (wip.decrementAndGet() == 0) {\n        if (once.compareAndSet(false,true)) {\n          s.onComplete();\n        }\n      }\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1423,
        "startLineNumber" : 37,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (CompletableConsumable c : sources) {\n  if (set.isDisposed()) {\n    return;\n  }\n  if (c == null) {\n    set.dispose();\n    NullPointerException npe=new NullPointerException(\"A completable source is null\");\n    if (once.compareAndSet(false,true)) {\n      s.onError(npe);\n      return;\n    }\n else {\n      RxJavaPlugins.onError(npe);\n    }\n  }\n  c.subscribe(new CompletableSubscriber(){\n    @Override public void onSubscribe(    Disposable d){\n      set.add(d);\n    }\n    @Override public void onError(    Throwable e){\n      set.dispose();\n      if (once.compareAndSet(false,true)) {\n        s.onError(e);\n      }\n else {\n        RxJavaPlugins.onError(e);\n      }\n    }\n    @Override public void onComplete(){\n      if (wip.decrementAndGet() == 0) {\n        if (once.compareAndSet(false,true)) {\n          s.onComplete();\n        }\n      }\n    }\n  }\n);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 132,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1853,
        "startLineNumber" : 30,
        "startColumnNumber" : 63,
        "endLineNumber" : 86,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final CompositeDisposable set=new CompositeDisposable();\n  final AtomicInteger wip=new AtomicInteger(sources.length + 1);\n  final AtomicBoolean once=new AtomicBoolean();\n  s.onSubscribe(set);\n  for (  CompletableConsumable c : sources) {\n    if (set.isDisposed()) {\n      return;\n    }\n    if (c == null) {\n      set.dispose();\n      NullPointerException npe=new NullPointerException(\"A completable source is null\");\n      if (once.compareAndSet(false,true)) {\n        s.onError(npe);\n        return;\n      }\n else {\n        RxJavaPlugins.onError(npe);\n      }\n    }\n    c.subscribe(new CompletableSubscriber(){\n      @Override public void onSubscribe(      Disposable d){\n        set.add(d);\n      }\n      @Override public void onError(      Throwable e){\n        set.dispose();\n        if (once.compareAndSet(false,true)) {\n          s.onError(e);\n        }\n else {\n          RxJavaPlugins.onError(e);\n        }\n      }\n      @Override public void onComplete(){\n        if (wip.decrementAndGet() == 0) {\n          if (once.compareAndSet(false,true)) {\n            s.onComplete();\n          }\n        }\n      }\n    }\n);\n  }\n  if (wip.decrementAndGet() == 0) {\n    if (once.compareAndSet(false,true)) {\n      s.onComplete();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 188,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1927,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 86,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void subscribeActual(final CompletableSubscriber s){\n  final CompositeDisposable set=new CompositeDisposable();\n  final AtomicInteger wip=new AtomicInteger(sources.length + 1);\n  final AtomicBoolean once=new AtomicBoolean();\n  s.onSubscribe(set);\n  for (  CompletableConsumable c : sources) {\n    if (set.isDisposed()) {\n      return;\n    }\n    if (c == null) {\n      set.dispose();\n      NullPointerException npe=new NullPointerException(\"A completable source is null\");\n      if (once.compareAndSet(false,true)) {\n        s.onError(npe);\n        return;\n      }\n else {\n        RxJavaPlugins.onError(npe);\n      }\n    }\n    c.subscribe(new CompletableSubscriber(){\n      @Override public void onSubscribe(      Disposable d){\n        set.add(d);\n      }\n      @Override public void onError(      Throwable e){\n        set.dispose();\n        if (once.compareAndSet(false,true)) {\n          s.onError(e);\n        }\n else {\n          RxJavaPlugins.onError(e);\n        }\n      }\n      @Override public void onComplete(){\n        if (wip.decrementAndGet() == 0) {\n          if (once.compareAndSet(false,true)) {\n            s.onComplete();\n          }\n        }\n      }\n    }\n);\n  }\n  if (wip.decrementAndGet() == 0) {\n    if (once.compareAndSet(false,true)) {\n      s.onComplete();\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 199,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 42,
        "startColumnNumber" : 16,
        "endLineNumber" : 42,
        "endColumnNumber" : 25
      },
      "nodeContext" : "c == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "null"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 42,
    "startColumnNumber" : 21,
    "endLineNumber" : 42,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ ]
}