{
  "id" : 365,
  "expression" : "patternMatchVariance(counters,pattern,MAX_INDIVIDUAL_VARIANCE)",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/oned/Code128Reader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "patternMatchVariance(counters,pattern,MAX_INDIVIDUAL_VARIANCE)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 64,
      "startLineNumber" : 223,
      "startColumnNumber" : 21,
      "endLineNumber" : 223,
      "endColumnNumber" : 85
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 223,
        "startColumnNumber" : 10,
        "endLineNumber" : 223,
        "endColumnNumber" : 85
      },
      "nodeContext" : "variance=patternMatchVariance(counters,pattern,MAX_INDIVIDUAL_VARIANCE)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 223,
        "startColumnNumber" : 6,
        "endLineNumber" : 223,
        "endColumnNumber" : 86
      },
      "nodeContext" : "int variance=patternMatchVariance(counters,pattern,MAX_INDIVIDUAL_VARIANCE);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 242,
        "startLineNumber" : 221,
        "startColumnNumber" : 51,
        "endLineNumber" : 228,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int[] pattern=CODE_PATTERNS[d];\n  int variance=patternMatchVariance(counters,pattern,MAX_INDIVIDUAL_VARIANCE);\n  if (variance < bestVariance) {\n    bestVariance=variance;\n    bestMatch=d;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 289,
        "startLineNumber" : 221,
        "startColumnNumber" : 4,
        "endLineNumber" : 228,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int d=0; d < CODE_PATTERNS.length; d++) {\n  int[] pattern=CODE_PATTERNS[d];\n  int variance=patternMatchVariance(counters,pattern,MAX_INDIVIDUAL_VARIANCE);\n  if (variance < bestVariance) {\n    bestVariance=variance;\n    bestMatch=d;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 45,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 655,
        "startLineNumber" : 217,
        "startColumnNumber" : 31,
        "endLineNumber" : 235,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  recordPattern(row,rowOffset,counters);\n  int bestVariance=MAX_AVG_VARIANCE;\n  int bestMatch=-1;\n  for (int d=0; d < CODE_PATTERNS.length; d++) {\n    int[] pattern=CODE_PATTERNS[d];\n    int variance=patternMatchVariance(counters,pattern,MAX_INDIVIDUAL_VARIANCE);\n    if (variance < bestVariance) {\n      bestVariance=variance;\n      bestMatch=d;\n    }\n  }\n  if (bestMatch >= 0) {\n    return bestMatch;\n  }\n else {\n    throw NotFoundException.getNotFoundInstance();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 75,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 762,
        "startLineNumber" : 216,
        "startColumnNumber" : 2,
        "endLineNumber" : 235,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static int decodeCode(BitArray row,int[] counters,int rowOffset) throws NotFoundException {\n  recordPattern(row,rowOffset,counters);\n  int bestVariance=MAX_AVG_VARIANCE;\n  int bestMatch=-1;\n  for (int d=0; d < CODE_PATTERNS.length; d++) {\n    int[] pattern=CODE_PATTERNS[d];\n    int variance=patternMatchVariance(counters,pattern,MAX_INDIVIDUAL_VARIANCE);\n    if (variance < bestVariance) {\n      bestVariance=variance;\n      bestMatch=d;\n    }\n  }\n  if (bestMatch >= 0) {\n    return bestMatch;\n  }\n else {\n    throw NotFoundException.getNotFoundInstance();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 94,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 223,
        "startColumnNumber" : 6,
        "endLineNumber" : 223,
        "endColumnNumber" : 86
      },
      "nodeContext" : "int variance=patternMatchVariance(counters,pattern,MAX_INDIVIDUAL_VARIANCE);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 6,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 64,
    "startLineNumber" : 223,
    "startColumnNumber" : 21,
    "endLineNumber" : 223,
    "endColumnNumber" : 85
  } ],
  "layoutRelationDataList" : [ ]
}