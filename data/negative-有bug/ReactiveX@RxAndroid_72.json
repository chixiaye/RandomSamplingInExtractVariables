{
  "id" : 72,
  "expression" : "new EmptyScheduler()",
  "projectName" : "ReactiveX@RxAndroid",
  "commitID" : "6b7cfe2a0acb8903ea10014d2f66386954a37813",
  "filePath" : "/rxandroid/src/test/java/io/reactivex/rxjava3/android/plugins/RxAndroidPluginsTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new EmptyScheduler()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 48,
      "startColumnNumber" : 39,
      "endLineNumber" : 48,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 48,
        "startColumnNumber" : 24,
        "endLineNumber" : 48,
        "endColumnNumber" : 59
      },
      "nodeContext" : "newScheduler=new EmptyScheduler()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 60
      },
      "nodeContext" : "final Scheduler newScheduler=new EmptyScheduler();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 643,
        "startLineNumber" : 46,
        "startColumnNumber" : 42,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final AtomicReference<Scheduler> schedulerRef=new AtomicReference<>();\n  final Scheduler newScheduler=new EmptyScheduler();\n  RxAndroidPlugins.setMainThreadSchedulerHandler(new Function<Scheduler,Scheduler>(){\n    @Override public Scheduler apply(    Scheduler scheduler){\n      schedulerRef.set(scheduler);\n      return newScheduler;\n    }\n  }\n);\n  Scheduler scheduler=new EmptyScheduler();\n  Scheduler actual=RxAndroidPlugins.onMainThreadScheduler(scheduler);\n  assertSame(newScheduler,actual);\n  assertSame(scheduler,schedulerRef.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 691,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void mainThreadHandlerCalled(){\n  final AtomicReference<Scheduler> schedulerRef=new AtomicReference<>();\n  final Scheduler newScheduler=new EmptyScheduler();\n  RxAndroidPlugins.setMainThreadSchedulerHandler(new Function<Scheduler,Scheduler>(){\n    @Override public Scheduler apply(    Scheduler scheduler){\n      schedulerRef.set(scheduler);\n      return newScheduler;\n    }\n  }\n);\n  Scheduler scheduler=new EmptyScheduler();\n  Scheduler actual=RxAndroidPlugins.onMainThreadScheduler(scheduler);\n  assertSame(newScheduler,actual);\n  assertSame(scheduler,schedulerRef.get());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 90,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 60
      },
      "nodeContext" : "final Scheduler newScheduler=new EmptyScheduler();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.rxjava3.android.testutil.EmptyScheduler"
  }, {
    "nodeContext" : "new EmptyScheduler()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 56,
      "startColumnNumber" : 30,
      "endLineNumber" : 56,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 56,
        "startColumnNumber" : 18,
        "endLineNumber" : 56,
        "endColumnNumber" : 50
      },
      "nodeContext" : "scheduler=new EmptyScheduler()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 51
      },
      "nodeContext" : "Scheduler scheduler=new EmptyScheduler();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 643,
        "startLineNumber" : 46,
        "startColumnNumber" : 42,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final AtomicReference<Scheduler> schedulerRef=new AtomicReference<>();\n  final Scheduler newScheduler=new EmptyScheduler();\n  RxAndroidPlugins.setMainThreadSchedulerHandler(new Function<Scheduler,Scheduler>(){\n    @Override public Scheduler apply(    Scheduler scheduler){\n      schedulerRef.set(scheduler);\n      return newScheduler;\n    }\n  }\n);\n  Scheduler scheduler=new EmptyScheduler();\n  Scheduler actual=RxAndroidPlugins.onMainThreadScheduler(scheduler);\n  assertSame(newScheduler,actual);\n  assertSame(scheduler,schedulerRef.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 691,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 60,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void mainThreadHandlerCalled(){\n  final AtomicReference<Scheduler> schedulerRef=new AtomicReference<>();\n  final Scheduler newScheduler=new EmptyScheduler();\n  RxAndroidPlugins.setMainThreadSchedulerHandler(new Function<Scheduler,Scheduler>(){\n    @Override public Scheduler apply(    Scheduler scheduler){\n      schedulerRef.set(scheduler);\n      return newScheduler;\n    }\n  }\n);\n  Scheduler scheduler=new EmptyScheduler();\n  Scheduler actual=RxAndroidPlugins.onMainThreadScheduler(scheduler);\n  assertSame(newScheduler,actual);\n  assertSame(scheduler,schedulerRef.get());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 90,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 51
      },
      "nodeContext" : "Scheduler scheduler=new EmptyScheduler();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.rxjava3.android.testutil.EmptyScheduler"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 48,
    "startColumnNumber" : 39,
    "endLineNumber" : 48,
    "endColumnNumber" : 59
  }, {
    "charLength" : 20,
    "startLineNumber" : 56,
    "startColumnNumber" : 30,
    "endLineNumber" : 56,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}