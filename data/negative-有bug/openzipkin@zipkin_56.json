{
  "id" : 56,
  "expression" : "CommonPools",
  "projectName" : "openzipkin@zipkin",
  "commitID" : "f02a993656f506277ca83737ddf494ed45fde4b3",
  "filePath" : "/zipkin-collector/scribe/src/test/java/zipkin2/collector/scribe/ITScribeCollector.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "CommonPools",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 92,
      "startColumnNumber" : 9,
      "endLineNumber" : 92,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 92,
        "startColumnNumber" : 9,
        "endLineNumber" : 92,
        "endColumnNumber" : 43
      },
      "nodeContext" : "CommonPools.blockingTaskExecutor()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 92,
        "startColumnNumber" : 6,
        "endLineNumber" : 92,
        "endColumnNumber" : 44
      },
      "nodeContext" : "eq(CommonPools.blockingTaskExecutor())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 91,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 45
      },
      "nodeContext" : "verify(collector,times(2)).accept(eq(TestObjects.TRACE),any(),eq(CommonPools.blockingTaskExecutor()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 91,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 46
      },
      "nodeContext" : "verify(collector,times(2)).accept(eq(TestObjects.TRACE),any(),eq(CommonPools.blockingTaskExecutor()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 21,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 892,
        "startLineNumber" : 69,
        "startColumnNumber" : 39,
        "endLineNumber" : 94,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TTransport transport=new TFramedTransport(new TSocket(\"localhost\",server.port()));\n  TProtocol protocol=new TBinaryProtocol(transport,false,false);\n  Scribe.Iface client=new Scribe.Client(protocol);\n  List<LogEntry> entries=TestObjects.TRACE.stream().map(ITScribeCollector::logEntry).collect(Collectors.toList());\n  transport.open();\n  try {\n    ResultCode code=client.Log(entries);\n    assertThat(code).isEqualTo(ResultCode.OK);\n    code=client.Log(entries);\n    assertThat(code).isEqualTo(ResultCode.OK);\n  }\n  finally {\n    transport.close();\n  }\n  verify(collector,times(2)).accept(eq(TestObjects.TRACE),any(),eq(CommonPools.blockingTaskExecutor()));\n  verify(metrics,times(2)).incrementMessages();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 138,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 929,
        "startLineNumber" : 69,
        "startColumnNumber" : 2,
        "endLineNumber" : 94,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test void normal() throws Exception {\n  TTransport transport=new TFramedTransport(new TSocket(\"localhost\",server.port()));\n  TProtocol protocol=new TBinaryProtocol(transport,false,false);\n  Scribe.Iface client=new Scribe.Client(protocol);\n  List<LogEntry> entries=TestObjects.TRACE.stream().map(ITScribeCollector::logEntry).collect(Collectors.toList());\n  transport.open();\n  try {\n    ResultCode code=client.Log(entries);\n    assertThat(code).isEqualTo(ResultCode.OK);\n    code=client.Log(entries);\n    assertThat(code).isEqualTo(ResultCode.OK);\n  }\n  finally {\n    transport.close();\n  }\n  verify(collector,times(2)).accept(eq(TestObjects.TRACE),any(),eq(CommonPools.blockingTaskExecutor()));\n  verify(metrics,times(2)).incrementMessages();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 145,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 92,
        "startColumnNumber" : 6,
        "endLineNumber" : 92,
        "endColumnNumber" : 44
      },
      "nodeContext" : "eq(CommonPools.blockingTaskExecutor())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 92,
    "startColumnNumber" : 9,
    "endLineNumber" : 92,
    "endColumnNumber" : 20
  } ],
  "layoutRelationDataList" : [ ]
}