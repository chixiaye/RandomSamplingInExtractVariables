{
  "id" : 432,
  "expression" : "p",
  "projectName" : "redisson@redisson",
  "commitID" : "62b5e68c05b7475e1e0f98b4161aacb35d376b97",
  "filePath" : "/redisson/src/main/java/org/redisson/rx/RedissonKeysRx.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "p",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 67,
      "startColumnNumber" : 15,
      "endLineNumber" : 67,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 1982,
        "startLineNumber" : 67,
        "startColumnNumber" : 15,
        "endLineNumber" : 121,
        "endColumnNumber" : 10
      },
      "nodeContext" : "p.doOnRequest(new LongConsumer(){\n  private RedisClient client;\n  private List<String> firstValues;\n  private long nextIterPos;\n  private long currentIndex;\n  @Override public void accept(  long value){\n    currentIndex=value;\n    nextValues();\n  }\n  protected void nextValues(){\n    instance.scanIteratorAsync(client,entry,nextIterPos,pattern,count).onComplete((res,e) -> {\n      if (e != null) {\n        p.onError(e);\n        return;\n      }\n      client=res.getRedisClient();\n      long prevIterPos=nextIterPos;\n      if (nextIterPos == 0 && firstValues == null) {\n        firstValues=(List<String>)(Object)res.getValues();\n      }\n else       if (res.getValues().equals(firstValues)) {\n        p.onComplete();\n        currentIndex=0;\n        return;\n      }\n      nextIterPos=res.getPos();\n      if (prevIterPos == nextIterPos) {\n        nextIterPos=-1;\n      }\n      for (      Object val : res.getValues()) {\n        p.onNext((String)val);\n        currentIndex--;\n        if (currentIndex == 0) {\n          p.onComplete();\n          return;\n        }\n      }\n      if (nextIterPos == -1) {\n        p.onComplete();\n        currentIndex=0;\n      }\n      if (currentIndex == 0) {\n        return;\n      }\n      nextValues();\n    }\n);\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 203,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1990,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 121,
        "endColumnNumber" : 11
      },
      "nodeContext" : "return p.doOnRequest(new LongConsumer(){\n  private RedisClient client;\n  private List<String> firstValues;\n  private long nextIterPos;\n  private long currentIndex;\n  @Override public void accept(  long value){\n    currentIndex=value;\n    nextValues();\n  }\n  protected void nextValues(){\n    instance.scanIteratorAsync(client,entry,nextIterPos,pattern,count).onComplete((res,e) -> {\n      if (e != null) {\n        p.onError(e);\n        return;\n      }\n      client=res.getRedisClient();\n      long prevIterPos=nextIterPos;\n      if (nextIterPos == 0 && firstValues == null) {\n        firstValues=(List<String>)(Object)res.getValues();\n      }\n else       if (res.getValues().equals(firstValues)) {\n        p.onComplete();\n        currentIndex=0;\n        return;\n      }\n      nextIterPos=res.getPos();\n      if (prevIterPos == nextIterPos) {\n        nextIterPos=-1;\n      }\n      for (      Object val : res.getValues()) {\n        p.onNext((String)val);\n        currentIndex--;\n        if (currentIndex == 0) {\n          p.onComplete();\n          return;\n        }\n      }\n      if (nextIterPos == -1) {\n        p.onComplete();\n        currentIndex=0;\n      }\n      if (currentIndex == 0) {\n        return;\n      }\n      nextValues();\n    }\n);\n  }\n}\n);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 204,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2068,
        "startLineNumber" : 65,
        "startColumnNumber" : 100,
        "endLineNumber" : 122,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ReplayProcessor<String> p=ReplayProcessor.create();\n  return p.doOnRequest(new LongConsumer(){\n    private RedisClient client;\n    private List<String> firstValues;\n    private long nextIterPos;\n    private long currentIndex;\n    @Override public void accept(    long value){\n      currentIndex=value;\n      nextValues();\n    }\n    protected void nextValues(){\n      instance.scanIteratorAsync(client,entry,nextIterPos,pattern,count).onComplete((res,e) -> {\n        if (e != null) {\n          p.onError(e);\n          return;\n        }\n        client=res.getRedisClient();\n        long prevIterPos=nextIterPos;\n        if (nextIterPos == 0 && firstValues == null) {\n          firstValues=(List<String>)(Object)res.getValues();\n        }\n else         if (res.getValues().equals(firstValues)) {\n          p.onComplete();\n          currentIndex=0;\n          return;\n        }\n        nextIterPos=res.getPos();\n        if (prevIterPos == nextIterPos) {\n          nextIterPos=-1;\n        }\n        for (        Object val : res.getValues()) {\n          p.onNext((String)val);\n          currentIndex--;\n          if (currentIndex == 0) {\n            p.onComplete();\n            return;\n          }\n        }\n        if (nextIterPos == -1) {\n          p.onComplete();\n          currentIndex=0;\n        }\n        if (currentIndex == 0) {\n          return;\n        }\n        nextValues();\n      }\n);\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 216,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2164,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 122,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private Publisher<String> createKeysIterator(MasterSlaveEntry entry,String pattern,int count){\n  ReplayProcessor<String> p=ReplayProcessor.create();\n  return p.doOnRequest(new LongConsumer(){\n    private RedisClient client;\n    private List<String> firstValues;\n    private long nextIterPos;\n    private long currentIndex;\n    @Override public void accept(    long value){\n      currentIndex=value;\n      nextValues();\n    }\n    protected void nextValues(){\n      instance.scanIteratorAsync(client,entry,nextIterPos,pattern,count).onComplete((res,e) -> {\n        if (e != null) {\n          p.onError(e);\n          return;\n        }\n        client=res.getRedisClient();\n        long prevIterPos=nextIterPos;\n        if (nextIterPos == 0 && firstValues == null) {\n          firstValues=(List<String>)(Object)res.getValues();\n        }\n else         if (res.getValues().equals(firstValues)) {\n          p.onComplete();\n          currentIndex=0;\n          return;\n        }\n        nextIterPos=res.getPos();\n        if (prevIterPos == nextIterPos) {\n          nextIterPos=-1;\n        }\n        for (        Object val : res.getValues()) {\n          p.onNext((String)val);\n          currentIndex--;\n          if (currentIndex == 0) {\n            p.onComplete();\n            return;\n          }\n        }\n        if (nextIterPos == -1) {\n          p.onComplete();\n          currentIndex=0;\n        }\n        if (currentIndex == 0) {\n          return;\n        }\n        nextValues();\n      }\n);\n    }\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 235,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 1982,
        "startLineNumber" : 67,
        "startColumnNumber" : 15,
        "endLineNumber" : 121,
        "endColumnNumber" : 10
      },
      "nodeContext" : "p.doOnRequest(new LongConsumer(){\n  private RedisClient client;\n  private List<String> firstValues;\n  private long nextIterPos;\n  private long currentIndex;\n  @Override public void accept(  long value){\n    currentIndex=value;\n    nextValues();\n  }\n  protected void nextValues(){\n    instance.scanIteratorAsync(client,entry,nextIterPos,pattern,count).onComplete((res,e) -> {\n      if (e != null) {\n        p.onError(e);\n        return;\n      }\n      client=res.getRedisClient();\n      long prevIterPos=nextIterPos;\n      if (nextIterPos == 0 && firstValues == null) {\n        firstValues=(List<String>)(Object)res.getValues();\n      }\n else       if (res.getValues().equals(firstValues)) {\n        p.onComplete();\n        currentIndex=0;\n        return;\n      }\n      nextIterPos=res.getPos();\n      if (prevIterPos == nextIterPos) {\n        nextIterPos=-1;\n      }\n      for (      Object val : res.getValues()) {\n        p.onNext((String)val);\n        currentIndex--;\n        if (currentIndex == 0) {\n          p.onComplete();\n          return;\n        }\n      }\n      if (nextIterPos == -1) {\n        p.onComplete();\n        currentIndex=0;\n      }\n      if (currentIndex == 0) {\n        return;\n      }\n      nextValues();\n    }\n);\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 203,
      "astHeight" : 17
    },
    "tokenLength" : 1,
    "type" : "org.redisson.rx.ReplayProcessor<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 67,
    "startColumnNumber" : 15,
    "endLineNumber" : 67,
    "endColumnNumber" : 16
  } ],
  "layoutRelationDataList" : [ ]
}