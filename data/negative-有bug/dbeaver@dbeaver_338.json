{
  "id" : 338,
  "expression" : "UIUtils",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.core/src/org/jkiss/dbeaver/ui/dialogs/connection/ConnectionPageNetworkHandler.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "UIUtils",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 104,
      "startColumnNumber" : 33,
      "endLineNumber" : 104,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 104,
        "startColumnNumber" : 33,
        "endLineNumber" : 104,
        "endColumnNumber" : 70
      },
      "nodeContext" : "UIUtils.createComposite(composite,5)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 104,
        "startColumnNumber" : 18,
        "endLineNumber" : 104,
        "endColumnNumber" : 70
      },
      "nodeContext" : "buttonsGroup=UIUtils.createComposite(composite,5)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 104,
        "startColumnNumber" : 8,
        "endLineNumber" : 104,
        "endColumnNumber" : 71
      },
      "nodeContext" : "Composite buttonsGroup=UIUtils.createComposite(composite,5);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4109,
        "startLineNumber" : 79,
        "startColumnNumber" : 48,
        "endLineNumber" : 167,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    String implName=handlerDescriptor.getHandlerType().getImplName();\n    UIPropertyConfiguratorDescriptor configDescriptor=UIPropertyConfiguratorRegistry.getInstance().getDescriptor(implName);\n    if (configDescriptor == null) {\n      return;\n    }\n    configurator=configDescriptor.createConfigurator();\n  }\n catch (  DBException e) {\n    log.error(\"Can't create network configurator '\" + handlerDescriptor.getId() + \"'\",e);\n    return;\n  }\n  DBPDataSourceContainer dataSource=site.getActiveDataSource();\n  DBPConnectionConfiguration connectionConfiguration=dataSource.getConnectionConfiguration();\n  handlerConfiguration=connectionConfiguration.getHandler(handlerDescriptor.getId());\n  if (handlerConfiguration == null) {\n    handlerConfiguration=new DBWHandlerConfiguration(handlerDescriptor,dataSource);\n    connectionConfiguration.updateHandler(handlerConfiguration);\n  }\n  Composite composite=new Composite(parent,SWT.NONE);\n  composite.setLayout(new GridLayout(1,false));\n  composite.setLayoutData(new GridData(GridData.FILL_BOTH));\n  Composite buttonsGroup=UIUtils.createComposite(composite,5);\n  buttonsGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n  useHandlerCheck=UIUtils.createCheckbox(buttonsGroup,NLS.bind(CoreMessages.dialog_tunnel_checkbox_use_handler,handlerDescriptor.getLabel()),false);\n  useHandlerCheck.addSelectionListener(new SelectionAdapter(){\n    @Override public void widgetSelected(    SelectionEvent e){\n      handlerConfiguration.setEnabled(useHandlerCheck.getSelection());\n      enableHandlerContent();\n    }\n  }\n);\n  UIUtils.createEmptyLabel(buttonsGroup,1,1).setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n  profileCombo=UIUtils.createLabelCombo(buttonsGroup,\"Profile\",SWT.READ_ONLY | SWT.DROP_DOWN);\n  GridData gd=new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n  gd.widthHint=200;\n  profileCombo.setLayoutData(gd);\n  profileCombo.addSelectionListener(new SelectionAdapter(){\n    @Override public void widgetSelected(    SelectionEvent e){\n      setConnectionConfigProfile(profileCombo.getText());\n    }\n  }\n);\n  ToolBar editToolbar=new ToolBar(buttonsGroup,SWT.HORIZONTAL);\n  ToolItem editItem=new ToolItem(editToolbar,SWT.PUSH);\n  editItem.setImage(DBeaverIcons.getImage(UIIcon.EDIT));\n  editItem.setToolTipText(\"Edit profiles\");\n  editItem.addSelectionListener(new SelectionAdapter(){\n    @Override public void widgetSelected(    SelectionEvent e){\n      PreferenceDialog preferenceDialog=PreferencesUtil.createPropertyDialogOn(getShell(),site.getProject().getEclipseProject(),PrefPageProjectNetworkProfiles.PAGE_ID,null,null);\n      if (preferenceDialog != null) {\n        if (preferenceDialog.open() == IDialogConstants.OK_ID) {\n          setConnectionConfigProfile(profileCombo.getText());\n        }\n      }\n    }\n  }\n);\n  handlerComposite=UIUtils.createComposite(composite,1);\n  handlerComposite.setLayoutData(new GridData(GridData.FILL_BOTH));\n  configurator.createControl(handlerComposite,this::updatePageCompletion);\n  configurator.loadSettings(handlerConfiguration);\n  useHandlerCheck.setSelection(handlerConfiguration.isEnabled());\n  enableHandlerContent();\n  updateProfileList();\n  if (activeProfile != null) {\n    DBWHandlerConfiguration profileConfig=activeProfile.getConfiguration(handlerDescriptor);\n    if (profileConfig != null) {\n      configurator.loadSettings(profileConfig);\n    }\n  }\n  setControl(composite);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 441,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4167,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 167,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void createControl(Composite parent){\n  try {\n    String implName=handlerDescriptor.getHandlerType().getImplName();\n    UIPropertyConfiguratorDescriptor configDescriptor=UIPropertyConfiguratorRegistry.getInstance().getDescriptor(implName);\n    if (configDescriptor == null) {\n      return;\n    }\n    configurator=configDescriptor.createConfigurator();\n  }\n catch (  DBException e) {\n    log.error(\"Can't create network configurator '\" + handlerDescriptor.getId() + \"'\",e);\n    return;\n  }\n  DBPDataSourceContainer dataSource=site.getActiveDataSource();\n  DBPConnectionConfiguration connectionConfiguration=dataSource.getConnectionConfiguration();\n  handlerConfiguration=connectionConfiguration.getHandler(handlerDescriptor.getId());\n  if (handlerConfiguration == null) {\n    handlerConfiguration=new DBWHandlerConfiguration(handlerDescriptor,dataSource);\n    connectionConfiguration.updateHandler(handlerConfiguration);\n  }\n  Composite composite=new Composite(parent,SWT.NONE);\n  composite.setLayout(new GridLayout(1,false));\n  composite.setLayoutData(new GridData(GridData.FILL_BOTH));\n  Composite buttonsGroup=UIUtils.createComposite(composite,5);\n  buttonsGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n  useHandlerCheck=UIUtils.createCheckbox(buttonsGroup,NLS.bind(CoreMessages.dialog_tunnel_checkbox_use_handler,handlerDescriptor.getLabel()),false);\n  useHandlerCheck.addSelectionListener(new SelectionAdapter(){\n    @Override public void widgetSelected(    SelectionEvent e){\n      handlerConfiguration.setEnabled(useHandlerCheck.getSelection());\n      enableHandlerContent();\n    }\n  }\n);\n  UIUtils.createEmptyLabel(buttonsGroup,1,1).setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n  profileCombo=UIUtils.createLabelCombo(buttonsGroup,\"Profile\",SWT.READ_ONLY | SWT.DROP_DOWN);\n  GridData gd=new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n  gd.widthHint=200;\n  profileCombo.setLayoutData(gd);\n  profileCombo.addSelectionListener(new SelectionAdapter(){\n    @Override public void widgetSelected(    SelectionEvent e){\n      setConnectionConfigProfile(profileCombo.getText());\n    }\n  }\n);\n  ToolBar editToolbar=new ToolBar(buttonsGroup,SWT.HORIZONTAL);\n  ToolItem editItem=new ToolItem(editToolbar,SWT.PUSH);\n  editItem.setImage(DBeaverIcons.getImage(UIIcon.EDIT));\n  editItem.setToolTipText(\"Edit profiles\");\n  editItem.addSelectionListener(new SelectionAdapter(){\n    @Override public void widgetSelected(    SelectionEvent e){\n      PreferenceDialog preferenceDialog=PreferencesUtil.createPropertyDialogOn(getShell(),site.getProject().getEclipseProject(),PrefPageProjectNetworkProfiles.PAGE_ID,null,null);\n      if (preferenceDialog != null) {\n        if (preferenceDialog.open() == IDialogConstants.OK_ID) {\n          setConnectionConfigProfile(profileCombo.getText());\n        }\n      }\n    }\n  }\n);\n  handlerComposite=UIUtils.createComposite(composite,1);\n  handlerComposite.setLayoutData(new GridData(GridData.FILL_BOTH));\n  configurator.createControl(handlerComposite,this::updatePageCompletion);\n  configurator.loadSettings(handlerConfiguration);\n  useHandlerCheck.setSelection(handlerConfiguration.isEnabled());\n  enableHandlerContent();\n  updateProfileList();\n  if (activeProfile != null) {\n    DBWHandlerConfiguration profileConfig=activeProfile.getConfiguration(handlerDescriptor);\n    if (profileConfig != null) {\n      configurator.loadSettings(profileConfig);\n    }\n  }\n  setControl(composite);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 451,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 104,
        "startColumnNumber" : 8,
        "endLineNumber" : 104,
        "endColumnNumber" : 71
      },
      "nodeContext" : "Composite buttonsGroup=UIUtils.createComposite(composite,5);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.jkiss.dbeaver.ui.UIUtils"
  }, {
    "nodeContext" : "UIUtils",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 107,
      "startColumnNumber" : 26,
      "endLineNumber" : 107,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 107,
        "startColumnNumber" : 26,
        "endLineNumber" : 108,
        "endColumnNumber" : 107
      },
      "nodeContext" : "UIUtils.createCheckbox(buttonsGroup,NLS.bind(CoreMessages.dialog_tunnel_checkbox_use_handler,handlerDescriptor.getLabel()),false)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 107,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 107
      },
      "nodeContext" : "useHandlerCheck=UIUtils.createCheckbox(buttonsGroup,NLS.bind(CoreMessages.dialog_tunnel_checkbox_use_handler,handlerDescriptor.getLabel()),false)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 107,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 108
      },
      "nodeContext" : "useHandlerCheck=UIUtils.createCheckbox(buttonsGroup,NLS.bind(CoreMessages.dialog_tunnel_checkbox_use_handler,handlerDescriptor.getLabel()),false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4109,
        "startLineNumber" : 79,
        "startColumnNumber" : 48,
        "endLineNumber" : 167,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    String implName=handlerDescriptor.getHandlerType().getImplName();\n    UIPropertyConfiguratorDescriptor configDescriptor=UIPropertyConfiguratorRegistry.getInstance().getDescriptor(implName);\n    if (configDescriptor == null) {\n      return;\n    }\n    configurator=configDescriptor.createConfigurator();\n  }\n catch (  DBException e) {\n    log.error(\"Can't create network configurator '\" + handlerDescriptor.getId() + \"'\",e);\n    return;\n  }\n  DBPDataSourceContainer dataSource=site.getActiveDataSource();\n  DBPConnectionConfiguration connectionConfiguration=dataSource.getConnectionConfiguration();\n  handlerConfiguration=connectionConfiguration.getHandler(handlerDescriptor.getId());\n  if (handlerConfiguration == null) {\n    handlerConfiguration=new DBWHandlerConfiguration(handlerDescriptor,dataSource);\n    connectionConfiguration.updateHandler(handlerConfiguration);\n  }\n  Composite composite=new Composite(parent,SWT.NONE);\n  composite.setLayout(new GridLayout(1,false));\n  composite.setLayoutData(new GridData(GridData.FILL_BOTH));\n  Composite buttonsGroup=UIUtils.createComposite(composite,5);\n  buttonsGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n  useHandlerCheck=UIUtils.createCheckbox(buttonsGroup,NLS.bind(CoreMessages.dialog_tunnel_checkbox_use_handler,handlerDescriptor.getLabel()),false);\n  useHandlerCheck.addSelectionListener(new SelectionAdapter(){\n    @Override public void widgetSelected(    SelectionEvent e){\n      handlerConfiguration.setEnabled(useHandlerCheck.getSelection());\n      enableHandlerContent();\n    }\n  }\n);\n  UIUtils.createEmptyLabel(buttonsGroup,1,1).setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n  profileCombo=UIUtils.createLabelCombo(buttonsGroup,\"Profile\",SWT.READ_ONLY | SWT.DROP_DOWN);\n  GridData gd=new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n  gd.widthHint=200;\n  profileCombo.setLayoutData(gd);\n  profileCombo.addSelectionListener(new SelectionAdapter(){\n    @Override public void widgetSelected(    SelectionEvent e){\n      setConnectionConfigProfile(profileCombo.getText());\n    }\n  }\n);\n  ToolBar editToolbar=new ToolBar(buttonsGroup,SWT.HORIZONTAL);\n  ToolItem editItem=new ToolItem(editToolbar,SWT.PUSH);\n  editItem.setImage(DBeaverIcons.getImage(UIIcon.EDIT));\n  editItem.setToolTipText(\"Edit profiles\");\n  editItem.addSelectionListener(new SelectionAdapter(){\n    @Override public void widgetSelected(    SelectionEvent e){\n      PreferenceDialog preferenceDialog=PreferencesUtil.createPropertyDialogOn(getShell(),site.getProject().getEclipseProject(),PrefPageProjectNetworkProfiles.PAGE_ID,null,null);\n      if (preferenceDialog != null) {\n        if (preferenceDialog.open() == IDialogConstants.OK_ID) {\n          setConnectionConfigProfile(profileCombo.getText());\n        }\n      }\n    }\n  }\n);\n  handlerComposite=UIUtils.createComposite(composite,1);\n  handlerComposite.setLayoutData(new GridData(GridData.FILL_BOTH));\n  configurator.createControl(handlerComposite,this::updatePageCompletion);\n  configurator.loadSettings(handlerConfiguration);\n  useHandlerCheck.setSelection(handlerConfiguration.isEnabled());\n  enableHandlerContent();\n  updateProfileList();\n  if (activeProfile != null) {\n    DBWHandlerConfiguration profileConfig=activeProfile.getConfiguration(handlerDescriptor);\n    if (profileConfig != null) {\n      configurator.loadSettings(profileConfig);\n    }\n  }\n  setControl(composite);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 441,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4167,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 167,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void createControl(Composite parent){\n  try {\n    String implName=handlerDescriptor.getHandlerType().getImplName();\n    UIPropertyConfiguratorDescriptor configDescriptor=UIPropertyConfiguratorRegistry.getInstance().getDescriptor(implName);\n    if (configDescriptor == null) {\n      return;\n    }\n    configurator=configDescriptor.createConfigurator();\n  }\n catch (  DBException e) {\n    log.error(\"Can't create network configurator '\" + handlerDescriptor.getId() + \"'\",e);\n    return;\n  }\n  DBPDataSourceContainer dataSource=site.getActiveDataSource();\n  DBPConnectionConfiguration connectionConfiguration=dataSource.getConnectionConfiguration();\n  handlerConfiguration=connectionConfiguration.getHandler(handlerDescriptor.getId());\n  if (handlerConfiguration == null) {\n    handlerConfiguration=new DBWHandlerConfiguration(handlerDescriptor,dataSource);\n    connectionConfiguration.updateHandler(handlerConfiguration);\n  }\n  Composite composite=new Composite(parent,SWT.NONE);\n  composite.setLayout(new GridLayout(1,false));\n  composite.setLayoutData(new GridData(GridData.FILL_BOTH));\n  Composite buttonsGroup=UIUtils.createComposite(composite,5);\n  buttonsGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n  useHandlerCheck=UIUtils.createCheckbox(buttonsGroup,NLS.bind(CoreMessages.dialog_tunnel_checkbox_use_handler,handlerDescriptor.getLabel()),false);\n  useHandlerCheck.addSelectionListener(new SelectionAdapter(){\n    @Override public void widgetSelected(    SelectionEvent e){\n      handlerConfiguration.setEnabled(useHandlerCheck.getSelection());\n      enableHandlerContent();\n    }\n  }\n);\n  UIUtils.createEmptyLabel(buttonsGroup,1,1).setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n  profileCombo=UIUtils.createLabelCombo(buttonsGroup,\"Profile\",SWT.READ_ONLY | SWT.DROP_DOWN);\n  GridData gd=new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n  gd.widthHint=200;\n  profileCombo.setLayoutData(gd);\n  profileCombo.addSelectionListener(new SelectionAdapter(){\n    @Override public void widgetSelected(    SelectionEvent e){\n      setConnectionConfigProfile(profileCombo.getText());\n    }\n  }\n);\n  ToolBar editToolbar=new ToolBar(buttonsGroup,SWT.HORIZONTAL);\n  ToolItem editItem=new ToolItem(editToolbar,SWT.PUSH);\n  editItem.setImage(DBeaverIcons.getImage(UIIcon.EDIT));\n  editItem.setToolTipText(\"Edit profiles\");\n  editItem.addSelectionListener(new SelectionAdapter(){\n    @Override public void widgetSelected(    SelectionEvent e){\n      PreferenceDialog preferenceDialog=PreferencesUtil.createPropertyDialogOn(getShell(),site.getProject().getEclipseProject(),PrefPageProjectNetworkProfiles.PAGE_ID,null,null);\n      if (preferenceDialog != null) {\n        if (preferenceDialog.open() == IDialogConstants.OK_ID) {\n          setConnectionConfigProfile(profileCombo.getText());\n        }\n      }\n    }\n  }\n);\n  handlerComposite=UIUtils.createComposite(composite,1);\n  handlerComposite.setLayoutData(new GridData(GridData.FILL_BOTH));\n  configurator.createControl(handlerComposite,this::updatePageCompletion);\n  configurator.loadSettings(handlerConfiguration);\n  useHandlerCheck.setSelection(handlerConfiguration.isEnabled());\n  enableHandlerContent();\n  updateProfileList();\n  if (activeProfile != null) {\n    DBWHandlerConfiguration profileConfig=activeProfile.getConfiguration(handlerDescriptor);\n    if (profileConfig != null) {\n      configurator.loadSettings(profileConfig);\n    }\n  }\n  setControl(composite);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 451,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 107,
        "startColumnNumber" : 26,
        "endLineNumber" : 108,
        "endColumnNumber" : 107
      },
      "nodeContext" : "UIUtils.createCheckbox(buttonsGroup,NLS.bind(CoreMessages.dialog_tunnel_checkbox_use_handler,handlerDescriptor.getLabel()),false)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.jkiss.dbeaver.ui.UIUtils"
  }, {
    "nodeContext" : "UIUtils",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 116,
      "startColumnNumber" : 8,
      "endLineNumber" : 116,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 116,
        "startColumnNumber" : 8,
        "endLineNumber" : 116,
        "endColumnNumber" : 52
      },
      "nodeContext" : "UIUtils.createEmptyLabel(buttonsGroup,1,1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 116,
        "startColumnNumber" : 8,
        "endLineNumber" : 116,
        "endColumnNumber" : 106
      },
      "nodeContext" : "UIUtils.createEmptyLabel(buttonsGroup,1,1).setLayoutData(new GridData(GridData.FILL_HORIZONTAL))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 116,
        "startColumnNumber" : 8,
        "endLineNumber" : 116,
        "endColumnNumber" : 107
      },
      "nodeContext" : "UIUtils.createEmptyLabel(buttonsGroup,1,1).setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4109,
        "startLineNumber" : 79,
        "startColumnNumber" : 48,
        "endLineNumber" : 167,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    String implName=handlerDescriptor.getHandlerType().getImplName();\n    UIPropertyConfiguratorDescriptor configDescriptor=UIPropertyConfiguratorRegistry.getInstance().getDescriptor(implName);\n    if (configDescriptor == null) {\n      return;\n    }\n    configurator=configDescriptor.createConfigurator();\n  }\n catch (  DBException e) {\n    log.error(\"Can't create network configurator '\" + handlerDescriptor.getId() + \"'\",e);\n    return;\n  }\n  DBPDataSourceContainer dataSource=site.getActiveDataSource();\n  DBPConnectionConfiguration connectionConfiguration=dataSource.getConnectionConfiguration();\n  handlerConfiguration=connectionConfiguration.getHandler(handlerDescriptor.getId());\n  if (handlerConfiguration == null) {\n    handlerConfiguration=new DBWHandlerConfiguration(handlerDescriptor,dataSource);\n    connectionConfiguration.updateHandler(handlerConfiguration);\n  }\n  Composite composite=new Composite(parent,SWT.NONE);\n  composite.setLayout(new GridLayout(1,false));\n  composite.setLayoutData(new GridData(GridData.FILL_BOTH));\n  Composite buttonsGroup=UIUtils.createComposite(composite,5);\n  buttonsGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n  useHandlerCheck=UIUtils.createCheckbox(buttonsGroup,NLS.bind(CoreMessages.dialog_tunnel_checkbox_use_handler,handlerDescriptor.getLabel()),false);\n  useHandlerCheck.addSelectionListener(new SelectionAdapter(){\n    @Override public void widgetSelected(    SelectionEvent e){\n      handlerConfiguration.setEnabled(useHandlerCheck.getSelection());\n      enableHandlerContent();\n    }\n  }\n);\n  UIUtils.createEmptyLabel(buttonsGroup,1,1).setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n  profileCombo=UIUtils.createLabelCombo(buttonsGroup,\"Profile\",SWT.READ_ONLY | SWT.DROP_DOWN);\n  GridData gd=new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n  gd.widthHint=200;\n  profileCombo.setLayoutData(gd);\n  profileCombo.addSelectionListener(new SelectionAdapter(){\n    @Override public void widgetSelected(    SelectionEvent e){\n      setConnectionConfigProfile(profileCombo.getText());\n    }\n  }\n);\n  ToolBar editToolbar=new ToolBar(buttonsGroup,SWT.HORIZONTAL);\n  ToolItem editItem=new ToolItem(editToolbar,SWT.PUSH);\n  editItem.setImage(DBeaverIcons.getImage(UIIcon.EDIT));\n  editItem.setToolTipText(\"Edit profiles\");\n  editItem.addSelectionListener(new SelectionAdapter(){\n    @Override public void widgetSelected(    SelectionEvent e){\n      PreferenceDialog preferenceDialog=PreferencesUtil.createPropertyDialogOn(getShell(),site.getProject().getEclipseProject(),PrefPageProjectNetworkProfiles.PAGE_ID,null,null);\n      if (preferenceDialog != null) {\n        if (preferenceDialog.open() == IDialogConstants.OK_ID) {\n          setConnectionConfigProfile(profileCombo.getText());\n        }\n      }\n    }\n  }\n);\n  handlerComposite=UIUtils.createComposite(composite,1);\n  handlerComposite.setLayoutData(new GridData(GridData.FILL_BOTH));\n  configurator.createControl(handlerComposite,this::updatePageCompletion);\n  configurator.loadSettings(handlerConfiguration);\n  useHandlerCheck.setSelection(handlerConfiguration.isEnabled());\n  enableHandlerContent();\n  updateProfileList();\n  if (activeProfile != null) {\n    DBWHandlerConfiguration profileConfig=activeProfile.getConfiguration(handlerDescriptor);\n    if (profileConfig != null) {\n      configurator.loadSettings(profileConfig);\n    }\n  }\n  setControl(composite);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 441,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4167,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 167,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void createControl(Composite parent){\n  try {\n    String implName=handlerDescriptor.getHandlerType().getImplName();\n    UIPropertyConfiguratorDescriptor configDescriptor=UIPropertyConfiguratorRegistry.getInstance().getDescriptor(implName);\n    if (configDescriptor == null) {\n      return;\n    }\n    configurator=configDescriptor.createConfigurator();\n  }\n catch (  DBException e) {\n    log.error(\"Can't create network configurator '\" + handlerDescriptor.getId() + \"'\",e);\n    return;\n  }\n  DBPDataSourceContainer dataSource=site.getActiveDataSource();\n  DBPConnectionConfiguration connectionConfiguration=dataSource.getConnectionConfiguration();\n  handlerConfiguration=connectionConfiguration.getHandler(handlerDescriptor.getId());\n  if (handlerConfiguration == null) {\n    handlerConfiguration=new DBWHandlerConfiguration(handlerDescriptor,dataSource);\n    connectionConfiguration.updateHandler(handlerConfiguration);\n  }\n  Composite composite=new Composite(parent,SWT.NONE);\n  composite.setLayout(new GridLayout(1,false));\n  composite.setLayoutData(new GridData(GridData.FILL_BOTH));\n  Composite buttonsGroup=UIUtils.createComposite(composite,5);\n  buttonsGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n  useHandlerCheck=UIUtils.createCheckbox(buttonsGroup,NLS.bind(CoreMessages.dialog_tunnel_checkbox_use_handler,handlerDescriptor.getLabel()),false);\n  useHandlerCheck.addSelectionListener(new SelectionAdapter(){\n    @Override public void widgetSelected(    SelectionEvent e){\n      handlerConfiguration.setEnabled(useHandlerCheck.getSelection());\n      enableHandlerContent();\n    }\n  }\n);\n  UIUtils.createEmptyLabel(buttonsGroup,1,1).setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n  profileCombo=UIUtils.createLabelCombo(buttonsGroup,\"Profile\",SWT.READ_ONLY | SWT.DROP_DOWN);\n  GridData gd=new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n  gd.widthHint=200;\n  profileCombo.setLayoutData(gd);\n  profileCombo.addSelectionListener(new SelectionAdapter(){\n    @Override public void widgetSelected(    SelectionEvent e){\n      setConnectionConfigProfile(profileCombo.getText());\n    }\n  }\n);\n  ToolBar editToolbar=new ToolBar(buttonsGroup,SWT.HORIZONTAL);\n  ToolItem editItem=new ToolItem(editToolbar,SWT.PUSH);\n  editItem.setImage(DBeaverIcons.getImage(UIIcon.EDIT));\n  editItem.setToolTipText(\"Edit profiles\");\n  editItem.addSelectionListener(new SelectionAdapter(){\n    @Override public void widgetSelected(    SelectionEvent e){\n      PreferenceDialog preferenceDialog=PreferencesUtil.createPropertyDialogOn(getShell(),site.getProject().getEclipseProject(),PrefPageProjectNetworkProfiles.PAGE_ID,null,null);\n      if (preferenceDialog != null) {\n        if (preferenceDialog.open() == IDialogConstants.OK_ID) {\n          setConnectionConfigProfile(profileCombo.getText());\n        }\n      }\n    }\n  }\n);\n  handlerComposite=UIUtils.createComposite(composite,1);\n  handlerComposite.setLayoutData(new GridData(GridData.FILL_BOTH));\n  configurator.createControl(handlerComposite,this::updatePageCompletion);\n  configurator.loadSettings(handlerConfiguration);\n  useHandlerCheck.setSelection(handlerConfiguration.isEnabled());\n  enableHandlerContent();\n  updateProfileList();\n  if (activeProfile != null) {\n    DBWHandlerConfiguration profileConfig=activeProfile.getConfiguration(handlerDescriptor);\n    if (profileConfig != null) {\n      configurator.loadSettings(profileConfig);\n    }\n  }\n  setControl(composite);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 451,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 116,
        "startColumnNumber" : 8,
        "endLineNumber" : 116,
        "endColumnNumber" : 107
      },
      "nodeContext" : "UIUtils.createEmptyLabel(buttonsGroup,1,1).setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.jkiss.dbeaver.ui.UIUtils"
  }, {
    "nodeContext" : "UIUtils",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 118,
      "startColumnNumber" : 23,
      "endLineNumber" : 118,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 118,
        "startColumnNumber" : 23,
        "endLineNumber" : 118,
        "endColumnNumber" : 103
      },
      "nodeContext" : "UIUtils.createLabelCombo(buttonsGroup,\"Profile\",SWT.READ_ONLY | SWT.DROP_DOWN)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 118,
        "startColumnNumber" : 8,
        "endLineNumber" : 118,
        "endColumnNumber" : 103
      },
      "nodeContext" : "profileCombo=UIUtils.createLabelCombo(buttonsGroup,\"Profile\",SWT.READ_ONLY | SWT.DROP_DOWN)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 118,
        "startColumnNumber" : 8,
        "endLineNumber" : 118,
        "endColumnNumber" : 104
      },
      "nodeContext" : "profileCombo=UIUtils.createLabelCombo(buttonsGroup,\"Profile\",SWT.READ_ONLY | SWT.DROP_DOWN);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4109,
        "startLineNumber" : 79,
        "startColumnNumber" : 48,
        "endLineNumber" : 167,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    String implName=handlerDescriptor.getHandlerType().getImplName();\n    UIPropertyConfiguratorDescriptor configDescriptor=UIPropertyConfiguratorRegistry.getInstance().getDescriptor(implName);\n    if (configDescriptor == null) {\n      return;\n    }\n    configurator=configDescriptor.createConfigurator();\n  }\n catch (  DBException e) {\n    log.error(\"Can't create network configurator '\" + handlerDescriptor.getId() + \"'\",e);\n    return;\n  }\n  DBPDataSourceContainer dataSource=site.getActiveDataSource();\n  DBPConnectionConfiguration connectionConfiguration=dataSource.getConnectionConfiguration();\n  handlerConfiguration=connectionConfiguration.getHandler(handlerDescriptor.getId());\n  if (handlerConfiguration == null) {\n    handlerConfiguration=new DBWHandlerConfiguration(handlerDescriptor,dataSource);\n    connectionConfiguration.updateHandler(handlerConfiguration);\n  }\n  Composite composite=new Composite(parent,SWT.NONE);\n  composite.setLayout(new GridLayout(1,false));\n  composite.setLayoutData(new GridData(GridData.FILL_BOTH));\n  Composite buttonsGroup=UIUtils.createComposite(composite,5);\n  buttonsGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n  useHandlerCheck=UIUtils.createCheckbox(buttonsGroup,NLS.bind(CoreMessages.dialog_tunnel_checkbox_use_handler,handlerDescriptor.getLabel()),false);\n  useHandlerCheck.addSelectionListener(new SelectionAdapter(){\n    @Override public void widgetSelected(    SelectionEvent e){\n      handlerConfiguration.setEnabled(useHandlerCheck.getSelection());\n      enableHandlerContent();\n    }\n  }\n);\n  UIUtils.createEmptyLabel(buttonsGroup,1,1).setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n  profileCombo=UIUtils.createLabelCombo(buttonsGroup,\"Profile\",SWT.READ_ONLY | SWT.DROP_DOWN);\n  GridData gd=new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n  gd.widthHint=200;\n  profileCombo.setLayoutData(gd);\n  profileCombo.addSelectionListener(new SelectionAdapter(){\n    @Override public void widgetSelected(    SelectionEvent e){\n      setConnectionConfigProfile(profileCombo.getText());\n    }\n  }\n);\n  ToolBar editToolbar=new ToolBar(buttonsGroup,SWT.HORIZONTAL);\n  ToolItem editItem=new ToolItem(editToolbar,SWT.PUSH);\n  editItem.setImage(DBeaverIcons.getImage(UIIcon.EDIT));\n  editItem.setToolTipText(\"Edit profiles\");\n  editItem.addSelectionListener(new SelectionAdapter(){\n    @Override public void widgetSelected(    SelectionEvent e){\n      PreferenceDialog preferenceDialog=PreferencesUtil.createPropertyDialogOn(getShell(),site.getProject().getEclipseProject(),PrefPageProjectNetworkProfiles.PAGE_ID,null,null);\n      if (preferenceDialog != null) {\n        if (preferenceDialog.open() == IDialogConstants.OK_ID) {\n          setConnectionConfigProfile(profileCombo.getText());\n        }\n      }\n    }\n  }\n);\n  handlerComposite=UIUtils.createComposite(composite,1);\n  handlerComposite.setLayoutData(new GridData(GridData.FILL_BOTH));\n  configurator.createControl(handlerComposite,this::updatePageCompletion);\n  configurator.loadSettings(handlerConfiguration);\n  useHandlerCheck.setSelection(handlerConfiguration.isEnabled());\n  enableHandlerContent();\n  updateProfileList();\n  if (activeProfile != null) {\n    DBWHandlerConfiguration profileConfig=activeProfile.getConfiguration(handlerDescriptor);\n    if (profileConfig != null) {\n      configurator.loadSettings(profileConfig);\n    }\n  }\n  setControl(composite);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 441,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4167,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 167,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void createControl(Composite parent){\n  try {\n    String implName=handlerDescriptor.getHandlerType().getImplName();\n    UIPropertyConfiguratorDescriptor configDescriptor=UIPropertyConfiguratorRegistry.getInstance().getDescriptor(implName);\n    if (configDescriptor == null) {\n      return;\n    }\n    configurator=configDescriptor.createConfigurator();\n  }\n catch (  DBException e) {\n    log.error(\"Can't create network configurator '\" + handlerDescriptor.getId() + \"'\",e);\n    return;\n  }\n  DBPDataSourceContainer dataSource=site.getActiveDataSource();\n  DBPConnectionConfiguration connectionConfiguration=dataSource.getConnectionConfiguration();\n  handlerConfiguration=connectionConfiguration.getHandler(handlerDescriptor.getId());\n  if (handlerConfiguration == null) {\n    handlerConfiguration=new DBWHandlerConfiguration(handlerDescriptor,dataSource);\n    connectionConfiguration.updateHandler(handlerConfiguration);\n  }\n  Composite composite=new Composite(parent,SWT.NONE);\n  composite.setLayout(new GridLayout(1,false));\n  composite.setLayoutData(new GridData(GridData.FILL_BOTH));\n  Composite buttonsGroup=UIUtils.createComposite(composite,5);\n  buttonsGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n  useHandlerCheck=UIUtils.createCheckbox(buttonsGroup,NLS.bind(CoreMessages.dialog_tunnel_checkbox_use_handler,handlerDescriptor.getLabel()),false);\n  useHandlerCheck.addSelectionListener(new SelectionAdapter(){\n    @Override public void widgetSelected(    SelectionEvent e){\n      handlerConfiguration.setEnabled(useHandlerCheck.getSelection());\n      enableHandlerContent();\n    }\n  }\n);\n  UIUtils.createEmptyLabel(buttonsGroup,1,1).setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n  profileCombo=UIUtils.createLabelCombo(buttonsGroup,\"Profile\",SWT.READ_ONLY | SWT.DROP_DOWN);\n  GridData gd=new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n  gd.widthHint=200;\n  profileCombo.setLayoutData(gd);\n  profileCombo.addSelectionListener(new SelectionAdapter(){\n    @Override public void widgetSelected(    SelectionEvent e){\n      setConnectionConfigProfile(profileCombo.getText());\n    }\n  }\n);\n  ToolBar editToolbar=new ToolBar(buttonsGroup,SWT.HORIZONTAL);\n  ToolItem editItem=new ToolItem(editToolbar,SWT.PUSH);\n  editItem.setImage(DBeaverIcons.getImage(UIIcon.EDIT));\n  editItem.setToolTipText(\"Edit profiles\");\n  editItem.addSelectionListener(new SelectionAdapter(){\n    @Override public void widgetSelected(    SelectionEvent e){\n      PreferenceDialog preferenceDialog=PreferencesUtil.createPropertyDialogOn(getShell(),site.getProject().getEclipseProject(),PrefPageProjectNetworkProfiles.PAGE_ID,null,null);\n      if (preferenceDialog != null) {\n        if (preferenceDialog.open() == IDialogConstants.OK_ID) {\n          setConnectionConfigProfile(profileCombo.getText());\n        }\n      }\n    }\n  }\n);\n  handlerComposite=UIUtils.createComposite(composite,1);\n  handlerComposite.setLayoutData(new GridData(GridData.FILL_BOTH));\n  configurator.createControl(handlerComposite,this::updatePageCompletion);\n  configurator.loadSettings(handlerConfiguration);\n  useHandlerCheck.setSelection(handlerConfiguration.isEnabled());\n  enableHandlerContent();\n  updateProfileList();\n  if (activeProfile != null) {\n    DBWHandlerConfiguration profileConfig=activeProfile.getConfiguration(handlerDescriptor);\n    if (profileConfig != null) {\n      configurator.loadSettings(profileConfig);\n    }\n  }\n  setControl(composite);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 451,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 118,
        "startColumnNumber" : 8,
        "endLineNumber" : 118,
        "endColumnNumber" : 104
      },
      "nodeContext" : "profileCombo=UIUtils.createLabelCombo(buttonsGroup,\"Profile\",SWT.READ_ONLY | SWT.DROP_DOWN);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "org.jkiss.dbeaver.ui.UIUtils"
  }, {
    "nodeContext" : "UIUtils",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 149,
      "startColumnNumber" : 27,
      "endLineNumber" : 149,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 149,
        "startColumnNumber" : 27,
        "endLineNumber" : 149,
        "endColumnNumber" : 64
      },
      "nodeContext" : "UIUtils.createComposite(composite,1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 149,
        "startColumnNumber" : 8,
        "endLineNumber" : 149,
        "endColumnNumber" : 64
      },
      "nodeContext" : "handlerComposite=UIUtils.createComposite(composite,1)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 149,
        "startColumnNumber" : 8,
        "endLineNumber" : 149,
        "endColumnNumber" : 65
      },
      "nodeContext" : "handlerComposite=UIUtils.createComposite(composite,1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4109,
        "startLineNumber" : 79,
        "startColumnNumber" : 48,
        "endLineNumber" : 167,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    String implName=handlerDescriptor.getHandlerType().getImplName();\n    UIPropertyConfiguratorDescriptor configDescriptor=UIPropertyConfiguratorRegistry.getInstance().getDescriptor(implName);\n    if (configDescriptor == null) {\n      return;\n    }\n    configurator=configDescriptor.createConfigurator();\n  }\n catch (  DBException e) {\n    log.error(\"Can't create network configurator '\" + handlerDescriptor.getId() + \"'\",e);\n    return;\n  }\n  DBPDataSourceContainer dataSource=site.getActiveDataSource();\n  DBPConnectionConfiguration connectionConfiguration=dataSource.getConnectionConfiguration();\n  handlerConfiguration=connectionConfiguration.getHandler(handlerDescriptor.getId());\n  if (handlerConfiguration == null) {\n    handlerConfiguration=new DBWHandlerConfiguration(handlerDescriptor,dataSource);\n    connectionConfiguration.updateHandler(handlerConfiguration);\n  }\n  Composite composite=new Composite(parent,SWT.NONE);\n  composite.setLayout(new GridLayout(1,false));\n  composite.setLayoutData(new GridData(GridData.FILL_BOTH));\n  Composite buttonsGroup=UIUtils.createComposite(composite,5);\n  buttonsGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n  useHandlerCheck=UIUtils.createCheckbox(buttonsGroup,NLS.bind(CoreMessages.dialog_tunnel_checkbox_use_handler,handlerDescriptor.getLabel()),false);\n  useHandlerCheck.addSelectionListener(new SelectionAdapter(){\n    @Override public void widgetSelected(    SelectionEvent e){\n      handlerConfiguration.setEnabled(useHandlerCheck.getSelection());\n      enableHandlerContent();\n    }\n  }\n);\n  UIUtils.createEmptyLabel(buttonsGroup,1,1).setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n  profileCombo=UIUtils.createLabelCombo(buttonsGroup,\"Profile\",SWT.READ_ONLY | SWT.DROP_DOWN);\n  GridData gd=new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n  gd.widthHint=200;\n  profileCombo.setLayoutData(gd);\n  profileCombo.addSelectionListener(new SelectionAdapter(){\n    @Override public void widgetSelected(    SelectionEvent e){\n      setConnectionConfigProfile(profileCombo.getText());\n    }\n  }\n);\n  ToolBar editToolbar=new ToolBar(buttonsGroup,SWT.HORIZONTAL);\n  ToolItem editItem=new ToolItem(editToolbar,SWT.PUSH);\n  editItem.setImage(DBeaverIcons.getImage(UIIcon.EDIT));\n  editItem.setToolTipText(\"Edit profiles\");\n  editItem.addSelectionListener(new SelectionAdapter(){\n    @Override public void widgetSelected(    SelectionEvent e){\n      PreferenceDialog preferenceDialog=PreferencesUtil.createPropertyDialogOn(getShell(),site.getProject().getEclipseProject(),PrefPageProjectNetworkProfiles.PAGE_ID,null,null);\n      if (preferenceDialog != null) {\n        if (preferenceDialog.open() == IDialogConstants.OK_ID) {\n          setConnectionConfigProfile(profileCombo.getText());\n        }\n      }\n    }\n  }\n);\n  handlerComposite=UIUtils.createComposite(composite,1);\n  handlerComposite.setLayoutData(new GridData(GridData.FILL_BOTH));\n  configurator.createControl(handlerComposite,this::updatePageCompletion);\n  configurator.loadSettings(handlerConfiguration);\n  useHandlerCheck.setSelection(handlerConfiguration.isEnabled());\n  enableHandlerContent();\n  updateProfileList();\n  if (activeProfile != null) {\n    DBWHandlerConfiguration profileConfig=activeProfile.getConfiguration(handlerDescriptor);\n    if (profileConfig != null) {\n      configurator.loadSettings(profileConfig);\n    }\n  }\n  setControl(composite);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 441,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4167,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 167,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void createControl(Composite parent){\n  try {\n    String implName=handlerDescriptor.getHandlerType().getImplName();\n    UIPropertyConfiguratorDescriptor configDescriptor=UIPropertyConfiguratorRegistry.getInstance().getDescriptor(implName);\n    if (configDescriptor == null) {\n      return;\n    }\n    configurator=configDescriptor.createConfigurator();\n  }\n catch (  DBException e) {\n    log.error(\"Can't create network configurator '\" + handlerDescriptor.getId() + \"'\",e);\n    return;\n  }\n  DBPDataSourceContainer dataSource=site.getActiveDataSource();\n  DBPConnectionConfiguration connectionConfiguration=dataSource.getConnectionConfiguration();\n  handlerConfiguration=connectionConfiguration.getHandler(handlerDescriptor.getId());\n  if (handlerConfiguration == null) {\n    handlerConfiguration=new DBWHandlerConfiguration(handlerDescriptor,dataSource);\n    connectionConfiguration.updateHandler(handlerConfiguration);\n  }\n  Composite composite=new Composite(parent,SWT.NONE);\n  composite.setLayout(new GridLayout(1,false));\n  composite.setLayoutData(new GridData(GridData.FILL_BOTH));\n  Composite buttonsGroup=UIUtils.createComposite(composite,5);\n  buttonsGroup.setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n  useHandlerCheck=UIUtils.createCheckbox(buttonsGroup,NLS.bind(CoreMessages.dialog_tunnel_checkbox_use_handler,handlerDescriptor.getLabel()),false);\n  useHandlerCheck.addSelectionListener(new SelectionAdapter(){\n    @Override public void widgetSelected(    SelectionEvent e){\n      handlerConfiguration.setEnabled(useHandlerCheck.getSelection());\n      enableHandlerContent();\n    }\n  }\n);\n  UIUtils.createEmptyLabel(buttonsGroup,1,1).setLayoutData(new GridData(GridData.FILL_HORIZONTAL));\n  profileCombo=UIUtils.createLabelCombo(buttonsGroup,\"Profile\",SWT.READ_ONLY | SWT.DROP_DOWN);\n  GridData gd=new GridData(GridData.HORIZONTAL_ALIGN_BEGINNING);\n  gd.widthHint=200;\n  profileCombo.setLayoutData(gd);\n  profileCombo.addSelectionListener(new SelectionAdapter(){\n    @Override public void widgetSelected(    SelectionEvent e){\n      setConnectionConfigProfile(profileCombo.getText());\n    }\n  }\n);\n  ToolBar editToolbar=new ToolBar(buttonsGroup,SWT.HORIZONTAL);\n  ToolItem editItem=new ToolItem(editToolbar,SWT.PUSH);\n  editItem.setImage(DBeaverIcons.getImage(UIIcon.EDIT));\n  editItem.setToolTipText(\"Edit profiles\");\n  editItem.addSelectionListener(new SelectionAdapter(){\n    @Override public void widgetSelected(    SelectionEvent e){\n      PreferenceDialog preferenceDialog=PreferencesUtil.createPropertyDialogOn(getShell(),site.getProject().getEclipseProject(),PrefPageProjectNetworkProfiles.PAGE_ID,null,null);\n      if (preferenceDialog != null) {\n        if (preferenceDialog.open() == IDialogConstants.OK_ID) {\n          setConnectionConfigProfile(profileCombo.getText());\n        }\n      }\n    }\n  }\n);\n  handlerComposite=UIUtils.createComposite(composite,1);\n  handlerComposite.setLayoutData(new GridData(GridData.FILL_BOTH));\n  configurator.createControl(handlerComposite,this::updatePageCompletion);\n  configurator.loadSettings(handlerConfiguration);\n  useHandlerCheck.setSelection(handlerConfiguration.isEnabled());\n  enableHandlerContent();\n  updateProfileList();\n  if (activeProfile != null) {\n    DBWHandlerConfiguration profileConfig=activeProfile.getConfiguration(handlerDescriptor);\n    if (profileConfig != null) {\n      configurator.loadSettings(profileConfig);\n    }\n  }\n  setControl(composite);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 451,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 149,
        "startColumnNumber" : 8,
        "endLineNumber" : 149,
        "endColumnNumber" : 65
      },
      "nodeContext" : "handlerComposite=UIUtils.createComposite(composite,1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.jkiss.dbeaver.ui.UIUtils"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 104,
    "startColumnNumber" : 33,
    "endLineNumber" : 104,
    "endColumnNumber" : 40
  }, {
    "charLength" : 7,
    "startLineNumber" : 107,
    "startColumnNumber" : 26,
    "endLineNumber" : 107,
    "endColumnNumber" : 33
  }, {
    "charLength" : 7,
    "startLineNumber" : 116,
    "startColumnNumber" : 8,
    "endLineNumber" : 116,
    "endColumnNumber" : 15
  }, {
    "charLength" : 7,
    "startLineNumber" : 118,
    "startColumnNumber" : 23,
    "endLineNumber" : 118,
    "endColumnNumber" : 30
  }, {
    "charLength" : 7,
    "startLineNumber" : 149,
    "startColumnNumber" : 27,
    "endLineNumber" : 149,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  } ]
}