{
  "id" : 416,
  "expression" : "log",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-rpc/dubbo-rpc-api/src/test/java/org/apache/dubbo/rpc/filter/AccessLogFilterTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "log",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 74,
      "startColumnNumber" : 65,
      "endLineNumber" : 74,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 74,
        "startColumnNumber" : 65,
        "endLineNumber" : 74,
        "endColumnNumber" : 85
      },
      "nodeContext" : "log.getServiceName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 86
      },
      "nodeContext" : "assertEquals(\"org.apache.dubbo.rpc.support.DemoService\",log.getServiceName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 87
      },
      "nodeContext" : "assertEquals(\"org.apache.dubbo.rpc.support.DemoService\",log.getServiceName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 835,
        "startLineNumber" : 59,
        "startColumnNumber" : 82,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  URL url=URL.valueOf(\"test://test:11/test?accesslog=true&group=dubbo&version=1.1\");\n  Invoker<AccessLogFilterTest> invoker=new MyInvoker<AccessLogFilterTest>(url);\n  Invocation invocation=new MockInvocation();\n  Field field=AccessLogFilter.class.getDeclaredField(\"LOG_ENTRIES\");\n  field.setAccessible(true);\n  assertTrue(((Map)field.get(AccessLogFilter.class)).isEmpty());\n  accessLogFilter.invoke(invoker,invocation);\n  Map<String,Set<AccessLogData>> logs=(Map<String,Set<AccessLogData>>)field.get(AccessLogFilter.class);\n  assertFalse(logs.isEmpty());\n  assertFalse(logs.get(\"true\").isEmpty());\n  AccessLogData log=logs.get(\"true\").iterator().next();\n  assertEquals(\"org.apache.dubbo.rpc.support.DemoService\",log.getServiceName());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 958,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test @SuppressWarnings(\"unchecked\") public void testDefault() throws NoSuchFieldException, IllegalAccessException {\n  URL url=URL.valueOf(\"test://test:11/test?accesslog=true&group=dubbo&version=1.1\");\n  Invoker<AccessLogFilterTest> invoker=new MyInvoker<AccessLogFilterTest>(url);\n  Invocation invocation=new MockInvocation();\n  Field field=AccessLogFilter.class.getDeclaredField(\"LOG_ENTRIES\");\n  field.setAccessible(true);\n  assertTrue(((Map)field.get(AccessLogFilter.class)).isEmpty());\n  accessLogFilter.invoke(invoker,invocation);\n  Map<String,Set<AccessLogData>> logs=(Map<String,Set<AccessLogData>>)field.get(AccessLogFilter.class);\n  assertFalse(logs.isEmpty());\n  assertFalse(logs.get(\"true\").isEmpty());\n  AccessLogData log=logs.get(\"true\").iterator().next();\n  assertEquals(\"org.apache.dubbo.rpc.support.DemoService\",log.getServiceName());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 148,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 87
      },
      "nodeContext" : "assertEquals(\"org.apache.dubbo.rpc.support.DemoService\",log.getServiceName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.rpc.support.AccessLogData"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 74,
    "startColumnNumber" : 65,
    "endLineNumber" : 74,
    "endColumnNumber" : 68
  } ],
  "layoutRelationDataList" : [ ]
}