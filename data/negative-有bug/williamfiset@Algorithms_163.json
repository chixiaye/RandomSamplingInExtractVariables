{
  "id" : 163,
  "expression" : "\"cc\"",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/test/java/com/williamfiset/algorithms/datastructures/priorityqueue/BinaryHeapQuickRemovalsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"cc\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 67,
      "startColumnNumber" : 33,
      "endLineNumber" : 67,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 67,
        "startColumnNumber" : 20,
        "endLineNumber" : 67,
        "endColumnNumber" : 50
      },
      "nodeContext" : "{\"aa\",\"bb\",\"cc\",\"dd\",\"ee\"}",
      "nodeType" : "ArrayInitializer",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 67,
        "startColumnNumber" : 13,
        "endLineNumber" : 67,
        "endColumnNumber" : 50
      },
      "nodeContext" : "strs={\"aa\",\"bb\",\"cc\",\"dd\",\"ee\"}",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 51
      },
      "nodeContext" : "String[] strs={\"aa\",\"bb\",\"cc\",\"dd\",\"ee\"};\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 217,
        "startLineNumber" : 64,
        "startColumnNumber" : 26,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  BinaryHeapQuickRemovals<String> q;\n  String[] strs={\"aa\",\"bb\",\"cc\",\"dd\",\"ee\"};\n  q=new BinaryHeapQuickRemovals<>(strs);\n  q.clear();\n  assertEquals(q.size(),0);\n  assertTrue(q.isEmpty());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 249,
        "startLineNumber" : 63,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testClear(){\n  BinaryHeapQuickRemovals<String> q;\n  String[] strs={\"aa\",\"bb\",\"cc\",\"dd\",\"ee\"};\n  q=new BinaryHeapQuickRemovals<>(strs);\n  q.clear();\n  assertEquals(q.size(),0);\n  assertTrue(q.isEmpty());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 53,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 51
      },
      "nodeContext" : "String[] strs={\"aa\",\"bb\",\"cc\",\"dd\",\"ee\"};\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 67,
    "startColumnNumber" : 33,
    "endLineNumber" : 67,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ ]
}