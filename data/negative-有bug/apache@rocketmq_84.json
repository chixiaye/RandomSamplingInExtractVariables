{
  "id" : 84,
  "expression" : "30",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/test/src/test/java/org/apache/rocketmq/test/client/producer/order/OrderMsgDynamicRebalanceIT.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "30",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 66,
      "startColumnNumber" : 30,
      "endLineNumber" : 66,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 66,
        "startColumnNumber" : 30,
        "endLineNumber" : 66,
        "endColumnNumber" : 39
      },
      "nodeContext" : "30 * 1000",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 36
      },
      "nodeContext" : "MQWait.waitConsumeAll(30 * 1000,producer.getAllMsgBody(),consumer1.getListener(),consumer2.getListener())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 37
      },
      "nodeContext" : "MQWait.waitConsumeAll(30 * 1000,producer.getAllMsgBody(),consumer1.getListener(),consumer2.getListener());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1178,
        "startLineNumber" : 55,
        "startColumnNumber" : 45,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int msgSize=10;\n  RMQNormalConsumer consumer1=getConsumer(nsAddr,topic,\"*\",new RMQOrderListener(\"1\"));\n  RMQNormalConsumer consumer2=getConsumer(nsAddr,consumer1.getConsumerGroup(),topic,\"*\",new RMQOrderListener(\"2\"));\n  List<MessageQueue> mqs=producer.getMessageQueue();\n  MessageQueueMsg mqMsgs=new MessageQueueMsg(mqs,msgSize);\n  producer.send(mqMsgs.getMsgsWithMQ());\n  MQWait.waitConsumeAll(30 * 1000,producer.getAllMsgBody(),consumer1.getListener(),consumer2.getListener());\n  consumer2.shutdown();\n  mqMsgs=new MessageQueueMsg(mqs,msgSize);\n  producer.send(mqMsgs.getMsgsWithMQ());\n  boolean recvAll=MQWait.waitConsumeAll(consumeTime,producer.getAllMsgBody(),consumer1.getListener(),consumer2.getListener());\n  assertThat(recvAll).isEqualTo(true);\n  assertThat(VerifyUtils.verifyOrder(((RMQOrderListener)consumer1.getListener()).getMsgs())).isEqualTo(true);\n  assertThat(VerifyUtils.verifyOrder(((RMQOrderListener)consumer2.getListener()).getMsgs())).isEqualTo(true);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 160,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1229,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testTwoConsumerAndCrashOne(){\n  int msgSize=10;\n  RMQNormalConsumer consumer1=getConsumer(nsAddr,topic,\"*\",new RMQOrderListener(\"1\"));\n  RMQNormalConsumer consumer2=getConsumer(nsAddr,consumer1.getConsumerGroup(),topic,\"*\",new RMQOrderListener(\"2\"));\n  List<MessageQueue> mqs=producer.getMessageQueue();\n  MessageQueueMsg mqMsgs=new MessageQueueMsg(mqs,msgSize);\n  producer.send(mqMsgs.getMsgsWithMQ());\n  MQWait.waitConsumeAll(30 * 1000,producer.getAllMsgBody(),consumer1.getListener(),consumer2.getListener());\n  consumer2.shutdown();\n  mqMsgs=new MessageQueueMsg(mqs,msgSize);\n  producer.send(mqMsgs.getMsgsWithMQ());\n  boolean recvAll=MQWait.waitConsumeAll(consumeTime,producer.getAllMsgBody(),consumer1.getListener(),consumer2.getListener());\n  assertThat(recvAll).isEqualTo(true);\n  assertThat(VerifyUtils.verifyOrder(((RMQOrderListener)consumer1.getListener()).getMsgs())).isEqualTo(true);\n  assertThat(VerifyUtils.verifyOrder(((RMQOrderListener)consumer2.getListener()).getMsgs())).isEqualTo(true);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 166,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 66,
        "startColumnNumber" : 30,
        "endLineNumber" : 66,
        "endColumnNumber" : 39
      },
      "nodeContext" : "30 * 1000",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 66,
    "startColumnNumber" : 30,
    "endLineNumber" : 66,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}