{
  "id" : 37,
  "expression" : "decodeObject",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/web/src/main/java/com/navercorp/pinpoint/web/mapper/SpanMapperV2.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "decodeObject",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 104,
      "startColumnNumber" : 20,
      "endLineNumber" : 104,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 104,
        "startColumnNumber" : 20,
        "endLineNumber" : 104,
        "endColumnNumber" : 50
      },
      "nodeContext" : "decodeObject instanceof SpanBo",
      "nodeType" : "InstanceofExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 692,
        "startLineNumber" : 104,
        "startColumnNumber" : 16,
        "endLineNumber" : 117,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (decodeObject instanceof SpanBo) {\n  SpanBo spanBo=(SpanBo)decodeObject;\n  if (logger.isDebugEnabled()) {\n    logger.debug(\"spanBo:{}\",spanBo);\n  }\n  AgentKey agentKey=newAgentKey(spanBo);\n  spanMap.put(agentKey,spanBo);\n}\n else if (decodeObject instanceof SpanChunkBo) {\n  SpanChunkBo spanChunkBo=(SpanChunkBo)decodeObject;\n  if (logger.isDebugEnabled()) {\n    logger.debug(\"spanChunkBo:{}\",spanChunkBo);\n  }\n  spanChunkList.add(spanChunkBo);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 71,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1249,
        "startLineNumber" : 95,
        "startColumnNumber" : 77,
        "endLineNumber" : 119,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  decodingContext.setCollectorAcceptedTime(cell.getTimestamp());\n  final Buffer qualifier=new OffsetFixedBuffer(cell.getQualifierArray(),cell.getQualifierOffset(),cell.getQualifierLength());\n  final Buffer columnValue=new OffsetFixedBuffer(cell.getValueArray(),cell.getValueOffset(),cell.getValueLength());\n  spanDecoder=resolveDecoder(columnValue);\n  final Object decodeObject=spanDecoder.decode(qualifier,columnValue,decodingContext);\n  if (decodeObject instanceof SpanBo) {\n    SpanBo spanBo=(SpanBo)decodeObject;\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"spanBo:{}\",spanBo);\n    }\n    AgentKey agentKey=newAgentKey(spanBo);\n    spanMap.put(agentKey,spanBo);\n  }\n else   if (decodeObject instanceof SpanChunkBo) {\n    SpanChunkBo spanChunkBo=(SpanChunkBo)decodeObject;\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"spanChunkBo:{}\",spanChunkBo);\n    }\n    spanChunkList.add(spanChunkBo);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1442,
        "startLineNumber" : 95,
        "startColumnNumber" : 12,
        "endLineNumber" : 121,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (CellUtil.matchingFamily(cell,HBaseTables.TRACE_V2_CF_SPAN)) {\n  decodingContext.setCollectorAcceptedTime(cell.getTimestamp());\n  final Buffer qualifier=new OffsetFixedBuffer(cell.getQualifierArray(),cell.getQualifierOffset(),cell.getQualifierLength());\n  final Buffer columnValue=new OffsetFixedBuffer(cell.getValueArray(),cell.getValueOffset(),cell.getValueLength());\n  spanDecoder=resolveDecoder(columnValue);\n  final Object decodeObject=spanDecoder.decode(qualifier,columnValue,decodingContext);\n  if (decodeObject instanceof SpanBo) {\n    SpanBo spanBo=(SpanBo)decodeObject;\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"spanBo:{}\",spanBo);\n    }\n    AgentKey agentKey=newAgentKey(spanBo);\n    spanMap.put(agentKey,spanBo);\n  }\n else   if (decodeObject instanceof SpanChunkBo) {\n    SpanChunkBo spanChunkBo=(SpanChunkBo)decodeObject;\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"spanChunkBo:{}\",spanChunkBo);\n    }\n    spanChunkList.add(spanChunkBo);\n  }\n}\n else {\n  logger.warn(\"Unknown ColumnFamily :{}\",Bytes.toStringBinary(CellUtil.cloneFamily(cell)));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 154,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1607,
        "startLineNumber" : 92,
        "startColumnNumber" : 35,
        "endLineNumber" : 123,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  SpanDecoder spanDecoder=null;\n  if (CellUtil.matchingFamily(cell,HBaseTables.TRACE_V2_CF_SPAN)) {\n    decodingContext.setCollectorAcceptedTime(cell.getTimestamp());\n    final Buffer qualifier=new OffsetFixedBuffer(cell.getQualifierArray(),cell.getQualifierOffset(),cell.getQualifierLength());\n    final Buffer columnValue=new OffsetFixedBuffer(cell.getValueArray(),cell.getValueOffset(),cell.getValueLength());\n    spanDecoder=resolveDecoder(columnValue);\n    final Object decodeObject=spanDecoder.decode(qualifier,columnValue,decodingContext);\n    if (decodeObject instanceof SpanBo) {\n      SpanBo spanBo=(SpanBo)decodeObject;\n      if (logger.isDebugEnabled()) {\n        logger.debug(\"spanBo:{}\",spanBo);\n      }\n      AgentKey agentKey=newAgentKey(spanBo);\n      spanMap.put(agentKey,spanBo);\n    }\n else     if (decodeObject instanceof SpanChunkBo) {\n      SpanChunkBo spanChunkBo=(SpanChunkBo)decodeObject;\n      if (logger.isDebugEnabled()) {\n        logger.debug(\"spanChunkBo:{}\",spanChunkBo);\n      }\n      spanChunkList.add(spanChunkBo);\n    }\n  }\n else {\n    logger.warn(\"Unknown ColumnFamily :{}\",Bytes.toStringBinary(CellUtil.cloneFamily(cell)));\n  }\n  nextCell(spanDecoder,decodingContext);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 166,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1634,
        "startLineNumber" : 92,
        "startColumnNumber" : 8,
        "endLineNumber" : 123,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Cell cell : rawCells) {\n  SpanDecoder spanDecoder=null;\n  if (CellUtil.matchingFamily(cell,HBaseTables.TRACE_V2_CF_SPAN)) {\n    decodingContext.setCollectorAcceptedTime(cell.getTimestamp());\n    final Buffer qualifier=new OffsetFixedBuffer(cell.getQualifierArray(),cell.getQualifierOffset(),cell.getQualifierLength());\n    final Buffer columnValue=new OffsetFixedBuffer(cell.getValueArray(),cell.getValueOffset(),cell.getValueLength());\n    spanDecoder=resolveDecoder(columnValue);\n    final Object decodeObject=spanDecoder.decode(qualifier,columnValue,decodingContext);\n    if (decodeObject instanceof SpanBo) {\n      SpanBo spanBo=(SpanBo)decodeObject;\n      if (logger.isDebugEnabled()) {\n        logger.debug(\"spanBo:{}\",spanBo);\n      }\n      AgentKey agentKey=newAgentKey(spanBo);\n      spanMap.put(agentKey,spanBo);\n    }\n else     if (decodeObject instanceof SpanChunkBo) {\n      SpanChunkBo spanChunkBo=(SpanChunkBo)decodeObject;\n      if (logger.isDebugEnabled()) {\n        logger.debug(\"spanChunkBo:{}\",spanChunkBo);\n      }\n      spanChunkList.add(spanChunkBo);\n    }\n  }\n else {\n    logger.warn(\"Unknown ColumnFamily :{}\",Bytes.toStringBinary(CellUtil.cloneFamily(cell)));\n  }\n  nextCell(spanDecoder,decodingContext);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 172,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2287,
        "startLineNumber" : 75,
        "startColumnNumber" : 75,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (result.isEmpty()) {\n    return Collections.emptyList();\n  }\n  byte[] rowKey=result.getRow();\n  final TransactionId transactionId=this.rowKeyDecoder.decodeRowKey(rowKey);\n  final Cell[] rawCells=result.rawCells();\n  ListMultimap<AgentKey,SpanBo> spanMap=LinkedListMultimap.create();\n  List<SpanChunkBo> spanChunkList=new ArrayList<>();\n  final SpanDecodingContext decodingContext=new SpanDecodingContext();\n  decodingContext.setTransactionId(transactionId);\n  for (  Cell cell : rawCells) {\n    SpanDecoder spanDecoder=null;\n    if (CellUtil.matchingFamily(cell,HBaseTables.TRACE_V2_CF_SPAN)) {\n      decodingContext.setCollectorAcceptedTime(cell.getTimestamp());\n      final Buffer qualifier=new OffsetFixedBuffer(cell.getQualifierArray(),cell.getQualifierOffset(),cell.getQualifierLength());\n      final Buffer columnValue=new OffsetFixedBuffer(cell.getValueArray(),cell.getValueOffset(),cell.getValueLength());\n      spanDecoder=resolveDecoder(columnValue);\n      final Object decodeObject=spanDecoder.decode(qualifier,columnValue,decodingContext);\n      if (decodeObject instanceof SpanBo) {\n        SpanBo spanBo=(SpanBo)decodeObject;\n        if (logger.isDebugEnabled()) {\n          logger.debug(\"spanBo:{}\",spanBo);\n        }\n        AgentKey agentKey=newAgentKey(spanBo);\n        spanMap.put(agentKey,spanBo);\n      }\n else       if (decodeObject instanceof SpanChunkBo) {\n        SpanChunkBo spanChunkBo=(SpanChunkBo)decodeObject;\n        if (logger.isDebugEnabled()) {\n          logger.debug(\"spanChunkBo:{}\",spanChunkBo);\n        }\n        spanChunkList.add(spanChunkBo);\n      }\n    }\n else {\n      logger.warn(\"Unknown ColumnFamily :{}\",Bytes.toStringBinary(CellUtil.cloneFamily(cell)));\n    }\n    nextCell(spanDecoder,decodingContext);\n  }\n  decodingContext.finish();\n  return buildSpanBoList(spanMap,spanChunkList);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 262,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2372,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public List<SpanBo> mapRow(Result result,int rowNum) throws Exception {\n  if (result.isEmpty()) {\n    return Collections.emptyList();\n  }\n  byte[] rowKey=result.getRow();\n  final TransactionId transactionId=this.rowKeyDecoder.decodeRowKey(rowKey);\n  final Cell[] rawCells=result.rawCells();\n  ListMultimap<AgentKey,SpanBo> spanMap=LinkedListMultimap.create();\n  List<SpanChunkBo> spanChunkList=new ArrayList<>();\n  final SpanDecodingContext decodingContext=new SpanDecodingContext();\n  decodingContext.setTransactionId(transactionId);\n  for (  Cell cell : rawCells) {\n    SpanDecoder spanDecoder=null;\n    if (CellUtil.matchingFamily(cell,HBaseTables.TRACE_V2_CF_SPAN)) {\n      decodingContext.setCollectorAcceptedTime(cell.getTimestamp());\n      final Buffer qualifier=new OffsetFixedBuffer(cell.getQualifierArray(),cell.getQualifierOffset(),cell.getQualifierLength());\n      final Buffer columnValue=new OffsetFixedBuffer(cell.getValueArray(),cell.getValueOffset(),cell.getValueLength());\n      spanDecoder=resolveDecoder(columnValue);\n      final Object decodeObject=spanDecoder.decode(qualifier,columnValue,decodingContext);\n      if (decodeObject instanceof SpanBo) {\n        SpanBo spanBo=(SpanBo)decodeObject;\n        if (logger.isDebugEnabled()) {\n          logger.debug(\"spanBo:{}\",spanBo);\n        }\n        AgentKey agentKey=newAgentKey(spanBo);\n        spanMap.put(agentKey,spanBo);\n      }\n else       if (decodeObject instanceof SpanChunkBo) {\n        SpanChunkBo spanChunkBo=(SpanChunkBo)decodeObject;\n        if (logger.isDebugEnabled()) {\n          logger.debug(\"spanChunkBo:{}\",spanChunkBo);\n        }\n        spanChunkList.add(spanChunkBo);\n      }\n    }\n else {\n      logger.warn(\"Unknown ColumnFamily :{}\",Bytes.toStringBinary(CellUtil.cloneFamily(cell)));\n    }\n    nextCell(spanDecoder,decodingContext);\n  }\n  decodingContext.finish();\n  return buildSpanBoList(spanMap,spanChunkList);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 281,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 104,
        "startColumnNumber" : 20,
        "endLineNumber" : 104,
        "endColumnNumber" : 50
      },
      "nodeContext" : "decodeObject instanceof SpanBo",
      "nodeType" : "InstanceofExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.Object"
  }, {
    "nodeContext" : "decodeObject",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 105,
      "startColumnNumber" : 45,
      "endLineNumber" : 105,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 105,
        "startColumnNumber" : 36,
        "endLineNumber" : 105,
        "endColumnNumber" : 57
      },
      "nodeContext" : "(SpanBo)decodeObject",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 105,
        "startColumnNumber" : 27,
        "endLineNumber" : 105,
        "endColumnNumber" : 57
      },
      "nodeContext" : "spanBo=(SpanBo)decodeObject",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 105,
        "startColumnNumber" : 20,
        "endLineNumber" : 105,
        "endColumnNumber" : 58
      },
      "nodeContext" : "SpanBo spanBo=(SpanBo)decodeObject;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 322,
        "startLineNumber" : 104,
        "startColumnNumber" : 52,
        "endLineNumber" : 111,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  SpanBo spanBo=(SpanBo)decodeObject;\n  if (logger.isDebugEnabled()) {\n    logger.debug(\"spanBo:{}\",spanBo);\n  }\n  AgentKey agentKey=newAgentKey(spanBo);\n  spanMap.put(agentKey,spanBo);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 692,
        "startLineNumber" : 104,
        "startColumnNumber" : 16,
        "endLineNumber" : 117,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (decodeObject instanceof SpanBo) {\n  SpanBo spanBo=(SpanBo)decodeObject;\n  if (logger.isDebugEnabled()) {\n    logger.debug(\"spanBo:{}\",spanBo);\n  }\n  AgentKey agentKey=newAgentKey(spanBo);\n  spanMap.put(agentKey,spanBo);\n}\n else if (decodeObject instanceof SpanChunkBo) {\n  SpanChunkBo spanChunkBo=(SpanChunkBo)decodeObject;\n  if (logger.isDebugEnabled()) {\n    logger.debug(\"spanChunkBo:{}\",spanChunkBo);\n  }\n  spanChunkList.add(spanChunkBo);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 71,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1249,
        "startLineNumber" : 95,
        "startColumnNumber" : 77,
        "endLineNumber" : 119,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  decodingContext.setCollectorAcceptedTime(cell.getTimestamp());\n  final Buffer qualifier=new OffsetFixedBuffer(cell.getQualifierArray(),cell.getQualifierOffset(),cell.getQualifierLength());\n  final Buffer columnValue=new OffsetFixedBuffer(cell.getValueArray(),cell.getValueOffset(),cell.getValueLength());\n  spanDecoder=resolveDecoder(columnValue);\n  final Object decodeObject=spanDecoder.decode(qualifier,columnValue,decodingContext);\n  if (decodeObject instanceof SpanBo) {\n    SpanBo spanBo=(SpanBo)decodeObject;\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"spanBo:{}\",spanBo);\n    }\n    AgentKey agentKey=newAgentKey(spanBo);\n    spanMap.put(agentKey,spanBo);\n  }\n else   if (decodeObject instanceof SpanChunkBo) {\n    SpanChunkBo spanChunkBo=(SpanChunkBo)decodeObject;\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"spanChunkBo:{}\",spanChunkBo);\n    }\n    spanChunkList.add(spanChunkBo);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1442,
        "startLineNumber" : 95,
        "startColumnNumber" : 12,
        "endLineNumber" : 121,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (CellUtil.matchingFamily(cell,HBaseTables.TRACE_V2_CF_SPAN)) {\n  decodingContext.setCollectorAcceptedTime(cell.getTimestamp());\n  final Buffer qualifier=new OffsetFixedBuffer(cell.getQualifierArray(),cell.getQualifierOffset(),cell.getQualifierLength());\n  final Buffer columnValue=new OffsetFixedBuffer(cell.getValueArray(),cell.getValueOffset(),cell.getValueLength());\n  spanDecoder=resolveDecoder(columnValue);\n  final Object decodeObject=spanDecoder.decode(qualifier,columnValue,decodingContext);\n  if (decodeObject instanceof SpanBo) {\n    SpanBo spanBo=(SpanBo)decodeObject;\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"spanBo:{}\",spanBo);\n    }\n    AgentKey agentKey=newAgentKey(spanBo);\n    spanMap.put(agentKey,spanBo);\n  }\n else   if (decodeObject instanceof SpanChunkBo) {\n    SpanChunkBo spanChunkBo=(SpanChunkBo)decodeObject;\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"spanChunkBo:{}\",spanChunkBo);\n    }\n    spanChunkList.add(spanChunkBo);\n  }\n}\n else {\n  logger.warn(\"Unknown ColumnFamily :{}\",Bytes.toStringBinary(CellUtil.cloneFamily(cell)));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 154,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1607,
        "startLineNumber" : 92,
        "startColumnNumber" : 35,
        "endLineNumber" : 123,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  SpanDecoder spanDecoder=null;\n  if (CellUtil.matchingFamily(cell,HBaseTables.TRACE_V2_CF_SPAN)) {\n    decodingContext.setCollectorAcceptedTime(cell.getTimestamp());\n    final Buffer qualifier=new OffsetFixedBuffer(cell.getQualifierArray(),cell.getQualifierOffset(),cell.getQualifierLength());\n    final Buffer columnValue=new OffsetFixedBuffer(cell.getValueArray(),cell.getValueOffset(),cell.getValueLength());\n    spanDecoder=resolveDecoder(columnValue);\n    final Object decodeObject=spanDecoder.decode(qualifier,columnValue,decodingContext);\n    if (decodeObject instanceof SpanBo) {\n      SpanBo spanBo=(SpanBo)decodeObject;\n      if (logger.isDebugEnabled()) {\n        logger.debug(\"spanBo:{}\",spanBo);\n      }\n      AgentKey agentKey=newAgentKey(spanBo);\n      spanMap.put(agentKey,spanBo);\n    }\n else     if (decodeObject instanceof SpanChunkBo) {\n      SpanChunkBo spanChunkBo=(SpanChunkBo)decodeObject;\n      if (logger.isDebugEnabled()) {\n        logger.debug(\"spanChunkBo:{}\",spanChunkBo);\n      }\n      spanChunkList.add(spanChunkBo);\n    }\n  }\n else {\n    logger.warn(\"Unknown ColumnFamily :{}\",Bytes.toStringBinary(CellUtil.cloneFamily(cell)));\n  }\n  nextCell(spanDecoder,decodingContext);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 166,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1634,
        "startLineNumber" : 92,
        "startColumnNumber" : 8,
        "endLineNumber" : 123,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Cell cell : rawCells) {\n  SpanDecoder spanDecoder=null;\n  if (CellUtil.matchingFamily(cell,HBaseTables.TRACE_V2_CF_SPAN)) {\n    decodingContext.setCollectorAcceptedTime(cell.getTimestamp());\n    final Buffer qualifier=new OffsetFixedBuffer(cell.getQualifierArray(),cell.getQualifierOffset(),cell.getQualifierLength());\n    final Buffer columnValue=new OffsetFixedBuffer(cell.getValueArray(),cell.getValueOffset(),cell.getValueLength());\n    spanDecoder=resolveDecoder(columnValue);\n    final Object decodeObject=spanDecoder.decode(qualifier,columnValue,decodingContext);\n    if (decodeObject instanceof SpanBo) {\n      SpanBo spanBo=(SpanBo)decodeObject;\n      if (logger.isDebugEnabled()) {\n        logger.debug(\"spanBo:{}\",spanBo);\n      }\n      AgentKey agentKey=newAgentKey(spanBo);\n      spanMap.put(agentKey,spanBo);\n    }\n else     if (decodeObject instanceof SpanChunkBo) {\n      SpanChunkBo spanChunkBo=(SpanChunkBo)decodeObject;\n      if (logger.isDebugEnabled()) {\n        logger.debug(\"spanChunkBo:{}\",spanChunkBo);\n      }\n      spanChunkList.add(spanChunkBo);\n    }\n  }\n else {\n    logger.warn(\"Unknown ColumnFamily :{}\",Bytes.toStringBinary(CellUtil.cloneFamily(cell)));\n  }\n  nextCell(spanDecoder,decodingContext);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 172,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2287,
        "startLineNumber" : 75,
        "startColumnNumber" : 75,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (result.isEmpty()) {\n    return Collections.emptyList();\n  }\n  byte[] rowKey=result.getRow();\n  final TransactionId transactionId=this.rowKeyDecoder.decodeRowKey(rowKey);\n  final Cell[] rawCells=result.rawCells();\n  ListMultimap<AgentKey,SpanBo> spanMap=LinkedListMultimap.create();\n  List<SpanChunkBo> spanChunkList=new ArrayList<>();\n  final SpanDecodingContext decodingContext=new SpanDecodingContext();\n  decodingContext.setTransactionId(transactionId);\n  for (  Cell cell : rawCells) {\n    SpanDecoder spanDecoder=null;\n    if (CellUtil.matchingFamily(cell,HBaseTables.TRACE_V2_CF_SPAN)) {\n      decodingContext.setCollectorAcceptedTime(cell.getTimestamp());\n      final Buffer qualifier=new OffsetFixedBuffer(cell.getQualifierArray(),cell.getQualifierOffset(),cell.getQualifierLength());\n      final Buffer columnValue=new OffsetFixedBuffer(cell.getValueArray(),cell.getValueOffset(),cell.getValueLength());\n      spanDecoder=resolveDecoder(columnValue);\n      final Object decodeObject=spanDecoder.decode(qualifier,columnValue,decodingContext);\n      if (decodeObject instanceof SpanBo) {\n        SpanBo spanBo=(SpanBo)decodeObject;\n        if (logger.isDebugEnabled()) {\n          logger.debug(\"spanBo:{}\",spanBo);\n        }\n        AgentKey agentKey=newAgentKey(spanBo);\n        spanMap.put(agentKey,spanBo);\n      }\n else       if (decodeObject instanceof SpanChunkBo) {\n        SpanChunkBo spanChunkBo=(SpanChunkBo)decodeObject;\n        if (logger.isDebugEnabled()) {\n          logger.debug(\"spanChunkBo:{}\",spanChunkBo);\n        }\n        spanChunkList.add(spanChunkBo);\n      }\n    }\n else {\n      logger.warn(\"Unknown ColumnFamily :{}\",Bytes.toStringBinary(CellUtil.cloneFamily(cell)));\n    }\n    nextCell(spanDecoder,decodingContext);\n  }\n  decodingContext.finish();\n  return buildSpanBoList(spanMap,spanChunkList);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 262,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2372,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public List<SpanBo> mapRow(Result result,int rowNum) throws Exception {\n  if (result.isEmpty()) {\n    return Collections.emptyList();\n  }\n  byte[] rowKey=result.getRow();\n  final TransactionId transactionId=this.rowKeyDecoder.decodeRowKey(rowKey);\n  final Cell[] rawCells=result.rawCells();\n  ListMultimap<AgentKey,SpanBo> spanMap=LinkedListMultimap.create();\n  List<SpanChunkBo> spanChunkList=new ArrayList<>();\n  final SpanDecodingContext decodingContext=new SpanDecodingContext();\n  decodingContext.setTransactionId(transactionId);\n  for (  Cell cell : rawCells) {\n    SpanDecoder spanDecoder=null;\n    if (CellUtil.matchingFamily(cell,HBaseTables.TRACE_V2_CF_SPAN)) {\n      decodingContext.setCollectorAcceptedTime(cell.getTimestamp());\n      final Buffer qualifier=new OffsetFixedBuffer(cell.getQualifierArray(),cell.getQualifierOffset(),cell.getQualifierLength());\n      final Buffer columnValue=new OffsetFixedBuffer(cell.getValueArray(),cell.getValueOffset(),cell.getValueLength());\n      spanDecoder=resolveDecoder(columnValue);\n      final Object decodeObject=spanDecoder.decode(qualifier,columnValue,decodingContext);\n      if (decodeObject instanceof SpanBo) {\n        SpanBo spanBo=(SpanBo)decodeObject;\n        if (logger.isDebugEnabled()) {\n          logger.debug(\"spanBo:{}\",spanBo);\n        }\n        AgentKey agentKey=newAgentKey(spanBo);\n        spanMap.put(agentKey,spanBo);\n      }\n else       if (decodeObject instanceof SpanChunkBo) {\n        SpanChunkBo spanChunkBo=(SpanChunkBo)decodeObject;\n        if (logger.isDebugEnabled()) {\n          logger.debug(\"spanChunkBo:{}\",spanChunkBo);\n        }\n        spanChunkList.add(spanChunkBo);\n      }\n    }\n else {\n      logger.warn(\"Unknown ColumnFamily :{}\",Bytes.toStringBinary(CellUtil.cloneFamily(cell)));\n    }\n    nextCell(spanDecoder,decodingContext);\n  }\n  decodingContext.finish();\n  return buildSpanBoList(spanMap,spanChunkList);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 281,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 105,
        "startColumnNumber" : 20,
        "endLineNumber" : 105,
        "endColumnNumber" : 58
      },
      "nodeContext" : "SpanBo spanBo=(SpanBo)decodeObject;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.Object"
  }, {
    "nodeContext" : "decodeObject",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 111,
      "startColumnNumber" : 27,
      "endLineNumber" : 111,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 111,
        "startColumnNumber" : 27,
        "endLineNumber" : 111,
        "endColumnNumber" : 62
      },
      "nodeContext" : "decodeObject instanceof SpanChunkBo",
      "nodeType" : "InstanceofExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 328,
        "startLineNumber" : 111,
        "startColumnNumber" : 23,
        "endLineNumber" : 117,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (decodeObject instanceof SpanChunkBo) {\n  SpanChunkBo spanChunkBo=(SpanChunkBo)decodeObject;\n  if (logger.isDebugEnabled()) {\n    logger.debug(\"spanChunkBo:{}\",spanChunkBo);\n  }\n  spanChunkList.add(spanChunkBo);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 692,
        "startLineNumber" : 104,
        "startColumnNumber" : 16,
        "endLineNumber" : 117,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (decodeObject instanceof SpanBo) {\n  SpanBo spanBo=(SpanBo)decodeObject;\n  if (logger.isDebugEnabled()) {\n    logger.debug(\"spanBo:{}\",spanBo);\n  }\n  AgentKey agentKey=newAgentKey(spanBo);\n  spanMap.put(agentKey,spanBo);\n}\n else if (decodeObject instanceof SpanChunkBo) {\n  SpanChunkBo spanChunkBo=(SpanChunkBo)decodeObject;\n  if (logger.isDebugEnabled()) {\n    logger.debug(\"spanChunkBo:{}\",spanChunkBo);\n  }\n  spanChunkList.add(spanChunkBo);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 71,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1249,
        "startLineNumber" : 95,
        "startColumnNumber" : 77,
        "endLineNumber" : 119,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  decodingContext.setCollectorAcceptedTime(cell.getTimestamp());\n  final Buffer qualifier=new OffsetFixedBuffer(cell.getQualifierArray(),cell.getQualifierOffset(),cell.getQualifierLength());\n  final Buffer columnValue=new OffsetFixedBuffer(cell.getValueArray(),cell.getValueOffset(),cell.getValueLength());\n  spanDecoder=resolveDecoder(columnValue);\n  final Object decodeObject=spanDecoder.decode(qualifier,columnValue,decodingContext);\n  if (decodeObject instanceof SpanBo) {\n    SpanBo spanBo=(SpanBo)decodeObject;\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"spanBo:{}\",spanBo);\n    }\n    AgentKey agentKey=newAgentKey(spanBo);\n    spanMap.put(agentKey,spanBo);\n  }\n else   if (decodeObject instanceof SpanChunkBo) {\n    SpanChunkBo spanChunkBo=(SpanChunkBo)decodeObject;\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"spanChunkBo:{}\",spanChunkBo);\n    }\n    spanChunkList.add(spanChunkBo);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1442,
        "startLineNumber" : 95,
        "startColumnNumber" : 12,
        "endLineNumber" : 121,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (CellUtil.matchingFamily(cell,HBaseTables.TRACE_V2_CF_SPAN)) {\n  decodingContext.setCollectorAcceptedTime(cell.getTimestamp());\n  final Buffer qualifier=new OffsetFixedBuffer(cell.getQualifierArray(),cell.getQualifierOffset(),cell.getQualifierLength());\n  final Buffer columnValue=new OffsetFixedBuffer(cell.getValueArray(),cell.getValueOffset(),cell.getValueLength());\n  spanDecoder=resolveDecoder(columnValue);\n  final Object decodeObject=spanDecoder.decode(qualifier,columnValue,decodingContext);\n  if (decodeObject instanceof SpanBo) {\n    SpanBo spanBo=(SpanBo)decodeObject;\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"spanBo:{}\",spanBo);\n    }\n    AgentKey agentKey=newAgentKey(spanBo);\n    spanMap.put(agentKey,spanBo);\n  }\n else   if (decodeObject instanceof SpanChunkBo) {\n    SpanChunkBo spanChunkBo=(SpanChunkBo)decodeObject;\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"spanChunkBo:{}\",spanChunkBo);\n    }\n    spanChunkList.add(spanChunkBo);\n  }\n}\n else {\n  logger.warn(\"Unknown ColumnFamily :{}\",Bytes.toStringBinary(CellUtil.cloneFamily(cell)));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 154,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1607,
        "startLineNumber" : 92,
        "startColumnNumber" : 35,
        "endLineNumber" : 123,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  SpanDecoder spanDecoder=null;\n  if (CellUtil.matchingFamily(cell,HBaseTables.TRACE_V2_CF_SPAN)) {\n    decodingContext.setCollectorAcceptedTime(cell.getTimestamp());\n    final Buffer qualifier=new OffsetFixedBuffer(cell.getQualifierArray(),cell.getQualifierOffset(),cell.getQualifierLength());\n    final Buffer columnValue=new OffsetFixedBuffer(cell.getValueArray(),cell.getValueOffset(),cell.getValueLength());\n    spanDecoder=resolveDecoder(columnValue);\n    final Object decodeObject=spanDecoder.decode(qualifier,columnValue,decodingContext);\n    if (decodeObject instanceof SpanBo) {\n      SpanBo spanBo=(SpanBo)decodeObject;\n      if (logger.isDebugEnabled()) {\n        logger.debug(\"spanBo:{}\",spanBo);\n      }\n      AgentKey agentKey=newAgentKey(spanBo);\n      spanMap.put(agentKey,spanBo);\n    }\n else     if (decodeObject instanceof SpanChunkBo) {\n      SpanChunkBo spanChunkBo=(SpanChunkBo)decodeObject;\n      if (logger.isDebugEnabled()) {\n        logger.debug(\"spanChunkBo:{}\",spanChunkBo);\n      }\n      spanChunkList.add(spanChunkBo);\n    }\n  }\n else {\n    logger.warn(\"Unknown ColumnFamily :{}\",Bytes.toStringBinary(CellUtil.cloneFamily(cell)));\n  }\n  nextCell(spanDecoder,decodingContext);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 166,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1634,
        "startLineNumber" : 92,
        "startColumnNumber" : 8,
        "endLineNumber" : 123,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Cell cell : rawCells) {\n  SpanDecoder spanDecoder=null;\n  if (CellUtil.matchingFamily(cell,HBaseTables.TRACE_V2_CF_SPAN)) {\n    decodingContext.setCollectorAcceptedTime(cell.getTimestamp());\n    final Buffer qualifier=new OffsetFixedBuffer(cell.getQualifierArray(),cell.getQualifierOffset(),cell.getQualifierLength());\n    final Buffer columnValue=new OffsetFixedBuffer(cell.getValueArray(),cell.getValueOffset(),cell.getValueLength());\n    spanDecoder=resolveDecoder(columnValue);\n    final Object decodeObject=spanDecoder.decode(qualifier,columnValue,decodingContext);\n    if (decodeObject instanceof SpanBo) {\n      SpanBo spanBo=(SpanBo)decodeObject;\n      if (logger.isDebugEnabled()) {\n        logger.debug(\"spanBo:{}\",spanBo);\n      }\n      AgentKey agentKey=newAgentKey(spanBo);\n      spanMap.put(agentKey,spanBo);\n    }\n else     if (decodeObject instanceof SpanChunkBo) {\n      SpanChunkBo spanChunkBo=(SpanChunkBo)decodeObject;\n      if (logger.isDebugEnabled()) {\n        logger.debug(\"spanChunkBo:{}\",spanChunkBo);\n      }\n      spanChunkList.add(spanChunkBo);\n    }\n  }\n else {\n    logger.warn(\"Unknown ColumnFamily :{}\",Bytes.toStringBinary(CellUtil.cloneFamily(cell)));\n  }\n  nextCell(spanDecoder,decodingContext);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 172,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2287,
        "startLineNumber" : 75,
        "startColumnNumber" : 75,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (result.isEmpty()) {\n    return Collections.emptyList();\n  }\n  byte[] rowKey=result.getRow();\n  final TransactionId transactionId=this.rowKeyDecoder.decodeRowKey(rowKey);\n  final Cell[] rawCells=result.rawCells();\n  ListMultimap<AgentKey,SpanBo> spanMap=LinkedListMultimap.create();\n  List<SpanChunkBo> spanChunkList=new ArrayList<>();\n  final SpanDecodingContext decodingContext=new SpanDecodingContext();\n  decodingContext.setTransactionId(transactionId);\n  for (  Cell cell : rawCells) {\n    SpanDecoder spanDecoder=null;\n    if (CellUtil.matchingFamily(cell,HBaseTables.TRACE_V2_CF_SPAN)) {\n      decodingContext.setCollectorAcceptedTime(cell.getTimestamp());\n      final Buffer qualifier=new OffsetFixedBuffer(cell.getQualifierArray(),cell.getQualifierOffset(),cell.getQualifierLength());\n      final Buffer columnValue=new OffsetFixedBuffer(cell.getValueArray(),cell.getValueOffset(),cell.getValueLength());\n      spanDecoder=resolveDecoder(columnValue);\n      final Object decodeObject=spanDecoder.decode(qualifier,columnValue,decodingContext);\n      if (decodeObject instanceof SpanBo) {\n        SpanBo spanBo=(SpanBo)decodeObject;\n        if (logger.isDebugEnabled()) {\n          logger.debug(\"spanBo:{}\",spanBo);\n        }\n        AgentKey agentKey=newAgentKey(spanBo);\n        spanMap.put(agentKey,spanBo);\n      }\n else       if (decodeObject instanceof SpanChunkBo) {\n        SpanChunkBo spanChunkBo=(SpanChunkBo)decodeObject;\n        if (logger.isDebugEnabled()) {\n          logger.debug(\"spanChunkBo:{}\",spanChunkBo);\n        }\n        spanChunkList.add(spanChunkBo);\n      }\n    }\n else {\n      logger.warn(\"Unknown ColumnFamily :{}\",Bytes.toStringBinary(CellUtil.cloneFamily(cell)));\n    }\n    nextCell(spanDecoder,decodingContext);\n  }\n  decodingContext.finish();\n  return buildSpanBoList(spanMap,spanChunkList);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 262,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2372,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public List<SpanBo> mapRow(Result result,int rowNum) throws Exception {\n  if (result.isEmpty()) {\n    return Collections.emptyList();\n  }\n  byte[] rowKey=result.getRow();\n  final TransactionId transactionId=this.rowKeyDecoder.decodeRowKey(rowKey);\n  final Cell[] rawCells=result.rawCells();\n  ListMultimap<AgentKey,SpanBo> spanMap=LinkedListMultimap.create();\n  List<SpanChunkBo> spanChunkList=new ArrayList<>();\n  final SpanDecodingContext decodingContext=new SpanDecodingContext();\n  decodingContext.setTransactionId(transactionId);\n  for (  Cell cell : rawCells) {\n    SpanDecoder spanDecoder=null;\n    if (CellUtil.matchingFamily(cell,HBaseTables.TRACE_V2_CF_SPAN)) {\n      decodingContext.setCollectorAcceptedTime(cell.getTimestamp());\n      final Buffer qualifier=new OffsetFixedBuffer(cell.getQualifierArray(),cell.getQualifierOffset(),cell.getQualifierLength());\n      final Buffer columnValue=new OffsetFixedBuffer(cell.getValueArray(),cell.getValueOffset(),cell.getValueLength());\n      spanDecoder=resolveDecoder(columnValue);\n      final Object decodeObject=spanDecoder.decode(qualifier,columnValue,decodingContext);\n      if (decodeObject instanceof SpanBo) {\n        SpanBo spanBo=(SpanBo)decodeObject;\n        if (logger.isDebugEnabled()) {\n          logger.debug(\"spanBo:{}\",spanBo);\n        }\n        AgentKey agentKey=newAgentKey(spanBo);\n        spanMap.put(agentKey,spanBo);\n      }\n else       if (decodeObject instanceof SpanChunkBo) {\n        SpanChunkBo spanChunkBo=(SpanChunkBo)decodeObject;\n        if (logger.isDebugEnabled()) {\n          logger.debug(\"spanChunkBo:{}\",spanChunkBo);\n        }\n        spanChunkList.add(spanChunkBo);\n      }\n    }\n else {\n      logger.warn(\"Unknown ColumnFamily :{}\",Bytes.toStringBinary(CellUtil.cloneFamily(cell)));\n    }\n    nextCell(spanDecoder,decodingContext);\n  }\n  decodingContext.finish();\n  return buildSpanBoList(spanMap,spanChunkList);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 281,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 111,
        "startColumnNumber" : 27,
        "endLineNumber" : 111,
        "endColumnNumber" : 62
      },
      "nodeContext" : "decodeObject instanceof SpanChunkBo",
      "nodeType" : "InstanceofExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.Object"
  }, {
    "nodeContext" : "decodeObject",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 112,
      "startColumnNumber" : 60,
      "endLineNumber" : 112,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 112,
        "startColumnNumber" : 46,
        "endLineNumber" : 112,
        "endColumnNumber" : 72
      },
      "nodeContext" : "(SpanChunkBo)decodeObject",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 112,
        "startColumnNumber" : 32,
        "endLineNumber" : 112,
        "endColumnNumber" : 72
      },
      "nodeContext" : "spanChunkBo=(SpanChunkBo)decodeObject",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 112,
        "startColumnNumber" : 20,
        "endLineNumber" : 112,
        "endColumnNumber" : 73
      },
      "nodeContext" : "SpanChunkBo spanChunkBo=(SpanChunkBo)decodeObject;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 287,
        "startLineNumber" : 111,
        "startColumnNumber" : 64,
        "endLineNumber" : 117,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  SpanChunkBo spanChunkBo=(SpanChunkBo)decodeObject;\n  if (logger.isDebugEnabled()) {\n    logger.debug(\"spanChunkBo:{}\",spanChunkBo);\n  }\n  spanChunkList.add(spanChunkBo);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 328,
        "startLineNumber" : 111,
        "startColumnNumber" : 23,
        "endLineNumber" : 117,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (decodeObject instanceof SpanChunkBo) {\n  SpanChunkBo spanChunkBo=(SpanChunkBo)decodeObject;\n  if (logger.isDebugEnabled()) {\n    logger.debug(\"spanChunkBo:{}\",spanChunkBo);\n  }\n  spanChunkList.add(spanChunkBo);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 692,
        "startLineNumber" : 104,
        "startColumnNumber" : 16,
        "endLineNumber" : 117,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (decodeObject instanceof SpanBo) {\n  SpanBo spanBo=(SpanBo)decodeObject;\n  if (logger.isDebugEnabled()) {\n    logger.debug(\"spanBo:{}\",spanBo);\n  }\n  AgentKey agentKey=newAgentKey(spanBo);\n  spanMap.put(agentKey,spanBo);\n}\n else if (decodeObject instanceof SpanChunkBo) {\n  SpanChunkBo spanChunkBo=(SpanChunkBo)decodeObject;\n  if (logger.isDebugEnabled()) {\n    logger.debug(\"spanChunkBo:{}\",spanChunkBo);\n  }\n  spanChunkList.add(spanChunkBo);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 71,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1249,
        "startLineNumber" : 95,
        "startColumnNumber" : 77,
        "endLineNumber" : 119,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  decodingContext.setCollectorAcceptedTime(cell.getTimestamp());\n  final Buffer qualifier=new OffsetFixedBuffer(cell.getQualifierArray(),cell.getQualifierOffset(),cell.getQualifierLength());\n  final Buffer columnValue=new OffsetFixedBuffer(cell.getValueArray(),cell.getValueOffset(),cell.getValueLength());\n  spanDecoder=resolveDecoder(columnValue);\n  final Object decodeObject=spanDecoder.decode(qualifier,columnValue,decodingContext);\n  if (decodeObject instanceof SpanBo) {\n    SpanBo spanBo=(SpanBo)decodeObject;\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"spanBo:{}\",spanBo);\n    }\n    AgentKey agentKey=newAgentKey(spanBo);\n    spanMap.put(agentKey,spanBo);\n  }\n else   if (decodeObject instanceof SpanChunkBo) {\n    SpanChunkBo spanChunkBo=(SpanChunkBo)decodeObject;\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"spanChunkBo:{}\",spanChunkBo);\n    }\n    spanChunkList.add(spanChunkBo);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1442,
        "startLineNumber" : 95,
        "startColumnNumber" : 12,
        "endLineNumber" : 121,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (CellUtil.matchingFamily(cell,HBaseTables.TRACE_V2_CF_SPAN)) {\n  decodingContext.setCollectorAcceptedTime(cell.getTimestamp());\n  final Buffer qualifier=new OffsetFixedBuffer(cell.getQualifierArray(),cell.getQualifierOffset(),cell.getQualifierLength());\n  final Buffer columnValue=new OffsetFixedBuffer(cell.getValueArray(),cell.getValueOffset(),cell.getValueLength());\n  spanDecoder=resolveDecoder(columnValue);\n  final Object decodeObject=spanDecoder.decode(qualifier,columnValue,decodingContext);\n  if (decodeObject instanceof SpanBo) {\n    SpanBo spanBo=(SpanBo)decodeObject;\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"spanBo:{}\",spanBo);\n    }\n    AgentKey agentKey=newAgentKey(spanBo);\n    spanMap.put(agentKey,spanBo);\n  }\n else   if (decodeObject instanceof SpanChunkBo) {\n    SpanChunkBo spanChunkBo=(SpanChunkBo)decodeObject;\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"spanChunkBo:{}\",spanChunkBo);\n    }\n    spanChunkList.add(spanChunkBo);\n  }\n}\n else {\n  logger.warn(\"Unknown ColumnFamily :{}\",Bytes.toStringBinary(CellUtil.cloneFamily(cell)));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 154,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1607,
        "startLineNumber" : 92,
        "startColumnNumber" : 35,
        "endLineNumber" : 123,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  SpanDecoder spanDecoder=null;\n  if (CellUtil.matchingFamily(cell,HBaseTables.TRACE_V2_CF_SPAN)) {\n    decodingContext.setCollectorAcceptedTime(cell.getTimestamp());\n    final Buffer qualifier=new OffsetFixedBuffer(cell.getQualifierArray(),cell.getQualifierOffset(),cell.getQualifierLength());\n    final Buffer columnValue=new OffsetFixedBuffer(cell.getValueArray(),cell.getValueOffset(),cell.getValueLength());\n    spanDecoder=resolveDecoder(columnValue);\n    final Object decodeObject=spanDecoder.decode(qualifier,columnValue,decodingContext);\n    if (decodeObject instanceof SpanBo) {\n      SpanBo spanBo=(SpanBo)decodeObject;\n      if (logger.isDebugEnabled()) {\n        logger.debug(\"spanBo:{}\",spanBo);\n      }\n      AgentKey agentKey=newAgentKey(spanBo);\n      spanMap.put(agentKey,spanBo);\n    }\n else     if (decodeObject instanceof SpanChunkBo) {\n      SpanChunkBo spanChunkBo=(SpanChunkBo)decodeObject;\n      if (logger.isDebugEnabled()) {\n        logger.debug(\"spanChunkBo:{}\",spanChunkBo);\n      }\n      spanChunkList.add(spanChunkBo);\n    }\n  }\n else {\n    logger.warn(\"Unknown ColumnFamily :{}\",Bytes.toStringBinary(CellUtil.cloneFamily(cell)));\n  }\n  nextCell(spanDecoder,decodingContext);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 166,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1634,
        "startLineNumber" : 92,
        "startColumnNumber" : 8,
        "endLineNumber" : 123,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Cell cell : rawCells) {\n  SpanDecoder spanDecoder=null;\n  if (CellUtil.matchingFamily(cell,HBaseTables.TRACE_V2_CF_SPAN)) {\n    decodingContext.setCollectorAcceptedTime(cell.getTimestamp());\n    final Buffer qualifier=new OffsetFixedBuffer(cell.getQualifierArray(),cell.getQualifierOffset(),cell.getQualifierLength());\n    final Buffer columnValue=new OffsetFixedBuffer(cell.getValueArray(),cell.getValueOffset(),cell.getValueLength());\n    spanDecoder=resolveDecoder(columnValue);\n    final Object decodeObject=spanDecoder.decode(qualifier,columnValue,decodingContext);\n    if (decodeObject instanceof SpanBo) {\n      SpanBo spanBo=(SpanBo)decodeObject;\n      if (logger.isDebugEnabled()) {\n        logger.debug(\"spanBo:{}\",spanBo);\n      }\n      AgentKey agentKey=newAgentKey(spanBo);\n      spanMap.put(agentKey,spanBo);\n    }\n else     if (decodeObject instanceof SpanChunkBo) {\n      SpanChunkBo spanChunkBo=(SpanChunkBo)decodeObject;\n      if (logger.isDebugEnabled()) {\n        logger.debug(\"spanChunkBo:{}\",spanChunkBo);\n      }\n      spanChunkList.add(spanChunkBo);\n    }\n  }\n else {\n    logger.warn(\"Unknown ColumnFamily :{}\",Bytes.toStringBinary(CellUtil.cloneFamily(cell)));\n  }\n  nextCell(spanDecoder,decodingContext);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 172,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2287,
        "startLineNumber" : 75,
        "startColumnNumber" : 75,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (result.isEmpty()) {\n    return Collections.emptyList();\n  }\n  byte[] rowKey=result.getRow();\n  final TransactionId transactionId=this.rowKeyDecoder.decodeRowKey(rowKey);\n  final Cell[] rawCells=result.rawCells();\n  ListMultimap<AgentKey,SpanBo> spanMap=LinkedListMultimap.create();\n  List<SpanChunkBo> spanChunkList=new ArrayList<>();\n  final SpanDecodingContext decodingContext=new SpanDecodingContext();\n  decodingContext.setTransactionId(transactionId);\n  for (  Cell cell : rawCells) {\n    SpanDecoder spanDecoder=null;\n    if (CellUtil.matchingFamily(cell,HBaseTables.TRACE_V2_CF_SPAN)) {\n      decodingContext.setCollectorAcceptedTime(cell.getTimestamp());\n      final Buffer qualifier=new OffsetFixedBuffer(cell.getQualifierArray(),cell.getQualifierOffset(),cell.getQualifierLength());\n      final Buffer columnValue=new OffsetFixedBuffer(cell.getValueArray(),cell.getValueOffset(),cell.getValueLength());\n      spanDecoder=resolveDecoder(columnValue);\n      final Object decodeObject=spanDecoder.decode(qualifier,columnValue,decodingContext);\n      if (decodeObject instanceof SpanBo) {\n        SpanBo spanBo=(SpanBo)decodeObject;\n        if (logger.isDebugEnabled()) {\n          logger.debug(\"spanBo:{}\",spanBo);\n        }\n        AgentKey agentKey=newAgentKey(spanBo);\n        spanMap.put(agentKey,spanBo);\n      }\n else       if (decodeObject instanceof SpanChunkBo) {\n        SpanChunkBo spanChunkBo=(SpanChunkBo)decodeObject;\n        if (logger.isDebugEnabled()) {\n          logger.debug(\"spanChunkBo:{}\",spanChunkBo);\n        }\n        spanChunkList.add(spanChunkBo);\n      }\n    }\n else {\n      logger.warn(\"Unknown ColumnFamily :{}\",Bytes.toStringBinary(CellUtil.cloneFamily(cell)));\n    }\n    nextCell(spanDecoder,decodingContext);\n  }\n  decodingContext.finish();\n  return buildSpanBoList(spanMap,spanChunkList);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 262,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2372,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public List<SpanBo> mapRow(Result result,int rowNum) throws Exception {\n  if (result.isEmpty()) {\n    return Collections.emptyList();\n  }\n  byte[] rowKey=result.getRow();\n  final TransactionId transactionId=this.rowKeyDecoder.decodeRowKey(rowKey);\n  final Cell[] rawCells=result.rawCells();\n  ListMultimap<AgentKey,SpanBo> spanMap=LinkedListMultimap.create();\n  List<SpanChunkBo> spanChunkList=new ArrayList<>();\n  final SpanDecodingContext decodingContext=new SpanDecodingContext();\n  decodingContext.setTransactionId(transactionId);\n  for (  Cell cell : rawCells) {\n    SpanDecoder spanDecoder=null;\n    if (CellUtil.matchingFamily(cell,HBaseTables.TRACE_V2_CF_SPAN)) {\n      decodingContext.setCollectorAcceptedTime(cell.getTimestamp());\n      final Buffer qualifier=new OffsetFixedBuffer(cell.getQualifierArray(),cell.getQualifierOffset(),cell.getQualifierLength());\n      final Buffer columnValue=new OffsetFixedBuffer(cell.getValueArray(),cell.getValueOffset(),cell.getValueLength());\n      spanDecoder=resolveDecoder(columnValue);\n      final Object decodeObject=spanDecoder.decode(qualifier,columnValue,decodingContext);\n      if (decodeObject instanceof SpanBo) {\n        SpanBo spanBo=(SpanBo)decodeObject;\n        if (logger.isDebugEnabled()) {\n          logger.debug(\"spanBo:{}\",spanBo);\n        }\n        AgentKey agentKey=newAgentKey(spanBo);\n        spanMap.put(agentKey,spanBo);\n      }\n else       if (decodeObject instanceof SpanChunkBo) {\n        SpanChunkBo spanChunkBo=(SpanChunkBo)decodeObject;\n        if (logger.isDebugEnabled()) {\n          logger.debug(\"spanChunkBo:{}\",spanChunkBo);\n        }\n        spanChunkList.add(spanChunkBo);\n      }\n    }\n else {\n      logger.warn(\"Unknown ColumnFamily :{}\",Bytes.toStringBinary(CellUtil.cloneFamily(cell)));\n    }\n    nextCell(spanDecoder,decodingContext);\n  }\n  decodingContext.finish();\n  return buildSpanBoList(spanMap,spanChunkList);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 281,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 112,
        "startColumnNumber" : 20,
        "endLineNumber" : 112,
        "endColumnNumber" : 73
      },
      "nodeContext" : "SpanChunkBo spanChunkBo=(SpanChunkBo)decodeObject;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.Object"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 104,
    "startColumnNumber" : 20,
    "endLineNumber" : 104,
    "endColumnNumber" : 32
  }, {
    "charLength" : 12,
    "startLineNumber" : 105,
    "startColumnNumber" : 45,
    "endLineNumber" : 105,
    "endColumnNumber" : 57
  }, {
    "charLength" : 12,
    "startLineNumber" : 111,
    "startColumnNumber" : 27,
    "endLineNumber" : 111,
    "endColumnNumber" : 39
  }, {
    "charLength" : 12,
    "startLineNumber" : 112,
    "startColumnNumber" : 60,
    "endLineNumber" : 112,
    "endColumnNumber" : 72
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  } ]
}