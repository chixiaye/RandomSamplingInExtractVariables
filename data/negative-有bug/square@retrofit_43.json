{
  "id" : 43,
  "expression" : "code > 599",
  "projectName" : "square@retrofit",
  "commitID" : "757278c7ab7f6c8e5a40d16a5707c35e0f61c5ab",
  "filePath" : "/retrofit-mock/src/main/java/retrofit/MockHttpException.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "code > 599",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 81,
      "startColumnNumber" : 22,
      "endLineNumber" : 81,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 81,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 32
      },
      "nodeContext" : "code < 300 || code > 599",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 81,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (code < 300 || code > 599) {\n  throw new IllegalArgumentException(\"Unsupported HTTP error code: \" + code);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 388,
        "startLineNumber" : 79,
        "startColumnNumber" : 73,
        "endLineNumber" : 90,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  super(\"HTTP \" + code + \" \"+ reason);\n  if (code < 300 || code > 599) {\n    throw new IllegalArgumentException(\"Unsupported HTTP error code: \" + code);\n  }\n  if (reason == null || \"\".equals(reason.trim())) {\n    throw new IllegalArgumentException(\"Reason must not be blank.\");\n  }\n  this.code=code;\n  this.reason=reason;\n  this.responseBody=responseBody;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 703,
        "startLineNumber" : 72,
        "startColumnNumber" : 2,
        "endLineNumber" : 90,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Create a new HTTP exception.\n * @param code HTTP status code to trigger. Must be 300 or higher.\n * @param reason HTTP status reason message.\n * @param responseBody Object to use as the contents of the response body.\n */\npublic MockHttpException(int code,String reason,Object responseBody){\n  super(\"HTTP \" + code + \" \"+ reason);\n  if (code < 300 || code > 599) {\n    throw new IllegalArgumentException(\"Unsupported HTTP error code: \" + code);\n  }\n  if (reason == null || \"\".equals(reason.trim())) {\n    throw new IllegalArgumentException(\"Reason must not be blank.\");\n  }\n  this.code=code;\n  this.reason=reason;\n  this.responseBody=responseBody;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 73,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 81,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 32
      },
      "nodeContext" : "code < 300 || code > 599",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 81,
    "startColumnNumber" : 22,
    "endLineNumber" : 81,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}