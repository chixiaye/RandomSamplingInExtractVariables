{
  "id" : 9,
  "expression" : "dimension - 7",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/main/java/com/google/zxing/qrcode/decoder/BitMatrixParser.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "dimension - 7",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 74,
      "startColumnNumber" : 15,
      "endLineNumber" : 74,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 28
      },
      "nodeContext" : "jMin=dimension - 7",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 29
      },
      "nodeContext" : "int jMin=dimension - 7;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1242,
        "startLineNumber" : 51,
        "startColumnNumber" : 67,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (parsedFormatInfo != null) {\n    return parsedFormatInfo;\n  }\n  int formatInfoBits1=0;\n  for (int i=0; i < 6; i++) {\n    formatInfoBits1=copyBit(i,8,formatInfoBits1);\n  }\n  formatInfoBits1=copyBit(7,8,formatInfoBits1);\n  formatInfoBits1=copyBit(8,8,formatInfoBits1);\n  formatInfoBits1=copyBit(8,7,formatInfoBits1);\n  for (int j=5; j >= 0; j--) {\n    formatInfoBits1=copyBit(8,j,formatInfoBits1);\n  }\n  int dimension=bitMatrix.getHeight();\n  int formatInfoBits2=0;\n  int jMin=dimension - 7;\n  for (int j=dimension - 1; j >= jMin; j--) {\n    formatInfoBits2=copyBit(8,j,formatInfoBits2);\n  }\n  for (int i=dimension - 8; i < dimension; i++) {\n    formatInfoBits2=copyBit(i,8,formatInfoBits2);\n  }\n  parsedFormatInfo=FormatInformation.decodeFormatInformation(formatInfoBits1,formatInfoBits2);\n  if (parsedFormatInfo != null) {\n    return parsedFormatInfo;\n  }\n  throw FormatException.getFormatInstance();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 159,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1629,
        "startLineNumber" : 44,
        "startColumnNumber" : 2,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * <p>Reads format information from one of its two locations within the QR Code.</p>\n * @return {@link FormatInformation} encapsulating the QR Code's format info\n * @throws FormatException if both format information locations cannot be parsed asthe valid encoding of format information\n */\nFormatInformation readFormatInformation() throws FormatException {\n  if (parsedFormatInfo != null) {\n    return parsedFormatInfo;\n  }\n  int formatInfoBits1=0;\n  for (int i=0; i < 6; i++) {\n    formatInfoBits1=copyBit(i,8,formatInfoBits1);\n  }\n  formatInfoBits1=copyBit(7,8,formatInfoBits1);\n  formatInfoBits1=copyBit(8,8,formatInfoBits1);\n  formatInfoBits1=copyBit(8,7,formatInfoBits1);\n  for (int j=5; j >= 0; j--) {\n    formatInfoBits1=copyBit(8,j,formatInfoBits1);\n  }\n  int dimension=bitMatrix.getHeight();\n  int formatInfoBits2=0;\n  int jMin=dimension - 7;\n  for (int j=dimension - 1; j >= jMin; j--) {\n    formatInfoBits2=copyBit(8,j,formatInfoBits2);\n  }\n  for (int i=dimension - 8; i < dimension; i++) {\n    formatInfoBits2=copyBit(i,8,formatInfoBits2);\n  }\n  parsedFormatInfo=FormatInformation.decodeFormatInformation(formatInfoBits1,formatInfoBits2);\n  if (parsedFormatInfo != null) {\n    return parsedFormatInfo;\n  }\n  throw FormatException.getFormatInstance();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 166,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 29
      },
      "nodeContext" : "int jMin=dimension - 7;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 74,
    "startColumnNumber" : 15,
    "endLineNumber" : 74,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ ]
}