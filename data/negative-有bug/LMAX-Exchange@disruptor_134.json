{
  "id" : 134,
  "expression" : "context",
  "projectName" : "LMAX-Exchange@disruptor",
  "commitID" : "6d8500d39ac15cc2fdbc3dbf2e3a97fbe425b8fa",
  "filePath" : "/src/test/java/com/lmax/disruptor/BatchEventProcessorTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "context",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 60,
      "startColumnNumber" : 8,
      "endLineNumber" : 60,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 259,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 10
      },
      "nodeContext" : "context.checking(new Expectations(){\n{\n    oneOf(eventHandler).onEvent(ringBuffer.getPreallocated(0L),0L,true);\n    inSequence(lifecycleSequence);\n    will(countDown(latch));\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 31,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 260,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 11
      },
      "nodeContext" : "context.checking(new Expectations(){\n{\n    oneOf(eventHandler).onEvent(ringBuffer.getPreallocated(0L),0L,true);\n    inSequence(lifecycleSequence);\n    will(countDown(latch));\n  }\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 32,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 559,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  context.checking(new Expectations(){\n{\n      oneOf(eventHandler).onEvent(ringBuffer.getPreallocated(0L),0L,true);\n      inSequence(lifecycleSequence);\n      will(countDown(latch));\n    }\n  }\n);\n  Thread thread=new Thread(batchEventProcessor);\n  thread.start();\n  assertEquals(-1L,batchEventProcessor.getSequence().get());\n  ringBuffer.publish(ringBuffer.next());\n  latch.await();\n  batchEventProcessor.halt();\n  thread.join();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 75,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 646,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldCallMethodsInLifecycleOrder() throws Exception {\n  context.checking(new Expectations(){\n{\n      oneOf(eventHandler).onEvent(ringBuffer.getPreallocated(0L),0L,true);\n      inSequence(lifecycleSequence);\n      will(countDown(latch));\n    }\n  }\n);\n  Thread thread=new Thread(batchEventProcessor);\n  thread.start();\n  assertEquals(-1L,batchEventProcessor.getSequence().get());\n  ringBuffer.publish(ringBuffer.next());\n  latch.await();\n  batchEventProcessor.halt();\n  thread.join();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 83,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 259,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 10
      },
      "nodeContext" : "context.checking(new Expectations(){\n{\n    oneOf(eventHandler).onEvent(ringBuffer.getPreallocated(0L),0L,true);\n    inSequence(lifecycleSequence);\n    will(countDown(latch));\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 31,
      "astHeight" : 9
    },
    "tokenLength" : 1,
    "type" : "com.lmax.disruptor.Mockery"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 60,
    "startColumnNumber" : 8,
    "endLineNumber" : 60,
    "endColumnNumber" : 15
  } ],
  "layoutRelationDataList" : [ ]
}