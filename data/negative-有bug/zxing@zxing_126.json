{
  "id" : 126,
  "expression" : "!previousPairs.isEmpty() && previousPairs.get(previousPairs.size() - 1).mustBeLast()",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/main/java/com/google/zxing/oned/rss/expanded/RSSExpandedReader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "!previousPairs.isEmpty() && previousPairs.get(previousPairs.size() - 1).mustBeLast()",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 84,
      "startLineNumber" : 439,
      "startColumnNumber" : 8,
      "endLineNumber" : 439,
      "endColumnNumber" : 92
    },
    "astNodeNumber" : 15,
    "astHeight" : 6,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 439,
        "startColumnNumber" : 4,
        "endLineNumber" : 441,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!previousPairs.isEmpty() && previousPairs.get(previousPairs.size() - 1).mustBeLast()) {\n  throw NotFoundException.getNotFoundInstance();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1247,
        "startLineNumber" : 414,
        "startColumnNumber" : 31,
        "endLineNumber" : 450,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  boolean isOddPattern=previousPairs.size() % 2 == 0;\n  if (startFromEven) {\n    isOddPattern=!isOddPattern;\n  }\n  FinderPattern pattern;\n  boolean keepFinding=true;\n  int forcedOffset=-1;\n  do {\n    this.findNextPair(row,previousPairs,forcedOffset);\n    pattern=parseFoundFinderPattern(row,rowNumber,isOddPattern);\n    if (pattern == null) {\n      forcedOffset=getNextSecondBar(row,this.startEnd[0]);\n    }\n else {\n      keepFinding=false;\n    }\n  }\n while (keepFinding);\n  DataCharacter leftChar=this.decodeDataCharacter(row,pattern,isOddPattern,true);\n  if (!previousPairs.isEmpty() && previousPairs.get(previousPairs.size() - 1).mustBeLast()) {\n    throw NotFoundException.getNotFoundInstance();\n  }\n  DataCharacter rightChar;\n  try {\n    rightChar=this.decodeDataCharacter(row,pattern,isOddPattern,false);\n  }\n catch (  NotFoundException ignored) {\n    rightChar=null;\n  }\n  return new ExpandedPair(leftChar,rightChar,pattern);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 142,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1372,
        "startLineNumber" : 413,
        "startColumnNumber" : 2,
        "endLineNumber" : 450,
        "endColumnNumber" : 3
      },
      "nodeContext" : "ExpandedPair retrieveNextPair(BitArray row,List<ExpandedPair> previousPairs,int rowNumber) throws NotFoundException {\n  boolean isOddPattern=previousPairs.size() % 2 == 0;\n  if (startFromEven) {\n    isOddPattern=!isOddPattern;\n  }\n  FinderPattern pattern;\n  boolean keepFinding=true;\n  int forcedOffset=-1;\n  do {\n    this.findNextPair(row,previousPairs,forcedOffset);\n    pattern=parseFoundFinderPattern(row,rowNumber,isOddPattern);\n    if (pattern == null) {\n      forcedOffset=getNextSecondBar(row,this.startEnd[0]);\n    }\n else {\n      keepFinding=false;\n    }\n  }\n while (keepFinding);\n  DataCharacter leftChar=this.decodeDataCharacter(row,pattern,isOddPattern,true);\n  if (!previousPairs.isEmpty() && previousPairs.get(previousPairs.size() - 1).mustBeLast()) {\n    throw NotFoundException.getNotFoundInstance();\n  }\n  DataCharacter rightChar;\n  try {\n    rightChar=this.decodeDataCharacter(row,pattern,isOddPattern,false);\n  }\n catch (  NotFoundException ignored) {\n    rightChar=null;\n  }\n  return new ExpandedPair(leftChar,rightChar,pattern);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 162,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 439,
        "startColumnNumber" : 4,
        "endLineNumber" : 441,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!previousPairs.isEmpty() && previousPairs.get(previousPairs.size() - 1).mustBeLast()) {\n  throw NotFoundException.getNotFoundInstance();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 7
    },
    "tokenLength" : 10,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 84,
    "startLineNumber" : 439,
    "startColumnNumber" : 8,
    "endLineNumber" : 439,
    "endColumnNumber" : 92
  } ],
  "layoutRelationDataList" : [ ]
}