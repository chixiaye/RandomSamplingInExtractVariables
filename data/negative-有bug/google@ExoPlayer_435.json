{
  "id" : 435,
  "expression" : "sampleBytesRemaining == 0",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/extractor/src/main/java/com/google/android/exoplayer2/extractor/mp3/Mp3Extractor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "sampleBytesRemaining == 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 287,
      "startColumnNumber" : 8,
      "endLineNumber" : 287,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1724,
        "startLineNumber" : 287,
        "startColumnNumber" : 4,
        "endLineNumber" : 322,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (sampleBytesRemaining == 0) {\n  extractorInput.resetPeekPosition();\n  if (peekEndOfStreamOrHeader(extractorInput)) {\n    return RESULT_END_OF_INPUT;\n  }\n  scratch.setPosition(0);\n  int sampleHeaderData=scratch.readInt();\n  if (!headersMatch(sampleHeaderData,synchronizedHeaderData) || MpegAudioUtil.getFrameSize(sampleHeaderData) == C.LENGTH_UNSET) {\n    extractorInput.skipFully(1);\n    synchronizedHeaderData=0;\n    return RESULT_CONTINUE;\n  }\n  synchronizedHeader.setForHeaderData(sampleHeaderData);\n  if (basisTimeUs == C.TIME_UNSET) {\n    basisTimeUs=seeker.getTimeUs(extractorInput.getPosition());\n    if (forcedFirstSampleTimestampUs != C.TIME_UNSET) {\n      long embeddedFirstSampleTimestampUs=seeker.getTimeUs(0);\n      basisTimeUs+=forcedFirstSampleTimestampUs - embeddedFirstSampleTimestampUs;\n    }\n  }\n  sampleBytesRemaining=synchronizedHeader.frameSize;\n  if (seeker instanceof IndexSeeker) {\n    IndexSeeker indexSeeker=(IndexSeeker)seeker;\n    indexSeeker.maybeAddSeekPoint(computeTimeUs(samplesRead + synchronizedHeader.samplesPerFrame),extractorInput.getPosition() + synchronizedHeader.frameSize);\n    if (isSeekInProgress && indexSeeker.isTimeUsInIndex(seekTimeUs)) {\n      isSeekInProgress=false;\n      currentTrackOutput=realTrackOutput;\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 152,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2291,
        "startLineNumber" : 286,
        "startColumnNumber" : 75,
        "endLineNumber" : 336,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (sampleBytesRemaining == 0) {\n    extractorInput.resetPeekPosition();\n    if (peekEndOfStreamOrHeader(extractorInput)) {\n      return RESULT_END_OF_INPUT;\n    }\n    scratch.setPosition(0);\n    int sampleHeaderData=scratch.readInt();\n    if (!headersMatch(sampleHeaderData,synchronizedHeaderData) || MpegAudioUtil.getFrameSize(sampleHeaderData) == C.LENGTH_UNSET) {\n      extractorInput.skipFully(1);\n      synchronizedHeaderData=0;\n      return RESULT_CONTINUE;\n    }\n    synchronizedHeader.setForHeaderData(sampleHeaderData);\n    if (basisTimeUs == C.TIME_UNSET) {\n      basisTimeUs=seeker.getTimeUs(extractorInput.getPosition());\n      if (forcedFirstSampleTimestampUs != C.TIME_UNSET) {\n        long embeddedFirstSampleTimestampUs=seeker.getTimeUs(0);\n        basisTimeUs+=forcedFirstSampleTimestampUs - embeddedFirstSampleTimestampUs;\n      }\n    }\n    sampleBytesRemaining=synchronizedHeader.frameSize;\n    if (seeker instanceof IndexSeeker) {\n      IndexSeeker indexSeeker=(IndexSeeker)seeker;\n      indexSeeker.maybeAddSeekPoint(computeTimeUs(samplesRead + synchronizedHeader.samplesPerFrame),extractorInput.getPosition() + synchronizedHeader.frameSize);\n      if (isSeekInProgress && indexSeeker.isTimeUsInIndex(seekTimeUs)) {\n        isSeekInProgress=false;\n        currentTrackOutput=realTrackOutput;\n      }\n    }\n  }\n  int bytesAppended=currentTrackOutput.sampleData(extractorInput,sampleBytesRemaining,true);\n  if (bytesAppended == C.RESULT_END_OF_INPUT) {\n    return RESULT_END_OF_INPUT;\n  }\n  sampleBytesRemaining-=bytesAppended;\n  if (sampleBytesRemaining > 0) {\n    return RESULT_CONTINUE;\n  }\n  currentTrackOutput.sampleMetadata(computeTimeUs(samplesRead),C.BUFFER_FLAG_KEY_FRAME,synchronizedHeader.frameSize,0,null);\n  samplesRead+=synchronizedHeader.samplesPerFrame;\n  sampleBytesRemaining=0;\n  return RESULT_CONTINUE;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 210,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2414,
        "startLineNumber" : 285,
        "startColumnNumber" : 2,
        "endLineNumber" : 336,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@RequiresNonNull({\"realTrackOutput\",\"seeker\"}) private int readSample(ExtractorInput extractorInput) throws IOException {\n  if (sampleBytesRemaining == 0) {\n    extractorInput.resetPeekPosition();\n    if (peekEndOfStreamOrHeader(extractorInput)) {\n      return RESULT_END_OF_INPUT;\n    }\n    scratch.setPosition(0);\n    int sampleHeaderData=scratch.readInt();\n    if (!headersMatch(sampleHeaderData,synchronizedHeaderData) || MpegAudioUtil.getFrameSize(sampleHeaderData) == C.LENGTH_UNSET) {\n      extractorInput.skipFully(1);\n      synchronizedHeaderData=0;\n      return RESULT_CONTINUE;\n    }\n    synchronizedHeader.setForHeaderData(sampleHeaderData);\n    if (basisTimeUs == C.TIME_UNSET) {\n      basisTimeUs=seeker.getTimeUs(extractorInput.getPosition());\n      if (forcedFirstSampleTimestampUs != C.TIME_UNSET) {\n        long embeddedFirstSampleTimestampUs=seeker.getTimeUs(0);\n        basisTimeUs+=forcedFirstSampleTimestampUs - embeddedFirstSampleTimestampUs;\n      }\n    }\n    sampleBytesRemaining=synchronizedHeader.frameSize;\n    if (seeker instanceof IndexSeeker) {\n      IndexSeeker indexSeeker=(IndexSeeker)seeker;\n      indexSeeker.maybeAddSeekPoint(computeTimeUs(samplesRead + synchronizedHeader.samplesPerFrame),extractorInput.getPosition() + synchronizedHeader.frameSize);\n      if (isSeekInProgress && indexSeeker.isTimeUsInIndex(seekTimeUs)) {\n        isSeekInProgress=false;\n        currentTrackOutput=realTrackOutput;\n      }\n    }\n  }\n  int bytesAppended=currentTrackOutput.sampleData(extractorInput,sampleBytesRemaining,true);\n  if (bytesAppended == C.RESULT_END_OF_INPUT) {\n    return RESULT_END_OF_INPUT;\n  }\n  sampleBytesRemaining-=bytesAppended;\n  if (sampleBytesRemaining > 0) {\n    return RESULT_CONTINUE;\n  }\n  currentTrackOutput.sampleMetadata(computeTimeUs(samplesRead),C.BUFFER_FLAG_KEY_FRAME,synchronizedHeader.frameSize,0,null);\n  samplesRead+=synchronizedHeader.samplesPerFrame;\n  sampleBytesRemaining=0;\n  return RESULT_CONTINUE;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 225,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1724,
        "startLineNumber" : 287,
        "startColumnNumber" : 4,
        "endLineNumber" : 322,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (sampleBytesRemaining == 0) {\n  extractorInput.resetPeekPosition();\n  if (peekEndOfStreamOrHeader(extractorInput)) {\n    return RESULT_END_OF_INPUT;\n  }\n  scratch.setPosition(0);\n  int sampleHeaderData=scratch.readInt();\n  if (!headersMatch(sampleHeaderData,synchronizedHeaderData) || MpegAudioUtil.getFrameSize(sampleHeaderData) == C.LENGTH_UNSET) {\n    extractorInput.skipFully(1);\n    synchronizedHeaderData=0;\n    return RESULT_CONTINUE;\n  }\n  synchronizedHeader.setForHeaderData(sampleHeaderData);\n  if (basisTimeUs == C.TIME_UNSET) {\n    basisTimeUs=seeker.getTimeUs(extractorInput.getPosition());\n    if (forcedFirstSampleTimestampUs != C.TIME_UNSET) {\n      long embeddedFirstSampleTimestampUs=seeker.getTimeUs(0);\n      basisTimeUs+=forcedFirstSampleTimestampUs - embeddedFirstSampleTimestampUs;\n    }\n  }\n  sampleBytesRemaining=synchronizedHeader.frameSize;\n  if (seeker instanceof IndexSeeker) {\n    IndexSeeker indexSeeker=(IndexSeeker)seeker;\n    indexSeeker.maybeAddSeekPoint(computeTimeUs(samplesRead + synchronizedHeader.samplesPerFrame),extractorInput.getPosition() + synchronizedHeader.frameSize);\n    if (isSeekInProgress && indexSeeker.isTimeUsInIndex(seekTimeUs)) {\n      isSeekInProgress=false;\n      currentTrackOutput=realTrackOutput;\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 152,
      "astHeight" : 10
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 287,
    "startColumnNumber" : 8,
    "endLineNumber" : 287,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ ]
}