{
  "id" : 206,
  "expression" : "0",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-test/shardingsphere-parser-test/src/main/java/org/apache/shardingsphere/test/sql/parser/parameterized/asserts/statement/distsql/rdl/alter/impl/AlterShadowRuleStatementAssert.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 62,
      "startColumnNumber" : 24,
      "endLineNumber" : 62,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 62,
        "startColumnNumber" : 16,
        "endLineNumber" : 62,
        "endColumnNumber" : 25
      },
      "nodeContext" : "count=0",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 62,
        "startColumnNumber" : 12,
        "endLineNumber" : 62,
        "endColumnNumber" : 26
      },
      "nodeContext" : "int count=0;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 406,
        "startLineNumber" : 60,
        "startColumnNumber" : 15,
        "endLineNumber" : 68,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  assertNotNull(assertContext.getText(\"Actual shadow rule should exist.\"),actual);\n  int count=0;\n  for (  ShadowRuleSegment tableRuleSegment : actual) {\n    ExpectedShadowRule expectedTableRule=expected.get(count);\n    ShadowRuleAssert.assertIs(assertContext,tableRuleSegment,expectedTableRule);\n    count++;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 540,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (null == expected) {\n  assertNull(assertContext.getText(\"Actual shadow rule should not exist.\"),actual);\n}\n else {\n  assertNotNull(assertContext.getText(\"Actual shadow rule should exist.\"),actual);\n  int count=0;\n  for (  ShadowRuleSegment tableRuleSegment : actual) {\n    ExpectedShadowRule expectedTableRule=expected.get(count);\n    ShadowRuleAssert.assertIs(assertContext,tableRuleSegment,expectedTableRule);\n    count++;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 556,
        "startLineNumber" : 57,
        "startColumnNumber" : 168,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (null == expected) {\n    assertNull(assertContext.getText(\"Actual shadow rule should not exist.\"),actual);\n  }\n else {\n    assertNotNull(assertContext.getText(\"Actual shadow rule should exist.\"),actual);\n    int count=0;\n    for (    ShadowRuleSegment tableRuleSegment : actual) {\n      ExpectedShadowRule expectedTableRule=expected.get(count);\n      ShadowRuleAssert.assertIs(assertContext,tableRuleSegment,expectedTableRule);\n      count++;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 54,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 720,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static void assertShadowRule(final SQLCaseAssertContext assertContext,final Collection<ShadowRuleSegment> actual,final List<ExpectedShadowRule> expected){\n  if (null == expected) {\n    assertNull(assertContext.getText(\"Actual shadow rule should not exist.\"),actual);\n  }\n else {\n    assertNotNull(assertContext.getText(\"Actual shadow rule should exist.\"),actual);\n    int count=0;\n    for (    ShadowRuleSegment tableRuleSegment : actual) {\n      ExpectedShadowRule expectedTableRule=expected.get(count);\n      ShadowRuleAssert.assertIs(assertContext,tableRuleSegment,expectedTableRule);\n      count++;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 80,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 62,
        "startColumnNumber" : 12,
        "endLineNumber" : 62,
        "endColumnNumber" : 26
      },
      "nodeContext" : "int count=0;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 62,
    "startColumnNumber" : 24,
    "endLineNumber" : 62,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ ]
}