{
  "id" : 353,
  "expression" : "cnf.getMessage()",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockitointegration/ClassLoadabilityChecker.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "cnf.getMessage()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 51,
      "startColumnNumber" : 16,
      "endLineNumber" : 51,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 51,
        "startColumnNumber" : 16,
        "endLineNumber" : 51,
        "endColumnNumber" : 52
      },
      "nodeContext" : "cnf.getMessage().startsWith(\"java.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 54,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (cnf.getMessage().startsWith(\"java.\")) {\n  excludedClasses.add(loadedClass);\n  return true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 240,
        "startLineNumber" : 49,
        "startColumnNumber" : 54,
        "endLineNumber" : 55,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ClassNotFoundException cnf=(ClassNotFoundException)thrown;\n  if (cnf.getMessage().startsWith(\"java.\")) {\n    excludedClasses.add(loadedClass);\n    return true;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 912,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (thrown instanceof ClassNotFoundException) {\n  ClassNotFoundException cnf=(ClassNotFoundException)thrown;\n  if (cnf.getMessage().startsWith(\"java.\")) {\n    excludedClasses.add(loadedClass);\n    return true;\n  }\n}\n else if (thrown instanceof NoClassDefFoundError) {\n  NoClassDefFoundError ncdf=(NoClassDefFoundError)thrown;\n  int lastInnerClass=loadedClass.lastIndexOf('$');\n  if (lastInnerClass != -1) {\n    String parent=loadedClass.substring(0,lastInnerClass);\n    if (excludedClasses.contains(parent) && ncdf.getMessage().contains(parent)) {\n      excludedClasses.add(loadedClass);\n      return true;\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 89,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1068,
        "startLineNumber" : 45,
        "startColumnNumber" : 76,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (thrown == null) {\n    return false;\n  }\n  if (thrown instanceof ClassNotFoundException) {\n    ClassNotFoundException cnf=(ClassNotFoundException)thrown;\n    if (cnf.getMessage().startsWith(\"java.\")) {\n      excludedClasses.add(loadedClass);\n      return true;\n    }\n  }\n else   if (thrown instanceof NoClassDefFoundError) {\n    NoClassDefFoundError ncdf=(NoClassDefFoundError)thrown;\n    int lastInnerClass=loadedClass.lastIndexOf('$');\n    if (lastInnerClass != -1) {\n      String parent=loadedClass.substring(0,lastInnerClass);\n      if (excludedClasses.contains(parent) && ncdf.getMessage().contains(parent)) {\n        excludedClasses.add(loadedClass);\n        return true;\n      }\n    }\n  }\n  return isFailureExcluded(loadedClass,thrown.getCause());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1140,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private boolean isFailureExcluded(String loadedClass,Throwable thrown){\n  if (thrown == null) {\n    return false;\n  }\n  if (thrown instanceof ClassNotFoundException) {\n    ClassNotFoundException cnf=(ClassNotFoundException)thrown;\n    if (cnf.getMessage().startsWith(\"java.\")) {\n      excludedClasses.add(loadedClass);\n      return true;\n    }\n  }\n else   if (thrown instanceof NoClassDefFoundError) {\n    NoClassDefFoundError ncdf=(NoClassDefFoundError)thrown;\n    int lastInnerClass=loadedClass.lastIndexOf('$');\n    if (lastInnerClass != -1) {\n      String parent=loadedClass.substring(0,lastInnerClass);\n      if (excludedClasses.contains(parent) && ncdf.getMessage().contains(parent)) {\n        excludedClasses.add(loadedClass);\n        return true;\n      }\n    }\n  }\n  return isFailureExcluded(loadedClass,thrown.getCause());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 116,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 51,
        "startColumnNumber" : 16,
        "endLineNumber" : 51,
        "endColumnNumber" : 52
      },
      "nodeContext" : "cnf.getMessage().startsWith(\"java.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 51,
    "startColumnNumber" : 16,
    "endLineNumber" : 51,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}