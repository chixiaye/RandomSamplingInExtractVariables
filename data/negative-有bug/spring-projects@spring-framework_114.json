{
  "id" : 114,
  "expression" : "new ClassPathResource(resourcePath)",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-test/src/main/java/org/springframework/test/context/support/TestPropertySourceAttributes.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new ClassPathResource(resourcePath)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 35,
      "startLineNumber" : 160,
      "startColumnNumber" : 40,
      "endLineNumber" : 160,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 160,
        "startColumnNumber" : 20,
        "endLineNumber" : 160,
        "endColumnNumber" : 75
      },
      "nodeContext" : "classPathResource=new ClassPathResource(resourcePath)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 160,
        "startColumnNumber" : 2,
        "endLineNumber" : 160,
        "endColumnNumber" : 76
      },
      "nodeContext" : "ClassPathResource classPathResource=new ClassPathResource(resourcePath);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 900,
        "startLineNumber" : 157,
        "startColumnNumber" : 71,
        "endLineNumber" : 177,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  String resourcePath=ClassUtils.convertClassNameToResourcePath(testClass.getName()) + \".properties\";\n  String prefixedResourcePath=ResourceUtils.CLASSPATH_URL_PREFIX + resourcePath;\n  ClassPathResource classPathResource=new ClassPathResource(resourcePath);\n  if (classPathResource.exists()) {\n    if (logger.isInfoEnabled()) {\n      logger.info(String.format(\"Detected default properties file \\\"%s\\\" for test class [%s]\",prefixedResourcePath,testClass.getName()));\n    }\n    return prefixedResourcePath;\n  }\n else {\n    String msg=String.format(\"Could not detect default properties file for test [%s]: \" + \"%s does not exist. Either declare the 'locations' or 'properties' attributes \" + \"of @TestPropertySource or make the default properties file available.\",testClass.getName(),classPathResource);\n    logger.error(msg);\n    throw new IllegalStateException(msg);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1117,
        "startLineNumber" : 153,
        "startColumnNumber" : 1,
        "endLineNumber" : 177,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Detect a default properties file for the supplied class, as specified in the class-level Javadoc for  {@link TestPropertySource}.\n */\nprivate static String detectDefaultPropertiesFile(Class<?> testClass){\n  String resourcePath=ClassUtils.convertClassNameToResourcePath(testClass.getName()) + \".properties\";\n  String prefixedResourcePath=ResourceUtils.CLASSPATH_URL_PREFIX + resourcePath;\n  ClassPathResource classPathResource=new ClassPathResource(resourcePath);\n  if (classPathResource.exists()) {\n    if (logger.isInfoEnabled()) {\n      logger.info(String.format(\"Detected default properties file \\\"%s\\\" for test class [%s]\",prefixedResourcePath,testClass.getName()));\n    }\n    return prefixedResourcePath;\n  }\n else {\n    String msg=String.format(\"Could not detect default properties file for test [%s]: \" + \"%s does not exist. Either declare the 'locations' or 'properties' attributes \" + \"of @TestPropertySource or make the default properties file available.\",testClass.getName(),classPathResource);\n    logger.error(msg);\n    throw new IllegalStateException(msg);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 97,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 160,
        "startColumnNumber" : 2,
        "endLineNumber" : 160,
        "endColumnNumber" : 76
      },
      "nodeContext" : "ClassPathResource classPathResource=new ClassPathResource(resourcePath);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "org.springframework.core.io.ClassPathResource"
  } ],
  "positionList" : [ {
    "charLength" : 35,
    "startLineNumber" : 160,
    "startColumnNumber" : 40,
    "endLineNumber" : 160,
    "endColumnNumber" : 75
  } ],
  "layoutRelationDataList" : [ ]
}