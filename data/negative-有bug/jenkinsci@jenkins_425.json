{
  "id" : 425,
  "expression" : "lr",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/core/src/main/java/hudson/model/AsyncPeriodicWork.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "lr",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 121,
      "startColumnNumber" : 12,
      "endLineNumber" : 121,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 121,
        "startColumnNumber" : 12,
        "endLineNumber" : 121,
        "endColumnNumber" : 27
      },
      "nodeContext" : "lr.setThrown(t)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 121,
        "startColumnNumber" : 12,
        "endLineNumber" : 121,
        "endColumnNumber" : 28
      },
      "nodeContext" : "lr.setThrown(t);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 226,
        "startLineNumber" : 119,
        "startColumnNumber" : 30,
        "endLineNumber" : 124,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  LogRecord lr=new LogRecord(this.getErrorLoggingLevel(),\"{0} thread failed with error\");\n  lr.setThrown(t);\n  lr.setParameters(new Object[]{name});\n  logger.log(lr);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 246,
        "startLineNumber" : 119,
        "startColumnNumber" : 10,
        "endLineNumber" : 124,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (Throwable t) {\n  LogRecord lr=new LogRecord(this.getErrorLoggingLevel(),\"{0} thread failed with error\");\n  lr.setThrown(t);\n  lr.setParameters(new Object[]{name});\n  logger.log(lr);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 39,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1790,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 124,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  if (thread != null && thread.isAlive()) {\n    logger.log(this.getSlowLoggingLevel(),\"{0} thread is still running. Execution aborted.\",name);\n    return;\n  }\n  thread=new Thread(() -> {\n    logger.log(getNormalLoggingLevel(),\"Started {0}\",name);\n    long startTime=System.currentTimeMillis();\n    long stopTime;\n    StreamTaskListener l=createListener();\n    try {\n      l.getLogger().printf(\"Started at %tc%n\",new Date(startTime));\n      try (ACLContext ctx=ACL.as2(ACL.SYSTEM2)){\n        execute(l);\n      }\n     }\n catch (    IOException e) {\n      Functions.printStackTrace(e,l.fatalError(e.getMessage()));\n    }\ncatch (    InterruptedException e) {\n      Functions.printStackTrace(e,l.fatalError(\"aborted\"));\n    }\n finally {\n      stopTime=System.currentTimeMillis();\n      try {\n        l.getLogger().printf(\"Finished at %tc. %dms%n\",new Date(stopTime),stopTime - startTime);\n      }\n  finally {\n        l.closeQuietly();\n      }\n    }\n    logger.log(getNormalLoggingLevel(),\"Finished {0}. {1,number} ms\",new Object[]{name,stopTime - startTime});\n  }\n,name + \" thread\");\n  thread.start();\n}\n catch (Throwable t) {\n  LogRecord lr=new LogRecord(this.getErrorLoggingLevel(),\"{0} thread failed with error\");\n  lr.setThrown(t);\n  lr.setParameters(new Object[]{name});\n  logger.log(lr);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 208,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1808,
        "startLineNumber" : 85,
        "startColumnNumber" : 30,
        "endLineNumber" : 125,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    if (thread != null && thread.isAlive()) {\n      logger.log(this.getSlowLoggingLevel(),\"{0} thread is still running. Execution aborted.\",name);\n      return;\n    }\n    thread=new Thread(() -> {\n      logger.log(getNormalLoggingLevel(),\"Started {0}\",name);\n      long startTime=System.currentTimeMillis();\n      long stopTime;\n      StreamTaskListener l=createListener();\n      try {\n        l.getLogger().printf(\"Started at %tc%n\",new Date(startTime));\n        try (ACLContext ctx=ACL.as2(ACL.SYSTEM2)){\n          execute(l);\n        }\n       }\n catch (      IOException e) {\n        Functions.printStackTrace(e,l.fatalError(e.getMessage()));\n      }\ncatch (      InterruptedException e) {\n        Functions.printStackTrace(e,l.fatalError(\"aborted\"));\n      }\n finally {\n        stopTime=System.currentTimeMillis();\n        try {\n          l.getLogger().printf(\"Finished at %tc. %dms%n\",new Date(stopTime),stopTime - startTime);\n        }\n  finally {\n          l.closeQuietly();\n        }\n      }\n      logger.log(getNormalLoggingLevel(),\"Finished {0}. {1,number} ms\",new Object[]{name,stopTime - startTime});\n    }\n,name + \" thread\");\n    thread.start();\n  }\n catch (  Throwable t) {\n    LogRecord lr=new LogRecord(this.getErrorLoggingLevel(),\"{0} thread failed with error\");\n    lr.setThrown(t);\n    lr.setParameters(new Object[]{name});\n    logger.log(lr);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 209,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2068,
        "startLineNumber" : 81,
        "startColumnNumber" : 4,
        "endLineNumber" : 125,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Schedules this periodic work now in a new thread, if one isn't already running.\n */\n@SuppressWarnings(\"deprecation\") public final void doRun(){\n  try {\n    if (thread != null && thread.isAlive()) {\n      logger.log(this.getSlowLoggingLevel(),\"{0} thread is still running. Execution aborted.\",name);\n      return;\n    }\n    thread=new Thread(() -> {\n      logger.log(getNormalLoggingLevel(),\"Started {0}\",name);\n      long startTime=System.currentTimeMillis();\n      long stopTime;\n      StreamTaskListener l=createListener();\n      try {\n        l.getLogger().printf(\"Started at %tc%n\",new Date(startTime));\n        try (ACLContext ctx=ACL.as2(ACL.SYSTEM2)){\n          execute(l);\n        }\n       }\n catch (      IOException e) {\n        Functions.printStackTrace(e,l.fatalError(e.getMessage()));\n      }\ncatch (      InterruptedException e) {\n        Functions.printStackTrace(e,l.fatalError(\"aborted\"));\n      }\n finally {\n        stopTime=System.currentTimeMillis();\n        try {\n          l.getLogger().printf(\"Finished at %tc. %dms%n\",new Date(stopTime),stopTime - startTime);\n        }\n  finally {\n          l.closeQuietly();\n        }\n      }\n      logger.log(getNormalLoggingLevel(),\"Finished {0}. {1,number} ms\",new Object[]{name,stopTime - startTime});\n    }\n,name + \" thread\");\n    thread.start();\n  }\n catch (  Throwable t) {\n    LogRecord lr=new LogRecord(this.getErrorLoggingLevel(),\"{0} thread failed with error\");\n    lr.setThrown(t);\n    lr.setParameters(new Object[]{name});\n    logger.log(lr);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 218,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 121,
        "startColumnNumber" : 12,
        "endLineNumber" : 121,
        "endColumnNumber" : 28
      },
      "nodeContext" : "lr.setThrown(t);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.logging.LogRecord"
  }, {
    "nodeContext" : "lr",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 122,
      "startColumnNumber" : 12,
      "endLineNumber" : 122,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 122,
        "startColumnNumber" : 12,
        "endLineNumber" : 122,
        "endColumnNumber" : 48
      },
      "nodeContext" : "lr.setParameters(new Object[]{name})",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 122,
        "startColumnNumber" : 12,
        "endLineNumber" : 122,
        "endColumnNumber" : 49
      },
      "nodeContext" : "lr.setParameters(new Object[]{name});\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 226,
        "startLineNumber" : 119,
        "startColumnNumber" : 30,
        "endLineNumber" : 124,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  LogRecord lr=new LogRecord(this.getErrorLoggingLevel(),\"{0} thread failed with error\");\n  lr.setThrown(t);\n  lr.setParameters(new Object[]{name});\n  logger.log(lr);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 246,
        "startLineNumber" : 119,
        "startColumnNumber" : 10,
        "endLineNumber" : 124,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (Throwable t) {\n  LogRecord lr=new LogRecord(this.getErrorLoggingLevel(),\"{0} thread failed with error\");\n  lr.setThrown(t);\n  lr.setParameters(new Object[]{name});\n  logger.log(lr);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 39,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1790,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 124,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  if (thread != null && thread.isAlive()) {\n    logger.log(this.getSlowLoggingLevel(),\"{0} thread is still running. Execution aborted.\",name);\n    return;\n  }\n  thread=new Thread(() -> {\n    logger.log(getNormalLoggingLevel(),\"Started {0}\",name);\n    long startTime=System.currentTimeMillis();\n    long stopTime;\n    StreamTaskListener l=createListener();\n    try {\n      l.getLogger().printf(\"Started at %tc%n\",new Date(startTime));\n      try (ACLContext ctx=ACL.as2(ACL.SYSTEM2)){\n        execute(l);\n      }\n     }\n catch (    IOException e) {\n      Functions.printStackTrace(e,l.fatalError(e.getMessage()));\n    }\ncatch (    InterruptedException e) {\n      Functions.printStackTrace(e,l.fatalError(\"aborted\"));\n    }\n finally {\n      stopTime=System.currentTimeMillis();\n      try {\n        l.getLogger().printf(\"Finished at %tc. %dms%n\",new Date(stopTime),stopTime - startTime);\n      }\n  finally {\n        l.closeQuietly();\n      }\n    }\n    logger.log(getNormalLoggingLevel(),\"Finished {0}. {1,number} ms\",new Object[]{name,stopTime - startTime});\n  }\n,name + \" thread\");\n  thread.start();\n}\n catch (Throwable t) {\n  LogRecord lr=new LogRecord(this.getErrorLoggingLevel(),\"{0} thread failed with error\");\n  lr.setThrown(t);\n  lr.setParameters(new Object[]{name});\n  logger.log(lr);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 208,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1808,
        "startLineNumber" : 85,
        "startColumnNumber" : 30,
        "endLineNumber" : 125,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    if (thread != null && thread.isAlive()) {\n      logger.log(this.getSlowLoggingLevel(),\"{0} thread is still running. Execution aborted.\",name);\n      return;\n    }\n    thread=new Thread(() -> {\n      logger.log(getNormalLoggingLevel(),\"Started {0}\",name);\n      long startTime=System.currentTimeMillis();\n      long stopTime;\n      StreamTaskListener l=createListener();\n      try {\n        l.getLogger().printf(\"Started at %tc%n\",new Date(startTime));\n        try (ACLContext ctx=ACL.as2(ACL.SYSTEM2)){\n          execute(l);\n        }\n       }\n catch (      IOException e) {\n        Functions.printStackTrace(e,l.fatalError(e.getMessage()));\n      }\ncatch (      InterruptedException e) {\n        Functions.printStackTrace(e,l.fatalError(\"aborted\"));\n      }\n finally {\n        stopTime=System.currentTimeMillis();\n        try {\n          l.getLogger().printf(\"Finished at %tc. %dms%n\",new Date(stopTime),stopTime - startTime);\n        }\n  finally {\n          l.closeQuietly();\n        }\n      }\n      logger.log(getNormalLoggingLevel(),\"Finished {0}. {1,number} ms\",new Object[]{name,stopTime - startTime});\n    }\n,name + \" thread\");\n    thread.start();\n  }\n catch (  Throwable t) {\n    LogRecord lr=new LogRecord(this.getErrorLoggingLevel(),\"{0} thread failed with error\");\n    lr.setThrown(t);\n    lr.setParameters(new Object[]{name});\n    logger.log(lr);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 209,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2068,
        "startLineNumber" : 81,
        "startColumnNumber" : 4,
        "endLineNumber" : 125,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Schedules this periodic work now in a new thread, if one isn't already running.\n */\n@SuppressWarnings(\"deprecation\") public final void doRun(){\n  try {\n    if (thread != null && thread.isAlive()) {\n      logger.log(this.getSlowLoggingLevel(),\"{0} thread is still running. Execution aborted.\",name);\n      return;\n    }\n    thread=new Thread(() -> {\n      logger.log(getNormalLoggingLevel(),\"Started {0}\",name);\n      long startTime=System.currentTimeMillis();\n      long stopTime;\n      StreamTaskListener l=createListener();\n      try {\n        l.getLogger().printf(\"Started at %tc%n\",new Date(startTime));\n        try (ACLContext ctx=ACL.as2(ACL.SYSTEM2)){\n          execute(l);\n        }\n       }\n catch (      IOException e) {\n        Functions.printStackTrace(e,l.fatalError(e.getMessage()));\n      }\ncatch (      InterruptedException e) {\n        Functions.printStackTrace(e,l.fatalError(\"aborted\"));\n      }\n finally {\n        stopTime=System.currentTimeMillis();\n        try {\n          l.getLogger().printf(\"Finished at %tc. %dms%n\",new Date(stopTime),stopTime - startTime);\n        }\n  finally {\n          l.closeQuietly();\n        }\n      }\n      logger.log(getNormalLoggingLevel(),\"Finished {0}. {1,number} ms\",new Object[]{name,stopTime - startTime});\n    }\n,name + \" thread\");\n    thread.start();\n  }\n catch (  Throwable t) {\n    LogRecord lr=new LogRecord(this.getErrorLoggingLevel(),\"{0} thread failed with error\");\n    lr.setThrown(t);\n    lr.setParameters(new Object[]{name});\n    logger.log(lr);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 218,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 122,
        "startColumnNumber" : 12,
        "endLineNumber" : 122,
        "endColumnNumber" : 49
      },
      "nodeContext" : "lr.setParameters(new Object[]{name});\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.logging.LogRecord"
  }, {
    "nodeContext" : "lr",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 123,
      "startColumnNumber" : 23,
      "endLineNumber" : 123,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 123,
        "startColumnNumber" : 12,
        "endLineNumber" : 123,
        "endColumnNumber" : 26
      },
      "nodeContext" : "logger.log(lr)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 123,
        "startColumnNumber" : 12,
        "endLineNumber" : 123,
        "endColumnNumber" : 27
      },
      "nodeContext" : "logger.log(lr);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 226,
        "startLineNumber" : 119,
        "startColumnNumber" : 30,
        "endLineNumber" : 124,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  LogRecord lr=new LogRecord(this.getErrorLoggingLevel(),\"{0} thread failed with error\");\n  lr.setThrown(t);\n  lr.setParameters(new Object[]{name});\n  logger.log(lr);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 246,
        "startLineNumber" : 119,
        "startColumnNumber" : 10,
        "endLineNumber" : 124,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (Throwable t) {\n  LogRecord lr=new LogRecord(this.getErrorLoggingLevel(),\"{0} thread failed with error\");\n  lr.setThrown(t);\n  lr.setParameters(new Object[]{name});\n  logger.log(lr);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 39,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1790,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 124,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  if (thread != null && thread.isAlive()) {\n    logger.log(this.getSlowLoggingLevel(),\"{0} thread is still running. Execution aborted.\",name);\n    return;\n  }\n  thread=new Thread(() -> {\n    logger.log(getNormalLoggingLevel(),\"Started {0}\",name);\n    long startTime=System.currentTimeMillis();\n    long stopTime;\n    StreamTaskListener l=createListener();\n    try {\n      l.getLogger().printf(\"Started at %tc%n\",new Date(startTime));\n      try (ACLContext ctx=ACL.as2(ACL.SYSTEM2)){\n        execute(l);\n      }\n     }\n catch (    IOException e) {\n      Functions.printStackTrace(e,l.fatalError(e.getMessage()));\n    }\ncatch (    InterruptedException e) {\n      Functions.printStackTrace(e,l.fatalError(\"aborted\"));\n    }\n finally {\n      stopTime=System.currentTimeMillis();\n      try {\n        l.getLogger().printf(\"Finished at %tc. %dms%n\",new Date(stopTime),stopTime - startTime);\n      }\n  finally {\n        l.closeQuietly();\n      }\n    }\n    logger.log(getNormalLoggingLevel(),\"Finished {0}. {1,number} ms\",new Object[]{name,stopTime - startTime});\n  }\n,name + \" thread\");\n  thread.start();\n}\n catch (Throwable t) {\n  LogRecord lr=new LogRecord(this.getErrorLoggingLevel(),\"{0} thread failed with error\");\n  lr.setThrown(t);\n  lr.setParameters(new Object[]{name});\n  logger.log(lr);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 208,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1808,
        "startLineNumber" : 85,
        "startColumnNumber" : 30,
        "endLineNumber" : 125,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    if (thread != null && thread.isAlive()) {\n      logger.log(this.getSlowLoggingLevel(),\"{0} thread is still running. Execution aborted.\",name);\n      return;\n    }\n    thread=new Thread(() -> {\n      logger.log(getNormalLoggingLevel(),\"Started {0}\",name);\n      long startTime=System.currentTimeMillis();\n      long stopTime;\n      StreamTaskListener l=createListener();\n      try {\n        l.getLogger().printf(\"Started at %tc%n\",new Date(startTime));\n        try (ACLContext ctx=ACL.as2(ACL.SYSTEM2)){\n          execute(l);\n        }\n       }\n catch (      IOException e) {\n        Functions.printStackTrace(e,l.fatalError(e.getMessage()));\n      }\ncatch (      InterruptedException e) {\n        Functions.printStackTrace(e,l.fatalError(\"aborted\"));\n      }\n finally {\n        stopTime=System.currentTimeMillis();\n        try {\n          l.getLogger().printf(\"Finished at %tc. %dms%n\",new Date(stopTime),stopTime - startTime);\n        }\n  finally {\n          l.closeQuietly();\n        }\n      }\n      logger.log(getNormalLoggingLevel(),\"Finished {0}. {1,number} ms\",new Object[]{name,stopTime - startTime});\n    }\n,name + \" thread\");\n    thread.start();\n  }\n catch (  Throwable t) {\n    LogRecord lr=new LogRecord(this.getErrorLoggingLevel(),\"{0} thread failed with error\");\n    lr.setThrown(t);\n    lr.setParameters(new Object[]{name});\n    logger.log(lr);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 209,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2068,
        "startLineNumber" : 81,
        "startColumnNumber" : 4,
        "endLineNumber" : 125,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Schedules this periodic work now in a new thread, if one isn't already running.\n */\n@SuppressWarnings(\"deprecation\") public final void doRun(){\n  try {\n    if (thread != null && thread.isAlive()) {\n      logger.log(this.getSlowLoggingLevel(),\"{0} thread is still running. Execution aborted.\",name);\n      return;\n    }\n    thread=new Thread(() -> {\n      logger.log(getNormalLoggingLevel(),\"Started {0}\",name);\n      long startTime=System.currentTimeMillis();\n      long stopTime;\n      StreamTaskListener l=createListener();\n      try {\n        l.getLogger().printf(\"Started at %tc%n\",new Date(startTime));\n        try (ACLContext ctx=ACL.as2(ACL.SYSTEM2)){\n          execute(l);\n        }\n       }\n catch (      IOException e) {\n        Functions.printStackTrace(e,l.fatalError(e.getMessage()));\n      }\ncatch (      InterruptedException e) {\n        Functions.printStackTrace(e,l.fatalError(\"aborted\"));\n      }\n finally {\n        stopTime=System.currentTimeMillis();\n        try {\n          l.getLogger().printf(\"Finished at %tc. %dms%n\",new Date(stopTime),stopTime - startTime);\n        }\n  finally {\n          l.closeQuietly();\n        }\n      }\n      logger.log(getNormalLoggingLevel(),\"Finished {0}. {1,number} ms\",new Object[]{name,stopTime - startTime});\n    }\n,name + \" thread\");\n    thread.start();\n  }\n catch (  Throwable t) {\n    LogRecord lr=new LogRecord(this.getErrorLoggingLevel(),\"{0} thread failed with error\");\n    lr.setThrown(t);\n    lr.setParameters(new Object[]{name});\n    logger.log(lr);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 218,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 123,
        "startColumnNumber" : 12,
        "endLineNumber" : 123,
        "endColumnNumber" : 27
      },
      "nodeContext" : "logger.log(lr);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.logging.LogRecord"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 121,
    "startColumnNumber" : 12,
    "endLineNumber" : 121,
    "endColumnNumber" : 14
  }, {
    "charLength" : 2,
    "startLineNumber" : 122,
    "startColumnNumber" : 12,
    "endLineNumber" : 122,
    "endColumnNumber" : 14
  }, {
    "charLength" : 2,
    "startLineNumber" : 123,
    "startColumnNumber" : 23,
    "endLineNumber" : 123,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}