{
  "id" : 472,
  "expression" : "inputBuffer.position()",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/core/src/main/java/com/google/android/exoplayer2/audio/ChannelMappingAudioProcessor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "inputBuffer.position()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 74,
      "startColumnNumber" : 19,
      "endLineNumber" : 74,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 41
      },
      "nodeContext" : "position=inputBuffer.position()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 42
      },
      "nodeContext" : "int position=inputBuffer.position();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 627,
        "startLineNumber" : 72,
        "startColumnNumber" : 49,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int[] outputChannels=Assertions.checkNotNull(this.outputChannels);\n  int position=inputBuffer.position();\n  int limit=inputBuffer.limit();\n  int frameCount=(limit - position) / inputAudioFormat.bytesPerFrame;\n  int outputSize=frameCount * outputAudioFormat.bytesPerFrame;\n  ByteBuffer buffer=replaceOutputBuffer(outputSize);\n  while (position < limit) {\n    for (    int channelIndex : outputChannels) {\n      buffer.putShort(inputBuffer.getShort(position + 2 * channelIndex));\n    }\n    position+=inputAudioFormat.bytesPerFrame;\n  }\n  inputBuffer.position(limit);\n  buffer.flip();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 94,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 686,
        "startLineNumber" : 71,
        "startColumnNumber" : 2,
        "endLineNumber" : 87,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void queueInput(ByteBuffer inputBuffer){\n  int[] outputChannels=Assertions.checkNotNull(this.outputChannels);\n  int position=inputBuffer.position();\n  int limit=inputBuffer.limit();\n  int frameCount=(limit - position) / inputAudioFormat.bytesPerFrame;\n  int outputSize=frameCount * outputAudioFormat.bytesPerFrame;\n  ByteBuffer buffer=replaceOutputBuffer(outputSize);\n  while (position < limit) {\n    for (    int channelIndex : outputChannels) {\n      buffer.putShort(inputBuffer.getShort(position + 2 * channelIndex));\n    }\n    position+=inputAudioFormat.bytesPerFrame;\n  }\n  inputBuffer.position(limit);\n  buffer.flip();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 104,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 42
      },
      "nodeContext" : "int position=inputBuffer.position();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 74,
    "startColumnNumber" : 19,
    "endLineNumber" : 74,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}