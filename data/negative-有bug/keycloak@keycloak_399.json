{
  "id" : 399,
  "expression" : "EventType",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/services/src/main/java/org/keycloak/protocol/oidc/grants/ciba/endpoints/BackchannelAuthenticationCallbackEndpoint.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "EventType",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 71,
      "startColumnNumber" : 20,
      "endLineNumber" : 71,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 71,
        "startColumnNumber" : 20,
        "endLineNumber" : 71,
        "endColumnNumber" : 35
      },
      "nodeContext" : "EventType.LOGIN",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 71,
        "endColumnNumber" : 36
      },
      "nodeContext" : "event.event(EventType.LOGIN)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 71,
        "endColumnNumber" : 37
      },
      "nodeContext" : "event.event(EventType.LOGIN);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1275,
        "startLineNumber" : 70,
        "startColumnNumber" : 95,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  event.event(EventType.LOGIN);\n  BackchannelAuthCallbackContext ctx=verifyAuthenticationRequest(httpRequest.getHttpHeaders());\n  AccessToken bearerToken=ctx.bearerToken;\n  OAuth2DeviceCodeModel deviceModel=ctx.deviceModel;\n  Status status=response.getStatus();\n  if (status == null) {\n    event.error(Errors.INVALID_REQUEST);\n    throw new ErrorResponseException(OAuthErrorException.INVALID_REQUEST,\"Invalid authentication status\",Response.Status.BAD_REQUEST);\n  }\nswitch (status) {\ncase SUCCEED:    approveRequest(bearerToken,response.getAdditionalParams());\n  break;\ncase CANCELLED:case UNAUTHORIZED:denyRequest(bearerToken,status);\nbreak;\n}\nClientModel client=session.getContext().getClient();\nCibaConfig cibaConfig=realm.getCibaPolicy();\nif (cibaConfig.getBackchannelTokenDeliveryMode(client).equals(CibaConfig.CIBA_PING_MODE)) {\nsendClientNotificationRequest(client,cibaConfig,deviceModel);\n}\nreturn Response.ok(MediaType.APPLICATION_JSON_TYPE).build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1488,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Path(\"/\") @POST @NoCache @Consumes(MediaType.APPLICATION_JSON) @Produces(MediaType.APPLICATION_JSON) public Response processAuthenticationChannelResult(AuthenticationChannelResponse response){\n  event.event(EventType.LOGIN);\n  BackchannelAuthCallbackContext ctx=verifyAuthenticationRequest(httpRequest.getHttpHeaders());\n  AccessToken bearerToken=ctx.bearerToken;\n  OAuth2DeviceCodeModel deviceModel=ctx.deviceModel;\n  Status status=response.getStatus();\n  if (status == null) {\n    event.error(Errors.INVALID_REQUEST);\n    throw new ErrorResponseException(OAuthErrorException.INVALID_REQUEST,\"Invalid authentication status\",Response.Status.BAD_REQUEST);\n  }\nswitch (status) {\ncase SUCCEED:    approveRequest(bearerToken,response.getAdditionalParams());\n  break;\ncase CANCELLED:case UNAUTHORIZED:denyRequest(bearerToken,status);\nbreak;\n}\nClientModel client=session.getContext().getClient();\nCibaConfig cibaConfig=realm.getCibaPolicy();\nif (cibaConfig.getBackchannelTokenDeliveryMode(client).equals(CibaConfig.CIBA_PING_MODE)) {\nsendClientNotificationRequest(client,cibaConfig,deviceModel);\n}\nreturn Response.ok(MediaType.APPLICATION_JSON_TYPE).build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 159,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 71,
        "endColumnNumber" : 37
      },
      "nodeContext" : "event.event(EventType.LOGIN);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.keycloak.events.EventType"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 71,
    "startColumnNumber" : 20,
    "endLineNumber" : 71,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ ]
}