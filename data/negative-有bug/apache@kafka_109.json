{
  "id" : 109,
  "expression" : "updatedValue",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/connect/transforms/src/test/java/org/apache/kafka/connect/transforms/ReplaceFieldTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "updatedValue",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 96,
      "startColumnNumber" : 24,
      "endLineNumber" : 96,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 96,
        "startColumnNumber" : 24,
        "endLineNumber" : 96,
        "endColumnNumber" : 43
      },
      "nodeContext" : "updatedValue.size()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 96,
        "startColumnNumber" : 8,
        "endLineNumber" : 96,
        "endColumnNumber" : 44
      },
      "nodeContext" : "assertEquals(3,updatedValue.size())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 96,
        "startColumnNumber" : 8,
        "endLineNumber" : 96,
        "endColumnNumber" : 45
      },
      "nodeContext" : "assertEquals(3,updatedValue.size());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 839,
        "startLineNumber" : 79,
        "startColumnNumber" : 29,
        "endLineNumber" : 100,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Map<String,String> props=new HashMap<>();\n  props.put(\"exclude\",\"dont\");\n  props.put(\"renames\",\"abc:xyz,foo:bar\");\n  xform.configure(props);\n  final Map<String,Object> value=new HashMap<>();\n  value.put(\"dont\",\"whatever\");\n  value.put(\"abc\",42);\n  value.put(\"foo\",true);\n  value.put(\"etc\",\"etc\");\n  final SinkRecord record=new SinkRecord(\"test\",0,null,null,null,value,0);\n  final SinkRecord transformedRecord=xform.apply(record);\n  final Map<String,Object> updatedValue=(Map<String,Object>)transformedRecord.value();\n  assertEquals(3,updatedValue.size());\n  assertEquals(42,updatedValue.get(\"xyz\"));\n  assertEquals(true,updatedValue.get(\"bar\"));\n  assertEquals(\"etc\",updatedValue.get(\"etc\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 909,
        "startLineNumber" : 77,
        "startColumnNumber" : 4,
        "endLineNumber" : 100,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") @Test public void schemaless(){\n  final Map<String,String> props=new HashMap<>();\n  props.put(\"exclude\",\"dont\");\n  props.put(\"renames\",\"abc:xyz,foo:bar\");\n  xform.configure(props);\n  final Map<String,Object> value=new HashMap<>();\n  value.put(\"dont\",\"whatever\");\n  value.put(\"abc\",42);\n  value.put(\"foo\",true);\n  value.put(\"etc\",\"etc\");\n  final SinkRecord record=new SinkRecord(\"test\",0,null,null,null,value,0);\n  final SinkRecord transformedRecord=xform.apply(record);\n  final Map<String,Object> updatedValue=(Map<String,Object>)transformedRecord.value();\n  assertEquals(3,updatedValue.size());\n  assertEquals(42,updatedValue.get(\"xyz\"));\n  assertEquals(true,updatedValue.get(\"bar\"));\n  assertEquals(\"etc\",updatedValue.get(\"etc\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 160,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 96,
        "startColumnNumber" : 8,
        "endLineNumber" : 96,
        "endColumnNumber" : 45
      },
      "nodeContext" : "assertEquals(3,updatedValue.size());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.Object>"
  }, {
    "nodeContext" : "updatedValue",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 97,
      "startColumnNumber" : 25,
      "endLineNumber" : 97,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 97,
        "startColumnNumber" : 25,
        "endLineNumber" : 97,
        "endColumnNumber" : 48
      },
      "nodeContext" : "updatedValue.get(\"xyz\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 97,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 49
      },
      "nodeContext" : "assertEquals(42,updatedValue.get(\"xyz\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 97,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 50
      },
      "nodeContext" : "assertEquals(42,updatedValue.get(\"xyz\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 839,
        "startLineNumber" : 79,
        "startColumnNumber" : 29,
        "endLineNumber" : 100,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Map<String,String> props=new HashMap<>();\n  props.put(\"exclude\",\"dont\");\n  props.put(\"renames\",\"abc:xyz,foo:bar\");\n  xform.configure(props);\n  final Map<String,Object> value=new HashMap<>();\n  value.put(\"dont\",\"whatever\");\n  value.put(\"abc\",42);\n  value.put(\"foo\",true);\n  value.put(\"etc\",\"etc\");\n  final SinkRecord record=new SinkRecord(\"test\",0,null,null,null,value,0);\n  final SinkRecord transformedRecord=xform.apply(record);\n  final Map<String,Object> updatedValue=(Map<String,Object>)transformedRecord.value();\n  assertEquals(3,updatedValue.size());\n  assertEquals(42,updatedValue.get(\"xyz\"));\n  assertEquals(true,updatedValue.get(\"bar\"));\n  assertEquals(\"etc\",updatedValue.get(\"etc\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 909,
        "startLineNumber" : 77,
        "startColumnNumber" : 4,
        "endLineNumber" : 100,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") @Test public void schemaless(){\n  final Map<String,String> props=new HashMap<>();\n  props.put(\"exclude\",\"dont\");\n  props.put(\"renames\",\"abc:xyz,foo:bar\");\n  xform.configure(props);\n  final Map<String,Object> value=new HashMap<>();\n  value.put(\"dont\",\"whatever\");\n  value.put(\"abc\",42);\n  value.put(\"foo\",true);\n  value.put(\"etc\",\"etc\");\n  final SinkRecord record=new SinkRecord(\"test\",0,null,null,null,value,0);\n  final SinkRecord transformedRecord=xform.apply(record);\n  final Map<String,Object> updatedValue=(Map<String,Object>)transformedRecord.value();\n  assertEquals(3,updatedValue.size());\n  assertEquals(42,updatedValue.get(\"xyz\"));\n  assertEquals(true,updatedValue.get(\"bar\"));\n  assertEquals(\"etc\",updatedValue.get(\"etc\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 160,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 97,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 50
      },
      "nodeContext" : "assertEquals(42,updatedValue.get(\"xyz\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.Object>"
  }, {
    "nodeContext" : "updatedValue",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 98,
      "startColumnNumber" : 27,
      "endLineNumber" : 98,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 98,
        "startColumnNumber" : 27,
        "endLineNumber" : 98,
        "endColumnNumber" : 50
      },
      "nodeContext" : "updatedValue.get(\"bar\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 98,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 51
      },
      "nodeContext" : "assertEquals(true,updatedValue.get(\"bar\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 98,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertEquals(true,updatedValue.get(\"bar\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 839,
        "startLineNumber" : 79,
        "startColumnNumber" : 29,
        "endLineNumber" : 100,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Map<String,String> props=new HashMap<>();\n  props.put(\"exclude\",\"dont\");\n  props.put(\"renames\",\"abc:xyz,foo:bar\");\n  xform.configure(props);\n  final Map<String,Object> value=new HashMap<>();\n  value.put(\"dont\",\"whatever\");\n  value.put(\"abc\",42);\n  value.put(\"foo\",true);\n  value.put(\"etc\",\"etc\");\n  final SinkRecord record=new SinkRecord(\"test\",0,null,null,null,value,0);\n  final SinkRecord transformedRecord=xform.apply(record);\n  final Map<String,Object> updatedValue=(Map<String,Object>)transformedRecord.value();\n  assertEquals(3,updatedValue.size());\n  assertEquals(42,updatedValue.get(\"xyz\"));\n  assertEquals(true,updatedValue.get(\"bar\"));\n  assertEquals(\"etc\",updatedValue.get(\"etc\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 909,
        "startLineNumber" : 77,
        "startColumnNumber" : 4,
        "endLineNumber" : 100,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") @Test public void schemaless(){\n  final Map<String,String> props=new HashMap<>();\n  props.put(\"exclude\",\"dont\");\n  props.put(\"renames\",\"abc:xyz,foo:bar\");\n  xform.configure(props);\n  final Map<String,Object> value=new HashMap<>();\n  value.put(\"dont\",\"whatever\");\n  value.put(\"abc\",42);\n  value.put(\"foo\",true);\n  value.put(\"etc\",\"etc\");\n  final SinkRecord record=new SinkRecord(\"test\",0,null,null,null,value,0);\n  final SinkRecord transformedRecord=xform.apply(record);\n  final Map<String,Object> updatedValue=(Map<String,Object>)transformedRecord.value();\n  assertEquals(3,updatedValue.size());\n  assertEquals(42,updatedValue.get(\"xyz\"));\n  assertEquals(true,updatedValue.get(\"bar\"));\n  assertEquals(\"etc\",updatedValue.get(\"etc\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 160,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 98,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertEquals(true,updatedValue.get(\"bar\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.Object>"
  }, {
    "nodeContext" : "updatedValue",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 99,
      "startColumnNumber" : 28,
      "endLineNumber" : 99,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 99,
        "startColumnNumber" : 28,
        "endLineNumber" : 99,
        "endColumnNumber" : 51
      },
      "nodeContext" : "updatedValue.get(\"etc\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 99,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertEquals(\"etc\",updatedValue.get(\"etc\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 99,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertEquals(\"etc\",updatedValue.get(\"etc\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 839,
        "startLineNumber" : 79,
        "startColumnNumber" : 29,
        "endLineNumber" : 100,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Map<String,String> props=new HashMap<>();\n  props.put(\"exclude\",\"dont\");\n  props.put(\"renames\",\"abc:xyz,foo:bar\");\n  xform.configure(props);\n  final Map<String,Object> value=new HashMap<>();\n  value.put(\"dont\",\"whatever\");\n  value.put(\"abc\",42);\n  value.put(\"foo\",true);\n  value.put(\"etc\",\"etc\");\n  final SinkRecord record=new SinkRecord(\"test\",0,null,null,null,value,0);\n  final SinkRecord transformedRecord=xform.apply(record);\n  final Map<String,Object> updatedValue=(Map<String,Object>)transformedRecord.value();\n  assertEquals(3,updatedValue.size());\n  assertEquals(42,updatedValue.get(\"xyz\"));\n  assertEquals(true,updatedValue.get(\"bar\"));\n  assertEquals(\"etc\",updatedValue.get(\"etc\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 909,
        "startLineNumber" : 77,
        "startColumnNumber" : 4,
        "endLineNumber" : 100,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") @Test public void schemaless(){\n  final Map<String,String> props=new HashMap<>();\n  props.put(\"exclude\",\"dont\");\n  props.put(\"renames\",\"abc:xyz,foo:bar\");\n  xform.configure(props);\n  final Map<String,Object> value=new HashMap<>();\n  value.put(\"dont\",\"whatever\");\n  value.put(\"abc\",42);\n  value.put(\"foo\",true);\n  value.put(\"etc\",\"etc\");\n  final SinkRecord record=new SinkRecord(\"test\",0,null,null,null,value,0);\n  final SinkRecord transformedRecord=xform.apply(record);\n  final Map<String,Object> updatedValue=(Map<String,Object>)transformedRecord.value();\n  assertEquals(3,updatedValue.size());\n  assertEquals(42,updatedValue.get(\"xyz\"));\n  assertEquals(true,updatedValue.get(\"bar\"));\n  assertEquals(\"etc\",updatedValue.get(\"etc\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 160,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 99,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertEquals(\"etc\",updatedValue.get(\"etc\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.Object>"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 96,
    "startColumnNumber" : 24,
    "endLineNumber" : 96,
    "endColumnNumber" : 36
  }, {
    "charLength" : 12,
    "startLineNumber" : 97,
    "startColumnNumber" : 25,
    "endLineNumber" : 97,
    "endColumnNumber" : 37
  }, {
    "charLength" : 12,
    "startLineNumber" : 98,
    "startColumnNumber" : 27,
    "endLineNumber" : 98,
    "endColumnNumber" : 39
  }, {
    "charLength" : 12,
    "startLineNumber" : 99,
    "startColumnNumber" : 28,
    "endLineNumber" : 99,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  } ]
}