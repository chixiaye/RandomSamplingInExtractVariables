{
  "id" : 329,
  "expression" : "\".\"",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/model/data/json/JSONBestNumberSerializer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\".\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 38,
      "startColumnNumber" : 23,
      "endLineNumber" : 38,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 38,
        "startColumnNumber" : 12,
        "endLineNumber" : 38,
        "endColumnNumber" : 27
      },
      "nodeContext" : "s.contains(\".\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 38,
        "startColumnNumber" : 12,
        "endLineNumber" : 38,
        "endColumnNumber" : 46
      },
      "nodeContext" : "s.contains(\".\") || s.contains(\"E\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (s.contains(\".\") || s.contains(\"E\")) {\n  return Double.parseDouble(s);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 431,
        "startLineNumber" : 36,
        "startColumnNumber" : 34,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String s=json.getAsString();\n  if (s.contains(\".\") || s.contains(\"E\")) {\n    return Double.parseDouble(s);\n  }\n  try {\n    return Integer.parseInt(s);\n  }\n catch (  NumberFormatException e) {\n    try {\n      return Long.parseLong(s);\n    }\n catch (    NumberFormatException ex) {\n      return Double.parseDouble(s);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 57,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 570,
        "startLineNumber" : 34,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Number deserialize(JsonElement json,Type type,JsonDeserializationContext context) throws JsonParseException {\n  final String s=json.getAsString();\n  if (s.contains(\".\") || s.contains(\"E\")) {\n    return Double.parseDouble(s);\n  }\n  try {\n    return Integer.parseInt(s);\n  }\n catch (  NumberFormatException e) {\n    try {\n      return Long.parseLong(s);\n    }\n catch (    NumberFormatException ex) {\n      return Double.parseDouble(s);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 78,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 38,
        "startColumnNumber" : 12,
        "endLineNumber" : 38,
        "endColumnNumber" : 46
      },
      "nodeContext" : "s.contains(\".\") || s.contains(\"E\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 38,
    "startColumnNumber" : 23,
    "endLineNumber" : 38,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ ]
}