{
  "id" : 72,
  "expression" : "RedisGraphQueryUtil",
  "projectName" : "redis@jedis",
  "commitID" : "eaa5b16af93d575cd1f340c2cd23595dc29d5638",
  "filePath" : "/src/test/java/redis/clients/jedis/modules/graph/UtilsTest.java",
  "occurrences" : 14,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "RedisGraphQueryUtil",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 31,
      "startColumnNumber" : 52,
      "endLineNumber" : 31,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 31,
        "startColumnNumber" : 52,
        "endLineNumber" : 31,
        "endColumnNumber" : 109
      },
      "nodeContext" : "RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 31,
        "endColumnNumber" : 110
      },
      "nodeContext" : "assertEquals(\"CYPHER param=\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 31,
        "endColumnNumber" : 111
      },
      "nodeContext" : "assertEquals(\"CYPHER param=\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2339,
        "startLineNumber" : 28,
        "startColumnNumber" : 31,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Map<String,Object> params=new HashMap<>();\n  params.put(\"param\",\"\");\n  assertEquals(\"CYPHER param=\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"st\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"st\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",1);\n  assertEquals(\"CYPHER param=1 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",2.3);\n  assertEquals(\"CYPHER param=2.3 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",true);\n  assertEquals(\"CYPHER param=true RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",false);\n  assertEquals(\"CYPHER param=false RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",null);\n  assertEquals(\"CYPHER param=null RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"str\");\n  assertEquals(\"CYPHER param=\\\"str\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"s\\\"tr\");\n  assertEquals(\"CYPHER param=\\\"s\\\\\\\"tr\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  Integer arr[]={1,2,3};\n  params.put(\"param\",arr);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<Integer> list=Arrays.asList(1,2,3);\n  params.put(\"param\",list);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  String strArr[]={\"1\",\"2\",\"3\"};\n  params.put(\"param\",strArr);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<String> stringList=Arrays.asList(\"1\",\"2\",\"3\");\n  params.put(\"param\",stringList);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 273,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2377,
        "startLineNumber" : 27,
        "startColumnNumber" : 2,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testParamsPrep(){\n  Map<String,Object> params=new HashMap<>();\n  params.put(\"param\",\"\");\n  assertEquals(\"CYPHER param=\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"st\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"st\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",1);\n  assertEquals(\"CYPHER param=1 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",2.3);\n  assertEquals(\"CYPHER param=2.3 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",true);\n  assertEquals(\"CYPHER param=true RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",false);\n  assertEquals(\"CYPHER param=false RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",null);\n  assertEquals(\"CYPHER param=null RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"str\");\n  assertEquals(\"CYPHER param=\\\"str\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"s\\\"tr\");\n  assertEquals(\"CYPHER param=\\\"s\\\\\\\"tr\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  Integer arr[]={1,2,3};\n  params.put(\"param\",arr);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<Integer> list=Arrays.asList(1,2,3);\n  params.put(\"param\",list);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  String strArr[]={\"1\",\"2\",\"3\"};\n  params.put(\"param\",strArr);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<String> stringList=Arrays.asList(\"1\",\"2\",\"3\");\n  params.put(\"param\",stringList);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 279,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 31,
        "endColumnNumber" : 111
      },
      "nodeContext" : "assertEquals(\"CYPHER param=\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "redis.clients.jedis.graph.RedisGraphQueryUtil"
  }, {
    "nodeContext" : "RedisGraphQueryUtil",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 33,
      "startColumnNumber" : 56,
      "endLineNumber" : 33,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 33,
        "startColumnNumber" : 56,
        "endLineNumber" : 33,
        "endColumnNumber" : 113
      },
      "nodeContext" : "RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 33,
        "endColumnNumber" : 114
      },
      "nodeContext" : "assertEquals(\"CYPHER param=\\\"\\\\\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 33,
        "endColumnNumber" : 115
      },
      "nodeContext" : "assertEquals(\"CYPHER param=\\\"\\\\\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2339,
        "startLineNumber" : 28,
        "startColumnNumber" : 31,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Map<String,Object> params=new HashMap<>();\n  params.put(\"param\",\"\");\n  assertEquals(\"CYPHER param=\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"st\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"st\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",1);\n  assertEquals(\"CYPHER param=1 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",2.3);\n  assertEquals(\"CYPHER param=2.3 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",true);\n  assertEquals(\"CYPHER param=true RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",false);\n  assertEquals(\"CYPHER param=false RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",null);\n  assertEquals(\"CYPHER param=null RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"str\");\n  assertEquals(\"CYPHER param=\\\"str\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"s\\\"tr\");\n  assertEquals(\"CYPHER param=\\\"s\\\\\\\"tr\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  Integer arr[]={1,2,3};\n  params.put(\"param\",arr);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<Integer> list=Arrays.asList(1,2,3);\n  params.put(\"param\",list);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  String strArr[]={\"1\",\"2\",\"3\"};\n  params.put(\"param\",strArr);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<String> stringList=Arrays.asList(\"1\",\"2\",\"3\");\n  params.put(\"param\",stringList);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 273,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2377,
        "startLineNumber" : 27,
        "startColumnNumber" : 2,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testParamsPrep(){\n  Map<String,Object> params=new HashMap<>();\n  params.put(\"param\",\"\");\n  assertEquals(\"CYPHER param=\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"st\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"st\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",1);\n  assertEquals(\"CYPHER param=1 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",2.3);\n  assertEquals(\"CYPHER param=2.3 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",true);\n  assertEquals(\"CYPHER param=true RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",false);\n  assertEquals(\"CYPHER param=false RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",null);\n  assertEquals(\"CYPHER param=null RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"str\");\n  assertEquals(\"CYPHER param=\\\"str\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"s\\\"tr\");\n  assertEquals(\"CYPHER param=\\\"s\\\\\\\"tr\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  Integer arr[]={1,2,3};\n  params.put(\"param\",arr);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<Integer> list=Arrays.asList(1,2,3);\n  params.put(\"param\",list);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  String strArr[]={\"1\",\"2\",\"3\"};\n  params.put(\"param\",strArr);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<String> stringList=Arrays.asList(\"1\",\"2\",\"3\");\n  params.put(\"param\",stringList);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 279,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 33,
        "endColumnNumber" : 115
      },
      "nodeContext" : "assertEquals(\"CYPHER param=\\\"\\\\\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "redis.clients.jedis.graph.RedisGraphQueryUtil"
  }, {
    "nodeContext" : "RedisGraphQueryUtil",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 35,
      "startColumnNumber" : 58,
      "endLineNumber" : 35,
      "endColumnNumber" : 77
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 35,
        "startColumnNumber" : 58,
        "endLineNumber" : 35,
        "endColumnNumber" : 115
      },
      "nodeContext" : "RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 35,
        "endColumnNumber" : 116
      },
      "nodeContext" : "assertEquals(\"CYPHER param=\\\"\\\\\\\"st\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 35,
        "endColumnNumber" : 117
      },
      "nodeContext" : "assertEquals(\"CYPHER param=\\\"\\\\\\\"st\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2339,
        "startLineNumber" : 28,
        "startColumnNumber" : 31,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Map<String,Object> params=new HashMap<>();\n  params.put(\"param\",\"\");\n  assertEquals(\"CYPHER param=\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"st\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"st\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",1);\n  assertEquals(\"CYPHER param=1 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",2.3);\n  assertEquals(\"CYPHER param=2.3 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",true);\n  assertEquals(\"CYPHER param=true RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",false);\n  assertEquals(\"CYPHER param=false RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",null);\n  assertEquals(\"CYPHER param=null RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"str\");\n  assertEquals(\"CYPHER param=\\\"str\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"s\\\"tr\");\n  assertEquals(\"CYPHER param=\\\"s\\\\\\\"tr\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  Integer arr[]={1,2,3};\n  params.put(\"param\",arr);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<Integer> list=Arrays.asList(1,2,3);\n  params.put(\"param\",list);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  String strArr[]={\"1\",\"2\",\"3\"};\n  params.put(\"param\",strArr);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<String> stringList=Arrays.asList(\"1\",\"2\",\"3\");\n  params.put(\"param\",stringList);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 273,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2377,
        "startLineNumber" : 27,
        "startColumnNumber" : 2,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testParamsPrep(){\n  Map<String,Object> params=new HashMap<>();\n  params.put(\"param\",\"\");\n  assertEquals(\"CYPHER param=\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"st\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"st\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",1);\n  assertEquals(\"CYPHER param=1 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",2.3);\n  assertEquals(\"CYPHER param=2.3 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",true);\n  assertEquals(\"CYPHER param=true RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",false);\n  assertEquals(\"CYPHER param=false RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",null);\n  assertEquals(\"CYPHER param=null RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"str\");\n  assertEquals(\"CYPHER param=\\\"str\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"s\\\"tr\");\n  assertEquals(\"CYPHER param=\\\"s\\\\\\\"tr\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  Integer arr[]={1,2,3};\n  params.put(\"param\",arr);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<Integer> list=Arrays.asList(1,2,3);\n  params.put(\"param\",list);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  String strArr[]={\"1\",\"2\",\"3\"};\n  params.put(\"param\",strArr);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<String> stringList=Arrays.asList(\"1\",\"2\",\"3\");\n  params.put(\"param\",stringList);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 279,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 35,
        "endColumnNumber" : 117
      },
      "nodeContext" : "assertEquals(\"CYPHER param=\\\"\\\\\\\"st\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "redis.clients.jedis.graph.RedisGraphQueryUtil"
  }, {
    "nodeContext" : "RedisGraphQueryUtil",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 37,
      "startColumnNumber" : 49,
      "endLineNumber" : 37,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 37,
        "startColumnNumber" : 49,
        "endLineNumber" : 37,
        "endColumnNumber" : 106
      },
      "nodeContext" : "RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 37,
        "endColumnNumber" : 107
      },
      "nodeContext" : "assertEquals(\"CYPHER param=1 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 37,
        "endColumnNumber" : 108
      },
      "nodeContext" : "assertEquals(\"CYPHER param=1 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2339,
        "startLineNumber" : 28,
        "startColumnNumber" : 31,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Map<String,Object> params=new HashMap<>();\n  params.put(\"param\",\"\");\n  assertEquals(\"CYPHER param=\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"st\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"st\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",1);\n  assertEquals(\"CYPHER param=1 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",2.3);\n  assertEquals(\"CYPHER param=2.3 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",true);\n  assertEquals(\"CYPHER param=true RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",false);\n  assertEquals(\"CYPHER param=false RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",null);\n  assertEquals(\"CYPHER param=null RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"str\");\n  assertEquals(\"CYPHER param=\\\"str\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"s\\\"tr\");\n  assertEquals(\"CYPHER param=\\\"s\\\\\\\"tr\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  Integer arr[]={1,2,3};\n  params.put(\"param\",arr);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<Integer> list=Arrays.asList(1,2,3);\n  params.put(\"param\",list);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  String strArr[]={\"1\",\"2\",\"3\"};\n  params.put(\"param\",strArr);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<String> stringList=Arrays.asList(\"1\",\"2\",\"3\");\n  params.put(\"param\",stringList);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 273,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2377,
        "startLineNumber" : 27,
        "startColumnNumber" : 2,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testParamsPrep(){\n  Map<String,Object> params=new HashMap<>();\n  params.put(\"param\",\"\");\n  assertEquals(\"CYPHER param=\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"st\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"st\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",1);\n  assertEquals(\"CYPHER param=1 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",2.3);\n  assertEquals(\"CYPHER param=2.3 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",true);\n  assertEquals(\"CYPHER param=true RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",false);\n  assertEquals(\"CYPHER param=false RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",null);\n  assertEquals(\"CYPHER param=null RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"str\");\n  assertEquals(\"CYPHER param=\\\"str\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"s\\\"tr\");\n  assertEquals(\"CYPHER param=\\\"s\\\\\\\"tr\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  Integer arr[]={1,2,3};\n  params.put(\"param\",arr);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<Integer> list=Arrays.asList(1,2,3);\n  params.put(\"param\",list);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  String strArr[]={\"1\",\"2\",\"3\"};\n  params.put(\"param\",strArr);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<String> stringList=Arrays.asList(\"1\",\"2\",\"3\");\n  params.put(\"param\",stringList);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 279,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 37,
        "endColumnNumber" : 108
      },
      "nodeContext" : "assertEquals(\"CYPHER param=1 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "redis.clients.jedis.graph.RedisGraphQueryUtil"
  }, {
    "nodeContext" : "RedisGraphQueryUtil",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 39,
      "startColumnNumber" : 51,
      "endLineNumber" : 39,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 39,
        "startColumnNumber" : 51,
        "endLineNumber" : 39,
        "endColumnNumber" : 108
      },
      "nodeContext" : "RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 109
      },
      "nodeContext" : "assertEquals(\"CYPHER param=2.3 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 110
      },
      "nodeContext" : "assertEquals(\"CYPHER param=2.3 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2339,
        "startLineNumber" : 28,
        "startColumnNumber" : 31,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Map<String,Object> params=new HashMap<>();\n  params.put(\"param\",\"\");\n  assertEquals(\"CYPHER param=\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"st\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"st\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",1);\n  assertEquals(\"CYPHER param=1 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",2.3);\n  assertEquals(\"CYPHER param=2.3 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",true);\n  assertEquals(\"CYPHER param=true RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",false);\n  assertEquals(\"CYPHER param=false RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",null);\n  assertEquals(\"CYPHER param=null RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"str\");\n  assertEquals(\"CYPHER param=\\\"str\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"s\\\"tr\");\n  assertEquals(\"CYPHER param=\\\"s\\\\\\\"tr\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  Integer arr[]={1,2,3};\n  params.put(\"param\",arr);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<Integer> list=Arrays.asList(1,2,3);\n  params.put(\"param\",list);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  String strArr[]={\"1\",\"2\",\"3\"};\n  params.put(\"param\",strArr);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<String> stringList=Arrays.asList(\"1\",\"2\",\"3\");\n  params.put(\"param\",stringList);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 273,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2377,
        "startLineNumber" : 27,
        "startColumnNumber" : 2,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testParamsPrep(){\n  Map<String,Object> params=new HashMap<>();\n  params.put(\"param\",\"\");\n  assertEquals(\"CYPHER param=\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"st\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"st\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",1);\n  assertEquals(\"CYPHER param=1 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",2.3);\n  assertEquals(\"CYPHER param=2.3 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",true);\n  assertEquals(\"CYPHER param=true RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",false);\n  assertEquals(\"CYPHER param=false RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",null);\n  assertEquals(\"CYPHER param=null RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"str\");\n  assertEquals(\"CYPHER param=\\\"str\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"s\\\"tr\");\n  assertEquals(\"CYPHER param=\\\"s\\\\\\\"tr\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  Integer arr[]={1,2,3};\n  params.put(\"param\",arr);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<Integer> list=Arrays.asList(1,2,3);\n  params.put(\"param\",list);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  String strArr[]={\"1\",\"2\",\"3\"};\n  params.put(\"param\",strArr);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<String> stringList=Arrays.asList(\"1\",\"2\",\"3\");\n  params.put(\"param\",stringList);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 279,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 110
      },
      "nodeContext" : "assertEquals(\"CYPHER param=2.3 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "redis.clients.jedis.graph.RedisGraphQueryUtil"
  }, {
    "nodeContext" : "RedisGraphQueryUtil",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 41,
      "startColumnNumber" : 52,
      "endLineNumber" : 41,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 41,
        "startColumnNumber" : 52,
        "endLineNumber" : 41,
        "endColumnNumber" : 109
      },
      "nodeContext" : "RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 110
      },
      "nodeContext" : "assertEquals(\"CYPHER param=true RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 111
      },
      "nodeContext" : "assertEquals(\"CYPHER param=true RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2339,
        "startLineNumber" : 28,
        "startColumnNumber" : 31,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Map<String,Object> params=new HashMap<>();\n  params.put(\"param\",\"\");\n  assertEquals(\"CYPHER param=\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"st\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"st\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",1);\n  assertEquals(\"CYPHER param=1 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",2.3);\n  assertEquals(\"CYPHER param=2.3 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",true);\n  assertEquals(\"CYPHER param=true RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",false);\n  assertEquals(\"CYPHER param=false RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",null);\n  assertEquals(\"CYPHER param=null RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"str\");\n  assertEquals(\"CYPHER param=\\\"str\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"s\\\"tr\");\n  assertEquals(\"CYPHER param=\\\"s\\\\\\\"tr\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  Integer arr[]={1,2,3};\n  params.put(\"param\",arr);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<Integer> list=Arrays.asList(1,2,3);\n  params.put(\"param\",list);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  String strArr[]={\"1\",\"2\",\"3\"};\n  params.put(\"param\",strArr);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<String> stringList=Arrays.asList(\"1\",\"2\",\"3\");\n  params.put(\"param\",stringList);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 273,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2377,
        "startLineNumber" : 27,
        "startColumnNumber" : 2,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testParamsPrep(){\n  Map<String,Object> params=new HashMap<>();\n  params.put(\"param\",\"\");\n  assertEquals(\"CYPHER param=\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"st\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"st\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",1);\n  assertEquals(\"CYPHER param=1 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",2.3);\n  assertEquals(\"CYPHER param=2.3 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",true);\n  assertEquals(\"CYPHER param=true RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",false);\n  assertEquals(\"CYPHER param=false RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",null);\n  assertEquals(\"CYPHER param=null RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"str\");\n  assertEquals(\"CYPHER param=\\\"str\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"s\\\"tr\");\n  assertEquals(\"CYPHER param=\\\"s\\\\\\\"tr\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  Integer arr[]={1,2,3};\n  params.put(\"param\",arr);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<Integer> list=Arrays.asList(1,2,3);\n  params.put(\"param\",list);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  String strArr[]={\"1\",\"2\",\"3\"};\n  params.put(\"param\",strArr);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<String> stringList=Arrays.asList(\"1\",\"2\",\"3\");\n  params.put(\"param\",stringList);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 279,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 111
      },
      "nodeContext" : "assertEquals(\"CYPHER param=true RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "redis.clients.jedis.graph.RedisGraphQueryUtil"
  }, {
    "nodeContext" : "RedisGraphQueryUtil",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 43,
      "startColumnNumber" : 53,
      "endLineNumber" : 43,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 43,
        "startColumnNumber" : 53,
        "endLineNumber" : 43,
        "endColumnNumber" : 110
      },
      "nodeContext" : "RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 43,
        "endColumnNumber" : 111
      },
      "nodeContext" : "assertEquals(\"CYPHER param=false RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 43,
        "endColumnNumber" : 112
      },
      "nodeContext" : "assertEquals(\"CYPHER param=false RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2339,
        "startLineNumber" : 28,
        "startColumnNumber" : 31,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Map<String,Object> params=new HashMap<>();\n  params.put(\"param\",\"\");\n  assertEquals(\"CYPHER param=\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"st\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"st\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",1);\n  assertEquals(\"CYPHER param=1 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",2.3);\n  assertEquals(\"CYPHER param=2.3 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",true);\n  assertEquals(\"CYPHER param=true RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",false);\n  assertEquals(\"CYPHER param=false RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",null);\n  assertEquals(\"CYPHER param=null RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"str\");\n  assertEquals(\"CYPHER param=\\\"str\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"s\\\"tr\");\n  assertEquals(\"CYPHER param=\\\"s\\\\\\\"tr\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  Integer arr[]={1,2,3};\n  params.put(\"param\",arr);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<Integer> list=Arrays.asList(1,2,3);\n  params.put(\"param\",list);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  String strArr[]={\"1\",\"2\",\"3\"};\n  params.put(\"param\",strArr);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<String> stringList=Arrays.asList(\"1\",\"2\",\"3\");\n  params.put(\"param\",stringList);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 273,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2377,
        "startLineNumber" : 27,
        "startColumnNumber" : 2,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testParamsPrep(){\n  Map<String,Object> params=new HashMap<>();\n  params.put(\"param\",\"\");\n  assertEquals(\"CYPHER param=\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"st\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"st\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",1);\n  assertEquals(\"CYPHER param=1 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",2.3);\n  assertEquals(\"CYPHER param=2.3 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",true);\n  assertEquals(\"CYPHER param=true RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",false);\n  assertEquals(\"CYPHER param=false RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",null);\n  assertEquals(\"CYPHER param=null RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"str\");\n  assertEquals(\"CYPHER param=\\\"str\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"s\\\"tr\");\n  assertEquals(\"CYPHER param=\\\"s\\\\\\\"tr\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  Integer arr[]={1,2,3};\n  params.put(\"param\",arr);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<Integer> list=Arrays.asList(1,2,3);\n  params.put(\"param\",list);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  String strArr[]={\"1\",\"2\",\"3\"};\n  params.put(\"param\",strArr);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<String> stringList=Arrays.asList(\"1\",\"2\",\"3\");\n  params.put(\"param\",stringList);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 279,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 43,
        "endColumnNumber" : 112
      },
      "nodeContext" : "assertEquals(\"CYPHER param=false RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "redis.clients.jedis.graph.RedisGraphQueryUtil"
  }, {
    "nodeContext" : "RedisGraphQueryUtil",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 45,
      "startColumnNumber" : 52,
      "endLineNumber" : 45,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 45,
        "startColumnNumber" : 52,
        "endLineNumber" : 45,
        "endColumnNumber" : 109
      },
      "nodeContext" : "RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 110
      },
      "nodeContext" : "assertEquals(\"CYPHER param=null RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 111
      },
      "nodeContext" : "assertEquals(\"CYPHER param=null RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2339,
        "startLineNumber" : 28,
        "startColumnNumber" : 31,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Map<String,Object> params=new HashMap<>();\n  params.put(\"param\",\"\");\n  assertEquals(\"CYPHER param=\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"st\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"st\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",1);\n  assertEquals(\"CYPHER param=1 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",2.3);\n  assertEquals(\"CYPHER param=2.3 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",true);\n  assertEquals(\"CYPHER param=true RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",false);\n  assertEquals(\"CYPHER param=false RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",null);\n  assertEquals(\"CYPHER param=null RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"str\");\n  assertEquals(\"CYPHER param=\\\"str\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"s\\\"tr\");\n  assertEquals(\"CYPHER param=\\\"s\\\\\\\"tr\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  Integer arr[]={1,2,3};\n  params.put(\"param\",arr);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<Integer> list=Arrays.asList(1,2,3);\n  params.put(\"param\",list);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  String strArr[]={\"1\",\"2\",\"3\"};\n  params.put(\"param\",strArr);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<String> stringList=Arrays.asList(\"1\",\"2\",\"3\");\n  params.put(\"param\",stringList);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 273,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2377,
        "startLineNumber" : 27,
        "startColumnNumber" : 2,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testParamsPrep(){\n  Map<String,Object> params=new HashMap<>();\n  params.put(\"param\",\"\");\n  assertEquals(\"CYPHER param=\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"st\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"st\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",1);\n  assertEquals(\"CYPHER param=1 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",2.3);\n  assertEquals(\"CYPHER param=2.3 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",true);\n  assertEquals(\"CYPHER param=true RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",false);\n  assertEquals(\"CYPHER param=false RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",null);\n  assertEquals(\"CYPHER param=null RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"str\");\n  assertEquals(\"CYPHER param=\\\"str\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"s\\\"tr\");\n  assertEquals(\"CYPHER param=\\\"s\\\\\\\"tr\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  Integer arr[]={1,2,3};\n  params.put(\"param\",arr);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<Integer> list=Arrays.asList(1,2,3);\n  params.put(\"param\",list);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  String strArr[]={\"1\",\"2\",\"3\"};\n  params.put(\"param\",strArr);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<String> stringList=Arrays.asList(\"1\",\"2\",\"3\");\n  params.put(\"param\",stringList);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 279,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 111
      },
      "nodeContext" : "assertEquals(\"CYPHER param=null RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "redis.clients.jedis.graph.RedisGraphQueryUtil"
  }, {
    "nodeContext" : "RedisGraphQueryUtil",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 47,
      "startColumnNumber" : 55,
      "endLineNumber" : 47,
      "endColumnNumber" : 74
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 47,
        "startColumnNumber" : 55,
        "endLineNumber" : 47,
        "endColumnNumber" : 112
      },
      "nodeContext" : "RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 113
      },
      "nodeContext" : "assertEquals(\"CYPHER param=\\\"str\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 114
      },
      "nodeContext" : "assertEquals(\"CYPHER param=\\\"str\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2339,
        "startLineNumber" : 28,
        "startColumnNumber" : 31,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Map<String,Object> params=new HashMap<>();\n  params.put(\"param\",\"\");\n  assertEquals(\"CYPHER param=\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"st\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"st\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",1);\n  assertEquals(\"CYPHER param=1 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",2.3);\n  assertEquals(\"CYPHER param=2.3 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",true);\n  assertEquals(\"CYPHER param=true RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",false);\n  assertEquals(\"CYPHER param=false RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",null);\n  assertEquals(\"CYPHER param=null RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"str\");\n  assertEquals(\"CYPHER param=\\\"str\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"s\\\"tr\");\n  assertEquals(\"CYPHER param=\\\"s\\\\\\\"tr\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  Integer arr[]={1,2,3};\n  params.put(\"param\",arr);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<Integer> list=Arrays.asList(1,2,3);\n  params.put(\"param\",list);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  String strArr[]={\"1\",\"2\",\"3\"};\n  params.put(\"param\",strArr);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<String> stringList=Arrays.asList(\"1\",\"2\",\"3\");\n  params.put(\"param\",stringList);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 273,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2377,
        "startLineNumber" : 27,
        "startColumnNumber" : 2,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testParamsPrep(){\n  Map<String,Object> params=new HashMap<>();\n  params.put(\"param\",\"\");\n  assertEquals(\"CYPHER param=\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"st\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"st\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",1);\n  assertEquals(\"CYPHER param=1 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",2.3);\n  assertEquals(\"CYPHER param=2.3 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",true);\n  assertEquals(\"CYPHER param=true RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",false);\n  assertEquals(\"CYPHER param=false RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",null);\n  assertEquals(\"CYPHER param=null RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"str\");\n  assertEquals(\"CYPHER param=\\\"str\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"s\\\"tr\");\n  assertEquals(\"CYPHER param=\\\"s\\\\\\\"tr\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  Integer arr[]={1,2,3};\n  params.put(\"param\",arr);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<Integer> list=Arrays.asList(1,2,3);\n  params.put(\"param\",list);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  String strArr[]={\"1\",\"2\",\"3\"};\n  params.put(\"param\",strArr);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<String> stringList=Arrays.asList(\"1\",\"2\",\"3\");\n  params.put(\"param\",stringList);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 279,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 114
      },
      "nodeContext" : "assertEquals(\"CYPHER param=\\\"str\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "redis.clients.jedis.graph.RedisGraphQueryUtil"
  }, {
    "nodeContext" : "RedisGraphQueryUtil",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 49,
      "startColumnNumber" : 59,
      "endLineNumber" : 49,
      "endColumnNumber" : 78
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 49,
        "startColumnNumber" : 59,
        "endLineNumber" : 49,
        "endColumnNumber" : 116
      },
      "nodeContext" : "RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 117
      },
      "nodeContext" : "assertEquals(\"CYPHER param=\\\"s\\\\\\\"tr\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 118
      },
      "nodeContext" : "assertEquals(\"CYPHER param=\\\"s\\\\\\\"tr\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2339,
        "startLineNumber" : 28,
        "startColumnNumber" : 31,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Map<String,Object> params=new HashMap<>();\n  params.put(\"param\",\"\");\n  assertEquals(\"CYPHER param=\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"st\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"st\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",1);\n  assertEquals(\"CYPHER param=1 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",2.3);\n  assertEquals(\"CYPHER param=2.3 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",true);\n  assertEquals(\"CYPHER param=true RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",false);\n  assertEquals(\"CYPHER param=false RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",null);\n  assertEquals(\"CYPHER param=null RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"str\");\n  assertEquals(\"CYPHER param=\\\"str\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"s\\\"tr\");\n  assertEquals(\"CYPHER param=\\\"s\\\\\\\"tr\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  Integer arr[]={1,2,3};\n  params.put(\"param\",arr);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<Integer> list=Arrays.asList(1,2,3);\n  params.put(\"param\",list);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  String strArr[]={\"1\",\"2\",\"3\"};\n  params.put(\"param\",strArr);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<String> stringList=Arrays.asList(\"1\",\"2\",\"3\");\n  params.put(\"param\",stringList);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 273,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2377,
        "startLineNumber" : 27,
        "startColumnNumber" : 2,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testParamsPrep(){\n  Map<String,Object> params=new HashMap<>();\n  params.put(\"param\",\"\");\n  assertEquals(\"CYPHER param=\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"st\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"st\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",1);\n  assertEquals(\"CYPHER param=1 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",2.3);\n  assertEquals(\"CYPHER param=2.3 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",true);\n  assertEquals(\"CYPHER param=true RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",false);\n  assertEquals(\"CYPHER param=false RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",null);\n  assertEquals(\"CYPHER param=null RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"str\");\n  assertEquals(\"CYPHER param=\\\"str\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"s\\\"tr\");\n  assertEquals(\"CYPHER param=\\\"s\\\\\\\"tr\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  Integer arr[]={1,2,3};\n  params.put(\"param\",arr);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<Integer> list=Arrays.asList(1,2,3);\n  params.put(\"param\",list);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  String strArr[]={\"1\",\"2\",\"3\"};\n  params.put(\"param\",strArr);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<String> stringList=Arrays.asList(\"1\",\"2\",\"3\");\n  params.put(\"param\",stringList);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 279,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 118
      },
      "nodeContext" : "assertEquals(\"CYPHER param=\\\"s\\\\\\\"tr\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "redis.clients.jedis.graph.RedisGraphQueryUtil"
  }, {
    "nodeContext" : "RedisGraphQueryUtil",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 52,
      "startColumnNumber" : 57,
      "endLineNumber" : 52,
      "endColumnNumber" : 76
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 52,
        "startColumnNumber" : 57,
        "endLineNumber" : 52,
        "endColumnNumber" : 114
      },
      "nodeContext" : "RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 115
      },
      "nodeContext" : "assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 116
      },
      "nodeContext" : "assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2339,
        "startLineNumber" : 28,
        "startColumnNumber" : 31,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Map<String,Object> params=new HashMap<>();\n  params.put(\"param\",\"\");\n  assertEquals(\"CYPHER param=\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"st\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"st\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",1);\n  assertEquals(\"CYPHER param=1 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",2.3);\n  assertEquals(\"CYPHER param=2.3 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",true);\n  assertEquals(\"CYPHER param=true RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",false);\n  assertEquals(\"CYPHER param=false RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",null);\n  assertEquals(\"CYPHER param=null RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"str\");\n  assertEquals(\"CYPHER param=\\\"str\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"s\\\"tr\");\n  assertEquals(\"CYPHER param=\\\"s\\\\\\\"tr\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  Integer arr[]={1,2,3};\n  params.put(\"param\",arr);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<Integer> list=Arrays.asList(1,2,3);\n  params.put(\"param\",list);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  String strArr[]={\"1\",\"2\",\"3\"};\n  params.put(\"param\",strArr);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<String> stringList=Arrays.asList(\"1\",\"2\",\"3\");\n  params.put(\"param\",stringList);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 273,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2377,
        "startLineNumber" : 27,
        "startColumnNumber" : 2,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testParamsPrep(){\n  Map<String,Object> params=new HashMap<>();\n  params.put(\"param\",\"\");\n  assertEquals(\"CYPHER param=\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"st\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"st\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",1);\n  assertEquals(\"CYPHER param=1 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",2.3);\n  assertEquals(\"CYPHER param=2.3 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",true);\n  assertEquals(\"CYPHER param=true RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",false);\n  assertEquals(\"CYPHER param=false RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",null);\n  assertEquals(\"CYPHER param=null RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"str\");\n  assertEquals(\"CYPHER param=\\\"str\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"s\\\"tr\");\n  assertEquals(\"CYPHER param=\\\"s\\\\\\\"tr\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  Integer arr[]={1,2,3};\n  params.put(\"param\",arr);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<Integer> list=Arrays.asList(1,2,3);\n  params.put(\"param\",list);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  String strArr[]={\"1\",\"2\",\"3\"};\n  params.put(\"param\",strArr);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<String> stringList=Arrays.asList(\"1\",\"2\",\"3\");\n  params.put(\"param\",stringList);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 279,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 116
      },
      "nodeContext" : "assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "redis.clients.jedis.graph.RedisGraphQueryUtil"
  }, {
    "nodeContext" : "RedisGraphQueryUtil",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 55,
      "startColumnNumber" : 57,
      "endLineNumber" : 55,
      "endColumnNumber" : 76
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 55,
        "startColumnNumber" : 57,
        "endLineNumber" : 55,
        "endColumnNumber" : 114
      },
      "nodeContext" : "RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 115
      },
      "nodeContext" : "assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 116
      },
      "nodeContext" : "assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2339,
        "startLineNumber" : 28,
        "startColumnNumber" : 31,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Map<String,Object> params=new HashMap<>();\n  params.put(\"param\",\"\");\n  assertEquals(\"CYPHER param=\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"st\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"st\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",1);\n  assertEquals(\"CYPHER param=1 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",2.3);\n  assertEquals(\"CYPHER param=2.3 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",true);\n  assertEquals(\"CYPHER param=true RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",false);\n  assertEquals(\"CYPHER param=false RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",null);\n  assertEquals(\"CYPHER param=null RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"str\");\n  assertEquals(\"CYPHER param=\\\"str\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"s\\\"tr\");\n  assertEquals(\"CYPHER param=\\\"s\\\\\\\"tr\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  Integer arr[]={1,2,3};\n  params.put(\"param\",arr);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<Integer> list=Arrays.asList(1,2,3);\n  params.put(\"param\",list);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  String strArr[]={\"1\",\"2\",\"3\"};\n  params.put(\"param\",strArr);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<String> stringList=Arrays.asList(\"1\",\"2\",\"3\");\n  params.put(\"param\",stringList);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 273,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2377,
        "startLineNumber" : 27,
        "startColumnNumber" : 2,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testParamsPrep(){\n  Map<String,Object> params=new HashMap<>();\n  params.put(\"param\",\"\");\n  assertEquals(\"CYPHER param=\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"st\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"st\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",1);\n  assertEquals(\"CYPHER param=1 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",2.3);\n  assertEquals(\"CYPHER param=2.3 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",true);\n  assertEquals(\"CYPHER param=true RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",false);\n  assertEquals(\"CYPHER param=false RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",null);\n  assertEquals(\"CYPHER param=null RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"str\");\n  assertEquals(\"CYPHER param=\\\"str\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"s\\\"tr\");\n  assertEquals(\"CYPHER param=\\\"s\\\\\\\"tr\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  Integer arr[]={1,2,3};\n  params.put(\"param\",arr);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<Integer> list=Arrays.asList(1,2,3);\n  params.put(\"param\",list);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  String strArr[]={\"1\",\"2\",\"3\"};\n  params.put(\"param\",strArr);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<String> stringList=Arrays.asList(\"1\",\"2\",\"3\");\n  params.put(\"param\",stringList);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 279,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 116
      },
      "nodeContext" : "assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "redis.clients.jedis.graph.RedisGraphQueryUtil"
  }, {
    "nodeContext" : "RedisGraphQueryUtil",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 58,
      "startColumnNumber" : 69,
      "endLineNumber" : 58,
      "endColumnNumber" : 88
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 58,
        "startColumnNumber" : 69,
        "endLineNumber" : 58,
        "endColumnNumber" : 126
      },
      "nodeContext" : "RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 127
      },
      "nodeContext" : "assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 128
      },
      "nodeContext" : "assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2339,
        "startLineNumber" : 28,
        "startColumnNumber" : 31,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Map<String,Object> params=new HashMap<>();\n  params.put(\"param\",\"\");\n  assertEquals(\"CYPHER param=\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"st\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"st\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",1);\n  assertEquals(\"CYPHER param=1 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",2.3);\n  assertEquals(\"CYPHER param=2.3 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",true);\n  assertEquals(\"CYPHER param=true RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",false);\n  assertEquals(\"CYPHER param=false RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",null);\n  assertEquals(\"CYPHER param=null RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"str\");\n  assertEquals(\"CYPHER param=\\\"str\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"s\\\"tr\");\n  assertEquals(\"CYPHER param=\\\"s\\\\\\\"tr\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  Integer arr[]={1,2,3};\n  params.put(\"param\",arr);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<Integer> list=Arrays.asList(1,2,3);\n  params.put(\"param\",list);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  String strArr[]={\"1\",\"2\",\"3\"};\n  params.put(\"param\",strArr);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<String> stringList=Arrays.asList(\"1\",\"2\",\"3\");\n  params.put(\"param\",stringList);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 273,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2377,
        "startLineNumber" : 27,
        "startColumnNumber" : 2,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testParamsPrep(){\n  Map<String,Object> params=new HashMap<>();\n  params.put(\"param\",\"\");\n  assertEquals(\"CYPHER param=\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"st\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"st\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",1);\n  assertEquals(\"CYPHER param=1 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",2.3);\n  assertEquals(\"CYPHER param=2.3 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",true);\n  assertEquals(\"CYPHER param=true RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",false);\n  assertEquals(\"CYPHER param=false RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",null);\n  assertEquals(\"CYPHER param=null RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"str\");\n  assertEquals(\"CYPHER param=\\\"str\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"s\\\"tr\");\n  assertEquals(\"CYPHER param=\\\"s\\\\\\\"tr\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  Integer arr[]={1,2,3};\n  params.put(\"param\",arr);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<Integer> list=Arrays.asList(1,2,3);\n  params.put(\"param\",list);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  String strArr[]={\"1\",\"2\",\"3\"};\n  params.put(\"param\",strArr);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<String> stringList=Arrays.asList(\"1\",\"2\",\"3\");\n  params.put(\"param\",stringList);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 279,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 128
      },
      "nodeContext" : "assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "redis.clients.jedis.graph.RedisGraphQueryUtil"
  }, {
    "nodeContext" : "RedisGraphQueryUtil",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 61,
      "startColumnNumber" : 69,
      "endLineNumber" : 61,
      "endColumnNumber" : 88
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 61,
        "startColumnNumber" : 69,
        "endLineNumber" : 61,
        "endColumnNumber" : 126
      },
      "nodeContext" : "RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 127
      },
      "nodeContext" : "assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 128
      },
      "nodeContext" : "assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2339,
        "startLineNumber" : 28,
        "startColumnNumber" : 31,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Map<String,Object> params=new HashMap<>();\n  params.put(\"param\",\"\");\n  assertEquals(\"CYPHER param=\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"st\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"st\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",1);\n  assertEquals(\"CYPHER param=1 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",2.3);\n  assertEquals(\"CYPHER param=2.3 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",true);\n  assertEquals(\"CYPHER param=true RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",false);\n  assertEquals(\"CYPHER param=false RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",null);\n  assertEquals(\"CYPHER param=null RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"str\");\n  assertEquals(\"CYPHER param=\\\"str\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"s\\\"tr\");\n  assertEquals(\"CYPHER param=\\\"s\\\\\\\"tr\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  Integer arr[]={1,2,3};\n  params.put(\"param\",arr);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<Integer> list=Arrays.asList(1,2,3);\n  params.put(\"param\",list);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  String strArr[]={\"1\",\"2\",\"3\"};\n  params.put(\"param\",strArr);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<String> stringList=Arrays.asList(\"1\",\"2\",\"3\");\n  params.put(\"param\",stringList);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 273,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2377,
        "startLineNumber" : 27,
        "startColumnNumber" : 2,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testParamsPrep(){\n  Map<String,Object> params=new HashMap<>();\n  params.put(\"param\",\"\");\n  assertEquals(\"CYPHER param=\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"\\\"st\");\n  assertEquals(\"CYPHER param=\\\"\\\\\\\"st\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",1);\n  assertEquals(\"CYPHER param=1 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",2.3);\n  assertEquals(\"CYPHER param=2.3 RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",true);\n  assertEquals(\"CYPHER param=true RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",false);\n  assertEquals(\"CYPHER param=false RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",null);\n  assertEquals(\"CYPHER param=null RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"str\");\n  assertEquals(\"CYPHER param=\\\"str\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  params.put(\"param\",\"s\\\"tr\");\n  assertEquals(\"CYPHER param=\\\"s\\\\\\\"tr\\\" RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  Integer arr[]={1,2,3};\n  params.put(\"param\",arr);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<Integer> list=Arrays.asList(1,2,3);\n  params.put(\"param\",list);\n  assertEquals(\"CYPHER param=[1, 2, 3] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  String strArr[]={\"1\",\"2\",\"3\"};\n  params.put(\"param\",strArr);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n  List<String> stringList=Arrays.asList(\"1\",\"2\",\"3\");\n  params.put(\"param\",stringList);\n  assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 279,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 128
      },
      "nodeContext" : "assertEquals(\"CYPHER param=[\\\"1\\\", \\\"2\\\", \\\"3\\\"] RETURN $param\",RedisGraphQueryUtil.prepareQuery(\"RETURN $param\",params));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "redis.clients.jedis.graph.RedisGraphQueryUtil"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 31,
    "startColumnNumber" : 52,
    "endLineNumber" : 31,
    "endColumnNumber" : 71
  }, {
    "charLength" : 19,
    "startLineNumber" : 33,
    "startColumnNumber" : 56,
    "endLineNumber" : 33,
    "endColumnNumber" : 75
  }, {
    "charLength" : 19,
    "startLineNumber" : 35,
    "startColumnNumber" : 58,
    "endLineNumber" : 35,
    "endColumnNumber" : 77
  }, {
    "charLength" : 19,
    "startLineNumber" : 37,
    "startColumnNumber" : 49,
    "endLineNumber" : 37,
    "endColumnNumber" : 68
  }, {
    "charLength" : 19,
    "startLineNumber" : 39,
    "startColumnNumber" : 51,
    "endLineNumber" : 39,
    "endColumnNumber" : 70
  }, {
    "charLength" : 19,
    "startLineNumber" : 41,
    "startColumnNumber" : 52,
    "endLineNumber" : 41,
    "endColumnNumber" : 71
  }, {
    "charLength" : 19,
    "startLineNumber" : 43,
    "startColumnNumber" : 53,
    "endLineNumber" : 43,
    "endColumnNumber" : 72
  }, {
    "charLength" : 19,
    "startLineNumber" : 45,
    "startColumnNumber" : 52,
    "endLineNumber" : 45,
    "endColumnNumber" : 71
  }, {
    "charLength" : 19,
    "startLineNumber" : 47,
    "startColumnNumber" : 55,
    "endLineNumber" : 47,
    "endColumnNumber" : 74
  }, {
    "charLength" : 19,
    "startLineNumber" : 49,
    "startColumnNumber" : 59,
    "endLineNumber" : 49,
    "endColumnNumber" : 78
  }, {
    "charLength" : 19,
    "startLineNumber" : 52,
    "startColumnNumber" : 57,
    "endLineNumber" : 52,
    "endColumnNumber" : 76
  }, {
    "charLength" : 19,
    "startLineNumber" : 55,
    "startColumnNumber" : 57,
    "endLineNumber" : 55,
    "endColumnNumber" : 76
  }, {
    "charLength" : 19,
    "startLineNumber" : 58,
    "startColumnNumber" : 69,
    "endLineNumber" : 58,
    "endColumnNumber" : 88
  }, {
    "charLength" : 19,
    "startLineNumber" : 61,
    "startColumnNumber" : 69,
    "endLineNumber" : 61,
    "endColumnNumber" : 88
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 12,
    "layout" : 3
  } ]
}