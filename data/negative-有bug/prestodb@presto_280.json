{
  "id" : 280,
  "expression" : "children.stream().map(SubPlan::getFragment).map(PlanFragment::getId)",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-main/src/main/java/com/facebook/presto/sql/planner/SubPlan.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "children.stream().map(SubPlan::getFragment).map(PlanFragment::getId)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 102,
      "startLineNumber" : 76,
      "startColumnNumber" : 47,
      "endLineNumber" : 78,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 13,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 150,
        "startLineNumber" : 76,
        "startColumnNumber" : 47,
        "endLineNumber" : 79,
        "endColumnNumber" : 47
      },
      "nodeContext" : "children.stream().map(SubPlan::getFragment).map(PlanFragment::getId).collect(toImmutableMultiset())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 76,
        "startColumnNumber" : 33,
        "endLineNumber" : 79,
        "endColumnNumber" : 47
      },
      "nodeContext" : "childrenIds=children.stream().map(SubPlan::getFragment).map(PlanFragment::getId).collect(toImmutableMultiset())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 190,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 48
      },
      "nodeContext" : "Multiset<PlanFragmentId> childrenIds=children.stream().map(SubPlan::getFragment).map(PlanFragment::getId).collect(toImmutableMultiset());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 697,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 86,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Multiset<PlanFragmentId> remoteSourceIds=fragment.getRemoteSourceNodes().stream().map(RemoteSourceNode::getSourceFragmentIds).flatMap(List::stream).collect(toImmutableMultiset());\n  Multiset<PlanFragmentId> childrenIds=children.stream().map(SubPlan::getFragment).map(PlanFragment::getId).collect(toImmutableMultiset());\n  checkState(childrenIds.containsAll(remoteSourceIds),\"child fragments must include all remote source fragments (%s vs %s)\",remoteSourceIds,childrenIds);\n  for (  SubPlan child : children) {\n    child.sanityCheck();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 727,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 86,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void sanityCheck(){\n  Multiset<PlanFragmentId> remoteSourceIds=fragment.getRemoteSourceNodes().stream().map(RemoteSourceNode::getSourceFragmentIds).flatMap(List::stream).collect(toImmutableMultiset());\n  Multiset<PlanFragmentId> childrenIds=children.stream().map(SubPlan::getFragment).map(PlanFragment::getId).collect(toImmutableMultiset());\n  checkState(childrenIds.containsAll(remoteSourceIds),\"child fragments must include all remote source fragments (%s vs %s)\",remoteSourceIds,childrenIds);\n  for (  SubPlan child : children) {\n    child.sanityCheck();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 78,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 150,
        "startLineNumber" : 76,
        "startColumnNumber" : 47,
        "endLineNumber" : 79,
        "endColumnNumber" : 47
      },
      "nodeContext" : "children.stream().map(SubPlan::getFragment).map(PlanFragment::getId).collect(toImmutableMultiset())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 5
    },
    "tokenLength" : 8,
    "type" : "java.util.stream.Stream<com.facebook.presto.sql.planner.plan.PlanFragmentId>"
  } ],
  "positionList" : [ {
    "charLength" : 102,
    "startLineNumber" : 76,
    "startColumnNumber" : 47,
    "endLineNumber" : 78,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}