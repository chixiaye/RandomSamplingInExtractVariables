{
  "id" : 48,
  "expression" : "new Date()",
  "projectName" : "apache@zookeeper",
  "commitID" : "c6639c9842973a7954c8baa412d6825cb833d51f",
  "filePath" : "/src/java/test/org/apache/zookeeper/test/ClientTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new Date()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 669,
      "startColumnNumber" : 17,
      "endLineNumber" : 669,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 669,
        "startColumnNumber" : 17,
        "endLineNumber" : 670,
        "endColumnNumber" : 54
      },
      "nodeContext" : "new Date() + \" Total time \" + (System.currentTimeMillis() - start)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 669,
        "startColumnNumber" : 8,
        "endLineNumber" : 670,
        "endColumnNumber" : 55
      },
      "nodeContext" : "LOG.info(new Date() + \" Total time \" + (System.currentTimeMillis() - start))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 669,
        "startColumnNumber" : 8,
        "endLineNumber" : 670,
        "endColumnNumber" : 56
      },
      "nodeContext" : "LOG.info(new Date() + \" Total time \" + (System.currentTimeMillis() - start));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1896,
        "startLineNumber" : 638,
        "startColumnNumber" : 4,
        "endLineNumber" : 690,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  LOG.info(\"Starting check for completed hammers\");\n  int workingCount=threads.length;\n  for (int i=0; i < 120; i++) {\n    Thread.sleep(10000);\n    for (    HammerThread h : threads) {\n      if (!h.isAlive() || h.current == h.count) {\n        workingCount--;\n      }\n    }\n    if (workingCount == 0) {\n      break;\n    }\n    workingCount=threads.length;\n  }\n  if (workingCount > 0) {\n    for (    HammerThread h : threads) {\n      LOG.warn(h.getName() + \" never finished creation, current:\" + h.current);\n    }\n  }\n else {\n    LOG.info(\"Hammer threads completed creation operations\");\n  }\n  for (  HammerThread h : threads) {\n    final int safetyFactor=3;\n    verifyThreadTerminated(h,threads.length * childCount * HAMMERTHREAD_LATENCY* safetyFactor);\n  }\n  LOG.info(new Date() + \" Total time \" + (System.currentTimeMillis() - start));\n  ZooKeeper zk=createClient();\n  try {\n    LOG.info(\"******************* Connected to ZooKeeper\" + new Date());\n    for (int i=0; i < threads.length; i++) {\n      LOG.info(\"Doing thread: \" + i + \" \"+ new Date());\n      List<String> children=zk.getChildren(\"/test-\" + i,false);\n      assertEquals(childCount,children.size());\n    }\n    for (int i=0; i < threads.length; i++) {\n      List<String> children=zk.getChildren(\"/test-\" + i,false);\n      assertEquals(childCount,children.size());\n    }\n  }\n  finally {\n    zk.close();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 241,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2043,
        "startLineNumber" : 636,
        "startColumnNumber" : 4,
        "endLineNumber" : 690,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void verifyHammer(long start,HammerThread[] threads,int childCount) throws IOException, InterruptedException, KeeperException {\n  LOG.info(\"Starting check for completed hammers\");\n  int workingCount=threads.length;\n  for (int i=0; i < 120; i++) {\n    Thread.sleep(10000);\n    for (    HammerThread h : threads) {\n      if (!h.isAlive() || h.current == h.count) {\n        workingCount--;\n      }\n    }\n    if (workingCount == 0) {\n      break;\n    }\n    workingCount=threads.length;\n  }\n  if (workingCount > 0) {\n    for (    HammerThread h : threads) {\n      LOG.warn(h.getName() + \" never finished creation, current:\" + h.current);\n    }\n  }\n else {\n    LOG.info(\"Hammer threads completed creation operations\");\n  }\n  for (  HammerThread h : threads) {\n    final int safetyFactor=3;\n    verifyThreadTerminated(h,threads.length * childCount * HAMMERTHREAD_LATENCY* safetyFactor);\n  }\n  LOG.info(new Date() + \" Total time \" + (System.currentTimeMillis() - start));\n  ZooKeeper zk=createClient();\n  try {\n    LOG.info(\"******************* Connected to ZooKeeper\" + new Date());\n    for (int i=0; i < threads.length; i++) {\n      LOG.info(\"Doing thread: \" + i + \" \"+ new Date());\n      List<String> children=zk.getChildren(\"/test-\" + i,false);\n      assertEquals(childCount,children.size());\n    }\n    for (int i=0; i < threads.length; i++) {\n      List<String> children=zk.getChildren(\"/test-\" + i,false);\n      assertEquals(childCount,children.size());\n    }\n  }\n  finally {\n    zk.close();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 263,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 669,
        "startColumnNumber" : 17,
        "endLineNumber" : 670,
        "endColumnNumber" : 54
      },
      "nodeContext" : "new Date() + \" Total time \" + (System.currentTimeMillis() - start)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.Date"
  }, {
    "nodeContext" : "new Date()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 675,
      "startColumnNumber" : 68,
      "endLineNumber" : 675,
      "endColumnNumber" : 78
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 675,
        "startColumnNumber" : 21,
        "endLineNumber" : 675,
        "endColumnNumber" : 78
      },
      "nodeContext" : "\"******************* Connected to ZooKeeper\" + new Date()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 675,
        "startColumnNumber" : 12,
        "endLineNumber" : 675,
        "endColumnNumber" : 79
      },
      "nodeContext" : "LOG.info(\"******************* Connected to ZooKeeper\" + new Date())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 675,
        "startColumnNumber" : 12,
        "endLineNumber" : 675,
        "endColumnNumber" : 80
      },
      "nodeContext" : "LOG.info(\"******************* Connected to ZooKeeper\" + new Date());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 610,
        "startLineNumber" : 673,
        "startColumnNumber" : 12,
        "endLineNumber" : 687,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  LOG.info(\"******************* Connected to ZooKeeper\" + new Date());\n  for (int i=0; i < threads.length; i++) {\n    LOG.info(\"Doing thread: \" + i + \" \"+ new Date());\n    List<String> children=zk.getChildren(\"/test-\" + i,false);\n    assertEquals(childCount,children.size());\n  }\n  for (int i=0; i < threads.length; i++) {\n    List<String> children=zk.getChildren(\"/test-\" + i,false);\n    assertEquals(childCount,children.size());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 658,
        "startLineNumber" : 673,
        "startColumnNumber" : 8,
        "endLineNumber" : 689,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  LOG.info(\"******************* Connected to ZooKeeper\" + new Date());\n  for (int i=0; i < threads.length; i++) {\n    LOG.info(\"Doing thread: \" + i + \" \"+ new Date());\n    List<String> children=zk.getChildren(\"/test-\" + i,false);\n    assertEquals(childCount,children.size());\n  }\n  for (int i=0; i < threads.length; i++) {\n    List<String> children=zk.getChildren(\"/test-\" + i,false);\n    assertEquals(childCount,children.size());\n  }\n}\n  finally {\n  zk.close();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 99,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1896,
        "startLineNumber" : 638,
        "startColumnNumber" : 4,
        "endLineNumber" : 690,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  LOG.info(\"Starting check for completed hammers\");\n  int workingCount=threads.length;\n  for (int i=0; i < 120; i++) {\n    Thread.sleep(10000);\n    for (    HammerThread h : threads) {\n      if (!h.isAlive() || h.current == h.count) {\n        workingCount--;\n      }\n    }\n    if (workingCount == 0) {\n      break;\n    }\n    workingCount=threads.length;\n  }\n  if (workingCount > 0) {\n    for (    HammerThread h : threads) {\n      LOG.warn(h.getName() + \" never finished creation, current:\" + h.current);\n    }\n  }\n else {\n    LOG.info(\"Hammer threads completed creation operations\");\n  }\n  for (  HammerThread h : threads) {\n    final int safetyFactor=3;\n    verifyThreadTerminated(h,threads.length * childCount * HAMMERTHREAD_LATENCY* safetyFactor);\n  }\n  LOG.info(new Date() + \" Total time \" + (System.currentTimeMillis() - start));\n  ZooKeeper zk=createClient();\n  try {\n    LOG.info(\"******************* Connected to ZooKeeper\" + new Date());\n    for (int i=0; i < threads.length; i++) {\n      LOG.info(\"Doing thread: \" + i + \" \"+ new Date());\n      List<String> children=zk.getChildren(\"/test-\" + i,false);\n      assertEquals(childCount,children.size());\n    }\n    for (int i=0; i < threads.length; i++) {\n      List<String> children=zk.getChildren(\"/test-\" + i,false);\n      assertEquals(childCount,children.size());\n    }\n  }\n  finally {\n    zk.close();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 241,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2043,
        "startLineNumber" : 636,
        "startColumnNumber" : 4,
        "endLineNumber" : 690,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void verifyHammer(long start,HammerThread[] threads,int childCount) throws IOException, InterruptedException, KeeperException {\n  LOG.info(\"Starting check for completed hammers\");\n  int workingCount=threads.length;\n  for (int i=0; i < 120; i++) {\n    Thread.sleep(10000);\n    for (    HammerThread h : threads) {\n      if (!h.isAlive() || h.current == h.count) {\n        workingCount--;\n      }\n    }\n    if (workingCount == 0) {\n      break;\n    }\n    workingCount=threads.length;\n  }\n  if (workingCount > 0) {\n    for (    HammerThread h : threads) {\n      LOG.warn(h.getName() + \" never finished creation, current:\" + h.current);\n    }\n  }\n else {\n    LOG.info(\"Hammer threads completed creation operations\");\n  }\n  for (  HammerThread h : threads) {\n    final int safetyFactor=3;\n    verifyThreadTerminated(h,threads.length * childCount * HAMMERTHREAD_LATENCY* safetyFactor);\n  }\n  LOG.info(new Date() + \" Total time \" + (System.currentTimeMillis() - start));\n  ZooKeeper zk=createClient();\n  try {\n    LOG.info(\"******************* Connected to ZooKeeper\" + new Date());\n    for (int i=0; i < threads.length; i++) {\n      LOG.info(\"Doing thread: \" + i + \" \"+ new Date());\n      List<String> children=zk.getChildren(\"/test-\" + i,false);\n      assertEquals(childCount,children.size());\n    }\n    for (int i=0; i < threads.length; i++) {\n      List<String> children=zk.getChildren(\"/test-\" + i,false);\n      assertEquals(childCount,children.size());\n    }\n  }\n  finally {\n    zk.close();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 263,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 675,
        "startColumnNumber" : 12,
        "endLineNumber" : 675,
        "endColumnNumber" : 80
      },
      "nodeContext" : "LOG.info(\"******************* Connected to ZooKeeper\" + new Date());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.Date"
  }, {
    "nodeContext" : "new Date()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 677,
      "startColumnNumber" : 54,
      "endLineNumber" : 677,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 677,
        "startColumnNumber" : 25,
        "endLineNumber" : 677,
        "endColumnNumber" : 64
      },
      "nodeContext" : "\"Doing thread: \" + i + \" \"+ new Date()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 677,
        "startColumnNumber" : 16,
        "endLineNumber" : 677,
        "endColumnNumber" : 65
      },
      "nodeContext" : "LOG.info(\"Doing thread: \" + i + \" \"+ new Date())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 677,
        "startColumnNumber" : 16,
        "endLineNumber" : 677,
        "endColumnNumber" : 66
      },
      "nodeContext" : "LOG.info(\"Doing thread: \" + i + \" \"+ new Date());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 238,
        "startLineNumber" : 676,
        "startColumnNumber" : 53,
        "endLineNumber" : 681,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  LOG.info(\"Doing thread: \" + i + \" \"+ new Date());\n  List<String> children=zk.getChildren(\"/test-\" + i,false);\n  assertEquals(childCount,children.size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 279,
        "startLineNumber" : 676,
        "startColumnNumber" : 12,
        "endLineNumber" : 681,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < threads.length; i++) {\n  LOG.info(\"Doing thread: \" + i + \" \"+ new Date());\n  List<String> children=zk.getChildren(\"/test-\" + i,false);\n  assertEquals(childCount,children.size());\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 47,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 610,
        "startLineNumber" : 673,
        "startColumnNumber" : 12,
        "endLineNumber" : 687,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  LOG.info(\"******************* Connected to ZooKeeper\" + new Date());\n  for (int i=0; i < threads.length; i++) {\n    LOG.info(\"Doing thread: \" + i + \" \"+ new Date());\n    List<String> children=zk.getChildren(\"/test-\" + i,false);\n    assertEquals(childCount,children.size());\n  }\n  for (int i=0; i < threads.length; i++) {\n    List<String> children=zk.getChildren(\"/test-\" + i,false);\n    assertEquals(childCount,children.size());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 658,
        "startLineNumber" : 673,
        "startColumnNumber" : 8,
        "endLineNumber" : 689,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  LOG.info(\"******************* Connected to ZooKeeper\" + new Date());\n  for (int i=0; i < threads.length; i++) {\n    LOG.info(\"Doing thread: \" + i + \" \"+ new Date());\n    List<String> children=zk.getChildren(\"/test-\" + i,false);\n    assertEquals(childCount,children.size());\n  }\n  for (int i=0; i < threads.length; i++) {\n    List<String> children=zk.getChildren(\"/test-\" + i,false);\n    assertEquals(childCount,children.size());\n  }\n}\n  finally {\n  zk.close();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 99,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1896,
        "startLineNumber" : 638,
        "startColumnNumber" : 4,
        "endLineNumber" : 690,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  LOG.info(\"Starting check for completed hammers\");\n  int workingCount=threads.length;\n  for (int i=0; i < 120; i++) {\n    Thread.sleep(10000);\n    for (    HammerThread h : threads) {\n      if (!h.isAlive() || h.current == h.count) {\n        workingCount--;\n      }\n    }\n    if (workingCount == 0) {\n      break;\n    }\n    workingCount=threads.length;\n  }\n  if (workingCount > 0) {\n    for (    HammerThread h : threads) {\n      LOG.warn(h.getName() + \" never finished creation, current:\" + h.current);\n    }\n  }\n else {\n    LOG.info(\"Hammer threads completed creation operations\");\n  }\n  for (  HammerThread h : threads) {\n    final int safetyFactor=3;\n    verifyThreadTerminated(h,threads.length * childCount * HAMMERTHREAD_LATENCY* safetyFactor);\n  }\n  LOG.info(new Date() + \" Total time \" + (System.currentTimeMillis() - start));\n  ZooKeeper zk=createClient();\n  try {\n    LOG.info(\"******************* Connected to ZooKeeper\" + new Date());\n    for (int i=0; i < threads.length; i++) {\n      LOG.info(\"Doing thread: \" + i + \" \"+ new Date());\n      List<String> children=zk.getChildren(\"/test-\" + i,false);\n      assertEquals(childCount,children.size());\n    }\n    for (int i=0; i < threads.length; i++) {\n      List<String> children=zk.getChildren(\"/test-\" + i,false);\n      assertEquals(childCount,children.size());\n    }\n  }\n  finally {\n    zk.close();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 241,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2043,
        "startLineNumber" : 636,
        "startColumnNumber" : 4,
        "endLineNumber" : 690,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void verifyHammer(long start,HammerThread[] threads,int childCount) throws IOException, InterruptedException, KeeperException {\n  LOG.info(\"Starting check for completed hammers\");\n  int workingCount=threads.length;\n  for (int i=0; i < 120; i++) {\n    Thread.sleep(10000);\n    for (    HammerThread h : threads) {\n      if (!h.isAlive() || h.current == h.count) {\n        workingCount--;\n      }\n    }\n    if (workingCount == 0) {\n      break;\n    }\n    workingCount=threads.length;\n  }\n  if (workingCount > 0) {\n    for (    HammerThread h : threads) {\n      LOG.warn(h.getName() + \" never finished creation, current:\" + h.current);\n    }\n  }\n else {\n    LOG.info(\"Hammer threads completed creation operations\");\n  }\n  for (  HammerThread h : threads) {\n    final int safetyFactor=3;\n    verifyThreadTerminated(h,threads.length * childCount * HAMMERTHREAD_LATENCY* safetyFactor);\n  }\n  LOG.info(new Date() + \" Total time \" + (System.currentTimeMillis() - start));\n  ZooKeeper zk=createClient();\n  try {\n    LOG.info(\"******************* Connected to ZooKeeper\" + new Date());\n    for (int i=0; i < threads.length; i++) {\n      LOG.info(\"Doing thread: \" + i + \" \"+ new Date());\n      List<String> children=zk.getChildren(\"/test-\" + i,false);\n      assertEquals(childCount,children.size());\n    }\n    for (int i=0; i < threads.length; i++) {\n      List<String> children=zk.getChildren(\"/test-\" + i,false);\n      assertEquals(childCount,children.size());\n    }\n  }\n  finally {\n    zk.close();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 263,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 677,
        "startColumnNumber" : 16,
        "endLineNumber" : 677,
        "endColumnNumber" : 66
      },
      "nodeContext" : "LOG.info(\"Doing thread: \" + i + \" \"+ new Date());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.Date"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 669,
    "startColumnNumber" : 17,
    "endLineNumber" : 669,
    "endColumnNumber" : 27
  }, {
    "charLength" : 10,
    "startLineNumber" : 675,
    "startColumnNumber" : 68,
    "endLineNumber" : 675,
    "endColumnNumber" : 78
  }, {
    "charLength" : 10,
    "startLineNumber" : 677,
    "startColumnNumber" : 54,
    "endLineNumber" : 677,
    "endColumnNumber" : 64
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  } ]
}