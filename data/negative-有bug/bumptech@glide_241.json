{
  "id" : 241,
  "expression" : "Util.isValidDimensions(width,height)",
  "projectName" : "bumptech@glide",
  "commitID" : "7d9c28ec2763e973775abd5c3e3c971728a48a56",
  "filePath" : "/library/src/main/java/com/bumptech/glide/request/target/CustomTarget.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Util.isValidDimensions(width,height)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 68,
      "startColumnNumber" : 9,
      "endLineNumber" : 68,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 46
      },
      "nodeContext" : "!Util.isValidDimensions(width,height)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 287,
        "startLineNumber" : 68,
        "startColumnNumber" : 4,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!Util.isValidDimensions(width,height)) {\n  throw new IllegalArgumentException(\"Width and height must both be > 0 or Target#SIZE_ORIGINAL, but given\" + \" width: \" + width + \" and height: \"+ height);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 353,
        "startLineNumber" : 67,
        "startColumnNumber" : 45,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!Util.isValidDimensions(width,height)) {\n    throw new IllegalArgumentException(\"Width and height must both be > 0 or Target#SIZE_ORIGINAL, but given\" + \" width: \" + width + \" and height: \"+ height);\n  }\n  this.width=width;\n  this.height=height;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 955,
        "startLineNumber" : 57,
        "startColumnNumber" : 2,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Creates a new  {@code CustomTarget} that will return the given {@code width} and {@code height}as the requested size (unless overridden by  {@link com.bumptech.glide.request.RequestOptions#override(int)} in the request).\n * @param width The requested width ({@code > 0, or == Target.SIZE_ORIGINAL}).\n * @param height The requested height ({@code > 0, or == Target.SIZE_ORIGINAL}).\n * @throws IllegalArgumentException if width/height doesn't meet the requirement: {@code > 0, or== Target.SIZE_ORIGINAL}\n */\npublic CustomTarget(int width,int height){\n  if (!Util.isValidDimensions(width,height)) {\n    throw new IllegalArgumentException(\"Width and height must both be > 0 or Target#SIZE_ORIGINAL, but given\" + \" width: \" + width + \" and height: \"+ height);\n  }\n  this.width=width;\n  this.height=height;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 42,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 46
      },
      "nodeContext" : "!Util.isValidDimensions(width,height)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 37,
    "startLineNumber" : 68,
    "startColumnNumber" : 9,
    "endLineNumber" : 68,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ ]
}