{
  "id" : 417,
  "expression" : "\"validation.NAME_TOUCHY_MISMATCH.tb\"",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-context/src/test/java/org/springframework/validation/DataBinderTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"validation.NAME_TOUCHY_MISMATCH.tb\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 1318,
      "startColumnNumber" : 15,
      "endLineNumber" : 1318,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 1318,
        "startColumnNumber" : 2,
        "endLineNumber" : 1318,
        "endColumnNumber" : 101
      },
      "nodeContext" : "assertEquals(\"validation.NAME_TOUCHY_MISMATCH.tb\",(errors.getGlobalErrors().get(0)).getCodes()[0])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 1318,
        "startColumnNumber" : 2,
        "endLineNumber" : 1318,
        "endColumnNumber" : 102
      },
      "nodeContext" : "assertEquals(\"validation.NAME_TOUCHY_MISMATCH.tb\",(errors.getGlobalErrors().get(0)).getCodes()[0]);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4095,
        "startLineNumber" : 1294,
        "startColumnNumber" : 53,
        "endLineNumber" : 1363,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  TestBean tb=new TestBean();\n  tb.setSpouse(new TestBean());\n  BeanPropertyBindingResult errors=new BeanPropertyBindingResult(tb,\"tb\");\n  DefaultMessageCodesResolver codesResolver=new DefaultMessageCodesResolver();\n  codesResolver.setPrefix(\"validation.\");\n  errors.setMessageCodesResolver(codesResolver);\n  Validator testValidator=new TestBeanValidator();\n  testValidator.validate(tb,errors);\n  errors.setNestedPath(\"spouse.\");\n  assertEquals(\"spouse.\",errors.getNestedPath());\n  Validator spouseValidator=new SpouseValidator();\n  spouseValidator.validate(tb.getSpouse(),errors);\n  errors.setNestedPath(\"\");\n  assertTrue(errors.hasErrors());\n  assertEquals(6,errors.getErrorCount());\n  assertEquals(2,errors.getGlobalErrorCount());\n  assertEquals(\"validation.NAME_TOUCHY_MISMATCH\",errors.getGlobalError().getCode());\n  assertEquals(\"validation.NAME_TOUCHY_MISMATCH\",(errors.getGlobalErrors().get(0)).getCode());\n  assertEquals(\"validation.NAME_TOUCHY_MISMATCH.tb\",(errors.getGlobalErrors().get(0)).getCodes()[0]);\n  assertEquals(\"validation.NAME_TOUCHY_MISMATCH\",(errors.getGlobalErrors().get(0)).getCodes()[1]);\n  assertEquals(\"tb\",(errors.getGlobalErrors().get(0)).getObjectName());\n  assertEquals(\"validation.GENERAL_ERROR\",(errors.getGlobalErrors().get(1)).getCode());\n  assertEquals(\"validation.GENERAL_ERROR.tb\",(errors.getGlobalErrors().get(1)).getCodes()[0]);\n  assertEquals(\"validation.GENERAL_ERROR\",(errors.getGlobalErrors().get(1)).getCodes()[1]);\n  assertEquals(\"msg\",(errors.getGlobalErrors().get(1)).getDefaultMessage());\n  assertEquals(\"arg\",(errors.getGlobalErrors().get(1)).getArguments()[0]);\n  assertTrue(errors.hasFieldErrors());\n  assertEquals(4,errors.getFieldErrorCount());\n  assertEquals(\"validation.TOO_YOUNG\",errors.getFieldError().getCode());\n  assertEquals(\"validation.TOO_YOUNG\",(errors.getFieldErrors().get(0)).getCode());\n  assertEquals(\"age\",(errors.getFieldErrors().get(0)).getField());\n  assertEquals(\"validation.AGE_NOT_ODD\",(errors.getFieldErrors().get(1)).getCode());\n  assertEquals(\"age\",(errors.getFieldErrors().get(1)).getField());\n  assertEquals(\"validation.NOT_ROD\",(errors.getFieldErrors().get(2)).getCode());\n  assertEquals(\"name\",(errors.getFieldErrors().get(2)).getField());\n  assertEquals(\"validation.TOO_YOUNG\",(errors.getFieldErrors().get(3)).getCode());\n  assertEquals(\"spouse.age\",(errors.getFieldErrors().get(3)).getField());\n  assertTrue(errors.hasFieldErrors(\"age\"));\n  assertEquals(2,errors.getFieldErrorCount(\"age\"));\n  assertEquals(\"validation.TOO_YOUNG\",errors.getFieldError(\"age\").getCode());\n  assertEquals(\"validation.TOO_YOUNG\",(errors.getFieldErrors(\"age\").get(0)).getCode());\n  assertEquals(\"tb\",(errors.getFieldErrors(\"age\").get(0)).getObjectName());\n  assertEquals(\"age\",(errors.getFieldErrors(\"age\").get(0)).getField());\n  assertEquals(new Integer(0),(errors.getFieldErrors(\"age\").get(0)).getRejectedValue());\n  assertEquals(\"validation.AGE_NOT_ODD\",(errors.getFieldErrors(\"age\").get(1)).getCode());\n  assertTrue(errors.hasFieldErrors(\"name\"));\n  assertEquals(1,errors.getFieldErrorCount(\"name\"));\n  assertEquals(\"validation.NOT_ROD\",errors.getFieldError(\"name\").getCode());\n  assertEquals(\"validation.NOT_ROD.tb.name\",errors.getFieldError(\"name\").getCodes()[0]);\n  assertEquals(\"validation.NOT_ROD.name\",errors.getFieldError(\"name\").getCodes()[1]);\n  assertEquals(\"validation.NOT_ROD.java.lang.String\",errors.getFieldError(\"name\").getCodes()[2]);\n  assertEquals(\"validation.NOT_ROD\",errors.getFieldError(\"name\").getCodes()[3]);\n  assertEquals(\"name\",(errors.getFieldErrors(\"name\").get(0)).getField());\n  assertEquals(null,(errors.getFieldErrors(\"name\").get(0)).getRejectedValue());\n  assertTrue(errors.hasFieldErrors(\"spouse.age\"));\n  assertEquals(1,errors.getFieldErrorCount(\"spouse.age\"));\n  assertEquals(\"validation.TOO_YOUNG\",errors.getFieldError(\"spouse.age\").getCode());\n  assertEquals(\"tb\",(errors.getFieldErrors(\"spouse.age\").get(0)).getObjectName());\n  assertEquals(new Integer(0),(errors.getFieldErrors(\"spouse.age\").get(0)).getRejectedValue());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 628,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4154,
        "startLineNumber" : 1293,
        "startColumnNumber" : 1,
        "endLineNumber" : 1363,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testValidatorWithErrorsAndCodesPrefix(){\n  TestBean tb=new TestBean();\n  tb.setSpouse(new TestBean());\n  BeanPropertyBindingResult errors=new BeanPropertyBindingResult(tb,\"tb\");\n  DefaultMessageCodesResolver codesResolver=new DefaultMessageCodesResolver();\n  codesResolver.setPrefix(\"validation.\");\n  errors.setMessageCodesResolver(codesResolver);\n  Validator testValidator=new TestBeanValidator();\n  testValidator.validate(tb,errors);\n  errors.setNestedPath(\"spouse.\");\n  assertEquals(\"spouse.\",errors.getNestedPath());\n  Validator spouseValidator=new SpouseValidator();\n  spouseValidator.validate(tb.getSpouse(),errors);\n  errors.setNestedPath(\"\");\n  assertTrue(errors.hasErrors());\n  assertEquals(6,errors.getErrorCount());\n  assertEquals(2,errors.getGlobalErrorCount());\n  assertEquals(\"validation.NAME_TOUCHY_MISMATCH\",errors.getGlobalError().getCode());\n  assertEquals(\"validation.NAME_TOUCHY_MISMATCH\",(errors.getGlobalErrors().get(0)).getCode());\n  assertEquals(\"validation.NAME_TOUCHY_MISMATCH.tb\",(errors.getGlobalErrors().get(0)).getCodes()[0]);\n  assertEquals(\"validation.NAME_TOUCHY_MISMATCH\",(errors.getGlobalErrors().get(0)).getCodes()[1]);\n  assertEquals(\"tb\",(errors.getGlobalErrors().get(0)).getObjectName());\n  assertEquals(\"validation.GENERAL_ERROR\",(errors.getGlobalErrors().get(1)).getCode());\n  assertEquals(\"validation.GENERAL_ERROR.tb\",(errors.getGlobalErrors().get(1)).getCodes()[0]);\n  assertEquals(\"validation.GENERAL_ERROR\",(errors.getGlobalErrors().get(1)).getCodes()[1]);\n  assertEquals(\"msg\",(errors.getGlobalErrors().get(1)).getDefaultMessage());\n  assertEquals(\"arg\",(errors.getGlobalErrors().get(1)).getArguments()[0]);\n  assertTrue(errors.hasFieldErrors());\n  assertEquals(4,errors.getFieldErrorCount());\n  assertEquals(\"validation.TOO_YOUNG\",errors.getFieldError().getCode());\n  assertEquals(\"validation.TOO_YOUNG\",(errors.getFieldErrors().get(0)).getCode());\n  assertEquals(\"age\",(errors.getFieldErrors().get(0)).getField());\n  assertEquals(\"validation.AGE_NOT_ODD\",(errors.getFieldErrors().get(1)).getCode());\n  assertEquals(\"age\",(errors.getFieldErrors().get(1)).getField());\n  assertEquals(\"validation.NOT_ROD\",(errors.getFieldErrors().get(2)).getCode());\n  assertEquals(\"name\",(errors.getFieldErrors().get(2)).getField());\n  assertEquals(\"validation.TOO_YOUNG\",(errors.getFieldErrors().get(3)).getCode());\n  assertEquals(\"spouse.age\",(errors.getFieldErrors().get(3)).getField());\n  assertTrue(errors.hasFieldErrors(\"age\"));\n  assertEquals(2,errors.getFieldErrorCount(\"age\"));\n  assertEquals(\"validation.TOO_YOUNG\",errors.getFieldError(\"age\").getCode());\n  assertEquals(\"validation.TOO_YOUNG\",(errors.getFieldErrors(\"age\").get(0)).getCode());\n  assertEquals(\"tb\",(errors.getFieldErrors(\"age\").get(0)).getObjectName());\n  assertEquals(\"age\",(errors.getFieldErrors(\"age\").get(0)).getField());\n  assertEquals(new Integer(0),(errors.getFieldErrors(\"age\").get(0)).getRejectedValue());\n  assertEquals(\"validation.AGE_NOT_ODD\",(errors.getFieldErrors(\"age\").get(1)).getCode());\n  assertTrue(errors.hasFieldErrors(\"name\"));\n  assertEquals(1,errors.getFieldErrorCount(\"name\"));\n  assertEquals(\"validation.NOT_ROD\",errors.getFieldError(\"name\").getCode());\n  assertEquals(\"validation.NOT_ROD.tb.name\",errors.getFieldError(\"name\").getCodes()[0]);\n  assertEquals(\"validation.NOT_ROD.name\",errors.getFieldError(\"name\").getCodes()[1]);\n  assertEquals(\"validation.NOT_ROD.java.lang.String\",errors.getFieldError(\"name\").getCodes()[2]);\n  assertEquals(\"validation.NOT_ROD\",errors.getFieldError(\"name\").getCodes()[3]);\n  assertEquals(\"name\",(errors.getFieldErrors(\"name\").get(0)).getField());\n  assertEquals(null,(errors.getFieldErrors(\"name\").get(0)).getRejectedValue());\n  assertTrue(errors.hasFieldErrors(\"spouse.age\"));\n  assertEquals(1,errors.getFieldErrorCount(\"spouse.age\"));\n  assertEquals(\"validation.TOO_YOUNG\",errors.getFieldError(\"spouse.age\").getCode());\n  assertEquals(\"tb\",(errors.getFieldErrors(\"spouse.age\").get(0)).getObjectName());\n  assertEquals(new Integer(0),(errors.getFieldErrors(\"spouse.age\").get(0)).getRejectedValue());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 634,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 1318,
        "startColumnNumber" : 2,
        "endLineNumber" : 1318,
        "endColumnNumber" : 102
      },
      "nodeContext" : "assertEquals(\"validation.NAME_TOUCHY_MISMATCH.tb\",(errors.getGlobalErrors().get(0)).getCodes()[0]);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 8
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 36,
    "startLineNumber" : 1318,
    "startColumnNumber" : 15,
    "endLineNumber" : 1318,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ ]
}