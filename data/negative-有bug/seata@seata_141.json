{
  "id" : 141,
  "expression" : "rs1.getInt(\"DATA_TYPE\")",
  "projectName" : "seata@seata",
  "commitID" : "42d41623178ab076b11b27a0f049ac3ed7f1a9dc",
  "filePath" : "/rm-datasource/src/main/java/io/seata/rm/datasource/sql/struct/TableMetaCache.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "rs1.getInt(\"DATA_TYPE\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 204,
      "startColumnNumber" : 28,
      "endLineNumber" : 204,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 204,
        "startColumnNumber" : 12,
        "endLineNumber" : 204,
        "endColumnNumber" : 52
      },
      "nodeContext" : "col.setDataType(rs1.getInt(\"DATA_TYPE\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 204,
        "startColumnNumber" : 12,
        "endLineNumber" : 204,
        "endColumnNumber" : 53
      },
      "nodeContext" : "col.setDataType(rs1.getInt(\"DATA_TYPE\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1227,
        "startLineNumber" : 198,
        "startColumnNumber" : 27,
        "endLineNumber" : 220,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ColumnMeta col=new ColumnMeta();\n  col.setTableCat(rs1.getString(\"TABLE_CAT\"));\n  col.setTableSchemaName(rs1.getString(\"TABLE_SCHEM\"));\n  col.setTableName(rs1.getString(\"TABLE_NAME\"));\n  col.setColumnName(rs1.getString(\"COLUMN_NAME\"));\n  col.setDataType(rs1.getInt(\"DATA_TYPE\"));\n  col.setDataTypeName(rs1.getString(\"TYPE_NAME\"));\n  col.setColumnSize(rs1.getInt(\"COLUMN_SIZE\"));\n  col.setDecimalDigits(rs1.getInt(\"DECIMAL_DIGITS\"));\n  col.setNumPrecRadix(rs1.getInt(\"NUM_PREC_RADIX\"));\n  col.setNullAble(rs1.getInt(\"NULLABLE\"));\n  col.setRemarks(rs1.getString(\"REMARKS\"));\n  col.setColumnDef(rs1.getString(\"COLUMN_DEF\"));\n  col.setSqlDataType(rs1.getInt(\"SQL_DATA_TYPE\"));\n  col.setSqlDatetimeSub(rs1.getInt(\"SQL_DATETIME_SUB\"));\n  col.setCharOctetLength(rs1.getInt(\"CHAR_OCTET_LENGTH\"));\n  col.setOrdinalPosition(rs1.getInt(\"ORDINAL_POSITION\"));\n  col.setIsNullAble(rs1.getString(\"IS_NULLABLE\"));\n  col.setIsAutoincrement(rs1.getString(\"IS_AUTOINCREMENT\"));\n  tm.getAllColumns().put(col.getColumnName(),col);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 163,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1246,
        "startLineNumber" : 198,
        "startColumnNumber" : 8,
        "endLineNumber" : 220,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (rs1.next()) {\n  ColumnMeta col=new ColumnMeta();\n  col.setTableCat(rs1.getString(\"TABLE_CAT\"));\n  col.setTableSchemaName(rs1.getString(\"TABLE_SCHEM\"));\n  col.setTableName(rs1.getString(\"TABLE_NAME\"));\n  col.setColumnName(rs1.getString(\"COLUMN_NAME\"));\n  col.setDataType(rs1.getInt(\"DATA_TYPE\"));\n  col.setDataTypeName(rs1.getString(\"TYPE_NAME\"));\n  col.setColumnSize(rs1.getInt(\"COLUMN_SIZE\"));\n  col.setDecimalDigits(rs1.getInt(\"DECIMAL_DIGITS\"));\n  col.setNumPrecRadix(rs1.getInt(\"NUM_PREC_RADIX\"));\n  col.setNullAble(rs1.getInt(\"NULLABLE\"));\n  col.setRemarks(rs1.getString(\"REMARKS\"));\n  col.setColumnDef(rs1.getString(\"COLUMN_DEF\"));\n  col.setSqlDataType(rs1.getInt(\"SQL_DATA_TYPE\"));\n  col.setSqlDatetimeSub(rs1.getInt(\"SQL_DATETIME_SUB\"));\n  col.setCharOctetLength(rs1.getInt(\"CHAR_OCTET_LENGTH\"));\n  col.setOrdinalPosition(rs1.getInt(\"ORDINAL_POSITION\"));\n  col.setIsNullAble(rs1.getString(\"IS_NULLABLE\"));\n  col.setIsAutoincrement(rs1.getString(\"IS_AUTOINCREMENT\"));\n  tm.getAllColumns().put(col.getColumnName(),col);\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 167,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3831,
        "startLineNumber" : 190,
        "startColumnNumber" : 32,
        "endLineNumber" : 268,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String schemaName=rsmd.getSchemaName(1);\n  String catalogName=rsmd.getCatalogName(1);\n  TableMeta tm=new TableMeta();\n  tm.setTableName(tableName);\n  ResultSet rs1=dbmd.getColumns(catalogName,schemaName,tableName,\"%\");\n  while (rs1.next()) {\n    ColumnMeta col=new ColumnMeta();\n    col.setTableCat(rs1.getString(\"TABLE_CAT\"));\n    col.setTableSchemaName(rs1.getString(\"TABLE_SCHEM\"));\n    col.setTableName(rs1.getString(\"TABLE_NAME\"));\n    col.setColumnName(rs1.getString(\"COLUMN_NAME\"));\n    col.setDataType(rs1.getInt(\"DATA_TYPE\"));\n    col.setDataTypeName(rs1.getString(\"TYPE_NAME\"));\n    col.setColumnSize(rs1.getInt(\"COLUMN_SIZE\"));\n    col.setDecimalDigits(rs1.getInt(\"DECIMAL_DIGITS\"));\n    col.setNumPrecRadix(rs1.getInt(\"NUM_PREC_RADIX\"));\n    col.setNullAble(rs1.getInt(\"NULLABLE\"));\n    col.setRemarks(rs1.getString(\"REMARKS\"));\n    col.setColumnDef(rs1.getString(\"COLUMN_DEF\"));\n    col.setSqlDataType(rs1.getInt(\"SQL_DATA_TYPE\"));\n    col.setSqlDatetimeSub(rs1.getInt(\"SQL_DATETIME_SUB\"));\n    col.setCharOctetLength(rs1.getInt(\"CHAR_OCTET_LENGTH\"));\n    col.setOrdinalPosition(rs1.getInt(\"ORDINAL_POSITION\"));\n    col.setIsNullAble(rs1.getString(\"IS_NULLABLE\"));\n    col.setIsAutoincrement(rs1.getString(\"IS_AUTOINCREMENT\"));\n    tm.getAllColumns().put(col.getColumnName(),col);\n  }\n  ResultSet rs2=dbmd.getIndexInfo(catalogName,schemaName,tableName,false,true);\n  String indexName=\"\";\n  while (rs2.next()) {\n    indexName=rs2.getString(\"INDEX_NAME\");\n    String colName=rs2.getString(\"COLUMN_NAME\");\n    ColumnMeta col=tm.getAllColumns().get(colName);\n    if (tm.getAllIndexes().containsKey(indexName)) {\n      IndexMeta index=tm.getAllIndexes().get(indexName);\n      index.getValues().add(col);\n    }\n else {\n      IndexMeta index=new IndexMeta();\n      index.setIndexName(indexName);\n      index.setNonUnique(rs2.getBoolean(\"NON_UNIQUE\"));\n      index.setIndexQualifier(rs2.getString(\"INDEX_QUALIFIER\"));\n      index.setIndexName(rs2.getString(\"INDEX_NAME\"));\n      index.setType(rs2.getShort(\"TYPE\"));\n      index.setOrdinalPosition(rs2.getShort(\"ORDINAL_POSITION\"));\n      index.setAscOrDesc(rs2.getString(\"ASC_OR_DESC\"));\n      index.setCardinality(rs2.getInt(\"CARDINALITY\"));\n      index.getValues().add(col);\n      if (\"PRIMARY\".equalsIgnoreCase(indexName) || indexName.equalsIgnoreCase(rsmd.getTableName(1) + \"_pkey\")) {\n        index.setIndextype(IndexType.PRIMARY);\n      }\n else       if (!index.isNonUnique()) {\n        index.setIndextype(IndexType.Unique);\n      }\n else {\n        index.setIndextype(IndexType.Normal);\n      }\n      tm.getAllIndexes().put(indexName,index);\n    }\n  }\n  IndexMeta index=tm.getAllIndexes().get(indexName);\n  if (index.getIndextype().value() != 0) {\n    if (\"H2 JDBC Driver\".equals(dbmd.getDriverName())) {\n      if (indexName.length() > 11 && \"PRIMARY_KEY\".equalsIgnoreCase(indexName.substring(0,11))) {\n        index.setIndextype(IndexType.PRIMARY);\n      }\n    }\n else     if (dbmd.getDriverName() != null && dbmd.getDriverName().toLowerCase().indexOf(\"postgresql\") >= 0) {\n      if ((tableName + \"_pkey\").equalsIgnoreCase(indexName)) {\n        index.setIndextype(IndexType.PRIMARY);\n      }\n    }\n  }\n  return tm;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 504,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3975,
        "startLineNumber" : 189,
        "startColumnNumber" : 4,
        "endLineNumber" : 268,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static TableMeta resultSetMetaToSchema(ResultSetMetaData rsmd,DatabaseMetaData dbmd,String tableName) throws SQLException {\n  String schemaName=rsmd.getSchemaName(1);\n  String catalogName=rsmd.getCatalogName(1);\n  TableMeta tm=new TableMeta();\n  tm.setTableName(tableName);\n  ResultSet rs1=dbmd.getColumns(catalogName,schemaName,tableName,\"%\");\n  while (rs1.next()) {\n    ColumnMeta col=new ColumnMeta();\n    col.setTableCat(rs1.getString(\"TABLE_CAT\"));\n    col.setTableSchemaName(rs1.getString(\"TABLE_SCHEM\"));\n    col.setTableName(rs1.getString(\"TABLE_NAME\"));\n    col.setColumnName(rs1.getString(\"COLUMN_NAME\"));\n    col.setDataType(rs1.getInt(\"DATA_TYPE\"));\n    col.setDataTypeName(rs1.getString(\"TYPE_NAME\"));\n    col.setColumnSize(rs1.getInt(\"COLUMN_SIZE\"));\n    col.setDecimalDigits(rs1.getInt(\"DECIMAL_DIGITS\"));\n    col.setNumPrecRadix(rs1.getInt(\"NUM_PREC_RADIX\"));\n    col.setNullAble(rs1.getInt(\"NULLABLE\"));\n    col.setRemarks(rs1.getString(\"REMARKS\"));\n    col.setColumnDef(rs1.getString(\"COLUMN_DEF\"));\n    col.setSqlDataType(rs1.getInt(\"SQL_DATA_TYPE\"));\n    col.setSqlDatetimeSub(rs1.getInt(\"SQL_DATETIME_SUB\"));\n    col.setCharOctetLength(rs1.getInt(\"CHAR_OCTET_LENGTH\"));\n    col.setOrdinalPosition(rs1.getInt(\"ORDINAL_POSITION\"));\n    col.setIsNullAble(rs1.getString(\"IS_NULLABLE\"));\n    col.setIsAutoincrement(rs1.getString(\"IS_AUTOINCREMENT\"));\n    tm.getAllColumns().put(col.getColumnName(),col);\n  }\n  ResultSet rs2=dbmd.getIndexInfo(catalogName,schemaName,tableName,false,true);\n  String indexName=\"\";\n  while (rs2.next()) {\n    indexName=rs2.getString(\"INDEX_NAME\");\n    String colName=rs2.getString(\"COLUMN_NAME\");\n    ColumnMeta col=tm.getAllColumns().get(colName);\n    if (tm.getAllIndexes().containsKey(indexName)) {\n      IndexMeta index=tm.getAllIndexes().get(indexName);\n      index.getValues().add(col);\n    }\n else {\n      IndexMeta index=new IndexMeta();\n      index.setIndexName(indexName);\n      index.setNonUnique(rs2.getBoolean(\"NON_UNIQUE\"));\n      index.setIndexQualifier(rs2.getString(\"INDEX_QUALIFIER\"));\n      index.setIndexName(rs2.getString(\"INDEX_NAME\"));\n      index.setType(rs2.getShort(\"TYPE\"));\n      index.setOrdinalPosition(rs2.getShort(\"ORDINAL_POSITION\"));\n      index.setAscOrDesc(rs2.getString(\"ASC_OR_DESC\"));\n      index.setCardinality(rs2.getInt(\"CARDINALITY\"));\n      index.getValues().add(col);\n      if (\"PRIMARY\".equalsIgnoreCase(indexName) || indexName.equalsIgnoreCase(rsmd.getTableName(1) + \"_pkey\")) {\n        index.setIndextype(IndexType.PRIMARY);\n      }\n else       if (!index.isNonUnique()) {\n        index.setIndextype(IndexType.Unique);\n      }\n else {\n        index.setIndextype(IndexType.Normal);\n      }\n      tm.getAllIndexes().put(indexName,index);\n    }\n  }\n  IndexMeta index=tm.getAllIndexes().get(indexName);\n  if (index.getIndextype().value() != 0) {\n    if (\"H2 JDBC Driver\".equals(dbmd.getDriverName())) {\n      if (indexName.length() > 11 && \"PRIMARY_KEY\".equalsIgnoreCase(indexName.substring(0,11))) {\n        index.setIndextype(IndexType.PRIMARY);\n      }\n    }\n else     if (dbmd.getDriverName() != null && dbmd.getDriverName().toLowerCase().indexOf(\"postgresql\") >= 0) {\n      if ((tableName + \"_pkey\").equalsIgnoreCase(indexName)) {\n        index.setIndextype(IndexType.PRIMARY);\n      }\n    }\n  }\n  return tm;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 524,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 204,
        "startColumnNumber" : 12,
        "endLineNumber" : 204,
        "endColumnNumber" : 53
      },
      "nodeContext" : "col.setDataType(rs1.getInt(\"DATA_TYPE\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 204,
    "startColumnNumber" : 28,
    "endLineNumber" : 204,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ ]
}