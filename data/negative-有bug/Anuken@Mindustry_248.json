{
  "id" : 248,
  "expression" : "directionals",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/world/blocks/Autotiler.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "directionals",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 75,
      "startColumnNumber" : 20,
      "endLineNumber" : 75,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 39
      },
      "nodeContext" : "Arrays.fill(directionals,null)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 40
      },
      "nodeContext" : "Arrays.fill(directionals,null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 760,
        "startLineNumber" : 71,
        "startColumnNumber" : 78,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (req.tile() == null)   return null;\n  BuildPlan[] directionals=AutotilerHolder.directionals;\n  Arrays.fill(directionals,null);\n  list.each(other -> {\n    if (other.breaking || other == req)     return;\n    int i=0;\n    for (    Point2 point : Geometry.d4) {\n      int x=req.x + point.x, y=req.y + point.y;\n      if (x >= other.x - (other.block.size - 1) / 2 && x <= other.x + (other.block.size / 2) && y >= other.y - (other.block.size - 1) / 2 && y <= other.y + (other.block.size / 2)) {\n        directionals[i]=other;\n      }\n      i++;\n    }\n  }\n);\n  return buildBlending(req.tile(),req.rotation,directionals,req.worldContext);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 163,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 834,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "default @Nullable int[] getTiling(BuildPlan req,Eachable<BuildPlan> list){\n  if (req.tile() == null)   return null;\n  BuildPlan[] directionals=AutotilerHolder.directionals;\n  Arrays.fill(directionals,null);\n  list.each(other -> {\n    if (other.breaking || other == req)     return;\n    int i=0;\n    for (    Point2 point : Geometry.d4) {\n      int x=req.x + point.x, y=req.y + point.y;\n      if (x >= other.x - (other.block.size - 1) / 2 && x <= other.x + (other.block.size / 2) && y >= other.y - (other.block.size - 1) / 2 && y <= other.y + (other.block.size / 2)) {\n        directionals[i]=other;\n      }\n      i++;\n    }\n  }\n);\n  return buildBlending(req.tile(),req.rotation,directionals,req.worldContext);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 182,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 40
      },
      "nodeContext" : "Arrays.fill(directionals,null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "mindustry.entities.units.BuildPlan[]"
  }, {
    "nodeContext" : "directionals",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 89,
      "startColumnNumber" : 55,
      "endLineNumber" : 89,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 89,
        "startColumnNumber" : 15,
        "endLineNumber" : 89,
        "endColumnNumber" : 86
      },
      "nodeContext" : "buildBlending(req.tile(),req.rotation,directionals,req.worldContext)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 89,
        "endColumnNumber" : 87
      },
      "nodeContext" : "return buildBlending(req.tile(),req.rotation,directionals,req.worldContext);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 760,
        "startLineNumber" : 71,
        "startColumnNumber" : 78,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (req.tile() == null)   return null;\n  BuildPlan[] directionals=AutotilerHolder.directionals;\n  Arrays.fill(directionals,null);\n  list.each(other -> {\n    if (other.breaking || other == req)     return;\n    int i=0;\n    for (    Point2 point : Geometry.d4) {\n      int x=req.x + point.x, y=req.y + point.y;\n      if (x >= other.x - (other.block.size - 1) / 2 && x <= other.x + (other.block.size / 2) && y >= other.y - (other.block.size - 1) / 2 && y <= other.y + (other.block.size / 2)) {\n        directionals[i]=other;\n      }\n      i++;\n    }\n  }\n);\n  return buildBlending(req.tile(),req.rotation,directionals,req.worldContext);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 163,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 834,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "default @Nullable int[] getTiling(BuildPlan req,Eachable<BuildPlan> list){\n  if (req.tile() == null)   return null;\n  BuildPlan[] directionals=AutotilerHolder.directionals;\n  Arrays.fill(directionals,null);\n  list.each(other -> {\n    if (other.breaking || other == req)     return;\n    int i=0;\n    for (    Point2 point : Geometry.d4) {\n      int x=req.x + point.x, y=req.y + point.y;\n      if (x >= other.x - (other.block.size - 1) / 2 && x <= other.x + (other.block.size / 2) && y >= other.y - (other.block.size - 1) / 2 && y <= other.y + (other.block.size / 2)) {\n        directionals[i]=other;\n      }\n      i++;\n    }\n  }\n);\n  return buildBlending(req.tile(),req.rotation,directionals,req.worldContext);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 182,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 89,
        "endColumnNumber" : 87
      },
      "nodeContext" : "return buildBlending(req.tile(),req.rotation,directionals,req.worldContext);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "mindustry.entities.units.BuildPlan[]"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 75,
    "startColumnNumber" : 20,
    "endLineNumber" : 75,
    "endColumnNumber" : 32
  }, {
    "charLength" : 12,
    "startLineNumber" : 89,
    "startColumnNumber" : 55,
    "endLineNumber" : 89,
    "endColumnNumber" : 67
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}