{
  "id" : 159,
  "expression" : "Boolean",
  "projectName" : "realm@realm-java",
  "commitID" : "9da3b229a46407f73e2003fb40857cadf062086b",
  "filePath" : "/realm/realm-library/src/main/java/io/realm/DynamicRealmObject.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Boolean",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 108,
      "startColumnNumber" : 27,
      "endLineNumber" : 108,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 108,
        "startColumnNumber" : 27,
        "endLineNumber" : 108,
        "endColumnNumber" : 91
      },
      "nodeContext" : "Boolean.valueOf(proxyState.getRow$realm().getBoolean(columnKey))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 108,
        "startColumnNumber" : 23,
        "endLineNumber" : 108,
        "endColumnNumber" : 91
      },
      "nodeContext" : "(E)Boolean.valueOf(proxyState.getRow$realm().getBoolean(columnKey))",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 108,
        "startColumnNumber" : 16,
        "endLineNumber" : 108,
        "endColumnNumber" : 92
      },
      "nodeContext" : "return (E)Boolean.valueOf(proxyState.getRow$realm().getBoolean(columnKey));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1423,
        "startLineNumber" : 106,
        "startColumnNumber" : 8,
        "endLineNumber" : 135,
        "endColumnNumber" : 9
      },
      "nodeContext" : "switch (type) {\ncase BOOLEAN:  return (E)Boolean.valueOf(proxyState.getRow$realm().getBoolean(columnKey));\ncase INTEGER:return (E)Long.valueOf(proxyState.getRow$realm().getLong(columnKey));\ncase FLOAT:return (E)Float.valueOf(proxyState.getRow$realm().getFloat(columnKey));\ncase DOUBLE:return (E)Double.valueOf(proxyState.getRow$realm().getDouble(columnKey));\ncase STRING:return (E)proxyState.getRow$realm().getString(columnKey);\ncase BINARY:return (E)proxyState.getRow$realm().getBinaryByteArray(columnKey);\ncase DATE:return (E)proxyState.getRow$realm().getDate(columnKey);\ncase DECIMAL128:return (E)proxyState.getRow$realm().getDecimal128(columnKey);\ncase OBJECT_ID:return (E)proxyState.getRow$realm().getObjectId(columnKey);\ncase MIXED:return (E)getMixed(columnKey);\ncase UUID:return (E)proxyState.getRow$realm().getUUID(columnKey);\ncase OBJECT:return (E)getObject(fieldName);\ncase LIST:return (E)getList(fieldName);\ndefault:throw new IllegalStateException(\"Field type not supported: \" + type);\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 169,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1744,
        "startLineNumber" : 98,
        "startColumnNumber" : 39,
        "endLineNumber" : 136,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  proxyState.getRealm$realm().checkIfValid();\n  long columnKey=proxyState.getRow$realm().getColumnKey(fieldName);\n  if (proxyState.getRow$realm().isNull(columnKey)) {\n    return null;\n  }\n  RealmFieldType type=proxyState.getRow$realm().getColumnType(columnKey);\nswitch (type) {\ncase BOOLEAN:    return (E)Boolean.valueOf(proxyState.getRow$realm().getBoolean(columnKey));\ncase INTEGER:  return (E)Long.valueOf(proxyState.getRow$realm().getLong(columnKey));\ncase FLOAT:return (E)Float.valueOf(proxyState.getRow$realm().getFloat(columnKey));\ncase DOUBLE:return (E)Double.valueOf(proxyState.getRow$realm().getDouble(columnKey));\ncase STRING:return (E)proxyState.getRow$realm().getString(columnKey);\ncase BINARY:return (E)proxyState.getRow$realm().getBinaryByteArray(columnKey);\ncase DATE:return (E)proxyState.getRow$realm().getDate(columnKey);\ncase DECIMAL128:return (E)proxyState.getRow$realm().getDecimal128(columnKey);\ncase OBJECT_ID:return (E)proxyState.getRow$realm().getObjectId(columnKey);\ncase MIXED:return (E)getMixed(columnKey);\ncase UUID:return (E)proxyState.getRow$realm().getUUID(columnKey);\ncase OBJECT:return (E)getObject(fieldName);\ncase LIST:return (E)getList(fieldName);\ndefault:throw new IllegalStateException(\"Field type not supported: \" + type);\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 207,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2091,
        "startLineNumber" : 90,
        "startColumnNumber" : 4,
        "endLineNumber" : 136,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Returns the value for the given field.\n * @param fieldName name of the field.\n * @return the field value.\n * @throws ClassCastException if the field doesn't contain a field of the defined return type.\n */\n@SuppressWarnings({\"unchecked\",\"TypeParameterUnusedInFormals\"}) public <E>E get(String fieldName){\n  proxyState.getRealm$realm().checkIfValid();\n  long columnKey=proxyState.getRow$realm().getColumnKey(fieldName);\n  if (proxyState.getRow$realm().isNull(columnKey)) {\n    return null;\n  }\n  RealmFieldType type=proxyState.getRow$realm().getColumnType(columnKey);\nswitch (type) {\ncase BOOLEAN:    return (E)Boolean.valueOf(proxyState.getRow$realm().getBoolean(columnKey));\ncase INTEGER:  return (E)Long.valueOf(proxyState.getRow$realm().getLong(columnKey));\ncase FLOAT:return (E)Float.valueOf(proxyState.getRow$realm().getFloat(columnKey));\ncase DOUBLE:return (E)Double.valueOf(proxyState.getRow$realm().getDouble(columnKey));\ncase STRING:return (E)proxyState.getRow$realm().getString(columnKey);\ncase BINARY:return (E)proxyState.getRow$realm().getBinaryByteArray(columnKey);\ncase DATE:return (E)proxyState.getRow$realm().getDate(columnKey);\ncase DECIMAL128:return (E)proxyState.getRow$realm().getDecimal128(columnKey);\ncase OBJECT_ID:return (E)proxyState.getRow$realm().getObjectId(columnKey);\ncase MIXED:return (E)getMixed(columnKey);\ncase UUID:return (E)proxyState.getRow$realm().getUUID(columnKey);\ncase OBJECT:return (E)getObject(fieldName);\ncase LIST:return (E)getList(fieldName);\ndefault:throw new IllegalStateException(\"Field type not supported: \" + type);\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 224,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 108,
        "startColumnNumber" : 16,
        "endLineNumber" : 108,
        "endColumnNumber" : 92
      },
      "nodeContext" : "return (E)Boolean.valueOf(proxyState.getRow$realm().getBoolean(columnKey));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.Boolean"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 108,
    "startColumnNumber" : 27,
    "endLineNumber" : 108,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ ]
}