{
  "id" : 158,
  "expression" : "p",
  "projectName" : "android-hacker@VirtualXposed",
  "commitID" : "8e98dd20e6a751089d4eb2642fa6bf088a3e7a79",
  "filePath" : "/VirtualApp/lib/src/main/java/com/lody/virtual/remote/VParceledListSlice.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "p",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 60,
      "startColumnNumber" : 16,
      "endLineNumber" : 60,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 60,
        "startColumnNumber" : 16,
        "endLineNumber" : 60,
        "endColumnNumber" : 27
      },
      "nodeContext" : "p.readInt()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 60,
        "endColumnNumber" : 27
      },
      "nodeContext" : "N=p.readInt()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 60,
        "startColumnNumber" : 2,
        "endLineNumber" : 60,
        "endColumnNumber" : 28
      },
      "nodeContext" : "final int N=p.readInt();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1624,
        "startLineNumber" : 59,
        "startColumnNumber" : 58,
        "endLineNumber" : 121,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  final int N=p.readInt();\n  mList=new ArrayList<T>(N);\n  if (DEBUG)   Log.d(TAG,\"Retrieving \" + N + \" items\");\n  if (N <= 0) {\n    return;\n  }\n  Class<?> listElementClass=null;\n  int i=0;\n  while (i < N) {\n    if (p.readInt() == 0) {\n      break;\n    }\n    final T parcelable=p.readParcelable(loader);\n    if (listElementClass == null) {\n      listElementClass=parcelable.getClass();\n    }\n else {\n      verifySameType(listElementClass,parcelable.getClass());\n    }\n    mList.add(parcelable);\n    if (DEBUG)     Log.d(TAG,\"Read inline #\" + i + \": \"+ mList.get(mList.size() - 1));\n    i++;\n  }\n  if (i >= N) {\n    return;\n  }\n  final IBinder retriever=p.readStrongBinder();\n  while (i < N) {\n    if (DEBUG)     Log.d(TAG,\"Reading more @\" + i + \" of \"+ N+ \": retriever=\"+ retriever);\n    Parcel data=Parcel.obtain();\n    Parcel reply=Parcel.obtain();\n    data.writeInt(i);\n    try {\n      retriever.transact(IBinder.FIRST_CALL_TRANSACTION,data,reply,0);\n    }\n catch (    RemoteException e) {\n      Log.w(TAG,\"Failure retrieving array; only received \" + i + \" of \"+ N,e);\n      return;\n    }\n    while (i < N && reply.readInt() != 0) {\n      final T parcelable=reply.readParcelable(loader);\n      verifySameType(listElementClass,parcelable.getClass());\n      mList.add(parcelable);\n      if (DEBUG)       Log.d(TAG,\"Read extra #\" + i + \": \"+ mList.get(mList.size() - 1));\n      i++;\n    }\n    reply.recycle();\n    data.recycle();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 266,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1681,
        "startLineNumber" : 59,
        "startColumnNumber" : 1,
        "endLineNumber" : 121,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private VParceledListSlice(Parcel p,ClassLoader loader){\n  final int N=p.readInt();\n  mList=new ArrayList<T>(N);\n  if (DEBUG)   Log.d(TAG,\"Retrieving \" + N + \" items\");\n  if (N <= 0) {\n    return;\n  }\n  Class<?> listElementClass=null;\n  int i=0;\n  while (i < N) {\n    if (p.readInt() == 0) {\n      break;\n    }\n    final T parcelable=p.readParcelable(loader);\n    if (listElementClass == null) {\n      listElementClass=parcelable.getClass();\n    }\n else {\n      verifySameType(listElementClass,parcelable.getClass());\n    }\n    mList.add(parcelable);\n    if (DEBUG)     Log.d(TAG,\"Read inline #\" + i + \": \"+ mList.get(mList.size() - 1));\n    i++;\n  }\n  if (i >= N) {\n    return;\n  }\n  final IBinder retriever=p.readStrongBinder();\n  while (i < N) {\n    if (DEBUG)     Log.d(TAG,\"Reading more @\" + i + \" of \"+ N+ \": retriever=\"+ retriever);\n    Parcel data=Parcel.obtain();\n    Parcel reply=Parcel.obtain();\n    data.writeInt(i);\n    try {\n      retriever.transact(IBinder.FIRST_CALL_TRANSACTION,data,reply,0);\n    }\n catch (    RemoteException e) {\n      Log.w(TAG,\"Failure retrieving array; only received \" + i + \" of \"+ N,e);\n      return;\n    }\n    while (i < N && reply.readInt() != 0) {\n      final T parcelable=reply.readParcelable(loader);\n      verifySameType(listElementClass,parcelable.getClass());\n      mList.add(parcelable);\n      if (DEBUG)       Log.d(TAG,\"Read extra #\" + i + \": \"+ mList.get(mList.size() - 1));\n      i++;\n    }\n    reply.recycle();\n    data.recycle();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 277,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 60,
        "startColumnNumber" : 2,
        "endLineNumber" : 60,
        "endColumnNumber" : 28
      },
      "nodeContext" : "final int N=p.readInt();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.lody.virtual.remote.Parcel"
  }, {
    "nodeContext" : "p",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 73,
      "startColumnNumber" : 7,
      "endLineNumber" : 73,
      "endColumnNumber" : 8
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 73,
        "startColumnNumber" : 7,
        "endLineNumber" : 73,
        "endColumnNumber" : 18
      },
      "nodeContext" : "p.readInt()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 73,
        "startColumnNumber" : 7,
        "endLineNumber" : 73,
        "endColumnNumber" : 23
      },
      "nodeContext" : "p.readInt() == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 73,
        "startColumnNumber" : 3,
        "endLineNumber" : 75,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (p.readInt() == 0) {\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 441,
        "startLineNumber" : 72,
        "startColumnNumber" : 16,
        "endLineNumber" : 90,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (p.readInt() == 0) {\n    break;\n  }\n  final T parcelable=p.readParcelable(loader);\n  if (listElementClass == null) {\n    listElementClass=parcelable.getClass();\n  }\n else {\n    verifySameType(listElementClass,parcelable.getClass());\n  }\n  mList.add(parcelable);\n  if (DEBUG)   Log.d(TAG,\"Read inline #\" + i + \": \"+ mList.get(mList.size() - 1));\n  i++;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 455,
        "startLineNumber" : 72,
        "startColumnNumber" : 2,
        "endLineNumber" : 90,
        "endColumnNumber" : 3
      },
      "nodeContext" : "while (i < N) {\n  if (p.readInt() == 0) {\n    break;\n  }\n  final T parcelable=p.readParcelable(loader);\n  if (listElementClass == null) {\n    listElementClass=parcelable.getClass();\n  }\n else {\n    verifySameType(listElementClass,parcelable.getClass());\n  }\n  mList.add(parcelable);\n  if (DEBUG)   Log.d(TAG,\"Read inline #\" + i + \": \"+ mList.get(mList.size() - 1));\n  i++;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 69,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1624,
        "startLineNumber" : 59,
        "startColumnNumber" : 58,
        "endLineNumber" : 121,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  final int N=p.readInt();\n  mList=new ArrayList<T>(N);\n  if (DEBUG)   Log.d(TAG,\"Retrieving \" + N + \" items\");\n  if (N <= 0) {\n    return;\n  }\n  Class<?> listElementClass=null;\n  int i=0;\n  while (i < N) {\n    if (p.readInt() == 0) {\n      break;\n    }\n    final T parcelable=p.readParcelable(loader);\n    if (listElementClass == null) {\n      listElementClass=parcelable.getClass();\n    }\n else {\n      verifySameType(listElementClass,parcelable.getClass());\n    }\n    mList.add(parcelable);\n    if (DEBUG)     Log.d(TAG,\"Read inline #\" + i + \": \"+ mList.get(mList.size() - 1));\n    i++;\n  }\n  if (i >= N) {\n    return;\n  }\n  final IBinder retriever=p.readStrongBinder();\n  while (i < N) {\n    if (DEBUG)     Log.d(TAG,\"Reading more @\" + i + \" of \"+ N+ \": retriever=\"+ retriever);\n    Parcel data=Parcel.obtain();\n    Parcel reply=Parcel.obtain();\n    data.writeInt(i);\n    try {\n      retriever.transact(IBinder.FIRST_CALL_TRANSACTION,data,reply,0);\n    }\n catch (    RemoteException e) {\n      Log.w(TAG,\"Failure retrieving array; only received \" + i + \" of \"+ N,e);\n      return;\n    }\n    while (i < N && reply.readInt() != 0) {\n      final T parcelable=reply.readParcelable(loader);\n      verifySameType(listElementClass,parcelable.getClass());\n      mList.add(parcelable);\n      if (DEBUG)       Log.d(TAG,\"Read extra #\" + i + \": \"+ mList.get(mList.size() - 1));\n      i++;\n    }\n    reply.recycle();\n    data.recycle();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 266,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1681,
        "startLineNumber" : 59,
        "startColumnNumber" : 1,
        "endLineNumber" : 121,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private VParceledListSlice(Parcel p,ClassLoader loader){\n  final int N=p.readInt();\n  mList=new ArrayList<T>(N);\n  if (DEBUG)   Log.d(TAG,\"Retrieving \" + N + \" items\");\n  if (N <= 0) {\n    return;\n  }\n  Class<?> listElementClass=null;\n  int i=0;\n  while (i < N) {\n    if (p.readInt() == 0) {\n      break;\n    }\n    final T parcelable=p.readParcelable(loader);\n    if (listElementClass == null) {\n      listElementClass=parcelable.getClass();\n    }\n else {\n      verifySameType(listElementClass,parcelable.getClass());\n    }\n    mList.add(parcelable);\n    if (DEBUG)     Log.d(TAG,\"Read inline #\" + i + \": \"+ mList.get(mList.size() - 1));\n    i++;\n  }\n  if (i >= N) {\n    return;\n  }\n  final IBinder retriever=p.readStrongBinder();\n  while (i < N) {\n    if (DEBUG)     Log.d(TAG,\"Reading more @\" + i + \" of \"+ N+ \": retriever=\"+ retriever);\n    Parcel data=Parcel.obtain();\n    Parcel reply=Parcel.obtain();\n    data.writeInt(i);\n    try {\n      retriever.transact(IBinder.FIRST_CALL_TRANSACTION,data,reply,0);\n    }\n catch (    RemoteException e) {\n      Log.w(TAG,\"Failure retrieving array; only received \" + i + \" of \"+ N,e);\n      return;\n    }\n    while (i < N && reply.readInt() != 0) {\n      final T parcelable=reply.readParcelable(loader);\n      verifySameType(listElementClass,parcelable.getClass());\n      mList.add(parcelable);\n      if (DEBUG)       Log.d(TAG,\"Read extra #\" + i + \": \"+ mList.get(mList.size() - 1));\n      i++;\n    }\n    reply.recycle();\n    data.recycle();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 277,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 73,
        "startColumnNumber" : 7,
        "endLineNumber" : 73,
        "endColumnNumber" : 23
      },
      "nodeContext" : "p.readInt() == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.lody.virtual.remote.Parcel"
  }, {
    "nodeContext" : "p",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 78,
      "startColumnNumber" : 24,
      "endLineNumber" : 78,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 78,
        "startColumnNumber" : 24,
        "endLineNumber" : 78,
        "endColumnNumber" : 48
      },
      "nodeContext" : "p.readParcelable(loader)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 78,
        "startColumnNumber" : 11,
        "endLineNumber" : 78,
        "endColumnNumber" : 48
      },
      "nodeContext" : "parcelable=p.readParcelable(loader)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 78,
        "startColumnNumber" : 3,
        "endLineNumber" : 78,
        "endColumnNumber" : 49
      },
      "nodeContext" : "final T parcelable=p.readParcelable(loader);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 441,
        "startLineNumber" : 72,
        "startColumnNumber" : 16,
        "endLineNumber" : 90,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (p.readInt() == 0) {\n    break;\n  }\n  final T parcelable=p.readParcelable(loader);\n  if (listElementClass == null) {\n    listElementClass=parcelable.getClass();\n  }\n else {\n    verifySameType(listElementClass,parcelable.getClass());\n  }\n  mList.add(parcelable);\n  if (DEBUG)   Log.d(TAG,\"Read inline #\" + i + \": \"+ mList.get(mList.size() - 1));\n  i++;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 455,
        "startLineNumber" : 72,
        "startColumnNumber" : 2,
        "endLineNumber" : 90,
        "endColumnNumber" : 3
      },
      "nodeContext" : "while (i < N) {\n  if (p.readInt() == 0) {\n    break;\n  }\n  final T parcelable=p.readParcelable(loader);\n  if (listElementClass == null) {\n    listElementClass=parcelable.getClass();\n  }\n else {\n    verifySameType(listElementClass,parcelable.getClass());\n  }\n  mList.add(parcelable);\n  if (DEBUG)   Log.d(TAG,\"Read inline #\" + i + \": \"+ mList.get(mList.size() - 1));\n  i++;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 69,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1624,
        "startLineNumber" : 59,
        "startColumnNumber" : 58,
        "endLineNumber" : 121,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  final int N=p.readInt();\n  mList=new ArrayList<T>(N);\n  if (DEBUG)   Log.d(TAG,\"Retrieving \" + N + \" items\");\n  if (N <= 0) {\n    return;\n  }\n  Class<?> listElementClass=null;\n  int i=0;\n  while (i < N) {\n    if (p.readInt() == 0) {\n      break;\n    }\n    final T parcelable=p.readParcelable(loader);\n    if (listElementClass == null) {\n      listElementClass=parcelable.getClass();\n    }\n else {\n      verifySameType(listElementClass,parcelable.getClass());\n    }\n    mList.add(parcelable);\n    if (DEBUG)     Log.d(TAG,\"Read inline #\" + i + \": \"+ mList.get(mList.size() - 1));\n    i++;\n  }\n  if (i >= N) {\n    return;\n  }\n  final IBinder retriever=p.readStrongBinder();\n  while (i < N) {\n    if (DEBUG)     Log.d(TAG,\"Reading more @\" + i + \" of \"+ N+ \": retriever=\"+ retriever);\n    Parcel data=Parcel.obtain();\n    Parcel reply=Parcel.obtain();\n    data.writeInt(i);\n    try {\n      retriever.transact(IBinder.FIRST_CALL_TRANSACTION,data,reply,0);\n    }\n catch (    RemoteException e) {\n      Log.w(TAG,\"Failure retrieving array; only received \" + i + \" of \"+ N,e);\n      return;\n    }\n    while (i < N && reply.readInt() != 0) {\n      final T parcelable=reply.readParcelable(loader);\n      verifySameType(listElementClass,parcelable.getClass());\n      mList.add(parcelable);\n      if (DEBUG)       Log.d(TAG,\"Read extra #\" + i + \": \"+ mList.get(mList.size() - 1));\n      i++;\n    }\n    reply.recycle();\n    data.recycle();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 266,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1681,
        "startLineNumber" : 59,
        "startColumnNumber" : 1,
        "endLineNumber" : 121,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private VParceledListSlice(Parcel p,ClassLoader loader){\n  final int N=p.readInt();\n  mList=new ArrayList<T>(N);\n  if (DEBUG)   Log.d(TAG,\"Retrieving \" + N + \" items\");\n  if (N <= 0) {\n    return;\n  }\n  Class<?> listElementClass=null;\n  int i=0;\n  while (i < N) {\n    if (p.readInt() == 0) {\n      break;\n    }\n    final T parcelable=p.readParcelable(loader);\n    if (listElementClass == null) {\n      listElementClass=parcelable.getClass();\n    }\n else {\n      verifySameType(listElementClass,parcelable.getClass());\n    }\n    mList.add(parcelable);\n    if (DEBUG)     Log.d(TAG,\"Read inline #\" + i + \": \"+ mList.get(mList.size() - 1));\n    i++;\n  }\n  if (i >= N) {\n    return;\n  }\n  final IBinder retriever=p.readStrongBinder();\n  while (i < N) {\n    if (DEBUG)     Log.d(TAG,\"Reading more @\" + i + \" of \"+ N+ \": retriever=\"+ retriever);\n    Parcel data=Parcel.obtain();\n    Parcel reply=Parcel.obtain();\n    data.writeInt(i);\n    try {\n      retriever.transact(IBinder.FIRST_CALL_TRANSACTION,data,reply,0);\n    }\n catch (    RemoteException e) {\n      Log.w(TAG,\"Failure retrieving array; only received \" + i + \" of \"+ N,e);\n      return;\n    }\n    while (i < N && reply.readInt() != 0) {\n      final T parcelable=reply.readParcelable(loader);\n      verifySameType(listElementClass,parcelable.getClass());\n      mList.add(parcelable);\n      if (DEBUG)       Log.d(TAG,\"Read extra #\" + i + \": \"+ mList.get(mList.size() - 1));\n      i++;\n    }\n    reply.recycle();\n    data.recycle();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 277,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 78,
        "startColumnNumber" : 3,
        "endLineNumber" : 78,
        "endColumnNumber" : 49
      },
      "nodeContext" : "final T parcelable=p.readParcelable(loader);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.lody.virtual.remote.Parcel"
  }, {
    "nodeContext" : "p",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 94,
      "startColumnNumber" : 28,
      "endLineNumber" : 94,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 94,
        "startColumnNumber" : 28,
        "endLineNumber" : 94,
        "endColumnNumber" : 48
      },
      "nodeContext" : "p.readStrongBinder()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 94,
        "startColumnNumber" : 16,
        "endLineNumber" : 94,
        "endColumnNumber" : 48
      },
      "nodeContext" : "retriever=p.readStrongBinder()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 94,
        "startColumnNumber" : 2,
        "endLineNumber" : 94,
        "endColumnNumber" : 49
      },
      "nodeContext" : "final IBinder retriever=p.readStrongBinder();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1624,
        "startLineNumber" : 59,
        "startColumnNumber" : 58,
        "endLineNumber" : 121,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  final int N=p.readInt();\n  mList=new ArrayList<T>(N);\n  if (DEBUG)   Log.d(TAG,\"Retrieving \" + N + \" items\");\n  if (N <= 0) {\n    return;\n  }\n  Class<?> listElementClass=null;\n  int i=0;\n  while (i < N) {\n    if (p.readInt() == 0) {\n      break;\n    }\n    final T parcelable=p.readParcelable(loader);\n    if (listElementClass == null) {\n      listElementClass=parcelable.getClass();\n    }\n else {\n      verifySameType(listElementClass,parcelable.getClass());\n    }\n    mList.add(parcelable);\n    if (DEBUG)     Log.d(TAG,\"Read inline #\" + i + \": \"+ mList.get(mList.size() - 1));\n    i++;\n  }\n  if (i >= N) {\n    return;\n  }\n  final IBinder retriever=p.readStrongBinder();\n  while (i < N) {\n    if (DEBUG)     Log.d(TAG,\"Reading more @\" + i + \" of \"+ N+ \": retriever=\"+ retriever);\n    Parcel data=Parcel.obtain();\n    Parcel reply=Parcel.obtain();\n    data.writeInt(i);\n    try {\n      retriever.transact(IBinder.FIRST_CALL_TRANSACTION,data,reply,0);\n    }\n catch (    RemoteException e) {\n      Log.w(TAG,\"Failure retrieving array; only received \" + i + \" of \"+ N,e);\n      return;\n    }\n    while (i < N && reply.readInt() != 0) {\n      final T parcelable=reply.readParcelable(loader);\n      verifySameType(listElementClass,parcelable.getClass());\n      mList.add(parcelable);\n      if (DEBUG)       Log.d(TAG,\"Read extra #\" + i + \": \"+ mList.get(mList.size() - 1));\n      i++;\n    }\n    reply.recycle();\n    data.recycle();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 266,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1681,
        "startLineNumber" : 59,
        "startColumnNumber" : 1,
        "endLineNumber" : 121,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private VParceledListSlice(Parcel p,ClassLoader loader){\n  final int N=p.readInt();\n  mList=new ArrayList<T>(N);\n  if (DEBUG)   Log.d(TAG,\"Retrieving \" + N + \" items\");\n  if (N <= 0) {\n    return;\n  }\n  Class<?> listElementClass=null;\n  int i=0;\n  while (i < N) {\n    if (p.readInt() == 0) {\n      break;\n    }\n    final T parcelable=p.readParcelable(loader);\n    if (listElementClass == null) {\n      listElementClass=parcelable.getClass();\n    }\n else {\n      verifySameType(listElementClass,parcelable.getClass());\n    }\n    mList.add(parcelable);\n    if (DEBUG)     Log.d(TAG,\"Read inline #\" + i + \": \"+ mList.get(mList.size() - 1));\n    i++;\n  }\n  if (i >= N) {\n    return;\n  }\n  final IBinder retriever=p.readStrongBinder();\n  while (i < N) {\n    if (DEBUG)     Log.d(TAG,\"Reading more @\" + i + \" of \"+ N+ \": retriever=\"+ retriever);\n    Parcel data=Parcel.obtain();\n    Parcel reply=Parcel.obtain();\n    data.writeInt(i);\n    try {\n      retriever.transact(IBinder.FIRST_CALL_TRANSACTION,data,reply,0);\n    }\n catch (    RemoteException e) {\n      Log.w(TAG,\"Failure retrieving array; only received \" + i + \" of \"+ N,e);\n      return;\n    }\n    while (i < N && reply.readInt() != 0) {\n      final T parcelable=reply.readParcelable(loader);\n      verifySameType(listElementClass,parcelable.getClass());\n      mList.add(parcelable);\n      if (DEBUG)       Log.d(TAG,\"Read extra #\" + i + \": \"+ mList.get(mList.size() - 1));\n      i++;\n    }\n    reply.recycle();\n    data.recycle();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 277,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 94,
        "startColumnNumber" : 2,
        "endLineNumber" : 94,
        "endColumnNumber" : 49
      },
      "nodeContext" : "final IBinder retriever=p.readStrongBinder();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.lody.virtual.remote.Parcel"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 60,
    "startColumnNumber" : 16,
    "endLineNumber" : 60,
    "endColumnNumber" : 17
  }, {
    "charLength" : 1,
    "startLineNumber" : 73,
    "startColumnNumber" : 7,
    "endLineNumber" : 73,
    "endColumnNumber" : 8
  }, {
    "charLength" : 1,
    "startLineNumber" : 78,
    "startColumnNumber" : 24,
    "endLineNumber" : 78,
    "endColumnNumber" : 25
  }, {
    "charLength" : 1,
    "startLineNumber" : 94,
    "startColumnNumber" : 28,
    "endLineNumber" : 94,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  } ]
}