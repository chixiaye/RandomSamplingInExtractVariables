{
  "id" : 100,
  "expression" : "sourceWithMapper",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-optimizer/src/test/java/org/apache/flink/optimizer/PipelineBreakerTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "sourceWithMapper",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 99,
      "startColumnNumber" : 20,
      "endLineNumber" : 99,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 99,
        "startColumnNumber" : 20,
        "endLineNumber" : 100,
        "endColumnNumber" : 60
      },
      "nodeContext" : "sourceWithMapper.map(new IdentityMapper<Long>())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 143,
        "startLineNumber" : 99,
        "startColumnNumber" : 20,
        "endLineNumber" : 101,
        "endColumnNumber" : 65
      },
      "nodeContext" : "sourceWithMapper.map(new IdentityMapper<Long>()).reduce(new SelectOneReducer<Long>())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 174,
        "startLineNumber" : 98,
        "startColumnNumber" : 26,
        "endLineNumber" : 101,
        "endColumnNumber" : 65
      },
      "nodeContext" : "bcInput1=sourceWithMapper.map(new IdentityMapper<Long>()).reduce(new SelectOneReducer<Long>())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 189,
        "startLineNumber" : 98,
        "startColumnNumber" : 12,
        "endLineNumber" : 101,
        "endColumnNumber" : 66
      },
      "nodeContext" : "DataSet<Long> bcInput1=sourceWithMapper.map(new IdentityMapper<Long>()).reduce(new SelectOneReducer<Long>());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1351,
        "startLineNumber" : 90,
        "startColumnNumber" : 12,
        "endLineNumber" : 120,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();\n  env.getConfig().setExecutionMode(ExecutionMode.PIPELINED);\n  env.setParallelism(64);\n  DataSet<Long> sourceWithMapper=env.generateSequence(1,10).map(new IdentityMapper<Long>());\n  DataSet<Long> bcInput1=sourceWithMapper.map(new IdentityMapper<Long>()).reduce(new SelectOneReducer<Long>());\n  DataSet<Long> bcInput2=env.generateSequence(1,10);\n  DataSet<Long> result=sourceWithMapper.map(new IdentityMapper<Long>()).withBroadcastSet(bcInput1,\"bc1\").withBroadcastSet(bcInput2,\"bc2\");\n  result.output(new DiscardingOutputFormat<Long>());\n  Plan p=env.createProgramPlan();\n  OptimizedPlan op=compileNoStats(p);\n  SinkPlanNode sink=op.getDataSinks().iterator().next();\n  SingleInputPlanNode mapper=(SingleInputPlanNode)sink.getInput().getSource();\n  assertEquals(TempMode.NONE,mapper.getInput().getTempMode());\n  assertEquals(DataExchangeMode.BATCH,mapper.getInput().getDataExchangeMode());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 180,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1454,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 123,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();\n  env.getConfig().setExecutionMode(ExecutionMode.PIPELINED);\n  env.setParallelism(64);\n  DataSet<Long> sourceWithMapper=env.generateSequence(1,10).map(new IdentityMapper<Long>());\n  DataSet<Long> bcInput1=sourceWithMapper.map(new IdentityMapper<Long>()).reduce(new SelectOneReducer<Long>());\n  DataSet<Long> bcInput2=env.generateSequence(1,10);\n  DataSet<Long> result=sourceWithMapper.map(new IdentityMapper<Long>()).withBroadcastSet(bcInput1,\"bc1\").withBroadcastSet(bcInput2,\"bc2\");\n  result.output(new DiscardingOutputFormat<Long>());\n  Plan p=env.createProgramPlan();\n  OptimizedPlan op=compileNoStats(p);\n  SinkPlanNode sink=op.getDataSinks().iterator().next();\n  SingleInputPlanNode mapper=(SingleInputPlanNode)sink.getInput().getSource();\n  assertEquals(TempMode.NONE,mapper.getInput().getTempMode());\n  assertEquals(DataExchangeMode.BATCH,mapper.getInput().getDataExchangeMode());\n}\n catch (Exception e) {\n  e.printStackTrace();\n  fail(e.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 197,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1470,
        "startLineNumber" : 89,
        "startColumnNumber" : 58,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();\n    env.getConfig().setExecutionMode(ExecutionMode.PIPELINED);\n    env.setParallelism(64);\n    DataSet<Long> sourceWithMapper=env.generateSequence(1,10).map(new IdentityMapper<Long>());\n    DataSet<Long> bcInput1=sourceWithMapper.map(new IdentityMapper<Long>()).reduce(new SelectOneReducer<Long>());\n    DataSet<Long> bcInput2=env.generateSequence(1,10);\n    DataSet<Long> result=sourceWithMapper.map(new IdentityMapper<Long>()).withBroadcastSet(bcInput1,\"bc1\").withBroadcastSet(bcInput2,\"bc2\");\n    result.output(new DiscardingOutputFormat<Long>());\n    Plan p=env.createProgramPlan();\n    OptimizedPlan op=compileNoStats(p);\n    SinkPlanNode sink=op.getDataSinks().iterator().next();\n    SingleInputPlanNode mapper=(SingleInputPlanNode)sink.getInput().getSource();\n    assertEquals(TempMode.NONE,mapper.getInput().getTempMode());\n    assertEquals(DataExchangeMode.BATCH,mapper.getInput().getDataExchangeMode());\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    fail(e.getMessage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 198,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1534,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testPipelineBreakerBroadcastedAllReduce(){\n  try {\n    ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();\n    env.getConfig().setExecutionMode(ExecutionMode.PIPELINED);\n    env.setParallelism(64);\n    DataSet<Long> sourceWithMapper=env.generateSequence(1,10).map(new IdentityMapper<Long>());\n    DataSet<Long> bcInput1=sourceWithMapper.map(new IdentityMapper<Long>()).reduce(new SelectOneReducer<Long>());\n    DataSet<Long> bcInput2=env.generateSequence(1,10);\n    DataSet<Long> result=sourceWithMapper.map(new IdentityMapper<Long>()).withBroadcastSet(bcInput1,\"bc1\").withBroadcastSet(bcInput2,\"bc2\");\n    result.output(new DiscardingOutputFormat<Long>());\n    Plan p=env.createProgramPlan();\n    OptimizedPlan op=compileNoStats(p);\n    SinkPlanNode sink=op.getDataSinks().iterator().next();\n    SingleInputPlanNode mapper=(SingleInputPlanNode)sink.getInput().getSource();\n    assertEquals(TempMode.NONE,mapper.getInput().getTempMode());\n    assertEquals(DataExchangeMode.BATCH,mapper.getInput().getDataExchangeMode());\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    fail(e.getMessage());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 204,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 99,
        "startColumnNumber" : 20,
        "endLineNumber" : 100,
        "endColumnNumber" : 60
      },
      "nodeContext" : "sourceWithMapper.map(new IdentityMapper<Long>())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.flink.api.java.DataSet<java.lang.Long>"
  }, {
    "nodeContext" : "sourceWithMapper",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 105,
      "startColumnNumber" : 20,
      "endLineNumber" : 105,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 105,
        "startColumnNumber" : 20,
        "endLineNumber" : 106,
        "endColumnNumber" : 60
      },
      "nodeContext" : "sourceWithMapper.map(new IdentityMapper<Long>())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 140,
        "startLineNumber" : 105,
        "startColumnNumber" : 20,
        "endLineNumber" : 107,
        "endColumnNumber" : 62
      },
      "nodeContext" : "sourceWithMapper.map(new IdentityMapper<Long>()).withBroadcastSet(bcInput1,\"bc1\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 203,
        "startLineNumber" : 105,
        "startColumnNumber" : 20,
        "endLineNumber" : 108,
        "endColumnNumber" : 62
      },
      "nodeContext" : "sourceWithMapper.map(new IdentityMapper<Long>()).withBroadcastSet(bcInput1,\"bc1\").withBroadcastSet(bcInput2,\"bc2\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 232,
        "startLineNumber" : 104,
        "startColumnNumber" : 26,
        "endLineNumber" : 108,
        "endColumnNumber" : 62
      },
      "nodeContext" : "result=sourceWithMapper.map(new IdentityMapper<Long>()).withBroadcastSet(bcInput1,\"bc1\").withBroadcastSet(bcInput2,\"bc2\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 19,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 247,
        "startLineNumber" : 104,
        "startColumnNumber" : 12,
        "endLineNumber" : 108,
        "endColumnNumber" : 63
      },
      "nodeContext" : "DataSet<Long> result=sourceWithMapper.map(new IdentityMapper<Long>()).withBroadcastSet(bcInput1,\"bc1\").withBroadcastSet(bcInput2,\"bc2\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1351,
        "startLineNumber" : 90,
        "startColumnNumber" : 12,
        "endLineNumber" : 120,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();\n  env.getConfig().setExecutionMode(ExecutionMode.PIPELINED);\n  env.setParallelism(64);\n  DataSet<Long> sourceWithMapper=env.generateSequence(1,10).map(new IdentityMapper<Long>());\n  DataSet<Long> bcInput1=sourceWithMapper.map(new IdentityMapper<Long>()).reduce(new SelectOneReducer<Long>());\n  DataSet<Long> bcInput2=env.generateSequence(1,10);\n  DataSet<Long> result=sourceWithMapper.map(new IdentityMapper<Long>()).withBroadcastSet(bcInput1,\"bc1\").withBroadcastSet(bcInput2,\"bc2\");\n  result.output(new DiscardingOutputFormat<Long>());\n  Plan p=env.createProgramPlan();\n  OptimizedPlan op=compileNoStats(p);\n  SinkPlanNode sink=op.getDataSinks().iterator().next();\n  SingleInputPlanNode mapper=(SingleInputPlanNode)sink.getInput().getSource();\n  assertEquals(TempMode.NONE,mapper.getInput().getTempMode());\n  assertEquals(DataExchangeMode.BATCH,mapper.getInput().getDataExchangeMode());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 180,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1454,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 123,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();\n  env.getConfig().setExecutionMode(ExecutionMode.PIPELINED);\n  env.setParallelism(64);\n  DataSet<Long> sourceWithMapper=env.generateSequence(1,10).map(new IdentityMapper<Long>());\n  DataSet<Long> bcInput1=sourceWithMapper.map(new IdentityMapper<Long>()).reduce(new SelectOneReducer<Long>());\n  DataSet<Long> bcInput2=env.generateSequence(1,10);\n  DataSet<Long> result=sourceWithMapper.map(new IdentityMapper<Long>()).withBroadcastSet(bcInput1,\"bc1\").withBroadcastSet(bcInput2,\"bc2\");\n  result.output(new DiscardingOutputFormat<Long>());\n  Plan p=env.createProgramPlan();\n  OptimizedPlan op=compileNoStats(p);\n  SinkPlanNode sink=op.getDataSinks().iterator().next();\n  SingleInputPlanNode mapper=(SingleInputPlanNode)sink.getInput().getSource();\n  assertEquals(TempMode.NONE,mapper.getInput().getTempMode());\n  assertEquals(DataExchangeMode.BATCH,mapper.getInput().getDataExchangeMode());\n}\n catch (Exception e) {\n  e.printStackTrace();\n  fail(e.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 197,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1470,
        "startLineNumber" : 89,
        "startColumnNumber" : 58,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();\n    env.getConfig().setExecutionMode(ExecutionMode.PIPELINED);\n    env.setParallelism(64);\n    DataSet<Long> sourceWithMapper=env.generateSequence(1,10).map(new IdentityMapper<Long>());\n    DataSet<Long> bcInput1=sourceWithMapper.map(new IdentityMapper<Long>()).reduce(new SelectOneReducer<Long>());\n    DataSet<Long> bcInput2=env.generateSequence(1,10);\n    DataSet<Long> result=sourceWithMapper.map(new IdentityMapper<Long>()).withBroadcastSet(bcInput1,\"bc1\").withBroadcastSet(bcInput2,\"bc2\");\n    result.output(new DiscardingOutputFormat<Long>());\n    Plan p=env.createProgramPlan();\n    OptimizedPlan op=compileNoStats(p);\n    SinkPlanNode sink=op.getDataSinks().iterator().next();\n    SingleInputPlanNode mapper=(SingleInputPlanNode)sink.getInput().getSource();\n    assertEquals(TempMode.NONE,mapper.getInput().getTempMode());\n    assertEquals(DataExchangeMode.BATCH,mapper.getInput().getDataExchangeMode());\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    fail(e.getMessage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 198,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1534,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testPipelineBreakerBroadcastedAllReduce(){\n  try {\n    ExecutionEnvironment env=ExecutionEnvironment.getExecutionEnvironment();\n    env.getConfig().setExecutionMode(ExecutionMode.PIPELINED);\n    env.setParallelism(64);\n    DataSet<Long> sourceWithMapper=env.generateSequence(1,10).map(new IdentityMapper<Long>());\n    DataSet<Long> bcInput1=sourceWithMapper.map(new IdentityMapper<Long>()).reduce(new SelectOneReducer<Long>());\n    DataSet<Long> bcInput2=env.generateSequence(1,10);\n    DataSet<Long> result=sourceWithMapper.map(new IdentityMapper<Long>()).withBroadcastSet(bcInput1,\"bc1\").withBroadcastSet(bcInput2,\"bc2\");\n    result.output(new DiscardingOutputFormat<Long>());\n    Plan p=env.createProgramPlan();\n    OptimizedPlan op=compileNoStats(p);\n    SinkPlanNode sink=op.getDataSinks().iterator().next();\n    SingleInputPlanNode mapper=(SingleInputPlanNode)sink.getInput().getSource();\n    assertEquals(TempMode.NONE,mapper.getInput().getTempMode());\n    assertEquals(DataExchangeMode.BATCH,mapper.getInput().getDataExchangeMode());\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    fail(e.getMessage());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 204,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 105,
        "startColumnNumber" : 20,
        "endLineNumber" : 106,
        "endColumnNumber" : 60
      },
      "nodeContext" : "sourceWithMapper.map(new IdentityMapper<Long>())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.flink.api.java.DataSet<java.lang.Long>"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 99,
    "startColumnNumber" : 20,
    "endLineNumber" : 99,
    "endColumnNumber" : 36
  }, {
    "charLength" : 16,
    "startLineNumber" : 105,
    "startColumnNumber" : 20,
    "endLineNumber" : 105,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}