{
  "id" : 86,
  "expression" : "SampleAnnotation.class",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockito/internal/creation/bytebuddy/SubclassByteBuddyMockMakerTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "SampleAnnotation.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 66,
      "startColumnNumber" : 56,
      "endLineNumber" : 66,
      "endColumnNumber" : 78
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 66,
        "startColumnNumber" : 19,
        "endLineNumber" : 66,
        "endColumnNumber" : 79
      },
      "nodeContext" : "proxy.getClass().isAnnotationPresent(SampleAnnotation.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 80
      },
      "nodeContext" : "assertThat(proxy.getClass().isAnnotationPresent(SampleAnnotation.class))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 89
      },
      "nodeContext" : "assertThat(proxy.getClass().isAnnotationPresent(SampleAnnotation.class)).isTrue()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 90
      },
      "nodeContext" : "assertThat(proxy.getClass().isAnnotationPresent(SampleAnnotation.class)).isTrue();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 989,
        "startLineNumber" : 59,
        "startColumnNumber" : 62,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MockSettingsImpl<ClassWithAnnotation> mockSettings=new MockSettingsImpl<ClassWithAnnotation>();\n  mockSettings.setTypeToMock(ClassWithAnnotation.class);\n  ClassWithAnnotation proxy=mockMaker.createMock(mockSettings,dummyHandler());\n  assertThat(proxy.getClass().isAnnotationPresent(SampleAnnotation.class)).isTrue();\n  assertThat(proxy.getClass().getAnnotation(SampleAnnotation.class).value()).isEqualTo(\"foo\");\n  assertThat(proxy.getClass().getMethod(\"sampleMethod\").isAnnotationPresent(SampleAnnotation.class)).isTrue();\n  assertThat(proxy.getClass().getMethod(\"sampleMethod\").getAnnotation(SampleAnnotation.class).value()).isEqualTo(\"bar\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1058,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void mock_type_with_annotations() throws Exception {\n  MockSettingsImpl<ClassWithAnnotation> mockSettings=new MockSettingsImpl<ClassWithAnnotation>();\n  mockSettings.setTypeToMock(ClassWithAnnotation.class);\n  ClassWithAnnotation proxy=mockMaker.createMock(mockSettings,dummyHandler());\n  assertThat(proxy.getClass().isAnnotationPresent(SampleAnnotation.class)).isTrue();\n  assertThat(proxy.getClass().getAnnotation(SampleAnnotation.class).value()).isEqualTo(\"foo\");\n  assertThat(proxy.getClass().getMethod(\"sampleMethod\").isAnnotationPresent(SampleAnnotation.class)).isTrue();\n  assertThat(proxy.getClass().getMethod(\"sampleMethod\").getAnnotation(SampleAnnotation.class).value()).isEqualTo(\"bar\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 90
      },
      "nodeContext" : "assertThat(proxy.getClass().isAnnotationPresent(SampleAnnotation.class)).isTrue();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMakerTest.SampleAnnotation>"
  }, {
    "nodeContext" : "SampleAnnotation.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 67,
      "startColumnNumber" : 50,
      "endLineNumber" : 67,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 67,
        "startColumnNumber" : 19,
        "endLineNumber" : 67,
        "endColumnNumber" : 73
      },
      "nodeContext" : "proxy.getClass().getAnnotation(SampleAnnotation.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 67,
        "startColumnNumber" : 19,
        "endLineNumber" : 67,
        "endColumnNumber" : 81
      },
      "nodeContext" : "proxy.getClass().getAnnotation(SampleAnnotation.class).value()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 82
      },
      "nodeContext" : "assertThat(proxy.getClass().getAnnotation(SampleAnnotation.class).value())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 99
      },
      "nodeContext" : "assertThat(proxy.getClass().getAnnotation(SampleAnnotation.class).value()).isEqualTo(\"foo\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 100
      },
      "nodeContext" : "assertThat(proxy.getClass().getAnnotation(SampleAnnotation.class).value()).isEqualTo(\"foo\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 989,
        "startLineNumber" : 59,
        "startColumnNumber" : 62,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MockSettingsImpl<ClassWithAnnotation> mockSettings=new MockSettingsImpl<ClassWithAnnotation>();\n  mockSettings.setTypeToMock(ClassWithAnnotation.class);\n  ClassWithAnnotation proxy=mockMaker.createMock(mockSettings,dummyHandler());\n  assertThat(proxy.getClass().isAnnotationPresent(SampleAnnotation.class)).isTrue();\n  assertThat(proxy.getClass().getAnnotation(SampleAnnotation.class).value()).isEqualTo(\"foo\");\n  assertThat(proxy.getClass().getMethod(\"sampleMethod\").isAnnotationPresent(SampleAnnotation.class)).isTrue();\n  assertThat(proxy.getClass().getMethod(\"sampleMethod\").getAnnotation(SampleAnnotation.class).value()).isEqualTo(\"bar\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1058,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void mock_type_with_annotations() throws Exception {\n  MockSettingsImpl<ClassWithAnnotation> mockSettings=new MockSettingsImpl<ClassWithAnnotation>();\n  mockSettings.setTypeToMock(ClassWithAnnotation.class);\n  ClassWithAnnotation proxy=mockMaker.createMock(mockSettings,dummyHandler());\n  assertThat(proxy.getClass().isAnnotationPresent(SampleAnnotation.class)).isTrue();\n  assertThat(proxy.getClass().getAnnotation(SampleAnnotation.class).value()).isEqualTo(\"foo\");\n  assertThat(proxy.getClass().getMethod(\"sampleMethod\").isAnnotationPresent(SampleAnnotation.class)).isTrue();\n  assertThat(proxy.getClass().getMethod(\"sampleMethod\").getAnnotation(SampleAnnotation.class).value()).isEqualTo(\"bar\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 100
      },
      "nodeContext" : "assertThat(proxy.getClass().getAnnotation(SampleAnnotation.class).value()).isEqualTo(\"foo\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMakerTest.SampleAnnotation>"
  }, {
    "nodeContext" : "SampleAnnotation.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 72,
      "startColumnNumber" : 53,
      "endLineNumber" : 72,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 154,
        "startLineNumber" : 70,
        "startColumnNumber" : 24,
        "endLineNumber" : 72,
        "endColumnNumber" : 76
      },
      "nodeContext" : "proxy.getClass().getMethod(\"sampleMethod\").isAnnotationPresent(SampleAnnotation.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 192,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 77
      },
      "nodeContext" : "assertThat(proxy.getClass().getMethod(\"sampleMethod\").isAnnotationPresent(SampleAnnotation.class))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 219,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 25
      },
      "nodeContext" : "assertThat(proxy.getClass().getMethod(\"sampleMethod\").isAnnotationPresent(SampleAnnotation.class)).isTrue()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 220,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 26
      },
      "nodeContext" : "assertThat(proxy.getClass().getMethod(\"sampleMethod\").isAnnotationPresent(SampleAnnotation.class)).isTrue();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 989,
        "startLineNumber" : 59,
        "startColumnNumber" : 62,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MockSettingsImpl<ClassWithAnnotation> mockSettings=new MockSettingsImpl<ClassWithAnnotation>();\n  mockSettings.setTypeToMock(ClassWithAnnotation.class);\n  ClassWithAnnotation proxy=mockMaker.createMock(mockSettings,dummyHandler());\n  assertThat(proxy.getClass().isAnnotationPresent(SampleAnnotation.class)).isTrue();\n  assertThat(proxy.getClass().getAnnotation(SampleAnnotation.class).value()).isEqualTo(\"foo\");\n  assertThat(proxy.getClass().getMethod(\"sampleMethod\").isAnnotationPresent(SampleAnnotation.class)).isTrue();\n  assertThat(proxy.getClass().getMethod(\"sampleMethod\").getAnnotation(SampleAnnotation.class).value()).isEqualTo(\"bar\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1058,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void mock_type_with_annotations() throws Exception {\n  MockSettingsImpl<ClassWithAnnotation> mockSettings=new MockSettingsImpl<ClassWithAnnotation>();\n  mockSettings.setTypeToMock(ClassWithAnnotation.class);\n  ClassWithAnnotation proxy=mockMaker.createMock(mockSettings,dummyHandler());\n  assertThat(proxy.getClass().isAnnotationPresent(SampleAnnotation.class)).isTrue();\n  assertThat(proxy.getClass().getAnnotation(SampleAnnotation.class).value()).isEqualTo(\"foo\");\n  assertThat(proxy.getClass().getMethod(\"sampleMethod\").isAnnotationPresent(SampleAnnotation.class)).isTrue();\n  assertThat(proxy.getClass().getMethod(\"sampleMethod\").getAnnotation(SampleAnnotation.class).value()).isEqualTo(\"bar\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 154,
        "startLineNumber" : 70,
        "startColumnNumber" : 24,
        "endLineNumber" : 72,
        "endColumnNumber" : 76
      },
      "nodeContext" : "proxy.getClass().getMethod(\"sampleMethod\").isAnnotationPresent(SampleAnnotation.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMakerTest.SampleAnnotation>"
  }, {
    "nodeContext" : "SampleAnnotation.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 77,
      "startColumnNumber" : 47,
      "endLineNumber" : 77,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 148,
        "startLineNumber" : 75,
        "startColumnNumber" : 24,
        "endLineNumber" : 77,
        "endColumnNumber" : 70
      },
      "nodeContext" : "proxy.getClass().getMethod(\"sampleMethod\").getAnnotation(SampleAnnotation.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 190,
        "startLineNumber" : 75,
        "startColumnNumber" : 24,
        "endLineNumber" : 78,
        "endColumnNumber" : 40
      },
      "nodeContext" : "proxy.getClass().getMethod(\"sampleMethod\").getAnnotation(SampleAnnotation.class).value()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 228,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 41
      },
      "nodeContext" : "assertThat(proxy.getClass().getMethod(\"sampleMethod\").getAnnotation(SampleAnnotation.class).value())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 263,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 33
      },
      "nodeContext" : "assertThat(proxy.getClass().getMethod(\"sampleMethod\").getAnnotation(SampleAnnotation.class).value()).isEqualTo(\"bar\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 264,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertThat(proxy.getClass().getMethod(\"sampleMethod\").getAnnotation(SampleAnnotation.class).value()).isEqualTo(\"bar\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 989,
        "startLineNumber" : 59,
        "startColumnNumber" : 62,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MockSettingsImpl<ClassWithAnnotation> mockSettings=new MockSettingsImpl<ClassWithAnnotation>();\n  mockSettings.setTypeToMock(ClassWithAnnotation.class);\n  ClassWithAnnotation proxy=mockMaker.createMock(mockSettings,dummyHandler());\n  assertThat(proxy.getClass().isAnnotationPresent(SampleAnnotation.class)).isTrue();\n  assertThat(proxy.getClass().getAnnotation(SampleAnnotation.class).value()).isEqualTo(\"foo\");\n  assertThat(proxy.getClass().getMethod(\"sampleMethod\").isAnnotationPresent(SampleAnnotation.class)).isTrue();\n  assertThat(proxy.getClass().getMethod(\"sampleMethod\").getAnnotation(SampleAnnotation.class).value()).isEqualTo(\"bar\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1058,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void mock_type_with_annotations() throws Exception {\n  MockSettingsImpl<ClassWithAnnotation> mockSettings=new MockSettingsImpl<ClassWithAnnotation>();\n  mockSettings.setTypeToMock(ClassWithAnnotation.class);\n  ClassWithAnnotation proxy=mockMaker.createMock(mockSettings,dummyHandler());\n  assertThat(proxy.getClass().isAnnotationPresent(SampleAnnotation.class)).isTrue();\n  assertThat(proxy.getClass().getAnnotation(SampleAnnotation.class).value()).isEqualTo(\"foo\");\n  assertThat(proxy.getClass().getMethod(\"sampleMethod\").isAnnotationPresent(SampleAnnotation.class)).isTrue();\n  assertThat(proxy.getClass().getMethod(\"sampleMethod\").getAnnotation(SampleAnnotation.class).value()).isEqualTo(\"bar\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 148,
        "startLineNumber" : 75,
        "startColumnNumber" : 24,
        "endLineNumber" : 77,
        "endColumnNumber" : 70
      },
      "nodeContext" : "proxy.getClass().getMethod(\"sampleMethod\").getAnnotation(SampleAnnotation.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<org.mockito.internal.creation.bytebuddy.SubclassByteBuddyMockMakerTest.SampleAnnotation>"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 66,
    "startColumnNumber" : 56,
    "endLineNumber" : 66,
    "endColumnNumber" : 78
  }, {
    "charLength" : 22,
    "startLineNumber" : 67,
    "startColumnNumber" : 50,
    "endLineNumber" : 67,
    "endColumnNumber" : 72
  }, {
    "charLength" : 22,
    "startLineNumber" : 72,
    "startColumnNumber" : 53,
    "endLineNumber" : 72,
    "endColumnNumber" : 75
  }, {
    "charLength" : 22,
    "startLineNumber" : 77,
    "startColumnNumber" : 47,
    "endLineNumber" : 77,
    "endColumnNumber" : 69
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 5
  } ]
}