{
  "id" : 433,
  "expression" : "initializer.loadImpl(alternatePluginType)",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/main/java/org/mockito/internal/configuration/plugins/PluginLoader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "initializer.loadImpl(alternatePluginType)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 41,
      "startLineNumber" : 69,
      "startColumnNumber" : 48,
      "endLineNumber" : 69,
      "endColumnNumber" : 89
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 69,
        "startColumnNumber" : 30,
        "endLineNumber" : 69,
        "endColumnNumber" : 89
      },
      "nodeContext" : "alternatePlugin=initializer.loadImpl(alternatePluginType)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 69,
        "startColumnNumber" : 16,
        "endLineNumber" : 69,
        "endColumnNumber" : 90
      },
      "nodeContext" : "AlternateType alternatePlugin=initializer.loadImpl(alternatePluginType);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 220,
        "startLineNumber" : 68,
        "startColumnNumber" : 52,
        "endLineNumber" : 73,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  AlternateType alternatePlugin=initializer.loadImpl(alternatePluginType);\n  if (alternatePlugin != null) {\n    return alternatePlugin;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 253,
        "startLineNumber" : 68,
        "startColumnNumber" : 19,
        "endLineNumber" : 73,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (alternatePluginType != null) {\n  AlternateType alternatePlugin=initializer.loadImpl(alternatePluginType);\n  if (alternatePlugin != null) {\n    return alternatePlugin;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 345,
        "startLineNumber" : 66,
        "startColumnNumber" : 12,
        "endLineNumber" : 73,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (preferredPlugin != null) {\n  return preferredPlugin;\n}\n else if (alternatePluginType != null) {\n  AlternateType alternatePlugin=initializer.loadImpl(alternatePluginType);\n  if (alternatePlugin != null) {\n    return alternatePlugin;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 28,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 528,
        "startLineNumber" : 64,
        "startColumnNumber" : 12,
        "endLineNumber" : 76,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  PreferredType preferredPlugin=initializer.loadImpl(preferredPluginType);\n  if (preferredPlugin != null) {\n    return preferredPlugin;\n  }\n else   if (alternatePluginType != null) {\n    AlternateType alternatePlugin=initializer.loadImpl(alternatePluginType);\n    if (alternatePlugin != null) {\n      return alternatePlugin;\n    }\n  }\n  return plugins.getDefaultPlugin(preferredPluginType);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1430,
        "startLineNumber" : 64,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  PreferredType preferredPlugin=initializer.loadImpl(preferredPluginType);\n  if (preferredPlugin != null) {\n    return preferredPlugin;\n  }\n else   if (alternatePluginType != null) {\n    AlternateType alternatePlugin=initializer.loadImpl(alternatePluginType);\n    if (alternatePlugin != null) {\n      return alternatePlugin;\n    }\n  }\n  return plugins.getDefaultPlugin(preferredPluginType);\n}\n catch (final Throwable t) {\n  return Proxy.newProxyInstance(preferredPluginType.getClassLoader(),new Class<?>[]{preferredPluginType},new InvocationHandler(){\n    @Override public Object invoke(    Object proxy,    Method method,    Object[] args) throws Throwable {\n      throw new IllegalStateException(\"Could not initialize plugin: \" + preferredPluginType + \" (alternate: \"+ alternatePluginType+ \")\",t);\n    }\n  }\n);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 106,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1448,
        "startLineNumber" : 63,
        "startColumnNumber" : 60,
        "endLineNumber" : 94,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    PreferredType preferredPlugin=initializer.loadImpl(preferredPluginType);\n    if (preferredPlugin != null) {\n      return preferredPlugin;\n    }\n else     if (alternatePluginType != null) {\n      AlternateType alternatePlugin=initializer.loadImpl(alternatePluginType);\n      if (alternatePlugin != null) {\n        return alternatePlugin;\n      }\n    }\n    return plugins.getDefaultPlugin(preferredPluginType);\n  }\n catch (  final Throwable t) {\n    return Proxy.newProxyInstance(preferredPluginType.getClassLoader(),new Class<?>[]{preferredPluginType},new InvocationHandler(){\n      @Override public Object invoke(      Object proxy,      Method method,      Object[] args) throws Throwable {\n        throw new IllegalStateException(\"Could not initialize plugin: \" + preferredPluginType + \" (alternate: \"+ alternatePluginType+ \")\",t);\n      }\n    }\n);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2021,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 94,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Scans the classpath for given  {@code preferredPluginType}. If not found scan for  {@code alternatePluginType}. If neither a preferred or alternate plugin is found, default to default class of  {@code preferredPluginType}.\n * @return An object of either {@code preferredPluginType} or {@code alternatePluginType}\n */\n@SuppressWarnings(\"unchecked\") <PreferredType,AlternateType>Object loadPlugin(final Class<PreferredType> preferredPluginType,final Class<AlternateType> alternatePluginType){\n  try {\n    PreferredType preferredPlugin=initializer.loadImpl(preferredPluginType);\n    if (preferredPlugin != null) {\n      return preferredPlugin;\n    }\n else     if (alternatePluginType != null) {\n      AlternateType alternatePlugin=initializer.loadImpl(alternatePluginType);\n      if (alternatePlugin != null) {\n        return alternatePlugin;\n      }\n    }\n    return plugins.getDefaultPlugin(preferredPluginType);\n  }\n catch (  final Throwable t) {\n    return Proxy.newProxyInstance(preferredPluginType.getClassLoader(),new Class<?>[]{preferredPluginType},new InvocationHandler(){\n      @Override public Object invoke(      Object proxy,      Method method,      Object[] args) throws Throwable {\n        throw new IllegalStateException(\"Could not initialize plugin: \" + preferredPluginType + \" (alternate: \"+ alternatePluginType+ \")\",t);\n      }\n    }\n);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 135,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 69,
        "startColumnNumber" : 16,
        "endLineNumber" : 69,
        "endColumnNumber" : 90
      },
      "nodeContext" : "AlternateType alternatePlugin=initializer.loadImpl(alternatePluginType);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "AlternateType"
  } ],
  "positionList" : [ {
    "charLength" : 41,
    "startLineNumber" : 69,
    "startColumnNumber" : 48,
    "endLineNumber" : 69,
    "endColumnNumber" : 89
  } ],
  "layoutRelationDataList" : [ ]
}