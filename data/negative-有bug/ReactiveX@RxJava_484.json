{
  "id" : 484,
  "expression" : "threads",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/disposables/SerialDisposableTests.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "threads",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 145,
      "startColumnNumber" : 12,
      "endLineNumber" : 145,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 145,
        "startColumnNumber" : 12,
        "endLineNumber" : 145,
        "endColumnNumber" : 26
      },
      "nodeContext" : "threads.add(t)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 145,
        "startColumnNumber" : 12,
        "endLineNumber" : 145,
        "endColumnNumber" : 27
      },
      "nodeContext" : "threads.add(t);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 530,
        "startLineNumber" : 130,
        "startColumnNumber" : 40,
        "endLineNumber" : 146,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final Thread t=new Thread(){\n    @Override public void run(){\n      try {\n        start.await();\n        serialDisposable.dispose();\n      }\n catch (      InterruptedException e) {\n        fail(e.getMessage());\n      }\n finally {\n        end.countDown();\n      }\n    }\n  }\n;\n  t.start();\n  threads.add(t);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 54,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 562,
        "startLineNumber" : 130,
        "startColumnNumber" : 8,
        "endLineNumber" : 146,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < count; i++) {\n  final Thread t=new Thread(){\n    @Override public void run(){\n      try {\n        start.await();\n        serialDisposable.dispose();\n      }\n catch (      InterruptedException e) {\n        fail(e.getMessage());\n      }\n finally {\n        end.countDown();\n      }\n    }\n  }\n;\n  t.start();\n  threads.add(t);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 65,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1218,
        "startLineNumber" : 120,
        "startColumnNumber" : 40,
        "endLineNumber" : 158,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Disposable firstSet=mock(Disposable.class);\n  serialDisposable.set(firstSet);\n  final CountDownLatch start=new CountDownLatch(1);\n  final int count=10;\n  final CountDownLatch end=new CountDownLatch(count);\n  final List<Thread> threads=new ArrayList<Thread>();\n  for (int i=0; i < count; i++) {\n    final Thread t=new Thread(){\n      @Override public void run(){\n        try {\n          start.await();\n          serialDisposable.dispose();\n        }\n catch (        InterruptedException e) {\n          fail(e.getMessage());\n        }\n finally {\n          end.countDown();\n        }\n      }\n    }\n;\n    t.start();\n    threads.add(t);\n  }\n  final Disposable underlying=mock(Disposable.class);\n  start.countDown();\n  serialDisposable.set(underlying);\n  end.await();\n  verify(firstSet).dispose();\n  verify(underlying).dispose();\n  for (  final Thread t : threads) {\n    t.join();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1375,
        "startLineNumber" : 118,
        "startColumnNumber" : 4,
        "endLineNumber" : 158,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test(timeout=1000) public void settingUnderlyingWhenUnsubscribedCausesImmediateUnsubscriptionConcurrently() throws InterruptedException {\n  final Disposable firstSet=mock(Disposable.class);\n  serialDisposable.set(firstSet);\n  final CountDownLatch start=new CountDownLatch(1);\n  final int count=10;\n  final CountDownLatch end=new CountDownLatch(count);\n  final List<Thread> threads=new ArrayList<Thread>();\n  for (int i=0; i < count; i++) {\n    final Thread t=new Thread(){\n      @Override public void run(){\n        try {\n          start.await();\n          serialDisposable.dispose();\n        }\n catch (        InterruptedException e) {\n          fail(e.getMessage());\n        }\n finally {\n          end.countDown();\n        }\n      }\n    }\n;\n    t.start();\n    threads.add(t);\n  }\n  final Disposable underlying=mock(Disposable.class);\n  start.countDown();\n  serialDisposable.set(underlying);\n  end.await();\n  verify(firstSet).dispose();\n  verify(underlying).dispose();\n  for (  final Thread t : threads) {\n    t.join();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 182,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 145,
        "startColumnNumber" : 12,
        "endLineNumber" : 145,
        "endColumnNumber" : 27
      },
      "nodeContext" : "threads.add(t);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.lang.Thread>"
  }, {
    "nodeContext" : "threads",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 155,
      "startColumnNumber" : 30,
      "endLineNumber" : 155,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 155,
        "startColumnNumber" : 8,
        "endLineNumber" : 157,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (final Thread t : threads) {\n  t.join();\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1218,
        "startLineNumber" : 120,
        "startColumnNumber" : 40,
        "endLineNumber" : 158,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Disposable firstSet=mock(Disposable.class);\n  serialDisposable.set(firstSet);\n  final CountDownLatch start=new CountDownLatch(1);\n  final int count=10;\n  final CountDownLatch end=new CountDownLatch(count);\n  final List<Thread> threads=new ArrayList<Thread>();\n  for (int i=0; i < count; i++) {\n    final Thread t=new Thread(){\n      @Override public void run(){\n        try {\n          start.await();\n          serialDisposable.dispose();\n        }\n catch (        InterruptedException e) {\n          fail(e.getMessage());\n        }\n finally {\n          end.countDown();\n        }\n      }\n    }\n;\n    t.start();\n    threads.add(t);\n  }\n  final Disposable underlying=mock(Disposable.class);\n  start.countDown();\n  serialDisposable.set(underlying);\n  end.await();\n  verify(firstSet).dispose();\n  verify(underlying).dispose();\n  for (  final Thread t : threads) {\n    t.join();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 171,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1375,
        "startLineNumber" : 118,
        "startColumnNumber" : 4,
        "endLineNumber" : 158,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test(timeout=1000) public void settingUnderlyingWhenUnsubscribedCausesImmediateUnsubscriptionConcurrently() throws InterruptedException {\n  final Disposable firstSet=mock(Disposable.class);\n  serialDisposable.set(firstSet);\n  final CountDownLatch start=new CountDownLatch(1);\n  final int count=10;\n  final CountDownLatch end=new CountDownLatch(count);\n  final List<Thread> threads=new ArrayList<Thread>();\n  for (int i=0; i < count; i++) {\n    final Thread t=new Thread(){\n      @Override public void run(){\n        try {\n          start.await();\n          serialDisposable.dispose();\n        }\n catch (        InterruptedException e) {\n          fail(e.getMessage());\n        }\n finally {\n          end.countDown();\n        }\n      }\n    }\n;\n    t.start();\n    threads.add(t);\n  }\n  final Disposable underlying=mock(Disposable.class);\n  start.countDown();\n  serialDisposable.set(underlying);\n  end.await();\n  verify(firstSet).dispose();\n  verify(underlying).dispose();\n  for (  final Thread t : threads) {\n    t.join();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 182,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 155,
        "startColumnNumber" : 8,
        "endLineNumber" : 157,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (final Thread t : threads) {\n  t.join();\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.lang.Thread>"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 145,
    "startColumnNumber" : 12,
    "endLineNumber" : 145,
    "endColumnNumber" : 19
  }, {
    "charLength" : 7,
    "startLineNumber" : 155,
    "startColumnNumber" : 30,
    "endLineNumber" : 155,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}