{
  "id" : 1,
  "expression" : "(SOAPElement)value",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-http/src/main/java/cn/hutool/http/webservice/SoapClient.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(SOAPElement)value",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 682,
      "startColumnNumber" : 25,
      "endLineNumber" : 682,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 682,
        "startColumnNumber" : 5,
        "endLineNumber" : 682,
        "endColumnNumber" : 45
      },
      "nodeContext" : "ele.addChildElement((SOAPElement)value)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 682,
        "startColumnNumber" : 5,
        "endLineNumber" : 682,
        "endColumnNumber" : 46
      },
      "nodeContext" : "ele.addChildElement((SOAPElement)value);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 681,
        "startColumnNumber" : 8,
        "endLineNumber" : 683,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ele.addChildElement((SOAPElement)value);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 681,
        "startColumnNumber" : 4,
        "endLineNumber" : 685,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  ele.addChildElement((SOAPElement)value);\n}\n catch (SOAPException e) {\n  throw new SoapRuntimeException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 161,
        "startLineNumber" : 679,
        "startColumnNumber" : 37,
        "endLineNumber" : 686,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  try {\n    ele.addChildElement((SOAPElement)value);\n  }\n catch (  SOAPException e) {\n    throw new SoapRuntimeException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 497,
        "startLineNumber" : 679,
        "startColumnNumber" : 3,
        "endLineNumber" : 696,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (value instanceof SOAPElement) {\n  try {\n    ele.addChildElement((SOAPElement)value);\n  }\n catch (  SOAPException e) {\n    throw new SoapRuntimeException(e);\n  }\n}\n else if (value instanceof Map) {\n  Entry entry;\n  for (  Object obj : ((Map)value).entrySet()) {\n    entry=(Entry)obj;\n    setParam(childEle,entry.getKey().toString(),entry.getValue(),prefix);\n  }\n}\n else {\n  childEle.setValue(value.toString());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 79,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 508,
        "startLineNumber" : 678,
        "startColumnNumber" : 21,
        "endLineNumber" : 697,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (value instanceof SOAPElement) {\n    try {\n      ele.addChildElement((SOAPElement)value);\n    }\n catch (    SOAPException e) {\n      throw new SoapRuntimeException(e);\n    }\n  }\n else   if (value instanceof Map) {\n    Entry entry;\n    for (    Object obj : ((Map)value).entrySet()) {\n      entry=(Entry)obj;\n      setParam(childEle,entry.getKey().toString(),entry.getValue(),prefix);\n    }\n  }\n else {\n    childEle.setValue(value.toString());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 527,
        "startLineNumber" : 678,
        "startColumnNumber" : 2,
        "endLineNumber" : 697,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (null != value) {\n  if (value instanceof SOAPElement) {\n    try {\n      ele.addChildElement((SOAPElement)value);\n    }\n catch (    SOAPException e) {\n      throw new SoapRuntimeException(e);\n    }\n  }\n else   if (value instanceof Map) {\n    Entry entry;\n    for (    Object obj : ((Map)value).entrySet()) {\n      entry=(Entry)obj;\n      setParam(childEle,entry.getKey().toString(),entry.getValue(),prefix);\n    }\n  }\n else {\n    childEle.setValue(value.toString());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 84,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 826,
        "startLineNumber" : 666,
        "startColumnNumber" : 96,
        "endLineNumber" : 700,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  final SOAPElement childEle;\n  try {\n    if (StrUtil.isNotBlank(prefix)) {\n      childEle=ele.addChildElement(name,prefix);\n    }\n else {\n      childEle=ele.addChildElement(name);\n    }\n  }\n catch (  SOAPException e) {\n    throw new SoapRuntimeException(e);\n  }\n  if (null != value) {\n    if (value instanceof SOAPElement) {\n      try {\n        ele.addChildElement((SOAPElement)value);\n      }\n catch (      SOAPException e) {\n        throw new SoapRuntimeException(e);\n      }\n    }\n else     if (value instanceof Map) {\n      Entry entry;\n      for (      Object obj : ((Map)value).entrySet()) {\n        entry=(Entry)obj;\n        setParam(childEle,entry.getKey().toString(),entry.getValue(),prefix);\n      }\n    }\n else {\n      childEle.setValue(value.toString());\n    }\n  }\n  return childEle;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1114,
        "startLineNumber" : 656,
        "startColumnNumber" : 1,
        "endLineNumber" : 700,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 设置方法参数\n * @param ele    方法节点\n * @param name   参数名\n * @param value  参数值\n * @param prefix 命名空间前缀\n * @return {@link SOAPElement}子节点\n */\n@SuppressWarnings(\"rawtypes\") private static SOAPElement setParam(SOAPElement ele,String name,Object value,String prefix){\n  final SOAPElement childEle;\n  try {\n    if (StrUtil.isNotBlank(prefix)) {\n      childEle=ele.addChildElement(name,prefix);\n    }\n else {\n      childEle=ele.addChildElement(name);\n    }\n  }\n catch (  SOAPException e) {\n    throw new SoapRuntimeException(e);\n  }\n  if (null != value) {\n    if (value instanceof SOAPElement) {\n      try {\n        ele.addChildElement((SOAPElement)value);\n      }\n catch (      SOAPException e) {\n        throw new SoapRuntimeException(e);\n      }\n    }\n else     if (value instanceof Map) {\n      Entry entry;\n      for (      Object obj : ((Map)value).entrySet()) {\n        entry=(Entry)obj;\n        setParam(childEle,entry.getKey().toString(),entry.getValue(),prefix);\n      }\n    }\n else {\n      childEle.setValue(value.toString());\n    }\n  }\n  return childEle;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 154,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 682,
        "startColumnNumber" : 5,
        "endLineNumber" : 682,
        "endColumnNumber" : 46
      },
      "nodeContext" : "ele.addChildElement((SOAPElement)value);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "cn.hutool.http.webservice.SOAPElement"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 682,
    "startColumnNumber" : 25,
    "endLineNumber" : 682,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ ]
}