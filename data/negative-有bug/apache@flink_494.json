{
  "id" : 494,
  "expression" : "resultType.is(DATETIME)",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-table/flink-table-common/src/main/java/org/apache/flink/table/types/logical/utils/LogicalTypeMerging.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "resultType.is(DATETIME)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 538,
      "startColumnNumber" : 12,
      "endLineNumber" : 538,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 538,
        "startColumnNumber" : 12,
        "endLineNumber" : 538,
        "endColumnNumber" : 56
      },
      "nodeContext" : "resultType.is(DATETIME) && type.is(INTERVAL)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 430,
        "startLineNumber" : 538,
        "startColumnNumber" : 8,
        "endLineNumber" : 546,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (resultType.is(DATETIME) && type.is(INTERVAL)) {\n  return resultType;\n}\n else if (resultType.is(INTERVAL) && type.is(DATETIME)) {\n  return type;\n}\n else if ((resultType.is(TIMESTAMP) || resultType.is(DATE)) && type.is(EXACT_NUMERIC)) {\n  return resultType;\n}\n else if (resultType.is(EXACT_NUMERIC) && (type.is(TIMESTAMP) || type.is(DATE))) {\n  return type;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 64,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 625,
        "startLineNumber" : 537,
        "startColumnNumber" : 54,
        "endLineNumber" : 550,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (resultType.is(DATETIME) && type.is(INTERVAL)) {\n    return resultType;\n  }\n else   if (resultType.is(INTERVAL) && type.is(DATETIME)) {\n    return type;\n  }\n else   if ((resultType.is(TIMESTAMP) || resultType.is(DATE)) && type.is(EXACT_NUMERIC)) {\n    return resultType;\n  }\n else   if (resultType.is(EXACT_NUMERIC) && (type.is(TIMESTAMP) || type.is(DATE))) {\n    return type;\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 67,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 739,
        "startLineNumber" : 536,
        "startColumnNumber" : 4,
        "endLineNumber" : 550,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static @Nullable LogicalType findCommonTypePattern(LogicalType resultType,LogicalType type){\n  if (resultType.is(DATETIME) && type.is(INTERVAL)) {\n    return resultType;\n  }\n else   if (resultType.is(INTERVAL) && type.is(DATETIME)) {\n    return type;\n  }\n else   if ((resultType.is(TIMESTAMP) || resultType.is(DATE)) && type.is(EXACT_NUMERIC)) {\n    return resultType;\n  }\n else   if (resultType.is(EXACT_NUMERIC) && (type.is(TIMESTAMP) || type.is(DATE))) {\n    return type;\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 83,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 538,
        "startColumnNumber" : 12,
        "endLineNumber" : 538,
        "endColumnNumber" : 56
      },
      "nodeContext" : "resultType.is(DATETIME) && type.is(INTERVAL)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 538,
    "startColumnNumber" : 12,
    "endLineNumber" : 538,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ ]
}