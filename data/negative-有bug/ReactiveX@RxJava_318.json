{
  "id" : 318,
  "expression" : "new DefaultObserver<String>(){\n  @Override public void onComplete(){\n    System.out.println(\"completed\");\n  }\n  @Override public void onError(  Throwable e){\n    error.set(e);\n    System.out.println(\"error\");\n    e.printStackTrace();\n  }\n  @Override public void onNext(  String v){\n    System.out.println(v);\n    count.incrementAndGet();\n  }\n}\n",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/flowable/FlowableTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new DefaultObserver<String>(){\n  @Override public void onComplete(){\n    System.out.println(\"completed\");\n  }\n  @Override public void onError(  Throwable e){\n    error.set(e);\n    System.out.println(\"error\");\n    e.printStackTrace();\n  }\n  @Override public void onNext(  String v){\n    System.out.println(v);\n    count.incrementAndGet();\n  }\n}\n",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 543,
      "startLineNumber" : 414,
      "startColumnNumber" : 19,
      "endLineNumber" : 434,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 70,
    "astHeight" : 8,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 792,
        "startLineNumber" : 408,
        "startColumnNumber" : 8,
        "endLineNumber" : 434,
        "endColumnNumber" : 10
      },
      "nodeContext" : "Flowable.just(\"1\",\"2\").concatWith(Flowable.<String>error(new Supplier<Throwable>(){\n  @Override public Throwable get(){\n    return new NumberFormatException();\n  }\n}\n)).subscribe(new DefaultObserver<String>(){\n  @Override public void onComplete(){\n    System.out.println(\"completed\");\n  }\n  @Override public void onError(  Throwable e){\n    error.set(e);\n    System.out.println(\"error\");\n    e.printStackTrace();\n  }\n  @Override public void onNext(  String v){\n    System.out.println(v);\n    count.incrementAndGet();\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 103,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 793,
        "startLineNumber" : 408,
        "startColumnNumber" : 8,
        "endLineNumber" : 434,
        "endColumnNumber" : 11
      },
      "nodeContext" : "Flowable.just(\"1\",\"2\").concatWith(Flowable.<String>error(new Supplier<Throwable>(){\n  @Override public Throwable get(){\n    return new NumberFormatException();\n  }\n}\n)).subscribe(new DefaultObserver<String>(){\n  @Override public void onComplete(){\n    System.out.println(\"completed\");\n  }\n  @Override public void onError(  Throwable e){\n    error.set(e);\n    System.out.println(\"error\");\n    e.printStackTrace();\n  }\n  @Override public void onNext(  String v){\n    System.out.println(v);\n    count.incrementAndGet();\n  }\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 104,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1197,
        "startLineNumber" : 404,
        "startColumnNumber" : 71,
        "endLineNumber" : 440,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final AtomicInteger count=new AtomicInteger();\n  final AtomicReference<Throwable> error=new AtomicReference<Throwable>();\n  Flowable.just(\"1\",\"2\").concatWith(Flowable.<String>error(new Supplier<Throwable>(){\n    @Override public Throwable get(){\n      return new NumberFormatException();\n    }\n  }\n)).subscribe(new DefaultObserver<String>(){\n    @Override public void onComplete(){\n      System.out.println(\"completed\");\n    }\n    @Override public void onError(    Throwable e){\n      error.set(e);\n      System.out.println(\"error\");\n      e.printStackTrace();\n    }\n    @Override public void onNext(    String v){\n      System.out.println(v);\n      count.incrementAndGet();\n    }\n  }\n);\n  assertEquals(2,count.get());\n  assertNotNull(error.get());\n  if (!(error.get() instanceof NumberFormatException)) {\n    fail(\"It should be a NumberFormatException\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1452,
        "startLineNumber" : 397,
        "startColumnNumber" : 4,
        "endLineNumber" : 440,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * The error from the user provided Observable is handled by the subscribe try/catch because this is synchronous Result: Passes\n */\n@Test public void testCustomObservableWithErrorInObservableSynchronous(){\n  final AtomicInteger count=new AtomicInteger();\n  final AtomicReference<Throwable> error=new AtomicReference<Throwable>();\n  Flowable.just(\"1\",\"2\").concatWith(Flowable.<String>error(new Supplier<Throwable>(){\n    @Override public Throwable get(){\n      return new NumberFormatException();\n    }\n  }\n)).subscribe(new DefaultObserver<String>(){\n    @Override public void onComplete(){\n      System.out.println(\"completed\");\n    }\n    @Override public void onError(    Throwable e){\n      error.set(e);\n      System.out.println(\"error\");\n      e.printStackTrace();\n    }\n    @Override public void onNext(    String v){\n      System.out.println(v);\n      count.incrementAndGet();\n    }\n  }\n);\n  assertEquals(2,count.get());\n  assertNotNull(error.get());\n  if (!(error.get() instanceof NumberFormatException)) {\n    fail(\"It should be a NumberFormatException\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 163,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 792,
        "startLineNumber" : 408,
        "startColumnNumber" : 8,
        "endLineNumber" : 434,
        "endColumnNumber" : 10
      },
      "nodeContext" : "Flowable.just(\"1\",\"2\").concatWith(Flowable.<String>error(new Supplier<Throwable>(){\n  @Override public Throwable get(){\n    return new NumberFormatException();\n  }\n}\n)).subscribe(new DefaultObserver<String>(){\n  @Override public void onComplete(){\n    System.out.println(\"completed\");\n  }\n  @Override public void onError(  Throwable e){\n    error.set(e);\n    System.out.println(\"error\");\n    e.printStackTrace();\n  }\n  @Override public void onNext(  String v){\n    System.out.println(v);\n    count.incrementAndGet();\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 103,
      "astHeight" : 11
    },
    "tokenLength" : 30,
    "type" : ""
  } ],
  "positionList" : [ {
    "charLength" : 543,
    "startLineNumber" : 414,
    "startColumnNumber" : 19,
    "endLineNumber" : 434,
    "endColumnNumber" : 9
  } ],
  "layoutRelationDataList" : [ ]
}