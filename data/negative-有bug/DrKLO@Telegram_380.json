{
  "id" : 380,
  "expression" : "data[i - 2]",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/com/google/android/exoplayer2/util/NalUnitUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "data[i - 2]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 455,
      "startColumnNumber" : 17,
      "endLineNumber" : 455,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 455,
        "startColumnNumber" : 17,
        "endLineNumber" : 455,
        "endColumnNumber" : 33
      },
      "nodeContext" : "data[i - 2] == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 455,
        "startColumnNumber" : 17,
        "endLineNumber" : 455,
        "endColumnNumber" : 53
      },
      "nodeContext" : "data[i - 2] == 0 && data[i - 1] == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 455,
        "startColumnNumber" : 17,
        "endLineNumber" : 455,
        "endColumnNumber" : 69
      },
      "nodeContext" : "data[i - 2] == 0 && data[i - 1] == 0 && data[i] == 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 395,
        "startLineNumber" : 455,
        "startColumnNumber" : 13,
        "endLineNumber" : 464,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (data[i - 2] == 0 && data[i - 1] == 0 && data[i] == 1) {\n  if (prefixFlags != null) {\n    clearPrefixFlags(prefixFlags);\n  }\n  return i - 2;\n}\n else {\n  i-=2;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 41,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 576,
        "startLineNumber" : 452,
        "startColumnNumber" : 6,
        "endLineNumber" : 464,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if ((data[i] & 0xFE) != 0) {\n}\n else if (data[i - 2] == 0 && data[i - 1] == 0 && data[i] == 1) {\n  if (prefixFlags != null) {\n    clearPrefixFlags(prefixFlags);\n  }\n  return i - 2;\n}\n else {\n  i-=2;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 51,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 590,
        "startLineNumber" : 451,
        "startColumnNumber" : 53,
        "endLineNumber" : 465,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if ((data[i] & 0xFE) != 0) {\n  }\n else   if (data[i - 2] == 0 && data[i - 1] == 0 && data[i] == 1) {\n    if (prefixFlags != null) {\n      clearPrefixFlags(prefixFlags);\n    }\n    return i - 2;\n  }\n else {\n    i-=2;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 639,
        "startLineNumber" : 451,
        "startColumnNumber" : 4,
        "endLineNumber" : 465,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=startOffset + 2; i < limit; i+=3) {\n  if ((data[i] & 0xFE) != 0) {\n  }\n else   if (data[i - 2] == 0 && data[i - 1] == 0 && data[i] == 1) {\n    if (prefixFlags != null) {\n      clearPrefixFlags(prefixFlags);\n    }\n    return i - 2;\n  }\n else {\n    i-=2;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 66,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2168,
        "startLineNumber" : 426,
        "startColumnNumber" : 29,
        "endLineNumber" : 481,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int length=endOffset - startOffset;\n  Assertions.checkState(length >= 0);\n  if (length == 0) {\n    return endOffset;\n  }\n  if (prefixFlags != null) {\n    if (prefixFlags[0]) {\n      clearPrefixFlags(prefixFlags);\n      return startOffset - 3;\n    }\n else     if (length > 1 && prefixFlags[1] && data[startOffset] == 1) {\n      clearPrefixFlags(prefixFlags);\n      return startOffset - 2;\n    }\n else     if (length > 2 && prefixFlags[2] && data[startOffset] == 0 && data[startOffset + 1] == 1) {\n      clearPrefixFlags(prefixFlags);\n      return startOffset - 1;\n    }\n  }\n  int limit=endOffset - 1;\n  for (int i=startOffset + 2; i < limit; i+=3) {\n    if ((data[i] & 0xFE) != 0) {\n    }\n else     if (data[i - 2] == 0 && data[i - 1] == 0 && data[i] == 1) {\n      if (prefixFlags != null) {\n        clearPrefixFlags(prefixFlags);\n      }\n      return i - 2;\n    }\n else {\n      i-=2;\n    }\n  }\n  if (prefixFlags != null) {\n    prefixFlags[0]=length > 2 ? (data[endOffset - 3] == 0 && data[endOffset - 2] == 0 && data[endOffset - 1] == 1) : length == 2 ? (prefixFlags[2] && data[endOffset - 2] == 0 && data[endOffset - 1] == 1) : (prefixFlags[1] && data[endOffset - 1] == 1);\n    prefixFlags[1]=length > 1 ? data[endOffset - 2] == 0 && data[endOffset - 1] == 0 : prefixFlags[2] && data[endOffset - 1] == 0;\n    prefixFlags[2]=data[endOffset - 1] == 0;\n  }\n  return endOffset;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 290,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3593,
        "startLineNumber" : 404,
        "startColumnNumber" : 2,
        "endLineNumber" : 481,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Finds the first NAL unit in  {@code data}. <p> If  {@code prefixFlags} is null then the first three bytes of a NAL unit must be entirelycontained within the part of the array being searched in order for it to be found. <p> When  {@code prefixFlags} is non-null, this method supports finding NAL units whose first fourbytes span  {@code data} arrays passed to successive calls. To use this feature, pass the same{@code prefixFlags} parameter to successive calls. State maintained in this parameter enablesthe detection of such NAL units. Note that when using this feature, the return value may be 3, 2 or 1 less than  {@code startOffset}, to indicate a NAL unit starting 3, 2 or 1 bytes before the first byte in the current array.\n * @param data The data to search.\n * @param startOffset The offset (inclusive) in the data to start the search.\n * @param endOffset The offset (exclusive) in the data to end the search.\n * @param prefixFlags A boolean array whose first three elements are used to store the staterequired to detect NAL units where the NAL unit prefix spans array boundaries. The array must be at least 3 elements long.\n * @return The offset of the NAL unit, or {@code endOffset} if a NAL unit was not found.\n */\npublic static int findNalUnit(byte[] data,int startOffset,int endOffset,boolean[] prefixFlags){\n  int length=endOffset - startOffset;\n  Assertions.checkState(length >= 0);\n  if (length == 0) {\n    return endOffset;\n  }\n  if (prefixFlags != null) {\n    if (prefixFlags[0]) {\n      clearPrefixFlags(prefixFlags);\n      return startOffset - 3;\n    }\n else     if (length > 1 && prefixFlags[1] && data[startOffset] == 1) {\n      clearPrefixFlags(prefixFlags);\n      return startOffset - 2;\n    }\n else     if (length > 2 && prefixFlags[2] && data[startOffset] == 0 && data[startOffset + 1] == 1) {\n      clearPrefixFlags(prefixFlags);\n      return startOffset - 1;\n    }\n  }\n  int limit=endOffset - 1;\n  for (int i=startOffset + 2; i < limit; i+=3) {\n    if ((data[i] & 0xFE) != 0) {\n    }\n else     if (data[i - 2] == 0 && data[i - 1] == 0 && data[i] == 1) {\n      if (prefixFlags != null) {\n        clearPrefixFlags(prefixFlags);\n      }\n      return i - 2;\n    }\n else {\n      i-=2;\n    }\n  }\n  if (prefixFlags != null) {\n    prefixFlags[0]=length > 2 ? (data[endOffset - 3] == 0 && data[endOffset - 2] == 0 && data[endOffset - 1] == 1) : length == 2 ? (prefixFlags[2] && data[endOffset - 2] == 0 && data[endOffset - 1] == 1) : (prefixFlags[1] && data[endOffset - 1] == 1);\n    prefixFlags[1]=length > 1 ? data[endOffset - 2] == 0 && data[endOffset - 1] == 0 : prefixFlags[2] && data[endOffset - 1] == 0;\n    prefixFlags[2]=data[endOffset - 1] == 0;\n  }\n  return endOffset;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 312,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 455,
        "startColumnNumber" : 17,
        "endLineNumber" : 455,
        "endColumnNumber" : 69
      },
      "nodeContext" : "data[i - 2] == 0 && data[i - 1] == 0 && data[i] == 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 21,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "byte"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 455,
    "startColumnNumber" : 17,
    "endLineNumber" : 455,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ ]
}