{
  "id" : 120,
  "expression" : "\"employee1:pass1\"",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/spring-5-security/src/test/java/com/baeldung/authresolver/AuthResolverIntegrationTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"employee1:pass1\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 58,
      "startColumnNumber" : 69,
      "endLineNumber" : 58,
      "endColumnNumber" : 86
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 58,
        "startColumnNumber" : 69,
        "endLineNumber" : 58,
        "endColumnNumber" : 97
      },
      "nodeContext" : "\"employee1:pass1\".getBytes()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 58,
        "startColumnNumber" : 42,
        "endLineNumber" : 58,
        "endColumnNumber" : 98
      },
      "nodeContext" : "Base64Utils.encodeToString(\"employee1:pass1\".getBytes())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 58,
        "startColumnNumber" : 31,
        "endLineNumber" : 58,
        "endColumnNumber" : 98
      },
      "nodeContext" : "\"Basic \" + Base64Utils.encodeToString(\"employee1:pass1\".getBytes())",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 56,
        "startColumnNumber" : 19,
        "endLineNumber" : 58,
        "endColumnNumber" : 99
      },
      "nodeContext" : "get(\"/customer/welcome\").header(\"Authorization\",\"Basic \" + Base64Utils.encodeToString(\"employee1:pass1\".getBytes()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 189,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 11
      },
      "nodeContext" : "this.mockMvc.perform(get(\"/customer/welcome\").header(\"Authorization\",\"Basic \" + Base64Utils.encodeToString(\"employee1:pass1\".getBytes())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 237,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 47
      },
      "nodeContext" : "this.mockMvc.perform(get(\"/customer/welcome\").header(\"Authorization\",\"Basic \" + Base64Utils.encodeToString(\"employee1:pass1\".getBytes()))).andExpect(status().isUnauthorized())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 238,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 48
      },
      "nodeContext" : "this.mockMvc.perform(get(\"/customer/welcome\").header(\"Authorization\",\"Basic \" + Base64Utils.encodeToString(\"employee1:pass1\".getBytes()))).andExpect(status().isUnauthorized());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 26,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 254,
        "startLineNumber" : 54,
        "startColumnNumber" : 99,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.mockMvc.perform(get(\"/customer/welcome\").header(\"Authorization\",\"Basic \" + Base64Utils.encodeToString(\"employee1:pass1\".getBytes()))).andExpect(status().isUnauthorized());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 27,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 359,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void givenEmployeeCredential_whenWelcomeCustomer_thenExpect401Status() throws Exception {\n  this.mockMvc.perform(get(\"/customer/welcome\").header(\"Authorization\",\"Basic \" + Base64Utils.encodeToString(\"employee1:pass1\".getBytes()))).andExpect(status().isUnauthorized());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 35,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 58,
        "startColumnNumber" : 31,
        "endLineNumber" : 58,
        "endColumnNumber" : 98
      },
      "nodeContext" : "\"Basic \" + Base64Utils.encodeToString(\"employee1:pass1\".getBytes())",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 58,
    "startColumnNumber" : 69,
    "endLineNumber" : 58,
    "endColumnNumber" : 86
  } ],
  "layoutRelationDataList" : [ ]
}