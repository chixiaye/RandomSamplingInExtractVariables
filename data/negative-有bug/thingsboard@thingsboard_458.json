{
  "id" : 458,
  "expression" : "TransportProtos.ToRuleEngineMsg",
  "projectName" : "thingsboard@thingsboard",
  "commitID" : "7c2b3a9fbf84cc58aa7546029c5c7c10a662c55a",
  "filePath" : "/application/src/main/java/org/thingsboard/server/service/queue/processing/TbRuleEngineProcessingStrategyFactory.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "TransportProtos.ToRuleEngineMsg",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 94,
      "startColumnNumber" : 56,
      "endLineNumber" : 94,
      "endColumnNumber" : 87
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ParameterizedType,typeArguments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 94,
        "startColumnNumber" : 56,
        "endLineNumber" : 94,
        "endColumnNumber" : 87
      },
      "nodeContext" : "TransportProtos.ToRuleEngineMsg",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ParameterizedType,typeArguments]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 94,
        "startColumnNumber" : 40,
        "endLineNumber" : 94,
        "endColumnNumber" : 88
      },
      "nodeContext" : "TbProtoQueueMsg<TransportProtos.ToRuleEngineMsg>",
      "nodeType" : "ParameterizedType",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,type]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 94,
        "startColumnNumber" : 20,
        "endLineNumber" : 94,
        "endColumnNumber" : 89
      },
      "nodeContext" : "ConcurrentMap<UUID,TbProtoQueueMsg<TransportProtos.ToRuleEngineMsg>>",
      "nodeType" : "ParameterizedType",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 94,
        "startColumnNumber" : 20,
        "endLineNumber" : 94,
        "endColumnNumber" : 147
      },
      "nodeContext" : "ConcurrentMap<UUID,TbProtoQueueMsg<TransportProtos.ToRuleEngineMsg>> toReprocess=new ConcurrentHashMap<>(initialTotalCount);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1584,
        "startLineNumber" : 93,
        "startColumnNumber" : 23,
        "endLineNumber" : 119,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  ConcurrentMap<UUID,TbProtoQueueMsg<TransportProtos.ToRuleEngineMsg>> toReprocess=new ConcurrentHashMap<>(initialTotalCount);\n  if (retryFailed) {\n    result.getFailedMap().forEach(toReprocess::put);\n  }\n  if (retryTimeout) {\n    result.getPendingMap().forEach(toReprocess::put);\n  }\n  if (retrySuccessful) {\n    result.getSuccessMap().forEach(toReprocess::put);\n  }\n  log.debug(\"[{}] Going to reprocess {} messages\",queueName,toReprocess.size());\n  if (log.isTraceEnabled()) {\n    toReprocess.forEach((id,msg) -> log.trace(\"Going to reprocess [{}]: {}\",id,TbMsg.fromBytes(result.getQueueName(),msg.getValue().getTbMsg().toByteArray(),TbMsgCallback.EMPTY)));\n  }\n  if (pauseBetweenRetries > 0) {\n    try {\n      Thread.sleep(TimeUnit.SECONDS.toMillis(pauseBetweenRetries));\n    }\n catch (    InterruptedException e) {\n      throw new RuntimeException(e);\n    }\n    if (maxPauseBetweenRetries > pauseBetweenRetries) {\n      pauseBetweenRetries=Math.min(maxPauseBetweenRetries,pauseBetweenRetries * 2);\n    }\n  }\n  return new TbRuleEngineProcessingDecision(false,toReprocess);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 150,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1915,
        "startLineNumber" : 90,
        "startColumnNumber" : 23,
        "endLineNumber" : 119,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (maxAllowedFailurePercentage > 0 && (failedCount / initialTotalCount) > maxAllowedFailurePercentage) {\n  log.debug(\"[{}] Skip reprocess of the rule engine pack due to max allowed failure percentage\",queueName);\n  return new TbRuleEngineProcessingDecision(true,null);\n}\n else {\n  ConcurrentMap<UUID,TbProtoQueueMsg<TransportProtos.ToRuleEngineMsg>> toReprocess=new ConcurrentHashMap<>(initialTotalCount);\n  if (retryFailed) {\n    result.getFailedMap().forEach(toReprocess::put);\n  }\n  if (retryTimeout) {\n    result.getPendingMap().forEach(toReprocess::put);\n  }\n  if (retrySuccessful) {\n    result.getSuccessMap().forEach(toReprocess::put);\n  }\n  log.debug(\"[{}] Going to reprocess {} messages\",queueName,toReprocess.size());\n  if (log.isTraceEnabled()) {\n    toReprocess.forEach((id,msg) -> log.trace(\"Going to reprocess [{}]: {}\",id,TbMsg.fromBytes(result.getQueueName(),msg.getValue().getTbMsg().toByteArray(),TbMsgCallback.EMPTY)));\n  }\n  if (pauseBetweenRetries > 0) {\n    try {\n      Thread.sleep(TimeUnit.SECONDS.toMillis(pauseBetweenRetries));\n    }\n catch (    InterruptedException e) {\n      throw new RuntimeException(e);\n    }\n    if (maxPauseBetweenRetries > pauseBetweenRetries) {\n      pauseBetweenRetries=Math.min(maxPauseBetweenRetries,pauseBetweenRetries * 2);\n    }\n  }\n  return new TbRuleEngineProcessingDecision(false,toReprocess);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 174,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2170,
        "startLineNumber" : 87,
        "startColumnNumber" : 16,
        "endLineNumber" : 119,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (maxRetries > 0 && retryCount > maxRetries) {\n  log.debug(\"[{}] Skip reprocess of the rule engine pack due to max retries\",queueName);\n  return new TbRuleEngineProcessingDecision(true,null);\n}\n else if (maxAllowedFailurePercentage > 0 && (failedCount / initialTotalCount) > maxAllowedFailurePercentage) {\n  log.debug(\"[{}] Skip reprocess of the rule engine pack due to max allowed failure percentage\",queueName);\n  return new TbRuleEngineProcessingDecision(true,null);\n}\n else {\n  ConcurrentMap<UUID,TbProtoQueueMsg<TransportProtos.ToRuleEngineMsg>> toReprocess=new ConcurrentHashMap<>(initialTotalCount);\n  if (retryFailed) {\n    result.getFailedMap().forEach(toReprocess::put);\n  }\n  if (retryTimeout) {\n    result.getPendingMap().forEach(toReprocess::put);\n  }\n  if (retrySuccessful) {\n    result.getSuccessMap().forEach(toReprocess::put);\n  }\n  log.debug(\"[{}] Going to reprocess {} messages\",queueName,toReprocess.size());\n  if (log.isTraceEnabled()) {\n    toReprocess.forEach((id,msg) -> log.trace(\"Going to reprocess [{}]: {}\",id,TbMsg.fromBytes(result.getQueueName(),msg.getValue().getTbMsg().toByteArray(),TbMsgCallback.EMPTY)));\n  }\n  if (pauseBetweenRetries > 0) {\n    try {\n      Thread.sleep(TimeUnit.SECONDS.toMillis(pauseBetweenRetries));\n    }\n catch (    InterruptedException e) {\n      throw new RuntimeException(e);\n    }\n    if (maxPauseBetweenRetries > pauseBetweenRetries) {\n      pauseBetweenRetries=Math.min(maxPauseBetweenRetries,pauseBetweenRetries * 2);\n    }\n  }\n  return new TbRuleEngineProcessingDecision(false,toReprocess);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 195,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2522,
        "startLineNumber" : 81,
        "startColumnNumber" : 19,
        "endLineNumber" : 120,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (retryCount == 0) {\n    initialTotalCount=result.getPendingMap().size() + result.getFailedMap().size() + result.getSuccessMap().size();\n  }\n  retryCount++;\n  double failedCount=result.getFailedMap().size() + result.getPendingMap().size();\n  if (maxRetries > 0 && retryCount > maxRetries) {\n    log.debug(\"[{}] Skip reprocess of the rule engine pack due to max retries\",queueName);\n    return new TbRuleEngineProcessingDecision(true,null);\n  }\n else   if (maxAllowedFailurePercentage > 0 && (failedCount / initialTotalCount) > maxAllowedFailurePercentage) {\n    log.debug(\"[{}] Skip reprocess of the rule engine pack due to max allowed failure percentage\",queueName);\n    return new TbRuleEngineProcessingDecision(true,null);\n  }\n else {\n    ConcurrentMap<UUID,TbProtoQueueMsg<TransportProtos.ToRuleEngineMsg>> toReprocess=new ConcurrentHashMap<>(initialTotalCount);\n    if (retryFailed) {\n      result.getFailedMap().forEach(toReprocess::put);\n    }\n    if (retryTimeout) {\n      result.getPendingMap().forEach(toReprocess::put);\n    }\n    if (retrySuccessful) {\n      result.getSuccessMap().forEach(toReprocess::put);\n    }\n    log.debug(\"[{}] Going to reprocess {} messages\",queueName,toReprocess.size());\n    if (log.isTraceEnabled()) {\n      toReprocess.forEach((id,msg) -> log.trace(\"Going to reprocess [{}]: {}\",id,TbMsg.fromBytes(result.getQueueName(),msg.getValue().getTbMsg().toByteArray(),TbMsgCallback.EMPTY)));\n    }\n    if (pauseBetweenRetries > 0) {\n      try {\n        Thread.sleep(TimeUnit.SECONDS.toMillis(pauseBetweenRetries));\n      }\n catch (      InterruptedException e) {\n        throw new RuntimeException(e);\n      }\n      if (maxPauseBetweenRetries > pauseBetweenRetries) {\n        pauseBetweenRetries=Math.min(maxPauseBetweenRetries,pauseBetweenRetries * 2);\n      }\n    }\n    return new TbRuleEngineProcessingDecision(false,toReprocess);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 238,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2638,
        "startLineNumber" : 79,
        "startColumnNumber" : 12,
        "endLineNumber" : 120,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (result.isSuccess()) {\n  return new TbRuleEngineProcessingDecision(true,null);\n}\n else {\n  if (retryCount == 0) {\n    initialTotalCount=result.getPendingMap().size() + result.getFailedMap().size() + result.getSuccessMap().size();\n  }\n  retryCount++;\n  double failedCount=result.getFailedMap().size() + result.getPendingMap().size();\n  if (maxRetries > 0 && retryCount > maxRetries) {\n    log.debug(\"[{}] Skip reprocess of the rule engine pack due to max retries\",queueName);\n    return new TbRuleEngineProcessingDecision(true,null);\n  }\n else   if (maxAllowedFailurePercentage > 0 && (failedCount / initialTotalCount) > maxAllowedFailurePercentage) {\n    log.debug(\"[{}] Skip reprocess of the rule engine pack due to max allowed failure percentage\",queueName);\n    return new TbRuleEngineProcessingDecision(true,null);\n  }\n else {\n    ConcurrentMap<UUID,TbProtoQueueMsg<TransportProtos.ToRuleEngineMsg>> toReprocess=new ConcurrentHashMap<>(initialTotalCount);\n    if (retryFailed) {\n      result.getFailedMap().forEach(toReprocess::put);\n    }\n    if (retryTimeout) {\n      result.getPendingMap().forEach(toReprocess::put);\n    }\n    if (retrySuccessful) {\n      result.getSuccessMap().forEach(toReprocess::put);\n    }\n    log.debug(\"[{}] Going to reprocess {} messages\",queueName,toReprocess.size());\n    if (log.isTraceEnabled()) {\n      toReprocess.forEach((id,msg) -> log.trace(\"Going to reprocess [{}]: {}\",id,TbMsg.fromBytes(result.getQueueName(),msg.getValue().getTbMsg().toByteArray(),TbMsgCallback.EMPTY)));\n    }\n    if (pauseBetweenRetries > 0) {\n      try {\n        Thread.sleep(TimeUnit.SECONDS.toMillis(pauseBetweenRetries));\n      }\n catch (      InterruptedException e) {\n        throw new RuntimeException(e);\n      }\n      if (maxPauseBetweenRetries > pauseBetweenRetries) {\n        pauseBetweenRetries=Math.min(maxPauseBetweenRetries,pauseBetweenRetries * 2);\n      }\n    }\n    return new TbRuleEngineProcessingDecision(false,toReprocess);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 249,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2662,
        "startLineNumber" : 78,
        "startColumnNumber" : 91,
        "endLineNumber" : 121,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (result.isSuccess()) {\n    return new TbRuleEngineProcessingDecision(true,null);\n  }\n else {\n    if (retryCount == 0) {\n      initialTotalCount=result.getPendingMap().size() + result.getFailedMap().size() + result.getSuccessMap().size();\n    }\n    retryCount++;\n    double failedCount=result.getFailedMap().size() + result.getPendingMap().size();\n    if (maxRetries > 0 && retryCount > maxRetries) {\n      log.debug(\"[{}] Skip reprocess of the rule engine pack due to max retries\",queueName);\n      return new TbRuleEngineProcessingDecision(true,null);\n    }\n else     if (maxAllowedFailurePercentage > 0 && (failedCount / initialTotalCount) > maxAllowedFailurePercentage) {\n      log.debug(\"[{}] Skip reprocess of the rule engine pack due to max allowed failure percentage\",queueName);\n      return new TbRuleEngineProcessingDecision(true,null);\n    }\n else {\n      ConcurrentMap<UUID,TbProtoQueueMsg<TransportProtos.ToRuleEngineMsg>> toReprocess=new ConcurrentHashMap<>(initialTotalCount);\n      if (retryFailed) {\n        result.getFailedMap().forEach(toReprocess::put);\n      }\n      if (retryTimeout) {\n        result.getPendingMap().forEach(toReprocess::put);\n      }\n      if (retrySuccessful) {\n        result.getSuccessMap().forEach(toReprocess::put);\n      }\n      log.debug(\"[{}] Going to reprocess {} messages\",queueName,toReprocess.size());\n      if (log.isTraceEnabled()) {\n        toReprocess.forEach((id,msg) -> log.trace(\"Going to reprocess [{}]: {}\",id,TbMsg.fromBytes(result.getQueueName(),msg.getValue().getTbMsg().toByteArray(),TbMsgCallback.EMPTY)));\n      }\n      if (pauseBetweenRetries > 0) {\n        try {\n          Thread.sleep(TimeUnit.SECONDS.toMillis(pauseBetweenRetries));\n        }\n catch (        InterruptedException e) {\n          throw new RuntimeException(e);\n        }\n        if (maxPauseBetweenRetries > pauseBetweenRetries) {\n          pauseBetweenRetries=Math.min(maxPauseBetweenRetries,pauseBetweenRetries * 2);\n        }\n      }\n      return new TbRuleEngineProcessingDecision(false,toReprocess);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 250,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2763,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 121,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public TbRuleEngineProcessingDecision analyze(TbRuleEngineProcessingResult result){\n  if (result.isSuccess()) {\n    return new TbRuleEngineProcessingDecision(true,null);\n  }\n else {\n    if (retryCount == 0) {\n      initialTotalCount=result.getPendingMap().size() + result.getFailedMap().size() + result.getSuccessMap().size();\n    }\n    retryCount++;\n    double failedCount=result.getFailedMap().size() + result.getPendingMap().size();\n    if (maxRetries > 0 && retryCount > maxRetries) {\n      log.debug(\"[{}] Skip reprocess of the rule engine pack due to max retries\",queueName);\n      return new TbRuleEngineProcessingDecision(true,null);\n    }\n else     if (maxAllowedFailurePercentage > 0 && (failedCount / initialTotalCount) > maxAllowedFailurePercentage) {\n      log.debug(\"[{}] Skip reprocess of the rule engine pack due to max allowed failure percentage\",queueName);\n      return new TbRuleEngineProcessingDecision(true,null);\n    }\n else {\n      ConcurrentMap<UUID,TbProtoQueueMsg<TransportProtos.ToRuleEngineMsg>> toReprocess=new ConcurrentHashMap<>(initialTotalCount);\n      if (retryFailed) {\n        result.getFailedMap().forEach(toReprocess::put);\n      }\n      if (retryTimeout) {\n        result.getPendingMap().forEach(toReprocess::put);\n      }\n      if (retrySuccessful) {\n        result.getSuccessMap().forEach(toReprocess::put);\n      }\n      log.debug(\"[{}] Going to reprocess {} messages\",queueName,toReprocess.size());\n      if (log.isTraceEnabled()) {\n        toReprocess.forEach((id,msg) -> log.trace(\"Going to reprocess [{}]: {}\",id,TbMsg.fromBytes(result.getQueueName(),msg.getValue().getTbMsg().toByteArray(),TbMsgCallback.EMPTY)));\n      }\n      if (pauseBetweenRetries > 0) {\n        try {\n          Thread.sleep(TimeUnit.SECONDS.toMillis(pauseBetweenRetries));\n        }\n catch (        InterruptedException e) {\n          throw new RuntimeException(e);\n        }\n        if (maxPauseBetweenRetries > pauseBetweenRetries) {\n          pauseBetweenRetries=Math.min(maxPauseBetweenRetries,pauseBetweenRetries * 2);\n        }\n      }\n      return new TbRuleEngineProcessingDecision(false,toReprocess);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 261,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 94,
        "startColumnNumber" : 20,
        "endLineNumber" : 94,
        "endColumnNumber" : 147
      },
      "nodeContext" : "ConcurrentMap<UUID,TbProtoQueueMsg<TransportProtos.ToRuleEngineMsg>> toReprocess=new ConcurrentHashMap<>(initialTotalCount);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "TransportProtos"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 94,
    "startColumnNumber" : 56,
    "endLineNumber" : 94,
    "endColumnNumber" : 87
  } ],
  "layoutRelationDataList" : [ ]
}