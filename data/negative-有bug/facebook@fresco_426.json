{
  "id" : 426,
  "expression" : "Build",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/imagepipeline-native/src/main/java/com/facebook/imagepipeline/nativecode/DalvikPurgeableDecoder.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Build",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 92,
      "startColumnNumber" : 8,
      "endLineNumber" : 92,
      "endColumnNumber" : 13
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.QualifiedName,qualifier]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 92,
        "startColumnNumber" : 8,
        "endLineNumber" : 92,
        "endColumnNumber" : 21
      },
      "nodeContext" : "Build.VERSION",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 92,
        "startColumnNumber" : 8,
        "endLineNumber" : 92,
        "endColumnNumber" : 29
      },
      "nodeContext" : "Build.VERSION.SDK_INT",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 92,
        "startColumnNumber" : 8,
        "endLineNumber" : 92,
        "endColumnNumber" : 54
      },
      "nodeContext" : "Build.VERSION.SDK_INT >= Build.VERSION_CODES.O",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 94,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\n  OreoUtils.setColorSpace(options,colorSpace);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 542,
        "startLineNumber" : 89,
        "startColumnNumber" : 45,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  BitmapFactory.Options options=getBitmapFactoryOptions(encodedImage.getSampleSize(),bitmapConfig);\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\n    OreoUtils.setColorSpace(options,colorSpace);\n  }\n  CloseableReference<PooledByteBuffer> bytesRef=encodedImage.getByteBufferRef();\n  Preconditions.checkNotNull(bytesRef);\n  try {\n    Bitmap bitmap=decodeByteArrayAsPurgeable(bytesRef,options);\n    return pinBitmap(bitmap);\n  }\n  finally {\n    CloseableReference.closeSafely(bytesRef);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1508,
        "startLineNumber" : 70,
        "startColumnNumber" : 2,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Creates a bitmap from encoded bytes.\n * @param encodedImage the encoded image with reference to the encoded bytes\n * @param bitmapConfig the {@link android.graphics.Bitmap.Config} used to create the decodedBitmap\n * @param regionToDecode optional image region to decode. currently not supported.\n * @param colorSpace the target color space of the decoded bitmap, must be one of the named colorspace in  {@link android.graphics.ColorSpace.Named}. If null, then SRGB color space is assumed if the SDK version >= 26.\n * @return the bitmap\n * @throws TooManyBitmapsException if the pool is full\n * @throws java.lang.OutOfMemoryError if the Bitmap cannot be allocated\n */\n@Override public CloseableReference<Bitmap> decodeFromEncodedImageWithColorSpace(final EncodedImage encodedImage,Bitmap.Config bitmapConfig,@Nullable Rect regionToDecode,@Nullable final ColorSpace colorSpace){\n  BitmapFactory.Options options=getBitmapFactoryOptions(encodedImage.getSampleSize(),bitmapConfig);\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\n    OreoUtils.setColorSpace(options,colorSpace);\n  }\n  CloseableReference<PooledByteBuffer> bytesRef=encodedImage.getByteBufferRef();\n  Preconditions.checkNotNull(bytesRef);\n  try {\n    Bitmap bitmap=decodeByteArrayAsPurgeable(bytesRef,options);\n    return pinBitmap(bitmap);\n  }\n  finally {\n    CloseableReference.closeSafely(bytesRef);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 92,
        "startColumnNumber" : 8,
        "endLineNumber" : 92,
        "endColumnNumber" : 54
      },
      "nodeContext" : "Build.VERSION.SDK_INT >= Build.VERSION_CODES.O",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "Build",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 92,
      "startColumnNumber" : 33,
      "endLineNumber" : 92,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.QualifiedName,qualifier]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 92,
        "startColumnNumber" : 33,
        "endLineNumber" : 92,
        "endColumnNumber" : 52
      },
      "nodeContext" : "Build.VERSION_CODES",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 92,
        "startColumnNumber" : 33,
        "endLineNumber" : 92,
        "endColumnNumber" : 54
      },
      "nodeContext" : "Build.VERSION_CODES.O",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 92,
        "startColumnNumber" : 8,
        "endLineNumber" : 92,
        "endColumnNumber" : 54
      },
      "nodeContext" : "Build.VERSION.SDK_INT >= Build.VERSION_CODES.O",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 94,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\n  OreoUtils.setColorSpace(options,colorSpace);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 542,
        "startLineNumber" : 89,
        "startColumnNumber" : 45,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  BitmapFactory.Options options=getBitmapFactoryOptions(encodedImage.getSampleSize(),bitmapConfig);\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\n    OreoUtils.setColorSpace(options,colorSpace);\n  }\n  CloseableReference<PooledByteBuffer> bytesRef=encodedImage.getByteBufferRef();\n  Preconditions.checkNotNull(bytesRef);\n  try {\n    Bitmap bitmap=decodeByteArrayAsPurgeable(bytesRef,options);\n    return pinBitmap(bitmap);\n  }\n  finally {\n    CloseableReference.closeSafely(bytesRef);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1508,
        "startLineNumber" : 70,
        "startColumnNumber" : 2,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Creates a bitmap from encoded bytes.\n * @param encodedImage the encoded image with reference to the encoded bytes\n * @param bitmapConfig the {@link android.graphics.Bitmap.Config} used to create the decodedBitmap\n * @param regionToDecode optional image region to decode. currently not supported.\n * @param colorSpace the target color space of the decoded bitmap, must be one of the named colorspace in  {@link android.graphics.ColorSpace.Named}. If null, then SRGB color space is assumed if the SDK version >= 26.\n * @return the bitmap\n * @throws TooManyBitmapsException if the pool is full\n * @throws java.lang.OutOfMemoryError if the Bitmap cannot be allocated\n */\n@Override public CloseableReference<Bitmap> decodeFromEncodedImageWithColorSpace(final EncodedImage encodedImage,Bitmap.Config bitmapConfig,@Nullable Rect regionToDecode,@Nullable final ColorSpace colorSpace){\n  BitmapFactory.Options options=getBitmapFactoryOptions(encodedImage.getSampleSize(),bitmapConfig);\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O) {\n    OreoUtils.setColorSpace(options,colorSpace);\n  }\n  CloseableReference<PooledByteBuffer> bytesRef=encodedImage.getByteBufferRef();\n  Preconditions.checkNotNull(bytesRef);\n  try {\n    Bitmap bitmap=decodeByteArrayAsPurgeable(bytesRef,options);\n    return pinBitmap(bitmap);\n  }\n  finally {\n    CloseableReference.closeSafely(bytesRef);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 92,
        "startColumnNumber" : 8,
        "endLineNumber" : 92,
        "endColumnNumber" : 54
      },
      "nodeContext" : "Build.VERSION.SDK_INT >= Build.VERSION_CODES.O",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 92,
    "startColumnNumber" : 8,
    "endLineNumber" : 92,
    "endColumnNumber" : 13
  }, {
    "charLength" : 5,
    "startLineNumber" : 92,
    "startColumnNumber" : 33,
    "endLineNumber" : 92,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}