{
  "id" : 343,
  "expression" : "\"result:{}\"",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/profiler-test/src/test/java/com/navercorp/pinpoint/test/javasssit/JavaAssistInterceptorTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"result:{}\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 81,
      "startColumnNumber" : 21,
      "endLineNumber" : 81,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 81,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 41
      },
      "nodeContext" : "logger.debug(\"result:{}\",result)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 81,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 42
      },
      "nodeContext" : "logger.debug(\"result:{}\",result);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1925,
        "startLineNumber" : 41,
        "startColumnNumber" : 200,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ClassPool pool=new ClassPool(true);\n  Loader loader=getLoader(pool);\n  CtClass ctClass=pool.get(\"com.navercorp.pinpoint.test.javasssit.mock.TestObject\");\n  CtClass object=pool.get(\"java.lang.String\");\n  logger.debug(\"target:{}\",ctClass);\n  CtMethod callA=ctClass.getDeclaredMethod(\"callA\",null);\n  logger.debug(\"callA:{}\",callA);\n  final String before=\"{ java.lang.Throwable __throwable = null; java.lang.String __test = \\\"abc\\\"; System.out.println(\\\"BEFORE\\\" + __test);\";\n  final String after=\"}\";\n  callA.instrument(new ExprEditor(){\n    @Override public void edit(    MethodCall m) throws CannotCompileException {\n      logger.debug(\"edit class{}\",m.getClassName());\n      try {\n        logger.debug(\"edit method:{}\",m.getMethod().toString());\n      }\n catch (      NotFoundException e) {\n        logger.warn(\"getMethod() fail. Caused:{}\",e.getMessage(),e);\n      }\n      logger.debug(m.getMethodName());\n      m.replace(before + \" try {$_ = $proceed($$); System.out.println(\\\"end---\\\"+ $_);} catch (java.lang.Throwable ex) { __throwable = ex; System.out.println(\\\"catch\\\"); } \" + after);\n    }\n  }\n);\n  Class aClass=loader.loadClass(ctClass.getName());\n  java.lang.reflect.Method callA1=aClass.getMethod(\"callA\");\n  Object target=aClass.newInstance();\n  Object result=callA1.invoke(target);\n  logger.debug(\"result:{}\",result);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 192,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2131,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void afterCatch() throws NotFoundException, CannotCompileException, NoSuchMethodException, IllegalAccessException, InstantiationException, InvocationTargetException, ClassNotFoundException {\n  ClassPool pool=new ClassPool(true);\n  Loader loader=getLoader(pool);\n  CtClass ctClass=pool.get(\"com.navercorp.pinpoint.test.javasssit.mock.TestObject\");\n  CtClass object=pool.get(\"java.lang.String\");\n  logger.debug(\"target:{}\",ctClass);\n  CtMethod callA=ctClass.getDeclaredMethod(\"callA\",null);\n  logger.debug(\"callA:{}\",callA);\n  final String before=\"{ java.lang.Throwable __throwable = null; java.lang.String __test = \\\"abc\\\"; System.out.println(\\\"BEFORE\\\" + __test);\";\n  final String after=\"}\";\n  callA.instrument(new ExprEditor(){\n    @Override public void edit(    MethodCall m) throws CannotCompileException {\n      logger.debug(\"edit class{}\",m.getClassName());\n      try {\n        logger.debug(\"edit method:{}\",m.getMethod().toString());\n      }\n catch (      NotFoundException e) {\n        logger.warn(\"getMethod() fail. Caused:{}\",e.getMessage(),e);\n      }\n      logger.debug(m.getMethodName());\n      m.replace(before + \" try {$_ = $proceed($$); System.out.println(\\\"end---\\\"+ $_);} catch (java.lang.Throwable ex) { __throwable = ex; System.out.println(\\\"catch\\\"); } \" + after);\n    }\n  }\n);\n  Class aClass=loader.loadClass(ctClass.getName());\n  java.lang.reflect.Method callA1=aClass.getMethod(\"callA\");\n  Object target=aClass.newInstance();\n  Object result=callA1.invoke(target);\n  logger.debug(\"result:{}\",result);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 212,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 81,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 42
      },
      "nodeContext" : "logger.debug(\"result:{}\",result);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 81,
    "startColumnNumber" : 21,
    "endLineNumber" : 81,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}