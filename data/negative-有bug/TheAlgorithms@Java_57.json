{
  "id" : 57,
  "expression" : "Arrays",
  "projectName" : "TheAlgorithms@Java",
  "commitID" : "8b243667d736be7d0413cc77159378aa02459db0",
  "filePath" : "/src/main/java/com/thealgorithms/maths/AbsoluteMax.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Arrays",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 22,
      "startColumnNumber" : 8,
      "endLineNumber" : 22,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 22,
        "startColumnNumber" : 8,
        "endLineNumber" : 22,
        "endColumnNumber" : 30
      },
      "nodeContext" : "Arrays.stream(numbers)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 22,
        "startColumnNumber" : 8,
        "endLineNumber" : 23,
        "endColumnNumber" : 24
      },
      "nodeContext" : "Arrays.stream(numbers).skip(1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 22,
        "startColumnNumber" : 8,
        "endLineNumber" : 24,
        "endColumnNumber" : 83
      },
      "nodeContext" : "Arrays.stream(numbers).skip(1).filter(number -> Math.abs(number) > Math.abs(absMaxWrapper.value))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 199,
        "startLineNumber" : 22,
        "startColumnNumber" : 8,
        "endLineNumber" : 25,
        "endColumnNumber" : 64
      },
      "nodeContext" : "Arrays.stream(numbers).skip(1).filter(number -> Math.abs(number) > Math.abs(absMaxWrapper.value)).forEach(number -> absMaxWrapper.value=number)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 200,
        "startLineNumber" : 22,
        "startColumnNumber" : 8,
        "endLineNumber" : 25,
        "endColumnNumber" : 65
      },
      "nodeContext" : "Arrays.stream(numbers).skip(1).filter(number -> Math.abs(number) > Math.abs(absMaxWrapper.value)).forEach(number -> absMaxWrapper.value=number);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 34,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 483,
        "startLineNumber" : 13,
        "startColumnNumber" : 50,
        "endLineNumber" : 28,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (numbers.length == 0) {\n    throw new IllegalArgumentException(\"Numbers array cannot be empty\");\n  }\n  var absMaxWrapper=new Object(){\n    int value=numbers[0];\n  }\n;\n  Arrays.stream(numbers).skip(1).filter(number -> Math.abs(number) > Math.abs(absMaxWrapper.value)).forEach(number -> absMaxWrapper.value=number);\n  return absMaxWrapper.value;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 67,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 719,
        "startLineNumber" : 7,
        "startColumnNumber" : 4,
        "endLineNumber" : 28,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Compares the numbers given as arguments to get the absolute max value.\n * @param numbers The numbers to compare\n * @return The absolute max value\n */\npublic static int getMaxValue(int... numbers){\n  if (numbers.length == 0) {\n    throw new IllegalArgumentException(\"Numbers array cannot be empty\");\n  }\n  var absMaxWrapper=new Object(){\n    int value=numbers[0];\n  }\n;\n  Arrays.stream(numbers).skip(1).filter(number -> Math.abs(number) > Math.abs(absMaxWrapper.value)).forEach(number -> absMaxWrapper.value=number);\n  return absMaxWrapper.value;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 76,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 22,
        "startColumnNumber" : 8,
        "endLineNumber" : 22,
        "endColumnNumber" : 30
      },
      "nodeContext" : "Arrays.stream(numbers)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 22,
    "startColumnNumber" : 8,
    "endLineNumber" : 22,
    "endColumnNumber" : 14
  } ],
  "layoutRelationDataList" : [ ]
}