{
  "id" : 36,
  "expression" : "roots.stream()",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-table/flink-table-planner/src/main/java/org/apache/flink/table/planner/plan/nodes/exec/processor/utils/InputPriorityGraphGenerator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "roots.stream()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 112,
      "startColumnNumber" : 16,
      "endLineNumber" : 112,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 112,
        "startColumnNumber" : 16,
        "endLineNumber" : 112,
        "endColumnNumber" : 72
      },
      "nodeContext" : "roots.stream().allMatch(r -> r instanceof BatchExecNode)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 184,
        "startLineNumber" : 111,
        "startColumnNumber" : 8,
        "endLineNumber" : 113,
        "endColumnNumber" : 81
      },
      "nodeContext" : "Preconditions.checkArgument(roots.stream().allMatch(r -> r instanceof BatchExecNode),\"InputPriorityConflictResolver can only be used for batch jobs.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 185,
        "startLineNumber" : 111,
        "startColumnNumber" : 8,
        "endLineNumber" : 113,
        "endColumnNumber" : 82
      },
      "nodeContext" : "Preconditions.checkArgument(roots.stream().allMatch(r -> r instanceof BatchExecNode),\"InputPriorityConflictResolver can only be used for batch jobs.\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 315,
        "startLineNumber" : 110,
        "startColumnNumber" : 55,
        "endLineNumber" : 117,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Preconditions.checkArgument(roots.stream().allMatch(r -> r instanceof BatchExecNode),\"InputPriorityConflictResolver can only be used for batch jobs.\");\n  this.roots=roots;\n  this.boundaries=boundaries;\n  this.safeDamBehavior=safeDamBehavior;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 36,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 927,
        "startLineNumber" : 99,
        "startColumnNumber" : 4,
        "endLineNumber" : 117,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Create an  {@link InputPriorityGraphGenerator} for the given {@link ExecNode} sub-graph.\n * @param roots the first layer of nodes on the output side of the sub-graph\n * @param boundaries the first layer of nodes on the input side of the sub-graph\n * @param safeDamBehavior when checking for conflicts we'll ignore the edges with {@link InputProperty.DamBehavior} stricter or equal than this\n */\npublic InputPriorityGraphGenerator(List<ExecNode<?>> roots,Set<ExecNode<?>> boundaries,InputProperty.DamBehavior safeDamBehavior){\n  Preconditions.checkArgument(roots.stream().allMatch(r -> r instanceof BatchExecNode),\"InputPriorityConflictResolver can only be used for batch jobs.\");\n  this.roots=roots;\n  this.boundaries=boundaries;\n  this.safeDamBehavior=safeDamBehavior;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 64,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 112,
        "startColumnNumber" : 16,
        "endLineNumber" : 112,
        "endColumnNumber" : 72
      },
      "nodeContext" : "roots.stream().allMatch(r -> r instanceof BatchExecNode)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.util.stream.Stream<org.apache.flink.table.planner.plan.nodes.exec.ExecNode<?>>"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 112,
    "startColumnNumber" : 16,
    "endLineNumber" : 112,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}