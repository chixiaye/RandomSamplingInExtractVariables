{
  "id" : 423,
  "expression" : "from == Bound.EXCLUSIVE && to == Bound.EXCLUSIVE",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/android/guava-testlib/src/com/google/common/collect/testing/NavigableMapTestSuiteBuilder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "from == Bound.EXCLUSIVE && to == Bound.EXCLUSIVE",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 48,
      "startLineNumber" : 99,
      "startColumnNumber" : 17,
      "endLineNumber" : 99,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 11,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 529,
        "startLineNumber" : 99,
        "startColumnNumber" : 13,
        "endLineNumber" : 107,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (from == Bound.EXCLUSIVE && to == Bound.EXCLUSIVE) {\n  return map.subMap(firstExclusive,false,lastExclusive,false);\n}\n else if (from == Bound.EXCLUSIVE && to == Bound.INCLUSIVE) {\n  return map.subMap(firstExclusive,false,lastInclusive,true);\n}\n else if (from == Bound.INCLUSIVE && to == Bound.INCLUSIVE) {\n  return map.subMap(firstInclusive,true,lastInclusive,true);\n}\n else {\n  return (NavigableMap<K,V>)super.createSubMap(map,firstExclusive,lastExclusive);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 78,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 650,
        "startLineNumber" : 97,
        "startColumnNumber" : 13,
        "endLineNumber" : 107,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (from == Bound.EXCLUSIVE && to == Bound.NO_BOUND) {\n  return map.tailMap(firstExclusive,false);\n}\n else if (from == Bound.EXCLUSIVE && to == Bound.EXCLUSIVE) {\n  return map.subMap(firstExclusive,false,lastExclusive,false);\n}\n else if (from == Bound.EXCLUSIVE && to == Bound.INCLUSIVE) {\n  return map.subMap(firstExclusive,false,lastInclusive,true);\n}\n else if (from == Bound.INCLUSIVE && to == Bound.INCLUSIVE) {\n  return map.subMap(firstInclusive,true,lastInclusive,true);\n}\n else {\n  return (NavigableMap<K,V>)super.createSubMap(map,firstExclusive,lastExclusive);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 97,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 769,
        "startLineNumber" : 95,
        "startColumnNumber" : 6,
        "endLineNumber" : 107,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (from == Bound.NO_BOUND && to == Bound.INCLUSIVE) {\n  return map.headMap(lastInclusive,true);\n}\n else if (from == Bound.EXCLUSIVE && to == Bound.NO_BOUND) {\n  return map.tailMap(firstExclusive,false);\n}\n else if (from == Bound.EXCLUSIVE && to == Bound.EXCLUSIVE) {\n  return map.subMap(firstExclusive,false,lastExclusive,false);\n}\n else if (from == Bound.EXCLUSIVE && to == Bound.INCLUSIVE) {\n  return map.subMap(firstExclusive,false,lastInclusive,true);\n}\n else if (from == Bound.INCLUSIVE && to == Bound.INCLUSIVE) {\n  return map.subMap(firstInclusive,true,lastInclusive,true);\n}\n else {\n  return (NavigableMap<K,V>)super.createSubMap(map,firstExclusive,lastExclusive);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 116,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 849,
        "startLineNumber" : 93,
        "startColumnNumber" : 98,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  NavigableMap<K,V> map=(NavigableMap<K,V>)sortedMap;\n  if (from == Bound.NO_BOUND && to == Bound.INCLUSIVE) {\n    return map.headMap(lastInclusive,true);\n  }\n else   if (from == Bound.EXCLUSIVE && to == Bound.NO_BOUND) {\n    return map.tailMap(firstExclusive,false);\n  }\n else   if (from == Bound.EXCLUSIVE && to == Bound.EXCLUSIVE) {\n    return map.subMap(firstExclusive,false,lastExclusive,false);\n  }\n else   if (from == Bound.EXCLUSIVE && to == Bound.INCLUSIVE) {\n    return map.subMap(firstExclusive,false,lastInclusive,true);\n  }\n else   if (from == Bound.INCLUSIVE && to == Bound.INCLUSIVE) {\n    return map.subMap(firstInclusive,true,lastInclusive,true);\n  }\n else {\n    return (NavigableMap<K,V>)super.createSubMap(map,firstExclusive,lastExclusive);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 136,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 958,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 108,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override NavigableMap<K,V> createSubMap(SortedMap<K,V> sortedMap,K firstExclusive,K lastExclusive){\n  NavigableMap<K,V> map=(NavigableMap<K,V>)sortedMap;\n  if (from == Bound.NO_BOUND && to == Bound.INCLUSIVE) {\n    return map.headMap(lastInclusive,true);\n  }\n else   if (from == Bound.EXCLUSIVE && to == Bound.NO_BOUND) {\n    return map.tailMap(firstExclusive,false);\n  }\n else   if (from == Bound.EXCLUSIVE && to == Bound.EXCLUSIVE) {\n    return map.subMap(firstExclusive,false,lastExclusive,false);\n  }\n else   if (from == Bound.EXCLUSIVE && to == Bound.INCLUSIVE) {\n    return map.subMap(firstExclusive,false,lastInclusive,true);\n  }\n else   if (from == Bound.INCLUSIVE && to == Bound.INCLUSIVE) {\n    return map.subMap(firstInclusive,true,lastInclusive,true);\n  }\n else {\n    return (NavigableMap<K,V>)super.createSubMap(map,firstExclusive,lastExclusive);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 164,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 529,
        "startLineNumber" : 99,
        "startColumnNumber" : 13,
        "endLineNumber" : 107,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (from == Bound.EXCLUSIVE && to == Bound.EXCLUSIVE) {\n  return map.subMap(firstExclusive,false,lastExclusive,false);\n}\n else if (from == Bound.EXCLUSIVE && to == Bound.INCLUSIVE) {\n  return map.subMap(firstExclusive,false,lastInclusive,true);\n}\n else if (from == Bound.INCLUSIVE && to == Bound.INCLUSIVE) {\n  return map.subMap(firstInclusive,true,lastInclusive,true);\n}\n else {\n  return (NavigableMap<K,V>)super.createSubMap(map,firstExclusive,lastExclusive);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 78,
      "astHeight" : 9
    },
    "tokenLength" : 9,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 48,
    "startLineNumber" : 99,
    "startColumnNumber" : 17,
    "endLineNumber" : 99,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ ]
}