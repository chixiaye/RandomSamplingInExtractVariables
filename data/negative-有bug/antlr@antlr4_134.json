{
  "id" : 134,
  "expression" : "\"Go\"",
  "projectName" : "antlr@antlr4",
  "commitID" : "f2b93e550cd912be3973743d09206db98f4092c9",
  "filePath" : "/runtime-testsuite/test/org/antlr/v4/test/runtime/RunOptions.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Go\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 36,
      "startColumnNumber" : 89,
      "endLineNumber" : 36,
      "endColumnNumber" : 93
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 36,
        "startColumnNumber" : 73,
        "endLineNumber" : 36,
        "endColumnNumber" : 94
      },
      "nodeContext" : "language.equals(\"Go\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 36,
        "startColumnNumber" : 30,
        "endLineNumber" : 36,
        "endColumnNumber" : 94
      },
      "nodeContext" : "lexerName != null && parserName != null || language.equals(\"Go\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 36,
        "startColumnNumber" : 10,
        "endLineNumber" : 36,
        "endColumnNumber" : 94
      },
      "nodeContext" : "isCombinedGrammar=lexerName != null && parserName != null || language.equals(\"Go\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 36,
        "endColumnNumber" : 95
      },
      "nodeContext" : "boolean isCombinedGrammar=lexerName != null && parserName != null || language.equals(\"Go\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1159,
        "startLineNumber" : 30,
        "startColumnNumber" : 43,
        "endLineNumber" : 68,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  this.grammarFileName=grammarFileName;\n  this.grammarStr=grammarStr;\n  this.parserName=parserName;\n  this.lexerName=lexerName;\n  String grammarName=null;\n  boolean isCombinedGrammar=lexerName != null && parserName != null || language.equals(\"Go\");\n  if (isCombinedGrammar) {\n    if (parserName != null) {\n      grammarName=parserName.endsWith(\"Parser\") ? parserName.substring(0,parserName.length() - \"Parser\".length()) : parserName;\n    }\n else     if (lexerName != null) {\n      grammarName=lexerName.endsWith(\"Lexer\") ? lexerName.substring(0,lexerName.length() - \"Lexer\".length()) : lexerName;\n    }\n  }\n else {\n    if (parserName != null) {\n      grammarName=parserName;\n    }\n else {\n      grammarName=lexerName;\n    }\n  }\n  this.grammarName=grammarName;\n  this.useListener=useListener;\n  this.useVisitor=useVisitor;\n  this.startRuleName=startRuleName;\n  this.input=input;\n  this.profile=profile;\n  this.showDiagnosticErrors=showDiagnosticErrors;\n  this.showDFA=showDFA;\n  this.endStage=endStage;\n  this.returnObject=returnObject;\n  this.superClass=superClass;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 181,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1504,
        "startLineNumber" : 26,
        "startColumnNumber" : 1,
        "endLineNumber" : 68,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public RunOptions(String grammarFileName,String grammarStr,String parserName,String lexerName,boolean useListener,boolean useVisitor,String startRuleName,String input,boolean profile,boolean showDiagnosticErrors,boolean showDFA,Stage endStage,boolean returnObject,String language,String superClass){\n  this.grammarFileName=grammarFileName;\n  this.grammarStr=grammarStr;\n  this.parserName=parserName;\n  this.lexerName=lexerName;\n  String grammarName=null;\n  boolean isCombinedGrammar=lexerName != null && parserName != null || language.equals(\"Go\");\n  if (isCombinedGrammar) {\n    if (parserName != null) {\n      grammarName=parserName.endsWith(\"Parser\") ? parserName.substring(0,parserName.length() - \"Parser\".length()) : parserName;\n    }\n else     if (lexerName != null) {\n      grammarName=lexerName.endsWith(\"Lexer\") ? lexerName.substring(0,lexerName.length() - \"Lexer\".length()) : lexerName;\n    }\n  }\n else {\n    if (parserName != null) {\n      grammarName=parserName;\n    }\n else {\n      grammarName=lexerName;\n    }\n  }\n  this.grammarName=grammarName;\n  this.useListener=useListener;\n  this.useVisitor=useVisitor;\n  this.startRuleName=startRuleName;\n  this.input=input;\n  this.profile=profile;\n  this.showDiagnosticErrors=showDiagnosticErrors;\n  this.showDFA=showDFA;\n  this.endStage=endStage;\n  this.returnObject=returnObject;\n  this.superClass=superClass;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 238,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 36,
        "endColumnNumber" : 95
      },
      "nodeContext" : "boolean isCombinedGrammar=lexerName != null && parserName != null || language.equals(\"Go\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 36,
    "startColumnNumber" : 89,
    "endLineNumber" : 36,
    "endColumnNumber" : 93
  } ],
  "layoutRelationDataList" : [ ]
}