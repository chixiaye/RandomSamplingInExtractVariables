{
  "id" : 392,
  "expression" : "DataSegmentAnnouncer.class",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/server/src/test/java/org/apache/druid/segment/realtime/appenderator/AppenderatorPlumberTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "DataSegmentAnnouncer.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 43,
      "startColumnNumber" : 20,
      "endLineNumber" : 43,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 42,
        "startColumnNumber" : 44,
        "endLineNumber" : 43,
        "endColumnNumber" : 47
      },
      "nodeContext" : "EasyMock.createMock(DataSegmentAnnouncer.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 42,
        "startColumnNumber" : 25,
        "endLineNumber" : 43,
        "endColumnNumber" : 47
      },
      "nodeContext" : "segmentAnnouncer=EasyMock.createMock(DataSegmentAnnouncer.class)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 43,
        "endColumnNumber" : 48
      },
      "nodeContext" : "DataSegmentAnnouncer segmentAnnouncer=EasyMock.createMock(DataSegmentAnnouncer.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1673,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  this.appenderatorTester=new AppenderatorTester(10);\n  DataSegmentAnnouncer segmentAnnouncer=EasyMock.createMock(DataSegmentAnnouncer.class);\n  segmentAnnouncer.announceSegment(EasyMock.anyObject());\n  EasyMock.expectLastCall().anyTimes();\n  SegmentPublisher segmentPublisher=EasyMock.createNiceMock(SegmentPublisher.class);\n  SegmentHandoffNotifierFactory handoffNotifierFactory=EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n  SegmentHandoffNotifier handoffNotifier=EasyMock.createNiceMock(SegmentHandoffNotifier.class);\n  EasyMock.expect(handoffNotifierFactory.createSegmentHandoffNotifier(EasyMock.anyString())).andReturn(handoffNotifier).anyTimes();\n  EasyMock.expect(handoffNotifier.registerSegmentHandoffCallback(EasyMock.anyObject(),EasyMock.anyObject(),EasyMock.anyObject())).andReturn(true).anyTimes();\n  RealtimeTuningConfig tuningConfig=new RealtimeTuningConfig(null,1,null,null,null,null,null,new IntervalStartVersioningPolicy(),new NoopRejectionPolicyFactory(),null,null,null,null,true,0,0,false,null,null,null,null);\n  this.plumber=new AppenderatorPlumber(appenderatorTester.getSchema(),tuningConfig,appenderatorTester.getMetrics(),segmentAnnouncer,segmentPublisher,handoffNotifier,appenderatorTester.getAppenderator());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 157,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1725,
        "startLineNumber" : 39,
        "startColumnNumber" : 2,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public AppenderatorPlumberTest() throws Exception {\n  this.appenderatorTester=new AppenderatorTester(10);\n  DataSegmentAnnouncer segmentAnnouncer=EasyMock.createMock(DataSegmentAnnouncer.class);\n  segmentAnnouncer.announceSegment(EasyMock.anyObject());\n  EasyMock.expectLastCall().anyTimes();\n  SegmentPublisher segmentPublisher=EasyMock.createNiceMock(SegmentPublisher.class);\n  SegmentHandoffNotifierFactory handoffNotifierFactory=EasyMock.createNiceMock(SegmentHandoffNotifierFactory.class);\n  SegmentHandoffNotifier handoffNotifier=EasyMock.createNiceMock(SegmentHandoffNotifier.class);\n  EasyMock.expect(handoffNotifierFactory.createSegmentHandoffNotifier(EasyMock.anyString())).andReturn(handoffNotifier).anyTimes();\n  EasyMock.expect(handoffNotifier.registerSegmentHandoffCallback(EasyMock.anyObject(),EasyMock.anyObject(),EasyMock.anyObject())).andReturn(true).anyTimes();\n  RealtimeTuningConfig tuningConfig=new RealtimeTuningConfig(null,1,null,null,null,null,null,new IntervalStartVersioningPolicy(),new NoopRejectionPolicyFactory(),null,null,null,null,true,0,0,false,null,null,null,null);\n  this.plumber=new AppenderatorPlumber(appenderatorTester.getSchema(),tuningConfig,appenderatorTester.getMetrics(),segmentAnnouncer,segmentPublisher,handoffNotifier,appenderatorTester.getAppenderator());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 162,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 42,
        "startColumnNumber" : 44,
        "endLineNumber" : 43,
        "endColumnNumber" : 47
      },
      "nodeContext" : "EasyMock.createMock(DataSegmentAnnouncer.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<org.apache.druid.server.coordination.DataSegmentAnnouncer>"
  } ],
  "positionList" : [ {
    "charLength" : 26,
    "startLineNumber" : 43,
    "startColumnNumber" : 20,
    "endLineNumber" : 43,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ ]
}