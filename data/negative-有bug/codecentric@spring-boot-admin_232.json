{
  "id" : 232,
  "expression" : "\"GET\"",
  "projectName" : "codecentric@spring-boot-admin",
  "commitID" : "cc544df47d4bcdf7138ca3e264797778fb39920a",
  "filePath" : "/spring-boot-admin-server-ui/src/test/java/de/codecentric/boot/admin/server/ui/config/AdminServerUiAutoConfigurationTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"GET\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 119,
      "startColumnNumber" : 78,
      "endLineNumber" : 119,
      "endColumnNumber" : 83
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 119,
        "startColumnNumber" : 51,
        "endLineNumber" : 119,
        "endColumnNumber" : 99
      },
      "nodeContext" : "new MockHttpServletRequest(\"GET\",routeExcludes)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 119,
        "startColumnNumber" : 47,
        "endLineNumber" : 119,
        "endColumnNumber" : 100
      },
      "nodeContext" : "spy(new MockHttpServletRequest(\"GET\",routeExcludes))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 119,
        "startColumnNumber" : 26,
        "endLineNumber" : 119,
        "endColumnNumber" : 100
      },
      "nodeContext" : "httpServletRequest=spy(new MockHttpServletRequest(\"GET\",routeExcludes))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 119,
        "startColumnNumber" : 3,
        "endLineNumber" : 119,
        "endColumnNumber" : 101
      },
      "nodeContext" : "MockHttpServletRequest httpServletRequest=spy(new MockHttpServletRequest(\"GET\",routeExcludes));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 714,
        "startLineNumber" : 118,
        "startColumnNumber" : 75,
        "endLineNumber" : 130,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  MockHttpServletRequest httpServletRequest=spy(new MockHttpServletRequest(\"GET\",routeExcludes));\n  httpServletRequest.addHeader(HttpHeaders.ACCEPT,MediaType.TEXT_HTML_VALUE);\n  this.contextRunner.withUserConfiguration(SpringBootAdminServerEnabledCondition.class,AdminServerMarkerConfiguration.Marker.class).run((context) -> {\n    de.codecentric.boot.admin.server.ui.web.servlet.HomepageForwardingFilter bean=context.getBean(de.codecentric.boot.admin.server.ui.web.servlet.HomepageForwardingFilter.class);\n    bean.doFilter(httpServletRequest,mock(ServletResponse.class),mock(FilterChain.class));\n    verify(httpServletRequest,never()).getRequestDispatcher(any());\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 938,
        "startLineNumber" : 115,
        "startColumnNumber" : 2,
        "endLineNumber" : 130,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@ParameterizedTest @CsvSource({\"/test/extensions/myextension\",\"/test/instances/1/actuator/heapdump\",\"/test/instances/1/actuator/logfile\"}) public void contextPathIsRespectedInExcludedRoutes(String routeExcludes){\n  MockHttpServletRequest httpServletRequest=spy(new MockHttpServletRequest(\"GET\",routeExcludes));\n  httpServletRequest.addHeader(HttpHeaders.ACCEPT,MediaType.TEXT_HTML_VALUE);\n  this.contextRunner.withUserConfiguration(SpringBootAdminServerEnabledCondition.class,AdminServerMarkerConfiguration.Marker.class).run((context) -> {\n    de.codecentric.boot.admin.server.ui.web.servlet.HomepageForwardingFilter bean=context.getBean(de.codecentric.boot.admin.server.ui.web.servlet.HomepageForwardingFilter.class);\n    bean.doFilter(httpServletRequest,mock(ServletResponse.class),mock(FilterChain.class));\n    verify(httpServletRequest,never()).getRequestDispatcher(any());\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 127,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 119,
        "startColumnNumber" : 3,
        "endLineNumber" : 119,
        "endColumnNumber" : 101
      },
      "nodeContext" : "MockHttpServletRequest httpServletRequest=spy(new MockHttpServletRequest(\"GET\",routeExcludes));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 119,
    "startColumnNumber" : 78,
    "endLineNumber" : 119,
    "endColumnNumber" : 83
  } ],
  "layoutRelationDataList" : [ ]
}