{
  "id" : 328,
  "expression" : "buf",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/processing/src/main/java/org/apache/druid/query/aggregation/BufferAggregator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "buf",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 151,
      "startColumnNumber" : 29,
      "endLineNumber" : 151,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 151,
        "startColumnNumber" : 20,
        "endLineNumber" : 151,
        "endColumnNumber" : 43
      },
      "nodeContext" : "getFloat(buf,position)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 151,
        "startColumnNumber" : 11,
        "endLineNumber" : 151,
        "endColumnNumber" : 43
      },
      "nodeContext" : "(double)getFloat(buf,position)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 151,
        "startColumnNumber" : 4,
        "endLineNumber" : 151,
        "endColumnNumber" : 44
      },
      "nodeContext" : "return (double)getFloat(buf,position);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 150,
        "startColumnNumber" : 2,
        "endLineNumber" : 152,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  return (double)getFloat(buf,position);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1192,
        "startLineNumber" : 130,
        "startColumnNumber" : 2,
        "endLineNumber" : 152,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns the double representation of the given aggregate byte array Converts the given byte buffer representation into the intermediate aggregate value. <b>Implementations must not change the position, limit or mark of the given buffer</b> Implementations are only required to support this method if they are aggregations which have an  {@link AggregatorFactory#getType()} of  of {@link org.apache.druid.segment.column.ValueType#DOUBLE}. If unimplemented, throwing an  {@link UnsupportedOperationException} is common and recommended.The default implementation casts  {@link BufferAggregator#getFloat(ByteBuffer,int)} to double.This default method is added to enable smooth backward compatibility, please re-implement it if your aggregators work with numeric double columns.\n * @param buf byte buffer storing the byte array representation of the aggregate\n * @param position offset within the byte buffer at which the aggregate value is stored\n * @return the double representation of the aggregate\n */\ndefault double getDouble(ByteBuffer buf,int position){\n  return (double)getFloat(buf,position);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 20,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 151,
        "startColumnNumber" : 4,
        "endLineNumber" : 151,
        "endColumnNumber" : 44
      },
      "nodeContext" : "return (double)getFloat(buf,position);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.nio.ByteBuffer"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 151,
    "startColumnNumber" : 29,
    "endLineNumber" : 151,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}