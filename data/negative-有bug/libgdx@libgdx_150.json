{
  "id" : 150,
  "expression" : "(value >> 31)",
  "projectName" : "libgdx@libgdx",
  "commitID" : "3485b16e8979c0141421bc80cb8831b7a0403f67",
  "filePath" : "/gdx/src/com/badlogic/gdx/utils/DataOutput.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(value >> 31)",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 35,
      "startColumnNumber" : 48,
      "endLineNumber" : 35,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 35,
        "startColumnNumber" : 33,
        "endLineNumber" : 35,
        "endColumnNumber" : 61
      },
      "nodeContext" : "(value << 1) ^ (value >> 31)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 35,
        "startColumnNumber" : 25,
        "endLineNumber" : 35,
        "endColumnNumber" : 61
      },
      "nodeContext" : "value=(value << 1) ^ (value >> 31)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 35,
        "startColumnNumber" : 25,
        "endLineNumber" : 35,
        "endColumnNumber" : 62
      },
      "nodeContext" : "value=(value << 1) ^ (value >> 31);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 35,
        "startColumnNumber" : 2,
        "endLineNumber" : 35,
        "endColumnNumber" : 62
      },
      "nodeContext" : "if (!optimizePositive) value=(value << 1) ^ (value >> 31);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 580,
        "startLineNumber" : 34,
        "startColumnNumber" : 78,
        "endLineNumber" : 58,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (!optimizePositive)   value=(value << 1) ^ (value >> 31);\n  if (value >>> 7 == 0) {\n    write((byte)value);\n    return 1;\n  }\n  write((byte)((value & 0x7F) | 0x80));\n  if (value >>> 14 == 0) {\n    write((byte)(value >>> 7));\n    return 2;\n  }\n  write((byte)(value >>> 7 | 0x80));\n  if (value >>> 21 == 0) {\n    write((byte)(value >>> 14));\n    return 3;\n  }\n  write((byte)(value >>> 14 | 0x80));\n  if (value >>> 28 == 0) {\n    write((byte)(value >>> 21));\n    return 4;\n  }\n  write((byte)(value >>> 21 | 0x80));\n  write((byte)(value >>> 28));\n  return 5;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 855,
        "startLineNumber" : 31,
        "startColumnNumber" : 1,
        "endLineNumber" : 58,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Writes a 1-5 byte int.\n * @param optimizePositive If true, small positive numbers will be more efficient (1 byte) and small negative numbers will beinefficient (5 bytes). \n */\npublic int writeInt(int value,boolean optimizePositive) throws IOException {\n  if (!optimizePositive)   value=(value << 1) ^ (value >> 31);\n  if (value >>> 7 == 0) {\n    write((byte)value);\n    return 1;\n  }\n  write((byte)((value & 0x7F) | 0x80));\n  if (value >>> 14 == 0) {\n    write((byte)(value >>> 7));\n    return 2;\n  }\n  write((byte)(value >>> 7 | 0x80));\n  if (value >>> 21 == 0) {\n    write((byte)(value >>> 14));\n    return 3;\n  }\n  write((byte)(value >>> 14 | 0x80));\n  if (value >>> 28 == 0) {\n    write((byte)(value >>> 21));\n    return 4;\n  }\n  write((byte)(value >>> 21 | 0x80));\n  write((byte)(value >>> 28));\n  return 5;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 154,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 35,
        "startColumnNumber" : 2,
        "endLineNumber" : 35,
        "endColumnNumber" : 62
      },
      "nodeContext" : "if (!optimizePositive) value=(value << 1) ^ (value >> 31);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 35,
    "startColumnNumber" : 48,
    "endLineNumber" : 35,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ ]
}