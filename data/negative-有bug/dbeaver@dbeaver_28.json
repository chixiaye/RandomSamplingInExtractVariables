{
  "id" : 28,
  "expression" : "scanner.read()",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.model.sql/src/org/jkiss/dbeaver/model/text/parser/rules/NumberRule.java",
  "occurrences" : 7,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "scanner.read()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 54,
      "startColumnNumber" : 17,
      "endLineNumber" : 54,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 54,
        "startColumnNumber" : 12,
        "endLineNumber" : 54,
        "endColumnNumber" : 31
      },
      "nodeContext" : "ch=scanner.read()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 32
      },
      "nodeContext" : "int ch=scanner.read();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1961,
        "startLineNumber" : 53,
        "startColumnNumber" : 56,
        "endLineNumber" : 118,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int ch=scanner.read();\n  int chCount=1;\n  if (!Character.isDigit(ch)) {\n    return undefined(scanner,1);\n  }\n  boolean seenDecimalSeparator=false;\n  boolean seenScientificNotation=false;\n  int radix=RADIX_DECIMAL;\n  if (ch == '0') {\n    int ch1=scanner.read();\n    if (ch1 == 'x' || ch1 == 'X') {\n      ch1=scanner.read();\n      if (CommonUtils.isDigit(ch1,16)) {\n        radix=RADIX_HEXADECIMAL;\n      }\n else {\n        return undefined(scanner,3);\n      }\n    }\n else {\n      scanner.unread();\n    }\n  }\n  while (true) {\n    if (radix == RADIX_DECIMAL && ch == '.') {\n      if (seenDecimalSeparator) {\n        return undefined(scanner,chCount);\n      }\n      ch=scanner.read();\n      chCount++;\n      if (ch < '0' || ch > '9') {\n        return undefined(scanner,chCount);\n      }\n      seenDecimalSeparator=true;\n      continue;\n    }\n    if (radix == RADIX_DECIMAL && (ch == 'e' || ch == 'E')) {\n      if (seenScientificNotation) {\n        return undefined(scanner,chCount);\n      }\n      ch=scanner.read();\n      chCount++;\n      if (ch == '+' || ch == '-') {\n        ch=scanner.read();\n        chCount++;\n      }\n      if (ch < '0' || ch > '9') {\n        return undefined(scanner,chCount);\n      }\n      seenScientificNotation=true;\n      continue;\n    }\n    if (!CommonUtils.isDigit(ch,radix)) {\n      scanner.unread();\n      return fToken;\n    }\n    ch=scanner.read();\n    chCount++;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 228,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2027,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 118,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public TPToken evaluate(TPCharacterScanner scanner){\n  int ch=scanner.read();\n  int chCount=1;\n  if (!Character.isDigit(ch)) {\n    return undefined(scanner,1);\n  }\n  boolean seenDecimalSeparator=false;\n  boolean seenScientificNotation=false;\n  int radix=RADIX_DECIMAL;\n  if (ch == '0') {\n    int ch1=scanner.read();\n    if (ch1 == 'x' || ch1 == 'X') {\n      ch1=scanner.read();\n      if (CommonUtils.isDigit(ch1,16)) {\n        radix=RADIX_HEXADECIMAL;\n      }\n else {\n        return undefined(scanner,3);\n      }\n    }\n else {\n      scanner.unread();\n    }\n  }\n  while (true) {\n    if (radix == RADIX_DECIMAL && ch == '.') {\n      if (seenDecimalSeparator) {\n        return undefined(scanner,chCount);\n      }\n      ch=scanner.read();\n      chCount++;\n      if (ch < '0' || ch > '9') {\n        return undefined(scanner,chCount);\n      }\n      seenDecimalSeparator=true;\n      continue;\n    }\n    if (radix == RADIX_DECIMAL && (ch == 'e' || ch == 'E')) {\n      if (seenScientificNotation) {\n        return undefined(scanner,chCount);\n      }\n      ch=scanner.read();\n      chCount++;\n      if (ch == '+' || ch == '-') {\n        ch=scanner.read();\n        chCount++;\n      }\n      if (ch < '0' || ch > '9') {\n        return undefined(scanner,chCount);\n      }\n      seenScientificNotation=true;\n      continue;\n    }\n    if (!CommonUtils.isDigit(ch,radix)) {\n      scanner.unread();\n      return fToken;\n    }\n    ch=scanner.read();\n    chCount++;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 239,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 32
      },
      "nodeContext" : "int ch=scanner.read();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  }, {
    "nodeContext" : "scanner.read()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 66,
      "startColumnNumber" : 22,
      "endLineNumber" : 66,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 66,
        "startColumnNumber" : 16,
        "endLineNumber" : 66,
        "endColumnNumber" : 36
      },
      "nodeContext" : "ch1=scanner.read()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 66,
        "startColumnNumber" : 12,
        "endLineNumber" : 66,
        "endColumnNumber" : 37
      },
      "nodeContext" : "int ch1=scanner.read();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 392,
        "startLineNumber" : 65,
        "startColumnNumber" : 23,
        "endLineNumber" : 77,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int ch1=scanner.read();\n  if (ch1 == 'x' || ch1 == 'X') {\n    ch1=scanner.read();\n    if (CommonUtils.isDigit(ch1,16)) {\n      radix=RADIX_HEXADECIMAL;\n    }\n else {\n      return undefined(scanner,3);\n    }\n  }\n else {\n    scanner.unread();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 407,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (ch == '0') {\n  int ch1=scanner.read();\n  if (ch1 == 'x' || ch1 == 'X') {\n    ch1=scanner.read();\n    if (CommonUtils.isDigit(ch1,16)) {\n      radix=RADIX_HEXADECIMAL;\n    }\n else {\n      return undefined(scanner,3);\n    }\n  }\n else {\n    scanner.unread();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 49,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1961,
        "startLineNumber" : 53,
        "startColumnNumber" : 56,
        "endLineNumber" : 118,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int ch=scanner.read();\n  int chCount=1;\n  if (!Character.isDigit(ch)) {\n    return undefined(scanner,1);\n  }\n  boolean seenDecimalSeparator=false;\n  boolean seenScientificNotation=false;\n  int radix=RADIX_DECIMAL;\n  if (ch == '0') {\n    int ch1=scanner.read();\n    if (ch1 == 'x' || ch1 == 'X') {\n      ch1=scanner.read();\n      if (CommonUtils.isDigit(ch1,16)) {\n        radix=RADIX_HEXADECIMAL;\n      }\n else {\n        return undefined(scanner,3);\n      }\n    }\n else {\n      scanner.unread();\n    }\n  }\n  while (true) {\n    if (radix == RADIX_DECIMAL && ch == '.') {\n      if (seenDecimalSeparator) {\n        return undefined(scanner,chCount);\n      }\n      ch=scanner.read();\n      chCount++;\n      if (ch < '0' || ch > '9') {\n        return undefined(scanner,chCount);\n      }\n      seenDecimalSeparator=true;\n      continue;\n    }\n    if (radix == RADIX_DECIMAL && (ch == 'e' || ch == 'E')) {\n      if (seenScientificNotation) {\n        return undefined(scanner,chCount);\n      }\n      ch=scanner.read();\n      chCount++;\n      if (ch == '+' || ch == '-') {\n        ch=scanner.read();\n        chCount++;\n      }\n      if (ch < '0' || ch > '9') {\n        return undefined(scanner,chCount);\n      }\n      seenScientificNotation=true;\n      continue;\n    }\n    if (!CommonUtils.isDigit(ch,radix)) {\n      scanner.unread();\n      return fToken;\n    }\n    ch=scanner.read();\n    chCount++;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 228,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2027,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 118,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public TPToken evaluate(TPCharacterScanner scanner){\n  int ch=scanner.read();\n  int chCount=1;\n  if (!Character.isDigit(ch)) {\n    return undefined(scanner,1);\n  }\n  boolean seenDecimalSeparator=false;\n  boolean seenScientificNotation=false;\n  int radix=RADIX_DECIMAL;\n  if (ch == '0') {\n    int ch1=scanner.read();\n    if (ch1 == 'x' || ch1 == 'X') {\n      ch1=scanner.read();\n      if (CommonUtils.isDigit(ch1,16)) {\n        radix=RADIX_HEXADECIMAL;\n      }\n else {\n        return undefined(scanner,3);\n      }\n    }\n else {\n      scanner.unread();\n    }\n  }\n  while (true) {\n    if (radix == RADIX_DECIMAL && ch == '.') {\n      if (seenDecimalSeparator) {\n        return undefined(scanner,chCount);\n      }\n      ch=scanner.read();\n      chCount++;\n      if (ch < '0' || ch > '9') {\n        return undefined(scanner,chCount);\n      }\n      seenDecimalSeparator=true;\n      continue;\n    }\n    if (radix == RADIX_DECIMAL && (ch == 'e' || ch == 'E')) {\n      if (seenScientificNotation) {\n        return undefined(scanner,chCount);\n      }\n      ch=scanner.read();\n      chCount++;\n      if (ch == '+' || ch == '-') {\n        ch=scanner.read();\n        chCount++;\n      }\n      if (ch < '0' || ch > '9') {\n        return undefined(scanner,chCount);\n      }\n      seenScientificNotation=true;\n      continue;\n    }\n    if (!CommonUtils.isDigit(ch,radix)) {\n      scanner.unread();\n      return fToken;\n    }\n    ch=scanner.read();\n    chCount++;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 239,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 66,
        "startColumnNumber" : 12,
        "endLineNumber" : 66,
        "endColumnNumber" : 37
      },
      "nodeContext" : "int ch1=scanner.read();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  }, {
    "nodeContext" : "scanner.read()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 68,
      "startColumnNumber" : 22,
      "endLineNumber" : 68,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 68,
        "startColumnNumber" : 16,
        "endLineNumber" : 68,
        "endColumnNumber" : 36
      },
      "nodeContext" : "ch1=scanner.read()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 68,
        "startColumnNumber" : 16,
        "endLineNumber" : 68,
        "endColumnNumber" : 37
      },
      "nodeContext" : "ch1=scanner.read();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 245,
        "startLineNumber" : 67,
        "startColumnNumber" : 42,
        "endLineNumber" : 74,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  ch1=scanner.read();\n  if (CommonUtils.isDigit(ch1,16)) {\n    radix=RADIX_HEXADECIMAL;\n  }\n else {\n    return undefined(scanner,3);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 330,
        "startLineNumber" : 67,
        "startColumnNumber" : 12,
        "endLineNumber" : 76,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (ch1 == 'x' || ch1 == 'X') {\n  ch1=scanner.read();\n  if (CommonUtils.isDigit(ch1,16)) {\n    radix=RADIX_HEXADECIMAL;\n  }\n else {\n    return undefined(scanner,3);\n  }\n}\n else {\n  scanner.unread();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 37,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 392,
        "startLineNumber" : 65,
        "startColumnNumber" : 23,
        "endLineNumber" : 77,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int ch1=scanner.read();\n  if (ch1 == 'x' || ch1 == 'X') {\n    ch1=scanner.read();\n    if (CommonUtils.isDigit(ch1,16)) {\n      radix=RADIX_HEXADECIMAL;\n    }\n else {\n      return undefined(scanner,3);\n    }\n  }\n else {\n    scanner.unread();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 407,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (ch == '0') {\n  int ch1=scanner.read();\n  if (ch1 == 'x' || ch1 == 'X') {\n    ch1=scanner.read();\n    if (CommonUtils.isDigit(ch1,16)) {\n      radix=RADIX_HEXADECIMAL;\n    }\n else {\n      return undefined(scanner,3);\n    }\n  }\n else {\n    scanner.unread();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 49,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1961,
        "startLineNumber" : 53,
        "startColumnNumber" : 56,
        "endLineNumber" : 118,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int ch=scanner.read();\n  int chCount=1;\n  if (!Character.isDigit(ch)) {\n    return undefined(scanner,1);\n  }\n  boolean seenDecimalSeparator=false;\n  boolean seenScientificNotation=false;\n  int radix=RADIX_DECIMAL;\n  if (ch == '0') {\n    int ch1=scanner.read();\n    if (ch1 == 'x' || ch1 == 'X') {\n      ch1=scanner.read();\n      if (CommonUtils.isDigit(ch1,16)) {\n        radix=RADIX_HEXADECIMAL;\n      }\n else {\n        return undefined(scanner,3);\n      }\n    }\n else {\n      scanner.unread();\n    }\n  }\n  while (true) {\n    if (radix == RADIX_DECIMAL && ch == '.') {\n      if (seenDecimalSeparator) {\n        return undefined(scanner,chCount);\n      }\n      ch=scanner.read();\n      chCount++;\n      if (ch < '0' || ch > '9') {\n        return undefined(scanner,chCount);\n      }\n      seenDecimalSeparator=true;\n      continue;\n    }\n    if (radix == RADIX_DECIMAL && (ch == 'e' || ch == 'E')) {\n      if (seenScientificNotation) {\n        return undefined(scanner,chCount);\n      }\n      ch=scanner.read();\n      chCount++;\n      if (ch == '+' || ch == '-') {\n        ch=scanner.read();\n        chCount++;\n      }\n      if (ch < '0' || ch > '9') {\n        return undefined(scanner,chCount);\n      }\n      seenScientificNotation=true;\n      continue;\n    }\n    if (!CommonUtils.isDigit(ch,radix)) {\n      scanner.unread();\n      return fToken;\n    }\n    ch=scanner.read();\n    chCount++;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 228,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2027,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 118,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public TPToken evaluate(TPCharacterScanner scanner){\n  int ch=scanner.read();\n  int chCount=1;\n  if (!Character.isDigit(ch)) {\n    return undefined(scanner,1);\n  }\n  boolean seenDecimalSeparator=false;\n  boolean seenScientificNotation=false;\n  int radix=RADIX_DECIMAL;\n  if (ch == '0') {\n    int ch1=scanner.read();\n    if (ch1 == 'x' || ch1 == 'X') {\n      ch1=scanner.read();\n      if (CommonUtils.isDigit(ch1,16)) {\n        radix=RADIX_HEXADECIMAL;\n      }\n else {\n        return undefined(scanner,3);\n      }\n    }\n else {\n      scanner.unread();\n    }\n  }\n  while (true) {\n    if (radix == RADIX_DECIMAL && ch == '.') {\n      if (seenDecimalSeparator) {\n        return undefined(scanner,chCount);\n      }\n      ch=scanner.read();\n      chCount++;\n      if (ch < '0' || ch > '9') {\n        return undefined(scanner,chCount);\n      }\n      seenDecimalSeparator=true;\n      continue;\n    }\n    if (radix == RADIX_DECIMAL && (ch == 'e' || ch == 'E')) {\n      if (seenScientificNotation) {\n        return undefined(scanner,chCount);\n      }\n      ch=scanner.read();\n      chCount++;\n      if (ch == '+' || ch == '-') {\n        ch=scanner.read();\n        chCount++;\n      }\n      if (ch < '0' || ch > '9') {\n        return undefined(scanner,chCount);\n      }\n      seenScientificNotation=true;\n      continue;\n    }\n    if (!CommonUtils.isDigit(ch,radix)) {\n      scanner.unread();\n      return fToken;\n    }\n    ch=scanner.read();\n    chCount++;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 239,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 68,
        "startColumnNumber" : 16,
        "endLineNumber" : 68,
        "endColumnNumber" : 37
      },
      "nodeContext" : "ch1=scanner.read();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  }, {
    "nodeContext" : "scanner.read()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 84,
      "startColumnNumber" : 21,
      "endLineNumber" : 84,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 84,
        "startColumnNumber" : 16,
        "endLineNumber" : 84,
        "endColumnNumber" : 35
      },
      "nodeContext" : "ch=scanner.read()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 84,
        "startColumnNumber" : 16,
        "endLineNumber" : 84,
        "endColumnNumber" : 36
      },
      "nodeContext" : "ch=scanner.read();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 386,
        "startLineNumber" : 80,
        "startColumnNumber" : 53,
        "endLineNumber" : 91,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (seenDecimalSeparator) {\n    return undefined(scanner,chCount);\n  }\n  ch=scanner.read();\n  chCount++;\n  if (ch < '0' || ch > '9') {\n    return undefined(scanner,chCount);\n  }\n  seenDecimalSeparator=true;\n  continue;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 427,
        "startLineNumber" : 80,
        "startColumnNumber" : 12,
        "endLineNumber" : 91,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (radix == RADIX_DECIMAL && ch == '.') {\n  if (seenDecimalSeparator) {\n    return undefined(scanner,chCount);\n  }\n  ch=scanner.read();\n  chCount++;\n  if (ch < '0' || ch > '9') {\n    return undefined(scanner,chCount);\n  }\n  seenDecimalSeparator=true;\n  continue;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 45,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1235,
        "startLineNumber" : 79,
        "startColumnNumber" : 21,
        "endLineNumber" : 117,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (radix == RADIX_DECIMAL && ch == '.') {\n    if (seenDecimalSeparator) {\n      return undefined(scanner,chCount);\n    }\n    ch=scanner.read();\n    chCount++;\n    if (ch < '0' || ch > '9') {\n      return undefined(scanner,chCount);\n    }\n    seenDecimalSeparator=true;\n    continue;\n  }\n  if (radix == RADIX_DECIMAL && (ch == 'e' || ch == 'E')) {\n    if (seenScientificNotation) {\n      return undefined(scanner,chCount);\n    }\n    ch=scanner.read();\n    chCount++;\n    if (ch == '+' || ch == '-') {\n      ch=scanner.read();\n      chCount++;\n    }\n    if (ch < '0' || ch > '9') {\n      return undefined(scanner,chCount);\n    }\n    seenScientificNotation=true;\n    continue;\n  }\n  if (!CommonUtils.isDigit(ch,radix)) {\n    scanner.unread();\n    return fToken;\n  }\n  ch=scanner.read();\n  chCount++;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 137,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1248,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 117,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (true) {\n  if (radix == RADIX_DECIMAL && ch == '.') {\n    if (seenDecimalSeparator) {\n      return undefined(scanner,chCount);\n    }\n    ch=scanner.read();\n    chCount++;\n    if (ch < '0' || ch > '9') {\n      return undefined(scanner,chCount);\n    }\n    seenDecimalSeparator=true;\n    continue;\n  }\n  if (radix == RADIX_DECIMAL && (ch == 'e' || ch == 'E')) {\n    if (seenScientificNotation) {\n      return undefined(scanner,chCount);\n    }\n    ch=scanner.read();\n    chCount++;\n    if (ch == '+' || ch == '-') {\n      ch=scanner.read();\n      chCount++;\n    }\n    if (ch < '0' || ch > '9') {\n      return undefined(scanner,chCount);\n    }\n    seenScientificNotation=true;\n    continue;\n  }\n  if (!CommonUtils.isDigit(ch,radix)) {\n    scanner.unread();\n    return fToken;\n  }\n  ch=scanner.read();\n  chCount++;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 139,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1961,
        "startLineNumber" : 53,
        "startColumnNumber" : 56,
        "endLineNumber" : 118,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int ch=scanner.read();\n  int chCount=1;\n  if (!Character.isDigit(ch)) {\n    return undefined(scanner,1);\n  }\n  boolean seenDecimalSeparator=false;\n  boolean seenScientificNotation=false;\n  int radix=RADIX_DECIMAL;\n  if (ch == '0') {\n    int ch1=scanner.read();\n    if (ch1 == 'x' || ch1 == 'X') {\n      ch1=scanner.read();\n      if (CommonUtils.isDigit(ch1,16)) {\n        radix=RADIX_HEXADECIMAL;\n      }\n else {\n        return undefined(scanner,3);\n      }\n    }\n else {\n      scanner.unread();\n    }\n  }\n  while (true) {\n    if (radix == RADIX_DECIMAL && ch == '.') {\n      if (seenDecimalSeparator) {\n        return undefined(scanner,chCount);\n      }\n      ch=scanner.read();\n      chCount++;\n      if (ch < '0' || ch > '9') {\n        return undefined(scanner,chCount);\n      }\n      seenDecimalSeparator=true;\n      continue;\n    }\n    if (radix == RADIX_DECIMAL && (ch == 'e' || ch == 'E')) {\n      if (seenScientificNotation) {\n        return undefined(scanner,chCount);\n      }\n      ch=scanner.read();\n      chCount++;\n      if (ch == '+' || ch == '-') {\n        ch=scanner.read();\n        chCount++;\n      }\n      if (ch < '0' || ch > '9') {\n        return undefined(scanner,chCount);\n      }\n      seenScientificNotation=true;\n      continue;\n    }\n    if (!CommonUtils.isDigit(ch,radix)) {\n      scanner.unread();\n      return fToken;\n    }\n    ch=scanner.read();\n    chCount++;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 228,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2027,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 118,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public TPToken evaluate(TPCharacterScanner scanner){\n  int ch=scanner.read();\n  int chCount=1;\n  if (!Character.isDigit(ch)) {\n    return undefined(scanner,1);\n  }\n  boolean seenDecimalSeparator=false;\n  boolean seenScientificNotation=false;\n  int radix=RADIX_DECIMAL;\n  if (ch == '0') {\n    int ch1=scanner.read();\n    if (ch1 == 'x' || ch1 == 'X') {\n      ch1=scanner.read();\n      if (CommonUtils.isDigit(ch1,16)) {\n        radix=RADIX_HEXADECIMAL;\n      }\n else {\n        return undefined(scanner,3);\n      }\n    }\n else {\n      scanner.unread();\n    }\n  }\n  while (true) {\n    if (radix == RADIX_DECIMAL && ch == '.') {\n      if (seenDecimalSeparator) {\n        return undefined(scanner,chCount);\n      }\n      ch=scanner.read();\n      chCount++;\n      if (ch < '0' || ch > '9') {\n        return undefined(scanner,chCount);\n      }\n      seenDecimalSeparator=true;\n      continue;\n    }\n    if (radix == RADIX_DECIMAL && (ch == 'e' || ch == 'E')) {\n      if (seenScientificNotation) {\n        return undefined(scanner,chCount);\n      }\n      ch=scanner.read();\n      chCount++;\n      if (ch == '+' || ch == '-') {\n        ch=scanner.read();\n        chCount++;\n      }\n      if (ch < '0' || ch > '9') {\n        return undefined(scanner,chCount);\n      }\n      seenScientificNotation=true;\n      continue;\n    }\n    if (!CommonUtils.isDigit(ch,radix)) {\n      scanner.unread();\n      return fToken;\n    }\n    ch=scanner.read();\n    chCount++;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 239,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 84,
        "startColumnNumber" : 16,
        "endLineNumber" : 84,
        "endColumnNumber" : 36
      },
      "nodeContext" : "ch=scanner.read();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  }, {
    "nodeContext" : "scanner.read()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 97,
      "startColumnNumber" : 21,
      "endLineNumber" : 97,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 97,
        "startColumnNumber" : 16,
        "endLineNumber" : 97,
        "endColumnNumber" : 35
      },
      "nodeContext" : "ch=scanner.read()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 97,
        "startColumnNumber" : 16,
        "endLineNumber" : 97,
        "endColumnNumber" : 36
      },
      "nodeContext" : "ch=scanner.read();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 526,
        "startLineNumber" : 93,
        "startColumnNumber" : 68,
        "endLineNumber" : 108,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (seenScientificNotation) {\n    return undefined(scanner,chCount);\n  }\n  ch=scanner.read();\n  chCount++;\n  if (ch == '+' || ch == '-') {\n    ch=scanner.read();\n    chCount++;\n  }\n  if (ch < '0' || ch > '9') {\n    return undefined(scanner,chCount);\n  }\n  seenScientificNotation=true;\n  continue;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 582,
        "startLineNumber" : 93,
        "startColumnNumber" : 12,
        "endLineNumber" : 108,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (radix == RADIX_DECIMAL && (ch == 'e' || ch == 'E')) {\n  if (seenScientificNotation) {\n    return undefined(scanner,chCount);\n  }\n  ch=scanner.read();\n  chCount++;\n  if (ch == '+' || ch == '-') {\n    ch=scanner.read();\n    chCount++;\n  }\n  if (ch < '0' || ch > '9') {\n    return undefined(scanner,chCount);\n  }\n  seenScientificNotation=true;\n  continue;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 68,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1235,
        "startLineNumber" : 79,
        "startColumnNumber" : 21,
        "endLineNumber" : 117,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (radix == RADIX_DECIMAL && ch == '.') {\n    if (seenDecimalSeparator) {\n      return undefined(scanner,chCount);\n    }\n    ch=scanner.read();\n    chCount++;\n    if (ch < '0' || ch > '9') {\n      return undefined(scanner,chCount);\n    }\n    seenDecimalSeparator=true;\n    continue;\n  }\n  if (radix == RADIX_DECIMAL && (ch == 'e' || ch == 'E')) {\n    if (seenScientificNotation) {\n      return undefined(scanner,chCount);\n    }\n    ch=scanner.read();\n    chCount++;\n    if (ch == '+' || ch == '-') {\n      ch=scanner.read();\n      chCount++;\n    }\n    if (ch < '0' || ch > '9') {\n      return undefined(scanner,chCount);\n    }\n    seenScientificNotation=true;\n    continue;\n  }\n  if (!CommonUtils.isDigit(ch,radix)) {\n    scanner.unread();\n    return fToken;\n  }\n  ch=scanner.read();\n  chCount++;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 137,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1248,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 117,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (true) {\n  if (radix == RADIX_DECIMAL && ch == '.') {\n    if (seenDecimalSeparator) {\n      return undefined(scanner,chCount);\n    }\n    ch=scanner.read();\n    chCount++;\n    if (ch < '0' || ch > '9') {\n      return undefined(scanner,chCount);\n    }\n    seenDecimalSeparator=true;\n    continue;\n  }\n  if (radix == RADIX_DECIMAL && (ch == 'e' || ch == 'E')) {\n    if (seenScientificNotation) {\n      return undefined(scanner,chCount);\n    }\n    ch=scanner.read();\n    chCount++;\n    if (ch == '+' || ch == '-') {\n      ch=scanner.read();\n      chCount++;\n    }\n    if (ch < '0' || ch > '9') {\n      return undefined(scanner,chCount);\n    }\n    seenScientificNotation=true;\n    continue;\n  }\n  if (!CommonUtils.isDigit(ch,radix)) {\n    scanner.unread();\n    return fToken;\n  }\n  ch=scanner.read();\n  chCount++;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 139,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1961,
        "startLineNumber" : 53,
        "startColumnNumber" : 56,
        "endLineNumber" : 118,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int ch=scanner.read();\n  int chCount=1;\n  if (!Character.isDigit(ch)) {\n    return undefined(scanner,1);\n  }\n  boolean seenDecimalSeparator=false;\n  boolean seenScientificNotation=false;\n  int radix=RADIX_DECIMAL;\n  if (ch == '0') {\n    int ch1=scanner.read();\n    if (ch1 == 'x' || ch1 == 'X') {\n      ch1=scanner.read();\n      if (CommonUtils.isDigit(ch1,16)) {\n        radix=RADIX_HEXADECIMAL;\n      }\n else {\n        return undefined(scanner,3);\n      }\n    }\n else {\n      scanner.unread();\n    }\n  }\n  while (true) {\n    if (radix == RADIX_DECIMAL && ch == '.') {\n      if (seenDecimalSeparator) {\n        return undefined(scanner,chCount);\n      }\n      ch=scanner.read();\n      chCount++;\n      if (ch < '0' || ch > '9') {\n        return undefined(scanner,chCount);\n      }\n      seenDecimalSeparator=true;\n      continue;\n    }\n    if (radix == RADIX_DECIMAL && (ch == 'e' || ch == 'E')) {\n      if (seenScientificNotation) {\n        return undefined(scanner,chCount);\n      }\n      ch=scanner.read();\n      chCount++;\n      if (ch == '+' || ch == '-') {\n        ch=scanner.read();\n        chCount++;\n      }\n      if (ch < '0' || ch > '9') {\n        return undefined(scanner,chCount);\n      }\n      seenScientificNotation=true;\n      continue;\n    }\n    if (!CommonUtils.isDigit(ch,radix)) {\n      scanner.unread();\n      return fToken;\n    }\n    ch=scanner.read();\n    chCount++;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 228,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2027,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 118,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public TPToken evaluate(TPCharacterScanner scanner){\n  int ch=scanner.read();\n  int chCount=1;\n  if (!Character.isDigit(ch)) {\n    return undefined(scanner,1);\n  }\n  boolean seenDecimalSeparator=false;\n  boolean seenScientificNotation=false;\n  int radix=RADIX_DECIMAL;\n  if (ch == '0') {\n    int ch1=scanner.read();\n    if (ch1 == 'x' || ch1 == 'X') {\n      ch1=scanner.read();\n      if (CommonUtils.isDigit(ch1,16)) {\n        radix=RADIX_HEXADECIMAL;\n      }\n else {\n        return undefined(scanner,3);\n      }\n    }\n else {\n      scanner.unread();\n    }\n  }\n  while (true) {\n    if (radix == RADIX_DECIMAL && ch == '.') {\n      if (seenDecimalSeparator) {\n        return undefined(scanner,chCount);\n      }\n      ch=scanner.read();\n      chCount++;\n      if (ch < '0' || ch > '9') {\n        return undefined(scanner,chCount);\n      }\n      seenDecimalSeparator=true;\n      continue;\n    }\n    if (radix == RADIX_DECIMAL && (ch == 'e' || ch == 'E')) {\n      if (seenScientificNotation) {\n        return undefined(scanner,chCount);\n      }\n      ch=scanner.read();\n      chCount++;\n      if (ch == '+' || ch == '-') {\n        ch=scanner.read();\n        chCount++;\n      }\n      if (ch < '0' || ch > '9') {\n        return undefined(scanner,chCount);\n      }\n      seenScientificNotation=true;\n      continue;\n    }\n    if (!CommonUtils.isDigit(ch,radix)) {\n      scanner.unread();\n      return fToken;\n    }\n    ch=scanner.read();\n    chCount++;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 239,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 97,
        "startColumnNumber" : 16,
        "endLineNumber" : 97,
        "endColumnNumber" : 36
      },
      "nodeContext" : "ch=scanner.read();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  }, {
    "nodeContext" : "scanner.read()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 100,
      "startColumnNumber" : 25,
      "endLineNumber" : 100,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 100,
        "startColumnNumber" : 20,
        "endLineNumber" : 100,
        "endColumnNumber" : 39
      },
      "nodeContext" : "ch=scanner.read()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 100,
        "startColumnNumber" : 20,
        "endLineNumber" : 100,
        "endColumnNumber" : 40
      },
      "nodeContext" : "ch=scanner.read();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 99,
        "startColumnNumber" : 44,
        "endLineNumber" : 102,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  ch=scanner.read();\n  chCount++;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 99,
        "startColumnNumber" : 16,
        "endLineNumber" : 102,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (ch == '+' || ch == '-') {\n  ch=scanner.read();\n  chCount++;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 526,
        "startLineNumber" : 93,
        "startColumnNumber" : 68,
        "endLineNumber" : 108,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (seenScientificNotation) {\n    return undefined(scanner,chCount);\n  }\n  ch=scanner.read();\n  chCount++;\n  if (ch == '+' || ch == '-') {\n    ch=scanner.read();\n    chCount++;\n  }\n  if (ch < '0' || ch > '9') {\n    return undefined(scanner,chCount);\n  }\n  seenScientificNotation=true;\n  continue;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 582,
        "startLineNumber" : 93,
        "startColumnNumber" : 12,
        "endLineNumber" : 108,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (radix == RADIX_DECIMAL && (ch == 'e' || ch == 'E')) {\n  if (seenScientificNotation) {\n    return undefined(scanner,chCount);\n  }\n  ch=scanner.read();\n  chCount++;\n  if (ch == '+' || ch == '-') {\n    ch=scanner.read();\n    chCount++;\n  }\n  if (ch < '0' || ch > '9') {\n    return undefined(scanner,chCount);\n  }\n  seenScientificNotation=true;\n  continue;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 68,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1235,
        "startLineNumber" : 79,
        "startColumnNumber" : 21,
        "endLineNumber" : 117,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (radix == RADIX_DECIMAL && ch == '.') {\n    if (seenDecimalSeparator) {\n      return undefined(scanner,chCount);\n    }\n    ch=scanner.read();\n    chCount++;\n    if (ch < '0' || ch > '9') {\n      return undefined(scanner,chCount);\n    }\n    seenDecimalSeparator=true;\n    continue;\n  }\n  if (radix == RADIX_DECIMAL && (ch == 'e' || ch == 'E')) {\n    if (seenScientificNotation) {\n      return undefined(scanner,chCount);\n    }\n    ch=scanner.read();\n    chCount++;\n    if (ch == '+' || ch == '-') {\n      ch=scanner.read();\n      chCount++;\n    }\n    if (ch < '0' || ch > '9') {\n      return undefined(scanner,chCount);\n    }\n    seenScientificNotation=true;\n    continue;\n  }\n  if (!CommonUtils.isDigit(ch,radix)) {\n    scanner.unread();\n    return fToken;\n  }\n  ch=scanner.read();\n  chCount++;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 137,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1248,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 117,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (true) {\n  if (radix == RADIX_DECIMAL && ch == '.') {\n    if (seenDecimalSeparator) {\n      return undefined(scanner,chCount);\n    }\n    ch=scanner.read();\n    chCount++;\n    if (ch < '0' || ch > '9') {\n      return undefined(scanner,chCount);\n    }\n    seenDecimalSeparator=true;\n    continue;\n  }\n  if (radix == RADIX_DECIMAL && (ch == 'e' || ch == 'E')) {\n    if (seenScientificNotation) {\n      return undefined(scanner,chCount);\n    }\n    ch=scanner.read();\n    chCount++;\n    if (ch == '+' || ch == '-') {\n      ch=scanner.read();\n      chCount++;\n    }\n    if (ch < '0' || ch > '9') {\n      return undefined(scanner,chCount);\n    }\n    seenScientificNotation=true;\n    continue;\n  }\n  if (!CommonUtils.isDigit(ch,radix)) {\n    scanner.unread();\n    return fToken;\n  }\n  ch=scanner.read();\n  chCount++;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 139,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1961,
        "startLineNumber" : 53,
        "startColumnNumber" : 56,
        "endLineNumber" : 118,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int ch=scanner.read();\n  int chCount=1;\n  if (!Character.isDigit(ch)) {\n    return undefined(scanner,1);\n  }\n  boolean seenDecimalSeparator=false;\n  boolean seenScientificNotation=false;\n  int radix=RADIX_DECIMAL;\n  if (ch == '0') {\n    int ch1=scanner.read();\n    if (ch1 == 'x' || ch1 == 'X') {\n      ch1=scanner.read();\n      if (CommonUtils.isDigit(ch1,16)) {\n        radix=RADIX_HEXADECIMAL;\n      }\n else {\n        return undefined(scanner,3);\n      }\n    }\n else {\n      scanner.unread();\n    }\n  }\n  while (true) {\n    if (radix == RADIX_DECIMAL && ch == '.') {\n      if (seenDecimalSeparator) {\n        return undefined(scanner,chCount);\n      }\n      ch=scanner.read();\n      chCount++;\n      if (ch < '0' || ch > '9') {\n        return undefined(scanner,chCount);\n      }\n      seenDecimalSeparator=true;\n      continue;\n    }\n    if (radix == RADIX_DECIMAL && (ch == 'e' || ch == 'E')) {\n      if (seenScientificNotation) {\n        return undefined(scanner,chCount);\n      }\n      ch=scanner.read();\n      chCount++;\n      if (ch == '+' || ch == '-') {\n        ch=scanner.read();\n        chCount++;\n      }\n      if (ch < '0' || ch > '9') {\n        return undefined(scanner,chCount);\n      }\n      seenScientificNotation=true;\n      continue;\n    }\n    if (!CommonUtils.isDigit(ch,radix)) {\n      scanner.unread();\n      return fToken;\n    }\n    ch=scanner.read();\n    chCount++;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 228,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2027,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 118,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public TPToken evaluate(TPCharacterScanner scanner){\n  int ch=scanner.read();\n  int chCount=1;\n  if (!Character.isDigit(ch)) {\n    return undefined(scanner,1);\n  }\n  boolean seenDecimalSeparator=false;\n  boolean seenScientificNotation=false;\n  int radix=RADIX_DECIMAL;\n  if (ch == '0') {\n    int ch1=scanner.read();\n    if (ch1 == 'x' || ch1 == 'X') {\n      ch1=scanner.read();\n      if (CommonUtils.isDigit(ch1,16)) {\n        radix=RADIX_HEXADECIMAL;\n      }\n else {\n        return undefined(scanner,3);\n      }\n    }\n else {\n      scanner.unread();\n    }\n  }\n  while (true) {\n    if (radix == RADIX_DECIMAL && ch == '.') {\n      if (seenDecimalSeparator) {\n        return undefined(scanner,chCount);\n      }\n      ch=scanner.read();\n      chCount++;\n      if (ch < '0' || ch > '9') {\n        return undefined(scanner,chCount);\n      }\n      seenDecimalSeparator=true;\n      continue;\n    }\n    if (radix == RADIX_DECIMAL && (ch == 'e' || ch == 'E')) {\n      if (seenScientificNotation) {\n        return undefined(scanner,chCount);\n      }\n      ch=scanner.read();\n      chCount++;\n      if (ch == '+' || ch == '-') {\n        ch=scanner.read();\n        chCount++;\n      }\n      if (ch < '0' || ch > '9') {\n        return undefined(scanner,chCount);\n      }\n      seenScientificNotation=true;\n      continue;\n    }\n    if (!CommonUtils.isDigit(ch,radix)) {\n      scanner.unread();\n      return fToken;\n    }\n    ch=scanner.read();\n    chCount++;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 239,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 100,
        "startColumnNumber" : 20,
        "endLineNumber" : 100,
        "endColumnNumber" : 40
      },
      "nodeContext" : "ch=scanner.read();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  }, {
    "nodeContext" : "scanner.read()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 115,
      "startColumnNumber" : 17,
      "endLineNumber" : 115,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 115,
        "startColumnNumber" : 12,
        "endLineNumber" : 115,
        "endColumnNumber" : 31
      },
      "nodeContext" : "ch=scanner.read()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 115,
        "startColumnNumber" : 12,
        "endLineNumber" : 115,
        "endColumnNumber" : 32
      },
      "nodeContext" : "ch=scanner.read();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1235,
        "startLineNumber" : 79,
        "startColumnNumber" : 21,
        "endLineNumber" : 117,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (radix == RADIX_DECIMAL && ch == '.') {\n    if (seenDecimalSeparator) {\n      return undefined(scanner,chCount);\n    }\n    ch=scanner.read();\n    chCount++;\n    if (ch < '0' || ch > '9') {\n      return undefined(scanner,chCount);\n    }\n    seenDecimalSeparator=true;\n    continue;\n  }\n  if (radix == RADIX_DECIMAL && (ch == 'e' || ch == 'E')) {\n    if (seenScientificNotation) {\n      return undefined(scanner,chCount);\n    }\n    ch=scanner.read();\n    chCount++;\n    if (ch == '+' || ch == '-') {\n      ch=scanner.read();\n      chCount++;\n    }\n    if (ch < '0' || ch > '9') {\n      return undefined(scanner,chCount);\n    }\n    seenScientificNotation=true;\n    continue;\n  }\n  if (!CommonUtils.isDigit(ch,radix)) {\n    scanner.unread();\n    return fToken;\n  }\n  ch=scanner.read();\n  chCount++;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 137,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1248,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 117,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (true) {\n  if (radix == RADIX_DECIMAL && ch == '.') {\n    if (seenDecimalSeparator) {\n      return undefined(scanner,chCount);\n    }\n    ch=scanner.read();\n    chCount++;\n    if (ch < '0' || ch > '9') {\n      return undefined(scanner,chCount);\n    }\n    seenDecimalSeparator=true;\n    continue;\n  }\n  if (radix == RADIX_DECIMAL && (ch == 'e' || ch == 'E')) {\n    if (seenScientificNotation) {\n      return undefined(scanner,chCount);\n    }\n    ch=scanner.read();\n    chCount++;\n    if (ch == '+' || ch == '-') {\n      ch=scanner.read();\n      chCount++;\n    }\n    if (ch < '0' || ch > '9') {\n      return undefined(scanner,chCount);\n    }\n    seenScientificNotation=true;\n    continue;\n  }\n  if (!CommonUtils.isDigit(ch,radix)) {\n    scanner.unread();\n    return fToken;\n  }\n  ch=scanner.read();\n  chCount++;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 139,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1961,
        "startLineNumber" : 53,
        "startColumnNumber" : 56,
        "endLineNumber" : 118,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int ch=scanner.read();\n  int chCount=1;\n  if (!Character.isDigit(ch)) {\n    return undefined(scanner,1);\n  }\n  boolean seenDecimalSeparator=false;\n  boolean seenScientificNotation=false;\n  int radix=RADIX_DECIMAL;\n  if (ch == '0') {\n    int ch1=scanner.read();\n    if (ch1 == 'x' || ch1 == 'X') {\n      ch1=scanner.read();\n      if (CommonUtils.isDigit(ch1,16)) {\n        radix=RADIX_HEXADECIMAL;\n      }\n else {\n        return undefined(scanner,3);\n      }\n    }\n else {\n      scanner.unread();\n    }\n  }\n  while (true) {\n    if (radix == RADIX_DECIMAL && ch == '.') {\n      if (seenDecimalSeparator) {\n        return undefined(scanner,chCount);\n      }\n      ch=scanner.read();\n      chCount++;\n      if (ch < '0' || ch > '9') {\n        return undefined(scanner,chCount);\n      }\n      seenDecimalSeparator=true;\n      continue;\n    }\n    if (radix == RADIX_DECIMAL && (ch == 'e' || ch == 'E')) {\n      if (seenScientificNotation) {\n        return undefined(scanner,chCount);\n      }\n      ch=scanner.read();\n      chCount++;\n      if (ch == '+' || ch == '-') {\n        ch=scanner.read();\n        chCount++;\n      }\n      if (ch < '0' || ch > '9') {\n        return undefined(scanner,chCount);\n      }\n      seenScientificNotation=true;\n      continue;\n    }\n    if (!CommonUtils.isDigit(ch,radix)) {\n      scanner.unread();\n      return fToken;\n    }\n    ch=scanner.read();\n    chCount++;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 228,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2027,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 118,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public TPToken evaluate(TPCharacterScanner scanner){\n  int ch=scanner.read();\n  int chCount=1;\n  if (!Character.isDigit(ch)) {\n    return undefined(scanner,1);\n  }\n  boolean seenDecimalSeparator=false;\n  boolean seenScientificNotation=false;\n  int radix=RADIX_DECIMAL;\n  if (ch == '0') {\n    int ch1=scanner.read();\n    if (ch1 == 'x' || ch1 == 'X') {\n      ch1=scanner.read();\n      if (CommonUtils.isDigit(ch1,16)) {\n        radix=RADIX_HEXADECIMAL;\n      }\n else {\n        return undefined(scanner,3);\n      }\n    }\n else {\n      scanner.unread();\n    }\n  }\n  while (true) {\n    if (radix == RADIX_DECIMAL && ch == '.') {\n      if (seenDecimalSeparator) {\n        return undefined(scanner,chCount);\n      }\n      ch=scanner.read();\n      chCount++;\n      if (ch < '0' || ch > '9') {\n        return undefined(scanner,chCount);\n      }\n      seenDecimalSeparator=true;\n      continue;\n    }\n    if (radix == RADIX_DECIMAL && (ch == 'e' || ch == 'E')) {\n      if (seenScientificNotation) {\n        return undefined(scanner,chCount);\n      }\n      ch=scanner.read();\n      chCount++;\n      if (ch == '+' || ch == '-') {\n        ch=scanner.read();\n        chCount++;\n      }\n      if (ch < '0' || ch > '9') {\n        return undefined(scanner,chCount);\n      }\n      seenScientificNotation=true;\n      continue;\n    }\n    if (!CommonUtils.isDigit(ch,radix)) {\n      scanner.unread();\n      return fToken;\n    }\n    ch=scanner.read();\n    chCount++;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 239,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 115,
        "startColumnNumber" : 12,
        "endLineNumber" : 115,
        "endColumnNumber" : 32
      },
      "nodeContext" : "ch=scanner.read();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 54,
    "startColumnNumber" : 17,
    "endLineNumber" : 54,
    "endColumnNumber" : 31
  }, {
    "charLength" : 14,
    "startLineNumber" : 66,
    "startColumnNumber" : 22,
    "endLineNumber" : 66,
    "endColumnNumber" : 36
  }, {
    "charLength" : 14,
    "startLineNumber" : 68,
    "startColumnNumber" : 22,
    "endLineNumber" : 68,
    "endColumnNumber" : 36
  }, {
    "charLength" : 14,
    "startLineNumber" : 84,
    "startColumnNumber" : 21,
    "endLineNumber" : 84,
    "endColumnNumber" : 35
  }, {
    "charLength" : 14,
    "startLineNumber" : 97,
    "startColumnNumber" : 21,
    "endLineNumber" : 97,
    "endColumnNumber" : 35
  }, {
    "charLength" : 14,
    "startLineNumber" : 100,
    "startColumnNumber" : 25,
    "endLineNumber" : 100,
    "endColumnNumber" : 39
  }, {
    "charLength" : 14,
    "startLineNumber" : 115,
    "startColumnNumber" : 17,
    "endLineNumber" : 115,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 2
  } ]
}