{
  "id" : 294,
  "expression" : "TYPE_BROADCAST_RECEIVER",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/apkparser/AndroidParser.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "TYPE_BROADCAST_RECEIVER",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 271,
      "startColumnNumber" : 73,
      "endLineNumber" : 271,
      "endColumnNumber" : 96
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 271,
        "startColumnNumber" : 46,
        "endLineNumber" : 271,
        "endColumnNumber" : 97
      },
      "nodeContext" : "getAndroidComponent(child,TYPE_BROADCAST_RECEIVER)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 271,
        "startColumnNumber" : 32,
        "endLineNumber" : 271,
        "endColumnNumber" : 98
      },
      "nodeContext" : "receivers.add(getAndroidComponent(child,TYPE_BROADCAST_RECEIVER))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 271,
        "startColumnNumber" : 32,
        "endLineNumber" : 271,
        "endColumnNumber" : 99
      },
      "nodeContext" : "receivers.add(getAndroidComponent(child,TYPE_BROADCAST_RECEIVER));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1132,
        "startLineNumber" : 263,
        "startColumnNumber" : 24,
        "endLineNumber" : 282,
        "endColumnNumber" : 25
      },
      "nodeContext" : "switch (childName) {\ncase \"service\":  services.add(getAndroidComponent(child,TYPE_SERVICE));\nbreak;\ncase \"activity\":activities.add(getAndroidComponent(child,TYPE_ACTIVITY));\nbreak;\ncase \"receiver\":receivers.add(getAndroidComponent(child,TYPE_BROADCAST_RECEIVER));\nbreak;\ncase \"provider\":providers.add(getAndroidComponent(child,TYPE_CONTENT_PROVIDER));\nbreak;\ncase \"meta-data\":NamedNodeMap attributes=child.getAttributes();\nmetaDatas.put(getAttribute(attributes,\"android:name\"),getAttribute(attributes,\"android:value\"));\nbreak;\ndefault:break;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 71,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1299,
        "startLineNumber" : 260,
        "startColumnNumber" : 67,
        "endLineNumber" : 283,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  Node child=children.item(j);\n  String childName=child.getNodeName();\nswitch (childName) {\ncase \"service\":    services.add(getAndroidComponent(child,TYPE_SERVICE));\n  break;\ncase \"activity\":activities.add(getAndroidComponent(child,TYPE_ACTIVITY));\nbreak;\ncase \"receiver\":receivers.add(getAndroidComponent(child,TYPE_BROADCAST_RECEIVER));\nbreak;\ncase \"provider\":providers.add(getAndroidComponent(child,TYPE_CONTENT_PROVIDER));\nbreak;\ncase \"meta-data\":NamedNodeMap attributes=child.getAttributes();\nmetaDatas.put(getAttribute(attributes,\"android:name\"),getAttribute(attributes,\"android:value\"));\nbreak;\ndefault:break;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 89,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1346,
        "startLineNumber" : 260,
        "startColumnNumber" : 20,
        "endLineNumber" : 283,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (int j=0; j < children.getLength(); j++) {\n  Node child=children.item(j);\n  String childName=child.getNodeName();\nswitch (childName) {\ncase \"service\":    services.add(getAndroidComponent(child,TYPE_SERVICE));\n  break;\ncase \"activity\":activities.add(getAndroidComponent(child,TYPE_ACTIVITY));\nbreak;\ncase \"receiver\":receivers.add(getAndroidComponent(child,TYPE_BROADCAST_RECEIVER));\nbreak;\ncase \"provider\":providers.add(getAndroidComponent(child,TYPE_CONTENT_PROVIDER));\nbreak;\ncase \"meta-data\":NamedNodeMap attributes=child.getAttributes();\nmetaDatas.put(getAttribute(attributes,\"android:name\"),getAttribute(attributes,\"android:value\"));\nbreak;\ndefault:break;\n}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 102,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1448,
        "startLineNumber" : 258,
        "startColumnNumber" : 52,
        "endLineNumber" : 284,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  NodeList children=node.getChildNodes();\n  for (int j=0; j < children.getLength(); j++) {\n    Node child=children.item(j);\n    String childName=child.getNodeName();\nswitch (childName) {\ncase \"service\":      services.add(getAndroidComponent(child,TYPE_SERVICE));\n    break;\ncase \"activity\":  activities.add(getAndroidComponent(child,TYPE_ACTIVITY));\nbreak;\ncase \"receiver\":receivers.add(getAndroidComponent(child,TYPE_BROADCAST_RECEIVER));\nbreak;\ncase \"provider\":providers.add(getAndroidComponent(child,TYPE_CONTENT_PROVIDER));\nbreak;\ncase \"meta-data\":NamedNodeMap attributes=child.getAttributes();\nmetaDatas.put(getAttribute(attributes,\"android:name\"),getAttribute(attributes,\"android:value\"));\nbreak;\ndefault:break;\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1484,
        "startLineNumber" : 258,
        "startColumnNumber" : 16,
        "endLineNumber" : 284,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (nodeName.equals(\"application\")) {\n  NodeList children=node.getChildNodes();\n  for (int j=0; j < children.getLength(); j++) {\n    Node child=children.item(j);\n    String childName=child.getNodeName();\nswitch (childName) {\ncase \"service\":      services.add(getAndroidComponent(child,TYPE_SERVICE));\n    break;\ncase \"activity\":  activities.add(getAndroidComponent(child,TYPE_ACTIVITY));\nbreak;\ncase \"receiver\":receivers.add(getAndroidComponent(child,TYPE_BROADCAST_RECEIVER));\nbreak;\ncase \"provider\":providers.add(getAndroidComponent(child,TYPE_CONTENT_PROVIDER));\nbreak;\ncase \"meta-data\":NamedNodeMap attributes=child.getAttributes();\nmetaDatas.put(getAttribute(attributes,\"android:name\"),getAttribute(attributes,\"android:value\"));\nbreak;\ndefault:break;\n}\n}\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 116,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1613,
        "startLineNumber" : 255,
        "startColumnNumber" : 56,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Node node=nodes.item(i);\n  String nodeName=node.getNodeName();\n  if (nodeName.equals(\"application\")) {\n    NodeList children=node.getChildNodes();\n    for (int j=0; j < children.getLength(); j++) {\n      Node child=children.item(j);\n      String childName=child.getNodeName();\nswitch (childName) {\ncase \"service\":        services.add(getAndroidComponent(child,TYPE_SERVICE));\n      break;\ncase \"activity\":    activities.add(getAndroidComponent(child,TYPE_ACTIVITY));\n  break;\ncase \"receiver\":receivers.add(getAndroidComponent(child,TYPE_BROADCAST_RECEIVER));\nbreak;\ncase \"provider\":providers.add(getAndroidComponent(child,TYPE_CONTENT_PROVIDER));\nbreak;\ncase \"meta-data\":NamedNodeMap attributes=child.getAttributes();\nmetaDatas.put(getAttribute(attributes,\"android:name\"),getAttribute(attributes,\"android:value\"));\nbreak;\ndefault:break;\n}\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 134,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1657,
        "startLineNumber" : 255,
        "startColumnNumber" : 12,
        "endLineNumber" : 285,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < nodes.getLength(); i++) {\n  Node node=nodes.item(i);\n  String nodeName=node.getNodeName();\n  if (nodeName.equals(\"application\")) {\n    NodeList children=node.getChildNodes();\n    for (int j=0; j < children.getLength(); j++) {\n      Node child=children.item(j);\n      String childName=child.getNodeName();\nswitch (childName) {\ncase \"service\":        services.add(getAndroidComponent(child,TYPE_SERVICE));\n      break;\ncase \"activity\":    activities.add(getAndroidComponent(child,TYPE_ACTIVITY));\n  break;\ncase \"receiver\":receivers.add(getAndroidComponent(child,TYPE_BROADCAST_RECEIVER));\nbreak;\ncase \"provider\":providers.add(getAndroidComponent(child,TYPE_CONTENT_PROVIDER));\nbreak;\ncase \"meta-data\":NamedNodeMap attributes=child.getAttributes();\nmetaDatas.put(getAttribute(attributes,\"android:name\"),getAttribute(attributes,\"android:value\"));\nbreak;\ndefault:break;\n}\n}\n}\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 147,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2431,
        "startLineNumber" : 242,
        "startColumnNumber" : 12,
        "endLineNumber" : 286,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  DocumentBuilder builder=builderFactory.newDocumentBuilder();\n  builder.setEntityResolver(new EntityResolver(){\n    @Override public InputSource resolveEntity(    String publicId,    String systemId) throws SAXException, IOException {\n      return new InputSource();\n    }\n  }\n);\n  document=builder.parse(new ByteArrayInputStream(xml.getBytes(\"UTF-8\")));\n  Node manifestNode=document.getElementsByTagName(\"manifest\").item(0);\n  NodeList nodes=manifestNode.getChildNodes();\n  for (int i=0; i < nodes.getLength(); i++) {\n    Node node=nodes.item(i);\n    String nodeName=node.getNodeName();\n    if (nodeName.equals(\"application\")) {\n      NodeList children=node.getChildNodes();\n      for (int j=0; j < children.getLength(); j++) {\n        Node child=children.item(j);\n        String childName=child.getNodeName();\nswitch (childName) {\ncase \"service\":          services.add(getAndroidComponent(child,TYPE_SERVICE));\n        break;\ncase \"activity\":      activities.add(getAndroidComponent(child,TYPE_ACTIVITY));\n    break;\ncase \"receiver\":  receivers.add(getAndroidComponent(child,TYPE_BROADCAST_RECEIVER));\nbreak;\ncase \"provider\":providers.add(getAndroidComponent(child,TYPE_CONTENT_PROVIDER));\nbreak;\ncase \"meta-data\":NamedNodeMap attributes=child.getAttributes();\nmetaDatas.put(getAttribute(attributes,\"android:name\"),getAttribute(attributes,\"android:value\"));\nbreak;\ndefault:break;\n}\n}\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 221,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2546,
        "startLineNumber" : 242,
        "startColumnNumber" : 8,
        "endLineNumber" : 288,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  DocumentBuilder builder=builderFactory.newDocumentBuilder();\n  builder.setEntityResolver(new EntityResolver(){\n    @Override public InputSource resolveEntity(    String publicId,    String systemId) throws SAXException, IOException {\n      return new InputSource();\n    }\n  }\n);\n  document=builder.parse(new ByteArrayInputStream(xml.getBytes(\"UTF-8\")));\n  Node manifestNode=document.getElementsByTagName(\"manifest\").item(0);\n  NodeList nodes=manifestNode.getChildNodes();\n  for (int i=0; i < nodes.getLength(); i++) {\n    Node node=nodes.item(i);\n    String nodeName=node.getNodeName();\n    if (nodeName.equals(\"application\")) {\n      NodeList children=node.getChildNodes();\n      for (int j=0; j < children.getLength(); j++) {\n        Node child=children.item(j);\n        String childName=child.getNodeName();\nswitch (childName) {\ncase \"service\":          services.add(getAndroidComponent(child,TYPE_SERVICE));\n        break;\ncase \"activity\":      activities.add(getAndroidComponent(child,TYPE_ACTIVITY));\n    break;\ncase \"receiver\":  receivers.add(getAndroidComponent(child,TYPE_BROADCAST_RECEIVER));\nbreak;\ncase \"provider\":providers.add(getAndroidComponent(child,TYPE_CONTENT_PROVIDER));\nbreak;\ncase \"meta-data\":NamedNodeMap attributes=child.getAttributes();\nmetaDatas.put(getAttribute(attributes,\"android:name\"),getAttribute(attributes,\"android:value\"));\nbreak;\ndefault:break;\n}\n}\n}\n}\n}\n catch (Exception e) {\nthrow new ParserException(\"Error parsing AndroidManifest.xml\",e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 234,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2675,
        "startLineNumber" : 239,
        "startColumnNumber" : 48,
        "endLineNumber" : 289,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  DocumentBuilderFactory builderFactory=DocumentBuilderFactory.newInstance();\n  Document document;\n  try {\n    DocumentBuilder builder=builderFactory.newDocumentBuilder();\n    builder.setEntityResolver(new EntityResolver(){\n      @Override public InputSource resolveEntity(      String publicId,      String systemId) throws SAXException, IOException {\n        return new InputSource();\n      }\n    }\n);\n    document=builder.parse(new ByteArrayInputStream(xml.getBytes(\"UTF-8\")));\n    Node manifestNode=document.getElementsByTagName(\"manifest\").item(0);\n    NodeList nodes=manifestNode.getChildNodes();\n    for (int i=0; i < nodes.getLength(); i++) {\n      Node node=nodes.item(i);\n      String nodeName=node.getNodeName();\n      if (nodeName.equals(\"application\")) {\n        NodeList children=node.getChildNodes();\n        for (int j=0; j < children.getLength(); j++) {\n          Node child=children.item(j);\n          String childName=child.getNodeName();\nswitch (childName) {\ncase \"service\":            services.add(getAndroidComponent(child,TYPE_SERVICE));\n          break;\ncase \"activity\":        activities.add(getAndroidComponent(child,TYPE_ACTIVITY));\n      break;\ncase \"receiver\":    receivers.add(getAndroidComponent(child,TYPE_BROADCAST_RECEIVER));\n  break;\ncase \"provider\":providers.add(getAndroidComponent(child,TYPE_CONTENT_PROVIDER));\nbreak;\ncase \"meta-data\":NamedNodeMap attributes=child.getAttributes();\nmetaDatas.put(getAttribute(attributes,\"android:name\"),getAttribute(attributes,\"android:value\"));\nbreak;\ndefault:break;\n}\n}\n}\n}\n}\n catch (Exception e) {\nthrow new ParserException(\"Error parsing AndroidManifest.xml\",e);\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 248,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2719,
        "startLineNumber" : 239,
        "startColumnNumber" : 4,
        "endLineNumber" : 289,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void parse() throws ParserException {\n  DocumentBuilderFactory builderFactory=DocumentBuilderFactory.newInstance();\n  Document document;\n  try {\n    DocumentBuilder builder=builderFactory.newDocumentBuilder();\n    builder.setEntityResolver(new EntityResolver(){\n      @Override public InputSource resolveEntity(      String publicId,      String systemId) throws SAXException, IOException {\n        return new InputSource();\n      }\n    }\n);\n    document=builder.parse(new ByteArrayInputStream(xml.getBytes(\"UTF-8\")));\n    Node manifestNode=document.getElementsByTagName(\"manifest\").item(0);\n    NodeList nodes=manifestNode.getChildNodes();\n    for (int i=0; i < nodes.getLength(); i++) {\n      Node node=nodes.item(i);\n      String nodeName=node.getNodeName();\n      if (nodeName.equals(\"application\")) {\n        NodeList children=node.getChildNodes();\n        for (int j=0; j < children.getLength(); j++) {\n          Node child=children.item(j);\n          String childName=child.getNodeName();\nswitch (childName) {\ncase \"service\":            services.add(getAndroidComponent(child,TYPE_SERVICE));\n          break;\ncase \"activity\":        activities.add(getAndroidComponent(child,TYPE_ACTIVITY));\n      break;\ncase \"receiver\":    receivers.add(getAndroidComponent(child,TYPE_BROADCAST_RECEIVER));\n  break;\ncase \"provider\":providers.add(getAndroidComponent(child,TYPE_CONTENT_PROVIDER));\nbreak;\ncase \"meta-data\":NamedNodeMap attributes=child.getAttributes();\nmetaDatas.put(getAttribute(attributes,\"android:name\"),getAttribute(attributes,\"android:value\"));\nbreak;\ndefault:break;\n}\n}\n}\n}\n}\n catch (Exception e) {\nthrow new ParserException(\"Error parsing AndroidManifest.xml\",e);\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 254,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 271,
        "startColumnNumber" : 32,
        "endLineNumber" : 271,
        "endColumnNumber" : 99
      },
      "nodeContext" : "receivers.add(getAndroidComponent(child,TYPE_BROADCAST_RECEIVER));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 271,
    "startColumnNumber" : 73,
    "endLineNumber" : 271,
    "endColumnNumber" : 96
  } ],
  "layoutRelationDataList" : [ ]
}