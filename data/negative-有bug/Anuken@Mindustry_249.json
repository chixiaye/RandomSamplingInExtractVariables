{
  "id" : 249,
  "expression" : "unloadTarget == null",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/ai/types/CargoAI.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "unloadTarget == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 52,
      "startColumnNumber" : 15,
      "endLineNumber" : 52,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1981,
        "startLineNumber" : 52,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (unloadTarget == null) {\n  if (retarget()) {\n    findDropTarget(unit.item(),0,null);\n    if (unloadTarget == null) {\n      unit.clearItem();\n    }\n  }\n}\n else {\n  if (unloadTarget.item != itemTarget) {\n    unloadTarget=null;\n    return;\n  }\n  moveTo(unloadTarget,moveRange,moveSmoothing);\n  if (unit.within(unloadTarget,transferRange) && timer.get(timerTarget2,dropSpacing)) {\n    int max=unloadTarget.acceptStack(unit.item(),unit.stack.amount,unit);\n    if (max > 0) {\n      noDestTimer=0f;\n      Call.transferItemTo(unit,unit.item(),max,unit.x,unit.y,unloadTarget);\n      if (!unit.hasItem()) {\n        targetIndex++;\n      }\n    }\n else     if ((noDestTimer+=dropSpacing) >= emptyWaitTime) {\n      targetIndex=findDropTarget(unit.item(),targetIndex,unloadTarget) + 1;\n      if (unloadTarget == null) {\n        unit.clearItem();\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 137,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2118,
        "startLineNumber" : 49,
        "startColumnNumber" : 13,
        "endLineNumber" : 97,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (unloadTarget == null) {\n    if (retarget()) {\n      findDropTarget(unit.item(),0,null);\n      if (unloadTarget == null) {\n        unit.clearItem();\n      }\n    }\n  }\n else {\n    if (unloadTarget.item != itemTarget) {\n      unloadTarget=null;\n      return;\n    }\n    moveTo(unloadTarget,moveRange,moveSmoothing);\n    if (unit.within(unloadTarget,transferRange) && timer.get(timerTarget2,dropSpacing)) {\n      int max=unloadTarget.acceptStack(unit.item(),unit.stack.amount,unit);\n      if (max > 0) {\n        noDestTimer=0f;\n        Call.transferItemTo(unit,unit.item(),max,unit.x,unit.y,unloadTarget);\n        if (!unit.hasItem()) {\n          targetIndex++;\n        }\n      }\n else       if ((noDestTimer+=dropSpacing) >= emptyWaitTime) {\n        targetIndex=findDropTarget(unit.item(),targetIndex,unloadTarget) + 1;\n        if (unloadTarget == null) {\n          unit.clearItem();\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 138,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2698,
        "startLineNumber" : 35,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!unit.hasItem()) {\n  moveTo(build,moveRange,moveSmoothing);\n  if (build.items.any() && unit.within(build,transferRange)) {\n    if (retarget()) {\n      findAnyTarget(build);\n      if (unloadTarget != null) {\n        Call.takeItems(build,itemTarget,Math.min(unit.type.itemCapacity,build.items.get(itemTarget)),unit);\n      }\n    }\n  }\n}\n else {\n  if (unloadTarget == null) {\n    if (retarget()) {\n      findDropTarget(unit.item(),0,null);\n      if (unloadTarget == null) {\n        unit.clearItem();\n      }\n    }\n  }\n else {\n    if (unloadTarget.item != itemTarget) {\n      unloadTarget=null;\n      return;\n    }\n    moveTo(unloadTarget,moveRange,moveSmoothing);\n    if (unit.within(unloadTarget,transferRange) && timer.get(timerTarget2,dropSpacing)) {\n      int max=unloadTarget.acceptStack(unit.item(),unit.stack.amount,unit);\n      if (max > 0) {\n        noDestTimer=0f;\n        Call.transferItemTo(unit,unit.item(),max,unit.x,unit.y,unloadTarget);\n        if (!unit.hasItem()) {\n          targetIndex++;\n        }\n      }\n else       if ((noDestTimer+=dropSpacing) >= emptyWaitTime) {\n        targetIndex=findDropTarget(unit.item(),targetIndex,unloadTarget) + 1;\n        if (unloadTarget == null) {\n          unit.clearItem();\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 197,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3018,
        "startLineNumber" : 27,
        "startColumnNumber" : 32,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!(unit instanceof   BuildingTetherc tether) || tether.building() == null)   return;\n  var build=tether.building();\n  if (build.items == null)   return;\n  if (!unit.hasItem()) {\n    moveTo(build,moveRange,moveSmoothing);\n    if (build.items.any() && unit.within(build,transferRange)) {\n      if (retarget()) {\n        findAnyTarget(build);\n        if (unloadTarget != null) {\n          Call.takeItems(build,itemTarget,Math.min(unit.type.itemCapacity,build.items.get(itemTarget)),unit);\n        }\n      }\n    }\n  }\n else {\n    if (unloadTarget == null) {\n      if (retarget()) {\n        findDropTarget(unit.item(),0,null);\n        if (unloadTarget == null) {\n          unit.clearItem();\n        }\n      }\n    }\n else {\n      if (unloadTarget.item != itemTarget) {\n        unloadTarget=null;\n        return;\n      }\n      moveTo(unloadTarget,moveRange,moveSmoothing);\n      if (unit.within(unloadTarget,transferRange) && timer.get(timerTarget2,dropSpacing)) {\n        int max=unloadTarget.acceptStack(unit.item(),unit.stack.amount,unit);\n        if (max > 0) {\n          noDestTimer=0f;\n          Call.transferItemTo(unit,unit.item(),max,unit.x,unit.y,unloadTarget);\n          if (!unit.hasItem()) {\n            targetIndex++;\n          }\n        }\n else         if ((noDestTimer+=dropSpacing) >= emptyWaitTime) {\n          targetIndex=findDropTarget(unit.item(),targetIndex,unloadTarget) + 1;\n          if (unloadTarget == null) {\n            unit.clearItem();\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 229,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3061,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void updateMovement(){\n  if (!(unit instanceof   BuildingTetherc tether) || tether.building() == null)   return;\n  var build=tether.building();\n  if (build.items == null)   return;\n  if (!unit.hasItem()) {\n    moveTo(build,moveRange,moveSmoothing);\n    if (build.items.any() && unit.within(build,transferRange)) {\n      if (retarget()) {\n        findAnyTarget(build);\n        if (unloadTarget != null) {\n          Call.takeItems(build,itemTarget,Math.min(unit.type.itemCapacity,build.items.get(itemTarget)),unit);\n        }\n      }\n    }\n  }\n else {\n    if (unloadTarget == null) {\n      if (retarget()) {\n        findDropTarget(unit.item(),0,null);\n        if (unloadTarget == null) {\n          unit.clearItem();\n        }\n      }\n    }\n else {\n      if (unloadTarget.item != itemTarget) {\n        unloadTarget=null;\n        return;\n      }\n      moveTo(unloadTarget,moveRange,moveSmoothing);\n      if (unit.within(unloadTarget,transferRange) && timer.get(timerTarget2,dropSpacing)) {\n        int max=unloadTarget.acceptStack(unit.item(),unit.stack.amount,unit);\n        if (max > 0) {\n          noDestTimer=0f;\n          Call.transferItemTo(unit,unit.item(),max,unit.x,unit.y,unloadTarget);\n          if (!unit.hasItem()) {\n            targetIndex++;\n          }\n        }\n else         if ((noDestTimer+=dropSpacing) >= emptyWaitTime) {\n          targetIndex=findDropTarget(unit.item(),targetIndex,unloadTarget) + 1;\n          if (unloadTarget == null) {\n            unit.clearItem();\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 235,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1981,
        "startLineNumber" : 52,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (unloadTarget == null) {\n  if (retarget()) {\n    findDropTarget(unit.item(),0,null);\n    if (unloadTarget == null) {\n      unit.clearItem();\n    }\n  }\n}\n else {\n  if (unloadTarget.item != itemTarget) {\n    unloadTarget=null;\n    return;\n  }\n  moveTo(unloadTarget,moveRange,moveSmoothing);\n  if (unit.within(unloadTarget,transferRange) && timer.get(timerTarget2,dropSpacing)) {\n    int max=unloadTarget.acceptStack(unit.item(),unit.stack.amount,unit);\n    if (max > 0) {\n      noDestTimer=0f;\n      Call.transferItemTo(unit,unit.item(),max,unit.x,unit.y,unloadTarget);\n      if (!unit.hasItem()) {\n        targetIndex++;\n      }\n    }\n else     if ((noDestTimer+=dropSpacing) >= emptyWaitTime) {\n      targetIndex=findDropTarget(unit.item(),targetIndex,unloadTarget) + 1;\n      if (unloadTarget == null) {\n        unit.clearItem();\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 137,
      "astHeight" : 13
    },
    "tokenLength" : 3,
    "type" : "boolean"
  }, {
    "nodeContext" : "unloadTarget == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 57,
      "startColumnNumber" : 23,
      "endLineNumber" : 57,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 57,
        "startColumnNumber" : 20,
        "endLineNumber" : 59,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (unloadTarget == null) {\n  unit.clearItem();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 276,
        "startLineNumber" : 53,
        "startColumnNumber" : 30,
        "endLineNumber" : 60,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  findDropTarget(unit.item(),0,null);\n  if (unloadTarget == null) {\n    unit.clearItem();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 290,
        "startLineNumber" : 53,
        "startColumnNumber" : 16,
        "endLineNumber" : 60,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (retarget()) {\n  findDropTarget(unit.item(),0,null);\n  if (unloadTarget == null) {\n    unit.clearItem();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 324,
        "startLineNumber" : 52,
        "startColumnNumber" : 36,
        "endLineNumber" : 61,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (retarget()) {\n    findDropTarget(unit.item(),0,null);\n    if (unloadTarget == null) {\n      unit.clearItem();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1981,
        "startLineNumber" : 52,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (unloadTarget == null) {\n  if (retarget()) {\n    findDropTarget(unit.item(),0,null);\n    if (unloadTarget == null) {\n      unit.clearItem();\n    }\n  }\n}\n else {\n  if (unloadTarget.item != itemTarget) {\n    unloadTarget=null;\n    return;\n  }\n  moveTo(unloadTarget,moveRange,moveSmoothing);\n  if (unit.within(unloadTarget,transferRange) && timer.get(timerTarget2,dropSpacing)) {\n    int max=unloadTarget.acceptStack(unit.item(),unit.stack.amount,unit);\n    if (max > 0) {\n      noDestTimer=0f;\n      Call.transferItemTo(unit,unit.item(),max,unit.x,unit.y,unloadTarget);\n      if (!unit.hasItem()) {\n        targetIndex++;\n      }\n    }\n else     if ((noDestTimer+=dropSpacing) >= emptyWaitTime) {\n      targetIndex=findDropTarget(unit.item(),targetIndex,unloadTarget) + 1;\n      if (unloadTarget == null) {\n        unit.clearItem();\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 137,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2118,
        "startLineNumber" : 49,
        "startColumnNumber" : 13,
        "endLineNumber" : 97,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (unloadTarget == null) {\n    if (retarget()) {\n      findDropTarget(unit.item(),0,null);\n      if (unloadTarget == null) {\n        unit.clearItem();\n      }\n    }\n  }\n else {\n    if (unloadTarget.item != itemTarget) {\n      unloadTarget=null;\n      return;\n    }\n    moveTo(unloadTarget,moveRange,moveSmoothing);\n    if (unit.within(unloadTarget,transferRange) && timer.get(timerTarget2,dropSpacing)) {\n      int max=unloadTarget.acceptStack(unit.item(),unit.stack.amount,unit);\n      if (max > 0) {\n        noDestTimer=0f;\n        Call.transferItemTo(unit,unit.item(),max,unit.x,unit.y,unloadTarget);\n        if (!unit.hasItem()) {\n          targetIndex++;\n        }\n      }\n else       if ((noDestTimer+=dropSpacing) >= emptyWaitTime) {\n        targetIndex=findDropTarget(unit.item(),targetIndex,unloadTarget) + 1;\n        if (unloadTarget == null) {\n          unit.clearItem();\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 138,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2698,
        "startLineNumber" : 35,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!unit.hasItem()) {\n  moveTo(build,moveRange,moveSmoothing);\n  if (build.items.any() && unit.within(build,transferRange)) {\n    if (retarget()) {\n      findAnyTarget(build);\n      if (unloadTarget != null) {\n        Call.takeItems(build,itemTarget,Math.min(unit.type.itemCapacity,build.items.get(itemTarget)),unit);\n      }\n    }\n  }\n}\n else {\n  if (unloadTarget == null) {\n    if (retarget()) {\n      findDropTarget(unit.item(),0,null);\n      if (unloadTarget == null) {\n        unit.clearItem();\n      }\n    }\n  }\n else {\n    if (unloadTarget.item != itemTarget) {\n      unloadTarget=null;\n      return;\n    }\n    moveTo(unloadTarget,moveRange,moveSmoothing);\n    if (unit.within(unloadTarget,transferRange) && timer.get(timerTarget2,dropSpacing)) {\n      int max=unloadTarget.acceptStack(unit.item(),unit.stack.amount,unit);\n      if (max > 0) {\n        noDestTimer=0f;\n        Call.transferItemTo(unit,unit.item(),max,unit.x,unit.y,unloadTarget);\n        if (!unit.hasItem()) {\n          targetIndex++;\n        }\n      }\n else       if ((noDestTimer+=dropSpacing) >= emptyWaitTime) {\n        targetIndex=findDropTarget(unit.item(),targetIndex,unloadTarget) + 1;\n        if (unloadTarget == null) {\n          unit.clearItem();\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 197,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3018,
        "startLineNumber" : 27,
        "startColumnNumber" : 32,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!(unit instanceof   BuildingTetherc tether) || tether.building() == null)   return;\n  var build=tether.building();\n  if (build.items == null)   return;\n  if (!unit.hasItem()) {\n    moveTo(build,moveRange,moveSmoothing);\n    if (build.items.any() && unit.within(build,transferRange)) {\n      if (retarget()) {\n        findAnyTarget(build);\n        if (unloadTarget != null) {\n          Call.takeItems(build,itemTarget,Math.min(unit.type.itemCapacity,build.items.get(itemTarget)),unit);\n        }\n      }\n    }\n  }\n else {\n    if (unloadTarget == null) {\n      if (retarget()) {\n        findDropTarget(unit.item(),0,null);\n        if (unloadTarget == null) {\n          unit.clearItem();\n        }\n      }\n    }\n else {\n      if (unloadTarget.item != itemTarget) {\n        unloadTarget=null;\n        return;\n      }\n      moveTo(unloadTarget,moveRange,moveSmoothing);\n      if (unit.within(unloadTarget,transferRange) && timer.get(timerTarget2,dropSpacing)) {\n        int max=unloadTarget.acceptStack(unit.item(),unit.stack.amount,unit);\n        if (max > 0) {\n          noDestTimer=0f;\n          Call.transferItemTo(unit,unit.item(),max,unit.x,unit.y,unloadTarget);\n          if (!unit.hasItem()) {\n            targetIndex++;\n          }\n        }\n else         if ((noDestTimer+=dropSpacing) >= emptyWaitTime) {\n          targetIndex=findDropTarget(unit.item(),targetIndex,unloadTarget) + 1;\n          if (unloadTarget == null) {\n            unit.clearItem();\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 229,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3061,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void updateMovement(){\n  if (!(unit instanceof   BuildingTetherc tether) || tether.building() == null)   return;\n  var build=tether.building();\n  if (build.items == null)   return;\n  if (!unit.hasItem()) {\n    moveTo(build,moveRange,moveSmoothing);\n    if (build.items.any() && unit.within(build,transferRange)) {\n      if (retarget()) {\n        findAnyTarget(build);\n        if (unloadTarget != null) {\n          Call.takeItems(build,itemTarget,Math.min(unit.type.itemCapacity,build.items.get(itemTarget)),unit);\n        }\n      }\n    }\n  }\n else {\n    if (unloadTarget == null) {\n      if (retarget()) {\n        findDropTarget(unit.item(),0,null);\n        if (unloadTarget == null) {\n          unit.clearItem();\n        }\n      }\n    }\n else {\n      if (unloadTarget.item != itemTarget) {\n        unloadTarget=null;\n        return;\n      }\n      moveTo(unloadTarget,moveRange,moveSmoothing);\n      if (unit.within(unloadTarget,transferRange) && timer.get(timerTarget2,dropSpacing)) {\n        int max=unloadTarget.acceptStack(unit.item(),unit.stack.amount,unit);\n        if (max > 0) {\n          noDestTimer=0f;\n          Call.transferItemTo(unit,unit.item(),max,unit.x,unit.y,unloadTarget);\n          if (!unit.hasItem()) {\n            targetIndex++;\n          }\n        }\n else         if ((noDestTimer+=dropSpacing) >= emptyWaitTime) {\n          targetIndex=findDropTarget(unit.item(),targetIndex,unloadTarget) + 1;\n          if (unloadTarget == null) {\n            unit.clearItem();\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 235,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 57,
        "startColumnNumber" : 20,
        "endLineNumber" : 59,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (unloadTarget == null) {\n  unit.clearItem();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "boolean"
  }, {
    "nodeContext" : "unloadTarget == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 91,
      "startColumnNumber" : 27,
      "endLineNumber" : 91,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 91,
        "startColumnNumber" : 24,
        "endLineNumber" : 93,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (unloadTarget == null) {\n  unit.clearItem();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 519,
        "startLineNumber" : 84,
        "startColumnNumber" : 75,
        "endLineNumber" : 94,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  targetIndex=findDropTarget(unit.item(),targetIndex,unloadTarget) + 1;\n  if (unloadTarget == null) {\n    unit.clearItem();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 568,
        "startLineNumber" : 84,
        "startColumnNumber" : 26,
        "endLineNumber" : 94,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if ((noDestTimer+=dropSpacing) >= emptyWaitTime) {\n  targetIndex=findDropTarget(unit.item(),targetIndex,unloadTarget) + 1;\n  if (unloadTarget == null) {\n    unit.clearItem();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 29,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 924,
        "startLineNumber" : 76,
        "startColumnNumber" : 20,
        "endLineNumber" : 94,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (max > 0) {\n  noDestTimer=0f;\n  Call.transferItemTo(unit,unit.item(),max,unit.x,unit.y,unloadTarget);\n  if (!unit.hasItem()) {\n    targetIndex++;\n  }\n}\n else if ((noDestTimer+=dropSpacing) >= emptyWaitTime) {\n  targetIndex=findDropTarget(unit.item(),targetIndex,unloadTarget) + 1;\n  if (unloadTarget == null) {\n    unit.clearItem();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 63,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1119,
        "startLineNumber" : 72,
        "startColumnNumber" : 100,
        "endLineNumber" : 95,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  int max=unloadTarget.acceptStack(unit.item(),unit.stack.amount,unit);\n  if (max > 0) {\n    noDestTimer=0f;\n    Call.transferItemTo(unit,unit.item(),max,unit.x,unit.y,unloadTarget);\n    if (!unit.hasItem()) {\n      targetIndex++;\n    }\n  }\n else   if ((noDestTimer+=dropSpacing) >= emptyWaitTime) {\n    targetIndex=findDropTarget(unit.item(),targetIndex,unloadTarget) + 1;\n    if (unloadTarget == null) {\n      unit.clearItem();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1203,
        "startLineNumber" : 72,
        "startColumnNumber" : 16,
        "endLineNumber" : 95,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (unit.within(unloadTarget,transferRange) && timer.get(timerTarget2,dropSpacing)) {\n  int max=unloadTarget.acceptStack(unit.item(),unit.stack.amount,unit);\n  if (max > 0) {\n    noDestTimer=0f;\n    Call.transferItemTo(unit,unit.item(),max,unit.x,unit.y,unloadTarget);\n    if (!unit.hasItem()) {\n      targetIndex++;\n    }\n  }\n else   if ((noDestTimer+=dropSpacing) >= emptyWaitTime) {\n    targetIndex=findDropTarget(unit.item(),targetIndex,unloadTarget) + 1;\n    if (unloadTarget == null) {\n      unit.clearItem();\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 92,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1629,
        "startLineNumber" : 61,
        "startColumnNumber" : 17,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (unloadTarget.item != itemTarget) {\n    unloadTarget=null;\n    return;\n  }\n  moveTo(unloadTarget,moveRange,moveSmoothing);\n  if (unit.within(unloadTarget,transferRange) && timer.get(timerTarget2,dropSpacing)) {\n    int max=unloadTarget.acceptStack(unit.item(),unit.stack.amount,unit);\n    if (max > 0) {\n      noDestTimer=0f;\n      Call.transferItemTo(unit,unit.item(),max,unit.x,unit.y,unloadTarget);\n      if (!unit.hasItem()) {\n        targetIndex++;\n      }\n    }\n else     if ((noDestTimer+=dropSpacing) >= emptyWaitTime) {\n      targetIndex=findDropTarget(unit.item(),targetIndex,unloadTarget) + 1;\n      if (unloadTarget == null) {\n        unit.clearItem();\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1981,
        "startLineNumber" : 52,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (unloadTarget == null) {\n  if (retarget()) {\n    findDropTarget(unit.item(),0,null);\n    if (unloadTarget == null) {\n      unit.clearItem();\n    }\n  }\n}\n else {\n  if (unloadTarget.item != itemTarget) {\n    unloadTarget=null;\n    return;\n  }\n  moveTo(unloadTarget,moveRange,moveSmoothing);\n  if (unit.within(unloadTarget,transferRange) && timer.get(timerTarget2,dropSpacing)) {\n    int max=unloadTarget.acceptStack(unit.item(),unit.stack.amount,unit);\n    if (max > 0) {\n      noDestTimer=0f;\n      Call.transferItemTo(unit,unit.item(),max,unit.x,unit.y,unloadTarget);\n      if (!unit.hasItem()) {\n        targetIndex++;\n      }\n    }\n else     if ((noDestTimer+=dropSpacing) >= emptyWaitTime) {\n      targetIndex=findDropTarget(unit.item(),targetIndex,unloadTarget) + 1;\n      if (unloadTarget == null) {\n        unit.clearItem();\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 137,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2118,
        "startLineNumber" : 49,
        "startColumnNumber" : 13,
        "endLineNumber" : 97,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (unloadTarget == null) {\n    if (retarget()) {\n      findDropTarget(unit.item(),0,null);\n      if (unloadTarget == null) {\n        unit.clearItem();\n      }\n    }\n  }\n else {\n    if (unloadTarget.item != itemTarget) {\n      unloadTarget=null;\n      return;\n    }\n    moveTo(unloadTarget,moveRange,moveSmoothing);\n    if (unit.within(unloadTarget,transferRange) && timer.get(timerTarget2,dropSpacing)) {\n      int max=unloadTarget.acceptStack(unit.item(),unit.stack.amount,unit);\n      if (max > 0) {\n        noDestTimer=0f;\n        Call.transferItemTo(unit,unit.item(),max,unit.x,unit.y,unloadTarget);\n        if (!unit.hasItem()) {\n          targetIndex++;\n        }\n      }\n else       if ((noDestTimer+=dropSpacing) >= emptyWaitTime) {\n        targetIndex=findDropTarget(unit.item(),targetIndex,unloadTarget) + 1;\n        if (unloadTarget == null) {\n          unit.clearItem();\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 138,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2698,
        "startLineNumber" : 35,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!unit.hasItem()) {\n  moveTo(build,moveRange,moveSmoothing);\n  if (build.items.any() && unit.within(build,transferRange)) {\n    if (retarget()) {\n      findAnyTarget(build);\n      if (unloadTarget != null) {\n        Call.takeItems(build,itemTarget,Math.min(unit.type.itemCapacity,build.items.get(itemTarget)),unit);\n      }\n    }\n  }\n}\n else {\n  if (unloadTarget == null) {\n    if (retarget()) {\n      findDropTarget(unit.item(),0,null);\n      if (unloadTarget == null) {\n        unit.clearItem();\n      }\n    }\n  }\n else {\n    if (unloadTarget.item != itemTarget) {\n      unloadTarget=null;\n      return;\n    }\n    moveTo(unloadTarget,moveRange,moveSmoothing);\n    if (unit.within(unloadTarget,transferRange) && timer.get(timerTarget2,dropSpacing)) {\n      int max=unloadTarget.acceptStack(unit.item(),unit.stack.amount,unit);\n      if (max > 0) {\n        noDestTimer=0f;\n        Call.transferItemTo(unit,unit.item(),max,unit.x,unit.y,unloadTarget);\n        if (!unit.hasItem()) {\n          targetIndex++;\n        }\n      }\n else       if ((noDestTimer+=dropSpacing) >= emptyWaitTime) {\n        targetIndex=findDropTarget(unit.item(),targetIndex,unloadTarget) + 1;\n        if (unloadTarget == null) {\n          unit.clearItem();\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 197,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3018,
        "startLineNumber" : 27,
        "startColumnNumber" : 32,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!(unit instanceof   BuildingTetherc tether) || tether.building() == null)   return;\n  var build=tether.building();\n  if (build.items == null)   return;\n  if (!unit.hasItem()) {\n    moveTo(build,moveRange,moveSmoothing);\n    if (build.items.any() && unit.within(build,transferRange)) {\n      if (retarget()) {\n        findAnyTarget(build);\n        if (unloadTarget != null) {\n          Call.takeItems(build,itemTarget,Math.min(unit.type.itemCapacity,build.items.get(itemTarget)),unit);\n        }\n      }\n    }\n  }\n else {\n    if (unloadTarget == null) {\n      if (retarget()) {\n        findDropTarget(unit.item(),0,null);\n        if (unloadTarget == null) {\n          unit.clearItem();\n        }\n      }\n    }\n else {\n      if (unloadTarget.item != itemTarget) {\n        unloadTarget=null;\n        return;\n      }\n      moveTo(unloadTarget,moveRange,moveSmoothing);\n      if (unit.within(unloadTarget,transferRange) && timer.get(timerTarget2,dropSpacing)) {\n        int max=unloadTarget.acceptStack(unit.item(),unit.stack.amount,unit);\n        if (max > 0) {\n          noDestTimer=0f;\n          Call.transferItemTo(unit,unit.item(),max,unit.x,unit.y,unloadTarget);\n          if (!unit.hasItem()) {\n            targetIndex++;\n          }\n        }\n else         if ((noDestTimer+=dropSpacing) >= emptyWaitTime) {\n          targetIndex=findDropTarget(unit.item(),targetIndex,unloadTarget) + 1;\n          if (unloadTarget == null) {\n            unit.clearItem();\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 229,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3061,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void updateMovement(){\n  if (!(unit instanceof   BuildingTetherc tether) || tether.building() == null)   return;\n  var build=tether.building();\n  if (build.items == null)   return;\n  if (!unit.hasItem()) {\n    moveTo(build,moveRange,moveSmoothing);\n    if (build.items.any() && unit.within(build,transferRange)) {\n      if (retarget()) {\n        findAnyTarget(build);\n        if (unloadTarget != null) {\n          Call.takeItems(build,itemTarget,Math.min(unit.type.itemCapacity,build.items.get(itemTarget)),unit);\n        }\n      }\n    }\n  }\n else {\n    if (unloadTarget == null) {\n      if (retarget()) {\n        findDropTarget(unit.item(),0,null);\n        if (unloadTarget == null) {\n          unit.clearItem();\n        }\n      }\n    }\n else {\n      if (unloadTarget.item != itemTarget) {\n        unloadTarget=null;\n        return;\n      }\n      moveTo(unloadTarget,moveRange,moveSmoothing);\n      if (unit.within(unloadTarget,transferRange) && timer.get(timerTarget2,dropSpacing)) {\n        int max=unloadTarget.acceptStack(unit.item(),unit.stack.amount,unit);\n        if (max > 0) {\n          noDestTimer=0f;\n          Call.transferItemTo(unit,unit.item(),max,unit.x,unit.y,unloadTarget);\n          if (!unit.hasItem()) {\n            targetIndex++;\n          }\n        }\n else         if ((noDestTimer+=dropSpacing) >= emptyWaitTime) {\n          targetIndex=findDropTarget(unit.item(),targetIndex,unloadTarget) + 1;\n          if (unloadTarget == null) {\n            unit.clearItem();\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 235,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 91,
        "startColumnNumber" : 24,
        "endLineNumber" : 93,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (unloadTarget == null) {\n  unit.clearItem();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 52,
    "startColumnNumber" : 15,
    "endLineNumber" : 52,
    "endColumnNumber" : 35
  }, {
    "charLength" : 20,
    "startLineNumber" : 57,
    "startColumnNumber" : 23,
    "endLineNumber" : 57,
    "endColumnNumber" : 43
  }, {
    "charLength" : 20,
    "startLineNumber" : 91,
    "startColumnNumber" : 27,
    "endLineNumber" : 91,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 0
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 0
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 7
  } ]
}