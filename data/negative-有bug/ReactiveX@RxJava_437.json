{
  "id" : 437,
  "expression" : "merge",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/flowable/FlowableMergeTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "merge",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 556,
      "startColumnNumber" : 12,
      "endLineNumber" : 556,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 556,
        "startColumnNumber" : 12,
        "endLineNumber" : 556,
        "endColumnNumber" : 31
      },
      "nodeContext" : "merge.subscribe(ts)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 556,
        "startColumnNumber" : 12,
        "endLineNumber" : 556,
        "endColumnNumber" : 32
      },
      "nodeContext" : "merge.subscribe(ts);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 660,
        "startLineNumber" : 553,
        "startColumnNumber" : 37,
        "endLineNumber" : 565,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Flowable<Integer> merge=Flowable.merge(o.onBackpressureBuffer(),o.onBackpressureBuffer(),o.onBackpressureBuffer());\n  TestSubscriber<Integer> ts=new TestSubscriber<Integer>();\n  merge.subscribe(ts);\n  ts.awaitTerminalEvent(3,TimeUnit.SECONDS);\n  ts.assertTerminated();\n  ts.assertNoErrors();\n  ts.assertComplete();\n  List<Integer> onNextEvents=ts.values();\n  assertEquals(30000,onNextEvents.size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 78,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 689,
        "startLineNumber" : 553,
        "startColumnNumber" : 8,
        "endLineNumber" : 565,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 10; i++) {\n  Flowable<Integer> merge=Flowable.merge(o.onBackpressureBuffer(),o.onBackpressureBuffer(),o.onBackpressureBuffer());\n  TestSubscriber<Integer> ts=new TestSubscriber<Integer>();\n  merge.subscribe(ts);\n  ts.awaitTerminalEvent(3,TimeUnit.SECONDS);\n  ts.assertTerminated();\n  ts.assertNoErrors();\n  ts.assertComplete();\n  List<Integer> onNextEvents=ts.values();\n  assertEquals(30000,onNextEvents.size());\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 89,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 802,
        "startLineNumber" : 550,
        "startColumnNumber" : 34,
        "endLineNumber" : 566,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Flowable<Integer> o=Flowable.range(1,10000).subscribeOn(Schedulers.newThread());\n  for (int i=0; i < 10; i++) {\n    Flowable<Integer> merge=Flowable.merge(o.onBackpressureBuffer(),o.onBackpressureBuffer(),o.onBackpressureBuffer());\n    TestSubscriber<Integer> ts=new TestSubscriber<Integer>();\n    merge.subscribe(ts);\n    ts.awaitTerminalEvent(3,TimeUnit.SECONDS);\n    ts.assertTerminated();\n    ts.assertNoErrors();\n    ts.assertComplete();\n    List<Integer> onNextEvents=ts.values();\n    assertEquals(30000,onNextEvents.size());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 108,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 862,
        "startLineNumber" : 549,
        "startColumnNumber" : 4,
        "endLineNumber" : 566,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testConcurrency(){\n  Flowable<Integer> o=Flowable.range(1,10000).subscribeOn(Schedulers.newThread());\n  for (int i=0; i < 10; i++) {\n    Flowable<Integer> merge=Flowable.merge(o.onBackpressureBuffer(),o.onBackpressureBuffer(),o.onBackpressureBuffer());\n    TestSubscriber<Integer> ts=new TestSubscriber<Integer>();\n    merge.subscribe(ts);\n    ts.awaitTerminalEvent(3,TimeUnit.SECONDS);\n    ts.assertTerminated();\n    ts.assertNoErrors();\n    ts.assertComplete();\n    List<Integer> onNextEvents=ts.values();\n    assertEquals(30000,onNextEvents.size());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 114,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 556,
        "startColumnNumber" : 12,
        "endLineNumber" : 556,
        "endColumnNumber" : 32
      },
      "nodeContext" : "merge.subscribe(ts);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.Flowable<java.lang.Integer>"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 556,
    "startColumnNumber" : 12,
    "endLineNumber" : 556,
    "endColumnNumber" : 17
  } ],
  "layoutRelationDataList" : [ ]
}