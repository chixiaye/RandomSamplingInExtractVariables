{
  "id" : 443,
  "expression" : "BytesRange.from(1000).contains(BytesRange.from(1000))",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/imagepipeline-base/src/test/java/com/facebook/imagepipeline/common/BytesRangeTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "BytesRange.from(1000).contains(BytesRange.from(1000))",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 53,
      "startLineNumber" : 34,
      "startColumnNumber" : 15,
      "endLineNumber" : 34,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 10,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 34,
        "startColumnNumber" : 4,
        "endLineNumber" : 34,
        "endColumnNumber" : 69
      },
      "nodeContext" : "assertThat(BytesRange.from(1000).contains(BytesRange.from(1000)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 34,
        "startColumnNumber" : 4,
        "endLineNumber" : 34,
        "endColumnNumber" : 78
      },
      "nodeContext" : "assertThat(BytesRange.from(1000).contains(BytesRange.from(1000))).isTrue()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 34,
        "startColumnNumber" : 4,
        "endLineNumber" : 34,
        "endColumnNumber" : 79
      },
      "nodeContext" : "assertThat(BytesRange.from(1000).contains(BytesRange.from(1000))).isTrue();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 810,
        "startLineNumber" : 28,
        "startColumnNumber" : 29,
        "endLineNumber" : 43,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertThat(BytesRange.toMax(1000).contains(BytesRange.toMax(999))).isTrue();\n  assertThat(BytesRange.toMax(1000).contains(BytesRange.toMax(1000))).isTrue();\n  assertThat(BytesRange.toMax(1000).contains(BytesRange.toMax(1001))).isFalse();\n  assertThat(BytesRange.from(1000).contains(BytesRange.from(999))).isFalse();\n  assertThat(BytesRange.from(1000).contains(BytesRange.from(1000))).isTrue();\n  assertThat(BytesRange.from(1000).contains(BytesRange.from(1001))).isTrue();\n  assertThat(BytesRange.from(1000).contains(BytesRange.toMax(999))).isFalse();\n  assertThat(new BytesRange(0,BytesRange.TO_END_OF_CONTENT).contains(new BytesRange(0,1000))).isTrue();\n  assertThat(new BytesRange(0,1000).contains(new BytesRange(0,BytesRange.TO_END_OF_CONTENT))).isFalse();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 144,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 845,
        "startLineNumber" : 27,
        "startColumnNumber" : 2,
        "endLineNumber" : 43,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testContains(){\n  assertThat(BytesRange.toMax(1000).contains(BytesRange.toMax(999))).isTrue();\n  assertThat(BytesRange.toMax(1000).contains(BytesRange.toMax(1000))).isTrue();\n  assertThat(BytesRange.toMax(1000).contains(BytesRange.toMax(1001))).isFalse();\n  assertThat(BytesRange.from(1000).contains(BytesRange.from(999))).isFalse();\n  assertThat(BytesRange.from(1000).contains(BytesRange.from(1000))).isTrue();\n  assertThat(BytesRange.from(1000).contains(BytesRange.from(1001))).isTrue();\n  assertThat(BytesRange.from(1000).contains(BytesRange.toMax(999))).isFalse();\n  assertThat(new BytesRange(0,BytesRange.TO_END_OF_CONTENT).contains(new BytesRange(0,1000))).isTrue();\n  assertThat(new BytesRange(0,1000).contains(new BytesRange(0,BytesRange.TO_END_OF_CONTENT))).isFalse();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 150,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 34,
        "startColumnNumber" : 4,
        "endLineNumber" : 34,
        "endColumnNumber" : 79
      },
      "nodeContext" : "assertThat(BytesRange.from(1000).contains(BytesRange.from(1000))).isTrue();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 7,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 53,
    "startLineNumber" : 34,
    "startColumnNumber" : 15,
    "endLineNumber" : 34,
    "endColumnNumber" : 68
  } ],
  "layoutRelationDataList" : [ ]
}