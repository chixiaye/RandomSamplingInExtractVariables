{
  "id" : 238,
  "expression" : "manager",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/tinker-android/tinker-android-lib/src/main/java/com/tencent/tinker/lib/listener/DefaultPatchListener.java",
  "occurrences" : 6,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "manager",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 107,
      "startColumnNumber" : 13,
      "endLineNumber" : 107,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 107,
        "startColumnNumber" : 13,
        "endLineNumber" : 107,
        "endColumnNumber" : 38
      },
      "nodeContext" : "manager.isTinkerEnabled()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 107,
        "startColumnNumber" : 12,
        "endLineNumber" : 107,
        "endColumnNumber" : 38
      },
      "nodeContext" : "!manager.isTinkerEnabled()",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 107,
        "startColumnNumber" : 12,
        "endLineNumber" : 107,
        "endColumnNumber" : 108
      },
      "nodeContext" : "!manager.isTinkerEnabled() || !ShareTinkerInternals.isTinkerEnableWithSharedPreferences(context)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 107,
        "startColumnNumber" : 8,
        "endLineNumber" : 109,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!manager.isTinkerEnabled() || !ShareTinkerInternals.isTinkerEnableWithSharedPreferences(context)) {\n  return ShareConstants.ERROR_PATCH_DISABLE;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2693,
        "startLineNumber" : 104,
        "startColumnNumber" : 59,
        "endLineNumber" : 165,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Tinker manager=Tinker.with(context);\n  if (!manager.isTinkerEnabled() || !ShareTinkerInternals.isTinkerEnableWithSharedPreferences(context)) {\n    return ShareConstants.ERROR_PATCH_DISABLE;\n  }\n  if (TextUtils.isEmpty(patchMd5)) {\n    return ShareConstants.ERROR_PATCH_NOTEXIST;\n  }\n  final File file=new File(path);\n  if (!SharePatchFileUtil.isLegalFile(file)) {\n    return ShareConstants.ERROR_PATCH_NOTEXIST;\n  }\n  if (manager.isPatchProcess()) {\n    return ShareConstants.ERROR_PATCH_INSERVICE;\n  }\n  if (TinkerServiceInternals.isTinkerPatchServiceRunning(context)) {\n    return ShareConstants.ERROR_PATCH_RUNNING;\n  }\n  if (ShareTinkerInternals.isVmJit()) {\n    return ShareConstants.ERROR_PATCH_JIT;\n  }\n  final TinkerLoadResult loadResult=manager.getTinkerLoadResultIfPresent();\n  final boolean repairOptNeeded=manager.isMainProcess() && loadResult != null && loadResult.useInterpretMode;\n  if (!repairOptNeeded) {\n    if (manager.isTinkerLoaded() && loadResult != null) {\n      String currentVersion=loadResult.currentVersion;\n      if (patchMd5.equals(currentVersion)) {\n        return ShareConstants.ERROR_PATCH_ALREADY_APPLY;\n      }\n    }\n    final String patchDirectory=manager.getPatchDirectory().getAbsolutePath();\n    File patchInfoLockFile=SharePatchFileUtil.getPatchInfoLockFile(patchDirectory);\n    File patchInfoFile=SharePatchFileUtil.getPatchInfoFile(patchDirectory);\n    try {\n      final SharePatchInfo currInfo=SharePatchInfo.readAndCheckPropertyWithLock(patchInfoFile,patchInfoLockFile);\n      if (currInfo != null && !ShareTinkerInternals.isNullOrNil(currInfo.newVersion) && !currInfo.isRemoveNewVersion) {\n        if (patchMd5.equals(currInfo.newVersion)) {\n          return ShareConstants.ERROR_PATCH_ALREADY_APPLY;\n        }\n      }\n    }\n catch (    Throwable ignored) {\n    }\n  }\n  if (!UpgradePatchRetry.getInstance(context).onPatchListenerCheck(patchMd5)) {\n    return ShareConstants.ERROR_PATCH_RETRY_COUNT_LIMIT;\n  }\n  return ShareConstants.ERROR_PATCH_OK;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 238,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2748,
        "startLineNumber" : 104,
        "startColumnNumber" : 4,
        "endLineNumber" : 165,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected int patchCheck(String path,String patchMd5){\n  final Tinker manager=Tinker.with(context);\n  if (!manager.isTinkerEnabled() || !ShareTinkerInternals.isTinkerEnableWithSharedPreferences(context)) {\n    return ShareConstants.ERROR_PATCH_DISABLE;\n  }\n  if (TextUtils.isEmpty(patchMd5)) {\n    return ShareConstants.ERROR_PATCH_NOTEXIST;\n  }\n  final File file=new File(path);\n  if (!SharePatchFileUtil.isLegalFile(file)) {\n    return ShareConstants.ERROR_PATCH_NOTEXIST;\n  }\n  if (manager.isPatchProcess()) {\n    return ShareConstants.ERROR_PATCH_INSERVICE;\n  }\n  if (TinkerServiceInternals.isTinkerPatchServiceRunning(context)) {\n    return ShareConstants.ERROR_PATCH_RUNNING;\n  }\n  if (ShareTinkerInternals.isVmJit()) {\n    return ShareConstants.ERROR_PATCH_JIT;\n  }\n  final TinkerLoadResult loadResult=manager.getTinkerLoadResultIfPresent();\n  final boolean repairOptNeeded=manager.isMainProcess() && loadResult != null && loadResult.useInterpretMode;\n  if (!repairOptNeeded) {\n    if (manager.isTinkerLoaded() && loadResult != null) {\n      String currentVersion=loadResult.currentVersion;\n      if (patchMd5.equals(currentVersion)) {\n        return ShareConstants.ERROR_PATCH_ALREADY_APPLY;\n      }\n    }\n    final String patchDirectory=manager.getPatchDirectory().getAbsolutePath();\n    File patchInfoLockFile=SharePatchFileUtil.getPatchInfoLockFile(patchDirectory);\n    File patchInfoFile=SharePatchFileUtil.getPatchInfoFile(patchDirectory);\n    try {\n      final SharePatchInfo currInfo=SharePatchInfo.readAndCheckPropertyWithLock(patchInfoFile,patchInfoLockFile);\n      if (currInfo != null && !ShareTinkerInternals.isNullOrNil(currInfo.newVersion) && !currInfo.isRemoveNewVersion) {\n        if (patchMd5.equals(currInfo.newVersion)) {\n          return ShareConstants.ERROR_PATCH_ALREADY_APPLY;\n        }\n      }\n    }\n catch (    Throwable ignored) {\n    }\n  }\n  if (!UpgradePatchRetry.getInstance(context).onPatchListenerCheck(patchMd5)) {\n    return ShareConstants.ERROR_PATCH_RETRY_COUNT_LIMIT;\n  }\n  return ShareConstants.ERROR_PATCH_OK;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 250,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 107,
        "startColumnNumber" : 12,
        "endLineNumber" : 107,
        "endColumnNumber" : 108
      },
      "nodeContext" : "!manager.isTinkerEnabled() || !ShareTinkerInternals.isTinkerEnableWithSharedPreferences(context)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.lib.tinker.Tinker"
  }, {
    "nodeContext" : "manager",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 119,
      "startColumnNumber" : 12,
      "endLineNumber" : 119,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 119,
        "startColumnNumber" : 12,
        "endLineNumber" : 119,
        "endColumnNumber" : 36
      },
      "nodeContext" : "manager.isPatchProcess()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 119,
        "startColumnNumber" : 8,
        "endLineNumber" : 121,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (manager.isPatchProcess()) {\n  return ShareConstants.ERROR_PATCH_INSERVICE;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2693,
        "startLineNumber" : 104,
        "startColumnNumber" : 59,
        "endLineNumber" : 165,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Tinker manager=Tinker.with(context);\n  if (!manager.isTinkerEnabled() || !ShareTinkerInternals.isTinkerEnableWithSharedPreferences(context)) {\n    return ShareConstants.ERROR_PATCH_DISABLE;\n  }\n  if (TextUtils.isEmpty(patchMd5)) {\n    return ShareConstants.ERROR_PATCH_NOTEXIST;\n  }\n  final File file=new File(path);\n  if (!SharePatchFileUtil.isLegalFile(file)) {\n    return ShareConstants.ERROR_PATCH_NOTEXIST;\n  }\n  if (manager.isPatchProcess()) {\n    return ShareConstants.ERROR_PATCH_INSERVICE;\n  }\n  if (TinkerServiceInternals.isTinkerPatchServiceRunning(context)) {\n    return ShareConstants.ERROR_PATCH_RUNNING;\n  }\n  if (ShareTinkerInternals.isVmJit()) {\n    return ShareConstants.ERROR_PATCH_JIT;\n  }\n  final TinkerLoadResult loadResult=manager.getTinkerLoadResultIfPresent();\n  final boolean repairOptNeeded=manager.isMainProcess() && loadResult != null && loadResult.useInterpretMode;\n  if (!repairOptNeeded) {\n    if (manager.isTinkerLoaded() && loadResult != null) {\n      String currentVersion=loadResult.currentVersion;\n      if (patchMd5.equals(currentVersion)) {\n        return ShareConstants.ERROR_PATCH_ALREADY_APPLY;\n      }\n    }\n    final String patchDirectory=manager.getPatchDirectory().getAbsolutePath();\n    File patchInfoLockFile=SharePatchFileUtil.getPatchInfoLockFile(patchDirectory);\n    File patchInfoFile=SharePatchFileUtil.getPatchInfoFile(patchDirectory);\n    try {\n      final SharePatchInfo currInfo=SharePatchInfo.readAndCheckPropertyWithLock(patchInfoFile,patchInfoLockFile);\n      if (currInfo != null && !ShareTinkerInternals.isNullOrNil(currInfo.newVersion) && !currInfo.isRemoveNewVersion) {\n        if (patchMd5.equals(currInfo.newVersion)) {\n          return ShareConstants.ERROR_PATCH_ALREADY_APPLY;\n        }\n      }\n    }\n catch (    Throwable ignored) {\n    }\n  }\n  if (!UpgradePatchRetry.getInstance(context).onPatchListenerCheck(patchMd5)) {\n    return ShareConstants.ERROR_PATCH_RETRY_COUNT_LIMIT;\n  }\n  return ShareConstants.ERROR_PATCH_OK;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 238,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2748,
        "startLineNumber" : 104,
        "startColumnNumber" : 4,
        "endLineNumber" : 165,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected int patchCheck(String path,String patchMd5){\n  final Tinker manager=Tinker.with(context);\n  if (!manager.isTinkerEnabled() || !ShareTinkerInternals.isTinkerEnableWithSharedPreferences(context)) {\n    return ShareConstants.ERROR_PATCH_DISABLE;\n  }\n  if (TextUtils.isEmpty(patchMd5)) {\n    return ShareConstants.ERROR_PATCH_NOTEXIST;\n  }\n  final File file=new File(path);\n  if (!SharePatchFileUtil.isLegalFile(file)) {\n    return ShareConstants.ERROR_PATCH_NOTEXIST;\n  }\n  if (manager.isPatchProcess()) {\n    return ShareConstants.ERROR_PATCH_INSERVICE;\n  }\n  if (TinkerServiceInternals.isTinkerPatchServiceRunning(context)) {\n    return ShareConstants.ERROR_PATCH_RUNNING;\n  }\n  if (ShareTinkerInternals.isVmJit()) {\n    return ShareConstants.ERROR_PATCH_JIT;\n  }\n  final TinkerLoadResult loadResult=manager.getTinkerLoadResultIfPresent();\n  final boolean repairOptNeeded=manager.isMainProcess() && loadResult != null && loadResult.useInterpretMode;\n  if (!repairOptNeeded) {\n    if (manager.isTinkerLoaded() && loadResult != null) {\n      String currentVersion=loadResult.currentVersion;\n      if (patchMd5.equals(currentVersion)) {\n        return ShareConstants.ERROR_PATCH_ALREADY_APPLY;\n      }\n    }\n    final String patchDirectory=manager.getPatchDirectory().getAbsolutePath();\n    File patchInfoLockFile=SharePatchFileUtil.getPatchInfoLockFile(patchDirectory);\n    File patchInfoFile=SharePatchFileUtil.getPatchInfoFile(patchDirectory);\n    try {\n      final SharePatchInfo currInfo=SharePatchInfo.readAndCheckPropertyWithLock(patchInfoFile,patchInfoLockFile);\n      if (currInfo != null && !ShareTinkerInternals.isNullOrNil(currInfo.newVersion) && !currInfo.isRemoveNewVersion) {\n        if (patchMd5.equals(currInfo.newVersion)) {\n          return ShareConstants.ERROR_PATCH_ALREADY_APPLY;\n        }\n      }\n    }\n catch (    Throwable ignored) {\n    }\n  }\n  if (!UpgradePatchRetry.getInstance(context).onPatchListenerCheck(patchMd5)) {\n    return ShareConstants.ERROR_PATCH_RETRY_COUNT_LIMIT;\n  }\n  return ShareConstants.ERROR_PATCH_OK;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 250,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 119,
        "startColumnNumber" : 12,
        "endLineNumber" : 119,
        "endColumnNumber" : 36
      },
      "nodeContext" : "manager.isPatchProcess()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.lib.tinker.Tinker"
  }, {
    "nodeContext" : "manager",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 131,
      "startColumnNumber" : 44,
      "endLineNumber" : 131,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 131,
        "startColumnNumber" : 44,
        "endLineNumber" : 131,
        "endColumnNumber" : 82
      },
      "nodeContext" : "manager.getTinkerLoadResultIfPresent()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 131,
        "startColumnNumber" : 31,
        "endLineNumber" : 131,
        "endColumnNumber" : 82
      },
      "nodeContext" : "loadResult=manager.getTinkerLoadResultIfPresent()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 131,
        "startColumnNumber" : 8,
        "endLineNumber" : 131,
        "endColumnNumber" : 83
      },
      "nodeContext" : "final TinkerLoadResult loadResult=manager.getTinkerLoadResultIfPresent();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2693,
        "startLineNumber" : 104,
        "startColumnNumber" : 59,
        "endLineNumber" : 165,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Tinker manager=Tinker.with(context);\n  if (!manager.isTinkerEnabled() || !ShareTinkerInternals.isTinkerEnableWithSharedPreferences(context)) {\n    return ShareConstants.ERROR_PATCH_DISABLE;\n  }\n  if (TextUtils.isEmpty(patchMd5)) {\n    return ShareConstants.ERROR_PATCH_NOTEXIST;\n  }\n  final File file=new File(path);\n  if (!SharePatchFileUtil.isLegalFile(file)) {\n    return ShareConstants.ERROR_PATCH_NOTEXIST;\n  }\n  if (manager.isPatchProcess()) {\n    return ShareConstants.ERROR_PATCH_INSERVICE;\n  }\n  if (TinkerServiceInternals.isTinkerPatchServiceRunning(context)) {\n    return ShareConstants.ERROR_PATCH_RUNNING;\n  }\n  if (ShareTinkerInternals.isVmJit()) {\n    return ShareConstants.ERROR_PATCH_JIT;\n  }\n  final TinkerLoadResult loadResult=manager.getTinkerLoadResultIfPresent();\n  final boolean repairOptNeeded=manager.isMainProcess() && loadResult != null && loadResult.useInterpretMode;\n  if (!repairOptNeeded) {\n    if (manager.isTinkerLoaded() && loadResult != null) {\n      String currentVersion=loadResult.currentVersion;\n      if (patchMd5.equals(currentVersion)) {\n        return ShareConstants.ERROR_PATCH_ALREADY_APPLY;\n      }\n    }\n    final String patchDirectory=manager.getPatchDirectory().getAbsolutePath();\n    File patchInfoLockFile=SharePatchFileUtil.getPatchInfoLockFile(patchDirectory);\n    File patchInfoFile=SharePatchFileUtil.getPatchInfoFile(patchDirectory);\n    try {\n      final SharePatchInfo currInfo=SharePatchInfo.readAndCheckPropertyWithLock(patchInfoFile,patchInfoLockFile);\n      if (currInfo != null && !ShareTinkerInternals.isNullOrNil(currInfo.newVersion) && !currInfo.isRemoveNewVersion) {\n        if (patchMd5.equals(currInfo.newVersion)) {\n          return ShareConstants.ERROR_PATCH_ALREADY_APPLY;\n        }\n      }\n    }\n catch (    Throwable ignored) {\n    }\n  }\n  if (!UpgradePatchRetry.getInstance(context).onPatchListenerCheck(patchMd5)) {\n    return ShareConstants.ERROR_PATCH_RETRY_COUNT_LIMIT;\n  }\n  return ShareConstants.ERROR_PATCH_OK;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 238,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2748,
        "startLineNumber" : 104,
        "startColumnNumber" : 4,
        "endLineNumber" : 165,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected int patchCheck(String path,String patchMd5){\n  final Tinker manager=Tinker.with(context);\n  if (!manager.isTinkerEnabled() || !ShareTinkerInternals.isTinkerEnableWithSharedPreferences(context)) {\n    return ShareConstants.ERROR_PATCH_DISABLE;\n  }\n  if (TextUtils.isEmpty(patchMd5)) {\n    return ShareConstants.ERROR_PATCH_NOTEXIST;\n  }\n  final File file=new File(path);\n  if (!SharePatchFileUtil.isLegalFile(file)) {\n    return ShareConstants.ERROR_PATCH_NOTEXIST;\n  }\n  if (manager.isPatchProcess()) {\n    return ShareConstants.ERROR_PATCH_INSERVICE;\n  }\n  if (TinkerServiceInternals.isTinkerPatchServiceRunning(context)) {\n    return ShareConstants.ERROR_PATCH_RUNNING;\n  }\n  if (ShareTinkerInternals.isVmJit()) {\n    return ShareConstants.ERROR_PATCH_JIT;\n  }\n  final TinkerLoadResult loadResult=manager.getTinkerLoadResultIfPresent();\n  final boolean repairOptNeeded=manager.isMainProcess() && loadResult != null && loadResult.useInterpretMode;\n  if (!repairOptNeeded) {\n    if (manager.isTinkerLoaded() && loadResult != null) {\n      String currentVersion=loadResult.currentVersion;\n      if (patchMd5.equals(currentVersion)) {\n        return ShareConstants.ERROR_PATCH_ALREADY_APPLY;\n      }\n    }\n    final String patchDirectory=manager.getPatchDirectory().getAbsolutePath();\n    File patchInfoLockFile=SharePatchFileUtil.getPatchInfoLockFile(patchDirectory);\n    File patchInfoFile=SharePatchFileUtil.getPatchInfoFile(patchDirectory);\n    try {\n      final SharePatchInfo currInfo=SharePatchInfo.readAndCheckPropertyWithLock(patchInfoFile,patchInfoLockFile);\n      if (currInfo != null && !ShareTinkerInternals.isNullOrNil(currInfo.newVersion) && !currInfo.isRemoveNewVersion) {\n        if (patchMd5.equals(currInfo.newVersion)) {\n          return ShareConstants.ERROR_PATCH_ALREADY_APPLY;\n        }\n      }\n    }\n catch (    Throwable ignored) {\n    }\n  }\n  if (!UpgradePatchRetry.getInstance(context).onPatchListenerCheck(patchMd5)) {\n    return ShareConstants.ERROR_PATCH_RETRY_COUNT_LIMIT;\n  }\n  return ShareConstants.ERROR_PATCH_OK;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 250,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 131,
        "startColumnNumber" : 8,
        "endLineNumber" : 131,
        "endColumnNumber" : 83
      },
      "nodeContext" : "final TinkerLoadResult loadResult=manager.getTinkerLoadResultIfPresent();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.lib.tinker.Tinker"
  }, {
    "nodeContext" : "manager",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 133,
      "startColumnNumber" : 40,
      "endLineNumber" : 133,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 133,
        "startColumnNumber" : 40,
        "endLineNumber" : 133,
        "endColumnNumber" : 63
      },
      "nodeContext" : "manager.isMainProcess()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 133,
        "startColumnNumber" : 40,
        "endLineNumber" : 134,
        "endColumnNumber" : 37
      },
      "nodeContext" : "manager.isMainProcess() && loadResult != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 133,
        "startColumnNumber" : 40,
        "endLineNumber" : 134,
        "endColumnNumber" : 68
      },
      "nodeContext" : "manager.isMainProcess() && loadResult != null && loadResult.useInterpretMode",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 133,
        "startColumnNumber" : 22,
        "endLineNumber" : 134,
        "endColumnNumber" : 68
      },
      "nodeContext" : "repairOptNeeded=manager.isMainProcess() && loadResult != null && loadResult.useInterpretMode",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 133,
        "startColumnNumber" : 8,
        "endLineNumber" : 134,
        "endColumnNumber" : 69
      },
      "nodeContext" : "final boolean repairOptNeeded=manager.isMainProcess() && loadResult != null && loadResult.useInterpretMode;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2693,
        "startLineNumber" : 104,
        "startColumnNumber" : 59,
        "endLineNumber" : 165,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Tinker manager=Tinker.with(context);\n  if (!manager.isTinkerEnabled() || !ShareTinkerInternals.isTinkerEnableWithSharedPreferences(context)) {\n    return ShareConstants.ERROR_PATCH_DISABLE;\n  }\n  if (TextUtils.isEmpty(patchMd5)) {\n    return ShareConstants.ERROR_PATCH_NOTEXIST;\n  }\n  final File file=new File(path);\n  if (!SharePatchFileUtil.isLegalFile(file)) {\n    return ShareConstants.ERROR_PATCH_NOTEXIST;\n  }\n  if (manager.isPatchProcess()) {\n    return ShareConstants.ERROR_PATCH_INSERVICE;\n  }\n  if (TinkerServiceInternals.isTinkerPatchServiceRunning(context)) {\n    return ShareConstants.ERROR_PATCH_RUNNING;\n  }\n  if (ShareTinkerInternals.isVmJit()) {\n    return ShareConstants.ERROR_PATCH_JIT;\n  }\n  final TinkerLoadResult loadResult=manager.getTinkerLoadResultIfPresent();\n  final boolean repairOptNeeded=manager.isMainProcess() && loadResult != null && loadResult.useInterpretMode;\n  if (!repairOptNeeded) {\n    if (manager.isTinkerLoaded() && loadResult != null) {\n      String currentVersion=loadResult.currentVersion;\n      if (patchMd5.equals(currentVersion)) {\n        return ShareConstants.ERROR_PATCH_ALREADY_APPLY;\n      }\n    }\n    final String patchDirectory=manager.getPatchDirectory().getAbsolutePath();\n    File patchInfoLockFile=SharePatchFileUtil.getPatchInfoLockFile(patchDirectory);\n    File patchInfoFile=SharePatchFileUtil.getPatchInfoFile(patchDirectory);\n    try {\n      final SharePatchInfo currInfo=SharePatchInfo.readAndCheckPropertyWithLock(patchInfoFile,patchInfoLockFile);\n      if (currInfo != null && !ShareTinkerInternals.isNullOrNil(currInfo.newVersion) && !currInfo.isRemoveNewVersion) {\n        if (patchMd5.equals(currInfo.newVersion)) {\n          return ShareConstants.ERROR_PATCH_ALREADY_APPLY;\n        }\n      }\n    }\n catch (    Throwable ignored) {\n    }\n  }\n  if (!UpgradePatchRetry.getInstance(context).onPatchListenerCheck(patchMd5)) {\n    return ShareConstants.ERROR_PATCH_RETRY_COUNT_LIMIT;\n  }\n  return ShareConstants.ERROR_PATCH_OK;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 238,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2748,
        "startLineNumber" : 104,
        "startColumnNumber" : 4,
        "endLineNumber" : 165,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected int patchCheck(String path,String patchMd5){\n  final Tinker manager=Tinker.with(context);\n  if (!manager.isTinkerEnabled() || !ShareTinkerInternals.isTinkerEnableWithSharedPreferences(context)) {\n    return ShareConstants.ERROR_PATCH_DISABLE;\n  }\n  if (TextUtils.isEmpty(patchMd5)) {\n    return ShareConstants.ERROR_PATCH_NOTEXIST;\n  }\n  final File file=new File(path);\n  if (!SharePatchFileUtil.isLegalFile(file)) {\n    return ShareConstants.ERROR_PATCH_NOTEXIST;\n  }\n  if (manager.isPatchProcess()) {\n    return ShareConstants.ERROR_PATCH_INSERVICE;\n  }\n  if (TinkerServiceInternals.isTinkerPatchServiceRunning(context)) {\n    return ShareConstants.ERROR_PATCH_RUNNING;\n  }\n  if (ShareTinkerInternals.isVmJit()) {\n    return ShareConstants.ERROR_PATCH_JIT;\n  }\n  final TinkerLoadResult loadResult=manager.getTinkerLoadResultIfPresent();\n  final boolean repairOptNeeded=manager.isMainProcess() && loadResult != null && loadResult.useInterpretMode;\n  if (!repairOptNeeded) {\n    if (manager.isTinkerLoaded() && loadResult != null) {\n      String currentVersion=loadResult.currentVersion;\n      if (patchMd5.equals(currentVersion)) {\n        return ShareConstants.ERROR_PATCH_ALREADY_APPLY;\n      }\n    }\n    final String patchDirectory=manager.getPatchDirectory().getAbsolutePath();\n    File patchInfoLockFile=SharePatchFileUtil.getPatchInfoLockFile(patchDirectory);\n    File patchInfoFile=SharePatchFileUtil.getPatchInfoFile(patchDirectory);\n    try {\n      final SharePatchInfo currInfo=SharePatchInfo.readAndCheckPropertyWithLock(patchInfoFile,patchInfoLockFile);\n      if (currInfo != null && !ShareTinkerInternals.isNullOrNil(currInfo.newVersion) && !currInfo.isRemoveNewVersion) {\n        if (patchMd5.equals(currInfo.newVersion)) {\n          return ShareConstants.ERROR_PATCH_ALREADY_APPLY;\n        }\n      }\n    }\n catch (    Throwable ignored) {\n    }\n  }\n  if (!UpgradePatchRetry.getInstance(context).onPatchListenerCheck(patchMd5)) {\n    return ShareConstants.ERROR_PATCH_RETRY_COUNT_LIMIT;\n  }\n  return ShareConstants.ERROR_PATCH_OK;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 250,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 133,
        "startColumnNumber" : 40,
        "endLineNumber" : 133,
        "endColumnNumber" : 63
      },
      "nodeContext" : "manager.isMainProcess()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.lib.tinker.Tinker"
  }, {
    "nodeContext" : "manager",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 137,
      "startColumnNumber" : 16,
      "endLineNumber" : 137,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 137,
        "startColumnNumber" : 16,
        "endLineNumber" : 137,
        "endColumnNumber" : 40
      },
      "nodeContext" : "manager.isTinkerLoaded()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 137,
        "startColumnNumber" : 16,
        "endLineNumber" : 137,
        "endColumnNumber" : 62
      },
      "nodeContext" : "manager.isTinkerLoaded() && loadResult != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 276,
        "startLineNumber" : 137,
        "startColumnNumber" : 12,
        "endLineNumber" : 142,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (manager.isTinkerLoaded() && loadResult != null) {\n  String currentVersion=loadResult.currentVersion;\n  if (patchMd5.equals(currentVersion)) {\n    return ShareConstants.ERROR_PATCH_ALREADY_APPLY;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1192,
        "startLineNumber" : 136,
        "startColumnNumber" : 30,
        "endLineNumber" : 158,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (manager.isTinkerLoaded() && loadResult != null) {\n    String currentVersion=loadResult.currentVersion;\n    if (patchMd5.equals(currentVersion)) {\n      return ShareConstants.ERROR_PATCH_ALREADY_APPLY;\n    }\n  }\n  final String patchDirectory=manager.getPatchDirectory().getAbsolutePath();\n  File patchInfoLockFile=SharePatchFileUtil.getPatchInfoLockFile(patchDirectory);\n  File patchInfoFile=SharePatchFileUtil.getPatchInfoFile(patchDirectory);\n  try {\n    final SharePatchInfo currInfo=SharePatchInfo.readAndCheckPropertyWithLock(patchInfoFile,patchInfoLockFile);\n    if (currInfo != null && !ShareTinkerInternals.isNullOrNil(currInfo.newVersion) && !currInfo.isRemoveNewVersion) {\n      if (patchMd5.equals(currInfo.newVersion)) {\n        return ShareConstants.ERROR_PATCH_ALREADY_APPLY;\n      }\n    }\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1214,
        "startLineNumber" : 136,
        "startColumnNumber" : 8,
        "endLineNumber" : 158,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!repairOptNeeded) {\n  if (manager.isTinkerLoaded() && loadResult != null) {\n    String currentVersion=loadResult.currentVersion;\n    if (patchMd5.equals(currentVersion)) {\n      return ShareConstants.ERROR_PATCH_ALREADY_APPLY;\n    }\n  }\n  final String patchDirectory=manager.getPatchDirectory().getAbsolutePath();\n  File patchInfoLockFile=SharePatchFileUtil.getPatchInfoLockFile(patchDirectory);\n  File patchInfoFile=SharePatchFileUtil.getPatchInfoFile(patchDirectory);\n  try {\n    final SharePatchInfo currInfo=SharePatchInfo.readAndCheckPropertyWithLock(patchInfoFile,patchInfoLockFile);\n    if (currInfo != null && !ShareTinkerInternals.isNullOrNil(currInfo.newVersion) && !currInfo.isRemoveNewVersion) {\n      if (patchMd5.equals(currInfo.newVersion)) {\n        return ShareConstants.ERROR_PATCH_ALREADY_APPLY;\n      }\n    }\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 109,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2693,
        "startLineNumber" : 104,
        "startColumnNumber" : 59,
        "endLineNumber" : 165,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Tinker manager=Tinker.with(context);\n  if (!manager.isTinkerEnabled() || !ShareTinkerInternals.isTinkerEnableWithSharedPreferences(context)) {\n    return ShareConstants.ERROR_PATCH_DISABLE;\n  }\n  if (TextUtils.isEmpty(patchMd5)) {\n    return ShareConstants.ERROR_PATCH_NOTEXIST;\n  }\n  final File file=new File(path);\n  if (!SharePatchFileUtil.isLegalFile(file)) {\n    return ShareConstants.ERROR_PATCH_NOTEXIST;\n  }\n  if (manager.isPatchProcess()) {\n    return ShareConstants.ERROR_PATCH_INSERVICE;\n  }\n  if (TinkerServiceInternals.isTinkerPatchServiceRunning(context)) {\n    return ShareConstants.ERROR_PATCH_RUNNING;\n  }\n  if (ShareTinkerInternals.isVmJit()) {\n    return ShareConstants.ERROR_PATCH_JIT;\n  }\n  final TinkerLoadResult loadResult=manager.getTinkerLoadResultIfPresent();\n  final boolean repairOptNeeded=manager.isMainProcess() && loadResult != null && loadResult.useInterpretMode;\n  if (!repairOptNeeded) {\n    if (manager.isTinkerLoaded() && loadResult != null) {\n      String currentVersion=loadResult.currentVersion;\n      if (patchMd5.equals(currentVersion)) {\n        return ShareConstants.ERROR_PATCH_ALREADY_APPLY;\n      }\n    }\n    final String patchDirectory=manager.getPatchDirectory().getAbsolutePath();\n    File patchInfoLockFile=SharePatchFileUtil.getPatchInfoLockFile(patchDirectory);\n    File patchInfoFile=SharePatchFileUtil.getPatchInfoFile(patchDirectory);\n    try {\n      final SharePatchInfo currInfo=SharePatchInfo.readAndCheckPropertyWithLock(patchInfoFile,patchInfoLockFile);\n      if (currInfo != null && !ShareTinkerInternals.isNullOrNil(currInfo.newVersion) && !currInfo.isRemoveNewVersion) {\n        if (patchMd5.equals(currInfo.newVersion)) {\n          return ShareConstants.ERROR_PATCH_ALREADY_APPLY;\n        }\n      }\n    }\n catch (    Throwable ignored) {\n    }\n  }\n  if (!UpgradePatchRetry.getInstance(context).onPatchListenerCheck(patchMd5)) {\n    return ShareConstants.ERROR_PATCH_RETRY_COUNT_LIMIT;\n  }\n  return ShareConstants.ERROR_PATCH_OK;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 238,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2748,
        "startLineNumber" : 104,
        "startColumnNumber" : 4,
        "endLineNumber" : 165,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected int patchCheck(String path,String patchMd5){\n  final Tinker manager=Tinker.with(context);\n  if (!manager.isTinkerEnabled() || !ShareTinkerInternals.isTinkerEnableWithSharedPreferences(context)) {\n    return ShareConstants.ERROR_PATCH_DISABLE;\n  }\n  if (TextUtils.isEmpty(patchMd5)) {\n    return ShareConstants.ERROR_PATCH_NOTEXIST;\n  }\n  final File file=new File(path);\n  if (!SharePatchFileUtil.isLegalFile(file)) {\n    return ShareConstants.ERROR_PATCH_NOTEXIST;\n  }\n  if (manager.isPatchProcess()) {\n    return ShareConstants.ERROR_PATCH_INSERVICE;\n  }\n  if (TinkerServiceInternals.isTinkerPatchServiceRunning(context)) {\n    return ShareConstants.ERROR_PATCH_RUNNING;\n  }\n  if (ShareTinkerInternals.isVmJit()) {\n    return ShareConstants.ERROR_PATCH_JIT;\n  }\n  final TinkerLoadResult loadResult=manager.getTinkerLoadResultIfPresent();\n  final boolean repairOptNeeded=manager.isMainProcess() && loadResult != null && loadResult.useInterpretMode;\n  if (!repairOptNeeded) {\n    if (manager.isTinkerLoaded() && loadResult != null) {\n      String currentVersion=loadResult.currentVersion;\n      if (patchMd5.equals(currentVersion)) {\n        return ShareConstants.ERROR_PATCH_ALREADY_APPLY;\n      }\n    }\n    final String patchDirectory=manager.getPatchDirectory().getAbsolutePath();\n    File patchInfoLockFile=SharePatchFileUtil.getPatchInfoLockFile(patchDirectory);\n    File patchInfoFile=SharePatchFileUtil.getPatchInfoFile(patchDirectory);\n    try {\n      final SharePatchInfo currInfo=SharePatchInfo.readAndCheckPropertyWithLock(patchInfoFile,patchInfoLockFile);\n      if (currInfo != null && !ShareTinkerInternals.isNullOrNil(currInfo.newVersion) && !currInfo.isRemoveNewVersion) {\n        if (patchMd5.equals(currInfo.newVersion)) {\n          return ShareConstants.ERROR_PATCH_ALREADY_APPLY;\n        }\n      }\n    }\n catch (    Throwable ignored) {\n    }\n  }\n  if (!UpgradePatchRetry.getInstance(context).onPatchListenerCheck(patchMd5)) {\n    return ShareConstants.ERROR_PATCH_RETRY_COUNT_LIMIT;\n  }\n  return ShareConstants.ERROR_PATCH_OK;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 250,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 137,
        "startColumnNumber" : 16,
        "endLineNumber" : 137,
        "endColumnNumber" : 62
      },
      "nodeContext" : "manager.isTinkerLoaded() && loadResult != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.lib.tinker.Tinker"
  }, {
    "nodeContext" : "manager",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 145,
      "startColumnNumber" : 42,
      "endLineNumber" : 145,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 145,
        "startColumnNumber" : 42,
        "endLineNumber" : 145,
        "endColumnNumber" : 69
      },
      "nodeContext" : "manager.getPatchDirectory()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 145,
        "startColumnNumber" : 42,
        "endLineNumber" : 145,
        "endColumnNumber" : 87
      },
      "nodeContext" : "manager.getPatchDirectory().getAbsolutePath()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 145,
        "startColumnNumber" : 25,
        "endLineNumber" : 145,
        "endColumnNumber" : 87
      },
      "nodeContext" : "patchDirectory=manager.getPatchDirectory().getAbsolutePath()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 145,
        "startColumnNumber" : 12,
        "endLineNumber" : 145,
        "endColumnNumber" : 88
      },
      "nodeContext" : "final String patchDirectory=manager.getPatchDirectory().getAbsolutePath();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1192,
        "startLineNumber" : 136,
        "startColumnNumber" : 30,
        "endLineNumber" : 158,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (manager.isTinkerLoaded() && loadResult != null) {\n    String currentVersion=loadResult.currentVersion;\n    if (patchMd5.equals(currentVersion)) {\n      return ShareConstants.ERROR_PATCH_ALREADY_APPLY;\n    }\n  }\n  final String patchDirectory=manager.getPatchDirectory().getAbsolutePath();\n  File patchInfoLockFile=SharePatchFileUtil.getPatchInfoLockFile(patchDirectory);\n  File patchInfoFile=SharePatchFileUtil.getPatchInfoFile(patchDirectory);\n  try {\n    final SharePatchInfo currInfo=SharePatchInfo.readAndCheckPropertyWithLock(patchInfoFile,patchInfoLockFile);\n    if (currInfo != null && !ShareTinkerInternals.isNullOrNil(currInfo.newVersion) && !currInfo.isRemoveNewVersion) {\n      if (patchMd5.equals(currInfo.newVersion)) {\n        return ShareConstants.ERROR_PATCH_ALREADY_APPLY;\n      }\n    }\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1214,
        "startLineNumber" : 136,
        "startColumnNumber" : 8,
        "endLineNumber" : 158,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!repairOptNeeded) {\n  if (manager.isTinkerLoaded() && loadResult != null) {\n    String currentVersion=loadResult.currentVersion;\n    if (patchMd5.equals(currentVersion)) {\n      return ShareConstants.ERROR_PATCH_ALREADY_APPLY;\n    }\n  }\n  final String patchDirectory=manager.getPatchDirectory().getAbsolutePath();\n  File patchInfoLockFile=SharePatchFileUtil.getPatchInfoLockFile(patchDirectory);\n  File patchInfoFile=SharePatchFileUtil.getPatchInfoFile(patchDirectory);\n  try {\n    final SharePatchInfo currInfo=SharePatchInfo.readAndCheckPropertyWithLock(patchInfoFile,patchInfoLockFile);\n    if (currInfo != null && !ShareTinkerInternals.isNullOrNil(currInfo.newVersion) && !currInfo.isRemoveNewVersion) {\n      if (patchMd5.equals(currInfo.newVersion)) {\n        return ShareConstants.ERROR_PATCH_ALREADY_APPLY;\n      }\n    }\n  }\n catch (  Throwable ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 109,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2693,
        "startLineNumber" : 104,
        "startColumnNumber" : 59,
        "endLineNumber" : 165,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Tinker manager=Tinker.with(context);\n  if (!manager.isTinkerEnabled() || !ShareTinkerInternals.isTinkerEnableWithSharedPreferences(context)) {\n    return ShareConstants.ERROR_PATCH_DISABLE;\n  }\n  if (TextUtils.isEmpty(patchMd5)) {\n    return ShareConstants.ERROR_PATCH_NOTEXIST;\n  }\n  final File file=new File(path);\n  if (!SharePatchFileUtil.isLegalFile(file)) {\n    return ShareConstants.ERROR_PATCH_NOTEXIST;\n  }\n  if (manager.isPatchProcess()) {\n    return ShareConstants.ERROR_PATCH_INSERVICE;\n  }\n  if (TinkerServiceInternals.isTinkerPatchServiceRunning(context)) {\n    return ShareConstants.ERROR_PATCH_RUNNING;\n  }\n  if (ShareTinkerInternals.isVmJit()) {\n    return ShareConstants.ERROR_PATCH_JIT;\n  }\n  final TinkerLoadResult loadResult=manager.getTinkerLoadResultIfPresent();\n  final boolean repairOptNeeded=manager.isMainProcess() && loadResult != null && loadResult.useInterpretMode;\n  if (!repairOptNeeded) {\n    if (manager.isTinkerLoaded() && loadResult != null) {\n      String currentVersion=loadResult.currentVersion;\n      if (patchMd5.equals(currentVersion)) {\n        return ShareConstants.ERROR_PATCH_ALREADY_APPLY;\n      }\n    }\n    final String patchDirectory=manager.getPatchDirectory().getAbsolutePath();\n    File patchInfoLockFile=SharePatchFileUtil.getPatchInfoLockFile(patchDirectory);\n    File patchInfoFile=SharePatchFileUtil.getPatchInfoFile(patchDirectory);\n    try {\n      final SharePatchInfo currInfo=SharePatchInfo.readAndCheckPropertyWithLock(patchInfoFile,patchInfoLockFile);\n      if (currInfo != null && !ShareTinkerInternals.isNullOrNil(currInfo.newVersion) && !currInfo.isRemoveNewVersion) {\n        if (patchMd5.equals(currInfo.newVersion)) {\n          return ShareConstants.ERROR_PATCH_ALREADY_APPLY;\n        }\n      }\n    }\n catch (    Throwable ignored) {\n    }\n  }\n  if (!UpgradePatchRetry.getInstance(context).onPatchListenerCheck(patchMd5)) {\n    return ShareConstants.ERROR_PATCH_RETRY_COUNT_LIMIT;\n  }\n  return ShareConstants.ERROR_PATCH_OK;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 238,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2748,
        "startLineNumber" : 104,
        "startColumnNumber" : 4,
        "endLineNumber" : 165,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected int patchCheck(String path,String patchMd5){\n  final Tinker manager=Tinker.with(context);\n  if (!manager.isTinkerEnabled() || !ShareTinkerInternals.isTinkerEnableWithSharedPreferences(context)) {\n    return ShareConstants.ERROR_PATCH_DISABLE;\n  }\n  if (TextUtils.isEmpty(patchMd5)) {\n    return ShareConstants.ERROR_PATCH_NOTEXIST;\n  }\n  final File file=new File(path);\n  if (!SharePatchFileUtil.isLegalFile(file)) {\n    return ShareConstants.ERROR_PATCH_NOTEXIST;\n  }\n  if (manager.isPatchProcess()) {\n    return ShareConstants.ERROR_PATCH_INSERVICE;\n  }\n  if (TinkerServiceInternals.isTinkerPatchServiceRunning(context)) {\n    return ShareConstants.ERROR_PATCH_RUNNING;\n  }\n  if (ShareTinkerInternals.isVmJit()) {\n    return ShareConstants.ERROR_PATCH_JIT;\n  }\n  final TinkerLoadResult loadResult=manager.getTinkerLoadResultIfPresent();\n  final boolean repairOptNeeded=manager.isMainProcess() && loadResult != null && loadResult.useInterpretMode;\n  if (!repairOptNeeded) {\n    if (manager.isTinkerLoaded() && loadResult != null) {\n      String currentVersion=loadResult.currentVersion;\n      if (patchMd5.equals(currentVersion)) {\n        return ShareConstants.ERROR_PATCH_ALREADY_APPLY;\n      }\n    }\n    final String patchDirectory=manager.getPatchDirectory().getAbsolutePath();\n    File patchInfoLockFile=SharePatchFileUtil.getPatchInfoLockFile(patchDirectory);\n    File patchInfoFile=SharePatchFileUtil.getPatchInfoFile(patchDirectory);\n    try {\n      final SharePatchInfo currInfo=SharePatchInfo.readAndCheckPropertyWithLock(patchInfoFile,patchInfoLockFile);\n      if (currInfo != null && !ShareTinkerInternals.isNullOrNil(currInfo.newVersion) && !currInfo.isRemoveNewVersion) {\n        if (patchMd5.equals(currInfo.newVersion)) {\n          return ShareConstants.ERROR_PATCH_ALREADY_APPLY;\n        }\n      }\n    }\n catch (    Throwable ignored) {\n    }\n  }\n  if (!UpgradePatchRetry.getInstance(context).onPatchListenerCheck(patchMd5)) {\n    return ShareConstants.ERROR_PATCH_RETRY_COUNT_LIMIT;\n  }\n  return ShareConstants.ERROR_PATCH_OK;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 250,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 145,
        "startColumnNumber" : 12,
        "endLineNumber" : 145,
        "endColumnNumber" : 88
      },
      "nodeContext" : "final String patchDirectory=manager.getPatchDirectory().getAbsolutePath();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.tencent.tinker.lib.tinker.Tinker"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 107,
    "startColumnNumber" : 13,
    "endLineNumber" : 107,
    "endColumnNumber" : 20
  }, {
    "charLength" : 7,
    "startLineNumber" : 119,
    "startColumnNumber" : 12,
    "endLineNumber" : 119,
    "endColumnNumber" : 19
  }, {
    "charLength" : 7,
    "startLineNumber" : 131,
    "startColumnNumber" : 44,
    "endLineNumber" : 131,
    "endColumnNumber" : 51
  }, {
    "charLength" : 7,
    "startLineNumber" : 133,
    "startColumnNumber" : 40,
    "endLineNumber" : 133,
    "endColumnNumber" : 47
  }, {
    "charLength" : 7,
    "startLineNumber" : 137,
    "startColumnNumber" : 16,
    "endLineNumber" : 137,
    "endColumnNumber" : 23
  }, {
    "charLength" : 7,
    "startLineNumber" : 145,
    "startColumnNumber" : 42,
    "endLineNumber" : 145,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 4
  } ]
}