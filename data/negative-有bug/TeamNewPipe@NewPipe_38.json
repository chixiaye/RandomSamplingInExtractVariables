{
  "id" : 38,
  "expression" : "\"Failed to create cache directory \" + cacheDir.getAbsolutePath()",
  "projectName" : "TeamNewPipe@NewPipe",
  "commitID" : "d7574973e97fa7a3a21aa59967311f6091941830",
  "filePath" : "/app/src/main/java/org/schabi/newpipe/util/StateSaver.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Failed to create cache directory \" + cacheDir.getAbsolutePath()",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 64,
      "startLineNumber" : 244,
      "startColumnNumber" : 32,
      "endLineNumber" : 244,
      "endColumnNumber" : 96
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 243,
        "startColumnNumber" : 24,
        "endLineNumber" : 244,
        "endColumnNumber" : 97
      },
      "nodeContext" : "Log.e(TAG,\"Failed to create cache directory \" + cacheDir.getAbsolutePath())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 243,
        "startColumnNumber" : 24,
        "endLineNumber" : 244,
        "endColumnNumber" : 98
      },
      "nodeContext" : "Log.e(TAG,\"Failed to create cache directory \" + cacheDir.getAbsolutePath());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 157,
        "startLineNumber" : 242,
        "startColumnNumber" : 43,
        "endLineNumber" : 245,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  Log.e(TAG,\"Failed to create cache directory \" + cacheDir.getAbsolutePath());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 180,
        "startLineNumber" : 242,
        "startColumnNumber" : 20,
        "endLineNumber" : 245,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (BuildConfig.DEBUG) {\n  Log.e(TAG,\"Failed to create cache directory \" + cacheDir.getAbsolutePath());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 253,
        "startLineNumber" : 241,
        "startColumnNumber" : 39,
        "endLineNumber" : 247,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (BuildConfig.DEBUG) {\n    Log.e(TAG,\"Failed to create cache directory \" + cacheDir.getAbsolutePath());\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 276,
        "startLineNumber" : 241,
        "startColumnNumber" : 16,
        "endLineNumber" : 247,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (!cacheDir.mkdir()) {\n  if (BuildConfig.DEBUG) {\n    Log.e(TAG,\"Failed to create cache directory \" + cacheDir.getAbsolutePath());\n  }\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 308,
        "startLineNumber" : 240,
        "startColumnNumber" : 36,
        "endLineNumber" : 248,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (!cacheDir.mkdir()) {\n    if (BuildConfig.DEBUG) {\n      Log.e(TAG,\"Failed to create cache directory \" + cacheDir.getAbsolutePath());\n    }\n    return null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 332,
        "startLineNumber" : 240,
        "startColumnNumber" : 12,
        "endLineNumber" : 248,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!cacheDir.exists()) {\n  if (!cacheDir.mkdir()) {\n    if (BuildConfig.DEBUG) {\n      Log.e(TAG,\"Failed to create cache directory \" + cacheDir.getAbsolutePath());\n    }\n    return null;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 29,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1719,
        "startLineNumber" : 234,
        "startColumnNumber" : 12,
        "endLineNumber" : 273,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  File cacheDir=new File(cacheDirPath);\n  if (!cacheDir.exists()) {\n    throw new RuntimeException(\"Cache dir does not exist > \" + cacheDirPath);\n  }\n  cacheDir=new File(cacheDir,CACHE_DIR_NAME);\n  if (!cacheDir.exists()) {\n    if (!cacheDir.mkdir()) {\n      if (BuildConfig.DEBUG) {\n        Log.e(TAG,\"Failed to create cache directory \" + cacheDir.getAbsolutePath());\n      }\n      return null;\n    }\n  }\n  File file=new File(cacheDir,prefixFileName + (TextUtils.isEmpty(suffixFileName) ? \".cache\" : suffixFileName));\n  if (file.exists() && file.length() > 0) {\n    return new SavedState(prefixFileName,file.getAbsolutePath());\n  }\n else {\n    File[] files=cacheDir.listFiles(new FilenameFilter(){\n      @Override public boolean accept(      final File dir,      final String name){\n        return name.contains(prefixFileName);\n      }\n    }\n);\n    for (    File fileToDelete : files) {\n      fileToDelete.delete();\n    }\n  }\n  fileOutputStream=new FileOutputStream(file);\n  ObjectOutputStream outputStream=new ObjectOutputStream(fileOutputStream);\n  outputStream.writeObject(savedObjects);\n  return new SavedState(prefixFileName,file.getAbsolutePath());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 175,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2002,
        "startLineNumber" : 234,
        "startColumnNumber" : 8,
        "endLineNumber" : 281,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  File cacheDir=new File(cacheDirPath);\n  if (!cacheDir.exists()) {\n    throw new RuntimeException(\"Cache dir does not exist > \" + cacheDirPath);\n  }\n  cacheDir=new File(cacheDir,CACHE_DIR_NAME);\n  if (!cacheDir.exists()) {\n    if (!cacheDir.mkdir()) {\n      if (BuildConfig.DEBUG) {\n        Log.e(TAG,\"Failed to create cache directory \" + cacheDir.getAbsolutePath());\n      }\n      return null;\n    }\n  }\n  File file=new File(cacheDir,prefixFileName + (TextUtils.isEmpty(suffixFileName) ? \".cache\" : suffixFileName));\n  if (file.exists() && file.length() > 0) {\n    return new SavedState(prefixFileName,file.getAbsolutePath());\n  }\n else {\n    File[] files=cacheDir.listFiles(new FilenameFilter(){\n      @Override public boolean accept(      final File dir,      final String name){\n        return name.contains(prefixFileName);\n      }\n    }\n);\n    for (    File fileToDelete : files) {\n      fileToDelete.delete();\n    }\n  }\n  fileOutputStream=new FileOutputStream(file);\n  ObjectOutputStream outputStream=new ObjectOutputStream(fileOutputStream);\n  outputStream.writeObject(savedObjects);\n  return new SavedState(prefixFileName,file.getAbsolutePath());\n}\n catch (Exception e) {\n  Log.e(TAG,\"Failed to save state\",e);\n}\n finally {\n  if (fileOutputStream != null) {\n    try {\n      fileOutputStream.close();\n    }\n catch (    IOException ignored) {\n    }\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 207,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2947,
        "startLineNumber" : 209,
        "startColumnNumber" : 96,
        "endLineNumber" : 283,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (MainActivity.DEBUG) {\n    Log.d(TAG,\"tryToSave() called with: \" + \"isChangingConfig = [\" + isChangingConfig + \"], \"+ \"prefixFileName = [\"+ prefixFileName+ \"], \"+ \"suffixFileName = [\"+ suffixFileName+ \"], \"+ \"writeRead = [\"+ writeRead+ \"]\");\n  }\n  LinkedList<Object> savedObjects=new LinkedList<>();\n  writeRead.writeTo(savedObjects);\n  if (isChangingConfig) {\n    if (savedObjects.size() > 0) {\n      STATE_OBJECTS_HOLDER.put(prefixFileName,savedObjects);\n      return new SavedState(prefixFileName,\"\");\n    }\n else {\n      if (MainActivity.DEBUG) {\n        Log.d(TAG,\"Nothing to save\");\n      }\n      return null;\n    }\n  }\n  FileOutputStream fileOutputStream=null;\n  try {\n    File cacheDir=new File(cacheDirPath);\n    if (!cacheDir.exists()) {\n      throw new RuntimeException(\"Cache dir does not exist > \" + cacheDirPath);\n    }\n    cacheDir=new File(cacheDir,CACHE_DIR_NAME);\n    if (!cacheDir.exists()) {\n      if (!cacheDir.mkdir()) {\n        if (BuildConfig.DEBUG) {\n          Log.e(TAG,\"Failed to create cache directory \" + cacheDir.getAbsolutePath());\n        }\n        return null;\n      }\n    }\n    File file=new File(cacheDir,prefixFileName + (TextUtils.isEmpty(suffixFileName) ? \".cache\" : suffixFileName));\n    if (file.exists() && file.length() > 0) {\n      return new SavedState(prefixFileName,file.getAbsolutePath());\n    }\n else {\n      File[] files=cacheDir.listFiles(new FilenameFilter(){\n        @Override public boolean accept(        final File dir,        final String name){\n          return name.contains(prefixFileName);\n        }\n      }\n);\n      for (      File fileToDelete : files) {\n        fileToDelete.delete();\n      }\n    }\n    fileOutputStream=new FileOutputStream(file);\n    ObjectOutputStream outputStream=new ObjectOutputStream(fileOutputStream);\n    outputStream.writeObject(savedObjects);\n    return new SavedState(prefixFileName,file.getAbsolutePath());\n  }\n catch (  Exception e) {\n    Log.e(TAG,\"Failed to save state\",e);\n  }\n finally {\n    if (fileOutputStream != null) {\n      try {\n        fileOutputStream.close();\n      }\n catch (      IOException ignored) {\n      }\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 294,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3854,
        "startLineNumber" : 187,
        "startColumnNumber" : 4,
        "endLineNumber" : 283,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * If it's not changing configuration (i.e. rotating screen), try to write the state from  {@link StateSaver.WriteRead#writeTo(Queue)}to the file with the name of prefixFileName + suffixFileName, in a cache folder got from the  {@link #init(Context)}. <p> It checks if the file already exists and if it does, just return the path, so a good way to save is: </p> <ul> <li>A fixed prefix for the file</li> <li>A changing suffix</li> </ul>\n * @param isChangingConfig\n * @param prefixFileName\n * @param suffixFileName\n * @param writeRead\n * @return the saved state or {@code null}\n */\n@Nullable private static SavedState tryToSave(final boolean isChangingConfig,final String prefixFileName,final String suffixFileName,final WriteRead writeRead){\n  if (MainActivity.DEBUG) {\n    Log.d(TAG,\"tryToSave() called with: \" + \"isChangingConfig = [\" + isChangingConfig + \"], \"+ \"prefixFileName = [\"+ prefixFileName+ \"], \"+ \"suffixFileName = [\"+ suffixFileName+ \"], \"+ \"writeRead = [\"+ writeRead+ \"]\");\n  }\n  LinkedList<Object> savedObjects=new LinkedList<>();\n  writeRead.writeTo(savedObjects);\n  if (isChangingConfig) {\n    if (savedObjects.size() > 0) {\n      STATE_OBJECTS_HOLDER.put(prefixFileName,savedObjects);\n      return new SavedState(prefixFileName,\"\");\n    }\n else {\n      if (MainActivity.DEBUG) {\n        Log.d(TAG,\"Nothing to save\");\n      }\n      return null;\n    }\n  }\n  FileOutputStream fileOutputStream=null;\n  try {\n    File cacheDir=new File(cacheDirPath);\n    if (!cacheDir.exists()) {\n      throw new RuntimeException(\"Cache dir does not exist > \" + cacheDirPath);\n    }\n    cacheDir=new File(cacheDir,CACHE_DIR_NAME);\n    if (!cacheDir.exists()) {\n      if (!cacheDir.mkdir()) {\n        if (BuildConfig.DEBUG) {\n          Log.e(TAG,\"Failed to create cache directory \" + cacheDir.getAbsolutePath());\n        }\n        return null;\n      }\n    }\n    File file=new File(cacheDir,prefixFileName + (TextUtils.isEmpty(suffixFileName) ? \".cache\" : suffixFileName));\n    if (file.exists() && file.length() > 0) {\n      return new SavedState(prefixFileName,file.getAbsolutePath());\n    }\n else {\n      File[] files=cacheDir.listFiles(new FilenameFilter(){\n        @Override public boolean accept(        final File dir,        final String name){\n          return name.contains(prefixFileName);\n        }\n      }\n);\n      for (      File fileToDelete : files) {\n        fileToDelete.delete();\n      }\n    }\n    fileOutputStream=new FileOutputStream(file);\n    ObjectOutputStream outputStream=new ObjectOutputStream(fileOutputStream);\n    outputStream.writeObject(savedObjects);\n    return new SavedState(prefixFileName,file.getAbsolutePath());\n  }\n catch (  Exception e) {\n    Log.e(TAG,\"Failed to save state\",e);\n  }\n finally {\n    if (fileOutputStream != null) {\n      try {\n        fileOutputStream.close();\n      }\n catch (      IOException ignored) {\n      }\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 322,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 243,
        "startColumnNumber" : 24,
        "endLineNumber" : 244,
        "endColumnNumber" : 97
      },
      "nodeContext" : "Log.e(TAG,\"Failed to create cache directory \" + cacheDir.getAbsolutePath())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 8,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 64,
    "startLineNumber" : 244,
    "startColumnNumber" : 32,
    "endLineNumber" : 244,
    "endColumnNumber" : 96
  } ],
  "layoutRelationDataList" : [ ]
}