{
  "id" : 130,
  "expression" : "in.tile(cx,cy).block()",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/maps/filters/OreMedianFilter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "in.tile(cx,cy).block()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 38,
      "startColumnNumber" : 56,
      "endLineNumber" : 38,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 38,
        "startColumnNumber" : 56,
        "endLineNumber" : 38,
        "endColumnNumber" : 90
      },
      "nodeContext" : "in.tile(cx,cy).block().isStatic()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 38,
        "startColumnNumber" : 55,
        "endLineNumber" : 38,
        "endColumnNumber" : 90
      },
      "nodeContext" : "!in.tile(cx,cy).block().isStatic()",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 278,
        "startLineNumber" : 37,
        "startColumnNumber" : 17,
        "endLineNumber" : 38,
        "endColumnNumber" : 90
      },
      "nodeContext" : "in.tile(cx + 1,cy).overlay() == in.overlay && in.tile(cx,cy).overlay() == in.overlay && in.tile(cx + 1,cy + 1).overlay() == in.overlay && in.tile(cx,cy + 1).overlay() == in.overlay && !in.tile(cx + 1,cy).block().isStatic() && !in.tile(cx,cy).block().isStatic()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 79,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 325,
        "startLineNumber" : 37,
        "startColumnNumber" : 17,
        "endLineNumber" : 38,
        "endColumnNumber" : 137
      },
      "nodeContext" : "in.tile(cx + 1,cy).overlay() == in.overlay && in.tile(cx,cy).overlay() == in.overlay && in.tile(cx + 1,cy + 1).overlay() == in.overlay && in.tile(cx,cy + 1).overlay() == in.overlay && !in.tile(cx + 1,cy).block().isStatic() && !in.tile(cx,cy).block().isStatic() && !in.tile(cx + 1,cy + 1).block().isStatic()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 94,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 368,
        "startLineNumber" : 37,
        "startColumnNumber" : 17,
        "endLineNumber" : 38,
        "endColumnNumber" : 180
      },
      "nodeContext" : "in.tile(cx + 1,cy).overlay() == in.overlay && in.tile(cx,cy).overlay() == in.overlay && in.tile(cx + 1,cy + 1).overlay() == in.overlay && in.tile(cx,cy + 1).overlay() == in.overlay && !in.tile(cx + 1,cy).block().isStatic() && !in.tile(cx,cy).block().isStatic() && !in.tile(cx + 1,cy + 1).block().isStatic() && !in.tile(cx,cy + 1).block().isStatic()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 107,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 370,
        "startLineNumber" : 37,
        "startColumnNumber" : 16,
        "endLineNumber" : 38,
        "endColumnNumber" : 181
      },
      "nodeContext" : "(in.tile(cx + 1,cy).overlay() == in.overlay && in.tile(cx,cy).overlay() == in.overlay && in.tile(cx + 1,cy + 1).overlay() == in.overlay && in.tile(cx,cy + 1).overlay() == in.overlay && !in.tile(cx + 1,cy).block().isStatic() && !in.tile(cx,cy).block().isStatic() && !in.tile(cx + 1,cy + 1).block().isStatic() && !in.tile(cx,cy + 1).block().isStatic())",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 108,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 371,
        "startLineNumber" : 37,
        "startColumnNumber" : 15,
        "endLineNumber" : 38,
        "endColumnNumber" : 181
      },
      "nodeContext" : "!(in.tile(cx + 1,cy).overlay() == in.overlay && in.tile(cx,cy).overlay() == in.overlay && in.tile(cx + 1,cy + 1).overlay() == in.overlay && in.tile(cx,cy + 1).overlay() == in.overlay && !in.tile(cx + 1,cy).block().isStatic() && !in.tile(cx,cy).block().isStatic() && !in.tile(cx + 1,cy + 1).block().isStatic() && !in.tile(cx,cy + 1).block().isStatic())",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 109,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 431,
        "startLineNumber" : 37,
        "startColumnNumber" : 12,
        "endLineNumber" : 40,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!(in.tile(cx + 1,cy).overlay() == in.overlay && in.tile(cx,cy).overlay() == in.overlay && in.tile(cx + 1,cy + 1).overlay() == in.overlay && in.tile(cx,cy + 1).overlay() == in.overlay && !in.tile(cx + 1,cy).block().isStatic() && !in.tile(cx,cy).block().isStatic() && !in.tile(cx + 1,cy + 1).block().isStatic() && !in.tile(cx,cy + 1).block().isStatic())) {\n  in.overlay=Blocks.air;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 119,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 455,
        "startLineNumber" : 36,
        "startColumnNumber" : 36,
        "endLineNumber" : 41,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!(in.tile(cx + 1,cy).overlay() == in.overlay && in.tile(cx,cy).overlay() == in.overlay && in.tile(cx + 1,cy + 1).overlay() == in.overlay && in.tile(cx,cy + 1).overlay() == in.overlay && !in.tile(cx + 1,cy).block().isStatic() && !in.tile(cx,cy).block().isStatic() && !in.tile(cx + 1,cy + 1).block().isStatic() && !in.tile(cx,cy + 1).block().isStatic())) {\n    in.overlay=Blocks.air;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 483,
        "startLineNumber" : 36,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (in.overlay != Blocks.air) {\n  if (!(in.tile(cx + 1,cy).overlay() == in.overlay && in.tile(cx,cy).overlay() == in.overlay && in.tile(cx + 1,cy + 1).overlay() == in.overlay && in.tile(cx,cy + 1).overlay() == in.overlay && !in.tile(cx + 1,cy).block().isStatic() && !in.tile(cx,cy).block().isStatic() && !in.tile(cx + 1,cy + 1).block().isStatic() && !in.tile(cx,cy + 1).block().isStatic())) {\n    in.overlay=Blocks.air;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 128,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1192,
        "startLineNumber" : 31,
        "startColumnNumber" : 23,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (in.overlay == Blocks.spawn)   return;\n  int cx=(in.x / 2) * 2;\n  int cy=(in.y / 2) * 2;\n  if (in.overlay != Blocks.air) {\n    if (!(in.tile(cx + 1,cy).overlay() == in.overlay && in.tile(cx,cy).overlay() == in.overlay && in.tile(cx + 1,cy + 1).overlay() == in.overlay && in.tile(cx,cy + 1).overlay() == in.overlay && !in.tile(cx + 1,cy).block().isStatic() && !in.tile(cx,cy).block().isStatic() && !in.tile(cx + 1,cy + 1).block().isStatic() && !in.tile(cx,cy + 1).block().isStatic())) {\n      in.overlay=Blocks.air;\n    }\n  }\n  int rad=(int)radius;\n  blocks.clear();\n  for (int x=-rad; x <= rad; x++) {\n    for (int y=-rad; y <= rad; y++) {\n      if (Mathf.dst2(x,y) > rad * rad)       continue;\n      Tile tile=in.tile(in.x + x,in.y + y);\n      if (tile.overlay() != Blocks.spawn)       blocks.add(tile.overlay().id);\n    }\n  }\n  blocks.sort();\n  int index=Math.min((int)(blocks.size * percentile),blocks.size - 1);\n  int overlay=blocks.get(index);\n  in.overlay=Vars.content.block(overlay);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 288,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1225,
        "startLineNumber" : 30,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void apply(){\n  if (in.overlay == Blocks.spawn)   return;\n  int cx=(in.x / 2) * 2;\n  int cy=(in.y / 2) * 2;\n  if (in.overlay != Blocks.air) {\n    if (!(in.tile(cx + 1,cy).overlay() == in.overlay && in.tile(cx,cy).overlay() == in.overlay && in.tile(cx + 1,cy + 1).overlay() == in.overlay && in.tile(cx,cy + 1).overlay() == in.overlay && !in.tile(cx + 1,cy).block().isStatic() && !in.tile(cx,cy).block().isStatic() && !in.tile(cx + 1,cy + 1).block().isStatic() && !in.tile(cx,cy + 1).block().isStatic())) {\n      in.overlay=Blocks.air;\n    }\n  }\n  int rad=(int)radius;\n  blocks.clear();\n  for (int x=-rad; x <= rad; x++) {\n    for (int y=-rad; y <= rad; y++) {\n      if (Mathf.dst2(x,y) > rad * rad)       continue;\n      Tile tile=in.tile(in.x + x,in.y + y);\n      if (tile.overlay() != Blocks.spawn)       blocks.add(tile.overlay().id);\n    }\n  }\n  blocks.sort();\n  int index=Math.min((int)(blocks.size * percentile),blocks.size - 1);\n  int overlay=blocks.get(index);\n  in.overlay=Vars.content.block(overlay);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 294,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 38,
        "startColumnNumber" : 55,
        "endLineNumber" : 38,
        "endColumnNumber" : 90
      },
      "nodeContext" : "!in.tile(cx,cy).block().isStatic()",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "mindustry.world.Block"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 38,
    "startColumnNumber" : 56,
    "endLineNumber" : 38,
    "endColumnNumber" : 79
  } ],
  "layoutRelationDataList" : [ ]
}