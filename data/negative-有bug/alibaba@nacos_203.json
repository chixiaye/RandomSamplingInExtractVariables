{
  "id" : 203,
  "expression" : "StringUtils",
  "projectName" : "alibaba@nacos",
  "commitID" : "4e7346db1d6657ffe07c96bebd2d348229c2812f",
  "filePath" : "/core/src/main/java/com/alibaba/nacos/core/utils/TimerContext.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "StringUtils",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 62,
      "startColumnNumber" : 12,
      "endLineNumber" : 62,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 62,
        "startColumnNumber" : 12,
        "endLineNumber" : 62,
        "endColumnNumber" : 56
      },
      "nodeContext" : "StringUtils.equals(level,LoggerUtils.DEBUG)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 157,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (StringUtils.equals(level,LoggerUtils.DEBUG)) {\n  LoggerUtils.printIfDebugEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1040,
        "startLineNumber" : 59,
        "startColumnNumber" : 87,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<String,Long> record=TIME_RECORD.get();\n  long contextTime=System.currentTimeMillis() - record.remove(name);\n  if (StringUtils.equals(level,LoggerUtils.DEBUG)) {\n    LoggerUtils.printIfDebugEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (StringUtils.equals(level,LoggerUtils.INFO)) {\n    LoggerUtils.printIfInfoEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (StringUtils.equals(level,LoggerUtils.TRACE)) {\n    LoggerUtils.printIfTraceEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (StringUtils.equals(level,LoggerUtils.ERROR)) {\n    LoggerUtils.printIfErrorEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (StringUtils.equals(level,LoggerUtils.WARN)) {\n    LoggerUtils.printIfWarnEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (record.isEmpty()) {\n    TIME_RECORD.remove();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1296,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * End the task and print based on the log level.\n * @param name   context name\n * @param logger logger\n * @param level  logger level\n */\npublic static void end(final String name,final Logger logger,final String level){\n  Map<String,Long> record=TIME_RECORD.get();\n  long contextTime=System.currentTimeMillis() - record.remove(name);\n  if (StringUtils.equals(level,LoggerUtils.DEBUG)) {\n    LoggerUtils.printIfDebugEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (StringUtils.equals(level,LoggerUtils.INFO)) {\n    LoggerUtils.printIfInfoEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (StringUtils.equals(level,LoggerUtils.TRACE)) {\n    LoggerUtils.printIfTraceEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (StringUtils.equals(level,LoggerUtils.ERROR)) {\n    LoggerUtils.printIfErrorEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (StringUtils.equals(level,LoggerUtils.WARN)) {\n    LoggerUtils.printIfWarnEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (record.isEmpty()) {\n    TIME_RECORD.remove();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 141,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 62,
        "startColumnNumber" : 12,
        "endLineNumber" : 62,
        "endColumnNumber" : 56
      },
      "nodeContext" : "StringUtils.equals(level,LoggerUtils.DEBUG)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.alibaba.nacos.common.utils.StringUtils"
  }, {
    "nodeContext" : "StringUtils",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 65,
      "startColumnNumber" : 12,
      "endLineNumber" : 65,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 65,
        "startColumnNumber" : 12,
        "endLineNumber" : 65,
        "endColumnNumber" : 55
      },
      "nodeContext" : "StringUtils.equals(level,LoggerUtils.INFO)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 155,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (StringUtils.equals(level,LoggerUtils.INFO)) {\n  LoggerUtils.printIfInfoEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1040,
        "startLineNumber" : 59,
        "startColumnNumber" : 87,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<String,Long> record=TIME_RECORD.get();\n  long contextTime=System.currentTimeMillis() - record.remove(name);\n  if (StringUtils.equals(level,LoggerUtils.DEBUG)) {\n    LoggerUtils.printIfDebugEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (StringUtils.equals(level,LoggerUtils.INFO)) {\n    LoggerUtils.printIfInfoEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (StringUtils.equals(level,LoggerUtils.TRACE)) {\n    LoggerUtils.printIfTraceEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (StringUtils.equals(level,LoggerUtils.ERROR)) {\n    LoggerUtils.printIfErrorEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (StringUtils.equals(level,LoggerUtils.WARN)) {\n    LoggerUtils.printIfWarnEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (record.isEmpty()) {\n    TIME_RECORD.remove();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1296,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * End the task and print based on the log level.\n * @param name   context name\n * @param logger logger\n * @param level  logger level\n */\npublic static void end(final String name,final Logger logger,final String level){\n  Map<String,Long> record=TIME_RECORD.get();\n  long contextTime=System.currentTimeMillis() - record.remove(name);\n  if (StringUtils.equals(level,LoggerUtils.DEBUG)) {\n    LoggerUtils.printIfDebugEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (StringUtils.equals(level,LoggerUtils.INFO)) {\n    LoggerUtils.printIfInfoEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (StringUtils.equals(level,LoggerUtils.TRACE)) {\n    LoggerUtils.printIfTraceEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (StringUtils.equals(level,LoggerUtils.ERROR)) {\n    LoggerUtils.printIfErrorEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (StringUtils.equals(level,LoggerUtils.WARN)) {\n    LoggerUtils.printIfWarnEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (record.isEmpty()) {\n    TIME_RECORD.remove();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 141,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 65,
        "startColumnNumber" : 12,
        "endLineNumber" : 65,
        "endColumnNumber" : 55
      },
      "nodeContext" : "StringUtils.equals(level,LoggerUtils.INFO)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.alibaba.nacos.common.utils.StringUtils"
  }, {
    "nodeContext" : "StringUtils",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 68,
      "startColumnNumber" : 12,
      "endLineNumber" : 68,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 68,
        "startColumnNumber" : 12,
        "endLineNumber" : 68,
        "endColumnNumber" : 56
      },
      "nodeContext" : "StringUtils.equals(level,LoggerUtils.TRACE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 157,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (StringUtils.equals(level,LoggerUtils.TRACE)) {\n  LoggerUtils.printIfTraceEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1040,
        "startLineNumber" : 59,
        "startColumnNumber" : 87,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<String,Long> record=TIME_RECORD.get();\n  long contextTime=System.currentTimeMillis() - record.remove(name);\n  if (StringUtils.equals(level,LoggerUtils.DEBUG)) {\n    LoggerUtils.printIfDebugEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (StringUtils.equals(level,LoggerUtils.INFO)) {\n    LoggerUtils.printIfInfoEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (StringUtils.equals(level,LoggerUtils.TRACE)) {\n    LoggerUtils.printIfTraceEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (StringUtils.equals(level,LoggerUtils.ERROR)) {\n    LoggerUtils.printIfErrorEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (StringUtils.equals(level,LoggerUtils.WARN)) {\n    LoggerUtils.printIfWarnEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (record.isEmpty()) {\n    TIME_RECORD.remove();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1296,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * End the task and print based on the log level.\n * @param name   context name\n * @param logger logger\n * @param level  logger level\n */\npublic static void end(final String name,final Logger logger,final String level){\n  Map<String,Long> record=TIME_RECORD.get();\n  long contextTime=System.currentTimeMillis() - record.remove(name);\n  if (StringUtils.equals(level,LoggerUtils.DEBUG)) {\n    LoggerUtils.printIfDebugEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (StringUtils.equals(level,LoggerUtils.INFO)) {\n    LoggerUtils.printIfInfoEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (StringUtils.equals(level,LoggerUtils.TRACE)) {\n    LoggerUtils.printIfTraceEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (StringUtils.equals(level,LoggerUtils.ERROR)) {\n    LoggerUtils.printIfErrorEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (StringUtils.equals(level,LoggerUtils.WARN)) {\n    LoggerUtils.printIfWarnEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (record.isEmpty()) {\n    TIME_RECORD.remove();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 141,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 68,
        "startColumnNumber" : 12,
        "endLineNumber" : 68,
        "endColumnNumber" : 56
      },
      "nodeContext" : "StringUtils.equals(level,LoggerUtils.TRACE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.alibaba.nacos.common.utils.StringUtils"
  }, {
    "nodeContext" : "StringUtils",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 71,
      "startColumnNumber" : 12,
      "endLineNumber" : 71,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 71,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 56
      },
      "nodeContext" : "StringUtils.equals(level,LoggerUtils.ERROR)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 157,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (StringUtils.equals(level,LoggerUtils.ERROR)) {\n  LoggerUtils.printIfErrorEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1040,
        "startLineNumber" : 59,
        "startColumnNumber" : 87,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<String,Long> record=TIME_RECORD.get();\n  long contextTime=System.currentTimeMillis() - record.remove(name);\n  if (StringUtils.equals(level,LoggerUtils.DEBUG)) {\n    LoggerUtils.printIfDebugEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (StringUtils.equals(level,LoggerUtils.INFO)) {\n    LoggerUtils.printIfInfoEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (StringUtils.equals(level,LoggerUtils.TRACE)) {\n    LoggerUtils.printIfTraceEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (StringUtils.equals(level,LoggerUtils.ERROR)) {\n    LoggerUtils.printIfErrorEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (StringUtils.equals(level,LoggerUtils.WARN)) {\n    LoggerUtils.printIfWarnEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (record.isEmpty()) {\n    TIME_RECORD.remove();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1296,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * End the task and print based on the log level.\n * @param name   context name\n * @param logger logger\n * @param level  logger level\n */\npublic static void end(final String name,final Logger logger,final String level){\n  Map<String,Long> record=TIME_RECORD.get();\n  long contextTime=System.currentTimeMillis() - record.remove(name);\n  if (StringUtils.equals(level,LoggerUtils.DEBUG)) {\n    LoggerUtils.printIfDebugEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (StringUtils.equals(level,LoggerUtils.INFO)) {\n    LoggerUtils.printIfInfoEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (StringUtils.equals(level,LoggerUtils.TRACE)) {\n    LoggerUtils.printIfTraceEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (StringUtils.equals(level,LoggerUtils.ERROR)) {\n    LoggerUtils.printIfErrorEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (StringUtils.equals(level,LoggerUtils.WARN)) {\n    LoggerUtils.printIfWarnEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (record.isEmpty()) {\n    TIME_RECORD.remove();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 141,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 71,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 56
      },
      "nodeContext" : "StringUtils.equals(level,LoggerUtils.ERROR)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.alibaba.nacos.common.utils.StringUtils"
  }, {
    "nodeContext" : "StringUtils",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 74,
      "startColumnNumber" : 12,
      "endLineNumber" : 74,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 74,
        "startColumnNumber" : 12,
        "endLineNumber" : 74,
        "endColumnNumber" : 55
      },
      "nodeContext" : "StringUtils.equals(level,LoggerUtils.WARN)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 155,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 76,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (StringUtils.equals(level,LoggerUtils.WARN)) {\n  LoggerUtils.printIfWarnEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1040,
        "startLineNumber" : 59,
        "startColumnNumber" : 87,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<String,Long> record=TIME_RECORD.get();\n  long contextTime=System.currentTimeMillis() - record.remove(name);\n  if (StringUtils.equals(level,LoggerUtils.DEBUG)) {\n    LoggerUtils.printIfDebugEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (StringUtils.equals(level,LoggerUtils.INFO)) {\n    LoggerUtils.printIfInfoEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (StringUtils.equals(level,LoggerUtils.TRACE)) {\n    LoggerUtils.printIfTraceEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (StringUtils.equals(level,LoggerUtils.ERROR)) {\n    LoggerUtils.printIfErrorEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (StringUtils.equals(level,LoggerUtils.WARN)) {\n    LoggerUtils.printIfWarnEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (record.isEmpty()) {\n    TIME_RECORD.remove();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1296,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * End the task and print based on the log level.\n * @param name   context name\n * @param logger logger\n * @param level  logger level\n */\npublic static void end(final String name,final Logger logger,final String level){\n  Map<String,Long> record=TIME_RECORD.get();\n  long contextTime=System.currentTimeMillis() - record.remove(name);\n  if (StringUtils.equals(level,LoggerUtils.DEBUG)) {\n    LoggerUtils.printIfDebugEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (StringUtils.equals(level,LoggerUtils.INFO)) {\n    LoggerUtils.printIfInfoEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (StringUtils.equals(level,LoggerUtils.TRACE)) {\n    LoggerUtils.printIfTraceEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (StringUtils.equals(level,LoggerUtils.ERROR)) {\n    LoggerUtils.printIfErrorEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (StringUtils.equals(level,LoggerUtils.WARN)) {\n    LoggerUtils.printIfWarnEnabled(logger,\"{} cost time : {} ms\",name,contextTime);\n  }\n  if (record.isEmpty()) {\n    TIME_RECORD.remove();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 141,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 74,
        "startColumnNumber" : 12,
        "endLineNumber" : 74,
        "endColumnNumber" : 55
      },
      "nodeContext" : "StringUtils.equals(level,LoggerUtils.WARN)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.alibaba.nacos.common.utils.StringUtils"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 62,
    "startColumnNumber" : 12,
    "endLineNumber" : 62,
    "endColumnNumber" : 23
  }, {
    "charLength" : 11,
    "startLineNumber" : 65,
    "startColumnNumber" : 12,
    "endLineNumber" : 65,
    "endColumnNumber" : 23
  }, {
    "charLength" : 11,
    "startLineNumber" : 68,
    "startColumnNumber" : 12,
    "endLineNumber" : 68,
    "endColumnNumber" : 23
  }, {
    "charLength" : 11,
    "startLineNumber" : 71,
    "startColumnNumber" : 12,
    "endLineNumber" : 71,
    "endColumnNumber" : 23
  }, {
    "charLength" : 11,
    "startLineNumber" : 74,
    "startColumnNumber" : 12,
    "endLineNumber" : 74,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 2
  } ]
}