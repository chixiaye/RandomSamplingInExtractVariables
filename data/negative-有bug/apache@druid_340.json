{
  "id" : 340,
  "expression" : "ParallelIndexSupervisorTask.determineNumShardsFromCardinalityReport(reports,1)",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/indexing-service/src/test/java/org/apache/druid/indexing/common/task/batch/parallel/DimensionCardinalityReportTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ParallelIndexSupervisorTask.determineNumShardsFromCardinalityReport(reports,1)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 101,
      "startLineNumber" : 112,
      "startColumnNumber" : 49,
      "endLineNumber" : 115,
      "endColumnNumber" : 5
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 112,
        "startColumnNumber" : 27,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "intervalToNumShards=ParallelIndexSupervisorTask.determineNumShardsFromCardinalityReport(reports,1)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 112,
        "startColumnNumber" : 4,
        "endLineNumber" : 115,
        "endColumnNumber" : 6
      },
      "nodeContext" : "Map<Interval,Integer> intervalToNumShards=ParallelIndexSupervisorTask.determineNumShardsFromCardinalityReport(reports,1);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3360,
        "startLineNumber" : 72,
        "startColumnNumber" : 2,
        "endLineNumber" : 181,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<DimensionCardinalityReport> reports=new ArrayList<>();\n  HllSketch collector1=DimensionCardinalityReport.createHllSketchForReport();\n  collector1.update(IndexTask.HASH_FUNCTION.hashLong(1L).asBytes());\n  collector1.update(IndexTask.HASH_FUNCTION.hashLong(200L).asBytes());\n  DimensionCardinalityReport report1=new DimensionCardinalityReport(\"taskA\",ImmutableMap.of(Intervals.of(\"1970-01-01T00:00:00.000Z/1970-01-02T00:00:00.000Z\"),collector1.toCompactByteArray()));\n  reports.add(report1);\n  HllSketch collector2=DimensionCardinalityReport.createHllSketchForReport();\n  collector2.update(IndexTask.HASH_FUNCTION.hashLong(1000L).asBytes());\n  collector2.update(IndexTask.HASH_FUNCTION.hashLong(30000L).asBytes());\n  DimensionCardinalityReport report2=new DimensionCardinalityReport(\"taskB\",ImmutableMap.of(Intervals.of(\"1970-01-01T00:00:00.000Z/1970-01-02T00:00:00.000Z\"),collector2.toCompactByteArray()));\n  reports.add(report2);\n  HllSketch collector3=DimensionCardinalityReport.createHllSketchForReport();\n  collector3.update(IndexTask.HASH_FUNCTION.hashLong(99000L).asBytes());\n  DimensionCardinalityReport report3=new DimensionCardinalityReport(\"taskC\",ImmutableMap.of(Intervals.of(\"1970-01-02T00:00:00.000Z/1970-01-03T00:00:00.000Z\"),collector3.toCompactByteArray()));\n  reports.add(report3);\n  Map<Interval,Integer> intervalToNumShards=ParallelIndexSupervisorTask.determineNumShardsFromCardinalityReport(reports,1);\n  Assert.assertEquals(ImmutableMap.of(Intervals.of(\"1970-01-01/P1D\"),4,Intervals.of(\"1970-01-02/P1D\"),1),intervalToNumShards);\n  intervalToNumShards=ParallelIndexSupervisorTask.determineNumShardsFromCardinalityReport(reports,2);\n  Assert.assertEquals(ImmutableMap.of(Intervals.of(\"1970-01-01/P1D\"),2,Intervals.of(\"1970-01-02/P1D\"),1),intervalToNumShards);\n  intervalToNumShards=ParallelIndexSupervisorTask.determineNumShardsFromCardinalityReport(reports,3);\n  Assert.assertEquals(ImmutableMap.of(Intervals.of(\"1970-01-01/P1D\"),1,Intervals.of(\"1970-01-02/P1D\"),1),intervalToNumShards);\n  intervalToNumShards=ParallelIndexSupervisorTask.determineNumShardsFromCardinalityReport(reports,4);\n  Assert.assertEquals(ImmutableMap.of(Intervals.of(\"1970-01-01/P1D\"),1,Intervals.of(\"1970-01-02/P1D\"),1),intervalToNumShards);\n  intervalToNumShards=ParallelIndexSupervisorTask.determineNumShardsFromCardinalityReport(reports,5);\n  Assert.assertEquals(ImmutableMap.of(Intervals.of(\"1970-01-01/P1D\"),1,Intervals.of(\"1970-01-02/P1D\"),1),intervalToNumShards);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 306,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3438,
        "startLineNumber" : 70,
        "startColumnNumber" : 2,
        "endLineNumber" : 181,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testSupervisorDetermineNumShardsFromCardinalityReport(){\n  List<DimensionCardinalityReport> reports=new ArrayList<>();\n  HllSketch collector1=DimensionCardinalityReport.createHllSketchForReport();\n  collector1.update(IndexTask.HASH_FUNCTION.hashLong(1L).asBytes());\n  collector1.update(IndexTask.HASH_FUNCTION.hashLong(200L).asBytes());\n  DimensionCardinalityReport report1=new DimensionCardinalityReport(\"taskA\",ImmutableMap.of(Intervals.of(\"1970-01-01T00:00:00.000Z/1970-01-02T00:00:00.000Z\"),collector1.toCompactByteArray()));\n  reports.add(report1);\n  HllSketch collector2=DimensionCardinalityReport.createHllSketchForReport();\n  collector2.update(IndexTask.HASH_FUNCTION.hashLong(1000L).asBytes());\n  collector2.update(IndexTask.HASH_FUNCTION.hashLong(30000L).asBytes());\n  DimensionCardinalityReport report2=new DimensionCardinalityReport(\"taskB\",ImmutableMap.of(Intervals.of(\"1970-01-01T00:00:00.000Z/1970-01-02T00:00:00.000Z\"),collector2.toCompactByteArray()));\n  reports.add(report2);\n  HllSketch collector3=DimensionCardinalityReport.createHllSketchForReport();\n  collector3.update(IndexTask.HASH_FUNCTION.hashLong(99000L).asBytes());\n  DimensionCardinalityReport report3=new DimensionCardinalityReport(\"taskC\",ImmutableMap.of(Intervals.of(\"1970-01-02T00:00:00.000Z/1970-01-03T00:00:00.000Z\"),collector3.toCompactByteArray()));\n  reports.add(report3);\n  Map<Interval,Integer> intervalToNumShards=ParallelIndexSupervisorTask.determineNumShardsFromCardinalityReport(reports,1);\n  Assert.assertEquals(ImmutableMap.of(Intervals.of(\"1970-01-01/P1D\"),4,Intervals.of(\"1970-01-02/P1D\"),1),intervalToNumShards);\n  intervalToNumShards=ParallelIndexSupervisorTask.determineNumShardsFromCardinalityReport(reports,2);\n  Assert.assertEquals(ImmutableMap.of(Intervals.of(\"1970-01-01/P1D\"),2,Intervals.of(\"1970-01-02/P1D\"),1),intervalToNumShards);\n  intervalToNumShards=ParallelIndexSupervisorTask.determineNumShardsFromCardinalityReport(reports,3);\n  Assert.assertEquals(ImmutableMap.of(Intervals.of(\"1970-01-01/P1D\"),1,Intervals.of(\"1970-01-02/P1D\"),1),intervalToNumShards);\n  intervalToNumShards=ParallelIndexSupervisorTask.determineNumShardsFromCardinalityReport(reports,4);\n  Assert.assertEquals(ImmutableMap.of(Intervals.of(\"1970-01-01/P1D\"),1,Intervals.of(\"1970-01-02/P1D\"),1),intervalToNumShards);\n  intervalToNumShards=ParallelIndexSupervisorTask.determineNumShardsFromCardinalityReport(reports,5);\n  Assert.assertEquals(ImmutableMap.of(Intervals.of(\"1970-01-01/P1D\"),1,Intervals.of(\"1970-01-02/P1D\"),1),intervalToNumShards);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 312,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 112,
        "startColumnNumber" : 4,
        "endLineNumber" : 115,
        "endColumnNumber" : 6
      },
      "nodeContext" : "Map<Interval,Integer> intervalToNumShards=ParallelIndexSupervisorTask.determineNumShardsFromCardinalityReport(reports,1);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "java.util.Map<org.apache.druid.indexing.common.task.batch.parallel.Interval,java.lang.Integer>"
  } ],
  "positionList" : [ {
    "charLength" : 101,
    "startLineNumber" : 112,
    "startColumnNumber" : 49,
    "endLineNumber" : 115,
    "endColumnNumber" : 5
  } ],
  "layoutRelationDataList" : [ ]
}