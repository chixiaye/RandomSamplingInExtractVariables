{
  "id" : 67,
  "expression" : "left",
  "projectName" : "TheAlgorithms@Java",
  "commitID" : "8b243667d736be7d0413cc77159378aa02459db0",
  "filePath" : "/src/main/java/com/thealgorithms/searches/UpperBound.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "left",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 83,
      "startColumnNumber" : 21,
      "endLineNumber" : 83,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 83,
        "startColumnNumber" : 12,
        "endLineNumber" : 83,
        "endColumnNumber" : 25
      },
      "nodeContext" : "right <= left",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 85,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (right <= left) {\n  return left;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 534,
        "startLineNumber" : 82,
        "startColumnNumber" : 88,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (right <= left) {\n    return left;\n  }\n  int median=(left + right) >>> 1;\n  int comp=key.compareTo(array[median]);\n  if (comp < 0) {\n    return search(array,key,left,median);\n  }\n else {\n    return search(array,key,median + 1,right);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 921,
        "startLineNumber" : 73,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * This method implements the Generic Binary Search\n * @param array The array to make the binary search\n * @param key The number you are looking for\n * @param left The lower bound\n * @param right The upper bound\n * @return the location of the key\n */\nprivate <T extends Comparable<T>>int search(T[] array,T key,int left,int right){\n  if (right <= left) {\n    return left;\n  }\n  int median=(left + right) >>> 1;\n  int comp=key.compareTo(array[median]);\n  if (comp < 0) {\n    return search(array,key,left,median);\n  }\n else {\n    return search(array,key,median + 1,right);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 78,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 83,
        "startColumnNumber" : 12,
        "endLineNumber" : 83,
        "endColumnNumber" : 25
      },
      "nodeContext" : "right <= left",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "left",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 84,
      "startColumnNumber" : 19,
      "endLineNumber" : 84,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 84,
        "startColumnNumber" : 12,
        "endLineNumber" : 84,
        "endColumnNumber" : 24
      },
      "nodeContext" : "return left;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 83,
        "startColumnNumber" : 27,
        "endLineNumber" : 85,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  return left;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 3,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 85,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (right <= left) {\n  return left;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 534,
        "startLineNumber" : 82,
        "startColumnNumber" : 88,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (right <= left) {\n    return left;\n  }\n  int median=(left + right) >>> 1;\n  int comp=key.compareTo(array[median]);\n  if (comp < 0) {\n    return search(array,key,left,median);\n  }\n else {\n    return search(array,key,median + 1,right);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 921,
        "startLineNumber" : 73,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * This method implements the Generic Binary Search\n * @param array The array to make the binary search\n * @param key The number you are looking for\n * @param left The lower bound\n * @param right The upper bound\n * @return the location of the key\n */\nprivate <T extends Comparable<T>>int search(T[] array,T key,int left,int right){\n  if (right <= left) {\n    return left;\n  }\n  int median=(left + right) >>> 1;\n  int comp=key.compareTo(array[median]);\n  if (comp < 0) {\n    return search(array,key,left,median);\n  }\n else {\n    return search(array,key,median + 1,right);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 78,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 84,
        "startColumnNumber" : 12,
        "endLineNumber" : 84,
        "endColumnNumber" : 24
      },
      "nodeContext" : "return left;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "left",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 88,
      "startColumnNumber" : 22,
      "endLineNumber" : 88,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 88,
        "startColumnNumber" : 22,
        "endLineNumber" : 88,
        "endColumnNumber" : 34
      },
      "nodeContext" : "left + right",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 88,
        "startColumnNumber" : 21,
        "endLineNumber" : 88,
        "endColumnNumber" : 35
      },
      "nodeContext" : "(left + right)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 88,
        "startColumnNumber" : 21,
        "endLineNumber" : 88,
        "endColumnNumber" : 41
      },
      "nodeContext" : "(left + right) >>> 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 88,
        "startColumnNumber" : 12,
        "endLineNumber" : 88,
        "endColumnNumber" : 41
      },
      "nodeContext" : "median=(left + right) >>> 1",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 42
      },
      "nodeContext" : "int median=(left + right) >>> 1;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 534,
        "startLineNumber" : 82,
        "startColumnNumber" : 88,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (right <= left) {\n    return left;\n  }\n  int median=(left + right) >>> 1;\n  int comp=key.compareTo(array[median]);\n  if (comp < 0) {\n    return search(array,key,left,median);\n  }\n else {\n    return search(array,key,median + 1,right);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 921,
        "startLineNumber" : 73,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * This method implements the Generic Binary Search\n * @param array The array to make the binary search\n * @param key The number you are looking for\n * @param left The lower bound\n * @param right The upper bound\n * @return the location of the key\n */\nprivate <T extends Comparable<T>>int search(T[] array,T key,int left,int right){\n  if (right <= left) {\n    return left;\n  }\n  int median=(left + right) >>> 1;\n  int comp=key.compareTo(array[median]);\n  if (comp < 0) {\n    return search(array,key,left,median);\n  }\n else {\n    return search(array,key,median + 1,right);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 78,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 42
      },
      "nodeContext" : "int median=(left + right) >>> 1;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "left",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 93,
      "startColumnNumber" : 38,
      "endLineNumber" : 93,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 93,
        "startColumnNumber" : 19,
        "endLineNumber" : 93,
        "endColumnNumber" : 51
      },
      "nodeContext" : "search(array,key,left,median)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 93,
        "startColumnNumber" : 12,
        "endLineNumber" : 93,
        "endColumnNumber" : 52
      },
      "nodeContext" : "return search(array,key,left,median);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 91,
        "startColumnNumber" : 22,
        "endLineNumber" : 94,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  return search(array,key,left,median);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 327,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (comp < 0) {\n  return search(array,key,left,median);\n}\n else {\n  return search(array,key,median + 1,right);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 534,
        "startLineNumber" : 82,
        "startColumnNumber" : 88,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (right <= left) {\n    return left;\n  }\n  int median=(left + right) >>> 1;\n  int comp=key.compareTo(array[median]);\n  if (comp < 0) {\n    return search(array,key,left,median);\n  }\n else {\n    return search(array,key,median + 1,right);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 921,
        "startLineNumber" : 73,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * This method implements the Generic Binary Search\n * @param array The array to make the binary search\n * @param key The number you are looking for\n * @param left The lower bound\n * @param right The upper bound\n * @return the location of the key\n */\nprivate <T extends Comparable<T>>int search(T[] array,T key,int left,int right){\n  if (right <= left) {\n    return left;\n  }\n  int median=(left + right) >>> 1;\n  int comp=key.compareTo(array[median]);\n  if (comp < 0) {\n    return search(array,key,left,median);\n  }\n else {\n    return search(array,key,median + 1,right);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 78,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 93,
        "startColumnNumber" : 12,
        "endLineNumber" : 93,
        "endColumnNumber" : 52
      },
      "nodeContext" : "return search(array,key,left,median);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 83,
    "startColumnNumber" : 21,
    "endLineNumber" : 83,
    "endColumnNumber" : 25
  }, {
    "charLength" : 4,
    "startLineNumber" : 84,
    "startColumnNumber" : 19,
    "endLineNumber" : 84,
    "endColumnNumber" : 23
  }, {
    "charLength" : 4,
    "startLineNumber" : 88,
    "startColumnNumber" : 22,
    "endLineNumber" : 88,
    "endColumnNumber" : 26
  }, {
    "charLength" : 4,
    "startLineNumber" : 93,
    "startColumnNumber" : 38,
    "endLineNumber" : 93,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  } ]
}