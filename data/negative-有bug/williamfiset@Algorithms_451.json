{
  "id" : 451,
  "expression" : "visited[i]",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/graphtheory/BridgesAdjacencyList.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "visited[i]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 46,
      "startColumnNumber" : 37,
      "endLineNumber" : 46,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 46,
        "startColumnNumber" : 36,
        "endLineNumber" : 46,
        "endColumnNumber" : 47
      },
      "nodeContext" : "!visited[i]",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 46,
        "startColumnNumber" : 32,
        "endLineNumber" : 46,
        "endColumnNumber" : 69
      },
      "nodeContext" : "if (!visited[i]) dfs(i,-1,bridges);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 46,
        "endColumnNumber" : 69
      },
      "nodeContext" : "for (int i=0; i < n; i++) if (!visited[i]) dfs(i,-1,bridges);\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 376,
        "startLineNumber" : 35,
        "startColumnNumber" : 37,
        "endLineNumber" : 50,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (solved)   return bridges;\n  id=0;\n  low=new int[n];\n  ids=new int[n];\n  visited=new boolean[n];\n  bridges=new ArrayList<>();\n  for (int i=0; i < n; i++)   if (!visited[i])   dfs(i,-1,bridges);\n  solved=true;\n  return bridges;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 411,
        "startLineNumber" : 35,
        "startColumnNumber" : 2,
        "endLineNumber" : 50,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public List<Integer> findBridges(){\n  if (solved)   return bridges;\n  id=0;\n  low=new int[n];\n  ids=new int[n];\n  visited=new boolean[n];\n  bridges=new ArrayList<>();\n  for (int i=0; i < n; i++)   if (!visited[i])   dfs(i,-1,bridges);\n  solved=true;\n  return bridges;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 77,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 46,
        "endColumnNumber" : 69
      },
      "nodeContext" : "for (int i=0; i < n; i++) if (!visited[i]) dfs(i,-1,bridges);\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 23,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 46,
    "startColumnNumber" : 37,
    "endLineNumber" : 46,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ ]
}