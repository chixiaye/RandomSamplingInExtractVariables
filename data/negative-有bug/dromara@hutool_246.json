{
  "id" : 246,
  "expression" : "currentField",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-core/src/main/java/cn/hutool/core/text/csv/CsvParser.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "currentField",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 162,
      "startColumnNumber" : 39,
      "endLineNumber" : 162,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 162,
        "startColumnNumber" : 19,
        "endLineNumber" : 162,
        "endColumnNumber" : 51
      },
      "nodeContext" : "localCurrentField=currentField",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 162,
        "startColumnNumber" : 2,
        "endLineNumber" : 162,
        "endColumnNumber" : 52
      },
      "nodeContext" : "final StrBuilder localCurrentField=currentField;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2607,
        "startLineNumber" : 159,
        "startColumnNumber" : 59,
        "endLineNumber" : 256,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  final List<String> currentFields=new ArrayList<>(maxFieldCount > 0 ? maxFieldCount : DEFAULT_ROW_CAPACITY);\n  final StrBuilder localCurrentField=currentField;\n  final char[] localBuf=this.buf;\n  int localBufPos=bufPos;\n  int localPreChar=preChar;\n  int localCopyStart=copyStart;\n  int copyLen=0;\n  while (true) {\n    if (bufLen == localBufPos) {\n      if (copyLen > 0) {\n        localCurrentField.append(localBuf,localCopyStart,copyLen);\n      }\n      try {\n        bufLen=reader.read(localBuf);\n      }\n catch (      IOException e) {\n        throw new IORuntimeException(e);\n      }\n      if (bufLen < 0) {\n        finished=true;\n        if (localPreChar == config.fieldSeparator || localCurrentField.hasContent()) {\n          currentFields.add(StrUtil.unWrap(localCurrentField.toStringAndReset(),config.textDelimiter));\n        }\n        break;\n      }\n      localCopyStart=localBufPos=copyLen=0;\n    }\n    final char c=localBuf[localBufPos++];\n    if (inQuotes) {\n      if (c == config.textDelimiter) {\n        inQuotes=false;\n      }\n else {\n        if ((c == CharUtil.CR || c == CharUtil.LF) && localPreChar != CharUtil.CR) {\n          lineNo++;\n        }\n      }\n      copyLen++;\n    }\n else {\n      if (c == config.fieldSeparator) {\n        if (copyLen > 0) {\n          localCurrentField.append(localBuf,localCopyStart,copyLen);\n          copyLen=0;\n        }\n        currentFields.add(StrUtil.unWrap(localCurrentField.toStringAndReset(),config.textDelimiter));\n        localCopyStart=localBufPos;\n      }\n else       if (c == config.textDelimiter) {\n        inQuotes=true;\n        copyLen++;\n      }\n else       if (c == CharUtil.CR) {\n        if (copyLen > 0) {\n          localCurrentField.append(localBuf,localCopyStart,copyLen);\n        }\n        currentFields.add(StrUtil.unWrap(localCurrentField.toStringAndReset(),config.textDelimiter));\n        localPreChar=c;\n        localCopyStart=localBufPos;\n        break;\n      }\n else       if (c == CharUtil.LF) {\n        if (localPreChar != CharUtil.CR) {\n          if (copyLen > 0) {\n            localCurrentField.append(localBuf,localCopyStart,copyLen);\n          }\n          currentFields.add(StrUtil.unWrap(localCurrentField.toStringAndReset(),config.textDelimiter));\n          localPreChar=c;\n          localCopyStart=localBufPos;\n          break;\n        }\n        localCopyStart=localBufPos;\n      }\n else {\n        copyLen++;\n      }\n    }\n    localPreChar=c;\n  }\n  bufPos=localBufPos;\n  preChar=localPreChar;\n  copyStart=localCopyStart;\n  return currentFields;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 359,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2744,
        "startLineNumber" : 153,
        "startColumnNumber" : 1,
        "endLineNumber" : 256,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 读取一行数据\n * @return 一行数据\n * @throws IORuntimeException IO异常\n */\nprivate List<String> readLine() throws IORuntimeException {\n  final List<String> currentFields=new ArrayList<>(maxFieldCount > 0 ? maxFieldCount : DEFAULT_ROW_CAPACITY);\n  final StrBuilder localCurrentField=currentField;\n  final char[] localBuf=this.buf;\n  int localBufPos=bufPos;\n  int localPreChar=preChar;\n  int localCopyStart=copyStart;\n  int copyLen=0;\n  while (true) {\n    if (bufLen == localBufPos) {\n      if (copyLen > 0) {\n        localCurrentField.append(localBuf,localCopyStart,copyLen);\n      }\n      try {\n        bufLen=reader.read(localBuf);\n      }\n catch (      IOException e) {\n        throw new IORuntimeException(e);\n      }\n      if (bufLen < 0) {\n        finished=true;\n        if (localPreChar == config.fieldSeparator || localCurrentField.hasContent()) {\n          currentFields.add(StrUtil.unWrap(localCurrentField.toStringAndReset(),config.textDelimiter));\n        }\n        break;\n      }\n      localCopyStart=localBufPos=copyLen=0;\n    }\n    final char c=localBuf[localBufPos++];\n    if (inQuotes) {\n      if (c == config.textDelimiter) {\n        inQuotes=false;\n      }\n else {\n        if ((c == CharUtil.CR || c == CharUtil.LF) && localPreChar != CharUtil.CR) {\n          lineNo++;\n        }\n      }\n      copyLen++;\n    }\n else {\n      if (c == config.fieldSeparator) {\n        if (copyLen > 0) {\n          localCurrentField.append(localBuf,localCopyStart,copyLen);\n          copyLen=0;\n        }\n        currentFields.add(StrUtil.unWrap(localCurrentField.toStringAndReset(),config.textDelimiter));\n        localCopyStart=localBufPos;\n      }\n else       if (c == config.textDelimiter) {\n        inQuotes=true;\n        copyLen++;\n      }\n else       if (c == CharUtil.CR) {\n        if (copyLen > 0) {\n          localCurrentField.append(localBuf,localCopyStart,copyLen);\n        }\n        currentFields.add(StrUtil.unWrap(localCurrentField.toStringAndReset(),config.textDelimiter));\n        localPreChar=c;\n        localCopyStart=localBufPos;\n        break;\n      }\n else       if (c == CharUtil.LF) {\n        if (localPreChar != CharUtil.CR) {\n          if (copyLen > 0) {\n            localCurrentField.append(localBuf,localCopyStart,copyLen);\n          }\n          currentFields.add(StrUtil.unWrap(localCurrentField.toStringAndReset(),config.textDelimiter));\n          localPreChar=c;\n          localCopyStart=localBufPos;\n          break;\n        }\n        localCopyStart=localBufPos;\n      }\n else {\n        copyLen++;\n      }\n    }\n    localPreChar=c;\n  }\n  bufPos=localBufPos;\n  preChar=localPreChar;\n  copyStart=localCopyStart;\n  return currentFields;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 370,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 162,
        "startColumnNumber" : 2,
        "endLineNumber" : 162,
        "endColumnNumber" : 52
      },
      "nodeContext" : "final StrBuilder localCurrentField=currentField;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "cn.hutool.core.text.StrBuilder"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 162,
    "startColumnNumber" : 39,
    "endLineNumber" : 162,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ ]
}