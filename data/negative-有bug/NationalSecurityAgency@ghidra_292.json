{
  "id" : 292,
  "expression" : "nextComp",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Features/Decompiler/src/main/java/ghidra/app/plugin/core/decompile/actions/RetypeStructFieldTask.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "nextComp",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 101,
      "startColumnNumber" : 19,
      "endLineNumber" : 101,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 101,
        "startColumnNumber" : 19,
        "endLineNumber" : 101,
        "endColumnNumber" : 35
      },
      "nodeContext" : "nextComp == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 101,
        "startColumnNumber" : 19,
        "endLineNumber" : 101,
        "endColumnNumber" : 79
      },
      "nodeContext" : "nextComp == null ? struct.getLength() : nextComp.getOffset()",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 101,
        "startColumnNumber" : 7,
        "endLineNumber" : 101,
        "endColumnNumber" : 79
      },
      "nodeContext" : "endOffset=nextComp == null ? struct.getLength() : nextComp.getOffset()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 101,
        "startColumnNumber" : 3,
        "endLineNumber" : 101,
        "endColumnNumber" : 80
      },
      "nodeContext" : "int endOffset=nextComp == null ? struct.getLength() : nextComp.getOffset();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 364,
        "startLineNumber" : 98,
        "startColumnNumber" : 31,
        "endLineNumber" : 107,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Structure struct=(Structure)composite;\n  DataTypeComponent nextComp=struct.getDefinedComponentAtOrAfterOffset(nextOffset);\n  int endOffset=nextComp == null ? struct.getLength() : nextComp.getOffset();\n  available+=endOffset - nextOffset;\n  if (newDtLength > available) {\n    errorMsg=\"Datatype will not fit\";\n    return false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 393,
        "startLineNumber" : 98,
        "startColumnNumber" : 2,
        "endLineNumber" : 107,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (newDtLength > available) {\n  Structure struct=(Structure)composite;\n  DataTypeComponent nextComp=struct.getDefinedComponentAtOrAfterOffset(nextOffset);\n  int endOffset=nextComp == null ? struct.getLength() : nextComp.getOffset();\n  available+=endOffset - nextOffset;\n  if (newDtLength > available) {\n    errorMsg=\"Datatype will not fit\";\n    return false;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 54,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1214,
        "startLineNumber" : 74,
        "startColumnNumber" : 31,
        "endLineNumber" : 113,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int newDtLength=newType.getLength();\n  if (newType instanceof FactoryDataType || newDtLength <= 0) {\n    errorMsg=\"Field of type '\" + newType.getName() + \"' - is not allowed.\";\n    return false;\n  }\n  if (DataTypeComponent.usesZeroLengthComponent(newType)) {\n    errorMsg=\"Zero-length component is not allowed.\";\n    return false;\n  }\n  if (oldType == DataType.DEFAULT || newDtLength == oldType.getLength()) {\n    return true;\n  }\n  int nextOffset;\n  if (component == null) {\n    nextOffset=offset + 1;\n  }\n else {\n    nextOffset=component.getEndOffset() + 1;\n  }\n  int available=nextOffset - offset;\n  if (newDtLength > available) {\n    Structure struct=(Structure)composite;\n    DataTypeComponent nextComp=struct.getDefinedComponentAtOrAfterOffset(nextOffset);\n    int endOffset=nextComp == null ? struct.getLength() : nextComp.getOffset();\n    available+=endOffset - nextOffset;\n    if (newDtLength > available) {\n      errorMsg=\"Datatype will not fit\";\n      return false;\n    }\n  }\n  if (!verifyPacking()) {\n    return false;\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 150,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1256,
        "startLineNumber" : 73,
        "startColumnNumber" : 1,
        "endLineNumber" : 113,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public boolean isValidAfter(){\n  int newDtLength=newType.getLength();\n  if (newType instanceof FactoryDataType || newDtLength <= 0) {\n    errorMsg=\"Field of type '\" + newType.getName() + \"' - is not allowed.\";\n    return false;\n  }\n  if (DataTypeComponent.usesZeroLengthComponent(newType)) {\n    errorMsg=\"Zero-length component is not allowed.\";\n    return false;\n  }\n  if (oldType == DataType.DEFAULT || newDtLength == oldType.getLength()) {\n    return true;\n  }\n  int nextOffset;\n  if (component == null) {\n    nextOffset=offset + 1;\n  }\n else {\n    nextOffset=component.getEndOffset() + 1;\n  }\n  int available=nextOffset - offset;\n  if (newDtLength > available) {\n    Structure struct=(Structure)composite;\n    DataTypeComponent nextComp=struct.getDefinedComponentAtOrAfterOffset(nextOffset);\n    int endOffset=nextComp == null ? struct.getLength() : nextComp.getOffset();\n    available+=endOffset - nextOffset;\n    if (newDtLength > available) {\n      errorMsg=\"Datatype will not fit\";\n      return false;\n    }\n  }\n  if (!verifyPacking()) {\n    return false;\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 156,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 101,
        "startColumnNumber" : 3,
        "endLineNumber" : 101,
        "endColumnNumber" : 80
      },
      "nodeContext" : "int endOffset=nextComp == null ? struct.getLength() : nextComp.getOffset();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "ghidra.program.model.data.DataTypeComponent"
  }, {
    "nodeContext" : "nextComp",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 101,
      "startColumnNumber" : 59,
      "endLineNumber" : 101,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,elseExpression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 101,
        "startColumnNumber" : 59,
        "endLineNumber" : 101,
        "endColumnNumber" : 79
      },
      "nodeContext" : "nextComp.getOffset()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 101,
        "startColumnNumber" : 19,
        "endLineNumber" : 101,
        "endColumnNumber" : 79
      },
      "nodeContext" : "nextComp == null ? struct.getLength() : nextComp.getOffset()",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 101,
        "startColumnNumber" : 7,
        "endLineNumber" : 101,
        "endColumnNumber" : 79
      },
      "nodeContext" : "endOffset=nextComp == null ? struct.getLength() : nextComp.getOffset()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 101,
        "startColumnNumber" : 3,
        "endLineNumber" : 101,
        "endColumnNumber" : 80
      },
      "nodeContext" : "int endOffset=nextComp == null ? struct.getLength() : nextComp.getOffset();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 364,
        "startLineNumber" : 98,
        "startColumnNumber" : 31,
        "endLineNumber" : 107,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Structure struct=(Structure)composite;\n  DataTypeComponent nextComp=struct.getDefinedComponentAtOrAfterOffset(nextOffset);\n  int endOffset=nextComp == null ? struct.getLength() : nextComp.getOffset();\n  available+=endOffset - nextOffset;\n  if (newDtLength > available) {\n    errorMsg=\"Datatype will not fit\";\n    return false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 393,
        "startLineNumber" : 98,
        "startColumnNumber" : 2,
        "endLineNumber" : 107,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (newDtLength > available) {\n  Structure struct=(Structure)composite;\n  DataTypeComponent nextComp=struct.getDefinedComponentAtOrAfterOffset(nextOffset);\n  int endOffset=nextComp == null ? struct.getLength() : nextComp.getOffset();\n  available+=endOffset - nextOffset;\n  if (newDtLength > available) {\n    errorMsg=\"Datatype will not fit\";\n    return false;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 54,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1214,
        "startLineNumber" : 74,
        "startColumnNumber" : 31,
        "endLineNumber" : 113,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int newDtLength=newType.getLength();\n  if (newType instanceof FactoryDataType || newDtLength <= 0) {\n    errorMsg=\"Field of type '\" + newType.getName() + \"' - is not allowed.\";\n    return false;\n  }\n  if (DataTypeComponent.usesZeroLengthComponent(newType)) {\n    errorMsg=\"Zero-length component is not allowed.\";\n    return false;\n  }\n  if (oldType == DataType.DEFAULT || newDtLength == oldType.getLength()) {\n    return true;\n  }\n  int nextOffset;\n  if (component == null) {\n    nextOffset=offset + 1;\n  }\n else {\n    nextOffset=component.getEndOffset() + 1;\n  }\n  int available=nextOffset - offset;\n  if (newDtLength > available) {\n    Structure struct=(Structure)composite;\n    DataTypeComponent nextComp=struct.getDefinedComponentAtOrAfterOffset(nextOffset);\n    int endOffset=nextComp == null ? struct.getLength() : nextComp.getOffset();\n    available+=endOffset - nextOffset;\n    if (newDtLength > available) {\n      errorMsg=\"Datatype will not fit\";\n      return false;\n    }\n  }\n  if (!verifyPacking()) {\n    return false;\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 150,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1256,
        "startLineNumber" : 73,
        "startColumnNumber" : 1,
        "endLineNumber" : 113,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public boolean isValidAfter(){\n  int newDtLength=newType.getLength();\n  if (newType instanceof FactoryDataType || newDtLength <= 0) {\n    errorMsg=\"Field of type '\" + newType.getName() + \"' - is not allowed.\";\n    return false;\n  }\n  if (DataTypeComponent.usesZeroLengthComponent(newType)) {\n    errorMsg=\"Zero-length component is not allowed.\";\n    return false;\n  }\n  if (oldType == DataType.DEFAULT || newDtLength == oldType.getLength()) {\n    return true;\n  }\n  int nextOffset;\n  if (component == null) {\n    nextOffset=offset + 1;\n  }\n else {\n    nextOffset=component.getEndOffset() + 1;\n  }\n  int available=nextOffset - offset;\n  if (newDtLength > available) {\n    Structure struct=(Structure)composite;\n    DataTypeComponent nextComp=struct.getDefinedComponentAtOrAfterOffset(nextOffset);\n    int endOffset=nextComp == null ? struct.getLength() : nextComp.getOffset();\n    available+=endOffset - nextOffset;\n    if (newDtLength > available) {\n      errorMsg=\"Datatype will not fit\";\n      return false;\n    }\n  }\n  if (!verifyPacking()) {\n    return false;\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 156,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 101,
        "startColumnNumber" : 3,
        "endLineNumber" : 101,
        "endColumnNumber" : 80
      },
      "nodeContext" : "int endOffset=nextComp == null ? struct.getLength() : nextComp.getOffset();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "ghidra.program.model.data.DataTypeComponent"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 101,
    "startColumnNumber" : 19,
    "endLineNumber" : 101,
    "endColumnNumber" : 27
  }, {
    "charLength" : 8,
    "startLineNumber" : 101,
    "startColumnNumber" : 59,
    "endLineNumber" : 101,
    "endColumnNumber" : 67
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}