{
  "id" : 17,
  "expression" : "sql",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "7815611a659da4cc8d5443f5ef4c10ca0d937582",
  "filePath" : "/mybatis-plus-core/src/main/java/com/baomidou/mybatisplus/mapper/LogicSqlInjector.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "sql",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 61,
      "startColumnNumber" : 70,
      "endLineNumber" : 61,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 61,
        "startColumnNumber" : 24,
        "endLineNumber" : 61,
        "endColumnNumber" : 86
      },
      "nodeContext" : "languageDriver.createSqlSource(configuration,sql,modelClass)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 61,
        "startColumnNumber" : 12,
        "endLineNumber" : 61,
        "endColumnNumber" : 86
      },
      "nodeContext" : "sqlSource=languageDriver.createSqlSource(configuration,sql,modelClass)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 61,
        "startColumnNumber" : 12,
        "endLineNumber" : 61,
        "endColumnNumber" : 87
      },
      "nodeContext" : "sqlSource=languageDriver.createSqlSource(configuration,sql,modelClass);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 911,
        "startLineNumber" : 46,
        "startColumnNumber" : 35,
        "endLineNumber" : 63,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  SqlMethod sqlMethod=SqlMethod.LOGIC_DELETE_BY_ID;\n  SqlSource sqlSource;\n  String idStr=table.getKeyProperty();\n  if (batch) {\n    sqlMethod=SqlMethod.LOGIC_DELETE_BATCH_BY_IDS;\n    StringBuilder ids=new StringBuilder();\n    ids.append(\"\\n<foreach item=\\\"item\\\" index=\\\"index\\\" collection=\\\"coll\\\" separator=\\\",\\\">\");\n    ids.append(\"#{item}\");\n    ids.append(\"\\n</foreach>\");\n    idStr=ids.toString();\n  }\n  String sql=String.format(sqlMethod.getSql(),table.getTableName(),sqlLogicSet(table),table.getKeyColumn(),idStr);\n  sqlSource=languageDriver.createSqlSource(configuration,sql,modelClass);\n  this.addUpdateMappedStatement(mapperClass,modelClass,sqlMethod.getMethod(),sqlSource);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1053,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (table.isLogicDelete()) {\n  SqlMethod sqlMethod=SqlMethod.LOGIC_DELETE_BY_ID;\n  SqlSource sqlSource;\n  String idStr=table.getKeyProperty();\n  if (batch) {\n    sqlMethod=SqlMethod.LOGIC_DELETE_BATCH_BY_IDS;\n    StringBuilder ids=new StringBuilder();\n    ids.append(\"\\n<foreach item=\\\"item\\\" index=\\\"index\\\" collection=\\\"coll\\\" separator=\\\",\\\">\");\n    ids.append(\"#{item}\");\n    ids.append(\"\\n</foreach>\");\n    idStr=ids.toString();\n  }\n  String sql=String.format(sqlMethod.getSql(),table.getTableName(),sqlLogicSet(table),table.getKeyColumn(),idStr);\n  sqlSource=languageDriver.createSqlSource(configuration,sql,modelClass);\n  this.addUpdateMappedStatement(mapperClass,modelClass,sqlMethod.getMethod(),sqlSource);\n}\n else {\n  super.injectDeleteByIdSql(batch,mapperClass,modelClass,table);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 112,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1069,
        "startLineNumber" : 45,
        "startColumnNumber" : 114,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (table.isLogicDelete()) {\n    SqlMethod sqlMethod=SqlMethod.LOGIC_DELETE_BY_ID;\n    SqlSource sqlSource;\n    String idStr=table.getKeyProperty();\n    if (batch) {\n      sqlMethod=SqlMethod.LOGIC_DELETE_BATCH_BY_IDS;\n      StringBuilder ids=new StringBuilder();\n      ids.append(\"\\n<foreach item=\\\"item\\\" index=\\\"index\\\" collection=\\\"coll\\\" separator=\\\",\\\">\");\n      ids.append(\"#{item}\");\n      ids.append(\"\\n</foreach>\");\n      idStr=ids.toString();\n    }\n    String sql=String.format(sqlMethod.getSql(),table.getTableName(),sqlLogicSet(table),table.getKeyColumn(),idStr);\n    sqlSource=languageDriver.createSqlSource(configuration,sql,modelClass);\n    this.addUpdateMappedStatement(mapperClass,modelClass,sqlMethod.getMethod(),sqlSource);\n  }\n else {\n    super.injectDeleteByIdSql(batch,mapperClass,modelClass,table);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1225,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * 根据 ID 删除\n */\n@Override protected void injectDeleteByIdSql(boolean batch,Class<?> mapperClass,Class<?> modelClass,TableInfo table){\n  if (table.isLogicDelete()) {\n    SqlMethod sqlMethod=SqlMethod.LOGIC_DELETE_BY_ID;\n    SqlSource sqlSource;\n    String idStr=table.getKeyProperty();\n    if (batch) {\n      sqlMethod=SqlMethod.LOGIC_DELETE_BATCH_BY_IDS;\n      StringBuilder ids=new StringBuilder();\n      ids.append(\"\\n<foreach item=\\\"item\\\" index=\\\"index\\\" collection=\\\"coll\\\" separator=\\\",\\\">\");\n      ids.append(\"#{item}\");\n      ids.append(\"\\n</foreach>\");\n      idStr=ids.toString();\n    }\n    String sql=String.format(sqlMethod.getSql(),table.getTableName(),sqlLogicSet(table),table.getKeyColumn(),idStr);\n    sqlSource=languageDriver.createSqlSource(configuration,sql,modelClass);\n    this.addUpdateMappedStatement(mapperClass,modelClass,sqlMethod.getMethod(),sqlSource);\n  }\n else {\n    super.injectDeleteByIdSql(batch,mapperClass,modelClass,table);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 139,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 61,
        "startColumnNumber" : 12,
        "endLineNumber" : 61,
        "endColumnNumber" : 87
      },
      "nodeContext" : "sqlSource=languageDriver.createSqlSource(configuration,sql,modelClass);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 61,
    "startColumnNumber" : 70,
    "endLineNumber" : 61,
    "endColumnNumber" : 73
  } ],
  "layoutRelationDataList" : [ ]
}