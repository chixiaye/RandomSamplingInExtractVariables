{
  "id" : 86,
  "expression" : "pollingInterval <= 0",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-io/file/src/main/java/org/apache/pulsar/io/file/FileSourceConfig.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "pollingInterval <= 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 161,
      "startColumnNumber" : 39,
      "endLineNumber" : 161,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 161,
        "startColumnNumber" : 12,
        "endLineNumber" : 161,
        "endColumnNumber" : 59
      },
      "nodeContext" : "pollingInterval != null && pollingInterval <= 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 170,
        "startLineNumber" : 161,
        "startColumnNumber" : 8,
        "endLineNumber" : 163,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (pollingInterval != null && pollingInterval <= 0) {\n  throw new IllegalArgumentException(\"The property pollingInterval must be greater than zero\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2137,
        "startLineNumber" : 125,
        "startColumnNumber" : 27,
        "endLineNumber" : 168,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (StringUtils.isBlank(inputDirectory)) {\n    throw new IllegalArgumentException(\"Required property not set.\");\n  }\n else   if (Files.notExists(Paths.get(inputDirectory),LinkOption.NOFOLLOW_LINKS)) {\n    throw new IllegalArgumentException(\"Specified input directory does not exist\");\n  }\n else   if (!Files.isReadable(Paths.get(inputDirectory))) {\n    throw new IllegalArgumentException(\"Specified input directory is not readable\");\n  }\n else   if (Optional.ofNullable(keepFile).orElse(false) && !Files.isWritable(Paths.get(inputDirectory))) {\n    throw new IllegalArgumentException(\"You have requested the consumed files to be deleted, but the \" + \"source directory is not writeable.\");\n  }\n  if (StringUtils.isNotBlank(fileFilter)) {\n    try {\n      Pattern.compile(fileFilter);\n    }\n catch (    final PatternSyntaxException psEx) {\n      throw new IllegalArgumentException(\"Invalid Regex pattern provided for fileFilter\");\n    }\n  }\n  if (minimumFileAge != null && Math.signum(minimumFileAge) < 0) {\n    throw new IllegalArgumentException(\"The property minimumFileAge must be non-negative\");\n  }\n  if (maximumFileAge != null && Math.signum(maximumFileAge) < 0) {\n    throw new IllegalArgumentException(\"The property maximumFileAge must be non-negative\");\n  }\n  if (minimumSize != null && Math.signum(minimumSize) < 0) {\n    throw new IllegalArgumentException(\"The property minimumSize must be non-negative\");\n  }\n  if (maximumSize != null && Math.signum(maximumSize) < 0) {\n    throw new IllegalArgumentException(\"The property maximumSize must be non-negative\");\n  }\n  if (pollingInterval != null && pollingInterval <= 0) {\n    throw new IllegalArgumentException(\"The property pollingInterval must be greater than zero\");\n  }\n  if (numWorkers != null && numWorkers <= 0) {\n    throw new IllegalArgumentException(\"The property numWorkers must be greater than zero\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 190,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2160,
        "startLineNumber" : 125,
        "startColumnNumber" : 4,
        "endLineNumber" : 168,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void validate(){\n  if (StringUtils.isBlank(inputDirectory)) {\n    throw new IllegalArgumentException(\"Required property not set.\");\n  }\n else   if (Files.notExists(Paths.get(inputDirectory),LinkOption.NOFOLLOW_LINKS)) {\n    throw new IllegalArgumentException(\"Specified input directory does not exist\");\n  }\n else   if (!Files.isReadable(Paths.get(inputDirectory))) {\n    throw new IllegalArgumentException(\"Specified input directory is not readable\");\n  }\n else   if (Optional.ofNullable(keepFile).orElse(false) && !Files.isWritable(Paths.get(inputDirectory))) {\n    throw new IllegalArgumentException(\"You have requested the consumed files to be deleted, but the \" + \"source directory is not writeable.\");\n  }\n  if (StringUtils.isNotBlank(fileFilter)) {\n    try {\n      Pattern.compile(fileFilter);\n    }\n catch (    final PatternSyntaxException psEx) {\n      throw new IllegalArgumentException(\"Invalid Regex pattern provided for fileFilter\");\n    }\n  }\n  if (minimumFileAge != null && Math.signum(minimumFileAge) < 0) {\n    throw new IllegalArgumentException(\"The property minimumFileAge must be non-negative\");\n  }\n  if (maximumFileAge != null && Math.signum(maximumFileAge) < 0) {\n    throw new IllegalArgumentException(\"The property maximumFileAge must be non-negative\");\n  }\n  if (minimumSize != null && Math.signum(minimumSize) < 0) {\n    throw new IllegalArgumentException(\"The property minimumSize must be non-negative\");\n  }\n  if (maximumSize != null && Math.signum(maximumSize) < 0) {\n    throw new IllegalArgumentException(\"The property maximumSize must be non-negative\");\n  }\n  if (pollingInterval != null && pollingInterval <= 0) {\n    throw new IllegalArgumentException(\"The property pollingInterval must be greater than zero\");\n  }\n  if (numWorkers != null && numWorkers <= 0) {\n    throw new IllegalArgumentException(\"The property numWorkers must be greater than zero\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 194,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 161,
        "startColumnNumber" : 12,
        "endLineNumber" : 161,
        "endColumnNumber" : 59
      },
      "nodeContext" : "pollingInterval != null && pollingInterval <= 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 161,
    "startColumnNumber" : 39,
    "endLineNumber" : 161,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ ]
}