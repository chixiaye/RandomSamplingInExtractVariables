{
  "id" : 336,
  "expression" : "true",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/graphtheory/TspDynamicProgrammingRecursive.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "true",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 78,
      "startColumnNumber" : 11,
      "endLineNumber" : 78,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 223,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (true) {\n  tour.add(index);\n  Integer nextIndex=prev[index][state];\n  if (nextIndex == null)   break;\n  int nextState=state | (1 << nextIndex);\n  state=nextState;\n  index=nextIndex;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 41,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 535,
        "startLineNumber" : 68,
        "startColumnNumber" : 22,
        "endLineNumber" : 88,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int state=1 << START_NODE;\n  Double[][] memo=new Double[N][1 << N];\n  Integer[][] prev=new Integer[N][1 << N];\n  minTourCost=tsp(START_NODE,state,memo,prev);\n  int index=START_NODE;\n  while (true) {\n    tour.add(index);\n    Integer nextIndex=prev[index][state];\n    if (nextIndex == null)     break;\n    int nextState=state | (1 << nextIndex);\n    state=nextState;\n    index=nextIndex;\n  }\n  tour.add(START_NODE);\n  ranSolver=true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 108,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 555,
        "startLineNumber" : 68,
        "startColumnNumber" : 2,
        "endLineNumber" : 88,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void solve(){\n  int state=1 << START_NODE;\n  Double[][] memo=new Double[N][1 << N];\n  Integer[][] prev=new Integer[N][1 << N];\n  minTourCost=tsp(START_NODE,state,memo,prev);\n  int index=START_NODE;\n  while (true) {\n    tour.add(index);\n    Integer nextIndex=prev[index][state];\n    if (nextIndex == null)     break;\n    int nextState=state | (1 << nextIndex);\n    state=nextState;\n    index=nextIndex;\n  }\n  tour.add(START_NODE);\n  ranSolver=true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 112,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 223,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (true) {\n  tour.add(index);\n  Integer nextIndex=prev[index][state];\n  if (nextIndex == null)   break;\n  int nextState=state | (1 << nextIndex);\n  state=nextState;\n  index=nextIndex;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 41,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "boolean"
  }, {
    "nodeContext" : "true",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 87,
      "startColumnNumber" : 16,
      "endLineNumber" : 87,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 87,
        "startColumnNumber" : 4,
        "endLineNumber" : 87,
        "endColumnNumber" : 20
      },
      "nodeContext" : "ranSolver=true",
      "nodeType" : "Assignment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 87,
        "startColumnNumber" : 4,
        "endLineNumber" : 87,
        "endColumnNumber" : 21
      },
      "nodeContext" : "ranSolver=true;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 535,
        "startLineNumber" : 68,
        "startColumnNumber" : 22,
        "endLineNumber" : 88,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int state=1 << START_NODE;\n  Double[][] memo=new Double[N][1 << N];\n  Integer[][] prev=new Integer[N][1 << N];\n  minTourCost=tsp(START_NODE,state,memo,prev);\n  int index=START_NODE;\n  while (true) {\n    tour.add(index);\n    Integer nextIndex=prev[index][state];\n    if (nextIndex == null)     break;\n    int nextState=state | (1 << nextIndex);\n    state=nextState;\n    index=nextIndex;\n  }\n  tour.add(START_NODE);\n  ranSolver=true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 108,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 555,
        "startLineNumber" : 68,
        "startColumnNumber" : 2,
        "endLineNumber" : 88,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void solve(){\n  int state=1 << START_NODE;\n  Double[][] memo=new Double[N][1 << N];\n  Integer[][] prev=new Integer[N][1 << N];\n  minTourCost=tsp(START_NODE,state,memo,prev);\n  int index=START_NODE;\n  while (true) {\n    tour.add(index);\n    Integer nextIndex=prev[index][state];\n    if (nextIndex == null)     break;\n    int nextState=state | (1 << nextIndex);\n    state=nextState;\n    index=nextIndex;\n  }\n  tour.add(START_NODE);\n  ranSolver=true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 112,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 87,
        "startColumnNumber" : 4,
        "endLineNumber" : 87,
        "endColumnNumber" : 21
      },
      "nodeContext" : "ranSolver=true;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 78,
    "startColumnNumber" : 11,
    "endLineNumber" : 78,
    "endColumnNumber" : 15
  }, {
    "charLength" : 4,
    "startLineNumber" : 87,
    "startColumnNumber" : 16,
    "endLineNumber" : 87,
    "endColumnNumber" : 20
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}