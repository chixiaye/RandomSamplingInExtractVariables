{
  "id" : 332,
  "expression" : "simpleTestProject",
  "projectName" : "GoogleContainerTools@jib",
  "commitID" : "a0742fd277b5490a0965dba4443f5864f1250199",
  "filePath" : "/jib-maven-plugin/src/test/java/com/google/cloud/tools/jib/maven/DockerContextMojoIntegrationTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "simpleTestProject",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 43,
      "startColumnNumber" : 37,
      "endLineNumber" : 43,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 43,
        "startColumnNumber" : 37,
        "endLineNumber" : 43,
        "endColumnNumber" : 71
      },
      "nodeContext" : "simpleTestProject.getProjectRoot()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 43,
        "startColumnNumber" : 37,
        "endLineNumber" : 43,
        "endColumnNumber" : 82
      },
      "nodeContext" : "simpleTestProject.getProjectRoot().toString()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 43,
        "startColumnNumber" : 24,
        "endLineNumber" : 43,
        "endColumnNumber" : 83
      },
      "nodeContext" : "new Verifier(simpleTestProject.getProjectRoot().toString())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 43,
        "startColumnNumber" : 13,
        "endLineNumber" : 43,
        "endColumnNumber" : 83
      },
      "nodeContext" : "verifier=new Verifier(simpleTestProject.getProjectRoot().toString())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 43,
        "endColumnNumber" : 84
      },
      "nodeContext" : "Verifier verifier=new Verifier(simpleTestProject.getProjectRoot().toString());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1146,
        "startLineNumber" : 42,
        "startColumnNumber" : 92,
        "endLineNumber" : 66,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Verifier verifier=new Verifier(simpleTestProject.getProjectRoot().toString());\n  verifier.setAutoclean(false);\n  verifier.executeGoal(\"compile\");\n  verifier.executeGoal(\"jib:\" + DockerContextMojo.GOAL_NAME);\n  Path dockerContextDirectory=simpleTestProject.getProjectRoot().resolve(\"target\").resolve(\"jib-docker-context\");\n  Assert.assertTrue(Files.exists(dockerContextDirectory));\n  String imageName=\"jib/integration-test\" + System.nanoTime();\n  new Command(\"docker\",\"build\",\"-t\",imageName,dockerContextDirectory.toString()).run();\n  Assert.assertThat(new Command(\"docker\",\"inspect\",imageName).run(),CoreMatchers.containsString(\"            \\\"ExposedPorts\\\": {\\n\" + \"                \\\"1000/tcp\\\": {},\\n\" + \"                \\\"2000/udp\\\": {},\\n\"+ \"                \\\"2001/udp\\\": {},\\n\"+ \"                \\\"2002/udp\\\": {},\\n\"+ \"                \\\"2003/udp\\\": {}\"));\n  Assert.assertEquals(\"Hello, world. An argument.\\nfoo\\ncat\\n\",new Command(\"docker\",\"run\",imageName).run());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1244,
        "startLineNumber" : 41,
        "startColumnNumber" : 2,
        "endLineNumber" : 66,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testExecute() throws VerificationException, IOException, InterruptedException {\n  Verifier verifier=new Verifier(simpleTestProject.getProjectRoot().toString());\n  verifier.setAutoclean(false);\n  verifier.executeGoal(\"compile\");\n  verifier.executeGoal(\"jib:\" + DockerContextMojo.GOAL_NAME);\n  Path dockerContextDirectory=simpleTestProject.getProjectRoot().resolve(\"target\").resolve(\"jib-docker-context\");\n  Assert.assertTrue(Files.exists(dockerContextDirectory));\n  String imageName=\"jib/integration-test\" + System.nanoTime();\n  new Command(\"docker\",\"build\",\"-t\",imageName,dockerContextDirectory.toString()).run();\n  Assert.assertThat(new Command(\"docker\",\"inspect\",imageName).run(),CoreMatchers.containsString(\"            \\\"ExposedPorts\\\": {\\n\" + \"                \\\"1000/tcp\\\": {},\\n\" + \"                \\\"2000/udp\\\": {},\\n\"+ \"                \\\"2001/udp\\\": {},\\n\"+ \"                \\\"2002/udp\\\": {},\\n\"+ \"                \\\"2003/udp\\\": {}\"));\n  Assert.assertEquals(\"Hello, world. An argument.\\nfoo\\ncat\\n\",new Command(\"docker\",\"run\",imageName).run());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 125,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 43,
        "endColumnNumber" : 84
      },
      "nodeContext" : "Verifier verifier=new Verifier(simpleTestProject.getProjectRoot().toString());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "com.google.cloud.tools.jib.maven.TestProject"
  }, {
    "nodeContext" : "simpleTestProject",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 49,
      "startColumnNumber" : 8,
      "endLineNumber" : 49,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 42
      },
      "nodeContext" : "simpleTestProject.getProjectRoot()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 60
      },
      "nodeContext" : "simpleTestProject.getProjectRoot().resolve(\"target\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 90
      },
      "nodeContext" : "simpleTestProject.getProjectRoot().resolve(\"target\").resolve(\"jib-docker-context\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 48,
        "startColumnNumber" : 9,
        "endLineNumber" : 49,
        "endColumnNumber" : 90
      },
      "nodeContext" : "dockerContextDirectory=simpleTestProject.getProjectRoot().resolve(\"target\").resolve(\"jib-docker-context\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 91
      },
      "nodeContext" : "Path dockerContextDirectory=simpleTestProject.getProjectRoot().resolve(\"target\").resolve(\"jib-docker-context\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1146,
        "startLineNumber" : 42,
        "startColumnNumber" : 92,
        "endLineNumber" : 66,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Verifier verifier=new Verifier(simpleTestProject.getProjectRoot().toString());\n  verifier.setAutoclean(false);\n  verifier.executeGoal(\"compile\");\n  verifier.executeGoal(\"jib:\" + DockerContextMojo.GOAL_NAME);\n  Path dockerContextDirectory=simpleTestProject.getProjectRoot().resolve(\"target\").resolve(\"jib-docker-context\");\n  Assert.assertTrue(Files.exists(dockerContextDirectory));\n  String imageName=\"jib/integration-test\" + System.nanoTime();\n  new Command(\"docker\",\"build\",\"-t\",imageName,dockerContextDirectory.toString()).run();\n  Assert.assertThat(new Command(\"docker\",\"inspect\",imageName).run(),CoreMatchers.containsString(\"            \\\"ExposedPorts\\\": {\\n\" + \"                \\\"1000/tcp\\\": {},\\n\" + \"                \\\"2000/udp\\\": {},\\n\"+ \"                \\\"2001/udp\\\": {},\\n\"+ \"                \\\"2002/udp\\\": {},\\n\"+ \"                \\\"2003/udp\\\": {}\"));\n  Assert.assertEquals(\"Hello, world. An argument.\\nfoo\\ncat\\n\",new Command(\"docker\",\"run\",imageName).run());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1244,
        "startLineNumber" : 41,
        "startColumnNumber" : 2,
        "endLineNumber" : 66,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testExecute() throws VerificationException, IOException, InterruptedException {\n  Verifier verifier=new Verifier(simpleTestProject.getProjectRoot().toString());\n  verifier.setAutoclean(false);\n  verifier.executeGoal(\"compile\");\n  verifier.executeGoal(\"jib:\" + DockerContextMojo.GOAL_NAME);\n  Path dockerContextDirectory=simpleTestProject.getProjectRoot().resolve(\"target\").resolve(\"jib-docker-context\");\n  Assert.assertTrue(Files.exists(dockerContextDirectory));\n  String imageName=\"jib/integration-test\" + System.nanoTime();\n  new Command(\"docker\",\"build\",\"-t\",imageName,dockerContextDirectory.toString()).run();\n  Assert.assertThat(new Command(\"docker\",\"inspect\",imageName).run(),CoreMatchers.containsString(\"            \\\"ExposedPorts\\\": {\\n\" + \"                \\\"1000/tcp\\\": {},\\n\" + \"                \\\"2000/udp\\\": {},\\n\"+ \"                \\\"2001/udp\\\": {},\\n\"+ \"                \\\"2002/udp\\\": {},\\n\"+ \"                \\\"2003/udp\\\": {}\"));\n  Assert.assertEquals(\"Hello, world. An argument.\\nfoo\\ncat\\n\",new Command(\"docker\",\"run\",imageName).run());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 125,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 90
      },
      "nodeContext" : "simpleTestProject.getProjectRoot().resolve(\"target\").resolve(\"jib-docker-context\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.cloud.tools.jib.maven.TestProject"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 43,
    "startColumnNumber" : 37,
    "endLineNumber" : 43,
    "endColumnNumber" : 54
  }, {
    "charLength" : 17,
    "startLineNumber" : 49,
    "startColumnNumber" : 8,
    "endLineNumber" : 49,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}