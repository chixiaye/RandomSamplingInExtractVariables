{
  "id" : 389,
  "expression" : "captured.get(0)",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-write-server/src/test/java/com/netflix/eureka2/server/channel/RegistrationChannelTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "captured.get(0)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 94,
      "startColumnNumber" : 19,
      "endLineNumber" : 94,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 94,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 65
      },
      "nodeContext" : "assertThat(captured.get(0),sameInstanceInfoAs(register))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 94,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 66
      },
      "nodeContext" : "assertThat(captured.get(0),sameInstanceInfoAs(register));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 833,
        "startLineNumber" : 83,
        "startColumnNumber" : 69,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  incomingSubject.onNext(new Register(register));\n  incomingSubject.onNext(new Register(update1));\n  incomingSubject.onNext(new Register(update2));\n  incomingSubject.onNext(Unregister.INSTANCE);\n  verify(registry,times(3)).register(registryCaptor.capture(),any(Source.class));\n  verify(registry,times(1)).unregister(registryCaptor.capture(),any(Source.class));\n  List<InstanceInfo> captured=registryCaptor.getAllValues();\n  assertThat(captured.size(),equalTo(4));\n  assertThat(captured.get(0),sameInstanceInfoAs(register));\n  assertThat(captured.get(1),sameInstanceInfoAs(update1));\n  assertThat(captured.get(2),sameInstanceInfoAs(update2));\n  assertThat(captured.get(3).getId(),equalTo(register.getId()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 130,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 908,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testOperationsAreProcessedInOrder() throws Exception {\n  incomingSubject.onNext(new Register(register));\n  incomingSubject.onNext(new Register(update1));\n  incomingSubject.onNext(new Register(update2));\n  incomingSubject.onNext(Unregister.INSTANCE);\n  verify(registry,times(3)).register(registryCaptor.capture(),any(Source.class));\n  verify(registry,times(1)).unregister(registryCaptor.capture(),any(Source.class));\n  List<InstanceInfo> captured=registryCaptor.getAllValues();\n  assertThat(captured.size(),equalTo(4));\n  assertThat(captured.get(0),sameInstanceInfoAs(register));\n  assertThat(captured.get(1),sameInstanceInfoAs(update1));\n  assertThat(captured.get(2),sameInstanceInfoAs(update2));\n  assertThat(captured.get(3).getId(),equalTo(register.getId()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 138,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 94,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 66
      },
      "nodeContext" : "assertThat(captured.get(0),sameInstanceInfoAs(register));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "com.netflix.eureka2.registry.instance.InstanceInfo"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 94,
    "startColumnNumber" : 19,
    "endLineNumber" : 94,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ ]
}