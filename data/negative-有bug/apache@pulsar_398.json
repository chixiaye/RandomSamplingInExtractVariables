{
  "id" : 398,
  "expression" : "schema.encode(false)",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-client/src/test/java/org/apache/pulsar/client/impl/schema/BooleanSchemaTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "schema.encode(false)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 38,
      "startColumnNumber" : 43,
      "endLineNumber" : 38,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 38,
        "endColumnNumber" : 64
      },
      "nodeContext" : "Assert.assertEquals(expectedFalse,schema.encode(false))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 38,
        "endColumnNumber" : 65
      },
      "nodeContext" : "Assert.assertEquals(expectedFalse,schema.encode(false));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 333,
        "startLineNumber" : 29,
        "startColumnNumber" : 35,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  BooleanSchema schema=BooleanSchema.of();\n  byte[] expectedTrue=new byte[]{1};\n  byte[] expectedFalse=new byte[]{0};\n  Assert.assertEquals(expectedTrue,schema.encode(true));\n  Assert.assertEquals(expectedFalse,schema.encode(false));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 374,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSchemaEncode(){\n  BooleanSchema schema=BooleanSchema.of();\n  byte[] expectedTrue=new byte[]{1};\n  byte[] expectedFalse=new byte[]{0};\n  Assert.assertEquals(expectedTrue,schema.encode(true));\n  Assert.assertEquals(expectedFalse,schema.encode(false));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 57,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 38,
        "endColumnNumber" : 65
      },
      "nodeContext" : "Assert.assertEquals(expectedFalse,schema.encode(false));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "byte[]"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 38,
    "startColumnNumber" : 43,
    "endLineNumber" : 38,
    "endColumnNumber" : 63
  } ],
  "layoutRelationDataList" : [ ]
}