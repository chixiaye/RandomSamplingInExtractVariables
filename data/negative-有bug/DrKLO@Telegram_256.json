{
  "id" : 256,
  "expression" : "top + AndroidUtilities.dpf2(8)",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/org/telegram/ui/Components/voip/VoIPToggleButton.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "top + AndroidUtilities.dpf2(8)",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 157,
      "startColumnNumber" : 31,
      "endLineNumber" : 157,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 157,
        "startColumnNumber" : 22,
        "endLineNumber" : 157,
        "endColumnNumber" : 61
      },
      "nodeContext" : "startY=top + AndroidUtilities.dpf2(8)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 157,
        "startColumnNumber" : 16,
        "endLineNumber" : 157,
        "endColumnNumber" : 62
      },
      "nodeContext" : "float startY=top + AndroidUtilities.dpf2(8);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1195,
        "startLineNumber" : 152,
        "startColumnNumber" : 35,
        "endLineNumber" : 171,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  int left=(int)(x - icon[0].getIntrinsicWidth() / 2f);\n  int top=(int)(x - icon[0].getIntrinsicHeight() / 2);\n  float startX=left + AndroidUtilities.dpf2(8) + crossOffset;\n  float startY=top + AndroidUtilities.dpf2(8);\n  float endX=startX - AndroidUtilities.dp(1) + AndroidUtilities.dp(17) * CubicBezierInterpolator.DEFAULT.getInterpolation(crossProgress);\n  float endY=startY + AndroidUtilities.dp(17) * CubicBezierInterpolator.DEFAULT.getInterpolation(crossProgress);\n  icon[0].setBounds((int)(x - icon[0].getIntrinsicWidth() / 2f),(int)(y - icon[0].getIntrinsicHeight() / 2),(int)(x + icon[0].getIntrinsicWidth() / 2),(int)(y + icon[0].getIntrinsicHeight() / 2));\n  icon[0].draw(iconCanvas);\n  iconCanvas.drawLine(startX,startY - AndroidUtilities.dp(2f),endX,endY - AndroidUtilities.dp(2f),xRefPaint);\n  iconCanvas.drawLine(startX,startY,endX,endY,crossPaint);\n  canvas.drawBitmap(iconBitmap,cx - x,cy - y,bitmapPaint);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 194,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1565,
        "startLineNumber" : 152,
        "startColumnNumber" : 12,
        "endLineNumber" : 177,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (crossProgress > 0) {\n  int left=(int)(x - icon[0].getIntrinsicWidth() / 2f);\n  int top=(int)(x - icon[0].getIntrinsicHeight() / 2);\n  float startX=left + AndroidUtilities.dpf2(8) + crossOffset;\n  float startY=top + AndroidUtilities.dpf2(8);\n  float endX=startX - AndroidUtilities.dp(1) + AndroidUtilities.dp(17) * CubicBezierInterpolator.DEFAULT.getInterpolation(crossProgress);\n  float endY=startY + AndroidUtilities.dp(17) * CubicBezierInterpolator.DEFAULT.getInterpolation(crossProgress);\n  icon[0].setBounds((int)(x - icon[0].getIntrinsicWidth() / 2f),(int)(y - icon[0].getIntrinsicHeight() / 2),(int)(x + icon[0].getIntrinsicWidth() / 2),(int)(y + icon[0].getIntrinsicHeight() / 2));\n  icon[0].draw(iconCanvas);\n  iconCanvas.drawLine(startX,startY - AndroidUtilities.dp(2f),endX,endY - AndroidUtilities.dp(2f),xRefPaint);\n  iconCanvas.drawLine(startX,startY,endX,endY,crossPaint);\n  canvas.drawBitmap(iconBitmap,cx - x,cy - y,bitmapPaint);\n}\n else {\n  icon[0].setBounds((int)(cx - icon[0].getIntrinsicWidth() / 2f),(int)(cy - icon[0].getIntrinsicHeight() / 2),(int)(cx + icon[0].getIntrinsicWidth() / 2),(int)(cy + icon[0].getIntrinsicHeight() / 2));\n  icon[0].draw(canvas);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 260,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3185,
        "startLineNumber" : 114,
        "startColumnNumber" : 45,
        "endLineNumber" : 178,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (iconChangeColor) {\n    int color=ColorUtils.blendARGB(replaceColorFrom,currentIconColor,replaceProgress);\n    icon[0].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n    crossPaint.setColor(color);\n  }\n  icon[0].setAlpha(255);\n  if (iconBitmap == null) {\n    iconBitmap=Bitmap.createBitmap(AndroidUtilities.dp(32),AndroidUtilities.dp(32),Bitmap.Config.ARGB_8888);\n    iconCanvas=new Canvas(iconBitmap);\n  }\n else {\n    iconBitmap.eraseColor(Color.TRANSPARENT);\n  }\n  float x=iconBitmap.getWidth() >> 1;\n  float y=iconBitmap.getHeight() >> 1;\n  if (replaceProgress != 0 && iconChangeColor) {\n    int color=ColorUtils.blendARGB(replaceColorFrom,currentIconColor,replaceProgress);\n    icon[0].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n    crossPaint.setColor(color);\n  }\n  icon[0].setAlpha(255);\n  if (drawCross && crossProgress < 1f) {\n    crossProgress+=0.08f;\n    if (crossProgress > 1f) {\n      crossProgress=1f;\n    }\n else {\n      invalidate();\n    }\n  }\n else   if (!drawCross) {\n    crossProgress-=0.08f;\n    if (crossProgress < 0) {\n      crossProgress=0;\n    }\n else {\n      invalidate();\n    }\n  }\n  if (crossProgress > 0) {\n    int left=(int)(x - icon[0].getIntrinsicWidth() / 2f);\n    int top=(int)(x - icon[0].getIntrinsicHeight() / 2);\n    float startX=left + AndroidUtilities.dpf2(8) + crossOffset;\n    float startY=top + AndroidUtilities.dpf2(8);\n    float endX=startX - AndroidUtilities.dp(1) + AndroidUtilities.dp(17) * CubicBezierInterpolator.DEFAULT.getInterpolation(crossProgress);\n    float endY=startY + AndroidUtilities.dp(17) * CubicBezierInterpolator.DEFAULT.getInterpolation(crossProgress);\n    icon[0].setBounds((int)(x - icon[0].getIntrinsicWidth() / 2f),(int)(y - icon[0].getIntrinsicHeight() / 2),(int)(x + icon[0].getIntrinsicWidth() / 2),(int)(y + icon[0].getIntrinsicHeight() / 2));\n    icon[0].draw(iconCanvas);\n    iconCanvas.drawLine(startX,startY - AndroidUtilities.dp(2f),endX,endY - AndroidUtilities.dp(2f),xRefPaint);\n    iconCanvas.drawLine(startX,startY,endX,endY,crossPaint);\n    canvas.drawBitmap(iconBitmap,cx - x,cy - y,bitmapPaint);\n  }\n else {\n    icon[0].setBounds((int)(cx - icon[0].getIntrinsicWidth() / 2f),(int)(cy - icon[0].getIntrinsicHeight() / 2),(int)(cx + icon[0].getIntrinsicWidth() / 2),(int)(cy + icon[0].getIntrinsicHeight() / 2));\n    icon[0].draw(canvas);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 447,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4538,
        "startLineNumber" : 114,
        "startColumnNumber" : 8,
        "endLineNumber" : 203,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (drawCross || crossProgress != 0) {\n  if (iconChangeColor) {\n    int color=ColorUtils.blendARGB(replaceColorFrom,currentIconColor,replaceProgress);\n    icon[0].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n    crossPaint.setColor(color);\n  }\n  icon[0].setAlpha(255);\n  if (iconBitmap == null) {\n    iconBitmap=Bitmap.createBitmap(AndroidUtilities.dp(32),AndroidUtilities.dp(32),Bitmap.Config.ARGB_8888);\n    iconCanvas=new Canvas(iconBitmap);\n  }\n else {\n    iconBitmap.eraseColor(Color.TRANSPARENT);\n  }\n  float x=iconBitmap.getWidth() >> 1;\n  float y=iconBitmap.getHeight() >> 1;\n  if (replaceProgress != 0 && iconChangeColor) {\n    int color=ColorUtils.blendARGB(replaceColorFrom,currentIconColor,replaceProgress);\n    icon[0].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n    crossPaint.setColor(color);\n  }\n  icon[0].setAlpha(255);\n  if (drawCross && crossProgress < 1f) {\n    crossProgress+=0.08f;\n    if (crossProgress > 1f) {\n      crossProgress=1f;\n    }\n else {\n      invalidate();\n    }\n  }\n else   if (!drawCross) {\n    crossProgress-=0.08f;\n    if (crossProgress < 0) {\n      crossProgress=0;\n    }\n else {\n      invalidate();\n    }\n  }\n  if (crossProgress > 0) {\n    int left=(int)(x - icon[0].getIntrinsicWidth() / 2f);\n    int top=(int)(x - icon[0].getIntrinsicHeight() / 2);\n    float startX=left + AndroidUtilities.dpf2(8) + crossOffset;\n    float startY=top + AndroidUtilities.dpf2(8);\n    float endX=startX - AndroidUtilities.dp(1) + AndroidUtilities.dp(17) * CubicBezierInterpolator.DEFAULT.getInterpolation(crossProgress);\n    float endY=startY + AndroidUtilities.dp(17) * CubicBezierInterpolator.DEFAULT.getInterpolation(crossProgress);\n    icon[0].setBounds((int)(x - icon[0].getIntrinsicWidth() / 2f),(int)(y - icon[0].getIntrinsicHeight() / 2),(int)(x + icon[0].getIntrinsicWidth() / 2),(int)(y + icon[0].getIntrinsicHeight() / 2));\n    icon[0].draw(iconCanvas);\n    iconCanvas.drawLine(startX,startY - AndroidUtilities.dp(2f),endX,endY - AndroidUtilities.dp(2f),xRefPaint);\n    iconCanvas.drawLine(startX,startY,endX,endY,crossPaint);\n    canvas.drawBitmap(iconBitmap,cx - x,cy - y,bitmapPaint);\n  }\n else {\n    icon[0].setBounds((int)(cx - icon[0].getIntrinsicWidth() / 2f),(int)(cy - icon[0].getIntrinsicHeight() / 2),(int)(cx + icon[0].getIntrinsicWidth() / 2),(int)(cy + icon[0].getIntrinsicHeight() / 2));\n    icon[0].draw(canvas);\n  }\n}\n else {\n  for (int i=0; i < ((replaceProgress == 0 || iconChangeColor) ? 1 : 2); i++) {\n    if (icon[i] != null) {\n      canvas.save();\n      if (replaceProgress != 0 && !iconChangeColor) {\n        float p=i == 0 ? 1f - replaceProgress : replaceProgress;\n        canvas.scale(p,p,cx,cy);\n        icon[i].setAlpha((int)(255 * p));\n      }\n else {\n        if (iconChangeColor) {\n          int color=ColorUtils.blendARGB(replaceColorFrom,currentIconColor,replaceProgress);\n          icon[i].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n          crossPaint.setColor(color);\n        }\n        icon[i].setAlpha(255);\n      }\n      icon[i].setBounds((int)(cx - icon[i].getIntrinsicWidth() / 2f),(int)(cy - icon[i].getIntrinsicHeight() / 2),(int)(cx + icon[i].getIntrinsicWidth() / 2),(int)(cy + icon[i].getIntrinsicHeight() / 2));\n      icon[i].draw(canvas);\n      canvas.restore();\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 632,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5157,
        "startLineNumber" : 100,
        "startColumnNumber" : 41,
        "endLineNumber" : 204,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (replaceProgress != 0) {\n    circlePaint.setColor(ColorUtils.blendARGB(backgroundColor,animateToBackgroundColor,replaceProgress));\n  }\n else {\n    circlePaint.setColor(backgroundColor);\n  }\n  float cx=getWidth() / 2f;\n  float cy=AndroidUtilities.dp(52) / 2f;\n  float radius=AndroidUtilities.dp(52) / 2f;\n  canvas.drawCircle(cx,cy,AndroidUtilities.dp(52) / 2f,circlePaint);\n  rippleDrawable.setBounds((int)(cx - radius),(int)(cy - radius),(int)(cx + radius),(int)(cy + radius));\n  rippleDrawable.draw(canvas);\n  if (drawCross || crossProgress != 0) {\n    if (iconChangeColor) {\n      int color=ColorUtils.blendARGB(replaceColorFrom,currentIconColor,replaceProgress);\n      icon[0].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      crossPaint.setColor(color);\n    }\n    icon[0].setAlpha(255);\n    if (iconBitmap == null) {\n      iconBitmap=Bitmap.createBitmap(AndroidUtilities.dp(32),AndroidUtilities.dp(32),Bitmap.Config.ARGB_8888);\n      iconCanvas=new Canvas(iconBitmap);\n    }\n else {\n      iconBitmap.eraseColor(Color.TRANSPARENT);\n    }\n    float x=iconBitmap.getWidth() >> 1;\n    float y=iconBitmap.getHeight() >> 1;\n    if (replaceProgress != 0 && iconChangeColor) {\n      int color=ColorUtils.blendARGB(replaceColorFrom,currentIconColor,replaceProgress);\n      icon[0].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      crossPaint.setColor(color);\n    }\n    icon[0].setAlpha(255);\n    if (drawCross && crossProgress < 1f) {\n      crossProgress+=0.08f;\n      if (crossProgress > 1f) {\n        crossProgress=1f;\n      }\n else {\n        invalidate();\n      }\n    }\n else     if (!drawCross) {\n      crossProgress-=0.08f;\n      if (crossProgress < 0) {\n        crossProgress=0;\n      }\n else {\n        invalidate();\n      }\n    }\n    if (crossProgress > 0) {\n      int left=(int)(x - icon[0].getIntrinsicWidth() / 2f);\n      int top=(int)(x - icon[0].getIntrinsicHeight() / 2);\n      float startX=left + AndroidUtilities.dpf2(8) + crossOffset;\n      float startY=top + AndroidUtilities.dpf2(8);\n      float endX=startX - AndroidUtilities.dp(1) + AndroidUtilities.dp(17) * CubicBezierInterpolator.DEFAULT.getInterpolation(crossProgress);\n      float endY=startY + AndroidUtilities.dp(17) * CubicBezierInterpolator.DEFAULT.getInterpolation(crossProgress);\n      icon[0].setBounds((int)(x - icon[0].getIntrinsicWidth() / 2f),(int)(y - icon[0].getIntrinsicHeight() / 2),(int)(x + icon[0].getIntrinsicWidth() / 2),(int)(y + icon[0].getIntrinsicHeight() / 2));\n      icon[0].draw(iconCanvas);\n      iconCanvas.drawLine(startX,startY - AndroidUtilities.dp(2f),endX,endY - AndroidUtilities.dp(2f),xRefPaint);\n      iconCanvas.drawLine(startX,startY,endX,endY,crossPaint);\n      canvas.drawBitmap(iconBitmap,cx - x,cy - y,bitmapPaint);\n    }\n else {\n      icon[0].setBounds((int)(cx - icon[0].getIntrinsicWidth() / 2f),(int)(cy - icon[0].getIntrinsicHeight() / 2),(int)(cx + icon[0].getIntrinsicWidth() / 2),(int)(cy + icon[0].getIntrinsicHeight() / 2));\n      icon[0].draw(canvas);\n    }\n  }\n else {\n    for (int i=0; i < ((replaceProgress == 0 || iconChangeColor) ? 1 : 2); i++) {\n      if (icon[i] != null) {\n        canvas.save();\n        if (replaceProgress != 0 && !iconChangeColor) {\n          float p=i == 0 ? 1f - replaceProgress : replaceProgress;\n          canvas.scale(p,p,cx,cy);\n          icon[i].setAlpha((int)(255 * p));\n        }\n else {\n          if (iconChangeColor) {\n            int color=ColorUtils.blendARGB(replaceColorFrom,currentIconColor,replaceProgress);\n            icon[i].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            crossPaint.setColor(color);\n          }\n          icon[i].setAlpha(255);\n        }\n        icon[i].setBounds((int)(cx - icon[i].getIntrinsicWidth() / 2f),(int)(cy - icon[i].getIntrinsicHeight() / 2),(int)(cx + icon[i].getIntrinsicWidth() / 2),(int)(cy + icon[i].getIntrinsicHeight() / 2));\n        icon[i].draw(canvas);\n        canvas.restore();\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 728,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5244,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 204,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressLint(\"DrawAllocation\") @Override protected void onDraw(Canvas canvas){\n  if (replaceProgress != 0) {\n    circlePaint.setColor(ColorUtils.blendARGB(backgroundColor,animateToBackgroundColor,replaceProgress));\n  }\n else {\n    circlePaint.setColor(backgroundColor);\n  }\n  float cx=getWidth() / 2f;\n  float cy=AndroidUtilities.dp(52) / 2f;\n  float radius=AndroidUtilities.dp(52) / 2f;\n  canvas.drawCircle(cx,cy,AndroidUtilities.dp(52) / 2f,circlePaint);\n  rippleDrawable.setBounds((int)(cx - radius),(int)(cy - radius),(int)(cx + radius),(int)(cy + radius));\n  rippleDrawable.draw(canvas);\n  if (drawCross || crossProgress != 0) {\n    if (iconChangeColor) {\n      int color=ColorUtils.blendARGB(replaceColorFrom,currentIconColor,replaceProgress);\n      icon[0].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      crossPaint.setColor(color);\n    }\n    icon[0].setAlpha(255);\n    if (iconBitmap == null) {\n      iconBitmap=Bitmap.createBitmap(AndroidUtilities.dp(32),AndroidUtilities.dp(32),Bitmap.Config.ARGB_8888);\n      iconCanvas=new Canvas(iconBitmap);\n    }\n else {\n      iconBitmap.eraseColor(Color.TRANSPARENT);\n    }\n    float x=iconBitmap.getWidth() >> 1;\n    float y=iconBitmap.getHeight() >> 1;\n    if (replaceProgress != 0 && iconChangeColor) {\n      int color=ColorUtils.blendARGB(replaceColorFrom,currentIconColor,replaceProgress);\n      icon[0].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n      crossPaint.setColor(color);\n    }\n    icon[0].setAlpha(255);\n    if (drawCross && crossProgress < 1f) {\n      crossProgress+=0.08f;\n      if (crossProgress > 1f) {\n        crossProgress=1f;\n      }\n else {\n        invalidate();\n      }\n    }\n else     if (!drawCross) {\n      crossProgress-=0.08f;\n      if (crossProgress < 0) {\n        crossProgress=0;\n      }\n else {\n        invalidate();\n      }\n    }\n    if (crossProgress > 0) {\n      int left=(int)(x - icon[0].getIntrinsicWidth() / 2f);\n      int top=(int)(x - icon[0].getIntrinsicHeight() / 2);\n      float startX=left + AndroidUtilities.dpf2(8) + crossOffset;\n      float startY=top + AndroidUtilities.dpf2(8);\n      float endX=startX - AndroidUtilities.dp(1) + AndroidUtilities.dp(17) * CubicBezierInterpolator.DEFAULT.getInterpolation(crossProgress);\n      float endY=startY + AndroidUtilities.dp(17) * CubicBezierInterpolator.DEFAULT.getInterpolation(crossProgress);\n      icon[0].setBounds((int)(x - icon[0].getIntrinsicWidth() / 2f),(int)(y - icon[0].getIntrinsicHeight() / 2),(int)(x + icon[0].getIntrinsicWidth() / 2),(int)(y + icon[0].getIntrinsicHeight() / 2));\n      icon[0].draw(iconCanvas);\n      iconCanvas.drawLine(startX,startY - AndroidUtilities.dp(2f),endX,endY - AndroidUtilities.dp(2f),xRefPaint);\n      iconCanvas.drawLine(startX,startY,endX,endY,crossPaint);\n      canvas.drawBitmap(iconBitmap,cx - x,cy - y,bitmapPaint);\n    }\n else {\n      icon[0].setBounds((int)(cx - icon[0].getIntrinsicWidth() / 2f),(int)(cy - icon[0].getIntrinsicHeight() / 2),(int)(cx + icon[0].getIntrinsicWidth() / 2),(int)(cy + icon[0].getIntrinsicHeight() / 2));\n      icon[0].draw(canvas);\n    }\n  }\n else {\n    for (int i=0; i < ((replaceProgress == 0 || iconChangeColor) ? 1 : 2); i++) {\n      if (icon[i] != null) {\n        canvas.save();\n        if (replaceProgress != 0 && !iconChangeColor) {\n          float p=i == 0 ? 1f - replaceProgress : replaceProgress;\n          canvas.scale(p,p,cx,cy);\n          icon[i].setAlpha((int)(255 * p));\n        }\n else {\n          if (iconChangeColor) {\n            int color=ColorUtils.blendARGB(replaceColorFrom,currentIconColor,replaceProgress);\n            icon[i].setColorFilter(new PorterDuffColorFilter(color,PorterDuff.Mode.MULTIPLY));\n            crossPaint.setColor(color);\n          }\n          icon[i].setAlpha(255);\n        }\n        icon[i].setBounds((int)(cx - icon[i].getIntrinsicWidth() / 2f),(int)(cy - icon[i].getIntrinsicHeight() / 2),(int)(cx + icon[i].getIntrinsicWidth() / 2),(int)(cy + icon[i].getIntrinsicHeight() / 2));\n        icon[i].draw(canvas);\n        canvas.restore();\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 741,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 157,
        "startColumnNumber" : 16,
        "endLineNumber" : 157,
        "endColumnNumber" : 62
      },
      "nodeContext" : "float startY=top + AndroidUtilities.dpf2(8);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 30,
    "startLineNumber" : 157,
    "startColumnNumber" : 31,
    "endLineNumber" : 157,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ ]
}