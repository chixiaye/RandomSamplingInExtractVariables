{
  "id" : 407,
  "expression" : "AsyncSubject",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-core/src/main/java/com/netflix/eureka2/registry/SourcedEurekaRegistryImpl.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "AsyncSubject",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 161,
      "startColumnNumber" : 45,
      "endLineNumber" : 161,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 161,
        "startColumnNumber" : 45,
        "endLineNumber" : 161,
        "endColumnNumber" : 66
      },
      "nodeContext" : "AsyncSubject.create()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 161,
        "startColumnNumber" : 36,
        "endLineNumber" : 161,
        "endColumnNumber" : 66
      },
      "nodeContext" : "result=AsyncSubject.create()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 161,
        "startColumnNumber" : 8,
        "endLineNumber" : 161,
        "endColumnNumber" : 67
      },
      "nodeContext" : "final AsyncSubject<Boolean> result=AsyncSubject.create();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1052,
        "startLineNumber" : 160,
        "startColumnNumber" : 113,
        "endLineNumber" : 187,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final AsyncSubject<Boolean> result=AsyncSubject.create();\n  status.subscribe(new Subscriber<MultiSourcedDataHolder.Status>(){\n    @Override public void onCompleted(){\n      result.onCompleted();\n    }\n    @Override public void onError(    Throwable e){\n      logger.error(\"Registry update failure\",e);\n      result.onError(e);\n      e.printStackTrace();\n    }\n    @Override public void onNext(    MultiSourcedDataHolder.Status status){\n      logger.debug(\"Registry updated completed with status {}\",status);\n      if (status.equals(MultiSourcedDataHolder.Status.AddedFirst) || status.equals(MultiSourcedDataHolder.Status.RemovedLast)) {\n        result.onNext(true);\n      }\n else {\n        result.onNext(false);\n      }\n    }\n  }\n);\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1249,
        "startLineNumber" : 157,
        "startColumnNumber" : 4,
        "endLineNumber" : 187,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * TODO: do we have to eagerly subscribe? This code is inefficient.\n */\nprivate static Observable<Boolean> subscribeToUpdateResult(Observable<MultiSourcedDataHolder.Status> status){\n  final AsyncSubject<Boolean> result=AsyncSubject.create();\n  status.subscribe(new Subscriber<MultiSourcedDataHolder.Status>(){\n    @Override public void onCompleted(){\n      result.onCompleted();\n    }\n    @Override public void onError(    Throwable e){\n      logger.error(\"Registry update failure\",e);\n      result.onError(e);\n      e.printStackTrace();\n    }\n    @Override public void onNext(    MultiSourcedDataHolder.Status status){\n      logger.debug(\"Registry updated completed with status {}\",status);\n      if (status.equals(MultiSourcedDataHolder.Status.AddedFirst) || status.equals(MultiSourcedDataHolder.Status.RemovedLast)) {\n        result.onNext(true);\n      }\n else {\n        result.onNext(false);\n      }\n    }\n  }\n);\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 133,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 161,
        "startColumnNumber" : 8,
        "endLineNumber" : 161,
        "endColumnNumber" : 67
      },
      "nodeContext" : "final AsyncSubject<Boolean> result=AsyncSubject.create();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 161,
    "startColumnNumber" : 45,
    "endLineNumber" : 161,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ ]
}