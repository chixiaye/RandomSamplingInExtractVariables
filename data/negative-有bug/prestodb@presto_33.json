{
  "id" : 33,
  "expression" : "properties.isLegacyTimestamp()",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-main/src/main/java/com/facebook/presto/operator/scalar/DateTimeFunctions.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "properties.isLegacyTimestamp()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 115,
      "startColumnNumber" : 13,
      "endLineNumber" : 115,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 115,
        "startColumnNumber" : 12,
        "endLineNumber" : 115,
        "endColumnNumber" : 43
      },
      "nodeContext" : "!properties.isLegacyTimestamp()",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 474,
        "startLineNumber" : 115,
        "startColumnNumber" : 8,
        "endLineNumber" : 121,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!properties.isLegacyTimestamp()) {\n  millis-=valueToSessionTimeZoneOffsetDiff(properties.getSessionStartTime(),getDateTimeZone(properties.getTimeZoneKey()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1124,
        "startLineNumber" : 110,
        "startColumnNumber" : 4,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long millis=UTC_CHRONOLOGY.millisOfDay().get(properties.getSessionStartTime());\n  if (!properties.isLegacyTimestamp()) {\n    millis-=valueToSessionTimeZoneOffsetDiff(properties.getSessionStartTime(),getDateTimeZone(properties.getTimeZoneKey()));\n  }\n  try {\n    return packDateTimeWithZone(millis,properties.getTimeZoneKey());\n  }\n catch (  NotSupportedException|TimeZoneNotSupportedException e) {\n    throw new PrestoException(NOT_SUPPORTED,e.getMessage(),e);\n  }\ncatch (  IllegalArgumentException e) {\n    throw new PrestoException(INVALID_FUNCTION_ARGUMENT,e.getMessage(),e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1309,
        "startLineNumber" : 106,
        "startColumnNumber" : 4,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Description(\"current time with time zone\") @ScalarFunction @SqlType(StandardTypes.TIME_WITH_TIME_ZONE) public static long currentTime(SqlFunctionProperties properties){\n  long millis=UTC_CHRONOLOGY.millisOfDay().get(properties.getSessionStartTime());\n  if (!properties.isLegacyTimestamp()) {\n    millis-=valueToSessionTimeZoneOffsetDiff(properties.getSessionStartTime(),getDateTimeZone(properties.getTimeZoneKey()));\n  }\n  try {\n    return packDateTimeWithZone(millis,properties.getTimeZoneKey());\n  }\n catch (  NotSupportedException|TimeZoneNotSupportedException e) {\n    throw new PrestoException(NOT_SUPPORTED,e.getMessage(),e);\n  }\ncatch (  IllegalArgumentException e) {\n    throw new PrestoException(INVALID_FUNCTION_ARGUMENT,e.getMessage(),e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 93,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 115,
        "startColumnNumber" : 12,
        "endLineNumber" : 115,
        "endColumnNumber" : 43
      },
      "nodeContext" : "!properties.isLegacyTimestamp()",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 30,
    "startLineNumber" : 115,
    "startColumnNumber" : 13,
    "endLineNumber" : 115,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ ]
}