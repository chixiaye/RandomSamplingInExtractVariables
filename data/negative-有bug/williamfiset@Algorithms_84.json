{
  "id" : 84,
  "expression" : "8",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/graphtheory/Boruvkas.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "8",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 189,
      "startColumnNumber" : 25,
      "endLineNumber" : 189,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 189,
        "startColumnNumber" : 13,
        "endLineNumber" : 189,
        "endColumnNumber" : 30
      },
      "nodeContext" : "new Edge(2,8,1)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 189,
        "startColumnNumber" : 4,
        "endLineNumber" : 189,
        "endColumnNumber" : 30
      },
      "nodeContext" : "g[i++]=new Edge(2,8,1)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 189,
        "startColumnNumber" : 4,
        "endLineNumber" : 189,
        "endColumnNumber" : 31
      },
      "nodeContext" : "g[i++]=new Edge(2,8,1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1023,
        "startLineNumber" : 177,
        "startColumnNumber" : 41,
        "endLineNumber" : 216,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int n=10, m=18, i=0;\n  Edge[] g=new Edge[m];\n  g[i++]=new Edge(0,1,5);\n  g[i++]=new Edge(0,3,4);\n  g[i++]=new Edge(0,4,1);\n  g[i++]=new Edge(1,2,4);\n  g[i++]=new Edge(1,3,2);\n  g[i++]=new Edge(2,7,4);\n  g[i++]=new Edge(2,8,1);\n  g[i++]=new Edge(2,9,2);\n  g[i++]=new Edge(3,6,11);\n  g[i++]=new Edge(3,7,2);\n  g[i++]=new Edge(4,3,2);\n  g[i++]=new Edge(4,5,1);\n  g[i++]=new Edge(5,3,5);\n  g[i++]=new Edge(5,6,7);\n  g[i++]=new Edge(6,7,1);\n  g[i++]=new Edge(6,8,4);\n  g[i++]=new Edge(7,8,6);\n  g[i++]=new Edge(9,8,0);\n  Boruvkas solver=new Boruvkas(n,m,g);\n  Long ans=solver.getMstCost();\n  if (ans != null) {\n    System.out.println(\"MST cost: \" + ans);\n    for (    Edge e : solver.getMst()) {\n      System.out.println(e);\n    }\n  }\n else {\n    System.out.println(\"No MST exists\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 298,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1062,
        "startLineNumber" : 177,
        "startColumnNumber" : 2,
        "endLineNumber" : 216,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static void main(String[] args){\n  int n=10, m=18, i=0;\n  Edge[] g=new Edge[m];\n  g[i++]=new Edge(0,1,5);\n  g[i++]=new Edge(0,3,4);\n  g[i++]=new Edge(0,4,1);\n  g[i++]=new Edge(1,2,4);\n  g[i++]=new Edge(1,3,2);\n  g[i++]=new Edge(2,7,4);\n  g[i++]=new Edge(2,8,1);\n  g[i++]=new Edge(2,9,2);\n  g[i++]=new Edge(3,6,11);\n  g[i++]=new Edge(3,7,2);\n  g[i++]=new Edge(4,3,2);\n  g[i++]=new Edge(4,5,1);\n  g[i++]=new Edge(5,3,5);\n  g[i++]=new Edge(5,6,7);\n  g[i++]=new Edge(6,7,1);\n  g[i++]=new Edge(6,8,4);\n  g[i++]=new Edge(7,8,6);\n  g[i++]=new Edge(9,8,0);\n  Boruvkas solver=new Boruvkas(n,m,g);\n  Long ans=solver.getMstCost();\n  if (ans != null) {\n    System.out.println(\"MST cost: \" + ans);\n    for (    Edge e : solver.getMst()) {\n      System.out.println(e);\n    }\n  }\n else {\n    System.out.println(\"No MST exists\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 309,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 189,
        "startColumnNumber" : 4,
        "endLineNumber" : 189,
        "endColumnNumber" : 31
      },
      "nodeContext" : "g[i++]=new Edge(2,8,1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "8",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 198,
      "startColumnNumber" : 25,
      "endLineNumber" : 198,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 198,
        "startColumnNumber" : 13,
        "endLineNumber" : 198,
        "endColumnNumber" : 30
      },
      "nodeContext" : "new Edge(6,8,4)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 198,
        "startColumnNumber" : 4,
        "endLineNumber" : 198,
        "endColumnNumber" : 30
      },
      "nodeContext" : "g[i++]=new Edge(6,8,4)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 198,
        "startColumnNumber" : 4,
        "endLineNumber" : 198,
        "endColumnNumber" : 31
      },
      "nodeContext" : "g[i++]=new Edge(6,8,4);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1023,
        "startLineNumber" : 177,
        "startColumnNumber" : 41,
        "endLineNumber" : 216,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int n=10, m=18, i=0;\n  Edge[] g=new Edge[m];\n  g[i++]=new Edge(0,1,5);\n  g[i++]=new Edge(0,3,4);\n  g[i++]=new Edge(0,4,1);\n  g[i++]=new Edge(1,2,4);\n  g[i++]=new Edge(1,3,2);\n  g[i++]=new Edge(2,7,4);\n  g[i++]=new Edge(2,8,1);\n  g[i++]=new Edge(2,9,2);\n  g[i++]=new Edge(3,6,11);\n  g[i++]=new Edge(3,7,2);\n  g[i++]=new Edge(4,3,2);\n  g[i++]=new Edge(4,5,1);\n  g[i++]=new Edge(5,3,5);\n  g[i++]=new Edge(5,6,7);\n  g[i++]=new Edge(6,7,1);\n  g[i++]=new Edge(6,8,4);\n  g[i++]=new Edge(7,8,6);\n  g[i++]=new Edge(9,8,0);\n  Boruvkas solver=new Boruvkas(n,m,g);\n  Long ans=solver.getMstCost();\n  if (ans != null) {\n    System.out.println(\"MST cost: \" + ans);\n    for (    Edge e : solver.getMst()) {\n      System.out.println(e);\n    }\n  }\n else {\n    System.out.println(\"No MST exists\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 298,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1062,
        "startLineNumber" : 177,
        "startColumnNumber" : 2,
        "endLineNumber" : 216,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static void main(String[] args){\n  int n=10, m=18, i=0;\n  Edge[] g=new Edge[m];\n  g[i++]=new Edge(0,1,5);\n  g[i++]=new Edge(0,3,4);\n  g[i++]=new Edge(0,4,1);\n  g[i++]=new Edge(1,2,4);\n  g[i++]=new Edge(1,3,2);\n  g[i++]=new Edge(2,7,4);\n  g[i++]=new Edge(2,8,1);\n  g[i++]=new Edge(2,9,2);\n  g[i++]=new Edge(3,6,11);\n  g[i++]=new Edge(3,7,2);\n  g[i++]=new Edge(4,3,2);\n  g[i++]=new Edge(4,5,1);\n  g[i++]=new Edge(5,3,5);\n  g[i++]=new Edge(5,6,7);\n  g[i++]=new Edge(6,7,1);\n  g[i++]=new Edge(6,8,4);\n  g[i++]=new Edge(7,8,6);\n  g[i++]=new Edge(9,8,0);\n  Boruvkas solver=new Boruvkas(n,m,g);\n  Long ans=solver.getMstCost();\n  if (ans != null) {\n    System.out.println(\"MST cost: \" + ans);\n    for (    Edge e : solver.getMst()) {\n      System.out.println(e);\n    }\n  }\n else {\n    System.out.println(\"No MST exists\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 309,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 198,
        "startColumnNumber" : 4,
        "endLineNumber" : 198,
        "endColumnNumber" : 31
      },
      "nodeContext" : "g[i++]=new Edge(6,8,4);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "8",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 199,
      "startColumnNumber" : 25,
      "endLineNumber" : 199,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 199,
        "startColumnNumber" : 13,
        "endLineNumber" : 199,
        "endColumnNumber" : 30
      },
      "nodeContext" : "new Edge(7,8,6)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 199,
        "startColumnNumber" : 4,
        "endLineNumber" : 199,
        "endColumnNumber" : 30
      },
      "nodeContext" : "g[i++]=new Edge(7,8,6)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 199,
        "startColumnNumber" : 4,
        "endLineNumber" : 199,
        "endColumnNumber" : 31
      },
      "nodeContext" : "g[i++]=new Edge(7,8,6);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1023,
        "startLineNumber" : 177,
        "startColumnNumber" : 41,
        "endLineNumber" : 216,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int n=10, m=18, i=0;\n  Edge[] g=new Edge[m];\n  g[i++]=new Edge(0,1,5);\n  g[i++]=new Edge(0,3,4);\n  g[i++]=new Edge(0,4,1);\n  g[i++]=new Edge(1,2,4);\n  g[i++]=new Edge(1,3,2);\n  g[i++]=new Edge(2,7,4);\n  g[i++]=new Edge(2,8,1);\n  g[i++]=new Edge(2,9,2);\n  g[i++]=new Edge(3,6,11);\n  g[i++]=new Edge(3,7,2);\n  g[i++]=new Edge(4,3,2);\n  g[i++]=new Edge(4,5,1);\n  g[i++]=new Edge(5,3,5);\n  g[i++]=new Edge(5,6,7);\n  g[i++]=new Edge(6,7,1);\n  g[i++]=new Edge(6,8,4);\n  g[i++]=new Edge(7,8,6);\n  g[i++]=new Edge(9,8,0);\n  Boruvkas solver=new Boruvkas(n,m,g);\n  Long ans=solver.getMstCost();\n  if (ans != null) {\n    System.out.println(\"MST cost: \" + ans);\n    for (    Edge e : solver.getMst()) {\n      System.out.println(e);\n    }\n  }\n else {\n    System.out.println(\"No MST exists\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 298,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1062,
        "startLineNumber" : 177,
        "startColumnNumber" : 2,
        "endLineNumber" : 216,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static void main(String[] args){\n  int n=10, m=18, i=0;\n  Edge[] g=new Edge[m];\n  g[i++]=new Edge(0,1,5);\n  g[i++]=new Edge(0,3,4);\n  g[i++]=new Edge(0,4,1);\n  g[i++]=new Edge(1,2,4);\n  g[i++]=new Edge(1,3,2);\n  g[i++]=new Edge(2,7,4);\n  g[i++]=new Edge(2,8,1);\n  g[i++]=new Edge(2,9,2);\n  g[i++]=new Edge(3,6,11);\n  g[i++]=new Edge(3,7,2);\n  g[i++]=new Edge(4,3,2);\n  g[i++]=new Edge(4,5,1);\n  g[i++]=new Edge(5,3,5);\n  g[i++]=new Edge(5,6,7);\n  g[i++]=new Edge(6,7,1);\n  g[i++]=new Edge(6,8,4);\n  g[i++]=new Edge(7,8,6);\n  g[i++]=new Edge(9,8,0);\n  Boruvkas solver=new Boruvkas(n,m,g);\n  Long ans=solver.getMstCost();\n  if (ans != null) {\n    System.out.println(\"MST cost: \" + ans);\n    for (    Edge e : solver.getMst()) {\n      System.out.println(e);\n    }\n  }\n else {\n    System.out.println(\"No MST exists\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 309,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 199,
        "startColumnNumber" : 4,
        "endLineNumber" : 199,
        "endColumnNumber" : 31
      },
      "nodeContext" : "g[i++]=new Edge(7,8,6);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "8",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 200,
      "startColumnNumber" : 25,
      "endLineNumber" : 200,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 200,
        "startColumnNumber" : 13,
        "endLineNumber" : 200,
        "endColumnNumber" : 30
      },
      "nodeContext" : "new Edge(9,8,0)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 200,
        "startColumnNumber" : 4,
        "endLineNumber" : 200,
        "endColumnNumber" : 30
      },
      "nodeContext" : "g[i++]=new Edge(9,8,0)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 200,
        "startColumnNumber" : 4,
        "endLineNumber" : 200,
        "endColumnNumber" : 31
      },
      "nodeContext" : "g[i++]=new Edge(9,8,0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1023,
        "startLineNumber" : 177,
        "startColumnNumber" : 41,
        "endLineNumber" : 216,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int n=10, m=18, i=0;\n  Edge[] g=new Edge[m];\n  g[i++]=new Edge(0,1,5);\n  g[i++]=new Edge(0,3,4);\n  g[i++]=new Edge(0,4,1);\n  g[i++]=new Edge(1,2,4);\n  g[i++]=new Edge(1,3,2);\n  g[i++]=new Edge(2,7,4);\n  g[i++]=new Edge(2,8,1);\n  g[i++]=new Edge(2,9,2);\n  g[i++]=new Edge(3,6,11);\n  g[i++]=new Edge(3,7,2);\n  g[i++]=new Edge(4,3,2);\n  g[i++]=new Edge(4,5,1);\n  g[i++]=new Edge(5,3,5);\n  g[i++]=new Edge(5,6,7);\n  g[i++]=new Edge(6,7,1);\n  g[i++]=new Edge(6,8,4);\n  g[i++]=new Edge(7,8,6);\n  g[i++]=new Edge(9,8,0);\n  Boruvkas solver=new Boruvkas(n,m,g);\n  Long ans=solver.getMstCost();\n  if (ans != null) {\n    System.out.println(\"MST cost: \" + ans);\n    for (    Edge e : solver.getMst()) {\n      System.out.println(e);\n    }\n  }\n else {\n    System.out.println(\"No MST exists\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 298,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1062,
        "startLineNumber" : 177,
        "startColumnNumber" : 2,
        "endLineNumber" : 216,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static void main(String[] args){\n  int n=10, m=18, i=0;\n  Edge[] g=new Edge[m];\n  g[i++]=new Edge(0,1,5);\n  g[i++]=new Edge(0,3,4);\n  g[i++]=new Edge(0,4,1);\n  g[i++]=new Edge(1,2,4);\n  g[i++]=new Edge(1,3,2);\n  g[i++]=new Edge(2,7,4);\n  g[i++]=new Edge(2,8,1);\n  g[i++]=new Edge(2,9,2);\n  g[i++]=new Edge(3,6,11);\n  g[i++]=new Edge(3,7,2);\n  g[i++]=new Edge(4,3,2);\n  g[i++]=new Edge(4,5,1);\n  g[i++]=new Edge(5,3,5);\n  g[i++]=new Edge(5,6,7);\n  g[i++]=new Edge(6,7,1);\n  g[i++]=new Edge(6,8,4);\n  g[i++]=new Edge(7,8,6);\n  g[i++]=new Edge(9,8,0);\n  Boruvkas solver=new Boruvkas(n,m,g);\n  Long ans=solver.getMstCost();\n  if (ans != null) {\n    System.out.println(\"MST cost: \" + ans);\n    for (    Edge e : solver.getMst()) {\n      System.out.println(e);\n    }\n  }\n else {\n    System.out.println(\"No MST exists\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 309,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 200,
        "startColumnNumber" : 4,
        "endLineNumber" : 200,
        "endColumnNumber" : 31
      },
      "nodeContext" : "g[i++]=new Edge(9,8,0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 189,
    "startColumnNumber" : 25,
    "endLineNumber" : 189,
    "endColumnNumber" : 26
  }, {
    "charLength" : 1,
    "startLineNumber" : 198,
    "startColumnNumber" : 25,
    "endLineNumber" : 198,
    "endColumnNumber" : 26
  }, {
    "charLength" : 1,
    "startLineNumber" : 199,
    "startColumnNumber" : 25,
    "endLineNumber" : 199,
    "endColumnNumber" : 26
  }, {
    "charLength" : 1,
    "startLineNumber" : 200,
    "startColumnNumber" : 25,
    "endLineNumber" : 200,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  } ]
}