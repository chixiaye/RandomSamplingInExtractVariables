{
  "id" : 98,
  "expression" : "jobGraph.isApproximateLocalRecoveryEnabled()",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-runtime/src/main/java/org/apache/flink/runtime/scheduler/DefaultSchedulerFactory.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "jobGraph.isApproximateLocalRecoveryEnabled()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 44,
      "startLineNumber" : 88,
      "startColumnNumber" : 24,
      "endLineNumber" : 88,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 269,
        "startLineNumber" : 86,
        "startColumnNumber" : 16,
        "endLineNumber" : 91,
        "endColumnNumber" : 43
      },
      "nodeContext" : "createSchedulerComponents(jobGraph.getJobType(),jobGraph.isApproximateLocalRecoveryEnabled(),jobMasterConfiguration,slotPool,slotRequestTimeout)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 307,
        "startLineNumber" : 85,
        "startColumnNumber" : 41,
        "endLineNumber" : 91,
        "endColumnNumber" : 43
      },
      "nodeContext" : "schedulerComponents=createSchedulerComponents(jobGraph.getJobType(),jobGraph.isApproximateLocalRecoveryEnabled(),jobMasterConfiguration,slotPool,slotRequestTimeout)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 341,
        "startLineNumber" : 85,
        "startColumnNumber" : 8,
        "endLineNumber" : 91,
        "endColumnNumber" : 44
      },
      "nodeContext" : "final DefaultSchedulerComponents schedulerComponents=createSchedulerComponents(jobGraph.getJobType(),jobGraph.isApproximateLocalRecoveryEnabled(),jobMasterConfiguration,slotPool,slotRequestTimeout);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3359,
        "startLineNumber" : 75,
        "startColumnNumber" : 29,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final SlotPool slotPool=slotPoolService.castInto(SlotPool.class).orElseThrow(() -> new IllegalStateException(\"The DefaultScheduler requires a SlotPool.\"));\n  final DefaultSchedulerComponents schedulerComponents=createSchedulerComponents(jobGraph.getJobType(),jobGraph.isApproximateLocalRecoveryEnabled(),jobMasterConfiguration,slotPool,slotRequestTimeout);\n  final RestartBackoffTimeStrategy restartBackoffTimeStrategy=RestartBackoffTimeStrategyFactoryLoader.createRestartBackoffTimeStrategyFactory(jobGraph.getSerializedExecutionConfig().deserializeValue(userCodeLoader).getRestartStrategy(),jobMasterConfiguration,jobGraph.isCheckpointingEnabled()).create();\n  log.info(\"Using restart back off time strategy {} for {} ({}).\",restartBackoffTimeStrategy,jobGraph.getName(),jobGraph.getJobID());\n  final ExecutionGraphFactory executionGraphFactory=new DefaultExecutionGraphFactory(jobMasterConfiguration,userCodeLoader,executionDeploymentTracker,futureExecutor,ioExecutor,rpcTimeout,jobManagerJobMetricGroup,blobWriter,shuffleMaster,partitionTracker);\n  return new DefaultScheduler(log,jobGraph,ioExecutor,jobMasterConfiguration,schedulerComponents.getStartUpAction(),new ScheduledExecutorServiceAdapter(futureExecutor),userCodeLoader,new CheckpointsCleaner(),checkpointRecoveryFactory,jobManagerJobMetricGroup,schedulerComponents.getSchedulingStrategyFactory(),FailoverStrategyFactoryLoader.loadFailoverStrategyFactory(jobMasterConfiguration),restartBackoffTimeStrategy,new DefaultExecutionVertexOperations(),new ExecutionVertexVersioner(),schedulerComponents.getAllocatorFactory(),initializationTimestamp,mainThreadExecutor,(jobId,jobStatus,timestamp) -> {\n    if (jobStatus == JobStatus.RESTARTING) {\n      slotPool.setIsJobRestarting(true);\n    }\n else {\n      slotPool.setIsJobRestarting(false);\n    }\n    jobStatusListener.jobStatusChanges(jobId,jobStatus,timestamp);\n  }\n,executionGraphFactory,shuffleMaster,rpcTimeout);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 167,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4417,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public SchedulerNG createInstance(final Logger log,final JobGraph jobGraph,final Executor ioExecutor,final Configuration jobMasterConfiguration,final SlotPoolService slotPoolService,final ScheduledExecutorService futureExecutor,final ClassLoader userCodeLoader,final CheckpointRecoveryFactory checkpointRecoveryFactory,final Time rpcTimeout,final BlobWriter blobWriter,final JobManagerJobMetricGroup jobManagerJobMetricGroup,final Time slotRequestTimeout,final ShuffleMaster<?> shuffleMaster,final JobMasterPartitionTracker partitionTracker,final ExecutionDeploymentTracker executionDeploymentTracker,long initializationTimestamp,final ComponentMainThreadExecutor mainThreadExecutor,final FatalErrorHandler fatalErrorHandler,final JobStatusListener jobStatusListener) throws Exception {\n  final SlotPool slotPool=slotPoolService.castInto(SlotPool.class).orElseThrow(() -> new IllegalStateException(\"The DefaultScheduler requires a SlotPool.\"));\n  final DefaultSchedulerComponents schedulerComponents=createSchedulerComponents(jobGraph.getJobType(),jobGraph.isApproximateLocalRecoveryEnabled(),jobMasterConfiguration,slotPool,slotRequestTimeout);\n  final RestartBackoffTimeStrategy restartBackoffTimeStrategy=RestartBackoffTimeStrategyFactoryLoader.createRestartBackoffTimeStrategyFactory(jobGraph.getSerializedExecutionConfig().deserializeValue(userCodeLoader).getRestartStrategy(),jobMasterConfiguration,jobGraph.isCheckpointingEnabled()).create();\n  log.info(\"Using restart back off time strategy {} for {} ({}).\",restartBackoffTimeStrategy,jobGraph.getName(),jobGraph.getJobID());\n  final ExecutionGraphFactory executionGraphFactory=new DefaultExecutionGraphFactory(jobMasterConfiguration,userCodeLoader,executionDeploymentTracker,futureExecutor,ioExecutor,rpcTimeout,jobManagerJobMetricGroup,blobWriter,shuffleMaster,partitionTracker);\n  return new DefaultScheduler(log,jobGraph,ioExecutor,jobMasterConfiguration,schedulerComponents.getStartUpAction(),new ScheduledExecutorServiceAdapter(futureExecutor),userCodeLoader,new CheckpointsCleaner(),checkpointRecoveryFactory,jobManagerJobMetricGroup,schedulerComponents.getSchedulingStrategyFactory(),FailoverStrategyFactoryLoader.loadFailoverStrategyFactory(jobMasterConfiguration),restartBackoffTimeStrategy,new DefaultExecutionVertexOperations(),new ExecutionVertexVersioner(),schedulerComponents.getAllocatorFactory(),initializationTimestamp,mainThreadExecutor,(jobId,jobStatus,timestamp) -> {\n    if (jobStatus == JobStatus.RESTARTING) {\n      slotPool.setIsJobRestarting(true);\n    }\n else {\n      slotPool.setIsJobRestarting(false);\n    }\n    jobStatusListener.jobStatusChanges(jobId,jobStatus,timestamp);\n  }\n,executionGraphFactory,shuffleMaster,rpcTimeout);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 271,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 269,
        "startLineNumber" : 86,
        "startColumnNumber" : 16,
        "endLineNumber" : 91,
        "endColumnNumber" : 43
      },
      "nodeContext" : "createSchedulerComponents(jobGraph.getJobType(),jobGraph.isApproximateLocalRecoveryEnabled(),jobMasterConfiguration,slotPool,slotRequestTimeout)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 44,
    "startLineNumber" : 88,
    "startColumnNumber" : 24,
    "endLineNumber" : 88,
    "endColumnNumber" : 68
  } ],
  "layoutRelationDataList" : [ ]
}