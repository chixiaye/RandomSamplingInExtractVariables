{
  "id" : 453,
  "expression" : "\"Expecting parameter \" + i + \" to be named '\"+ parameterNames[i]+ \"' but was '\"+ discoveredNames[i]+ \"'\"",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-aop/src/test/java/org/springframework/aop/aspectj/AspectJAdviceParameterNameDiscovererTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Expecting parameter \" + i + \" to be named '\"+ parameterNames[i]+ \"' but was '\"+ discoveredNames[i]+ \"'\"",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 113,
      "startLineNumber" : 257,
      "startColumnNumber" : 16,
      "endLineNumber" : 258,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 12,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 171,
        "startLineNumber" : 257,
        "startColumnNumber" : 3,
        "endLineNumber" : 259,
        "endColumnNumber" : 43
      },
      "nodeContext" : "assertEquals(\"Expecting parameter \" + i + \" to be named '\"+ parameterNames[i]+ \"' but was '\"+ discoveredNames[i]+ \"'\",parameterNames[i],discoveredNames[i])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 172,
        "startLineNumber" : 257,
        "startColumnNumber" : 3,
        "endLineNumber" : 259,
        "endColumnNumber" : 44
      },
      "nodeContext" : "assertEquals(\"Expecting parameter \" + i + \" to be named '\"+ parameterNames[i]+ \"' but was '\"+ discoveredNames[i]+ \"'\",parameterNames[i],discoveredNames[i]);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 21,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 257,
        "startLineNumber" : 255,
        "startColumnNumber" : 51,
        "endLineNumber" : 260,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertNotNull(\"Parameter names must never be null\",discoveredNames[i]);\n  assertEquals(\"Expecting parameter \" + i + \" to be named '\"+ parameterNames[i]+ \"' but was '\"+ discoveredNames[i]+ \"'\",parameterNames[i],discoveredNames[i]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 306,
        "startLineNumber" : 255,
        "startColumnNumber" : 2,
        "endLineNumber" : 260,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=0; i < discoveredNames.length; i++) {\n  assertNotNull(\"Parameter names must never be null\",discoveredNames[i]);\n  assertEquals(\"Expecting parameter \" + i + \" to be named '\"+ parameterNames[i]+ \"' but was '\"+ discoveredNames[i]+ \"'\",parameterNames[i],discoveredNames[i]);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1138,
        "startLineNumber" : 236,
        "startColumnNumber" : 95,
        "endLineNumber" : 261,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  assertEquals(\"bad test specification, must have same number of parameter names as method arguments\",method.getParameterCount(),parameterNames.length);\n  AspectJAdviceParameterNameDiscoverer discoverer=new AspectJAdviceParameterNameDiscoverer(pointcut);\n  discoverer.setRaiseExceptions(true);\n  discoverer.setReturningName(returning);\n  discoverer.setThrowingName(throwing);\n  String[] discoveredNames=discoverer.getParameterNames(method);\n  String formattedExpectedNames=format(parameterNames);\n  String formattedActualNames=format(discoveredNames);\n  assertEquals(\"Expecting \" + parameterNames.length + \" parameter names in return set '\"+ formattedExpectedNames+ \"', but found \"+ discoveredNames.length+ \" '\"+ formattedActualNames+ \"'\",parameterNames.length,discoveredNames.length);\n  for (int i=0; i < discoveredNames.length; i++) {\n    assertNotNull(\"Parameter names must never be null\",discoveredNames[i]);\n    assertEquals(\"Expecting parameter \" + i + \" to be named '\"+ parameterNames[i]+ \"' but was '\"+ discoveredNames[i]+ \"'\",parameterNames[i],discoveredNames[i]);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 127,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1270,
        "startLineNumber" : 235,
        "startColumnNumber" : 1,
        "endLineNumber" : 261,
        "endColumnNumber" : 2
      },
      "nodeContext" : "protected void assertParameterNames(Method method,String pointcut,String returning,String throwing,String[] parameterNames){\n  assertEquals(\"bad test specification, must have same number of parameter names as method arguments\",method.getParameterCount(),parameterNames.length);\n  AspectJAdviceParameterNameDiscoverer discoverer=new AspectJAdviceParameterNameDiscoverer(pointcut);\n  discoverer.setRaiseExceptions(true);\n  discoverer.setReturningName(returning);\n  discoverer.setThrowingName(throwing);\n  String[] discoveredNames=discoverer.getParameterNames(method);\n  String formattedExpectedNames=format(parameterNames);\n  String formattedActualNames=format(discoveredNames);\n  assertEquals(\"Expecting \" + parameterNames.length + \" parameter names in return set '\"+ formattedExpectedNames+ \"', but found \"+ discoveredNames.length+ \" '\"+ formattedActualNames+ \"'\",parameterNames.length,discoveredNames.length);\n  for (int i=0; i < discoveredNames.length; i++) {\n    assertNotNull(\"Parameter names must never be null\",discoveredNames[i]);\n    assertEquals(\"Expecting parameter \" + i + \" to be named '\"+ parameterNames[i]+ \"' but was '\"+ discoveredNames[i]+ \"'\",parameterNames[i],discoveredNames[i]);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 153,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 171,
        "startLineNumber" : 257,
        "startColumnNumber" : 3,
        "endLineNumber" : 259,
        "endColumnNumber" : 43
      },
      "nodeContext" : "assertEquals(\"Expecting parameter \" + i + \" to be named '\"+ parameterNames[i]+ \"' but was '\"+ discoveredNames[i]+ \"'\",parameterNames[i],discoveredNames[i])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 4
    },
    "tokenLength" : 18,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 113,
    "startLineNumber" : 257,
    "startColumnNumber" : 16,
    "endLineNumber" : 258,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ ]
}