{
  "id" : 344,
  "expression" : "metricsFactory.builder(\"agroal.awaiting.count\").description(\"Approximate number of threads blocked, waiting to acquire a connection.\").tag(\"datasource\",tagValue)",
  "projectName" : "quarkusio@quarkus",
  "commitID" : "2862b200ee266332150317795b9fe315be51d68b",
  "filePath" : "/extensions/agroal/runtime/src/main/java/io/quarkus/agroal/runtime/metrics/AgroalMetricsRecorder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "metricsFactory.builder(\"agroal.awaiting.count\").description(\"Approximate number of threads blocked, waiting to acquire a connection.\").tag(\"datasource\",tagValue)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 212,
      "startLineNumber" : 50,
      "startColumnNumber" : 16,
      "endLineNumber" : 52,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 11,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 272,
        "startLineNumber" : 50,
        "startColumnNumber" : 16,
        "endLineNumber" : 53,
        "endColumnNumber" : 59
      },
      "nodeContext" : "metricsFactory.builder(\"agroal.awaiting.count\").description(\"Approximate number of threads blocked, waiting to acquire a connection.\").tag(\"datasource\",tagValue).buildGauge(metrics::awaitingCount)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 273,
        "startLineNumber" : 50,
        "startColumnNumber" : 16,
        "endLineNumber" : 53,
        "endColumnNumber" : 60
      },
      "nodeContext" : "metricsFactory.builder(\"agroal.awaiting.count\").description(\"Approximate number of threads blocked, waiting to acquire a connection.\").tag(\"datasource\",tagValue).buildGauge(metrics::awaitingCount);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5385,
        "startLineNumber" : 33,
        "startColumnNumber" : 62,
        "endLineNumber" : 114,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String tagValue=DataSourceUtil.isDefault(dataSourceName) ? \"default\" : dataSourceName;\n  AgroalDataSourceMetrics metrics=getDataSource(dataSourceName).getMetrics();\n  metricsFactory.builder(\"agroal.active.count\").description(\"Number of active connections. These connections are in use and not available to be acquired.\").tag(\"datasource\",tagValue).buildGauge(metrics::activeCount);\n  metricsFactory.builder(\"agroal.available.count\").description(\"Number of idle connections in the pool, available to be acquired.\").tag(\"datasource\",tagValue).buildGauge(metrics::availableCount);\n  metricsFactory.builder(\"agroal.max.used.count\").description(\"Maximum number of connections active simultaneously.\").tag(\"datasource\",tagValue).buildGauge(metrics::maxUsedCount);\n  metricsFactory.builder(\"agroal.awaiting.count\").description(\"Approximate number of threads blocked, waiting to acquire a connection.\").tag(\"datasource\",tagValue).buildGauge(metrics::awaitingCount);\n  metricsFactory.builder(\"agroal.acquire.count\").description(\"Number of times an acquire operation succeeded.\").tag(\"datasource\",tagValue).buildCounter(metrics::acquireCount);\n  metricsFactory.builder(\"agroal.creation.count\").description(\"Number of created connections.\").tag(\"datasource\",tagValue).buildCounter(metrics::creationCount);\n  metricsFactory.builder(\"agroal.leak.detection.count\").description(\"Number of times a leak was detected. A single connection can be detected multiple times.\").tag(\"datasource\",tagValue).buildCounter(metrics::leakDetectionCount);\n  metricsFactory.builder(\"agroal.destroy.count\").description(\"Number of destroyed connections.\").tag(\"datasource\",tagValue).buildCounter(metrics::destroyCount);\n  metricsFactory.builder(\"agroal.flush.count\").description(\"Number of connections removed from the pool, not counting invalid / idle.\").tag(\"datasource\",tagValue).buildCounter(metrics::flushCount);\n  metricsFactory.builder(\"agroal.invalid.count\").description(\"Number of connections removed from the pool for being idle.\").tag(\"datasource\",tagValue).buildCounter(metrics::invalidCount);\n  metricsFactory.builder(\"agroal.reap.count\").description(\"Number of connections removed from the pool for being idle.\").tag(\"datasource\",tagValue).buildCounter(metrics::reapCount);\n  metricsFactory.builder(\"agroal.blocking.time.average\").description(\"Average time an application waited to acquire a connection.\").tag(\"datasource\",tagValue).unit(\"milliseconds\").buildGauge(metrics::blockingTimeAverage,convertToMillis);\n  metricsFactory.builder(\"agroal.blocking.time.max\").description(\"Maximum time an application waited to acquire a connection.\").tag(\"datasource\",tagValue).unit(\"milliseconds\").buildGauge(metrics::blockingTimeMax,convertToMillis);\n  metricsFactory.builder(\"agroal.blocking.time.total\").description(\"Total time applications waited to acquire a connection.\").tag(\"datasource\",tagValue).unit(\"milliseconds\").buildGauge(metrics::blockingTimeTotal,convertToMillis);\n  metricsFactory.builder(\"agroal.creation.time.average\").description(\"Average time for a connection to be created.\").tag(\"datasource\",tagValue).unit(\"milliseconds\").buildGauge(metrics::creationTimeAverage,convertToMillis);\n  metricsFactory.builder(\"agroal.creation.time.max\").description(\"Maximum time for a connection to be created.\").tag(\"datasource\",tagValue).unit(\"milliseconds\").buildGauge(metrics::creationTimeMax,convertToMillis);\n  metricsFactory.builder(\"agroal.creation.time.total\").description(\"Total time waiting for connections to be created.\").tag(\"datasource\",tagValue).unit(\"milliseconds\").buildGauge(metrics::creationTimeTotal,convertToMillis);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 336,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5457,
        "startLineNumber" : 32,
        "startColumnNumber" : 12,
        "endLineNumber" : 114,
        "endColumnNumber" : 13
      },
      "nodeContext" : "@Override public void accept(MetricsFactory metricsFactory){\n  String tagValue=DataSourceUtil.isDefault(dataSourceName) ? \"default\" : dataSourceName;\n  AgroalDataSourceMetrics metrics=getDataSource(dataSourceName).getMetrics();\n  metricsFactory.builder(\"agroal.active.count\").description(\"Number of active connections. These connections are in use and not available to be acquired.\").tag(\"datasource\",tagValue).buildGauge(metrics::activeCount);\n  metricsFactory.builder(\"agroal.available.count\").description(\"Number of idle connections in the pool, available to be acquired.\").tag(\"datasource\",tagValue).buildGauge(metrics::availableCount);\n  metricsFactory.builder(\"agroal.max.used.count\").description(\"Maximum number of connections active simultaneously.\").tag(\"datasource\",tagValue).buildGauge(metrics::maxUsedCount);\n  metricsFactory.builder(\"agroal.awaiting.count\").description(\"Approximate number of threads blocked, waiting to acquire a connection.\").tag(\"datasource\",tagValue).buildGauge(metrics::awaitingCount);\n  metricsFactory.builder(\"agroal.acquire.count\").description(\"Number of times an acquire operation succeeded.\").tag(\"datasource\",tagValue).buildCounter(metrics::acquireCount);\n  metricsFactory.builder(\"agroal.creation.count\").description(\"Number of created connections.\").tag(\"datasource\",tagValue).buildCounter(metrics::creationCount);\n  metricsFactory.builder(\"agroal.leak.detection.count\").description(\"Number of times a leak was detected. A single connection can be detected multiple times.\").tag(\"datasource\",tagValue).buildCounter(metrics::leakDetectionCount);\n  metricsFactory.builder(\"agroal.destroy.count\").description(\"Number of destroyed connections.\").tag(\"datasource\",tagValue).buildCounter(metrics::destroyCount);\n  metricsFactory.builder(\"agroal.flush.count\").description(\"Number of connections removed from the pool, not counting invalid / idle.\").tag(\"datasource\",tagValue).buildCounter(metrics::flushCount);\n  metricsFactory.builder(\"agroal.invalid.count\").description(\"Number of connections removed from the pool for being idle.\").tag(\"datasource\",tagValue).buildCounter(metrics::invalidCount);\n  metricsFactory.builder(\"agroal.reap.count\").description(\"Number of connections removed from the pool for being idle.\").tag(\"datasource\",tagValue).buildCounter(metrics::reapCount);\n  metricsFactory.builder(\"agroal.blocking.time.average\").description(\"Average time an application waited to acquire a connection.\").tag(\"datasource\",tagValue).unit(\"milliseconds\").buildGauge(metrics::blockingTimeAverage,convertToMillis);\n  metricsFactory.builder(\"agroal.blocking.time.max\").description(\"Maximum time an application waited to acquire a connection.\").tag(\"datasource\",tagValue).unit(\"milliseconds\").buildGauge(metrics::blockingTimeMax,convertToMillis);\n  metricsFactory.builder(\"agroal.blocking.time.total\").description(\"Total time applications waited to acquire a connection.\").tag(\"datasource\",tagValue).unit(\"milliseconds\").buildGauge(metrics::blockingTimeTotal,convertToMillis);\n  metricsFactory.builder(\"agroal.creation.time.average\").description(\"Average time for a connection to be created.\").tag(\"datasource\",tagValue).unit(\"milliseconds\").buildGauge(metrics::creationTimeAverage,convertToMillis);\n  metricsFactory.builder(\"agroal.creation.time.max\").description(\"Maximum time for a connection to be created.\").tag(\"datasource\",tagValue).unit(\"milliseconds\").buildGauge(metrics::creationTimeMax,convertToMillis);\n  metricsFactory.builder(\"agroal.creation.time.total\").description(\"Total time waiting for connections to be created.\").tag(\"datasource\",tagValue).unit(\"milliseconds\").buildGauge(metrics::creationTimeTotal,convertToMillis);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 346,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 272,
        "startLineNumber" : 50,
        "startColumnNumber" : 16,
        "endLineNumber" : 53,
        "endColumnNumber" : 59
      },
      "nodeContext" : "metricsFactory.builder(\"agroal.awaiting.count\").description(\"Approximate number of threads blocked, waiting to acquire a connection.\").tag(\"datasource\",tagValue).buildGauge(metrics::awaitingCount)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 19,
    "type" : "io.quarkus.runtime.metrics.MetricsFactory.MetricBuilder"
  } ],
  "positionList" : [ {
    "charLength" : 212,
    "startLineNumber" : 50,
    "startColumnNumber" : 16,
    "endLineNumber" : 52,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}