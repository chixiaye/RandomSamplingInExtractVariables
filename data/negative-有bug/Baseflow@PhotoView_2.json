{
  "id" : 2,
  "expression" : "viewWidth - drawableWidth",
  "projectName" : "Baseflow@PhotoView",
  "commitID" : "8d1b662b5b148f67f6ff5267b55d2db320cb1547",
  "filePath" : "/library/src/uk/co/senab/photoview/PhotoViewAttacher.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "viewWidth - drawableWidth",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 738,
      "startColumnNumber" : 39,
      "endLineNumber" : 738,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 738,
        "startColumnNumber" : 38,
        "endLineNumber" : 738,
        "endColumnNumber" : 65
      },
      "nodeContext" : "(viewWidth - drawableWidth)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 738,
        "startColumnNumber" : 38,
        "endLineNumber" : 738,
        "endColumnNumber" : 70
      },
      "nodeContext" : "(viewWidth - drawableWidth) / 2F",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 738,
        "startColumnNumber" : 12,
        "endLineNumber" : 739,
        "endColumnNumber" : 55
      },
      "nodeContext" : "mBaseMatrix.postTranslate((viewWidth - drawableWidth) / 2F,(viewHeight - drawableHeight) / 2F)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 738,
        "startColumnNumber" : 12,
        "endLineNumber" : 739,
        "endColumnNumber" : 56
      },
      "nodeContext" : "mBaseMatrix.postTranslate((viewWidth - drawableWidth) / 2F,(viewHeight - drawableHeight) / 2F);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 737,
        "startColumnNumber" : 44,
        "endLineNumber" : 741,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  mBaseMatrix.postTranslate((viewWidth - drawableWidth) / 2F,(viewHeight - drawableHeight) / 2F);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1661,
        "startLineNumber" : 737,
        "startColumnNumber" : 8,
        "endLineNumber" : 777,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mScaleType == ScaleType.CENTER) {\n  mBaseMatrix.postTranslate((viewWidth - drawableWidth) / 2F,(viewHeight - drawableHeight) / 2F);\n}\n else if (mScaleType == ScaleType.CENTER_CROP) {\n  float scale=Math.max(widthScale,heightScale);\n  mBaseMatrix.postScale(scale,scale);\n  mBaseMatrix.postTranslate((viewWidth - drawableWidth * scale) / 2F,(viewHeight - drawableHeight * scale) / 2F);\n}\n else if (mScaleType == ScaleType.CENTER_INSIDE) {\n  float scale=Math.min(1.0f,Math.min(widthScale,heightScale));\n  mBaseMatrix.postScale(scale,scale);\n  mBaseMatrix.postTranslate((viewWidth - drawableWidth * scale) / 2F,(viewHeight - drawableHeight * scale) / 2F);\n}\n else {\n  RectF mTempSrc=new RectF(0,0,drawableWidth,drawableHeight);\n  RectF mTempDst=new RectF(0,0,viewWidth,viewHeight);\nswitch (mScaleType) {\ncase FIT_CENTER:    mBaseMatrix.setRectToRect(mTempSrc,mTempDst,ScaleToFit.CENTER);\n  break;\ncase FIT_START:mBaseMatrix.setRectToRect(mTempSrc,mTempDst,ScaleToFit.START);\nbreak;\ncase FIT_END:mBaseMatrix.setRectToRect(mTempSrc,mTempDst,ScaleToFit.END);\nbreak;\ncase FIT_XY:mBaseMatrix.setRectToRect(mTempSrc,mTempDst,ScaleToFit.FILL);\nbreak;\ndefault:break;\n}\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 188,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2205,
        "startLineNumber" : 721,
        "startColumnNumber" : 46,
        "endLineNumber" : 780,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ImageView imageView=getImageView();\n  if (null == imageView || null == d) {\n    return;\n  }\n  final float viewWidth=imageView.getWidth();\n  final float viewHeight=imageView.getHeight();\n  final int drawableWidth=d.getIntrinsicWidth();\n  final int drawableHeight=d.getIntrinsicHeight();\n  mBaseMatrix.reset();\n  final float widthScale=viewWidth / drawableWidth;\n  final float heightScale=viewHeight / drawableHeight;\n  if (mScaleType == ScaleType.CENTER) {\n    mBaseMatrix.postTranslate((viewWidth - drawableWidth) / 2F,(viewHeight - drawableHeight) / 2F);\n  }\n else   if (mScaleType == ScaleType.CENTER_CROP) {\n    float scale=Math.max(widthScale,heightScale);\n    mBaseMatrix.postScale(scale,scale);\n    mBaseMatrix.postTranslate((viewWidth - drawableWidth * scale) / 2F,(viewHeight - drawableHeight * scale) / 2F);\n  }\n else   if (mScaleType == ScaleType.CENTER_INSIDE) {\n    float scale=Math.min(1.0f,Math.min(widthScale,heightScale));\n    mBaseMatrix.postScale(scale,scale);\n    mBaseMatrix.postTranslate((viewWidth - drawableWidth * scale) / 2F,(viewHeight - drawableHeight * scale) / 2F);\n  }\n else {\n    RectF mTempSrc=new RectF(0,0,drawableWidth,drawableHeight);\n    RectF mTempDst=new RectF(0,0,viewWidth,viewHeight);\nswitch (mScaleType) {\ncase FIT_CENTER:      mBaseMatrix.setRectToRect(mTempSrc,mTempDst,ScaleToFit.CENTER);\n    break;\ncase FIT_START:  mBaseMatrix.setRectToRect(mTempSrc,mTempDst,ScaleToFit.START);\nbreak;\ncase FIT_END:mBaseMatrix.setRectToRect(mTempSrc,mTempDst,ScaleToFit.END);\nbreak;\ncase FIT_XY:mBaseMatrix.setRectToRect(mTempSrc,mTempDst,ScaleToFit.FILL);\nbreak;\ndefault:break;\n}\n}\nresetMatrix();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 261,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2352,
        "startLineNumber" : 716,
        "startColumnNumber" : 4,
        "endLineNumber" : 780,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Calculate Matrix for FIT_CENTER\n * @param d - Drawable being displayed\n */\nprivate void updateBaseMatrix(Drawable d){\n  ImageView imageView=getImageView();\n  if (null == imageView || null == d) {\n    return;\n  }\n  final float viewWidth=imageView.getWidth();\n  final float viewHeight=imageView.getHeight();\n  final int drawableWidth=d.getIntrinsicWidth();\n  final int drawableHeight=d.getIntrinsicHeight();\n  mBaseMatrix.reset();\n  final float widthScale=viewWidth / drawableWidth;\n  final float heightScale=viewHeight / drawableHeight;\n  if (mScaleType == ScaleType.CENTER) {\n    mBaseMatrix.postTranslate((viewWidth - drawableWidth) / 2F,(viewHeight - drawableHeight) / 2F);\n  }\n else   if (mScaleType == ScaleType.CENTER_CROP) {\n    float scale=Math.max(widthScale,heightScale);\n    mBaseMatrix.postScale(scale,scale);\n    mBaseMatrix.postTranslate((viewWidth - drawableWidth * scale) / 2F,(viewHeight - drawableHeight * scale) / 2F);\n  }\n else   if (mScaleType == ScaleType.CENTER_INSIDE) {\n    float scale=Math.min(1.0f,Math.min(widthScale,heightScale));\n    mBaseMatrix.postScale(scale,scale);\n    mBaseMatrix.postTranslate((viewWidth - drawableWidth * scale) / 2F,(viewHeight - drawableHeight * scale) / 2F);\n  }\n else {\n    RectF mTempSrc=new RectF(0,0,drawableWidth,drawableHeight);\n    RectF mTempDst=new RectF(0,0,viewWidth,viewHeight);\nswitch (mScaleType) {\ncase FIT_CENTER:      mBaseMatrix.setRectToRect(mTempSrc,mTempDst,ScaleToFit.CENTER);\n    break;\ncase FIT_START:  mBaseMatrix.setRectToRect(mTempSrc,mTempDst,ScaleToFit.START);\nbreak;\ncase FIT_END:mBaseMatrix.setRectToRect(mTempSrc,mTempDst,ScaleToFit.END);\nbreak;\ncase FIT_XY:mBaseMatrix.setRectToRect(mTempSrc,mTempDst,ScaleToFit.FILL);\nbreak;\ndefault:break;\n}\n}\nresetMatrix();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 270,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 738,
        "startColumnNumber" : 38,
        "endLineNumber" : 738,
        "endColumnNumber" : 70
      },
      "nodeContext" : "(viewWidth - drawableWidth) / 2F",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 738,
    "startColumnNumber" : 39,
    "endLineNumber" : 738,
    "endColumnNumber" : 64
  } ],
  "layoutRelationDataList" : [ ]
}