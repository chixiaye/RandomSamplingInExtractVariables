{
  "id" : 111,
  "expression" : "j - k - 1",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/strings/BoothsAlgorithm.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "j - k - 1",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 20,
      "startColumnNumber" : 16,
      "endLineNumber" : 20,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 20,
        "startColumnNumber" : 14,
        "endLineNumber" : 20,
        "endColumnNumber" : 26
      },
      "nodeContext" : "f[j - k - 1]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 20,
        "startColumnNumber" : 10,
        "endLineNumber" : 20,
        "endColumnNumber" : 26
      },
      "nodeContext" : "i=f[j - k - 1]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 20,
        "startColumnNumber" : 6,
        "endLineNumber" : 20,
        "endColumnNumber" : 27
      },
      "nodeContext" : "int i=f[j - k - 1];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 326,
        "startLineNumber" : 18,
        "startColumnNumber" : 41,
        "endLineNumber" : 29,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  char sj=s.charAt(j);\n  int i=f[j - k - 1];\n  while (i != -1 && sj != s.charAt(k + i + 1)) {\n    if (sj < s.charAt(k + i + 1))     k=j - i - 1;\n    i=f[i];\n  }\n  if (sj != s.charAt(k + i + 1)) {\n    if (sj < s.charAt(k))     k=j;\n    f[j - k]=-1;\n  }\n else   f[j - k]=i + 1;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 363,
        "startLineNumber" : 18,
        "startColumnNumber" : 4,
        "endLineNumber" : 29,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int j=1; j < s.length(); j++) {\n  char sj=s.charAt(j);\n  int i=f[j - k - 1];\n  while (i != -1 && sj != s.charAt(k + i + 1)) {\n    if (sj < s.charAt(k + i + 1))     k=j - i - 1;\n    i=f[i];\n  }\n  if (sj != s.charAt(k + i + 1)) {\n    if (sj < s.charAt(k))     k=j;\n    f[j - k]=-1;\n  }\n else   f[j - k]=i + 1;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 112,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 483,
        "startLineNumber" : 13,
        "startColumnNumber" : 50,
        "endLineNumber" : 31,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  s+=s;\n  int[] f=new int[s.length()];\n  java.util.Arrays.fill(f,-1);\n  int k=0;\n  for (int j=1; j < s.length(); j++) {\n    char sj=s.charAt(j);\n    int i=f[j - k - 1];\n    while (i != -1 && sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k + i + 1))       k=j - i - 1;\n      i=f[i];\n    }\n    if (sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k))       k=j;\n      f[j - k]=-1;\n    }\n else     f[j - k]=i + 1;\n  }\n  return k;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 148,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 531,
        "startLineNumber" : 13,
        "startColumnNumber" : 2,
        "endLineNumber" : 31,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static int leastCyclicRotation(String s){\n  s+=s;\n  int[] f=new int[s.length()];\n  java.util.Arrays.fill(f,-1);\n  int k=0;\n  for (int j=1; j < s.length(); j++) {\n    char sj=s.charAt(j);\n    int i=f[j - k - 1];\n    while (i != -1 && sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k + i + 1))       k=j - i - 1;\n      i=f[i];\n    }\n    if (sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k))       k=j;\n      f[j - k]=-1;\n    }\n else     f[j - k]=i + 1;\n  }\n  return k;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 157,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 20,
        "startColumnNumber" : 6,
        "endLineNumber" : 20,
        "endColumnNumber" : 27
      },
      "nodeContext" : "int i=f[j - k - 1];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 20,
    "startColumnNumber" : 16,
    "endLineNumber" : 20,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ ]
}