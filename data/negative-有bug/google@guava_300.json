{
  "id" : 300,
  "expression" : "Ordering",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava-tests/test/com/google/common/util/concurrent/StripedTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Ordering",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 186,
      "startColumnNumber" : 19,
      "endLineNumber" : 186,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 186,
        "startColumnNumber" : 19,
        "endLineNumber" : 186,
        "endColumnNumber" : 37
      },
      "nodeContext" : "Ordering.natural()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 186,
        "startColumnNumber" : 19,
        "endLineNumber" : 186,
        "endColumnNumber" : 79
      },
      "nodeContext" : "Ordering.natural().onResultOf(Functions.forMap(indexByLock))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 186,
        "startColumnNumber" : 19,
        "endLineNumber" : 186,
        "endColumnNumber" : 96
      },
      "nodeContext" : "Ordering.natural().onResultOf(Functions.forMap(indexByLock)).isOrdered(locks)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 186,
        "endColumnNumber" : 97
      },
      "nodeContext" : "assertTrue(Ordering.natural().onResultOf(Functions.forMap(indexByLock)).isOrdered(locks))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 186,
        "endColumnNumber" : 98
      },
      "nodeContext" : "assertTrue(Ordering.natural().onResultOf(Functions.forMap(indexByLock)).isOrdered(locks));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 506,
        "startLineNumber" : 179,
        "startColumnNumber" : 79,
        "endLineNumber" : 191,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  Set<Object> objects=Sets.newHashSetWithExpectedSize(objectsNum);\n  for (int i=0; i < objectsNum; i++) {\n    objects.add(new Object());\n  }\n  Iterable<?> locks=striped.bulkGet(objects);\n  assertTrue(Ordering.natural().onResultOf(Functions.forMap(indexByLock)).isOrdered(locks));\n  Iterable<?> locks2=striped.bulkGet(objects);\n  assertEquals(Lists.newArrayList(locks),Lists.newArrayList(locks2));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 579,
        "startLineNumber" : 179,
        "startColumnNumber" : 6,
        "endLineNumber" : 191,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int objectsNum=1; objectsNum <= striped.size() * 2; objectsNum++) {\n  Set<Object> objects=Sets.newHashSetWithExpectedSize(objectsNum);\n  for (int i=0; i < objectsNum; i++) {\n    objects.add(new Object());\n  }\n  Iterable<?> locks=striped.bulkGet(objects);\n  assertTrue(Ordering.natural().onResultOf(Functions.forMap(indexByLock)).isOrdered(locks));\n  Iterable<?> locks2=striped.bulkGet(objects);\n  assertEquals(Lists.newArrayList(locks),Lists.newArrayList(locks2));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 95,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 842,
        "startLineNumber" : 172,
        "startColumnNumber" : 52,
        "endLineNumber" : 192,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<Object,Integer> indexByLock=Maps.newHashMap();\n  for (int i=0; i < striped.size(); i++) {\n    indexByLock.put(striped.getAt(i),i);\n  }\n  for (int objectsNum=1; objectsNum <= striped.size() * 2; objectsNum++) {\n    Set<Object> objects=Sets.newHashSetWithExpectedSize(objectsNum);\n    for (int i=0; i < objectsNum; i++) {\n      objects.add(new Object());\n    }\n    Iterable<?> locks=striped.bulkGet(objects);\n    assertTrue(Ordering.natural().onResultOf(Functions.forMap(indexByLock)).isOrdered(locks));\n    Iterable<?> locks2=striped.bulkGet(objects);\n    assertEquals(Lists.newArrayList(locks),Lists.newArrayList(locks2));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 132,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 890,
        "startLineNumber" : 172,
        "startColumnNumber" : 4,
        "endLineNumber" : 192,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (Striped<?> striped : allImplementations()) {\n  Map<Object,Integer> indexByLock=Maps.newHashMap();\n  for (int i=0; i < striped.size(); i++) {\n    indexByLock.put(striped.getAt(i),i);\n  }\n  for (int objectsNum=1; objectsNum <= striped.size() * 2; objectsNum++) {\n    Set<Object> objects=Sets.newHashSetWithExpectedSize(objectsNum);\n    for (int i=0; i < objectsNum; i++) {\n      objects.add(new Object());\n    }\n    Iterable<?> locks=striped.bulkGet(objects);\n    assertTrue(Ordering.natural().onResultOf(Functions.forMap(indexByLock)).isOrdered(locks));\n    Iterable<?> locks2=striped.bulkGet(objects);\n    assertEquals(Lists.newArrayList(locks),Lists.newArrayList(locks2));\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 141,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 902,
        "startLineNumber" : 171,
        "startColumnNumber" : 41,
        "endLineNumber" : 193,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (  Striped<?> striped : allImplementations()) {\n    Map<Object,Integer> indexByLock=Maps.newHashMap();\n    for (int i=0; i < striped.size(); i++) {\n      indexByLock.put(striped.getAt(i),i);\n    }\n    for (int objectsNum=1; objectsNum <= striped.size() * 2; objectsNum++) {\n      Set<Object> objects=Sets.newHashSetWithExpectedSize(objectsNum);\n      for (int i=0; i < objectsNum; i++) {\n        objects.add(new Object());\n      }\n      Iterable<?> locks=striped.bulkGet(objects);\n      assertTrue(Ordering.natural().onResultOf(Functions.forMap(indexByLock)).isOrdered(locks));\n      Iterable<?> locks2=striped.bulkGet(objects);\n      assertEquals(Lists.newArrayList(locks),Lists.newArrayList(locks2));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 142,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 941,
        "startLineNumber" : 171,
        "startColumnNumber" : 2,
        "endLineNumber" : 193,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testBulkGetReturnsSorted(){\n  for (  Striped<?> striped : allImplementations()) {\n    Map<Object,Integer> indexByLock=Maps.newHashMap();\n    for (int i=0; i < striped.size(); i++) {\n      indexByLock.put(striped.getAt(i),i);\n    }\n    for (int objectsNum=1; objectsNum <= striped.size() * 2; objectsNum++) {\n      Set<Object> objects=Sets.newHashSetWithExpectedSize(objectsNum);\n      for (int i=0; i < objectsNum; i++) {\n        objects.add(new Object());\n      }\n      Iterable<?> locks=striped.bulkGet(objects);\n      assertTrue(Ordering.natural().onResultOf(Functions.forMap(indexByLock)).isOrdered(locks));\n      Iterable<?> locks2=striped.bulkGet(objects);\n      assertEquals(Lists.newArrayList(locks),Lists.newArrayList(locks2));\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 146,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 186,
        "startColumnNumber" : 8,
        "endLineNumber" : 186,
        "endColumnNumber" : 98
      },
      "nodeContext" : "assertTrue(Ordering.natural().onResultOf(Functions.forMap(indexByLock)).isOrdered(locks));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "com.google.common.collect.Ordering"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 186,
    "startColumnNumber" : 19,
    "endLineNumber" : 186,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ ]
}