{
  "id" : 88,
  "expression" : "new DruidSchema(CalciteTests.createMockQueryLifecycleFactory(new SpecificSegmentsQuerySegmentWalker(conglomerate),conglomerate),new TestServerInventoryView(Collections.emptyList()),new SegmentManager(EasyMock.createMock(SegmentLoader.class)),new MapJoinableFactory(ImmutableSet.of(),ImmutableMap.of()),PLANNER_CONFIG_DEFAULT,new NoopEscalator())",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/sql/src/test/java/org/apache/druid/sql/calcite/schema/DruidSchemaNoDataInitTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new DruidSchema(CalciteTests.createMockQueryLifecycleFactory(new SpecificSegmentsQuerySegmentWalker(conglomerate),conglomerate),new TestServerInventoryView(Collections.emptyList()),new SegmentManager(EasyMock.createMock(SegmentLoader.class)),new MapJoinableFactory(ImmutableSet.of(),ImmutableMap.of()),PLANNER_CONFIG_DEFAULT,new NoopEscalator())",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 460,
      "startLineNumber" : 51,
      "startColumnNumber" : 38,
      "endLineNumber" : 61,
      "endColumnNumber" : 7
    },
    "astNodeNumber" : 39,
    "astHeight" : 6,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 474,
        "startLineNumber" : 51,
        "startColumnNumber" : 24,
        "endLineNumber" : 61,
        "endColumnNumber" : 7
      },
      "nodeContext" : "druidSchema=new DruidSchema(CalciteTests.createMockQueryLifecycleFactory(new SpecificSegmentsQuerySegmentWalker(conglomerate),conglomerate),new TestServerInventoryView(Collections.emptyList()),new SegmentManager(EasyMock.createMock(SegmentLoader.class)),new MapJoinableFactory(ImmutableSet.of(),ImmutableMap.of()),PLANNER_CONFIG_DEFAULT,new NoopEscalator())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 41,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 493,
        "startLineNumber" : 51,
        "startColumnNumber" : 6,
        "endLineNumber" : 61,
        "endColumnNumber" : 8
      },
      "nodeContext" : "final DruidSchema druidSchema=new DruidSchema(CalciteTests.createMockQueryLifecycleFactory(new SpecificSegmentsQuerySegmentWalker(conglomerate),conglomerate),new TestServerInventoryView(Collections.emptyList()),new SegmentManager(EasyMock.createMock(SegmentLoader.class)),new MapJoinableFactory(ImmutableSet.of(),ImmutableMap.of()),PLANNER_CONFIG_DEFAULT,new NoopEscalator());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 45,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 770,
        "startLineNumber" : 49,
        "startColumnNumber" : 48,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final QueryRunnerFactoryConglomerate conglomerate=QueryStackTests.createQueryRunnerFactoryConglomerate(closer);\n  final DruidSchema druidSchema=new DruidSchema(CalciteTests.createMockQueryLifecycleFactory(new SpecificSegmentsQuerySegmentWalker(conglomerate),conglomerate),new TestServerInventoryView(Collections.emptyList()),new SegmentManager(EasyMock.createMock(SegmentLoader.class)),new MapJoinableFactory(ImmutableSet.of(),ImmutableMap.of()),PLANNER_CONFIG_DEFAULT,new NoopEscalator());\n  druidSchema.start();\n  druidSchema.awaitInitialization();\n  Assert.assertEquals(ImmutableMap.of(),druidSchema.getTableMap());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 814,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try (final Closer closer=Closer.create()){\n  final QueryRunnerFactoryConglomerate conglomerate=QueryStackTests.createQueryRunnerFactoryConglomerate(closer);\n  final DruidSchema druidSchema=new DruidSchema(CalciteTests.createMockQueryLifecycleFactory(new SpecificSegmentsQuerySegmentWalker(conglomerate),conglomerate),new TestServerInventoryView(Collections.emptyList()),new SegmentManager(EasyMock.createMock(SegmentLoader.class)),new MapJoinableFactory(ImmutableSet.of(),ImmutableMap.of()),PLANNER_CONFIG_DEFAULT,new NoopEscalator());\n  druidSchema.start();\n  druidSchema.awaitInitialization();\n  Assert.assertEquals(ImmutableMap.of(),druidSchema.getTableMap());\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 84,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 824,
        "startLineNumber" : 48,
        "startColumnNumber" : 2,
        "endLineNumber" : 68,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  try (final Closer closer=Closer.create()){\n    final QueryRunnerFactoryConglomerate conglomerate=QueryStackTests.createQueryRunnerFactoryConglomerate(closer);\n    final DruidSchema druidSchema=new DruidSchema(CalciteTests.createMockQueryLifecycleFactory(new SpecificSegmentsQuerySegmentWalker(conglomerate),conglomerate),new TestServerInventoryView(Collections.emptyList()),new SegmentManager(EasyMock.createMock(SegmentLoader.class)),new MapJoinableFactory(ImmutableSet.of(),ImmutableMap.of()),PLANNER_CONFIG_DEFAULT,new NoopEscalator());\n    druidSchema.start();\n    druidSchema.awaitInitialization();\n    Assert.assertEquals(ImmutableMap.of(),druidSchema.getTableMap());\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 894,
        "startLineNumber" : 46,
        "startColumnNumber" : 2,
        "endLineNumber" : 68,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testInitializationWithNoData() throws Exception {\n  try (final Closer closer=Closer.create()){\n    final QueryRunnerFactoryConglomerate conglomerate=QueryStackTests.createQueryRunnerFactoryConglomerate(closer);\n    final DruidSchema druidSchema=new DruidSchema(CalciteTests.createMockQueryLifecycleFactory(new SpecificSegmentsQuerySegmentWalker(conglomerate),conglomerate),new TestServerInventoryView(Collections.emptyList()),new SegmentManager(EasyMock.createMock(SegmentLoader.class)),new MapJoinableFactory(ImmutableSet.of(),ImmutableMap.of()),PLANNER_CONFIG_DEFAULT,new NoopEscalator());\n    druidSchema.start();\n    druidSchema.awaitInitialization();\n    Assert.assertEquals(ImmutableMap.of(),druidSchema.getTableMap());\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 93,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 493,
        "startLineNumber" : 51,
        "startColumnNumber" : 6,
        "endLineNumber" : 61,
        "endColumnNumber" : 8
      },
      "nodeContext" : "final DruidSchema druidSchema=new DruidSchema(CalciteTests.createMockQueryLifecycleFactory(new SpecificSegmentsQuerySegmentWalker(conglomerate),conglomerate),new TestServerInventoryView(Collections.emptyList()),new SegmentManager(EasyMock.createMock(SegmentLoader.class)),new MapJoinableFactory(ImmutableSet.of(),ImmutableMap.of()),PLANNER_CONFIG_DEFAULT,new NoopEscalator());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 45,
      "astHeight" : 8
    },
    "tokenLength" : 22,
    "type" : "org.apache.druid.sql.calcite.schema.DruidSchema"
  } ],
  "positionList" : [ {
    "charLength" : 460,
    "startLineNumber" : 51,
    "startColumnNumber" : 38,
    "endLineNumber" : 61,
    "endColumnNumber" : 7
  } ],
  "layoutRelationDataList" : [ ]
}