{
  "id" : 307,
  "expression" : "\"start clear all config-info.\"",
  "projectName" : "alibaba@nacos",
  "commitID" : "4e7346db1d6657ffe07c96bebd2d348229c2812f",
  "filePath" : "/config/src/main/java/com/alibaba/nacos/config/server/service/dump/DumpService.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"start clear all config-info.\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 258,
      "startColumnNumber" : 41,
      "endLineNumber" : 258,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 258,
        "startColumnNumber" : 16,
        "endLineNumber" : 258,
        "endColumnNumber" : 72
      },
      "nodeContext" : "LogUtil.DEFAULT_LOG.info(\"start clear all config-info.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 258,
        "startColumnNumber" : 16,
        "endLineNumber" : 258,
        "endColumnNumber" : 73
      },
      "nodeContext" : "LogUtil.DEFAULT_LOG.info(\"start clear all config-info.\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 187,
        "startLineNumber" : 257,
        "startColumnNumber" : 27,
        "endLineNumber" : 261,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  LogUtil.DEFAULT_LOG.info(\"start clear all config-info.\");\n  DiskUtil.clearAll();\n  dumpAllProcessor.process(new DumpAllTask());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1463,
        "startLineNumber" : 257,
        "startColumnNumber" : 12,
        "endLineNumber" : 281,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (isAllDump) {\n  LogUtil.DEFAULT_LOG.info(\"start clear all config-info.\");\n  DiskUtil.clearAll();\n  dumpAllProcessor.process(new DumpAllTask());\n}\n else {\n  Timestamp beforeTimeStamp=getBeforeStamp(heartheatLastStamp,timeStep);\n  DumpChangeProcessor dumpChangeProcessor=new DumpChangeProcessor(this,beforeTimeStamp,TimeUtils.getCurrentTime());\n  dumpChangeProcessor.process(new DumpChangeTask());\n  Runnable checkMd5Task=() -> {\n    LogUtil.DEFAULT_LOG.error(\"start checkMd5Task\");\n    List<String> diffList=ConfigCacheService.checkMd5();\n    for (    String groupKey : diffList) {\n      String[] dg=GroupKey.parseKey(groupKey);\n      String dataId=dg[0];\n      String group=dg[1];\n      String tenant=dg[2];\n      ConfigInfoWrapper configInfo=persistService.queryConfigInfo(dataId,group,tenant);\n      ConfigCacheService.dumpChange(dataId,group,tenant,configInfo.getContent(),configInfo.getLastModified());\n    }\n    LogUtil.DEFAULT_LOG.error(\"end checkMd5Task\");\n  }\n;\n  ConfigExecutor.scheduleConfigTask(checkMd5Task,0,12,TimeUnit.HOURS);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 159,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2107,
        "startLineNumber" : 244,
        "startColumnNumber" : 12,
        "endLineNumber" : 282,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (isQuickStart()) {\n    File heartbeatFile=DiskUtil.heartBeatFile();\n    if (heartbeatFile.exists()) {\n      fis=new FileInputStream(heartbeatFile);\n      String heartheatTempLast=IoUtils.toString(fis,Constants.ENCODE);\n      heartheatLastStamp=Timestamp.valueOf(heartheatTempLast);\n      if (TimeUtils.getCurrentTime().getTime() - heartheatLastStamp.getTime() < timeStep * 60 * 60* 1000) {\n        isAllDump=false;\n      }\n    }\n  }\n  if (isAllDump) {\n    LogUtil.DEFAULT_LOG.info(\"start clear all config-info.\");\n    DiskUtil.clearAll();\n    dumpAllProcessor.process(new DumpAllTask());\n  }\n else {\n    Timestamp beforeTimeStamp=getBeforeStamp(heartheatLastStamp,timeStep);\n    DumpChangeProcessor dumpChangeProcessor=new DumpChangeProcessor(this,beforeTimeStamp,TimeUtils.getCurrentTime());\n    dumpChangeProcessor.process(new DumpChangeTask());\n    Runnable checkMd5Task=() -> {\n      LogUtil.DEFAULT_LOG.error(\"start checkMd5Task\");\n      List<String> diffList=ConfigCacheService.checkMd5();\n      for (      String groupKey : diffList) {\n        String[] dg=GroupKey.parseKey(groupKey);\n        String dataId=dg[0];\n        String group=dg[1];\n        String tenant=dg[2];\n        ConfigInfoWrapper configInfo=persistService.queryConfigInfo(dataId,group,tenant);\n        ConfigCacheService.dumpChange(dataId,group,tenant,configInfo.getContent(),configInfo.getLastModified());\n      }\n      LogUtil.DEFAULT_LOG.error(\"end checkMd5Task\");\n    }\n;\n    ConfigExecutor.scheduleConfigTask(checkMd5Task,0,12,TimeUnit.HOURS);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 224,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2487,
        "startLineNumber" : 244,
        "startColumnNumber" : 8,
        "endLineNumber" : 293,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  if (isQuickStart()) {\n    File heartbeatFile=DiskUtil.heartBeatFile();\n    if (heartbeatFile.exists()) {\n      fis=new FileInputStream(heartbeatFile);\n      String heartheatTempLast=IoUtils.toString(fis,Constants.ENCODE);\n      heartheatLastStamp=Timestamp.valueOf(heartheatTempLast);\n      if (TimeUtils.getCurrentTime().getTime() - heartheatLastStamp.getTime() < timeStep * 60 * 60* 1000) {\n        isAllDump=false;\n      }\n    }\n  }\n  if (isAllDump) {\n    LogUtil.DEFAULT_LOG.info(\"start clear all config-info.\");\n    DiskUtil.clearAll();\n    dumpAllProcessor.process(new DumpAllTask());\n  }\n else {\n    Timestamp beforeTimeStamp=getBeforeStamp(heartheatLastStamp,timeStep);\n    DumpChangeProcessor dumpChangeProcessor=new DumpChangeProcessor(this,beforeTimeStamp,TimeUtils.getCurrentTime());\n    dumpChangeProcessor.process(new DumpChangeTask());\n    Runnable checkMd5Task=() -> {\n      LogUtil.DEFAULT_LOG.error(\"start checkMd5Task\");\n      List<String> diffList=ConfigCacheService.checkMd5();\n      for (      String groupKey : diffList) {\n        String[] dg=GroupKey.parseKey(groupKey);\n        String dataId=dg[0];\n        String group=dg[1];\n        String tenant=dg[2];\n        ConfigInfoWrapper configInfo=persistService.queryConfigInfo(dataId,group,tenant);\n        ConfigCacheService.dumpChange(dataId,group,tenant,configInfo.getContent(),configInfo.getLastModified());\n      }\n      LogUtil.DEFAULT_LOG.error(\"end checkMd5Task\");\n    }\n;\n    ConfigExecutor.scheduleConfigTask(checkMd5Task,0,12,TimeUnit.HOURS);\n  }\n}\n catch (IOException e) {\n  LogUtil.FATAL_LOG.error(\"dump config fail\" + e.getMessage());\n  throw e;\n}\n finally {\n  if (null != fis) {\n    try {\n      fis.close();\n    }\n catch (    IOException e) {\n      LogUtil.DEFAULT_LOG.warn(\"close file failed\");\n    }\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 269,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2672,
        "startLineNumber" : 238,
        "startColumnNumber" : 86,
        "endLineNumber" : 294,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int timeStep=6;\n  Boolean isAllDump=true;\n  FileInputStream fis=null;\n  Timestamp heartheatLastStamp=null;\n  try {\n    if (isQuickStart()) {\n      File heartbeatFile=DiskUtil.heartBeatFile();\n      if (heartbeatFile.exists()) {\n        fis=new FileInputStream(heartbeatFile);\n        String heartheatTempLast=IoUtils.toString(fis,Constants.ENCODE);\n        heartheatLastStamp=Timestamp.valueOf(heartheatTempLast);\n        if (TimeUtils.getCurrentTime().getTime() - heartheatLastStamp.getTime() < timeStep * 60 * 60* 1000) {\n          isAllDump=false;\n        }\n      }\n    }\n    if (isAllDump) {\n      LogUtil.DEFAULT_LOG.info(\"start clear all config-info.\");\n      DiskUtil.clearAll();\n      dumpAllProcessor.process(new DumpAllTask());\n    }\n else {\n      Timestamp beforeTimeStamp=getBeforeStamp(heartheatLastStamp,timeStep);\n      DumpChangeProcessor dumpChangeProcessor=new DumpChangeProcessor(this,beforeTimeStamp,TimeUtils.getCurrentTime());\n      dumpChangeProcessor.process(new DumpChangeTask());\n      Runnable checkMd5Task=() -> {\n        LogUtil.DEFAULT_LOG.error(\"start checkMd5Task\");\n        List<String> diffList=ConfigCacheService.checkMd5();\n        for (        String groupKey : diffList) {\n          String[] dg=GroupKey.parseKey(groupKey);\n          String dataId=dg[0];\n          String group=dg[1];\n          String tenant=dg[2];\n          ConfigInfoWrapper configInfo=persistService.queryConfigInfo(dataId,group,tenant);\n          ConfigCacheService.dumpChange(dataId,group,tenant,configInfo.getContent(),configInfo.getLastModified());\n        }\n        LogUtil.DEFAULT_LOG.error(\"end checkMd5Task\");\n      }\n;\n      ConfigExecutor.scheduleConfigTask(checkMd5Task,0,12,TimeUnit.HOURS);\n    }\n  }\n catch (  IOException e) {\n    LogUtil.FATAL_LOG.error(\"dump config fail\" + e.getMessage());\n    throw e;\n  }\n finally {\n    if (null != fis) {\n      try {\n        fis.close();\n      }\n catch (      IOException e) {\n        LogUtil.DEFAULT_LOG.warn(\"close file failed\");\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 293,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2754,
        "startLineNumber" : 238,
        "startColumnNumber" : 4,
        "endLineNumber" : 294,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void dumpConfigInfo(DumpAllProcessor dumpAllProcessor) throws IOException {\n  int timeStep=6;\n  Boolean isAllDump=true;\n  FileInputStream fis=null;\n  Timestamp heartheatLastStamp=null;\n  try {\n    if (isQuickStart()) {\n      File heartbeatFile=DiskUtil.heartBeatFile();\n      if (heartbeatFile.exists()) {\n        fis=new FileInputStream(heartbeatFile);\n        String heartheatTempLast=IoUtils.toString(fis,Constants.ENCODE);\n        heartheatLastStamp=Timestamp.valueOf(heartheatTempLast);\n        if (TimeUtils.getCurrentTime().getTime() - heartheatLastStamp.getTime() < timeStep * 60 * 60* 1000) {\n          isAllDump=false;\n        }\n      }\n    }\n    if (isAllDump) {\n      LogUtil.DEFAULT_LOG.info(\"start clear all config-info.\");\n      DiskUtil.clearAll();\n      dumpAllProcessor.process(new DumpAllTask());\n    }\n else {\n      Timestamp beforeTimeStamp=getBeforeStamp(heartheatLastStamp,timeStep);\n      DumpChangeProcessor dumpChangeProcessor=new DumpChangeProcessor(this,beforeTimeStamp,TimeUtils.getCurrentTime());\n      dumpChangeProcessor.process(new DumpChangeTask());\n      Runnable checkMd5Task=() -> {\n        LogUtil.DEFAULT_LOG.error(\"start checkMd5Task\");\n        List<String> diffList=ConfigCacheService.checkMd5();\n        for (        String groupKey : diffList) {\n          String[] dg=GroupKey.parseKey(groupKey);\n          String dataId=dg[0];\n          String group=dg[1];\n          String tenant=dg[2];\n          ConfigInfoWrapper configInfo=persistService.queryConfigInfo(dataId,group,tenant);\n          ConfigCacheService.dumpChange(dataId,group,tenant,configInfo.getContent(),configInfo.getLastModified());\n        }\n        LogUtil.DEFAULT_LOG.error(\"end checkMd5Task\");\n      }\n;\n      ConfigExecutor.scheduleConfigTask(checkMd5Task,0,12,TimeUnit.HOURS);\n    }\n  }\n catch (  IOException e) {\n    LogUtil.FATAL_LOG.error(\"dump config fail\" + e.getMessage());\n    throw e;\n  }\n finally {\n    if (null != fis) {\n      try {\n        fis.close();\n      }\n catch (      IOException e) {\n        LogUtil.DEFAULT_LOG.warn(\"close file failed\");\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 303,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 258,
        "startColumnNumber" : 16,
        "endLineNumber" : 258,
        "endColumnNumber" : 73
      },
      "nodeContext" : "LogUtil.DEFAULT_LOG.info(\"start clear all config-info.\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 30,
    "startLineNumber" : 258,
    "startColumnNumber" : 41,
    "endLineNumber" : 258,
    "endColumnNumber" : 71
  } ],
  "layoutRelationDataList" : [ ]
}