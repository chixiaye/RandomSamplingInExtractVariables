{
  "id" : 92,
  "expression" : "r1.contains(4,5)",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/test/java/com/williamfiset/algorithms/datastructures/quadtree/QuadTreeTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "r1.contains(4,5)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 134,
      "startColumnNumber" : 15,
      "endLineNumber" : 134,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 134,
        "startColumnNumber" : 4,
        "endLineNumber" : 134,
        "endColumnNumber" : 33
      },
      "nodeContext" : "assertThat(r1.contains(4,5))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 134,
        "startColumnNumber" : 4,
        "endLineNumber" : 134,
        "endColumnNumber" : 42
      },
      "nodeContext" : "assertThat(r1.contains(4,5)).isTrue()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 134,
        "startColumnNumber" : 4,
        "endLineNumber" : 134,
        "endColumnNumber" : 43
      },
      "nodeContext" : "assertThat(r1.contains(4,5)).isTrue();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1531,
        "startLineNumber" : 108,
        "startColumnNumber" : 37,
        "endLineNumber" : 155,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  QuadTree.Rect r1=new QuadTree.Rect(0,0,5,5);\n  assertThat(r1.contains(0,0)).isTrue();\n  assertThat(r1.contains(0,5)).isTrue();\n  assertThat(r1.contains(5,0)).isTrue();\n  assertThat(r1.contains(5,5)).isTrue();\n  assertThat(r1.contains(0,1)).isTrue();\n  assertThat(r1.contains(0,2)).isTrue();\n  assertThat(r1.contains(0,3)).isTrue();\n  assertThat(r1.contains(0,4)).isTrue();\n  assertThat(r1.contains(1,0)).isTrue();\n  assertThat(r1.contains(2,0)).isTrue();\n  assertThat(r1.contains(3,0)).isTrue();\n  assertThat(r1.contains(4,0)).isTrue();\n  assertThat(r1.contains(1,5)).isTrue();\n  assertThat(r1.contains(2,5)).isTrue();\n  assertThat(r1.contains(3,5)).isTrue();\n  assertThat(r1.contains(4,5)).isTrue();\n  assertThat(r1.contains(5,1)).isTrue();\n  assertThat(r1.contains(5,2)).isTrue();\n  assertThat(r1.contains(5,3)).isTrue();\n  assertThat(r1.contains(5,4)).isTrue();\n  assertThat(r1.contains(2,3)).isTrue();\n  assertThat(r1.contains(1,1)).isTrue();\n  assertThat(r1.contains(4,3)).isTrue();\n  assertThat(r1.contains(3,1)).isTrue();\n  assertThat(r1.contains(-1,3)).isFalse();\n  assertThat(r1.contains(-2,-2)).isFalse();\n  assertThat(r1.contains(6,3)).isFalse();\n  assertThat(r1.contains(3,6)).isFalse();\n  assertThat(r1.contains(3,-6)).isFalse();\n  assertThat(r1.contains(-3,6)).isFalse();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 322,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1574,
        "startLineNumber" : 107,
        "startColumnNumber" : 2,
        "endLineNumber" : 155,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testPointContainment(){\n  QuadTree.Rect r1=new QuadTree.Rect(0,0,5,5);\n  assertThat(r1.contains(0,0)).isTrue();\n  assertThat(r1.contains(0,5)).isTrue();\n  assertThat(r1.contains(5,0)).isTrue();\n  assertThat(r1.contains(5,5)).isTrue();\n  assertThat(r1.contains(0,1)).isTrue();\n  assertThat(r1.contains(0,2)).isTrue();\n  assertThat(r1.contains(0,3)).isTrue();\n  assertThat(r1.contains(0,4)).isTrue();\n  assertThat(r1.contains(1,0)).isTrue();\n  assertThat(r1.contains(2,0)).isTrue();\n  assertThat(r1.contains(3,0)).isTrue();\n  assertThat(r1.contains(4,0)).isTrue();\n  assertThat(r1.contains(1,5)).isTrue();\n  assertThat(r1.contains(2,5)).isTrue();\n  assertThat(r1.contains(3,5)).isTrue();\n  assertThat(r1.contains(4,5)).isTrue();\n  assertThat(r1.contains(5,1)).isTrue();\n  assertThat(r1.contains(5,2)).isTrue();\n  assertThat(r1.contains(5,3)).isTrue();\n  assertThat(r1.contains(5,4)).isTrue();\n  assertThat(r1.contains(2,3)).isTrue();\n  assertThat(r1.contains(1,1)).isTrue();\n  assertThat(r1.contains(4,3)).isTrue();\n  assertThat(r1.contains(3,1)).isTrue();\n  assertThat(r1.contains(-1,3)).isFalse();\n  assertThat(r1.contains(-2,-2)).isFalse();\n  assertThat(r1.contains(6,3)).isFalse();\n  assertThat(r1.contains(3,6)).isFalse();\n  assertThat(r1.contains(3,-6)).isFalse();\n  assertThat(r1.contains(-3,6)).isFalse();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 328,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 134,
        "startColumnNumber" : 4,
        "endLineNumber" : 134,
        "endColumnNumber" : 43
      },
      "nodeContext" : "assertThat(r1.contains(4,5)).isTrue();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 134,
    "startColumnNumber" : 15,
    "endLineNumber" : 134,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}