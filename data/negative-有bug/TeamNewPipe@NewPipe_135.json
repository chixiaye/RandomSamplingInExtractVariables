{
  "id" : 135,
  "expression" : "ValueAnimator.AnimatorUpdateListener",
  "projectName" : "TeamNewPipe@NewPipe",
  "commitID" : "d7574973e97fa7a3a21aa59967311f6091941830",
  "filePath" : "/app/src/main/java/org/schabi/newpipe/util/AnimationUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ValueAnimator.AnimatorUpdateListener",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 165,
      "startColumnNumber" : 51,
      "endLineNumber" : 165,
      "endColumnNumber" : 87
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,type]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 165,
        "startColumnNumber" : 51,
        "endLineNumber" : 165,
        "endColumnNumber" : 87
      },
      "nodeContext" : "ValueAnimator.AnimatorUpdateListener",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 319,
        "startLineNumber" : 165,
        "startColumnNumber" : 47,
        "endLineNumber" : 171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "new ValueAnimator.AnimatorUpdateListener(){\n  @Override public void onAnimationUpdate(  final ValueAnimator animation){\n    ViewCompat.setBackgroundTintList(view,new ColorStateList(empty,new int[]{(int)animation.getAnimatedValue()}));\n  }\n}\n",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 37,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 359,
        "startLineNumber" : 165,
        "startColumnNumber" : 8,
        "endLineNumber" : 171,
        "endColumnNumber" : 10
      },
      "nodeContext" : "viewPropertyAnimator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener(){\n  @Override public void onAnimationUpdate(  final ValueAnimator animation){\n    ViewCompat.setBackgroundTintList(view,new ColorStateList(empty,new int[]{(int)animation.getAnimatedValue()}));\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 40,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 360,
        "startLineNumber" : 165,
        "startColumnNumber" : 8,
        "endLineNumber" : 171,
        "endColumnNumber" : 11
      },
      "nodeContext" : "viewPropertyAnimator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener(){\n  @Override public void onAnimationUpdate(  final ValueAnimator animation){\n    ViewCompat.setBackgroundTintList(view,new ColorStateList(empty,new int[]{(int)animation.getAnimatedValue()}));\n  }\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 41,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1461,
        "startLineNumber" : 153,
        "startColumnNumber" : 76,
        "endLineNumber" : 185,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (DEBUG) {\n    Log.d(TAG,\"animateBackgroundColor() called with: \" + \"view = [\" + view + \"], duration = [\"+ duration+ \"], \"+ \"colorStart = [\"+ colorStart+ \"], colorEnd = [\"+ colorEnd+ \"]\");\n  }\n  final int[][] empty=new int[][]{new int[0]};\n  ValueAnimator viewPropertyAnimator=ValueAnimator.ofObject(new ArgbEvaluator(),colorStart,colorEnd);\n  viewPropertyAnimator.setInterpolator(new FastOutSlowInInterpolator());\n  viewPropertyAnimator.setDuration(duration);\n  viewPropertyAnimator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener(){\n    @Override public void onAnimationUpdate(    final ValueAnimator animation){\n      ViewCompat.setBackgroundTintList(view,new ColorStateList(empty,new int[]{(int)animation.getAnimatedValue()}));\n    }\n  }\n);\n  viewPropertyAnimator.addListener(new AnimatorListenerAdapter(){\n    @Override public void onAnimationEnd(    final Animator animation){\n      ViewCompat.setBackgroundTintList(view,new ColorStateList(empty,new int[]{colorEnd}));\n    }\n    @Override public void onAnimationCancel(    final Animator animation){\n      onAnimationEnd(animation);\n    }\n  }\n);\n  viewPropertyAnimator.start();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1983,
        "startLineNumber" : 143,
        "startColumnNumber" : 4,
        "endLineNumber" : 185,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Animate the background color of a view.\n * @param view       the view to animate\n * @param duration   the duration of the animation\n * @param colorStart the background color to start with\n * @param colorEnd   the background color to end with\n */\npublic static void animateBackgroundColor(final View view,final long duration,@ColorInt final int colorStart,@ColorInt final int colorEnd){\n  if (DEBUG) {\n    Log.d(TAG,\"animateBackgroundColor() called with: \" + \"view = [\" + view + \"], duration = [\"+ duration+ \"], \"+ \"colorStart = [\"+ colorStart+ \"], colorEnd = [\"+ colorEnd+ \"]\");\n  }\n  final int[][] empty=new int[][]{new int[0]};\n  ValueAnimator viewPropertyAnimator=ValueAnimator.ofObject(new ArgbEvaluator(),colorStart,colorEnd);\n  viewPropertyAnimator.setInterpolator(new FastOutSlowInInterpolator());\n  viewPropertyAnimator.setDuration(duration);\n  viewPropertyAnimator.addUpdateListener(new ValueAnimator.AnimatorUpdateListener(){\n    @Override public void onAnimationUpdate(    final ValueAnimator animation){\n      ViewCompat.setBackgroundTintList(view,new ColorStateList(empty,new int[]{(int)animation.getAnimatedValue()}));\n    }\n  }\n);\n  viewPropertyAnimator.addListener(new AnimatorListenerAdapter(){\n    @Override public void onAnimationEnd(    final Animator animation){\n      ViewCompat.setBackgroundTintList(view,new ColorStateList(empty,new int[]{colorEnd}));\n    }\n    @Override public void onAnimationCancel(    final Animator animation){\n      onAnimationEnd(animation);\n    }\n  }\n);\n  viewPropertyAnimator.start();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 189,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,type]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 165,
        "startColumnNumber" : 51,
        "endLineNumber" : 165,
        "endColumnNumber" : 87
      },
      "nodeContext" : "ValueAnimator.AnimatorUpdateListener",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "ValueAnimator"
  } ],
  "positionList" : [ {
    "charLength" : 36,
    "startLineNumber" : 165,
    "startColumnNumber" : 51,
    "endLineNumber" : 165,
    "endColumnNumber" : 87
  } ],
  "layoutRelationDataList" : [ ]
}