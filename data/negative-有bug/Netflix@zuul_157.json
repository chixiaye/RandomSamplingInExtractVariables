{
  "id" : 157,
  "expression" : "channel",
  "projectName" : "Netflix@zuul",
  "commitID" : "f8ef3551d8dd57a512336315ec51bb6c0444c517",
  "filePath" : "/zuul-core/src/main/java/com/netflix/netty/common/Http1ConnectionCloseHandler.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "channel",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 104,
      "startColumnNumber" : 12,
      "endLineNumber" : 104,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 104,
        "startColumnNumber" : 12,
        "endLineNumber" : 104,
        "endColumnNumber" : 30
      },
      "nodeContext" : "channel.isActive()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1558,
        "startLineNumber" : 104,
        "startColumnNumber" : 8,
        "endLineNumber" : 134,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (channel.isActive()) {\n  final String channelId=channel.id().asShortText();\n  int gracefulCloseDelay=ConnectionCloseChannelAttributes.gracefulCloseDelay(channel);\n  ctx.executor().schedule(() -> {\n    if (channel.isActive()) {\n      if (requestInflight.get()) {\n        LOG.debug(\"gracefully: firing graceful_shutdown event to close connection, but request still inflight, so leaving. channel=\" + channelId);\n      }\n else {\n        LOG.debug(\"gracefully: firing graceful_shutdown event to close connection. channel=\" + channelId);\n        ctx.close(promise);\n      }\n    }\n else {\n      LOG.debug(\"gracefully: connection already closed. channel=\" + channelId);\n      promise.setSuccess();\n    }\n  }\n,gracefulCloseDelay,TimeUnit.SECONDS);\n}\n else {\n  promise.setSuccess();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 83,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1621,
        "startLineNumber" : 102,
        "startColumnNumber" : 4,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Channel channel=ctx.channel();\n  if (channel.isActive()) {\n    final String channelId=channel.id().asShortText();\n    int gracefulCloseDelay=ConnectionCloseChannelAttributes.gracefulCloseDelay(channel);\n    ctx.executor().schedule(() -> {\n      if (channel.isActive()) {\n        if (requestInflight.get()) {\n          LOG.debug(\"gracefully: firing graceful_shutdown event to close connection, but request still inflight, so leaving. channel=\" + channelId);\n        }\n else {\n          LOG.debug(\"gracefully: firing graceful_shutdown event to close connection. channel=\" + channelId);\n          ctx.close(promise);\n        }\n      }\n else {\n        LOG.debug(\"gracefully: connection already closed. channel=\" + channelId);\n        promise.setSuccess();\n      }\n    }\n,gracefulCloseDelay,TimeUnit.SECONDS);\n  }\n else {\n    promise.setSuccess();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1702,
        "startLineNumber" : 101,
        "startColumnNumber" : 4,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected void gracefully(ChannelHandlerContext ctx,ChannelPromise promise){\n  final Channel channel=ctx.channel();\n  if (channel.isActive()) {\n    final String channelId=channel.id().asShortText();\n    int gracefulCloseDelay=ConnectionCloseChannelAttributes.gracefulCloseDelay(channel);\n    ctx.executor().schedule(() -> {\n      if (channel.isActive()) {\n        if (requestInflight.get()) {\n          LOG.debug(\"gracefully: firing graceful_shutdown event to close connection, but request still inflight, so leaving. channel=\" + channelId);\n        }\n else {\n          LOG.debug(\"gracefully: firing graceful_shutdown event to close connection. channel=\" + channelId);\n          ctx.close(promise);\n        }\n      }\n else {\n        LOG.debug(\"gracefully: connection already closed. channel=\" + channelId);\n        promise.setSuccess();\n      }\n    }\n,gracefulCloseDelay,TimeUnit.SECONDS);\n  }\n else {\n    promise.setSuccess();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 104,
        "startColumnNumber" : 12,
        "endLineNumber" : 104,
        "endColumnNumber" : 30
      },
      "nodeContext" : "channel.isActive()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.netflix.netty.common.Channel"
  }, {
    "nodeContext" : "channel",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 105,
      "startColumnNumber" : 37,
      "endLineNumber" : 105,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 105,
        "startColumnNumber" : 37,
        "endLineNumber" : 105,
        "endColumnNumber" : 49
      },
      "nodeContext" : "channel.id()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 105,
        "startColumnNumber" : 37,
        "endLineNumber" : 105,
        "endColumnNumber" : 63
      },
      "nodeContext" : "channel.id().asShortText()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 105,
        "startColumnNumber" : 25,
        "endLineNumber" : 105,
        "endColumnNumber" : 63
      },
      "nodeContext" : "channelId=channel.id().asShortText()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 105,
        "startColumnNumber" : 12,
        "endLineNumber" : 105,
        "endColumnNumber" : 64
      },
      "nodeContext" : "final String channelId=channel.id().asShortText();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1475,
        "startLineNumber" : 104,
        "startColumnNumber" : 32,
        "endLineNumber" : 131,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final String channelId=channel.id().asShortText();\n  int gracefulCloseDelay=ConnectionCloseChannelAttributes.gracefulCloseDelay(channel);\n  ctx.executor().schedule(() -> {\n    if (channel.isActive()) {\n      if (requestInflight.get()) {\n        LOG.debug(\"gracefully: firing graceful_shutdown event to close connection, but request still inflight, so leaving. channel=\" + channelId);\n      }\n else {\n        LOG.debug(\"gracefully: firing graceful_shutdown event to close connection. channel=\" + channelId);\n        ctx.close(promise);\n      }\n    }\n else {\n      LOG.debug(\"gracefully: connection already closed. channel=\" + channelId);\n      promise.setSuccess();\n    }\n  }\n,gracefulCloseDelay,TimeUnit.SECONDS);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1558,
        "startLineNumber" : 104,
        "startColumnNumber" : 8,
        "endLineNumber" : 134,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (channel.isActive()) {\n  final String channelId=channel.id().asShortText();\n  int gracefulCloseDelay=ConnectionCloseChannelAttributes.gracefulCloseDelay(channel);\n  ctx.executor().schedule(() -> {\n    if (channel.isActive()) {\n      if (requestInflight.get()) {\n        LOG.debug(\"gracefully: firing graceful_shutdown event to close connection, but request still inflight, so leaving. channel=\" + channelId);\n      }\n else {\n        LOG.debug(\"gracefully: firing graceful_shutdown event to close connection. channel=\" + channelId);\n        ctx.close(promise);\n      }\n    }\n else {\n      LOG.debug(\"gracefully: connection already closed. channel=\" + channelId);\n      promise.setSuccess();\n    }\n  }\n,gracefulCloseDelay,TimeUnit.SECONDS);\n}\n else {\n  promise.setSuccess();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 83,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1621,
        "startLineNumber" : 102,
        "startColumnNumber" : 4,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Channel channel=ctx.channel();\n  if (channel.isActive()) {\n    final String channelId=channel.id().asShortText();\n    int gracefulCloseDelay=ConnectionCloseChannelAttributes.gracefulCloseDelay(channel);\n    ctx.executor().schedule(() -> {\n      if (channel.isActive()) {\n        if (requestInflight.get()) {\n          LOG.debug(\"gracefully: firing graceful_shutdown event to close connection, but request still inflight, so leaving. channel=\" + channelId);\n        }\n else {\n          LOG.debug(\"gracefully: firing graceful_shutdown event to close connection. channel=\" + channelId);\n          ctx.close(promise);\n        }\n      }\n else {\n        LOG.debug(\"gracefully: connection already closed. channel=\" + channelId);\n        promise.setSuccess();\n      }\n    }\n,gracefulCloseDelay,TimeUnit.SECONDS);\n  }\n else {\n    promise.setSuccess();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1702,
        "startLineNumber" : 101,
        "startColumnNumber" : 4,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected void gracefully(ChannelHandlerContext ctx,ChannelPromise promise){\n  final Channel channel=ctx.channel();\n  if (channel.isActive()) {\n    final String channelId=channel.id().asShortText();\n    int gracefulCloseDelay=ConnectionCloseChannelAttributes.gracefulCloseDelay(channel);\n    ctx.executor().schedule(() -> {\n      if (channel.isActive()) {\n        if (requestInflight.get()) {\n          LOG.debug(\"gracefully: firing graceful_shutdown event to close connection, but request still inflight, so leaving. channel=\" + channelId);\n        }\n else {\n          LOG.debug(\"gracefully: firing graceful_shutdown event to close connection. channel=\" + channelId);\n          ctx.close(promise);\n        }\n      }\n else {\n        LOG.debug(\"gracefully: connection already closed. channel=\" + channelId);\n        promise.setSuccess();\n      }\n    }\n,gracefulCloseDelay,TimeUnit.SECONDS);\n  }\n else {\n    promise.setSuccess();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 105,
        "startColumnNumber" : 12,
        "endLineNumber" : 105,
        "endColumnNumber" : 64
      },
      "nodeContext" : "final String channelId=channel.id().asShortText();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.netflix.netty.common.Channel"
  }, {
    "nodeContext" : "channel",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 108,
      "startColumnNumber" : 89,
      "endLineNumber" : 108,
      "endColumnNumber" : 96
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 108,
        "startColumnNumber" : 37,
        "endLineNumber" : 108,
        "endColumnNumber" : 97
      },
      "nodeContext" : "ConnectionCloseChannelAttributes.gracefulCloseDelay(channel)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 108,
        "startColumnNumber" : 16,
        "endLineNumber" : 108,
        "endColumnNumber" : 97
      },
      "nodeContext" : "gracefulCloseDelay=ConnectionCloseChannelAttributes.gracefulCloseDelay(channel)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 108,
        "startColumnNumber" : 12,
        "endLineNumber" : 108,
        "endColumnNumber" : 98
      },
      "nodeContext" : "int gracefulCloseDelay=ConnectionCloseChannelAttributes.gracefulCloseDelay(channel);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1475,
        "startLineNumber" : 104,
        "startColumnNumber" : 32,
        "endLineNumber" : 131,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final String channelId=channel.id().asShortText();\n  int gracefulCloseDelay=ConnectionCloseChannelAttributes.gracefulCloseDelay(channel);\n  ctx.executor().schedule(() -> {\n    if (channel.isActive()) {\n      if (requestInflight.get()) {\n        LOG.debug(\"gracefully: firing graceful_shutdown event to close connection, but request still inflight, so leaving. channel=\" + channelId);\n      }\n else {\n        LOG.debug(\"gracefully: firing graceful_shutdown event to close connection. channel=\" + channelId);\n        ctx.close(promise);\n      }\n    }\n else {\n      LOG.debug(\"gracefully: connection already closed. channel=\" + channelId);\n      promise.setSuccess();\n    }\n  }\n,gracefulCloseDelay,TimeUnit.SECONDS);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1558,
        "startLineNumber" : 104,
        "startColumnNumber" : 8,
        "endLineNumber" : 134,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (channel.isActive()) {\n  final String channelId=channel.id().asShortText();\n  int gracefulCloseDelay=ConnectionCloseChannelAttributes.gracefulCloseDelay(channel);\n  ctx.executor().schedule(() -> {\n    if (channel.isActive()) {\n      if (requestInflight.get()) {\n        LOG.debug(\"gracefully: firing graceful_shutdown event to close connection, but request still inflight, so leaving. channel=\" + channelId);\n      }\n else {\n        LOG.debug(\"gracefully: firing graceful_shutdown event to close connection. channel=\" + channelId);\n        ctx.close(promise);\n      }\n    }\n else {\n      LOG.debug(\"gracefully: connection already closed. channel=\" + channelId);\n      promise.setSuccess();\n    }\n  }\n,gracefulCloseDelay,TimeUnit.SECONDS);\n}\n else {\n  promise.setSuccess();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 83,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1621,
        "startLineNumber" : 102,
        "startColumnNumber" : 4,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Channel channel=ctx.channel();\n  if (channel.isActive()) {\n    final String channelId=channel.id().asShortText();\n    int gracefulCloseDelay=ConnectionCloseChannelAttributes.gracefulCloseDelay(channel);\n    ctx.executor().schedule(() -> {\n      if (channel.isActive()) {\n        if (requestInflight.get()) {\n          LOG.debug(\"gracefully: firing graceful_shutdown event to close connection, but request still inflight, so leaving. channel=\" + channelId);\n        }\n else {\n          LOG.debug(\"gracefully: firing graceful_shutdown event to close connection. channel=\" + channelId);\n          ctx.close(promise);\n        }\n      }\n else {\n        LOG.debug(\"gracefully: connection already closed. channel=\" + channelId);\n        promise.setSuccess();\n      }\n    }\n,gracefulCloseDelay,TimeUnit.SECONDS);\n  }\n else {\n    promise.setSuccess();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1702,
        "startLineNumber" : 101,
        "startColumnNumber" : 4,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected void gracefully(ChannelHandlerContext ctx,ChannelPromise promise){\n  final Channel channel=ctx.channel();\n  if (channel.isActive()) {\n    final String channelId=channel.id().asShortText();\n    int gracefulCloseDelay=ConnectionCloseChannelAttributes.gracefulCloseDelay(channel);\n    ctx.executor().schedule(() -> {\n      if (channel.isActive()) {\n        if (requestInflight.get()) {\n          LOG.debug(\"gracefully: firing graceful_shutdown event to close connection, but request still inflight, so leaving. channel=\" + channelId);\n        }\n else {\n          LOG.debug(\"gracefully: firing graceful_shutdown event to close connection. channel=\" + channelId);\n          ctx.close(promise);\n        }\n      }\n else {\n        LOG.debug(\"gracefully: connection already closed. channel=\" + channelId);\n        promise.setSuccess();\n      }\n    }\n,gracefulCloseDelay,TimeUnit.SECONDS);\n  }\n else {\n    promise.setSuccess();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 108,
        "startColumnNumber" : 12,
        "endLineNumber" : 108,
        "endColumnNumber" : 98
      },
      "nodeContext" : "int gracefulCloseDelay=ConnectionCloseChannelAttributes.gracefulCloseDelay(channel);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.netflix.netty.common.Channel"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 104,
    "startColumnNumber" : 12,
    "endLineNumber" : 104,
    "endColumnNumber" : 19
  }, {
    "charLength" : 7,
    "startLineNumber" : 105,
    "startColumnNumber" : 37,
    "endLineNumber" : 105,
    "endColumnNumber" : 44
  }, {
    "charLength" : 7,
    "startLineNumber" : 108,
    "startColumnNumber" : 89,
    "endLineNumber" : 108,
    "endColumnNumber" : 96
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}