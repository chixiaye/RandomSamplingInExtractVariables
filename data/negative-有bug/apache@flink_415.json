{
  "id" : 415,
  "expression" : "e",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-connectors/flink-connector-kinesis/src/test/java/org/apache/flink/streaming/connectors/kinesis/FlinkKinesisProducerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "e",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 143,
      "startColumnNumber" : 60,
      "endLineNumber" : 143,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 143,
        "startColumnNumber" : 20,
        "endLineNumber" : 143,
        "endColumnNumber" : 92
      },
      "nodeContext" : "ExceptionUtils.findThrowableWithMessage(e,\"artificial async exception\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 143,
        "startColumnNumber" : 20,
        "endLineNumber" : 144,
        "endColumnNumber" : 40
      },
      "nodeContext" : "ExceptionUtils.findThrowableWithMessage(e,\"artificial async exception\").isPresent()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 153,
        "startLineNumber" : 142,
        "startColumnNumber" : 12,
        "endLineNumber" : 144,
        "endColumnNumber" : 41
      },
      "nodeContext" : "Assert.assertTrue(ExceptionUtils.findThrowableWithMessage(e,\"artificial async exception\").isPresent())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 154,
        "startLineNumber" : 142,
        "startColumnNumber" : 12,
        "endLineNumber" : 144,
        "endColumnNumber" : 42
      },
      "nodeContext" : "Assert.assertTrue(ExceptionUtils.findThrowableWithMessage(e,\"artificial async exception\").isPresent());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 295,
        "startLineNumber" : 140,
        "startColumnNumber" : 30,
        "endLineNumber" : 148,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Assert.assertTrue(ExceptionUtils.findThrowableWithMessage(e,\"artificial async exception\").isPresent());\n  return;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 315,
        "startLineNumber" : 140,
        "startColumnNumber" : 10,
        "endLineNumber" : 148,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (Exception e) {\n  Assert.assertTrue(ExceptionUtils.findThrowableWithMessage(e,\"artificial async exception\").isPresent());\n  return;\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 400,
        "startLineNumber" : 138,
        "startColumnNumber" : 8,
        "endLineNumber" : 148,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  testHarness.processElement(new StreamRecord<>(\"msg-2\"));\n}\n catch (Exception e) {\n  Assert.assertTrue(ExceptionUtils.findThrowableWithMessage(e,\"artificial async exception\").isPresent());\n  return;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 29,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 972,
        "startLineNumber" : 123,
        "startColumnNumber" : 66,
        "endLineNumber" : 151,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final DummyFlinkKinesisProducer<String> producer=new DummyFlinkKinesisProducer<>(new SimpleStringSchema());\n  OneInputStreamOperatorTestHarness<String,Object> testHarness=new OneInputStreamOperatorTestHarness<>(new StreamSink<>(producer));\n  testHarness.open();\n  testHarness.processElement(new StreamRecord<>(\"msg-1\"));\n  producer.getPendingRecordFutures().get(0).setException(new Exception(\"artificial async exception\"));\n  try {\n    testHarness.processElement(new StreamRecord<>(\"msg-2\"));\n  }\n catch (  Exception e) {\n    Assert.assertTrue(ExceptionUtils.findThrowableWithMessage(e,\"artificial async exception\").isPresent());\n    return;\n  }\n  Assert.fail();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1235,
        "startLineNumber" : 117,
        "startColumnNumber" : 4,
        "endLineNumber" : 151,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Test ensuring that if an invoke call happens right after an async exception is caught, it should be rethrown.\n */\n@SuppressWarnings(\"ResultOfMethodCallIgnored\") @Test public void testAsyncErrorRethrownOnInvoke() throws Throwable {\n  final DummyFlinkKinesisProducer<String> producer=new DummyFlinkKinesisProducer<>(new SimpleStringSchema());\n  OneInputStreamOperatorTestHarness<String,Object> testHarness=new OneInputStreamOperatorTestHarness<>(new StreamSink<>(producer));\n  testHarness.open();\n  testHarness.processElement(new StreamRecord<>(\"msg-1\"));\n  producer.getPendingRecordFutures().get(0).setException(new Exception(\"artificial async exception\"));\n  try {\n    testHarness.processElement(new StreamRecord<>(\"msg-2\"));\n  }\n catch (  Exception e) {\n    Assert.assertTrue(ExceptionUtils.findThrowableWithMessage(e,\"artificial async exception\").isPresent());\n    return;\n  }\n  Assert.fail();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 107,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 143,
        "startColumnNumber" : 20,
        "endLineNumber" : 143,
        "endColumnNumber" : 92
      },
      "nodeContext" : "ExceptionUtils.findThrowableWithMessage(e,\"artificial async exception\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.Exception"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 143,
    "startColumnNumber" : 60,
    "endLineNumber" : 143,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ ]
}