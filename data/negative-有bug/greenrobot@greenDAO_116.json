{
  "id" : 116,
  "expression" : "getClass().getName()",
  "projectName" : "greenrobot@greenDAO",
  "commitID" : "bdaad7806db3e4db0ec5cc73835576e0aa9067a0",
  "filePath" : "/tests/DaoTest/src/androidTest/java/org/greenrobot/greendao/daotest/async/BasicAsyncTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "getClass().getName()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 134,
      "startColumnNumber" : 61,
      "endLineNumber" : 134,
      "endColumnNumber" : 81
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 134,
        "startColumnNumber" : 21,
        "endLineNumber" : 134,
        "endColumnNumber" : 82
      },
      "nodeContext" : "stackTraceElement.getClassName().equals(getClass().getName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 134,
        "startColumnNumber" : 12,
        "endLineNumber" : 134,
        "endColumnNumber" : 82
      },
      "nodeContext" : "found|=stackTraceElement.getClassName().equals(getClass().getName())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 134,
        "startColumnNumber" : 12,
        "endLineNumber" : 134,
        "endColumnNumber" : 83
      },
      "nodeContext" : "found|=stackTraceElement.getClassName().equals(getClass().getName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 133,
        "startColumnNumber" : 58,
        "endLineNumber" : 135,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  found|=stackTraceElement.getClassName().equals(getClass().getName());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 133,
        "startColumnNumber" : 8,
        "endLineNumber" : 135,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (StackTraceElement stackTraceElement : stack) {\n  found|=stackTraceElement.getClassName().equals(getClass().getName());\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 19,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 990,
        "startLineNumber" : 116,
        "startColumnNumber" : 44,
        "endLineNumber" : 137,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SimpleEntity entity=new SimpleEntity();\n  daoSession.insert(entity);\n  AsyncOperation operation=asyncSession.insert(entity);\n  assertWaitForCompletion1Sec();\n  assertNull(operation.getCreatorStacktrace());\n  operation=asyncSession.insert(entity,AsyncOperation.FLAG_TRACK_CREATOR_STACKTRACE);\n  assertWaitForCompletion1Sec();\n  assertNotNull(operation.getCreatorStacktrace());\n  asyncSession.setSessionFlags(AsyncOperation.FLAG_TRACK_CREATOR_STACKTRACE);\n  operation=asyncSession.insert(entity);\n  assertWaitForCompletion1Sec();\n  assertNotNull(operation.getCreatorStacktrace());\n  StackTraceElement[] stack=operation.getCreatorStacktrace().getStackTrace();\n  boolean found=false;\n  for (  StackTraceElement stackTraceElement : stack) {\n    found|=stackTraceElement.getClassName().equals(getClass().getName());\n  }\n  assertTrue(found);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1030,
        "startLineNumber" : 116,
        "startColumnNumber" : 4,
        "endLineNumber" : 137,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void testAsyncExceptionCreator(){\n  SimpleEntity entity=new SimpleEntity();\n  daoSession.insert(entity);\n  AsyncOperation operation=asyncSession.insert(entity);\n  assertWaitForCompletion1Sec();\n  assertNull(operation.getCreatorStacktrace());\n  operation=asyncSession.insert(entity,AsyncOperation.FLAG_TRACK_CREATOR_STACKTRACE);\n  assertWaitForCompletion1Sec();\n  assertNotNull(operation.getCreatorStacktrace());\n  asyncSession.setSessionFlags(AsyncOperation.FLAG_TRACK_CREATOR_STACKTRACE);\n  operation=asyncSession.insert(entity);\n  assertWaitForCompletion1Sec();\n  assertNotNull(operation.getCreatorStacktrace());\n  StackTraceElement[] stack=operation.getCreatorStacktrace().getStackTrace();\n  boolean found=false;\n  for (  StackTraceElement stackTraceElement : stack) {\n    found|=stackTraceElement.getClassName().equals(getClass().getName());\n  }\n  assertTrue(found);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 118,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 134,
        "startColumnNumber" : 12,
        "endLineNumber" : 134,
        "endColumnNumber" : 83
      },
      "nodeContext" : "found|=stackTraceElement.getClassName().equals(getClass().getName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 134,
    "startColumnNumber" : 61,
    "endLineNumber" : 134,
    "endColumnNumber" : 81
  } ],
  "layoutRelationDataList" : [ ]
}