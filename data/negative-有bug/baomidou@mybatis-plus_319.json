{
  "id" : 319,
  "expression" : "3",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "7815611a659da4cc8d5443f5ef4c10ca0d937582",
  "filePath" : "/mybatis-plus-support/src/main/java/com/baomidou/mybatisplus/toolkit/Sequence.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "3",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 161,
      "startColumnNumber" : 63,
      "endLineNumber" : 161,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 161,
        "startColumnNumber" : 23,
        "endLineNumber" : 161,
        "endColumnNumber" : 65
      },
      "nodeContext" : "ThreadLocalRandom.current().nextLong(1,3)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 161,
        "startColumnNumber" : 12,
        "endLineNumber" : 161,
        "endColumnNumber" : 65
      },
      "nodeContext" : "sequence=ThreadLocalRandom.current().nextLong(1,3)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 161,
        "startColumnNumber" : 12,
        "endLineNumber" : 161,
        "endColumnNumber" : 66
      },
      "nodeContext" : "sequence=ThreadLocalRandom.current().nextLong(1,3);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 159,
        "startColumnNumber" : 15,
        "endLineNumber" : 162,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  sequence=ThreadLocalRandom.current().nextLong(1,3);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 384,
        "startLineNumber" : 152,
        "startColumnNumber" : 8,
        "endLineNumber" : 162,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (lastTimestamp == timestamp) {\n  sequence=(sequence + 1) & sequenceMask;\n  if (sequence == 0) {\n    timestamp=tilNextMillis(lastTimestamp);\n  }\n}\n else {\n  sequence=ThreadLocalRandom.current().nextLong(1,3);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 36,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1502,
        "startLineNumber" : 133,
        "startColumnNumber" : 38,
        "endLineNumber" : 170,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long timestamp=timeGen();\n  if (timestamp < lastTimestamp) {\n    long offset=lastTimestamp - timestamp;\n    if (offset <= 5) {\n      try {\n        wait(offset << 1);\n        timestamp=timeGen();\n        if (timestamp < lastTimestamp) {\n          throw new RuntimeException(String.format(\"Clock moved backwards.  Refusing to generate id for %d milliseconds\",offset));\n        }\n      }\n catch (      Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n else {\n      throw new RuntimeException(String.format(\"Clock moved backwards.  Refusing to generate id for %d milliseconds\",offset));\n    }\n  }\n  if (lastTimestamp == timestamp) {\n    sequence=(sequence + 1) & sequenceMask;\n    if (sequence == 0) {\n      timestamp=tilNextMillis(lastTimestamp);\n    }\n  }\n else {\n    sequence=ThreadLocalRandom.current().nextLong(1,3);\n  }\n  lastTimestamp=timestamp;\n  return ((timestamp - twepoch) << timestampLeftShift) | (datacenterId << datacenterIdShift) | (workerId << workerIdShift)| sequence;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 130,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1589,
        "startLineNumber" : 128,
        "startColumnNumber" : 4,
        "endLineNumber" : 170,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * 获取下一个ID\n * @return\n */\npublic synchronized long nextId(){\n  long timestamp=timeGen();\n  if (timestamp < lastTimestamp) {\n    long offset=lastTimestamp - timestamp;\n    if (offset <= 5) {\n      try {\n        wait(offset << 1);\n        timestamp=timeGen();\n        if (timestamp < lastTimestamp) {\n          throw new RuntimeException(String.format(\"Clock moved backwards.  Refusing to generate id for %d milliseconds\",offset));\n        }\n      }\n catch (      Exception e) {\n        throw new RuntimeException(e);\n      }\n    }\n else {\n      throw new RuntimeException(String.format(\"Clock moved backwards.  Refusing to generate id for %d milliseconds\",offset));\n    }\n  }\n  if (lastTimestamp == timestamp) {\n    sequence=(sequence + 1) & sequenceMask;\n    if (sequence == 0) {\n      timestamp=tilNextMillis(lastTimestamp);\n    }\n  }\n else {\n    sequence=ThreadLocalRandom.current().nextLong(1,3);\n  }\n  lastTimestamp=timestamp;\n  return ((timestamp - twepoch) << timestampLeftShift) | (datacenterId << datacenterIdShift) | (workerId << workerIdShift)| sequence;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 136,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 161,
        "startColumnNumber" : 12,
        "endLineNumber" : 161,
        "endColumnNumber" : 66
      },
      "nodeContext" : "sequence=ThreadLocalRandom.current().nextLong(1,3);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 161,
    "startColumnNumber" : 63,
    "endLineNumber" : 161,
    "endColumnNumber" : 64
  } ],
  "layoutRelationDataList" : [ ]
}