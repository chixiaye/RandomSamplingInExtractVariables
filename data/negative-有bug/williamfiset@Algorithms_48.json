{
  "id" : 48,
  "expression" : "from >= n",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/utils/graphutils/Utils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "from >= n",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 29,
      "startColumnNumber" : 20,
      "endLineNumber" : 29,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 29,
        "startColumnNumber" : 8,
        "endLineNumber" : 29,
        "endColumnNumber" : 29
      },
      "nodeContext" : "from < 0 || from >= n",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 30,
        "endColumnNumber" : 95
      },
      "nodeContext" : "if (from < 0 || from >= n) throw new IllegalArgumentException(\"'from' node index out of bounds; received: \" + from);\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 389,
        "startLineNumber" : 26,
        "startColumnNumber" : 82,
        "endLineNumber" : 34,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (graph == null)   throw new IllegalArgumentException(\"graph cannot be null\");\n  int n=graph.size();\n  if (from < 0 || from >= n)   throw new IllegalArgumentException(\"'from' node index out of bounds; received: \" + from);\n  if (to < 0 || to >= n)   throw new IllegalArgumentException(\"'to' node index out of bounds; received: \" + to);\n  graph.get(from).add(to);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 568,
        "startLineNumber" : 25,
        "startColumnNumber" : 2,
        "endLineNumber" : 34,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Adds an unweighted directed edge from the node at index 'from' to the node at index 'to'. \n */\npublic static void addDirectedEdge(List<List<Integer>> graph,int from,int to){\n  if (graph == null)   throw new IllegalArgumentException(\"graph cannot be null\");\n  int n=graph.size();\n  if (from < 0 || from >= n)   throw new IllegalArgumentException(\"'from' node index out of bounds; received: \" + from);\n  if (to < 0 || to >= n)   throw new IllegalArgumentException(\"'to' node index out of bounds; received: \" + to);\n  graph.get(from).add(to);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 77,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 29,
        "startColumnNumber" : 8,
        "endLineNumber" : 29,
        "endColumnNumber" : 29
      },
      "nodeContext" : "from < 0 || from >= n",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 29,
    "startColumnNumber" : 20,
    "endLineNumber" : 29,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ ]
}