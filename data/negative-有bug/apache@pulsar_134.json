{
  "id" : 134,
  "expression" : "ts",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-common/src/main/java/org/apache/pulsar/common/policies/data/stats/TopicStatsImpl.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ts",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 165,
      "startColumnNumber" : 48,
      "endLineNumber" : 165,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 165,
        "startColumnNumber" : 31,
        "endLineNumber" : 165,
        "endColumnNumber" : 50
      },
      "nodeContext" : "(TopicStatsImpl)ts",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 165,
        "startColumnNumber" : 23,
        "endLineNumber" : 165,
        "endColumnNumber" : 50
      },
      "nodeContext" : "stats=(TopicStatsImpl)ts",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 165,
        "startColumnNumber" : 8,
        "endLineNumber" : 165,
        "endColumnNumber" : 51
      },
      "nodeContext" : "TopicStatsImpl stats=(TopicStatsImpl)ts;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3236,
        "startLineNumber" : 164,
        "startColumnNumber" : 45,
        "endLineNumber" : 225,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TopicStatsImpl stats=(TopicStatsImpl)ts;\n  this.count++;\n  this.msgRateIn+=stats.msgRateIn;\n  this.msgThroughputIn+=stats.msgThroughputIn;\n  this.msgRateOut+=stats.msgRateOut;\n  this.msgThroughputOut+=stats.msgThroughputOut;\n  this.bytesInCounter+=stats.bytesInCounter;\n  this.msgInCounter+=stats.msgInCounter;\n  this.bytesOutCounter+=stats.bytesOutCounter;\n  this.msgOutCounter+=stats.msgOutCounter;\n  this.waitingPublishers+=stats.waitingPublishers;\n  double newAverageMsgSize=(this.averageMsgSize * (this.count - 1) + stats.averageMsgSize) / this.count;\n  this.averageMsgSize=newAverageMsgSize;\n  this.storageSize+=stats.storageSize;\n  this.backlogSize+=stats.backlogSize;\n  this.offloadedStorageSize+=stats.offloadedStorageSize;\n  this.nonContiguousDeletedMessagesRanges+=stats.nonContiguousDeletedMessagesRanges;\n  this.nonContiguousDeletedMessagesRangesSerializedSize+=stats.nonContiguousDeletedMessagesRangesSerializedSize;\n  if (this.publishers.size() != stats.publishers.size()) {\n    for (int i=0; i < stats.publishers.size(); i++) {\n      PublisherStatsImpl publisherStats=new PublisherStatsImpl();\n      this.publishers.add(publisherStats.add(stats.publishers.get(i)));\n    }\n  }\n else {\n    for (int i=0; i < stats.publishers.size(); i++) {\n      this.publishers.get(i).add(stats.publishers.get(i));\n    }\n  }\n  if (this.subscriptions.size() != stats.subscriptions.size()) {\n    for (    String subscription : stats.subscriptions.keySet()) {\n      SubscriptionStatsImpl subscriptionStats=new SubscriptionStatsImpl();\n      this.subscriptions.put(subscription,subscriptionStats.add(stats.subscriptions.get(subscription)));\n    }\n  }\n else {\n    for (    String subscription : stats.subscriptions.keySet()) {\n      if (this.subscriptions.get(subscription) != null) {\n        this.subscriptions.get(subscription).add(stats.subscriptions.get(subscription));\n      }\n else {\n        SubscriptionStatsImpl subscriptionStats=new SubscriptionStatsImpl();\n        this.subscriptions.put(subscription,subscriptionStats.add(stats.subscriptions.get(subscription)));\n      }\n    }\n  }\n  if (this.replication.size() != stats.replication.size()) {\n    for (    String repl : stats.replication.keySet()) {\n      ReplicatorStatsImpl replStats=new ReplicatorStatsImpl();\n      this.replication.put(repl,replStats.add(stats.replication.get(repl)));\n    }\n  }\n else {\n    for (    String repl : stats.replication.keySet()) {\n      if (this.replication.get(repl) != null) {\n        this.replication.get(repl).add(stats.replication.get(repl));\n      }\n else {\n        ReplicatorStatsImpl replStats=new ReplicatorStatsImpl();\n        this.replication.put(repl,replStats.add(stats.replication.get(repl)));\n      }\n    }\n  }\n  return this;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 462,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3277,
        "startLineNumber" : 164,
        "startColumnNumber" : 4,
        "endLineNumber" : 225,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public TopicStatsImpl add(TopicStats ts){\n  TopicStatsImpl stats=(TopicStatsImpl)ts;\n  this.count++;\n  this.msgRateIn+=stats.msgRateIn;\n  this.msgThroughputIn+=stats.msgThroughputIn;\n  this.msgRateOut+=stats.msgRateOut;\n  this.msgThroughputOut+=stats.msgThroughputOut;\n  this.bytesInCounter+=stats.bytesInCounter;\n  this.msgInCounter+=stats.msgInCounter;\n  this.bytesOutCounter+=stats.bytesOutCounter;\n  this.msgOutCounter+=stats.msgOutCounter;\n  this.waitingPublishers+=stats.waitingPublishers;\n  double newAverageMsgSize=(this.averageMsgSize * (this.count - 1) + stats.averageMsgSize) / this.count;\n  this.averageMsgSize=newAverageMsgSize;\n  this.storageSize+=stats.storageSize;\n  this.backlogSize+=stats.backlogSize;\n  this.offloadedStorageSize+=stats.offloadedStorageSize;\n  this.nonContiguousDeletedMessagesRanges+=stats.nonContiguousDeletedMessagesRanges;\n  this.nonContiguousDeletedMessagesRangesSerializedSize+=stats.nonContiguousDeletedMessagesRangesSerializedSize;\n  if (this.publishers.size() != stats.publishers.size()) {\n    for (int i=0; i < stats.publishers.size(); i++) {\n      PublisherStatsImpl publisherStats=new PublisherStatsImpl();\n      this.publishers.add(publisherStats.add(stats.publishers.get(i)));\n    }\n  }\n else {\n    for (int i=0; i < stats.publishers.size(); i++) {\n      this.publishers.get(i).add(stats.publishers.get(i));\n    }\n  }\n  if (this.subscriptions.size() != stats.subscriptions.size()) {\n    for (    String subscription : stats.subscriptions.keySet()) {\n      SubscriptionStatsImpl subscriptionStats=new SubscriptionStatsImpl();\n      this.subscriptions.put(subscription,subscriptionStats.add(stats.subscriptions.get(subscription)));\n    }\n  }\n else {\n    for (    String subscription : stats.subscriptions.keySet()) {\n      if (this.subscriptions.get(subscription) != null) {\n        this.subscriptions.get(subscription).add(stats.subscriptions.get(subscription));\n      }\n else {\n        SubscriptionStatsImpl subscriptionStats=new SubscriptionStatsImpl();\n        this.subscriptions.put(subscription,subscriptionStats.add(stats.subscriptions.get(subscription)));\n      }\n    }\n  }\n  if (this.replication.size() != stats.replication.size()) {\n    for (    String repl : stats.replication.keySet()) {\n      ReplicatorStatsImpl replStats=new ReplicatorStatsImpl();\n      this.replication.put(repl,replStats.add(stats.replication.get(repl)));\n    }\n  }\n else {\n    for (    String repl : stats.replication.keySet()) {\n      if (this.replication.get(repl) != null) {\n        this.replication.get(repl).add(stats.replication.get(repl));\n      }\n else {\n        ReplicatorStatsImpl replStats=new ReplicatorStatsImpl();\n        this.replication.put(repl,replStats.add(stats.replication.get(repl)));\n      }\n    }\n  }\n  return this;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 471,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 165,
        "startColumnNumber" : 8,
        "endLineNumber" : 165,
        "endColumnNumber" : 51
      },
      "nodeContext" : "TopicStatsImpl stats=(TopicStatsImpl)ts;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.pulsar.common.policies.data.TopicStats"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 165,
    "startColumnNumber" : 48,
    "endLineNumber" : 165,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ ]
}