{
  "id" : 79,
  "expression" : "getClass()",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/core/src/test/java/jenkins/plugins/DetachedPluginsUtilTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "getClass()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 56,
      "startColumnNumber" : 65,
      "endLineNumber" : 56,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 56,
        "startColumnNumber" : 65,
        "endLineNumber" : 56,
        "endColumnNumber" : 125
      },
      "nodeContext" : "getClass().getResourceAsStream(\"/jenkins/split-plugins.txt\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 56,
        "startColumnNumber" : 47,
        "endLineNumber" : 56,
        "endColumnNumber" : 150
      },
      "nodeContext" : "IOUtils.readLines(getClass().getResourceAsStream(\"/jenkins/split-plugins.txt\"),StandardCharsets.UTF_8)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 56,
        "startColumnNumber" : 27,
        "endLineNumber" : 56,
        "endColumnNumber" : 150
      },
      "nodeContext" : "splitPluginsLines=IOUtils.readLines(getClass().getResourceAsStream(\"/jenkins/split-plugins.txt\"),StandardCharsets.UTF_8)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 143,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 151
      },
      "nodeContext" : "final List<String> splitPluginsLines=IOUtils.readLines(getClass().getResourceAsStream(\"/jenkins/split-plugins.txt\"),StandardCharsets.UTF_8);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 963,
        "startLineNumber" : 55,
        "startColumnNumber" : 65,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final List<String> splitPluginsLines=IOUtils.readLines(getClass().getResourceAsStream(\"/jenkins/split-plugins.txt\"),StandardCharsets.UTF_8);\n  assertFalse(splitPluginsLines.isEmpty());\n  final List<String> linesWithoutComments=splitPluginsLines.stream().filter(line -> !line.startsWith(\"#\")).collect(Collectors.toList());\n  assertFalse(\"weird, split-plugins.txt only has comments?\",linesWithoutComments.isEmpty());\n  assertFalse(\"no whitespaces only lines allowed\",linesWithoutComments.stream().filter(line -> line.trim().isEmpty()).anyMatch(line -> !line.isEmpty()));\n  assertTrue(\"max 4 columns is supported\",linesWithoutComments.stream().map(line -> line.split(\" \")).noneMatch(line -> line.length > 4));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1149,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Checks the format of the  {@code /jenkins/split-plugins.txt} file has maximum 4 columns.\n */\n@Test public void checkSplitPluginsFileFormat() throws IOException {\n  final List<String> splitPluginsLines=IOUtils.readLines(getClass().getResourceAsStream(\"/jenkins/split-plugins.txt\"),StandardCharsets.UTF_8);\n  assertFalse(splitPluginsLines.isEmpty());\n  final List<String> linesWithoutComments=splitPluginsLines.stream().filter(line -> !line.startsWith(\"#\")).collect(Collectors.toList());\n  assertFalse(\"weird, split-plugins.txt only has comments?\",linesWithoutComments.isEmpty());\n  assertFalse(\"no whitespaces only lines allowed\",linesWithoutComments.stream().filter(line -> line.trim().isEmpty()).anyMatch(line -> !line.isEmpty()));\n  assertTrue(\"max 4 columns is supported\",linesWithoutComments.stream().map(line -> line.split(\" \")).noneMatch(line -> line.length > 4));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 143,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 151
      },
      "nodeContext" : "final List<String> splitPluginsLines=IOUtils.readLines(getClass().getResourceAsStream(\"/jenkins/split-plugins.txt\"),StandardCharsets.UTF_8);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<>"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 56,
    "startColumnNumber" : 65,
    "endLineNumber" : 56,
    "endColumnNumber" : 75
  } ],
  "layoutRelationDataList" : [ ]
}