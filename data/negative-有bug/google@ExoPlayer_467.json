{
  "id" : 467,
  "expression" : "chunkExtractors",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/smoothstreaming/src/main/java/com/google/android/exoplayer2/source/smoothstreaming/DefaultSsChunkSource.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "chunkExtractors",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 109,
      "startColumnNumber" : 24,
      "endLineNumber" : 109,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 109,
        "startColumnNumber" : 24,
        "endLineNumber" : 109,
        "endColumnNumber" : 46
      },
      "nodeContext" : "chunkExtractors.length",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 109,
        "startColumnNumber" : 20,
        "endLineNumber" : 109,
        "endColumnNumber" : 46
      },
      "nodeContext" : "i < chunkExtractors.length",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1284,
        "startLineNumber" : 109,
        "startColumnNumber" : 4,
        "endLineNumber" : 138,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < chunkExtractors.length; i++) {\n  int manifestTrackIndex=trackSelection.getIndexInTrackGroup(i);\n  Format format=streamElement.formats[manifestTrackIndex];\n  @Nullable TrackEncryptionBox[] trackEncryptionBoxes=format.drmInitData != null ? Assertions.checkNotNull(manifest.protectionElement).trackEncryptionBoxes : null;\n  int nalUnitLengthFieldLength=streamElement.type == C.TRACK_TYPE_VIDEO ? 4 : 0;\n  Track track=new Track(manifestTrackIndex,streamElement.type,streamElement.timescale,C.TIME_UNSET,manifest.durationUs,format,Track.TRANSFORMATION_NONE,trackEncryptionBoxes,nalUnitLengthFieldLength,null,null);\n  FragmentedMp4Extractor extractor=new FragmentedMp4Extractor(FragmentedMp4Extractor.FLAG_WORKAROUND_EVERY_VIDEO_FRAME_IS_SYNC_FRAME | FragmentedMp4Extractor.FLAG_WORKAROUND_IGNORE_TFDT_BOX,null,track);\n  chunkExtractors[i]=new BundledChunkExtractor(extractor,streamElement.type,format);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 129,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1663,
        "startLineNumber" : 100,
        "startColumnNumber" : 29,
        "endLineNumber" : 139,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  this.manifestLoaderErrorThrower=manifestLoaderErrorThrower;\n  this.manifest=manifest;\n  this.streamElementIndex=streamElementIndex;\n  this.trackSelection=trackSelection;\n  this.dataSource=dataSource;\n  StreamElement streamElement=manifest.streamElements[streamElementIndex];\n  chunkExtractors=new ChunkExtractor[trackSelection.length()];\n  for (int i=0; i < chunkExtractors.length; i++) {\n    int manifestTrackIndex=trackSelection.getIndexInTrackGroup(i);\n    Format format=streamElement.formats[manifestTrackIndex];\n    @Nullable TrackEncryptionBox[] trackEncryptionBoxes=format.drmInitData != null ? Assertions.checkNotNull(manifest.protectionElement).trackEncryptionBoxes : null;\n    int nalUnitLengthFieldLength=streamElement.type == C.TRACK_TYPE_VIDEO ? 4 : 0;\n    Track track=new Track(manifestTrackIndex,streamElement.type,streamElement.timescale,C.TIME_UNSET,manifest.durationUs,format,Track.TRANSFORMATION_NONE,trackEncryptionBoxes,nalUnitLengthFieldLength,null,null);\n    FragmentedMp4Extractor extractor=new FragmentedMp4Extractor(FragmentedMp4Extractor.FLAG_WORKAROUND_EVERY_VIDEO_FRAME_IS_SYNC_FRAME | FragmentedMp4Extractor.FLAG_WORKAROUND_IGNORE_TFDT_BOX,null,track);\n    chunkExtractors[i]=new BundledChunkExtractor(extractor,streamElement.type,format);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 181,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2220,
        "startLineNumber" : 88,
        "startColumnNumber" : 2,
        "endLineNumber" : 139,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * @param manifestLoaderErrorThrower Throws errors affecting loading of manifests.\n * @param manifest The initial manifest.\n * @param streamElementIndex The index of the stream element in the manifest.\n * @param trackSelection The track selection.\n * @param dataSource A {@link DataSource} suitable for loading the media data.\n */\npublic DefaultSsChunkSource(LoaderErrorThrower manifestLoaderErrorThrower,SsManifest manifest,int streamElementIndex,ExoTrackSelection trackSelection,DataSource dataSource){\n  this.manifestLoaderErrorThrower=manifestLoaderErrorThrower;\n  this.manifest=manifest;\n  this.streamElementIndex=streamElementIndex;\n  this.trackSelection=trackSelection;\n  this.dataSource=dataSource;\n  StreamElement streamElement=manifest.streamElements[streamElementIndex];\n  chunkExtractors=new ChunkExtractor[trackSelection.length()];\n  for (int i=0; i < chunkExtractors.length; i++) {\n    int manifestTrackIndex=trackSelection.getIndexInTrackGroup(i);\n    Format format=streamElement.formats[manifestTrackIndex];\n    @Nullable TrackEncryptionBox[] trackEncryptionBoxes=format.drmInitData != null ? Assertions.checkNotNull(manifest.protectionElement).trackEncryptionBoxes : null;\n    int nalUnitLengthFieldLength=streamElement.type == C.TRACK_TYPE_VIDEO ? 4 : 0;\n    Track track=new Track(manifestTrackIndex,streamElement.type,streamElement.timescale,C.TIME_UNSET,manifest.durationUs,format,Track.TRANSFORMATION_NONE,trackEncryptionBoxes,nalUnitLengthFieldLength,null,null);\n    FragmentedMp4Extractor extractor=new FragmentedMp4Extractor(FragmentedMp4Extractor.FLAG_WORKAROUND_EVERY_VIDEO_FRAME_IS_SYNC_FRAME | FragmentedMp4Extractor.FLAG_WORKAROUND_IGNORE_TFDT_BOX,null,track);\n    chunkExtractors[i]=new BundledChunkExtractor(extractor,streamElement.type,format);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 204,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 109,
        "startColumnNumber" : 20,
        "endLineNumber" : 109,
        "endColumnNumber" : 46
      },
      "nodeContext" : "i < chunkExtractors.length",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.google.android.exoplayer2.source.chunk.ChunkExtractor[]"
  }, {
    "nodeContext" : "chunkExtractors",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 137,
      "startColumnNumber" : 6,
      "endLineNumber" : 137,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 137,
        "startColumnNumber" : 6,
        "endLineNumber" : 137,
        "endColumnNumber" : 24
      },
      "nodeContext" : "chunkExtractors[i]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 137,
        "startColumnNumber" : 6,
        "endLineNumber" : 137,
        "endColumnNumber" : 91
      },
      "nodeContext" : "chunkExtractors[i]=new BundledChunkExtractor(extractor,streamElement.type,format)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 137,
        "startColumnNumber" : 6,
        "endLineNumber" : 137,
        "endColumnNumber" : 92
      },
      "nodeContext" : "chunkExtractors[i]=new BundledChunkExtractor(extractor,streamElement.type,format);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1235,
        "startLineNumber" : 109,
        "startColumnNumber" : 53,
        "endLineNumber" : 138,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int manifestTrackIndex=trackSelection.getIndexInTrackGroup(i);\n  Format format=streamElement.formats[manifestTrackIndex];\n  @Nullable TrackEncryptionBox[] trackEncryptionBoxes=format.drmInitData != null ? Assertions.checkNotNull(manifest.protectionElement).trackEncryptionBoxes : null;\n  int nalUnitLengthFieldLength=streamElement.type == C.TRACK_TYPE_VIDEO ? 4 : 0;\n  Track track=new Track(manifestTrackIndex,streamElement.type,streamElement.timescale,C.TIME_UNSET,manifest.durationUs,format,Track.TRANSFORMATION_NONE,trackEncryptionBoxes,nalUnitLengthFieldLength,null,null);\n  FragmentedMp4Extractor extractor=new FragmentedMp4Extractor(FragmentedMp4Extractor.FLAG_WORKAROUND_EVERY_VIDEO_FRAME_IS_SYNC_FRAME | FragmentedMp4Extractor.FLAG_WORKAROUND_IGNORE_TFDT_BOX,null,track);\n  chunkExtractors[i]=new BundledChunkExtractor(extractor,streamElement.type,format);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 116,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1284,
        "startLineNumber" : 109,
        "startColumnNumber" : 4,
        "endLineNumber" : 138,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < chunkExtractors.length; i++) {\n  int manifestTrackIndex=trackSelection.getIndexInTrackGroup(i);\n  Format format=streamElement.formats[manifestTrackIndex];\n  @Nullable TrackEncryptionBox[] trackEncryptionBoxes=format.drmInitData != null ? Assertions.checkNotNull(manifest.protectionElement).trackEncryptionBoxes : null;\n  int nalUnitLengthFieldLength=streamElement.type == C.TRACK_TYPE_VIDEO ? 4 : 0;\n  Track track=new Track(manifestTrackIndex,streamElement.type,streamElement.timescale,C.TIME_UNSET,manifest.durationUs,format,Track.TRANSFORMATION_NONE,trackEncryptionBoxes,nalUnitLengthFieldLength,null,null);\n  FragmentedMp4Extractor extractor=new FragmentedMp4Extractor(FragmentedMp4Extractor.FLAG_WORKAROUND_EVERY_VIDEO_FRAME_IS_SYNC_FRAME | FragmentedMp4Extractor.FLAG_WORKAROUND_IGNORE_TFDT_BOX,null,track);\n  chunkExtractors[i]=new BundledChunkExtractor(extractor,streamElement.type,format);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 129,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1663,
        "startLineNumber" : 100,
        "startColumnNumber" : 29,
        "endLineNumber" : 139,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  this.manifestLoaderErrorThrower=manifestLoaderErrorThrower;\n  this.manifest=manifest;\n  this.streamElementIndex=streamElementIndex;\n  this.trackSelection=trackSelection;\n  this.dataSource=dataSource;\n  StreamElement streamElement=manifest.streamElements[streamElementIndex];\n  chunkExtractors=new ChunkExtractor[trackSelection.length()];\n  for (int i=0; i < chunkExtractors.length; i++) {\n    int manifestTrackIndex=trackSelection.getIndexInTrackGroup(i);\n    Format format=streamElement.formats[manifestTrackIndex];\n    @Nullable TrackEncryptionBox[] trackEncryptionBoxes=format.drmInitData != null ? Assertions.checkNotNull(manifest.protectionElement).trackEncryptionBoxes : null;\n    int nalUnitLengthFieldLength=streamElement.type == C.TRACK_TYPE_VIDEO ? 4 : 0;\n    Track track=new Track(manifestTrackIndex,streamElement.type,streamElement.timescale,C.TIME_UNSET,manifest.durationUs,format,Track.TRANSFORMATION_NONE,trackEncryptionBoxes,nalUnitLengthFieldLength,null,null);\n    FragmentedMp4Extractor extractor=new FragmentedMp4Extractor(FragmentedMp4Extractor.FLAG_WORKAROUND_EVERY_VIDEO_FRAME_IS_SYNC_FRAME | FragmentedMp4Extractor.FLAG_WORKAROUND_IGNORE_TFDT_BOX,null,track);\n    chunkExtractors[i]=new BundledChunkExtractor(extractor,streamElement.type,format);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 181,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2220,
        "startLineNumber" : 88,
        "startColumnNumber" : 2,
        "endLineNumber" : 139,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * @param manifestLoaderErrorThrower Throws errors affecting loading of manifests.\n * @param manifest The initial manifest.\n * @param streamElementIndex The index of the stream element in the manifest.\n * @param trackSelection The track selection.\n * @param dataSource A {@link DataSource} suitable for loading the media data.\n */\npublic DefaultSsChunkSource(LoaderErrorThrower manifestLoaderErrorThrower,SsManifest manifest,int streamElementIndex,ExoTrackSelection trackSelection,DataSource dataSource){\n  this.manifestLoaderErrorThrower=manifestLoaderErrorThrower;\n  this.manifest=manifest;\n  this.streamElementIndex=streamElementIndex;\n  this.trackSelection=trackSelection;\n  this.dataSource=dataSource;\n  StreamElement streamElement=manifest.streamElements[streamElementIndex];\n  chunkExtractors=new ChunkExtractor[trackSelection.length()];\n  for (int i=0; i < chunkExtractors.length; i++) {\n    int manifestTrackIndex=trackSelection.getIndexInTrackGroup(i);\n    Format format=streamElement.formats[manifestTrackIndex];\n    @Nullable TrackEncryptionBox[] trackEncryptionBoxes=format.drmInitData != null ? Assertions.checkNotNull(manifest.protectionElement).trackEncryptionBoxes : null;\n    int nalUnitLengthFieldLength=streamElement.type == C.TRACK_TYPE_VIDEO ? 4 : 0;\n    Track track=new Track(manifestTrackIndex,streamElement.type,streamElement.timescale,C.TIME_UNSET,manifest.durationUs,format,Track.TRANSFORMATION_NONE,trackEncryptionBoxes,nalUnitLengthFieldLength,null,null);\n    FragmentedMp4Extractor extractor=new FragmentedMp4Extractor(FragmentedMp4Extractor.FLAG_WORKAROUND_EVERY_VIDEO_FRAME_IS_SYNC_FRAME | FragmentedMp4Extractor.FLAG_WORKAROUND_IGNORE_TFDT_BOX,null,track);\n    chunkExtractors[i]=new BundledChunkExtractor(extractor,streamElement.type,format);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 204,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 137,
        "startColumnNumber" : 6,
        "endLineNumber" : 137,
        "endColumnNumber" : 92
      },
      "nodeContext" : "chunkExtractors[i]=new BundledChunkExtractor(extractor,streamElement.type,format);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.google.android.exoplayer2.source.chunk.ChunkExtractor[]"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 109,
    "startColumnNumber" : 24,
    "endLineNumber" : 109,
    "endColumnNumber" : 39
  }, {
    "charLength" : 15,
    "startLineNumber" : 137,
    "startColumnNumber" : 6,
    "endLineNumber" : 137,
    "endColumnNumber" : 21
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}