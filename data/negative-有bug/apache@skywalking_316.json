{
  "id" : 316,
  "expression" : "httpStatus",
  "projectName" : "apache@skywalking",
  "commitID" : "16b51d55baec4f779f312e07081d1397addbcfe9",
  "filePath" : "/apm-sniffer/apm-sdk-plugin/spring-plugins/mvc-annotation-5.x-plugin/src/main/java/org/apache/skywalking/apm/plugin/spring/mvc/v5/InvokeInterceptor.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "httpStatus",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 66,
      "startColumnNumber" : 16,
      "endLineNumber" : 66,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 66,
        "startColumnNumber" : 16,
        "endLineNumber" : 66,
        "endColumnNumber" : 34
      },
      "nodeContext" : "httpStatus != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 66,
        "startColumnNumber" : 16,
        "endLineNumber" : 66,
        "endColumnNumber" : 58
      },
      "nodeContext" : "httpStatus != null && httpStatus.isError()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 183,
        "startLineNumber" : 66,
        "startColumnNumber" : 12,
        "endLineNumber" : 69,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (httpStatus != null && httpStatus.isError()) {\n  span.errorOccurred();\n  Tags.STATUS_CODE.set(span,Integer.toString(httpStatus.value()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 557,
        "startLineNumber" : 59,
        "startColumnNumber" : 43,
        "endLineNumber" : 71,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ReactiveResponseHolder responseHolder=(ReactiveResponseHolder)objInst.getSkyWalkingDynamicField();\n  AbstractSpan span=responseHolder.getSpan();\n  if (span == null) {\n    return;\n  }\n  HttpStatus httpStatus=exchange.getResponse().getStatusCode();\n  if (httpStatus != null && httpStatus.isError()) {\n    span.errorOccurred();\n    Tags.STATUS_CODE.set(span,Integer.toString(httpStatus.value()));\n  }\n  span.asyncFinish();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 562,
        "startLineNumber" : 59,
        "startColumnNumber" : 38,
        "endLineNumber" : 71,
        "endColumnNumber" : 9
      },
      "nodeContext" : "s -> {\n  ReactiveResponseHolder responseHolder=(ReactiveResponseHolder)objInst.getSkyWalkingDynamicField();\n  AbstractSpan span=responseHolder.getSpan();\n  if (span == null) {\n    return;\n  }\n  HttpStatus httpStatus=exchange.getResponse().getStatusCode();\n  if (httpStatus != null && httpStatus.isError()) {\n    span.errorOccurred();\n    Tags.STATUS_CODE.set(span,Integer.toString(httpStatus.value()));\n  }\n  span.asyncFinish();\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 69,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 66,
        "startColumnNumber" : 16,
        "endLineNumber" : 66,
        "endColumnNumber" : 58
      },
      "nodeContext" : "httpStatus != null && httpStatus.isError()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "httpStatus",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 66,
      "startColumnNumber" : 38,
      "endLineNumber" : 66,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 66,
        "startColumnNumber" : 38,
        "endLineNumber" : 66,
        "endColumnNumber" : 58
      },
      "nodeContext" : "httpStatus.isError()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 66,
        "startColumnNumber" : 16,
        "endLineNumber" : 66,
        "endColumnNumber" : 58
      },
      "nodeContext" : "httpStatus != null && httpStatus.isError()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 183,
        "startLineNumber" : 66,
        "startColumnNumber" : 12,
        "endLineNumber" : 69,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (httpStatus != null && httpStatus.isError()) {\n  span.errorOccurred();\n  Tags.STATUS_CODE.set(span,Integer.toString(httpStatus.value()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 557,
        "startLineNumber" : 59,
        "startColumnNumber" : 43,
        "endLineNumber" : 71,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ReactiveResponseHolder responseHolder=(ReactiveResponseHolder)objInst.getSkyWalkingDynamicField();\n  AbstractSpan span=responseHolder.getSpan();\n  if (span == null) {\n    return;\n  }\n  HttpStatus httpStatus=exchange.getResponse().getStatusCode();\n  if (httpStatus != null && httpStatus.isError()) {\n    span.errorOccurred();\n    Tags.STATUS_CODE.set(span,Integer.toString(httpStatus.value()));\n  }\n  span.asyncFinish();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 562,
        "startLineNumber" : 59,
        "startColumnNumber" : 38,
        "endLineNumber" : 71,
        "endColumnNumber" : 9
      },
      "nodeContext" : "s -> {\n  ReactiveResponseHolder responseHolder=(ReactiveResponseHolder)objInst.getSkyWalkingDynamicField();\n  AbstractSpan span=responseHolder.getSpan();\n  if (span == null) {\n    return;\n  }\n  HttpStatus httpStatus=exchange.getResponse().getStatusCode();\n  if (httpStatus != null && httpStatus.isError()) {\n    span.errorOccurred();\n    Tags.STATUS_CODE.set(span,Integer.toString(httpStatus.value()));\n  }\n  span.asyncFinish();\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 69,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 66,
        "startColumnNumber" : 16,
        "endLineNumber" : 66,
        "endColumnNumber" : 58
      },
      "nodeContext" : "httpStatus != null && httpStatus.isError()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "httpStatus",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 68,
      "startColumnNumber" : 60,
      "endLineNumber" : 68,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 68,
        "startColumnNumber" : 60,
        "endLineNumber" : 68,
        "endColumnNumber" : 78
      },
      "nodeContext" : "httpStatus.value()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 68,
        "startColumnNumber" : 43,
        "endLineNumber" : 68,
        "endColumnNumber" : 79
      },
      "nodeContext" : "Integer.toString(httpStatus.value())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 68,
        "startColumnNumber" : 16,
        "endLineNumber" : 68,
        "endColumnNumber" : 80
      },
      "nodeContext" : "Tags.STATUS_CODE.set(span,Integer.toString(httpStatus.value()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 68,
        "startColumnNumber" : 16,
        "endLineNumber" : 68,
        "endColumnNumber" : 81
      },
      "nodeContext" : "Tags.STATUS_CODE.set(span,Integer.toString(httpStatus.value()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 66,
        "startColumnNumber" : 60,
        "endLineNumber" : 69,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  span.errorOccurred();\n  Tags.STATUS_CODE.set(span,Integer.toString(httpStatus.value()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 183,
        "startLineNumber" : 66,
        "startColumnNumber" : 12,
        "endLineNumber" : 69,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (httpStatus != null && httpStatus.isError()) {\n  span.errorOccurred();\n  Tags.STATUS_CODE.set(span,Integer.toString(httpStatus.value()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 557,
        "startLineNumber" : 59,
        "startColumnNumber" : 43,
        "endLineNumber" : 71,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ReactiveResponseHolder responseHolder=(ReactiveResponseHolder)objInst.getSkyWalkingDynamicField();\n  AbstractSpan span=responseHolder.getSpan();\n  if (span == null) {\n    return;\n  }\n  HttpStatus httpStatus=exchange.getResponse().getStatusCode();\n  if (httpStatus != null && httpStatus.isError()) {\n    span.errorOccurred();\n    Tags.STATUS_CODE.set(span,Integer.toString(httpStatus.value()));\n  }\n  span.asyncFinish();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 562,
        "startLineNumber" : 59,
        "startColumnNumber" : 38,
        "endLineNumber" : 71,
        "endColumnNumber" : 9
      },
      "nodeContext" : "s -> {\n  ReactiveResponseHolder responseHolder=(ReactiveResponseHolder)objInst.getSkyWalkingDynamicField();\n  AbstractSpan span=responseHolder.getSpan();\n  if (span == null) {\n    return;\n  }\n  HttpStatus httpStatus=exchange.getResponse().getStatusCode();\n  if (httpStatus != null && httpStatus.isError()) {\n    span.errorOccurred();\n    Tags.STATUS_CODE.set(span,Integer.toString(httpStatus.value()));\n  }\n  span.asyncFinish();\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 69,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 68,
        "startColumnNumber" : 16,
        "endLineNumber" : 68,
        "endColumnNumber" : 81
      },
      "nodeContext" : "Tags.STATUS_CODE.set(span,Integer.toString(httpStatus.value()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 66,
    "startColumnNumber" : 16,
    "endLineNumber" : 66,
    "endColumnNumber" : 26
  }, {
    "charLength" : 10,
    "startLineNumber" : 66,
    "startColumnNumber" : 38,
    "endLineNumber" : 66,
    "endColumnNumber" : 48
  }, {
    "charLength" : 10,
    "startLineNumber" : 68,
    "startColumnNumber" : 60,
    "endLineNumber" : 68,
    "endColumnNumber" : 70
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  } ]
}