{
  "id" : 144,
  "expression" : "150",
  "projectName" : "openzipkin@zipkin",
  "commitID" : "f02a993656f506277ca83737ddf494ed45fde4b3",
  "filePath" : "/zipkin-tests/src/main/java/zipkin2/storage/ITDependenciesHeavy.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "150",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 78,
      "startColumnNumber" : 51,
      "endLineNumber" : 78,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 78,
        "startColumnNumber" : 51,
        "endLineNumber" : 78,
        "endColumnNumber" : 62
      },
      "nodeContext" : "150 * 1000L",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 77,
        "startColumnNumber" : 16,
        "endLineNumber" : 78,
        "endColumnNumber" : 63
      },
      "nodeContext" : "Span.newBuilder().traceId(traceId).id(\"10\").name(\"get\").shared(true).timestamp((TODAY + 100) * 1000L).duration(150 * 1000L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 28,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 77,
        "startColumnNumber" : 16,
        "endLineNumber" : 79,
        "endColumnNumber" : 26
      },
      "nodeContext" : "Span.newBuilder().traceId(traceId).id(\"10\").name(\"get\").shared(true).timestamp((TODAY + 100) * 1000L).duration(150 * 1000L).kind(Kind.SERVER)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 33,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 187,
        "startLineNumber" : 77,
        "startColumnNumber" : 16,
        "endLineNumber" : 80,
        "endColumnNumber" : 27
      },
      "nodeContext" : "Span.newBuilder().traceId(traceId).id(\"10\").name(\"get\").shared(true).timestamp((TODAY + 100) * 1000L).duration(150 * 1000L).kind(Kind.SERVER).localEndpoint(app)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 36,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 204,
        "startLineNumber" : 77,
        "startColumnNumber" : 16,
        "endLineNumber" : 81,
        "endColumnNumber" : 16
      },
      "nodeContext" : "Span.newBuilder().traceId(traceId).id(\"10\").name(\"get\").shared(true).timestamp((TODAY + 100) * 1000L).duration(150 * 1000L).kind(Kind.SERVER).localEndpoint(app).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 38,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 222,
        "startLineNumber" : 77,
        "startColumnNumber" : 6,
        "endLineNumber" : 82,
        "endColumnNumber" : 7
      },
      "nodeContext" : "spans.add(Span.newBuilder().traceId(traceId).id(\"10\").name(\"get\").shared(true).timestamp((TODAY + 100) * 1000L).duration(150 * 1000L).kind(Kind.SERVER).localEndpoint(app).build())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 41,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 223,
        "startLineNumber" : 77,
        "startColumnNumber" : 6,
        "endLineNumber" : 82,
        "endColumnNumber" : 8
      },
      "nodeContext" : "spans.add(Span.newBuilder().traceId(traceId).id(\"10\").name(\"get\").shared(true).timestamp((TODAY + 100) * 1000L).duration(150 * 1000L).kind(Kind.SERVER).localEndpoint(app).build());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 42,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 971,
        "startLineNumber" : 64,
        "startColumnNumber" : 37,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String traceId=newTraceId();\n  Endpoint web=FRONTEND.toBuilder().serviceName(\"web-\" + i).build();\n  Endpoint app=BACKEND.toBuilder().serviceName(\"app-\" + i).build();\n  Endpoint db=DB.toBuilder().serviceName(\"db-\" + i).build();\n  spans.add(Span.newBuilder().traceId(traceId).id(\"10\").name(\"get\").timestamp((TODAY + 50L) * 1000L).duration(250L * 1000L).kind(Kind.CLIENT).localEndpoint(web).build());\n  spans.add(Span.newBuilder().traceId(traceId).id(\"10\").name(\"get\").shared(true).timestamp((TODAY + 100) * 1000L).duration(150 * 1000L).kind(Kind.SERVER).localEndpoint(app).build());\n  spans.add(Span.newBuilder().traceId(traceId).parentId(\"10\").id(\"11\").name(\"get\").timestamp((TODAY + 150L) * 1000L).duration(50L * 1000L).kind(Kind.CLIENT).localEndpoint(app).remoteEndpoint(db).build());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 179,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1004,
        "startLineNumber" : 64,
        "startColumnNumber" : 4,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=1; i <= count; i++) {\n  String traceId=newTraceId();\n  Endpoint web=FRONTEND.toBuilder().serviceName(\"web-\" + i).build();\n  Endpoint app=BACKEND.toBuilder().serviceName(\"app-\" + i).build();\n  Endpoint db=DB.toBuilder().serviceName(\"db-\" + i).build();\n  spans.add(Span.newBuilder().traceId(traceId).id(\"10\").name(\"get\").timestamp((TODAY + 50L) * 1000L).duration(250L * 1000L).kind(Kind.CLIENT).localEndpoint(web).build());\n  spans.add(Span.newBuilder().traceId(traceId).id(\"10\").name(\"get\").shared(true).timestamp((TODAY + 100) * 1000L).duration(150 * 1000L).kind(Kind.SERVER).localEndpoint(app).build());\n  spans.add(Span.newBuilder().traceId(traceId).parentId(\"10\").id(\"11\").name(\"get\").timestamp((TODAY + 150L) * 1000L).duration(50L * 1000L).kind(Kind.CLIENT).localEndpoint(app).remoteEndpoint(db).build());\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 190,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1481,
        "startLineNumber" : 61,
        "startColumnNumber" : 52,
        "endLineNumber" : 98,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int count=1000;\n  List<Span> spans=new ArrayList<>(count);\n  for (int i=1; i <= count; i++) {\n    String traceId=newTraceId();\n    Endpoint web=FRONTEND.toBuilder().serviceName(\"web-\" + i).build();\n    Endpoint app=BACKEND.toBuilder().serviceName(\"app-\" + i).build();\n    Endpoint db=DB.toBuilder().serviceName(\"db-\" + i).build();\n    spans.add(Span.newBuilder().traceId(traceId).id(\"10\").name(\"get\").timestamp((TODAY + 50L) * 1000L).duration(250L * 1000L).kind(Kind.CLIENT).localEndpoint(web).build());\n    spans.add(Span.newBuilder().traceId(traceId).id(\"10\").name(\"get\").shared(true).timestamp((TODAY + 100) * 1000L).duration(150 * 1000L).kind(Kind.SERVER).localEndpoint(app).build());\n    spans.add(Span.newBuilder().traceId(traceId).parentId(\"10\").id(\"11\").name(\"get\").timestamp((TODAY + 150L) * 1000L).duration(50L * 1000L).kind(Kind.CLIENT).localEndpoint(app).remoteEndpoint(db).build());\n  }\n  processDependencies(spans);\n  List<DependencyLink> links=store().getDependencies(endTs(spans),DAY).execute();\n  assertThat(links).hasSize(count * 2);\n  assertThat(links).extracting(DependencyLink::callCount).allSatisfy(callCount -> assertThat(callCount).isEqualTo(1));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 260,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1591,
        "startLineNumber" : 60,
        "startColumnNumber" : 2,
        "endLineNumber" : 98,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Ensure there's no query limit problem around links \n */\n@Test protected void manyLinks() throws Exception {\n  int count=1000;\n  List<Span> spans=new ArrayList<>(count);\n  for (int i=1; i <= count; i++) {\n    String traceId=newTraceId();\n    Endpoint web=FRONTEND.toBuilder().serviceName(\"web-\" + i).build();\n    Endpoint app=BACKEND.toBuilder().serviceName(\"app-\" + i).build();\n    Endpoint db=DB.toBuilder().serviceName(\"db-\" + i).build();\n    spans.add(Span.newBuilder().traceId(traceId).id(\"10\").name(\"get\").timestamp((TODAY + 50L) * 1000L).duration(250L * 1000L).kind(Kind.CLIENT).localEndpoint(web).build());\n    spans.add(Span.newBuilder().traceId(traceId).id(\"10\").name(\"get\").shared(true).timestamp((TODAY + 100) * 1000L).duration(150 * 1000L).kind(Kind.SERVER).localEndpoint(app).build());\n    spans.add(Span.newBuilder().traceId(traceId).parentId(\"10\").id(\"11\").name(\"get\").timestamp((TODAY + 150L) * 1000L).duration(50L * 1000L).kind(Kind.CLIENT).localEndpoint(app).remoteEndpoint(db).build());\n  }\n  processDependencies(spans);\n  List<DependencyLink> links=store().getDependencies(endTs(spans),DAY).execute();\n  assertThat(links).hasSize(count * 2);\n  assertThat(links).extracting(DependencyLink::callCount).allSatisfy(callCount -> assertThat(callCount).isEqualTo(1));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 269,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 78,
        "startColumnNumber" : 51,
        "endLineNumber" : 78,
        "endColumnNumber" : 62
      },
      "nodeContext" : "150 * 1000L",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 78,
    "startColumnNumber" : 51,
    "endLineNumber" : 78,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ ]
}