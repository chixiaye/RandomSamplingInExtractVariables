{
  "id" : 321,
  "expression" : "content.length() == byteData.length",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.ui.editors.hex/src/org/jkiss/dbeaver/ui/data/BinaryPanelEditor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "content.length() == byteData.length",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 35,
      "startLineNumber" : 95,
      "startColumnNumber" : 35,
      "endLineNumber" : 95,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 95,
        "startColumnNumber" : 16,
        "endLineNumber" : 95,
        "endColumnNumber" : 70
      },
      "nodeContext" : "content != null && content.length() == byteData.length",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 301,
        "startLineNumber" : 95,
        "startColumnNumber" : 12,
        "endLineNumber" : 101,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (content != null && content.length() == byteData.length) {\n  ByteBuffer byteBuffer=ByteBuffer.allocate(byteData.length);\n  if (Arrays.equals(byteBuffer.array(),byteData)) {\n    return;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1204,
        "startLineNumber" : 79,
        "startColumnNumber" : 12,
        "endLineNumber" : 105,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  DBDContentStorage data=value.getContents(monitor);\n  String charset=null;\n  monitor.subTask(\"Read binary value\");\n  ByteArrayOutputStream buffer=new ByteArrayOutputStream();\n  if (data != null) {\n    try (InputStream contentStream=data.getContentStream()){\n      ContentUtils.copyStreams(contentStream,-1,buffer,monitor);\n    }\n     charset=data.getCharset();\n  }\n else {\n    charset=DBValueFormatting.getDefaultBinaryFileEncoding(value.getDataSource());\n  }\n  String finalCharset=charset;\n  byte[] byteData=buffer.toByteArray();\n  BinaryContent content=control.getContent();\n  if (content != null && content.length() == byteData.length) {\n    ByteBuffer byteBuffer=ByteBuffer.allocate(byteData.length);\n    if (Arrays.equals(byteBuffer.array(),byteData)) {\n      return;\n    }\n  }\n  UIUtils.syncExec(() -> {\n    control.setContent(byteData,finalCharset,false);\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 139,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1358,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 109,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  DBDContentStorage data=value.getContents(monitor);\n  String charset=null;\n  monitor.subTask(\"Read binary value\");\n  ByteArrayOutputStream buffer=new ByteArrayOutputStream();\n  if (data != null) {\n    try (InputStream contentStream=data.getContentStream()){\n      ContentUtils.copyStreams(contentStream,-1,buffer,monitor);\n    }\n     charset=data.getCharset();\n  }\n else {\n    charset=DBValueFormatting.getDefaultBinaryFileEncoding(value.getDataSource());\n  }\n  String finalCharset=charset;\n  byte[] byteData=buffer.toByteArray();\n  BinaryContent content=control.getContent();\n  if (content != null && content.length() == byteData.length) {\n    ByteBuffer byteBuffer=ByteBuffer.allocate(byteData.length);\n    if (Arrays.equals(byteBuffer.array(),byteData)) {\n      return;\n    }\n  }\n  UIUtils.syncExec(() -> {\n    control.setContent(byteData,finalCharset,false);\n  }\n);\n}\n catch (IOException e) {\n  throw new DBException(\"Error reading stream value\",e);\n}\n finally {\n  monitor.done();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 157,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1427,
        "startLineNumber" : 77,
        "startColumnNumber" : 4,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  monitor.beginTask(\"Prime content value\",1);\n  try {\n    DBDContentStorage data=value.getContents(monitor);\n    String charset=null;\n    monitor.subTask(\"Read binary value\");\n    ByteArrayOutputStream buffer=new ByteArrayOutputStream();\n    if (data != null) {\n      try (InputStream contentStream=data.getContentStream()){\n        ContentUtils.copyStreams(contentStream,-1,buffer,monitor);\n      }\n       charset=data.getCharset();\n    }\n else {\n      charset=DBValueFormatting.getDefaultBinaryFileEncoding(value.getDataSource());\n    }\n    String finalCharset=charset;\n    byte[] byteData=buffer.toByteArray();\n    BinaryContent content=control.getContent();\n    if (content != null && content.length() == byteData.length) {\n      ByteBuffer byteBuffer=ByteBuffer.allocate(byteData.length);\n      if (Arrays.equals(byteBuffer.array(),byteData)) {\n        return;\n      }\n    }\n    UIUtils.syncExec(() -> {\n      control.setContent(byteData,finalCharset,false);\n    }\n);\n  }\n catch (  IOException e) {\n    throw new DBException(\"Error reading stream value\",e);\n  }\n finally {\n    monitor.done();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 164,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1590,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void primeEditorValue(@NotNull DBRProgressMonitor monitor,@NotNull HexEditControl control,@NotNull DBDContent value) throws DBException {\n  monitor.beginTask(\"Prime content value\",1);\n  try {\n    DBDContentStorage data=value.getContents(monitor);\n    String charset=null;\n    monitor.subTask(\"Read binary value\");\n    ByteArrayOutputStream buffer=new ByteArrayOutputStream();\n    if (data != null) {\n      try (InputStream contentStream=data.getContentStream()){\n        ContentUtils.copyStreams(contentStream,-1,buffer,monitor);\n      }\n       charset=data.getCharset();\n    }\n else {\n      charset=DBValueFormatting.getDefaultBinaryFileEncoding(value.getDataSource());\n    }\n    String finalCharset=charset;\n    byte[] byteData=buffer.toByteArray();\n    BinaryContent content=control.getContent();\n    if (content != null && content.length() == byteData.length) {\n      ByteBuffer byteBuffer=ByteBuffer.allocate(byteData.length);\n      if (Arrays.equals(byteBuffer.array(),byteData)) {\n        return;\n      }\n    }\n    UIUtils.syncExec(() -> {\n      control.setContent(byteData,finalCharset,false);\n    }\n);\n  }\n catch (  IOException e) {\n    throw new DBException(\"Error reading stream value\",e);\n  }\n finally {\n    monitor.done();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 190,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 95,
        "startColumnNumber" : 16,
        "endLineNumber" : 95,
        "endColumnNumber" : 70
      },
      "nodeContext" : "content != null && content.length() == byteData.length",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 35,
    "startLineNumber" : 95,
    "startColumnNumber" : 35,
    "endLineNumber" : 95,
    "endColumnNumber" : 70
  } ],
  "layoutRelationDataList" : [ ]
}