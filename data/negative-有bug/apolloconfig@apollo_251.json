{
  "id" : 251,
  "expression" : "httpRequest.getReadTimeout()",
  "projectName" : "apolloconfig@apollo",
  "commitID" : "7b7d753f78e444f9cf97b0f238f7e33f585cb277",
  "filePath" : "/apollo-client/src/main/java/com/ctrip/framework/apollo/util/http/HttpUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "httpRequest.getReadTimeout()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 28,
      "startLineNumber" : 97,
      "startColumnNumber" : 24,
      "endLineNumber" : 97,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 97,
        "startColumnNumber" : 10,
        "endLineNumber" : 97,
        "endColumnNumber" : 52
      },
      "nodeContext" : "readTimeout=httpRequest.getReadTimeout()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 97,
        "startColumnNumber" : 6,
        "endLineNumber" : 97,
        "endColumnNumber" : 53
      },
      "nodeContext" : "int readTimeout=httpRequest.getReadTimeout();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 992,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 119,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HttpURLConnection conn=(HttpURLConnection)new URL(httpRequest.getUrl()).openConnection();\n  conn.setRequestMethod(\"GET\");\n  conn.setRequestProperty(\"Authorization\",basicAuth);\n  int connectTimeout=httpRequest.getConnectTimeout();\n  if (connectTimeout < 0) {\n    connectTimeout=m_configUtil.getConnectTimeout();\n  }\n  int readTimeout=httpRequest.getReadTimeout();\n  if (readTimeout < 0) {\n    readTimeout=m_configUtil.getReadTimeout();\n  }\n  conn.setConnectTimeout(connectTimeout);\n  conn.setReadTimeout(readTimeout);\n  conn.connect();\n  statusCode=conn.getResponseCode();\n  if (statusCode == 200) {\n    is=conn.getInputStream();\n    String content=Files.IO.INSTANCE.readFrom(is,Charsets.UTF_8.name());\n    return new HttpResponse<>(statusCode,serializeFunction.apply(content));\n  }\n  if (statusCode == 304) {\n    return new HttpResponse<>(statusCode,null);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1253,
        "startLineNumber" : 86,
        "startColumnNumber" : 4,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  HttpURLConnection conn=(HttpURLConnection)new URL(httpRequest.getUrl()).openConnection();\n  conn.setRequestMethod(\"GET\");\n  conn.setRequestProperty(\"Authorization\",basicAuth);\n  int connectTimeout=httpRequest.getConnectTimeout();\n  if (connectTimeout < 0) {\n    connectTimeout=m_configUtil.getConnectTimeout();\n  }\n  int readTimeout=httpRequest.getReadTimeout();\n  if (readTimeout < 0) {\n    readTimeout=m_configUtil.getReadTimeout();\n  }\n  conn.setConnectTimeout(connectTimeout);\n  conn.setReadTimeout(readTimeout);\n  conn.connect();\n  statusCode=conn.getResponseCode();\n  if (statusCode == 200) {\n    is=conn.getInputStream();\n    String content=Files.IO.INSTANCE.readFrom(is,Charsets.UTF_8.name());\n    return new HttpResponse<>(statusCode,serializeFunction.apply(content));\n  }\n  if (statusCode == 304) {\n    return new HttpResponse<>(statusCode,null);\n  }\n}\n catch (Throwable ex) {\n  throw new ApolloConfigException(\"Could not complete get operation\",ex);\n}\n finally {\n  if (is != null) {\n    try {\n      is.close();\n    }\n catch (    IOException ex) {\n    }\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 166,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1453,
        "startLineNumber" : 83,
        "startColumnNumber" : 96,
        "endLineNumber" : 132,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  InputStream is=null;\n  int statusCode;\n  try {\n    HttpURLConnection conn=(HttpURLConnection)new URL(httpRequest.getUrl()).openConnection();\n    conn.setRequestMethod(\"GET\");\n    conn.setRequestProperty(\"Authorization\",basicAuth);\n    int connectTimeout=httpRequest.getConnectTimeout();\n    if (connectTimeout < 0) {\n      connectTimeout=m_configUtil.getConnectTimeout();\n    }\n    int readTimeout=httpRequest.getReadTimeout();\n    if (readTimeout < 0) {\n      readTimeout=m_configUtil.getReadTimeout();\n    }\n    conn.setConnectTimeout(connectTimeout);\n    conn.setReadTimeout(readTimeout);\n    conn.connect();\n    statusCode=conn.getResponseCode();\n    if (statusCode == 200) {\n      is=conn.getInputStream();\n      String content=Files.IO.INSTANCE.readFrom(is,Charsets.UTF_8.name());\n      return new HttpResponse<>(statusCode,serializeFunction.apply(content));\n    }\n    if (statusCode == 304) {\n      return new HttpResponse<>(statusCode,null);\n    }\n  }\n catch (  Throwable ex) {\n    throw new ApolloConfigException(\"Could not complete get operation\",ex);\n  }\n finally {\n    if (is != null) {\n      try {\n        is.close();\n      }\n catch (      IOException ex) {\n      }\n    }\n  }\n  throw new ApolloConfigException(String.format(\"Get operation failed for %s, status code - %d\",httpRequest.getUrl(),statusCode));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 189,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1629,
        "startLineNumber" : 82,
        "startColumnNumber" : 2,
        "endLineNumber" : 132,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private <T>HttpResponse<T> doGetWithSerializeFunction(HttpRequest httpRequest,Function<String,T> serializeFunction){\n  InputStream is=null;\n  int statusCode;\n  try {\n    HttpURLConnection conn=(HttpURLConnection)new URL(httpRequest.getUrl()).openConnection();\n    conn.setRequestMethod(\"GET\");\n    conn.setRequestProperty(\"Authorization\",basicAuth);\n    int connectTimeout=httpRequest.getConnectTimeout();\n    if (connectTimeout < 0) {\n      connectTimeout=m_configUtil.getConnectTimeout();\n    }\n    int readTimeout=httpRequest.getReadTimeout();\n    if (readTimeout < 0) {\n      readTimeout=m_configUtil.getReadTimeout();\n    }\n    conn.setConnectTimeout(connectTimeout);\n    conn.setReadTimeout(readTimeout);\n    conn.connect();\n    statusCode=conn.getResponseCode();\n    if (statusCode == 200) {\n      is=conn.getInputStream();\n      String content=Files.IO.INSTANCE.readFrom(is,Charsets.UTF_8.name());\n      return new HttpResponse<>(statusCode,serializeFunction.apply(content));\n    }\n    if (statusCode == 304) {\n      return new HttpResponse<>(statusCode,null);\n    }\n  }\n catch (  Throwable ex) {\n    throw new ApolloConfigException(\"Could not complete get operation\",ex);\n  }\n finally {\n    if (is != null) {\n      try {\n        is.close();\n      }\n catch (      IOException ex) {\n      }\n    }\n  }\n  throw new ApolloConfigException(String.format(\"Get operation failed for %s, status code - %d\",httpRequest.getUrl(),statusCode));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 212,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 97,
        "startColumnNumber" : 6,
        "endLineNumber" : 97,
        "endColumnNumber" : 53
      },
      "nodeContext" : "int readTimeout=httpRequest.getReadTimeout();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 28,
    "startLineNumber" : 97,
    "startColumnNumber" : 24,
    "endLineNumber" : 97,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}