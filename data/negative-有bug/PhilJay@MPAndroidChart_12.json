{
  "id" : 12,
  "expression" : "centerText",
  "projectName" : "PhilJay@MPAndroidChart",
  "commitID" : "43046425fc2ed73d0d3f177759706116e02a9053",
  "filePath" : "/MPChartLib/src/com/github/mikephil/charting/renderer/PieChartRenderer.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "centerText",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 248,
      "startColumnNumber" : 48,
      "endLineNumber" : 248,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 248,
        "startColumnNumber" : 48,
        "endLineNumber" : 248,
        "endColumnNumber" : 66
      },
      "nodeContext" : "centerText != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 248,
        "startColumnNumber" : 12,
        "endLineNumber" : 248,
        "endColumnNumber" : 66
      },
      "nodeContext" : "mChart.isDrawCenterTextEnabled() && centerText != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 911,
        "startLineNumber" : 248,
        "startColumnNumber" : 8,
        "endLineNumber" : 275,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mChart.isDrawCenterTextEnabled() && centerText != null) {\n  PointF center=mChart.getCenterCircleBox();\n  String[] lines=centerText.split(\"\\n\");\n  float lineHeight=Utils.calcTextHeight(mCenterTextPaint,lines[0]);\n  float linespacing=lineHeight * 0.2f;\n  float totalheight=lineHeight * lines.length - linespacing * (lines.length - 1);\n  int cnt=lines.length;\n  float y=center.y;\n  for (int i=0; i < lines.length; i++) {\n    String line=lines[lines.length - i - 1];\n    c.drawText(line,center.x,y + lineHeight * cnt - totalheight / 2f,mCenterTextPaint);\n    cnt--;\n    y-=linespacing;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 130,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 981,
        "startLineNumber" : 244,
        "startColumnNumber" : 44,
        "endLineNumber" : 276,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String centerText=mChart.getCenterText();\n  if (mChart.isDrawCenterTextEnabled() && centerText != null) {\n    PointF center=mChart.getCenterCircleBox();\n    String[] lines=centerText.split(\"\\n\");\n    float lineHeight=Utils.calcTextHeight(mCenterTextPaint,lines[0]);\n    float linespacing=lineHeight * 0.2f;\n    float totalheight=lineHeight * lines.length - linespacing * (lines.length - 1);\n    int cnt=lines.length;\n    float y=center.y;\n    for (int i=0; i < lines.length; i++) {\n      String line=lines[lines.length - i - 1];\n      c.drawText(line,center.x,y + lineHeight * cnt - totalheight / 2f,mCenterTextPaint);\n      cnt--;\n      y-=linespacing;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 139,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1154,
        "startLineNumber" : 240,
        "startColumnNumber" : 4,
        "endLineNumber" : 276,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * draws the description text in the center of the pie chart makes most sense when center-hole is enabled\n */\nprotected void drawCenterText(Canvas c){\n  String centerText=mChart.getCenterText();\n  if (mChart.isDrawCenterTextEnabled() && centerText != null) {\n    PointF center=mChart.getCenterCircleBox();\n    String[] lines=centerText.split(\"\\n\");\n    float lineHeight=Utils.calcTextHeight(mCenterTextPaint,lines[0]);\n    float linespacing=lineHeight * 0.2f;\n    float totalheight=lineHeight * lines.length - linespacing * (lines.length - 1);\n    int cnt=lines.length;\n    float y=center.y;\n    for (int i=0; i < lines.length; i++) {\n      String line=lines[lines.length - i - 1];\n      c.drawText(line,center.x,y + lineHeight * cnt - totalheight / 2f,mCenterTextPaint);\n      cnt--;\n      y-=linespacing;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 148,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 248,
        "startColumnNumber" : 12,
        "endLineNumber" : 248,
        "endColumnNumber" : 66
      },
      "nodeContext" : "mChart.isDrawCenterTextEnabled() && centerText != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "centerText",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 253,
      "startColumnNumber" : 29,
      "endLineNumber" : 253,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 253,
        "startColumnNumber" : 29,
        "endLineNumber" : 253,
        "endColumnNumber" : 51
      },
      "nodeContext" : "centerText.split(\"\\n\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 253,
        "startColumnNumber" : 21,
        "endLineNumber" : 253,
        "endColumnNumber" : 51
      },
      "nodeContext" : "lines=centerText.split(\"\\n\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 253,
        "startColumnNumber" : 12,
        "endLineNumber" : 253,
        "endColumnNumber" : 52
      },
      "nodeContext" : "String[] lines=centerText.split(\"\\n\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 851,
        "startLineNumber" : 248,
        "startColumnNumber" : 68,
        "endLineNumber" : 275,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  PointF center=mChart.getCenterCircleBox();\n  String[] lines=centerText.split(\"\\n\");\n  float lineHeight=Utils.calcTextHeight(mCenterTextPaint,lines[0]);\n  float linespacing=lineHeight * 0.2f;\n  float totalheight=lineHeight * lines.length - linespacing * (lines.length - 1);\n  int cnt=lines.length;\n  float y=center.y;\n  for (int i=0; i < lines.length; i++) {\n    String line=lines[lines.length - i - 1];\n    c.drawText(line,center.x,y + lineHeight * cnt - totalheight / 2f,mCenterTextPaint);\n    cnt--;\n    y-=linespacing;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 911,
        "startLineNumber" : 248,
        "startColumnNumber" : 8,
        "endLineNumber" : 275,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mChart.isDrawCenterTextEnabled() && centerText != null) {\n  PointF center=mChart.getCenterCircleBox();\n  String[] lines=centerText.split(\"\\n\");\n  float lineHeight=Utils.calcTextHeight(mCenterTextPaint,lines[0]);\n  float linespacing=lineHeight * 0.2f;\n  float totalheight=lineHeight * lines.length - linespacing * (lines.length - 1);\n  int cnt=lines.length;\n  float y=center.y;\n  for (int i=0; i < lines.length; i++) {\n    String line=lines[lines.length - i - 1];\n    c.drawText(line,center.x,y + lineHeight * cnt - totalheight / 2f,mCenterTextPaint);\n    cnt--;\n    y-=linespacing;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 130,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 981,
        "startLineNumber" : 244,
        "startColumnNumber" : 44,
        "endLineNumber" : 276,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String centerText=mChart.getCenterText();\n  if (mChart.isDrawCenterTextEnabled() && centerText != null) {\n    PointF center=mChart.getCenterCircleBox();\n    String[] lines=centerText.split(\"\\n\");\n    float lineHeight=Utils.calcTextHeight(mCenterTextPaint,lines[0]);\n    float linespacing=lineHeight * 0.2f;\n    float totalheight=lineHeight * lines.length - linespacing * (lines.length - 1);\n    int cnt=lines.length;\n    float y=center.y;\n    for (int i=0; i < lines.length; i++) {\n      String line=lines[lines.length - i - 1];\n      c.drawText(line,center.x,y + lineHeight * cnt - totalheight / 2f,mCenterTextPaint);\n      cnt--;\n      y-=linespacing;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 139,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1154,
        "startLineNumber" : 240,
        "startColumnNumber" : 4,
        "endLineNumber" : 276,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * draws the description text in the center of the pie chart makes most sense when center-hole is enabled\n */\nprotected void drawCenterText(Canvas c){\n  String centerText=mChart.getCenterText();\n  if (mChart.isDrawCenterTextEnabled() && centerText != null) {\n    PointF center=mChart.getCenterCircleBox();\n    String[] lines=centerText.split(\"\\n\");\n    float lineHeight=Utils.calcTextHeight(mCenterTextPaint,lines[0]);\n    float linespacing=lineHeight * 0.2f;\n    float totalheight=lineHeight * lines.length - linespacing * (lines.length - 1);\n    int cnt=lines.length;\n    float y=center.y;\n    for (int i=0; i < lines.length; i++) {\n      String line=lines[lines.length - i - 1];\n      c.drawText(line,center.x,y + lineHeight * cnt - totalheight / 2f,mCenterTextPaint);\n      cnt--;\n      y-=linespacing;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 148,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 253,
        "startColumnNumber" : 12,
        "endLineNumber" : 253,
        "endColumnNumber" : 52
      },
      "nodeContext" : "String[] lines=centerText.split(\"\\n\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 248,
    "startColumnNumber" : 48,
    "endLineNumber" : 248,
    "endColumnNumber" : 58
  }, {
    "charLength" : 10,
    "startLineNumber" : 253,
    "startColumnNumber" : 29,
    "endLineNumber" : 253,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}