{
  "id" : 243,
  "expression" : "DebugInfoItem.DBG_START_LOCAL_EXTENDED",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/third-party/aosp-dexutils/src/main/java/com/tencent/tinker/android/dex/io/DexDataBuffer.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "DebugInfoItem.DBG_START_LOCAL_EXTENDED",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 38,
      "startLineNumber" : 353,
      "startColumnNumber" : 29,
      "endLineNumber" : 353,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 353,
        "startColumnNumber" : 24,
        "endLineNumber" : 353,
        "endColumnNumber" : 68
      },
      "nodeContext" : "case DebugInfoItem.DBG_START_LOCAL_EXTENDED:",
      "nodeType" : "SwitchCase",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2392,
        "startLineNumber" : 338,
        "startColumnNumber" : 20,
        "endLineNumber" : 382,
        "endColumnNumber" : 21
      },
      "nodeContext" : "switch (opcode) {\ncase DebugInfoItem.DBG_END_SEQUENCE:{\n    break outside_whileloop;\n  }\ncase DebugInfoItem.DBG_ADVANCE_PC:{\n  int addrDiff=readUleb128();\n  Leb128.writeUnsignedLeb128(outAdapter,addrDiff);\n  break;\n}\ncase DebugInfoItem.DBG_ADVANCE_LINE:{\nint lineDiff=readSleb128();\nLeb128.writeSignedLeb128(outAdapter,lineDiff);\nbreak;\n}\ncase DebugInfoItem.DBG_START_LOCAL:case DebugInfoItem.DBG_START_LOCAL_EXTENDED:{\nint registerNum=readUleb128();\nLeb128.writeUnsignedLeb128(outAdapter,registerNum);\nint nameIndex=readUleb128p1();\nLeb128.writeUnsignedLeb128p1(outAdapter,nameIndex);\nint typeIndex=readUleb128p1();\nLeb128.writeUnsignedLeb128p1(outAdapter,typeIndex);\nif (opcode == DebugInfoItem.DBG_START_LOCAL_EXTENDED) {\nint sigIndex=readUleb128p1();\nLeb128.writeUnsignedLeb128p1(outAdapter,sigIndex);\n}\nbreak;\n}\ncase DebugInfoItem.DBG_END_LOCAL:case DebugInfoItem.DBG_RESTART_LOCAL:{\nint registerNum=readUleb128();\nLeb128.writeUnsignedLeb128(outAdapter,registerNum);\nbreak;\n}\ncase DebugInfoItem.DBG_SET_FILE:{\nint nameIndex=readUleb128p1();\nLeb128.writeUnsignedLeb128p1(outAdapter,nameIndex);\nbreak;\n}\ncase DebugInfoItem.DBG_SET_PROLOGUE_END:case DebugInfoItem.DBG_SET_EPILOGUE_BEGIN:default:{\nbreak;\n}\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 161,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 2517,
        "startLineNumber" : 335,
        "startColumnNumber" : 29,
        "endLineNumber" : 383,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  int opcode=readByte();\n  baos.write(opcode);\nswitch (opcode) {\ncase DebugInfoItem.DBG_END_SEQUENCE:{\n      break outside_whileloop;\n    }\ncase DebugInfoItem.DBG_ADVANCE_PC:{\n    int addrDiff=readUleb128();\n    Leb128.writeUnsignedLeb128(outAdapter,addrDiff);\n    break;\n  }\ncase DebugInfoItem.DBG_ADVANCE_LINE:{\n  int lineDiff=readSleb128();\n  Leb128.writeSignedLeb128(outAdapter,lineDiff);\n  break;\n}\ncase DebugInfoItem.DBG_START_LOCAL:case DebugInfoItem.DBG_START_LOCAL_EXTENDED:{\nint registerNum=readUleb128();\nLeb128.writeUnsignedLeb128(outAdapter,registerNum);\nint nameIndex=readUleb128p1();\nLeb128.writeUnsignedLeb128p1(outAdapter,nameIndex);\nint typeIndex=readUleb128p1();\nLeb128.writeUnsignedLeb128p1(outAdapter,typeIndex);\nif (opcode == DebugInfoItem.DBG_START_LOCAL_EXTENDED) {\n  int sigIndex=readUleb128p1();\n  Leb128.writeUnsignedLeb128p1(outAdapter,sigIndex);\n}\nbreak;\n}\ncase DebugInfoItem.DBG_END_LOCAL:case DebugInfoItem.DBG_RESTART_LOCAL:{\nint registerNum=readUleb128();\nLeb128.writeUnsignedLeb128(outAdapter,registerNum);\nbreak;\n}\ncase DebugInfoItem.DBG_SET_FILE:{\nint nameIndex=readUleb128p1();\nLeb128.writeUnsignedLeb128p1(outAdapter,nameIndex);\nbreak;\n}\ncase DebugInfoItem.DBG_SET_PROLOGUE_END:case DebugInfoItem.DBG_SET_EPILOGUE_BEGIN:default:{\nbreak;\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 173,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LabeledStatement,body]",
      "nodePosition" : {
        "charLength" : 2530,
        "startLineNumber" : 335,
        "startColumnNumber" : 16,
        "endLineNumber" : 383,
        "endColumnNumber" : 17
      },
      "nodeContext" : "while (true) {\n  int opcode=readByte();\n  baos.write(opcode);\nswitch (opcode) {\ncase DebugInfoItem.DBG_END_SEQUENCE:{\n      break outside_whileloop;\n    }\ncase DebugInfoItem.DBG_ADVANCE_PC:{\n    int addrDiff=readUleb128();\n    Leb128.writeUnsignedLeb128(outAdapter,addrDiff);\n    break;\n  }\ncase DebugInfoItem.DBG_ADVANCE_LINE:{\n  int lineDiff=readSleb128();\n  Leb128.writeSignedLeb128(outAdapter,lineDiff);\n  break;\n}\ncase DebugInfoItem.DBG_START_LOCAL:case DebugInfoItem.DBG_START_LOCAL_EXTENDED:{\nint registerNum=readUleb128();\nLeb128.writeUnsignedLeb128(outAdapter,registerNum);\nint nameIndex=readUleb128p1();\nLeb128.writeUnsignedLeb128p1(outAdapter,nameIndex);\nint typeIndex=readUleb128p1();\nLeb128.writeUnsignedLeb128p1(outAdapter,typeIndex);\nif (opcode == DebugInfoItem.DBG_START_LOCAL_EXTENDED) {\n  int sigIndex=readUleb128p1();\n  Leb128.writeUnsignedLeb128p1(outAdapter,sigIndex);\n}\nbreak;\n}\ncase DebugInfoItem.DBG_END_LOCAL:case DebugInfoItem.DBG_RESTART_LOCAL:{\nint registerNum=readUleb128();\nLeb128.writeUnsignedLeb128(outAdapter,registerNum);\nbreak;\n}\ncase DebugInfoItem.DBG_SET_FILE:{\nint nameIndex=readUleb128p1();\nLeb128.writeUnsignedLeb128p1(outAdapter,nameIndex);\nbreak;\n}\ncase DebugInfoItem.DBG_SET_PROLOGUE_END:case DebugInfoItem.DBG_SET_EPILOGUE_BEGIN:default:{\nbreak;\n}\n}\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 175,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2565,
        "startLineNumber" : 334,
        "startColumnNumber" : 12,
        "endLineNumber" : 383,
        "endColumnNumber" : 17
      },
      "nodeContext" : "outside_whileloop: while (true) {\n  int opcode=readByte();\n  baos.write(opcode);\nswitch (opcode) {\ncase DebugInfoItem.DBG_END_SEQUENCE:{\n      break outside_whileloop;\n    }\ncase DebugInfoItem.DBG_ADVANCE_PC:{\n    int addrDiff=readUleb128();\n    Leb128.writeUnsignedLeb128(outAdapter,addrDiff);\n    break;\n  }\ncase DebugInfoItem.DBG_ADVANCE_LINE:{\n  int lineDiff=readSleb128();\n  Leb128.writeSignedLeb128(outAdapter,lineDiff);\n  break;\n}\ncase DebugInfoItem.DBG_START_LOCAL:case DebugInfoItem.DBG_START_LOCAL_EXTENDED:{\nint registerNum=readUleb128();\nLeb128.writeUnsignedLeb128(outAdapter,registerNum);\nint nameIndex=readUleb128p1();\nLeb128.writeUnsignedLeb128p1(outAdapter,nameIndex);\nint typeIndex=readUleb128p1();\nLeb128.writeUnsignedLeb128p1(outAdapter,typeIndex);\nif (opcode == DebugInfoItem.DBG_START_LOCAL_EXTENDED) {\n  int sigIndex=readUleb128p1();\n  Leb128.writeUnsignedLeb128p1(outAdapter,sigIndex);\n}\nbreak;\n}\ncase DebugInfoItem.DBG_END_LOCAL:case DebugInfoItem.DBG_RESTART_LOCAL:{\nint registerNum=readUleb128();\nLeb128.writeUnsignedLeb128(outAdapter,registerNum);\nbreak;\n}\ncase DebugInfoItem.DBG_SET_FILE:{\nint nameIndex=readUleb128p1();\nLeb128.writeUnsignedLeb128p1(outAdapter,nameIndex);\nbreak;\n}\ncase DebugInfoItem.DBG_SET_PROLOGUE_END:case DebugInfoItem.DBG_SET_EPILOGUE_BEGIN:default:{\nbreak;\n}\n}\n}\n",
      "nodeType" : "LabeledStatement",
      "astNodeNumber" : 177,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 3026,
        "startLineNumber" : 322,
        "startColumnNumber" : 12,
        "endLineNumber" : 387,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  baos=new ByteArrayOutputStream(64);\n  final ByteArrayOutputStream baosRef=baos;\n  ByteOutput outAdapter=new ByteOutput(){\n    @Override public void writeByte(    int i){\n      baosRef.write(i);\n    }\n  }\n;\n  outside_whileloop:   while (true) {\n    int opcode=readByte();\n    baos.write(opcode);\nswitch (opcode) {\ncase DebugInfoItem.DBG_END_SEQUENCE:{\n        break outside_whileloop;\n      }\ncase DebugInfoItem.DBG_ADVANCE_PC:{\n      int addrDiff=readUleb128();\n      Leb128.writeUnsignedLeb128(outAdapter,addrDiff);\n      break;\n    }\ncase DebugInfoItem.DBG_ADVANCE_LINE:{\n    int lineDiff=readSleb128();\n    Leb128.writeSignedLeb128(outAdapter,lineDiff);\n    break;\n  }\ncase DebugInfoItem.DBG_START_LOCAL:case DebugInfoItem.DBG_START_LOCAL_EXTENDED:{\n  int registerNum=readUleb128();\n  Leb128.writeUnsignedLeb128(outAdapter,registerNum);\n  int nameIndex=readUleb128p1();\n  Leb128.writeUnsignedLeb128p1(outAdapter,nameIndex);\n  int typeIndex=readUleb128p1();\n  Leb128.writeUnsignedLeb128p1(outAdapter,typeIndex);\n  if (opcode == DebugInfoItem.DBG_START_LOCAL_EXTENDED) {\n    int sigIndex=readUleb128p1();\n    Leb128.writeUnsignedLeb128p1(outAdapter,sigIndex);\n  }\n  break;\n}\ncase DebugInfoItem.DBG_END_LOCAL:case DebugInfoItem.DBG_RESTART_LOCAL:{\nint registerNum=readUleb128();\nLeb128.writeUnsignedLeb128(outAdapter,registerNum);\nbreak;\n}\ncase DebugInfoItem.DBG_SET_FILE:{\nint nameIndex=readUleb128p1();\nLeb128.writeUnsignedLeb128p1(outAdapter,nameIndex);\nbreak;\n}\ncase DebugInfoItem.DBG_SET_PROLOGUE_END:case DebugInfoItem.DBG_SET_EPILOGUE_BEGIN:default:{\nbreak;\n}\n}\n}\nbyte[] infoSTM=baos.toByteArray();\nreturn new DebugInfoItem(off,lineStart,parameterNames,infoSTM);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 233,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3245,
        "startLineNumber" : 322,
        "startColumnNumber" : 8,
        "endLineNumber" : 395,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  baos=new ByteArrayOutputStream(64);\n  final ByteArrayOutputStream baosRef=baos;\n  ByteOutput outAdapter=new ByteOutput(){\n    @Override public void writeByte(    int i){\n      baosRef.write(i);\n    }\n  }\n;\n  outside_whileloop:   while (true) {\n    int opcode=readByte();\n    baos.write(opcode);\nswitch (opcode) {\ncase DebugInfoItem.DBG_END_SEQUENCE:{\n        break outside_whileloop;\n      }\ncase DebugInfoItem.DBG_ADVANCE_PC:{\n      int addrDiff=readUleb128();\n      Leb128.writeUnsignedLeb128(outAdapter,addrDiff);\n      break;\n    }\ncase DebugInfoItem.DBG_ADVANCE_LINE:{\n    int lineDiff=readSleb128();\n    Leb128.writeSignedLeb128(outAdapter,lineDiff);\n    break;\n  }\ncase DebugInfoItem.DBG_START_LOCAL:case DebugInfoItem.DBG_START_LOCAL_EXTENDED:{\n  int registerNum=readUleb128();\n  Leb128.writeUnsignedLeb128(outAdapter,registerNum);\n  int nameIndex=readUleb128p1();\n  Leb128.writeUnsignedLeb128p1(outAdapter,nameIndex);\n  int typeIndex=readUleb128p1();\n  Leb128.writeUnsignedLeb128p1(outAdapter,typeIndex);\n  if (opcode == DebugInfoItem.DBG_START_LOCAL_EXTENDED) {\n    int sigIndex=readUleb128p1();\n    Leb128.writeUnsignedLeb128p1(outAdapter,sigIndex);\n  }\n  break;\n}\ncase DebugInfoItem.DBG_END_LOCAL:case DebugInfoItem.DBG_RESTART_LOCAL:{\nint registerNum=readUleb128();\nLeb128.writeUnsignedLeb128(outAdapter,registerNum);\nbreak;\n}\ncase DebugInfoItem.DBG_SET_FILE:{\nint nameIndex=readUleb128p1();\nLeb128.writeUnsignedLeb128p1(outAdapter,nameIndex);\nbreak;\n}\ncase DebugInfoItem.DBG_SET_PROLOGUE_END:case DebugInfoItem.DBG_SET_EPILOGUE_BEGIN:default:{\nbreak;\n}\n}\n}\nbyte[] infoSTM=baos.toByteArray();\nreturn new DebugInfoItem(off,lineStart,parameterNames,infoSTM);\n}\n  finally {\nif (baos != null) {\ntry {\nbaos.close();\n}\n catch (Exception e) {\n}\n}\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 252,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3591,
        "startLineNumber" : 310,
        "startColumnNumber" : 45,
        "endLineNumber" : 396,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int off=data.position();\n  int lineStart=readUleb128();\n  int parametersSize=readUleb128();\n  int[] parameterNames=new int[parametersSize];\n  for (int i=0; i < parametersSize; ++i) {\n    parameterNames[i]=readUleb128p1();\n  }\n  ByteArrayOutputStream baos=null;\n  try {\n    baos=new ByteArrayOutputStream(64);\n    final ByteArrayOutputStream baosRef=baos;\n    ByteOutput outAdapter=new ByteOutput(){\n      @Override public void writeByte(      int i){\n        baosRef.write(i);\n      }\n    }\n;\n    outside_whileloop:     while (true) {\n      int opcode=readByte();\n      baos.write(opcode);\nswitch (opcode) {\ncase DebugInfoItem.DBG_END_SEQUENCE:{\n          break outside_whileloop;\n        }\ncase DebugInfoItem.DBG_ADVANCE_PC:{\n        int addrDiff=readUleb128();\n        Leb128.writeUnsignedLeb128(outAdapter,addrDiff);\n        break;\n      }\ncase DebugInfoItem.DBG_ADVANCE_LINE:{\n      int lineDiff=readSleb128();\n      Leb128.writeSignedLeb128(outAdapter,lineDiff);\n      break;\n    }\ncase DebugInfoItem.DBG_START_LOCAL:case DebugInfoItem.DBG_START_LOCAL_EXTENDED:{\n    int registerNum=readUleb128();\n    Leb128.writeUnsignedLeb128(outAdapter,registerNum);\n    int nameIndex=readUleb128p1();\n    Leb128.writeUnsignedLeb128p1(outAdapter,nameIndex);\n    int typeIndex=readUleb128p1();\n    Leb128.writeUnsignedLeb128p1(outAdapter,typeIndex);\n    if (opcode == DebugInfoItem.DBG_START_LOCAL_EXTENDED) {\n      int sigIndex=readUleb128p1();\n      Leb128.writeUnsignedLeb128p1(outAdapter,sigIndex);\n    }\n    break;\n  }\ncase DebugInfoItem.DBG_END_LOCAL:case DebugInfoItem.DBG_RESTART_LOCAL:{\n  int registerNum=readUleb128();\n  Leb128.writeUnsignedLeb128(outAdapter,registerNum);\n  break;\n}\ncase DebugInfoItem.DBG_SET_FILE:{\nint nameIndex=readUleb128p1();\nLeb128.writeUnsignedLeb128p1(outAdapter,nameIndex);\nbreak;\n}\ncase DebugInfoItem.DBG_SET_PROLOGUE_END:case DebugInfoItem.DBG_SET_EPILOGUE_BEGIN:default:{\nbreak;\n}\n}\n}\nbyte[] infoSTM=baos.toByteArray();\nreturn new DebugInfoItem(off,lineStart,parameterNames,infoSTM);\n}\n  finally {\nif (baos != null) {\ntry {\nbaos.close();\n}\n catch (Exception e) {\n}\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 308,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3632,
        "startLineNumber" : 310,
        "startColumnNumber" : 4,
        "endLineNumber" : 396,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public DebugInfoItem readDebugInfoItem(){\n  int off=data.position();\n  int lineStart=readUleb128();\n  int parametersSize=readUleb128();\n  int[] parameterNames=new int[parametersSize];\n  for (int i=0; i < parametersSize; ++i) {\n    parameterNames[i]=readUleb128p1();\n  }\n  ByteArrayOutputStream baos=null;\n  try {\n    baos=new ByteArrayOutputStream(64);\n    final ByteArrayOutputStream baosRef=baos;\n    ByteOutput outAdapter=new ByteOutput(){\n      @Override public void writeByte(      int i){\n        baosRef.write(i);\n      }\n    }\n;\n    outside_whileloop:     while (true) {\n      int opcode=readByte();\n      baos.write(opcode);\nswitch (opcode) {\ncase DebugInfoItem.DBG_END_SEQUENCE:{\n          break outside_whileloop;\n        }\ncase DebugInfoItem.DBG_ADVANCE_PC:{\n        int addrDiff=readUleb128();\n        Leb128.writeUnsignedLeb128(outAdapter,addrDiff);\n        break;\n      }\ncase DebugInfoItem.DBG_ADVANCE_LINE:{\n      int lineDiff=readSleb128();\n      Leb128.writeSignedLeb128(outAdapter,lineDiff);\n      break;\n    }\ncase DebugInfoItem.DBG_START_LOCAL:case DebugInfoItem.DBG_START_LOCAL_EXTENDED:{\n    int registerNum=readUleb128();\n    Leb128.writeUnsignedLeb128(outAdapter,registerNum);\n    int nameIndex=readUleb128p1();\n    Leb128.writeUnsignedLeb128p1(outAdapter,nameIndex);\n    int typeIndex=readUleb128p1();\n    Leb128.writeUnsignedLeb128p1(outAdapter,typeIndex);\n    if (opcode == DebugInfoItem.DBG_START_LOCAL_EXTENDED) {\n      int sigIndex=readUleb128p1();\n      Leb128.writeUnsignedLeb128p1(outAdapter,sigIndex);\n    }\n    break;\n  }\ncase DebugInfoItem.DBG_END_LOCAL:case DebugInfoItem.DBG_RESTART_LOCAL:{\n  int registerNum=readUleb128();\n  Leb128.writeUnsignedLeb128(outAdapter,registerNum);\n  break;\n}\ncase DebugInfoItem.DBG_SET_FILE:{\nint nameIndex=readUleb128p1();\nLeb128.writeUnsignedLeb128p1(outAdapter,nameIndex);\nbreak;\n}\ncase DebugInfoItem.DBG_SET_PROLOGUE_END:case DebugInfoItem.DBG_SET_EPILOGUE_BEGIN:default:{\nbreak;\n}\n}\n}\nbyte[] infoSTM=baos.toByteArray();\nreturn new DebugInfoItem(off,lineStart,parameterNames,infoSTM);\n}\n  finally {\nif (baos != null) {\ntry {\nbaos.close();\n}\n catch (Exception e) {\n}\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 313,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 353,
        "startColumnNumber" : 24,
        "endLineNumber" : 353,
        "endColumnNumber" : 68
      },
      "nodeContext" : "case DebugInfoItem.DBG_START_LOCAL_EXTENDED:",
      "nodeType" : "SwitchCase",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 5,
    "type" : "byte"
  }, {
    "nodeContext" : "DebugInfoItem.DBG_START_LOCAL_EXTENDED",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 38,
      "startLineNumber" : 360,
      "startColumnNumber" : 42,
      "endLineNumber" : 360,
      "endColumnNumber" : 80
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 360,
        "startColumnNumber" : 32,
        "endLineNumber" : 360,
        "endColumnNumber" : 80
      },
      "nodeContext" : "opcode == DebugInfoItem.DBG_START_LOCAL_EXTENDED",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 233,
        "startLineNumber" : 360,
        "startColumnNumber" : 28,
        "endLineNumber" : 363,
        "endColumnNumber" : 29
      },
      "nodeContext" : "if (opcode == DebugInfoItem.DBG_START_LOCAL_EXTENDED) {\n  int sigIndex=readUleb128p1();\n  Leb128.writeUnsignedLeb128p1(outAdapter,sigIndex);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 750,
        "startLineNumber" : 353,
        "startColumnNumber" : 69,
        "endLineNumber" : 365,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  int registerNum=readUleb128();\n  Leb128.writeUnsignedLeb128(outAdapter,registerNum);\n  int nameIndex=readUleb128p1();\n  Leb128.writeUnsignedLeb128p1(outAdapter,nameIndex);\n  int typeIndex=readUleb128p1();\n  Leb128.writeUnsignedLeb128p1(outAdapter,typeIndex);\n  if (opcode == DebugInfoItem.DBG_START_LOCAL_EXTENDED) {\n    int sigIndex=readUleb128p1();\n    Leb128.writeUnsignedLeb128p1(outAdapter,sigIndex);\n  }\n  break;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 57,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2392,
        "startLineNumber" : 338,
        "startColumnNumber" : 20,
        "endLineNumber" : 382,
        "endColumnNumber" : 21
      },
      "nodeContext" : "switch (opcode) {\ncase DebugInfoItem.DBG_END_SEQUENCE:{\n    break outside_whileloop;\n  }\ncase DebugInfoItem.DBG_ADVANCE_PC:{\n  int addrDiff=readUleb128();\n  Leb128.writeUnsignedLeb128(outAdapter,addrDiff);\n  break;\n}\ncase DebugInfoItem.DBG_ADVANCE_LINE:{\nint lineDiff=readSleb128();\nLeb128.writeSignedLeb128(outAdapter,lineDiff);\nbreak;\n}\ncase DebugInfoItem.DBG_START_LOCAL:case DebugInfoItem.DBG_START_LOCAL_EXTENDED:{\nint registerNum=readUleb128();\nLeb128.writeUnsignedLeb128(outAdapter,registerNum);\nint nameIndex=readUleb128p1();\nLeb128.writeUnsignedLeb128p1(outAdapter,nameIndex);\nint typeIndex=readUleb128p1();\nLeb128.writeUnsignedLeb128p1(outAdapter,typeIndex);\nif (opcode == DebugInfoItem.DBG_START_LOCAL_EXTENDED) {\nint sigIndex=readUleb128p1();\nLeb128.writeUnsignedLeb128p1(outAdapter,sigIndex);\n}\nbreak;\n}\ncase DebugInfoItem.DBG_END_LOCAL:case DebugInfoItem.DBG_RESTART_LOCAL:{\nint registerNum=readUleb128();\nLeb128.writeUnsignedLeb128(outAdapter,registerNum);\nbreak;\n}\ncase DebugInfoItem.DBG_SET_FILE:{\nint nameIndex=readUleb128p1();\nLeb128.writeUnsignedLeb128p1(outAdapter,nameIndex);\nbreak;\n}\ncase DebugInfoItem.DBG_SET_PROLOGUE_END:case DebugInfoItem.DBG_SET_EPILOGUE_BEGIN:default:{\nbreak;\n}\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 161,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 2517,
        "startLineNumber" : 335,
        "startColumnNumber" : 29,
        "endLineNumber" : 383,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  int opcode=readByte();\n  baos.write(opcode);\nswitch (opcode) {\ncase DebugInfoItem.DBG_END_SEQUENCE:{\n      break outside_whileloop;\n    }\ncase DebugInfoItem.DBG_ADVANCE_PC:{\n    int addrDiff=readUleb128();\n    Leb128.writeUnsignedLeb128(outAdapter,addrDiff);\n    break;\n  }\ncase DebugInfoItem.DBG_ADVANCE_LINE:{\n  int lineDiff=readSleb128();\n  Leb128.writeSignedLeb128(outAdapter,lineDiff);\n  break;\n}\ncase DebugInfoItem.DBG_START_LOCAL:case DebugInfoItem.DBG_START_LOCAL_EXTENDED:{\nint registerNum=readUleb128();\nLeb128.writeUnsignedLeb128(outAdapter,registerNum);\nint nameIndex=readUleb128p1();\nLeb128.writeUnsignedLeb128p1(outAdapter,nameIndex);\nint typeIndex=readUleb128p1();\nLeb128.writeUnsignedLeb128p1(outAdapter,typeIndex);\nif (opcode == DebugInfoItem.DBG_START_LOCAL_EXTENDED) {\n  int sigIndex=readUleb128p1();\n  Leb128.writeUnsignedLeb128p1(outAdapter,sigIndex);\n}\nbreak;\n}\ncase DebugInfoItem.DBG_END_LOCAL:case DebugInfoItem.DBG_RESTART_LOCAL:{\nint registerNum=readUleb128();\nLeb128.writeUnsignedLeb128(outAdapter,registerNum);\nbreak;\n}\ncase DebugInfoItem.DBG_SET_FILE:{\nint nameIndex=readUleb128p1();\nLeb128.writeUnsignedLeb128p1(outAdapter,nameIndex);\nbreak;\n}\ncase DebugInfoItem.DBG_SET_PROLOGUE_END:case DebugInfoItem.DBG_SET_EPILOGUE_BEGIN:default:{\nbreak;\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 173,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LabeledStatement,body]",
      "nodePosition" : {
        "charLength" : 2530,
        "startLineNumber" : 335,
        "startColumnNumber" : 16,
        "endLineNumber" : 383,
        "endColumnNumber" : 17
      },
      "nodeContext" : "while (true) {\n  int opcode=readByte();\n  baos.write(opcode);\nswitch (opcode) {\ncase DebugInfoItem.DBG_END_SEQUENCE:{\n      break outside_whileloop;\n    }\ncase DebugInfoItem.DBG_ADVANCE_PC:{\n    int addrDiff=readUleb128();\n    Leb128.writeUnsignedLeb128(outAdapter,addrDiff);\n    break;\n  }\ncase DebugInfoItem.DBG_ADVANCE_LINE:{\n  int lineDiff=readSleb128();\n  Leb128.writeSignedLeb128(outAdapter,lineDiff);\n  break;\n}\ncase DebugInfoItem.DBG_START_LOCAL:case DebugInfoItem.DBG_START_LOCAL_EXTENDED:{\nint registerNum=readUleb128();\nLeb128.writeUnsignedLeb128(outAdapter,registerNum);\nint nameIndex=readUleb128p1();\nLeb128.writeUnsignedLeb128p1(outAdapter,nameIndex);\nint typeIndex=readUleb128p1();\nLeb128.writeUnsignedLeb128p1(outAdapter,typeIndex);\nif (opcode == DebugInfoItem.DBG_START_LOCAL_EXTENDED) {\n  int sigIndex=readUleb128p1();\n  Leb128.writeUnsignedLeb128p1(outAdapter,sigIndex);\n}\nbreak;\n}\ncase DebugInfoItem.DBG_END_LOCAL:case DebugInfoItem.DBG_RESTART_LOCAL:{\nint registerNum=readUleb128();\nLeb128.writeUnsignedLeb128(outAdapter,registerNum);\nbreak;\n}\ncase DebugInfoItem.DBG_SET_FILE:{\nint nameIndex=readUleb128p1();\nLeb128.writeUnsignedLeb128p1(outAdapter,nameIndex);\nbreak;\n}\ncase DebugInfoItem.DBG_SET_PROLOGUE_END:case DebugInfoItem.DBG_SET_EPILOGUE_BEGIN:default:{\nbreak;\n}\n}\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 175,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2565,
        "startLineNumber" : 334,
        "startColumnNumber" : 12,
        "endLineNumber" : 383,
        "endColumnNumber" : 17
      },
      "nodeContext" : "outside_whileloop: while (true) {\n  int opcode=readByte();\n  baos.write(opcode);\nswitch (opcode) {\ncase DebugInfoItem.DBG_END_SEQUENCE:{\n      break outside_whileloop;\n    }\ncase DebugInfoItem.DBG_ADVANCE_PC:{\n    int addrDiff=readUleb128();\n    Leb128.writeUnsignedLeb128(outAdapter,addrDiff);\n    break;\n  }\ncase DebugInfoItem.DBG_ADVANCE_LINE:{\n  int lineDiff=readSleb128();\n  Leb128.writeSignedLeb128(outAdapter,lineDiff);\n  break;\n}\ncase DebugInfoItem.DBG_START_LOCAL:case DebugInfoItem.DBG_START_LOCAL_EXTENDED:{\nint registerNum=readUleb128();\nLeb128.writeUnsignedLeb128(outAdapter,registerNum);\nint nameIndex=readUleb128p1();\nLeb128.writeUnsignedLeb128p1(outAdapter,nameIndex);\nint typeIndex=readUleb128p1();\nLeb128.writeUnsignedLeb128p1(outAdapter,typeIndex);\nif (opcode == DebugInfoItem.DBG_START_LOCAL_EXTENDED) {\n  int sigIndex=readUleb128p1();\n  Leb128.writeUnsignedLeb128p1(outAdapter,sigIndex);\n}\nbreak;\n}\ncase DebugInfoItem.DBG_END_LOCAL:case DebugInfoItem.DBG_RESTART_LOCAL:{\nint registerNum=readUleb128();\nLeb128.writeUnsignedLeb128(outAdapter,registerNum);\nbreak;\n}\ncase DebugInfoItem.DBG_SET_FILE:{\nint nameIndex=readUleb128p1();\nLeb128.writeUnsignedLeb128p1(outAdapter,nameIndex);\nbreak;\n}\ncase DebugInfoItem.DBG_SET_PROLOGUE_END:case DebugInfoItem.DBG_SET_EPILOGUE_BEGIN:default:{\nbreak;\n}\n}\n}\n",
      "nodeType" : "LabeledStatement",
      "astNodeNumber" : 177,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 3026,
        "startLineNumber" : 322,
        "startColumnNumber" : 12,
        "endLineNumber" : 387,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  baos=new ByteArrayOutputStream(64);\n  final ByteArrayOutputStream baosRef=baos;\n  ByteOutput outAdapter=new ByteOutput(){\n    @Override public void writeByte(    int i){\n      baosRef.write(i);\n    }\n  }\n;\n  outside_whileloop:   while (true) {\n    int opcode=readByte();\n    baos.write(opcode);\nswitch (opcode) {\ncase DebugInfoItem.DBG_END_SEQUENCE:{\n        break outside_whileloop;\n      }\ncase DebugInfoItem.DBG_ADVANCE_PC:{\n      int addrDiff=readUleb128();\n      Leb128.writeUnsignedLeb128(outAdapter,addrDiff);\n      break;\n    }\ncase DebugInfoItem.DBG_ADVANCE_LINE:{\n    int lineDiff=readSleb128();\n    Leb128.writeSignedLeb128(outAdapter,lineDiff);\n    break;\n  }\ncase DebugInfoItem.DBG_START_LOCAL:case DebugInfoItem.DBG_START_LOCAL_EXTENDED:{\n  int registerNum=readUleb128();\n  Leb128.writeUnsignedLeb128(outAdapter,registerNum);\n  int nameIndex=readUleb128p1();\n  Leb128.writeUnsignedLeb128p1(outAdapter,nameIndex);\n  int typeIndex=readUleb128p1();\n  Leb128.writeUnsignedLeb128p1(outAdapter,typeIndex);\n  if (opcode == DebugInfoItem.DBG_START_LOCAL_EXTENDED) {\n    int sigIndex=readUleb128p1();\n    Leb128.writeUnsignedLeb128p1(outAdapter,sigIndex);\n  }\n  break;\n}\ncase DebugInfoItem.DBG_END_LOCAL:case DebugInfoItem.DBG_RESTART_LOCAL:{\nint registerNum=readUleb128();\nLeb128.writeUnsignedLeb128(outAdapter,registerNum);\nbreak;\n}\ncase DebugInfoItem.DBG_SET_FILE:{\nint nameIndex=readUleb128p1();\nLeb128.writeUnsignedLeb128p1(outAdapter,nameIndex);\nbreak;\n}\ncase DebugInfoItem.DBG_SET_PROLOGUE_END:case DebugInfoItem.DBG_SET_EPILOGUE_BEGIN:default:{\nbreak;\n}\n}\n}\nbyte[] infoSTM=baos.toByteArray();\nreturn new DebugInfoItem(off,lineStart,parameterNames,infoSTM);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 233,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3245,
        "startLineNumber" : 322,
        "startColumnNumber" : 8,
        "endLineNumber" : 395,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  baos=new ByteArrayOutputStream(64);\n  final ByteArrayOutputStream baosRef=baos;\n  ByteOutput outAdapter=new ByteOutput(){\n    @Override public void writeByte(    int i){\n      baosRef.write(i);\n    }\n  }\n;\n  outside_whileloop:   while (true) {\n    int opcode=readByte();\n    baos.write(opcode);\nswitch (opcode) {\ncase DebugInfoItem.DBG_END_SEQUENCE:{\n        break outside_whileloop;\n      }\ncase DebugInfoItem.DBG_ADVANCE_PC:{\n      int addrDiff=readUleb128();\n      Leb128.writeUnsignedLeb128(outAdapter,addrDiff);\n      break;\n    }\ncase DebugInfoItem.DBG_ADVANCE_LINE:{\n    int lineDiff=readSleb128();\n    Leb128.writeSignedLeb128(outAdapter,lineDiff);\n    break;\n  }\ncase DebugInfoItem.DBG_START_LOCAL:case DebugInfoItem.DBG_START_LOCAL_EXTENDED:{\n  int registerNum=readUleb128();\n  Leb128.writeUnsignedLeb128(outAdapter,registerNum);\n  int nameIndex=readUleb128p1();\n  Leb128.writeUnsignedLeb128p1(outAdapter,nameIndex);\n  int typeIndex=readUleb128p1();\n  Leb128.writeUnsignedLeb128p1(outAdapter,typeIndex);\n  if (opcode == DebugInfoItem.DBG_START_LOCAL_EXTENDED) {\n    int sigIndex=readUleb128p1();\n    Leb128.writeUnsignedLeb128p1(outAdapter,sigIndex);\n  }\n  break;\n}\ncase DebugInfoItem.DBG_END_LOCAL:case DebugInfoItem.DBG_RESTART_LOCAL:{\nint registerNum=readUleb128();\nLeb128.writeUnsignedLeb128(outAdapter,registerNum);\nbreak;\n}\ncase DebugInfoItem.DBG_SET_FILE:{\nint nameIndex=readUleb128p1();\nLeb128.writeUnsignedLeb128p1(outAdapter,nameIndex);\nbreak;\n}\ncase DebugInfoItem.DBG_SET_PROLOGUE_END:case DebugInfoItem.DBG_SET_EPILOGUE_BEGIN:default:{\nbreak;\n}\n}\n}\nbyte[] infoSTM=baos.toByteArray();\nreturn new DebugInfoItem(off,lineStart,parameterNames,infoSTM);\n}\n  finally {\nif (baos != null) {\ntry {\nbaos.close();\n}\n catch (Exception e) {\n}\n}\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 252,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3591,
        "startLineNumber" : 310,
        "startColumnNumber" : 45,
        "endLineNumber" : 396,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int off=data.position();\n  int lineStart=readUleb128();\n  int parametersSize=readUleb128();\n  int[] parameterNames=new int[parametersSize];\n  for (int i=0; i < parametersSize; ++i) {\n    parameterNames[i]=readUleb128p1();\n  }\n  ByteArrayOutputStream baos=null;\n  try {\n    baos=new ByteArrayOutputStream(64);\n    final ByteArrayOutputStream baosRef=baos;\n    ByteOutput outAdapter=new ByteOutput(){\n      @Override public void writeByte(      int i){\n        baosRef.write(i);\n      }\n    }\n;\n    outside_whileloop:     while (true) {\n      int opcode=readByte();\n      baos.write(opcode);\nswitch (opcode) {\ncase DebugInfoItem.DBG_END_SEQUENCE:{\n          break outside_whileloop;\n        }\ncase DebugInfoItem.DBG_ADVANCE_PC:{\n        int addrDiff=readUleb128();\n        Leb128.writeUnsignedLeb128(outAdapter,addrDiff);\n        break;\n      }\ncase DebugInfoItem.DBG_ADVANCE_LINE:{\n      int lineDiff=readSleb128();\n      Leb128.writeSignedLeb128(outAdapter,lineDiff);\n      break;\n    }\ncase DebugInfoItem.DBG_START_LOCAL:case DebugInfoItem.DBG_START_LOCAL_EXTENDED:{\n    int registerNum=readUleb128();\n    Leb128.writeUnsignedLeb128(outAdapter,registerNum);\n    int nameIndex=readUleb128p1();\n    Leb128.writeUnsignedLeb128p1(outAdapter,nameIndex);\n    int typeIndex=readUleb128p1();\n    Leb128.writeUnsignedLeb128p1(outAdapter,typeIndex);\n    if (opcode == DebugInfoItem.DBG_START_LOCAL_EXTENDED) {\n      int sigIndex=readUleb128p1();\n      Leb128.writeUnsignedLeb128p1(outAdapter,sigIndex);\n    }\n    break;\n  }\ncase DebugInfoItem.DBG_END_LOCAL:case DebugInfoItem.DBG_RESTART_LOCAL:{\n  int registerNum=readUleb128();\n  Leb128.writeUnsignedLeb128(outAdapter,registerNum);\n  break;\n}\ncase DebugInfoItem.DBG_SET_FILE:{\nint nameIndex=readUleb128p1();\nLeb128.writeUnsignedLeb128p1(outAdapter,nameIndex);\nbreak;\n}\ncase DebugInfoItem.DBG_SET_PROLOGUE_END:case DebugInfoItem.DBG_SET_EPILOGUE_BEGIN:default:{\nbreak;\n}\n}\n}\nbyte[] infoSTM=baos.toByteArray();\nreturn new DebugInfoItem(off,lineStart,parameterNames,infoSTM);\n}\n  finally {\nif (baos != null) {\ntry {\nbaos.close();\n}\n catch (Exception e) {\n}\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 308,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3632,
        "startLineNumber" : 310,
        "startColumnNumber" : 4,
        "endLineNumber" : 396,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public DebugInfoItem readDebugInfoItem(){\n  int off=data.position();\n  int lineStart=readUleb128();\n  int parametersSize=readUleb128();\n  int[] parameterNames=new int[parametersSize];\n  for (int i=0; i < parametersSize; ++i) {\n    parameterNames[i]=readUleb128p1();\n  }\n  ByteArrayOutputStream baos=null;\n  try {\n    baos=new ByteArrayOutputStream(64);\n    final ByteArrayOutputStream baosRef=baos;\n    ByteOutput outAdapter=new ByteOutput(){\n      @Override public void writeByte(      int i){\n        baosRef.write(i);\n      }\n    }\n;\n    outside_whileloop:     while (true) {\n      int opcode=readByte();\n      baos.write(opcode);\nswitch (opcode) {\ncase DebugInfoItem.DBG_END_SEQUENCE:{\n          break outside_whileloop;\n        }\ncase DebugInfoItem.DBG_ADVANCE_PC:{\n        int addrDiff=readUleb128();\n        Leb128.writeUnsignedLeb128(outAdapter,addrDiff);\n        break;\n      }\ncase DebugInfoItem.DBG_ADVANCE_LINE:{\n      int lineDiff=readSleb128();\n      Leb128.writeSignedLeb128(outAdapter,lineDiff);\n      break;\n    }\ncase DebugInfoItem.DBG_START_LOCAL:case DebugInfoItem.DBG_START_LOCAL_EXTENDED:{\n    int registerNum=readUleb128();\n    Leb128.writeUnsignedLeb128(outAdapter,registerNum);\n    int nameIndex=readUleb128p1();\n    Leb128.writeUnsignedLeb128p1(outAdapter,nameIndex);\n    int typeIndex=readUleb128p1();\n    Leb128.writeUnsignedLeb128p1(outAdapter,typeIndex);\n    if (opcode == DebugInfoItem.DBG_START_LOCAL_EXTENDED) {\n      int sigIndex=readUleb128p1();\n      Leb128.writeUnsignedLeb128p1(outAdapter,sigIndex);\n    }\n    break;\n  }\ncase DebugInfoItem.DBG_END_LOCAL:case DebugInfoItem.DBG_RESTART_LOCAL:{\n  int registerNum=readUleb128();\n  Leb128.writeUnsignedLeb128(outAdapter,registerNum);\n  break;\n}\ncase DebugInfoItem.DBG_SET_FILE:{\nint nameIndex=readUleb128p1();\nLeb128.writeUnsignedLeb128p1(outAdapter,nameIndex);\nbreak;\n}\ncase DebugInfoItem.DBG_SET_PROLOGUE_END:case DebugInfoItem.DBG_SET_EPILOGUE_BEGIN:default:{\nbreak;\n}\n}\n}\nbyte[] infoSTM=baos.toByteArray();\nreturn new DebugInfoItem(off,lineStart,parameterNames,infoSTM);\n}\n  finally {\nif (baos != null) {\ntry {\nbaos.close();\n}\n catch (Exception e) {\n}\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 313,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 360,
        "startColumnNumber" : 32,
        "endLineNumber" : 360,
        "endColumnNumber" : 80
      },
      "nodeContext" : "opcode == DebugInfoItem.DBG_START_LOCAL_EXTENDED",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 5,
    "type" : "byte"
  } ],
  "positionList" : [ {
    "charLength" : 38,
    "startLineNumber" : 353,
    "startColumnNumber" : 29,
    "endLineNumber" : 353,
    "endColumnNumber" : 67
  }, {
    "charLength" : 38,
    "startLineNumber" : 360,
    "startColumnNumber" : 42,
    "endLineNumber" : 360,
    "endColumnNumber" : 80
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}