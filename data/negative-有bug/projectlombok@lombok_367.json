{
  "id" : 367,
  "expression" : "fullyQualifiedName",
  "projectName" : "projectlombok@lombok",
  "commitID" : "25def866b50860715ee7c315c678b8c3d1ba9b56",
  "filePath" : "/src/eclipseAgent/lombok/eclipse/agent/PatchValEclipse.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "fullyQualifiedName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 144,
      "startColumnNumber" : 22,
      "endLineNumber" : 144,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 144,
        "startColumnNumber" : 9,
        "endLineNumber" : 144,
        "endColumnNumber" : 41
      },
      "nodeContext" : "\"val\".equals(fullyQualifiedName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 144,
        "startColumnNumber" : 9,
        "endLineNumber" : 144,
        "endColumnNumber" : 84
      },
      "nodeContext" : "\"val\".equals(fullyQualifiedName) || \"lombok.val\".equals(fullyQualifiedName)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 144,
        "startColumnNumber" : 5,
        "endLineNumber" : 146,
        "endColumnNumber" : 6
      },
      "nodeContext" : "if (\"val\".equals(fullyQualifiedName) || \"lombok.val\".equals(fullyQualifiedName)) {\n  valIsPresent=true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 196,
        "startLineNumber" : 142,
        "startColumnNumber" : 26,
        "endLineNumber" : 147,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String fullyQualifiedName=typeName.getFullyQualifiedName();\n  if (\"val\".equals(fullyQualifiedName) || \"lombok.val\".equals(fullyQualifiedName)) {\n    valIsPresent=true;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 218,
        "startLineNumber" : 142,
        "startColumnNumber" : 4,
        "endLineNumber" : 147,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (typeName != null) {\n  String fullyQualifiedName=typeName.getFullyQualifiedName();\n  if (\"val\".equals(fullyQualifiedName) || \"lombok.val\".equals(fullyQualifiedName)) {\n    valIsPresent=true;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 28,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 312,
        "startLineNumber" : 140,
        "startColumnNumber" : 63,
        "endLineNumber" : 148,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  Name typeName=((org.eclipse.jdt.core.dom.Annotation)present).getTypeName();\n  if (typeName != null) {\n    String fullyQualifiedName=typeName.getFullyQualifiedName();\n    if (\"val\".equals(fullyQualifiedName) || \"lombok.val\".equals(fullyQualifiedName)) {\n      valIsPresent=true;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 372,
        "startLineNumber" : 140,
        "startColumnNumber" : 3,
        "endLineNumber" : 148,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (present instanceof org.eclipse.jdt.core.dom.Annotation) {\n  Name typeName=((org.eclipse.jdt.core.dom.Annotation)present).getTypeName();\n  if (typeName != null) {\n    String fullyQualifiedName=typeName.getFullyQualifiedName();\n    if (\"val\".equals(fullyQualifiedName) || \"lombok.val\".equals(fullyQualifiedName)) {\n      valIsPresent=true;\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 66,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 599,
        "startLineNumber" : 133,
        "startColumnNumber" : 35,
        "endLineNumber" : 149,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (present instanceof Modifier) {\n    ModifierKeyword keyword=((Modifier)present).getKeyword();\n    if (keyword == null)     continue;\n    if (keyword.toFlagValue() == Modifier.FINAL)     finalIsPresent=true;\n  }\n  if (present instanceof org.eclipse.jdt.core.dom.Annotation) {\n    Name typeName=((org.eclipse.jdt.core.dom.Annotation)present).getTypeName();\n    if (typeName != null) {\n      String fullyQualifiedName=typeName.getFullyQualifiedName();\n      if (\"val\".equals(fullyQualifiedName) || \"lombok.val\".equals(fullyQualifiedName)) {\n        valIsPresent=true;\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 632,
        "startLineNumber" : 133,
        "startColumnNumber" : 2,
        "endLineNumber" : 149,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (Object present : modifiers) {\n  if (present instanceof Modifier) {\n    ModifierKeyword keyword=((Modifier)present).getKeyword();\n    if (keyword == null)     continue;\n    if (keyword.toFlagValue() == Modifier.FINAL)     finalIsPresent=true;\n  }\n  if (present instanceof org.eclipse.jdt.core.dom.Annotation) {\n    Name typeName=((org.eclipse.jdt.core.dom.Annotation)present).getTypeName();\n    if (typeName != null) {\n      String fullyQualifiedName=typeName.getFullyQualifiedName();\n      if (\"val\".equals(fullyQualifiedName) || \"lombok.val\".equals(fullyQualifiedName)) {\n        valIsPresent=true;\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 108,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2014,
        "startLineNumber" : 110,
        "startColumnNumber" : 142,
        "endLineNumber" : 168,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if ((in.modifiers & ClassFileConstants.AccFinal) == 0)   return;\n  if (in.annotations == null)   return;\n  boolean found=false;\n  Annotation valAnnotation=null;\n  for (  Annotation ann : in.annotations) {\n    if (PatchVal.couldBeVal(ann.type)) {\n      found=true;\n      valAnnotation=ann;\n      break;\n    }\n  }\n  if (!found)   return;\n  if (modifiers == null)   return;\n  boolean finalIsPresent=false;\n  boolean valIsPresent=false;\n  for (  Object present : modifiers) {\n    if (present instanceof Modifier) {\n      ModifierKeyword keyword=((Modifier)present).getKeyword();\n      if (keyword == null)       continue;\n      if (keyword.toFlagValue() == Modifier.FINAL)       finalIsPresent=true;\n    }\n    if (present instanceof org.eclipse.jdt.core.dom.Annotation) {\n      Name typeName=((org.eclipse.jdt.core.dom.Annotation)present).getTypeName();\n      if (typeName != null) {\n        String fullyQualifiedName=typeName.getFullyQualifiedName();\n        if (\"val\".equals(fullyQualifiedName) || \"lombok.val\".equals(fullyQualifiedName)) {\n          valIsPresent=true;\n        }\n      }\n    }\n  }\n  if (!finalIsPresent) {\n    modifiers.add(createModifier(ast,ModifierKeyword.FINAL_KEYWORD,valAnnotation.sourceStart,valAnnotation.sourceEnd));\n  }\n  if (!valIsPresent) {\n    MarkerAnnotation newAnnotation=createValAnnotation(ast,valAnnotation,valAnnotation.sourceStart,valAnnotation.sourceEnd);\n    try {\n      Reflection.astConverterRecordNodes.invoke(converter,newAnnotation,valAnnotation);\n      Reflection.astConverterRecordNodes.invoke(converter,newAnnotation.getTypeName(),valAnnotation.type);\n    }\n catch (    IllegalAccessException e) {\n      Lombok.sneakyThrow(e);\n    }\ncatch (    InvocationTargetException e) {\n      Lombok.sneakyThrow(e.getCause());\n    }\n    modifiers.add(newAnnotation);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 276,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2155,
        "startLineNumber" : 110,
        "startColumnNumber" : 1,
        "endLineNumber" : 168,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public static void addFinalAndValAnnotationToModifierList(Object converter,List<IExtendedModifier> modifiers,AST ast,LocalDeclaration in){\n  if ((in.modifiers & ClassFileConstants.AccFinal) == 0)   return;\n  if (in.annotations == null)   return;\n  boolean found=false;\n  Annotation valAnnotation=null;\n  for (  Annotation ann : in.annotations) {\n    if (PatchVal.couldBeVal(ann.type)) {\n      found=true;\n      valAnnotation=ann;\n      break;\n    }\n  }\n  if (!found)   return;\n  if (modifiers == null)   return;\n  boolean finalIsPresent=false;\n  boolean valIsPresent=false;\n  for (  Object present : modifiers) {\n    if (present instanceof Modifier) {\n      ModifierKeyword keyword=((Modifier)present).getKeyword();\n      if (keyword == null)       continue;\n      if (keyword.toFlagValue() == Modifier.FINAL)       finalIsPresent=true;\n    }\n    if (present instanceof org.eclipse.jdt.core.dom.Annotation) {\n      Name typeName=((org.eclipse.jdt.core.dom.Annotation)present).getTypeName();\n      if (typeName != null) {\n        String fullyQualifiedName=typeName.getFullyQualifiedName();\n        if (\"val\".equals(fullyQualifiedName) || \"lombok.val\".equals(fullyQualifiedName)) {\n          valIsPresent=true;\n        }\n      }\n    }\n  }\n  if (!finalIsPresent) {\n    modifiers.add(createModifier(ast,ModifierKeyword.FINAL_KEYWORD,valAnnotation.sourceStart,valAnnotation.sourceEnd));\n  }\n  if (!valIsPresent) {\n    MarkerAnnotation newAnnotation=createValAnnotation(ast,valAnnotation,valAnnotation.sourceStart,valAnnotation.sourceEnd);\n    try {\n      Reflection.astConverterRecordNodes.invoke(converter,newAnnotation,valAnnotation);\n      Reflection.astConverterRecordNodes.invoke(converter,newAnnotation.getTypeName(),valAnnotation.type);\n    }\n catch (    IllegalAccessException e) {\n      Lombok.sneakyThrow(e);\n    }\ncatch (    InvocationTargetException e) {\n      Lombok.sneakyThrow(e.getCause());\n    }\n    modifiers.add(newAnnotation);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 300,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 144,
        "startColumnNumber" : 9,
        "endLineNumber" : 144,
        "endColumnNumber" : 84
      },
      "nodeContext" : "\"val\".equals(fullyQualifiedName) || \"lombok.val\".equals(fullyQualifiedName)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "fullyQualifiedName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 144,
      "startColumnNumber" : 65,
      "endLineNumber" : 144,
      "endColumnNumber" : 83
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 144,
        "startColumnNumber" : 45,
        "endLineNumber" : 144,
        "endColumnNumber" : 84
      },
      "nodeContext" : "\"lombok.val\".equals(fullyQualifiedName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 144,
        "startColumnNumber" : 9,
        "endLineNumber" : 144,
        "endColumnNumber" : 84
      },
      "nodeContext" : "\"val\".equals(fullyQualifiedName) || \"lombok.val\".equals(fullyQualifiedName)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 144,
        "startColumnNumber" : 5,
        "endLineNumber" : 146,
        "endColumnNumber" : 6
      },
      "nodeContext" : "if (\"val\".equals(fullyQualifiedName) || \"lombok.val\".equals(fullyQualifiedName)) {\n  valIsPresent=true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 196,
        "startLineNumber" : 142,
        "startColumnNumber" : 26,
        "endLineNumber" : 147,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String fullyQualifiedName=typeName.getFullyQualifiedName();\n  if (\"val\".equals(fullyQualifiedName) || \"lombok.val\".equals(fullyQualifiedName)) {\n    valIsPresent=true;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 218,
        "startLineNumber" : 142,
        "startColumnNumber" : 4,
        "endLineNumber" : 147,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (typeName != null) {\n  String fullyQualifiedName=typeName.getFullyQualifiedName();\n  if (\"val\".equals(fullyQualifiedName) || \"lombok.val\".equals(fullyQualifiedName)) {\n    valIsPresent=true;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 28,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 312,
        "startLineNumber" : 140,
        "startColumnNumber" : 63,
        "endLineNumber" : 148,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  Name typeName=((org.eclipse.jdt.core.dom.Annotation)present).getTypeName();\n  if (typeName != null) {\n    String fullyQualifiedName=typeName.getFullyQualifiedName();\n    if (\"val\".equals(fullyQualifiedName) || \"lombok.val\".equals(fullyQualifiedName)) {\n      valIsPresent=true;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 372,
        "startLineNumber" : 140,
        "startColumnNumber" : 3,
        "endLineNumber" : 148,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (present instanceof org.eclipse.jdt.core.dom.Annotation) {\n  Name typeName=((org.eclipse.jdt.core.dom.Annotation)present).getTypeName();\n  if (typeName != null) {\n    String fullyQualifiedName=typeName.getFullyQualifiedName();\n    if (\"val\".equals(fullyQualifiedName) || \"lombok.val\".equals(fullyQualifiedName)) {\n      valIsPresent=true;\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 66,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 599,
        "startLineNumber" : 133,
        "startColumnNumber" : 35,
        "endLineNumber" : 149,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (present instanceof Modifier) {\n    ModifierKeyword keyword=((Modifier)present).getKeyword();\n    if (keyword == null)     continue;\n    if (keyword.toFlagValue() == Modifier.FINAL)     finalIsPresent=true;\n  }\n  if (present instanceof org.eclipse.jdt.core.dom.Annotation) {\n    Name typeName=((org.eclipse.jdt.core.dom.Annotation)present).getTypeName();\n    if (typeName != null) {\n      String fullyQualifiedName=typeName.getFullyQualifiedName();\n      if (\"val\".equals(fullyQualifiedName) || \"lombok.val\".equals(fullyQualifiedName)) {\n        valIsPresent=true;\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 632,
        "startLineNumber" : 133,
        "startColumnNumber" : 2,
        "endLineNumber" : 149,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (Object present : modifiers) {\n  if (present instanceof Modifier) {\n    ModifierKeyword keyword=((Modifier)present).getKeyword();\n    if (keyword == null)     continue;\n    if (keyword.toFlagValue() == Modifier.FINAL)     finalIsPresent=true;\n  }\n  if (present instanceof org.eclipse.jdt.core.dom.Annotation) {\n    Name typeName=((org.eclipse.jdt.core.dom.Annotation)present).getTypeName();\n    if (typeName != null) {\n      String fullyQualifiedName=typeName.getFullyQualifiedName();\n      if (\"val\".equals(fullyQualifiedName) || \"lombok.val\".equals(fullyQualifiedName)) {\n        valIsPresent=true;\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 108,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2014,
        "startLineNumber" : 110,
        "startColumnNumber" : 142,
        "endLineNumber" : 168,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if ((in.modifiers & ClassFileConstants.AccFinal) == 0)   return;\n  if (in.annotations == null)   return;\n  boolean found=false;\n  Annotation valAnnotation=null;\n  for (  Annotation ann : in.annotations) {\n    if (PatchVal.couldBeVal(ann.type)) {\n      found=true;\n      valAnnotation=ann;\n      break;\n    }\n  }\n  if (!found)   return;\n  if (modifiers == null)   return;\n  boolean finalIsPresent=false;\n  boolean valIsPresent=false;\n  for (  Object present : modifiers) {\n    if (present instanceof Modifier) {\n      ModifierKeyword keyword=((Modifier)present).getKeyword();\n      if (keyword == null)       continue;\n      if (keyword.toFlagValue() == Modifier.FINAL)       finalIsPresent=true;\n    }\n    if (present instanceof org.eclipse.jdt.core.dom.Annotation) {\n      Name typeName=((org.eclipse.jdt.core.dom.Annotation)present).getTypeName();\n      if (typeName != null) {\n        String fullyQualifiedName=typeName.getFullyQualifiedName();\n        if (\"val\".equals(fullyQualifiedName) || \"lombok.val\".equals(fullyQualifiedName)) {\n          valIsPresent=true;\n        }\n      }\n    }\n  }\n  if (!finalIsPresent) {\n    modifiers.add(createModifier(ast,ModifierKeyword.FINAL_KEYWORD,valAnnotation.sourceStart,valAnnotation.sourceEnd));\n  }\n  if (!valIsPresent) {\n    MarkerAnnotation newAnnotation=createValAnnotation(ast,valAnnotation,valAnnotation.sourceStart,valAnnotation.sourceEnd);\n    try {\n      Reflection.astConverterRecordNodes.invoke(converter,newAnnotation,valAnnotation);\n      Reflection.astConverterRecordNodes.invoke(converter,newAnnotation.getTypeName(),valAnnotation.type);\n    }\n catch (    IllegalAccessException e) {\n      Lombok.sneakyThrow(e);\n    }\ncatch (    InvocationTargetException e) {\n      Lombok.sneakyThrow(e.getCause());\n    }\n    modifiers.add(newAnnotation);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 276,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2155,
        "startLineNumber" : 110,
        "startColumnNumber" : 1,
        "endLineNumber" : 168,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public static void addFinalAndValAnnotationToModifierList(Object converter,List<IExtendedModifier> modifiers,AST ast,LocalDeclaration in){\n  if ((in.modifiers & ClassFileConstants.AccFinal) == 0)   return;\n  if (in.annotations == null)   return;\n  boolean found=false;\n  Annotation valAnnotation=null;\n  for (  Annotation ann : in.annotations) {\n    if (PatchVal.couldBeVal(ann.type)) {\n      found=true;\n      valAnnotation=ann;\n      break;\n    }\n  }\n  if (!found)   return;\n  if (modifiers == null)   return;\n  boolean finalIsPresent=false;\n  boolean valIsPresent=false;\n  for (  Object present : modifiers) {\n    if (present instanceof Modifier) {\n      ModifierKeyword keyword=((Modifier)present).getKeyword();\n      if (keyword == null)       continue;\n      if (keyword.toFlagValue() == Modifier.FINAL)       finalIsPresent=true;\n    }\n    if (present instanceof org.eclipse.jdt.core.dom.Annotation) {\n      Name typeName=((org.eclipse.jdt.core.dom.Annotation)present).getTypeName();\n      if (typeName != null) {\n        String fullyQualifiedName=typeName.getFullyQualifiedName();\n        if (\"val\".equals(fullyQualifiedName) || \"lombok.val\".equals(fullyQualifiedName)) {\n          valIsPresent=true;\n        }\n      }\n    }\n  }\n  if (!finalIsPresent) {\n    modifiers.add(createModifier(ast,ModifierKeyword.FINAL_KEYWORD,valAnnotation.sourceStart,valAnnotation.sourceEnd));\n  }\n  if (!valIsPresent) {\n    MarkerAnnotation newAnnotation=createValAnnotation(ast,valAnnotation,valAnnotation.sourceStart,valAnnotation.sourceEnd);\n    try {\n      Reflection.astConverterRecordNodes.invoke(converter,newAnnotation,valAnnotation);\n      Reflection.astConverterRecordNodes.invoke(converter,newAnnotation.getTypeName(),valAnnotation.type);\n    }\n catch (    IllegalAccessException e) {\n      Lombok.sneakyThrow(e);\n    }\ncatch (    InvocationTargetException e) {\n      Lombok.sneakyThrow(e.getCause());\n    }\n    modifiers.add(newAnnotation);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 300,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 144,
        "startColumnNumber" : 9,
        "endLineNumber" : 144,
        "endColumnNumber" : 84
      },
      "nodeContext" : "\"val\".equals(fullyQualifiedName) || \"lombok.val\".equals(fullyQualifiedName)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 144,
    "startColumnNumber" : 22,
    "endLineNumber" : 144,
    "endColumnNumber" : 40
  }, {
    "charLength" : 18,
    "startLineNumber" : 144,
    "startColumnNumber" : 65,
    "endLineNumber" : 144,
    "endColumnNumber" : 83
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}