{
  "id" : 174,
  "expression" : "length * fin",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/entities/effect/ParticleEffect.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "length * fin",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 47,
      "startColumnNumber" : 51,
      "endLineNumber" : 47,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 47,
        "startColumnNumber" : 51,
        "endLineNumber" : 47,
        "endColumnNumber" : 76
      },
      "nodeContext" : "length * fin + baseLength",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 185,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 49,
        "endColumnNumber" : 14
      },
      "nodeContext" : "Angles.randLenVectors(e.id,particles,length * fin + baseLength,e.rotation,cone,(x,y) -> {\n  Lines.lineAngle(e.x + x,e.y + y,Mathf.angle(x,y),len);\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 42,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 186,
        "startLineNumber" : 47,
        "startColumnNumber" : 12,
        "endLineNumber" : 49,
        "endColumnNumber" : 15
      },
      "nodeContext" : "Angles.randLenVectors(e.id,particles,length * fin + baseLength,e.rotation,cone,(x,y) -> {\n  Lines.lineAngle(e.x + x,e.y + y,Mathf.angle(x,y),len);\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 43,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 343,
        "startLineNumber" : 43,
        "startColumnNumber" : 16,
        "endLineNumber" : 50,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Lines.stroke(interp.apply(strokeFrom,strokeTo,rawfin));\n  float len=interp.apply(lenFrom,lenTo,rawfin);\n  Angles.randLenVectors(e.id,particles,length * fin + baseLength,e.rotation,cone,(x,y) -> {\n    Lines.lineAngle(e.x + x,e.y + y,Mathf.angle(x,y),len);\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 571,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (line) {\n  Lines.stroke(interp.apply(strokeFrom,strokeTo,rawfin));\n  float len=interp.apply(lenFrom,lenTo,rawfin);\n  Angles.randLenVectors(e.id,particles,length * fin + baseLength,e.rotation,cone,(x,y) -> {\n    Lines.lineAngle(e.x + x,e.y + y,Mathf.angle(x,y),len);\n  }\n);\n}\n else {\n  Angles.randLenVectors(e.id,particles,length * fin + baseLength,e.rotation,cone,(x,y) -> {\n    Draw.rect(tex,e.x + x,e.y + y,rad,rad,e.rotation + offset);\n  }\n);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 112,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 821,
        "startLineNumber" : 34,
        "startColumnNumber" : 41,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (tex == null)   tex=Core.atlas.find(region);\n  float rawfin=e.fin();\n  float fin=e.fin(interp);\n  float rad=interp.apply(sizeFrom,sizeTo,rawfin) * 2;\n  Draw.color(colorFrom,colorTo,fin);\n  if (line) {\n    Lines.stroke(interp.apply(strokeFrom,strokeTo,rawfin));\n    float len=interp.apply(lenFrom,lenTo,rawfin);\n    Angles.randLenVectors(e.id,particles,length * fin + baseLength,e.rotation,cone,(x,y) -> {\n      Lines.lineAngle(e.x + x,e.y + y,Mathf.angle(x,y),len);\n    }\n);\n  }\n else {\n    Angles.randLenVectors(e.id,particles,length * fin + baseLength,e.rotation,cone,(x,y) -> {\n      Draw.rect(tex,e.x + x,e.y + y,rad,rad,e.rotation + offset);\n    }\n);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 160,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 872,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void render(EffectContainer e){\n  if (tex == null)   tex=Core.atlas.find(region);\n  float rawfin=e.fin();\n  float fin=e.fin(interp);\n  float rad=interp.apply(sizeFrom,sizeTo,rawfin) * 2;\n  Draw.color(colorFrom,colorTo,fin);\n  if (line) {\n    Lines.stroke(interp.apply(strokeFrom,strokeTo,rawfin));\n    float len=interp.apply(lenFrom,lenTo,rawfin);\n    Angles.randLenVectors(e.id,particles,length * fin + baseLength,e.rotation,cone,(x,y) -> {\n      Lines.lineAngle(e.x + x,e.y + y,Mathf.angle(x,y),len);\n    }\n);\n  }\n else {\n    Angles.randLenVectors(e.id,particles,length * fin + baseLength,e.rotation,cone,(x,y) -> {\n      Draw.rect(tex,e.x + x,e.y + y,rad,rad,e.rotation + offset);\n    }\n);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 170,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 47,
        "startColumnNumber" : 51,
        "endLineNumber" : 47,
        "endColumnNumber" : 76
      },
      "nodeContext" : "length * fin + baseLength",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "float"
  }, {
    "nodeContext" : "length * fin",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 51,
      "startColumnNumber" : 51,
      "endLineNumber" : 51,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 51,
        "startColumnNumber" : 51,
        "endLineNumber" : 51,
        "endColumnNumber" : 76
      },
      "nodeContext" : "length * fin + baseLength",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 191,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 53,
        "endColumnNumber" : 14
      },
      "nodeContext" : "Angles.randLenVectors(e.id,particles,length * fin + baseLength,e.rotation,cone,(x,y) -> {\n  Draw.rect(tex,e.x + x,e.y + y,rad,rad,e.rotation + offset);\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 44,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 192,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 53,
        "endColumnNumber" : 15
      },
      "nodeContext" : "Angles.randLenVectors(e.id,particles,length * fin + baseLength,e.rotation,cone,(x,y) -> {\n  Draw.rect(tex,e.x + x,e.y + y,rad,rad,e.rotation + offset);\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 45,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 216,
        "startLineNumber" : 50,
        "startColumnNumber" : 13,
        "endLineNumber" : 54,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Angles.randLenVectors(e.id,particles,length * fin + baseLength,e.rotation,cone,(x,y) -> {\n    Draw.rect(tex,e.x + x,e.y + y,rad,rad,e.rotation + offset);\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 571,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (line) {\n  Lines.stroke(interp.apply(strokeFrom,strokeTo,rawfin));\n  float len=interp.apply(lenFrom,lenTo,rawfin);\n  Angles.randLenVectors(e.id,particles,length * fin + baseLength,e.rotation,cone,(x,y) -> {\n    Lines.lineAngle(e.x + x,e.y + y,Mathf.angle(x,y),len);\n  }\n);\n}\n else {\n  Angles.randLenVectors(e.id,particles,length * fin + baseLength,e.rotation,cone,(x,y) -> {\n    Draw.rect(tex,e.x + x,e.y + y,rad,rad,e.rotation + offset);\n  }\n);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 112,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 821,
        "startLineNumber" : 34,
        "startColumnNumber" : 41,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (tex == null)   tex=Core.atlas.find(region);\n  float rawfin=e.fin();\n  float fin=e.fin(interp);\n  float rad=interp.apply(sizeFrom,sizeTo,rawfin) * 2;\n  Draw.color(colorFrom,colorTo,fin);\n  if (line) {\n    Lines.stroke(interp.apply(strokeFrom,strokeTo,rawfin));\n    float len=interp.apply(lenFrom,lenTo,rawfin);\n    Angles.randLenVectors(e.id,particles,length * fin + baseLength,e.rotation,cone,(x,y) -> {\n      Lines.lineAngle(e.x + x,e.y + y,Mathf.angle(x,y),len);\n    }\n);\n  }\n else {\n    Angles.randLenVectors(e.id,particles,length * fin + baseLength,e.rotation,cone,(x,y) -> {\n      Draw.rect(tex,e.x + x,e.y + y,rad,rad,e.rotation + offset);\n    }\n);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 160,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 872,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void render(EffectContainer e){\n  if (tex == null)   tex=Core.atlas.find(region);\n  float rawfin=e.fin();\n  float fin=e.fin(interp);\n  float rad=interp.apply(sizeFrom,sizeTo,rawfin) * 2;\n  Draw.color(colorFrom,colorTo,fin);\n  if (line) {\n    Lines.stroke(interp.apply(strokeFrom,strokeTo,rawfin));\n    float len=interp.apply(lenFrom,lenTo,rawfin);\n    Angles.randLenVectors(e.id,particles,length * fin + baseLength,e.rotation,cone,(x,y) -> {\n      Lines.lineAngle(e.x + x,e.y + y,Mathf.angle(x,y),len);\n    }\n);\n  }\n else {\n    Angles.randLenVectors(e.id,particles,length * fin + baseLength,e.rotation,cone,(x,y) -> {\n      Draw.rect(tex,e.x + x,e.y + y,rad,rad,e.rotation + offset);\n    }\n);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 170,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 51,
        "startColumnNumber" : 51,
        "endLineNumber" : 51,
        "endColumnNumber" : 76
      },
      "nodeContext" : "length * fin + baseLength",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 47,
    "startColumnNumber" : 51,
    "endLineNumber" : 47,
    "endColumnNumber" : 63
  }, {
    "charLength" : 12,
    "startLineNumber" : 51,
    "startColumnNumber" : 51,
    "endLineNumber" : 51,
    "endColumnNumber" : 63
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}