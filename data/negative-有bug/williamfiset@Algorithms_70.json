{
  "id" : 70,
  "expression" : "new int[]{8,0,6,0,4,0,2,0}",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/test/java/com/williamfiset/algorithms/strings/ZAlgorithmTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new int[]{8,0,6,0,4,0,2,0}",
    "nodeType" : "ArrayCreation",
    "nodePosition" : {
      "charLength" : 34,
      "startLineNumber" : 35,
      "startColumnNumber" : 59,
      "endLineNumber" : 35,
      "endColumnNumber" : 93
    },
    "astNodeNumber" : 13,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 35,
        "endColumnNumber" : 94
      },
      "nodeContext" : "assertThat(underTest.calculateZ(\"abababab\")).isEqualTo(new int[]{8,0,6,0,4,0,2,0})",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 21,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 35,
        "endColumnNumber" : 95
      },
      "nodeContext" : "assertThat(underTest.calculateZ(\"abababab\")).isEqualTo(new int[]{8,0,6,0,4,0,2,0});\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 22,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 315,
        "startLineNumber" : 34,
        "startColumnNumber" : 44,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assertThat(underTest.calculateZ(\"abababab\")).isEqualTo(new int[]{8,0,6,0,4,0,2,0});\n  assertThat(underTest.calculateZ(\"ababababa\")).isEqualTo(new int[]{9,0,7,0,5,0,3,0,1});\n  assertThat(underTest.calculateZ(\"abcabcabca\")).isEqualTo(new int[]{10,0,0,7,0,0,4,0,0,1});\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 365,
        "startLineNumber" : 33,
        "startColumnNumber" : 2,
        "endLineNumber" : 39,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void textContainsRepeatedPattern(){\n  assertThat(underTest.calculateZ(\"abababab\")).isEqualTo(new int[]{8,0,6,0,4,0,2,0});\n  assertThat(underTest.calculateZ(\"ababababa\")).isEqualTo(new int[]{9,0,7,0,5,0,3,0,1});\n  assertThat(underTest.calculateZ(\"abcabcabca\")).isEqualTo(new int[]{10,0,0,7,0,0,4,0,0,1});\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 76,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 35,
        "endColumnNumber" : 95
      },
      "nodeContext" : "assertThat(underTest.calculateZ(\"abababab\")).isEqualTo(new int[]{8,0,6,0,4,0,2,0});\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 22,
      "astHeight" : 5
    },
    "tokenLength" : 8,
    "type" : "int[]"
  } ],
  "positionList" : [ {
    "charLength" : 34,
    "startLineNumber" : 35,
    "startColumnNumber" : 59,
    "endLineNumber" : 35,
    "endColumnNumber" : 93
  } ],
  "layoutRelationDataList" : [ ]
}