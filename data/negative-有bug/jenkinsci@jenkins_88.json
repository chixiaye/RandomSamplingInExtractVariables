{
  "id" : 88,
  "expression" : "clazz",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/core/src/main/java/jenkins/telemetry/impl/java11/MissingClassTelemetry.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "clazz",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 281,
      "startColumnNumber" : 16,
      "endLineNumber" : 281,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 281,
        "startColumnNumber" : 16,
        "endLineNumber" : 281,
        "endColumnNumber" : 47
      },
      "nodeContext" : "clazz.equals(el.getClassName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 281,
        "startColumnNumber" : 16,
        "endLineNumber" : 281,
        "endColumnNumber" : 84
      },
      "nodeContext" : "clazz.equals(el.getClassName()) && el.getMethodName().equals(method)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 281,
        "startColumnNumber" : 12,
        "endLineNumber" : 283,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (clazz.equals(el.getClassName()) && el.getMethodName().equals(method)) {\n  return true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 236,
        "startLineNumber" : 279,
        "startColumnNumber" : 43,
        "endLineNumber" : 284,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (clazz.equals(el.getClassName()) && el.getMethodName().equals(method)) {\n    return true;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 271,
        "startLineNumber" : 279,
        "startColumnNumber" : 8,
        "endLineNumber" : 284,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (StackTraceElement el : trace) {\n  if (clazz.equals(el.getClassName()) && el.getMethodName().equals(method)) {\n    return true;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 376,
        "startLineNumber" : 277,
        "startColumnNumber" : 115,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StackTraceElement[] trace=throwable.getStackTrace();\n  for (  StackTraceElement el : trace) {\n    if (clazz.equals(el.getClassName()) && el.getMethodName().equals(method)) {\n      return true;\n    }\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 838,
        "startLineNumber" : 270,
        "startColumnNumber" : 4,
        "endLineNumber" : 286,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Check if the throwable was thrown by the class and the method specified.\n * @param throwable stack trace to look at\n * @param clazz class to look for in the stack trace\n * @param method method where the throwable was thrown in the clazz\n * @return true if the method of the clazz has thrown the throwable\n */\nprivate static boolean calledFrom(@NonNull Throwable throwable,@NonNull String clazz,@NonNull String method){\n  StackTraceElement[] trace=throwable.getStackTrace();\n  for (  StackTraceElement el : trace) {\n    if (clazz.equals(el.getClassName()) && el.getMethodName().equals(method)) {\n      return true;\n    }\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 61,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 281,
        "startColumnNumber" : 16,
        "endLineNumber" : 281,
        "endColumnNumber" : 84
      },
      "nodeContext" : "clazz.equals(el.getClassName()) && el.getMethodName().equals(method)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 281,
    "startColumnNumber" : 16,
    "endLineNumber" : 281,
    "endColumnNumber" : 21
  } ],
  "layoutRelationDataList" : [ ]
}