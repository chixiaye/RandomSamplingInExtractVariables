{
  "id" : 265,
  "expression" : "part",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "7815611a659da4cc8d5443f5ef4c10ca0d937582",
  "filePath" : "/mybatis-plus-support/src/main/java/com/baomidou/mybatisplus/MybatisAbstractSQL.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "part",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 214,
      "startColumnNumber" : 43,
      "endLineNumber" : 214,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 214,
        "startColumnNumber" : 28,
        "endLineNumber" : 214,
        "endColumnNumber" : 48
      },
      "nodeContext" : "andOr.contains(part)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 214,
        "startColumnNumber" : 28,
        "endLineNumber" : 214,
        "endColumnNumber" : 72
      },
      "nodeContext" : "andOr.contains(part) || andOr.contains(last)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 460,
        "startLineNumber" : 214,
        "startColumnNumber" : 24,
        "endLineNumber" : 223,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (andOr.contains(part) || andOr.contains(last)) {\n  builder.append(part);\n  last=part;\n  continue;\n}\n else {\n  if (!checkNest(part) && !checkNest(last)) {\n    builder.append(conjunction);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 38,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 508,
        "startLineNumber" : 213,
        "startColumnNumber" : 31,
        "endLineNumber" : 224,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (andOr.contains(part) || andOr.contains(last)) {\n    builder.append(part);\n    last=part;\n    continue;\n  }\n else {\n    if (!checkNest(part) && !checkNest(last)) {\n      builder.append(conjunction);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 519,
        "startLineNumber" : 213,
        "startColumnNumber" : 20,
        "endLineNumber" : 224,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (i > 0) {\n  if (andOr.contains(part) || andOr.contains(last)) {\n    builder.append(part);\n    last=part;\n    continue;\n  }\n else {\n    if (!checkNest(part) && !checkNest(last)) {\n      builder.append(conjunction);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 43,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 649,
        "startLineNumber" : 211,
        "startColumnNumber" : 62,
        "endLineNumber" : 226,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  String part=parts.get(i);\n  if (i > 0) {\n    if (andOr.contains(part) || andOr.contains(last)) {\n      builder.append(part);\n      last=part;\n      continue;\n    }\n else {\n      if (!checkNest(part) && !checkNest(last)) {\n        builder.append(conjunction);\n      }\n    }\n  }\n  builder.append(part);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 695,
        "startLineNumber" : 211,
        "startColumnNumber" : 16,
        "endLineNumber" : 226,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (int i=0, n=parts.size(); i < n; i++) {\n  String part=parts.get(i);\n  if (i > 0) {\n    if (andOr.contains(part) || andOr.contains(last)) {\n      builder.append(part);\n      last=part;\n      continue;\n    }\n else {\n      if (!checkNest(part) && !checkNest(last)) {\n        builder.append(conjunction);\n      }\n    }\n  }\n  builder.append(part);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 74,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1021,
        "startLineNumber" : 202,
        "startColumnNumber" : 34,
        "endLineNumber" : 228,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (!builder.isEmpty()) {\n    builder.append(\"\\n\");\n  }\n  builder.append(keyword);\n  builder.append(\" \");\n  builder.append(open);\n  String last=\"__\";\n  for (int i=0, n=parts.size(); i < n; i++) {\n    String part=parts.get(i);\n    if (i > 0) {\n      if (andOr.contains(part) || andOr.contains(last)) {\n        builder.append(part);\n        last=part;\n        continue;\n      }\n else {\n        if (!checkNest(part) && !checkNest(last)) {\n          builder.append(conjunction);\n        }\n      }\n    }\n    builder.append(part);\n  }\n  builder.append(close);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1043,
        "startLineNumber" : 202,
        "startColumnNumber" : 12,
        "endLineNumber" : 228,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!parts.isEmpty()) {\n  if (!builder.isEmpty()) {\n    builder.append(\"\\n\");\n  }\n  builder.append(keyword);\n  builder.append(\" \");\n  builder.append(open);\n  String last=\"__\";\n  for (int i=0, n=parts.size(); i < n; i++) {\n    String part=parts.get(i);\n    if (i > 0) {\n      if (andOr.contains(part) || andOr.contains(last)) {\n        builder.append(part);\n        last=part;\n        continue;\n      }\n else {\n        if (!checkNest(part) && !checkNest(last)) {\n          builder.append(conjunction);\n        }\n      }\n    }\n    builder.append(part);\n  }\n  builder.append(close);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 117,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1105,
        "startLineNumber" : 200,
        "startColumnNumber" : 51,
        "endLineNumber" : 229,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  parts=clearNull(parts);\n  if (!parts.isEmpty()) {\n    if (!builder.isEmpty()) {\n      builder.append(\"\\n\");\n    }\n    builder.append(keyword);\n    builder.append(\" \");\n    builder.append(open);\n    String last=\"__\";\n    for (int i=0, n=parts.size(); i < n; i++) {\n      String part=parts.get(i);\n      if (i > 0) {\n        if (andOr.contains(part) || andOr.contains(last)) {\n          builder.append(part);\n          last=part;\n          continue;\n        }\n else {\n          if (!checkNest(part) && !checkNest(last)) {\n            builder.append(conjunction);\n          }\n        }\n      }\n      builder.append(part);\n    }\n    builder.append(close);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1540,
        "startLineNumber" : 189,
        "startColumnNumber" : 8,
        "endLineNumber" : 229,
        "endColumnNumber" : 9
      },
      "nodeContext" : "/** \n * 构建SQL的条件\n * @param builder     连接器\n * @param keyword     TSQL中的关键字\n * @param parts       SQL条件语句集合\n * @param open        起始符号\n * @param close       结束符号\n * @param conjunction 连接条件\n */\nprivate void sqlClause(SafeAppendable builder,String keyword,List<String> parts,String open,String close,String conjunction){\n  parts=clearNull(parts);\n  if (!parts.isEmpty()) {\n    if (!builder.isEmpty()) {\n      builder.append(\"\\n\");\n    }\n    builder.append(keyword);\n    builder.append(\" \");\n    builder.append(open);\n    String last=\"__\";\n    for (int i=0, n=parts.size(); i < n; i++) {\n      String part=parts.get(i);\n      if (i > 0) {\n        if (andOr.contains(part) || andOr.contains(last)) {\n          builder.append(part);\n          last=part;\n          continue;\n        }\n else {\n          if (!checkNest(part) && !checkNest(last)) {\n            builder.append(conjunction);\n          }\n        }\n      }\n      builder.append(part);\n    }\n    builder.append(close);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 156,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 214,
        "startColumnNumber" : 28,
        "endLineNumber" : 214,
        "endColumnNumber" : 72
      },
      "nodeContext" : "andOr.contains(part) || andOr.contains(last)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "part",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 215,
      "startColumnNumber" : 43,
      "endLineNumber" : 215,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 215,
        "startColumnNumber" : 28,
        "endLineNumber" : 215,
        "endColumnNumber" : 48
      },
      "nodeContext" : "builder.append(part)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 215,
        "startColumnNumber" : 28,
        "endLineNumber" : 215,
        "endColumnNumber" : 49
      },
      "nodeContext" : "builder.append(part);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 156,
        "startLineNumber" : 214,
        "startColumnNumber" : 74,
        "endLineNumber" : 218,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  builder.append(part);\n  last=part;\n  continue;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 460,
        "startLineNumber" : 214,
        "startColumnNumber" : 24,
        "endLineNumber" : 223,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (andOr.contains(part) || andOr.contains(last)) {\n  builder.append(part);\n  last=part;\n  continue;\n}\n else {\n  if (!checkNest(part) && !checkNest(last)) {\n    builder.append(conjunction);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 38,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 508,
        "startLineNumber" : 213,
        "startColumnNumber" : 31,
        "endLineNumber" : 224,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (andOr.contains(part) || andOr.contains(last)) {\n    builder.append(part);\n    last=part;\n    continue;\n  }\n else {\n    if (!checkNest(part) && !checkNest(last)) {\n      builder.append(conjunction);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 519,
        "startLineNumber" : 213,
        "startColumnNumber" : 20,
        "endLineNumber" : 224,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (i > 0) {\n  if (andOr.contains(part) || andOr.contains(last)) {\n    builder.append(part);\n    last=part;\n    continue;\n  }\n else {\n    if (!checkNest(part) && !checkNest(last)) {\n      builder.append(conjunction);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 43,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 649,
        "startLineNumber" : 211,
        "startColumnNumber" : 62,
        "endLineNumber" : 226,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  String part=parts.get(i);\n  if (i > 0) {\n    if (andOr.contains(part) || andOr.contains(last)) {\n      builder.append(part);\n      last=part;\n      continue;\n    }\n else {\n      if (!checkNest(part) && !checkNest(last)) {\n        builder.append(conjunction);\n      }\n    }\n  }\n  builder.append(part);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 695,
        "startLineNumber" : 211,
        "startColumnNumber" : 16,
        "endLineNumber" : 226,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (int i=0, n=parts.size(); i < n; i++) {\n  String part=parts.get(i);\n  if (i > 0) {\n    if (andOr.contains(part) || andOr.contains(last)) {\n      builder.append(part);\n      last=part;\n      continue;\n    }\n else {\n      if (!checkNest(part) && !checkNest(last)) {\n        builder.append(conjunction);\n      }\n    }\n  }\n  builder.append(part);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 74,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1021,
        "startLineNumber" : 202,
        "startColumnNumber" : 34,
        "endLineNumber" : 228,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (!builder.isEmpty()) {\n    builder.append(\"\\n\");\n  }\n  builder.append(keyword);\n  builder.append(\" \");\n  builder.append(open);\n  String last=\"__\";\n  for (int i=0, n=parts.size(); i < n; i++) {\n    String part=parts.get(i);\n    if (i > 0) {\n      if (andOr.contains(part) || andOr.contains(last)) {\n        builder.append(part);\n        last=part;\n        continue;\n      }\n else {\n        if (!checkNest(part) && !checkNest(last)) {\n          builder.append(conjunction);\n        }\n      }\n    }\n    builder.append(part);\n  }\n  builder.append(close);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1043,
        "startLineNumber" : 202,
        "startColumnNumber" : 12,
        "endLineNumber" : 228,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!parts.isEmpty()) {\n  if (!builder.isEmpty()) {\n    builder.append(\"\\n\");\n  }\n  builder.append(keyword);\n  builder.append(\" \");\n  builder.append(open);\n  String last=\"__\";\n  for (int i=0, n=parts.size(); i < n; i++) {\n    String part=parts.get(i);\n    if (i > 0) {\n      if (andOr.contains(part) || andOr.contains(last)) {\n        builder.append(part);\n        last=part;\n        continue;\n      }\n else {\n        if (!checkNest(part) && !checkNest(last)) {\n          builder.append(conjunction);\n        }\n      }\n    }\n    builder.append(part);\n  }\n  builder.append(close);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 117,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1105,
        "startLineNumber" : 200,
        "startColumnNumber" : 51,
        "endLineNumber" : 229,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  parts=clearNull(parts);\n  if (!parts.isEmpty()) {\n    if (!builder.isEmpty()) {\n      builder.append(\"\\n\");\n    }\n    builder.append(keyword);\n    builder.append(\" \");\n    builder.append(open);\n    String last=\"__\";\n    for (int i=0, n=parts.size(); i < n; i++) {\n      String part=parts.get(i);\n      if (i > 0) {\n        if (andOr.contains(part) || andOr.contains(last)) {\n          builder.append(part);\n          last=part;\n          continue;\n        }\n else {\n          if (!checkNest(part) && !checkNest(last)) {\n            builder.append(conjunction);\n          }\n        }\n      }\n      builder.append(part);\n    }\n    builder.append(close);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1540,
        "startLineNumber" : 189,
        "startColumnNumber" : 8,
        "endLineNumber" : 229,
        "endColumnNumber" : 9
      },
      "nodeContext" : "/** \n * 构建SQL的条件\n * @param builder     连接器\n * @param keyword     TSQL中的关键字\n * @param parts       SQL条件语句集合\n * @param open        起始符号\n * @param close       结束符号\n * @param conjunction 连接条件\n */\nprivate void sqlClause(SafeAppendable builder,String keyword,List<String> parts,String open,String close,String conjunction){\n  parts=clearNull(parts);\n  if (!parts.isEmpty()) {\n    if (!builder.isEmpty()) {\n      builder.append(\"\\n\");\n    }\n    builder.append(keyword);\n    builder.append(\" \");\n    builder.append(open);\n    String last=\"__\";\n    for (int i=0, n=parts.size(); i < n; i++) {\n      String part=parts.get(i);\n      if (i > 0) {\n        if (andOr.contains(part) || andOr.contains(last)) {\n          builder.append(part);\n          last=part;\n          continue;\n        }\n else {\n          if (!checkNest(part) && !checkNest(last)) {\n            builder.append(conjunction);\n          }\n        }\n      }\n      builder.append(part);\n    }\n    builder.append(close);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 156,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 215,
        "startColumnNumber" : 28,
        "endLineNumber" : 215,
        "endColumnNumber" : 49
      },
      "nodeContext" : "builder.append(part);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "part",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 216,
      "startColumnNumber" : 35,
      "endLineNumber" : 216,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 216,
        "startColumnNumber" : 28,
        "endLineNumber" : 216,
        "endColumnNumber" : 39
      },
      "nodeContext" : "last=part",
      "nodeType" : "Assignment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 216,
        "startColumnNumber" : 28,
        "endLineNumber" : 216,
        "endColumnNumber" : 40
      },
      "nodeContext" : "last=part;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 156,
        "startLineNumber" : 214,
        "startColumnNumber" : 74,
        "endLineNumber" : 218,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  builder.append(part);\n  last=part;\n  continue;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 460,
        "startLineNumber" : 214,
        "startColumnNumber" : 24,
        "endLineNumber" : 223,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (andOr.contains(part) || andOr.contains(last)) {\n  builder.append(part);\n  last=part;\n  continue;\n}\n else {\n  if (!checkNest(part) && !checkNest(last)) {\n    builder.append(conjunction);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 38,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 508,
        "startLineNumber" : 213,
        "startColumnNumber" : 31,
        "endLineNumber" : 224,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (andOr.contains(part) || andOr.contains(last)) {\n    builder.append(part);\n    last=part;\n    continue;\n  }\n else {\n    if (!checkNest(part) && !checkNest(last)) {\n      builder.append(conjunction);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 519,
        "startLineNumber" : 213,
        "startColumnNumber" : 20,
        "endLineNumber" : 224,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (i > 0) {\n  if (andOr.contains(part) || andOr.contains(last)) {\n    builder.append(part);\n    last=part;\n    continue;\n  }\n else {\n    if (!checkNest(part) && !checkNest(last)) {\n      builder.append(conjunction);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 43,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 649,
        "startLineNumber" : 211,
        "startColumnNumber" : 62,
        "endLineNumber" : 226,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  String part=parts.get(i);\n  if (i > 0) {\n    if (andOr.contains(part) || andOr.contains(last)) {\n      builder.append(part);\n      last=part;\n      continue;\n    }\n else {\n      if (!checkNest(part) && !checkNest(last)) {\n        builder.append(conjunction);\n      }\n    }\n  }\n  builder.append(part);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 695,
        "startLineNumber" : 211,
        "startColumnNumber" : 16,
        "endLineNumber" : 226,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (int i=0, n=parts.size(); i < n; i++) {\n  String part=parts.get(i);\n  if (i > 0) {\n    if (andOr.contains(part) || andOr.contains(last)) {\n      builder.append(part);\n      last=part;\n      continue;\n    }\n else {\n      if (!checkNest(part) && !checkNest(last)) {\n        builder.append(conjunction);\n      }\n    }\n  }\n  builder.append(part);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 74,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1021,
        "startLineNumber" : 202,
        "startColumnNumber" : 34,
        "endLineNumber" : 228,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (!builder.isEmpty()) {\n    builder.append(\"\\n\");\n  }\n  builder.append(keyword);\n  builder.append(\" \");\n  builder.append(open);\n  String last=\"__\";\n  for (int i=0, n=parts.size(); i < n; i++) {\n    String part=parts.get(i);\n    if (i > 0) {\n      if (andOr.contains(part) || andOr.contains(last)) {\n        builder.append(part);\n        last=part;\n        continue;\n      }\n else {\n        if (!checkNest(part) && !checkNest(last)) {\n          builder.append(conjunction);\n        }\n      }\n    }\n    builder.append(part);\n  }\n  builder.append(close);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1043,
        "startLineNumber" : 202,
        "startColumnNumber" : 12,
        "endLineNumber" : 228,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!parts.isEmpty()) {\n  if (!builder.isEmpty()) {\n    builder.append(\"\\n\");\n  }\n  builder.append(keyword);\n  builder.append(\" \");\n  builder.append(open);\n  String last=\"__\";\n  for (int i=0, n=parts.size(); i < n; i++) {\n    String part=parts.get(i);\n    if (i > 0) {\n      if (andOr.contains(part) || andOr.contains(last)) {\n        builder.append(part);\n        last=part;\n        continue;\n      }\n else {\n        if (!checkNest(part) && !checkNest(last)) {\n          builder.append(conjunction);\n        }\n      }\n    }\n    builder.append(part);\n  }\n  builder.append(close);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 117,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1105,
        "startLineNumber" : 200,
        "startColumnNumber" : 51,
        "endLineNumber" : 229,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  parts=clearNull(parts);\n  if (!parts.isEmpty()) {\n    if (!builder.isEmpty()) {\n      builder.append(\"\\n\");\n    }\n    builder.append(keyword);\n    builder.append(\" \");\n    builder.append(open);\n    String last=\"__\";\n    for (int i=0, n=parts.size(); i < n; i++) {\n      String part=parts.get(i);\n      if (i > 0) {\n        if (andOr.contains(part) || andOr.contains(last)) {\n          builder.append(part);\n          last=part;\n          continue;\n        }\n else {\n          if (!checkNest(part) && !checkNest(last)) {\n            builder.append(conjunction);\n          }\n        }\n      }\n      builder.append(part);\n    }\n    builder.append(close);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1540,
        "startLineNumber" : 189,
        "startColumnNumber" : 8,
        "endLineNumber" : 229,
        "endColumnNumber" : 9
      },
      "nodeContext" : "/** \n * 构建SQL的条件\n * @param builder     连接器\n * @param keyword     TSQL中的关键字\n * @param parts       SQL条件语句集合\n * @param open        起始符号\n * @param close       结束符号\n * @param conjunction 连接条件\n */\nprivate void sqlClause(SafeAppendable builder,String keyword,List<String> parts,String open,String close,String conjunction){\n  parts=clearNull(parts);\n  if (!parts.isEmpty()) {\n    if (!builder.isEmpty()) {\n      builder.append(\"\\n\");\n    }\n    builder.append(keyword);\n    builder.append(\" \");\n    builder.append(open);\n    String last=\"__\";\n    for (int i=0, n=parts.size(); i < n; i++) {\n      String part=parts.get(i);\n      if (i > 0) {\n        if (andOr.contains(part) || andOr.contains(last)) {\n          builder.append(part);\n          last=part;\n          continue;\n        }\n else {\n          if (!checkNest(part) && !checkNest(last)) {\n            builder.append(conjunction);\n          }\n        }\n      }\n      builder.append(part);\n    }\n    builder.append(close);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 156,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 216,
        "startColumnNumber" : 28,
        "endLineNumber" : 216,
        "endColumnNumber" : 40
      },
      "nodeContext" : "last=part;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "part",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 220,
      "startColumnNumber" : 43,
      "endLineNumber" : 220,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 220,
        "startColumnNumber" : 33,
        "endLineNumber" : 220,
        "endColumnNumber" : 48
      },
      "nodeContext" : "checkNest(part)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 220,
        "startColumnNumber" : 32,
        "endLineNumber" : 220,
        "endColumnNumber" : 48
      },
      "nodeContext" : "!checkNest(part)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 220,
        "startColumnNumber" : 32,
        "endLineNumber" : 220,
        "endColumnNumber" : 68
      },
      "nodeContext" : "!checkNest(part) && !checkNest(last)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 220,
        "startColumnNumber" : 28,
        "endLineNumber" : 222,
        "endColumnNumber" : 29
      },
      "nodeContext" : "if (!checkNest(part) && !checkNest(last)) {\n  builder.append(conjunction);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 248,
        "startLineNumber" : 218,
        "startColumnNumber" : 31,
        "endLineNumber" : 223,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  if (!checkNest(part) && !checkNest(last)) {\n    builder.append(conjunction);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 460,
        "startLineNumber" : 214,
        "startColumnNumber" : 24,
        "endLineNumber" : 223,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (andOr.contains(part) || andOr.contains(last)) {\n  builder.append(part);\n  last=part;\n  continue;\n}\n else {\n  if (!checkNest(part) && !checkNest(last)) {\n    builder.append(conjunction);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 38,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 508,
        "startLineNumber" : 213,
        "startColumnNumber" : 31,
        "endLineNumber" : 224,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (andOr.contains(part) || andOr.contains(last)) {\n    builder.append(part);\n    last=part;\n    continue;\n  }\n else {\n    if (!checkNest(part) && !checkNest(last)) {\n      builder.append(conjunction);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 519,
        "startLineNumber" : 213,
        "startColumnNumber" : 20,
        "endLineNumber" : 224,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (i > 0) {\n  if (andOr.contains(part) || andOr.contains(last)) {\n    builder.append(part);\n    last=part;\n    continue;\n  }\n else {\n    if (!checkNest(part) && !checkNest(last)) {\n      builder.append(conjunction);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 43,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 649,
        "startLineNumber" : 211,
        "startColumnNumber" : 62,
        "endLineNumber" : 226,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  String part=parts.get(i);\n  if (i > 0) {\n    if (andOr.contains(part) || andOr.contains(last)) {\n      builder.append(part);\n      last=part;\n      continue;\n    }\n else {\n      if (!checkNest(part) && !checkNest(last)) {\n        builder.append(conjunction);\n      }\n    }\n  }\n  builder.append(part);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 695,
        "startLineNumber" : 211,
        "startColumnNumber" : 16,
        "endLineNumber" : 226,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (int i=0, n=parts.size(); i < n; i++) {\n  String part=parts.get(i);\n  if (i > 0) {\n    if (andOr.contains(part) || andOr.contains(last)) {\n      builder.append(part);\n      last=part;\n      continue;\n    }\n else {\n      if (!checkNest(part) && !checkNest(last)) {\n        builder.append(conjunction);\n      }\n    }\n  }\n  builder.append(part);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 74,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1021,
        "startLineNumber" : 202,
        "startColumnNumber" : 34,
        "endLineNumber" : 228,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (!builder.isEmpty()) {\n    builder.append(\"\\n\");\n  }\n  builder.append(keyword);\n  builder.append(\" \");\n  builder.append(open);\n  String last=\"__\";\n  for (int i=0, n=parts.size(); i < n; i++) {\n    String part=parts.get(i);\n    if (i > 0) {\n      if (andOr.contains(part) || andOr.contains(last)) {\n        builder.append(part);\n        last=part;\n        continue;\n      }\n else {\n        if (!checkNest(part) && !checkNest(last)) {\n          builder.append(conjunction);\n        }\n      }\n    }\n    builder.append(part);\n  }\n  builder.append(close);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1043,
        "startLineNumber" : 202,
        "startColumnNumber" : 12,
        "endLineNumber" : 228,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!parts.isEmpty()) {\n  if (!builder.isEmpty()) {\n    builder.append(\"\\n\");\n  }\n  builder.append(keyword);\n  builder.append(\" \");\n  builder.append(open);\n  String last=\"__\";\n  for (int i=0, n=parts.size(); i < n; i++) {\n    String part=parts.get(i);\n    if (i > 0) {\n      if (andOr.contains(part) || andOr.contains(last)) {\n        builder.append(part);\n        last=part;\n        continue;\n      }\n else {\n        if (!checkNest(part) && !checkNest(last)) {\n          builder.append(conjunction);\n        }\n      }\n    }\n    builder.append(part);\n  }\n  builder.append(close);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 117,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1105,
        "startLineNumber" : 200,
        "startColumnNumber" : 51,
        "endLineNumber" : 229,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  parts=clearNull(parts);\n  if (!parts.isEmpty()) {\n    if (!builder.isEmpty()) {\n      builder.append(\"\\n\");\n    }\n    builder.append(keyword);\n    builder.append(\" \");\n    builder.append(open);\n    String last=\"__\";\n    for (int i=0, n=parts.size(); i < n; i++) {\n      String part=parts.get(i);\n      if (i > 0) {\n        if (andOr.contains(part) || andOr.contains(last)) {\n          builder.append(part);\n          last=part;\n          continue;\n        }\n else {\n          if (!checkNest(part) && !checkNest(last)) {\n            builder.append(conjunction);\n          }\n        }\n      }\n      builder.append(part);\n    }\n    builder.append(close);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1540,
        "startLineNumber" : 189,
        "startColumnNumber" : 8,
        "endLineNumber" : 229,
        "endColumnNumber" : 9
      },
      "nodeContext" : "/** \n * 构建SQL的条件\n * @param builder     连接器\n * @param keyword     TSQL中的关键字\n * @param parts       SQL条件语句集合\n * @param open        起始符号\n * @param close       结束符号\n * @param conjunction 连接条件\n */\nprivate void sqlClause(SafeAppendable builder,String keyword,List<String> parts,String open,String close,String conjunction){\n  parts=clearNull(parts);\n  if (!parts.isEmpty()) {\n    if (!builder.isEmpty()) {\n      builder.append(\"\\n\");\n    }\n    builder.append(keyword);\n    builder.append(\" \");\n    builder.append(open);\n    String last=\"__\";\n    for (int i=0, n=parts.size(); i < n; i++) {\n      String part=parts.get(i);\n      if (i > 0) {\n        if (andOr.contains(part) || andOr.contains(last)) {\n          builder.append(part);\n          last=part;\n          continue;\n        }\n else {\n          if (!checkNest(part) && !checkNest(last)) {\n            builder.append(conjunction);\n          }\n        }\n      }\n      builder.append(part);\n    }\n    builder.append(close);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 156,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 220,
        "startColumnNumber" : 32,
        "endLineNumber" : 220,
        "endColumnNumber" : 68
      },
      "nodeContext" : "!checkNest(part) && !checkNest(last)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "part",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 225,
      "startColumnNumber" : 35,
      "endLineNumber" : 225,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 225,
        "startColumnNumber" : 20,
        "endLineNumber" : 225,
        "endColumnNumber" : 40
      },
      "nodeContext" : "builder.append(part)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 225,
        "startColumnNumber" : 20,
        "endLineNumber" : 225,
        "endColumnNumber" : 41
      },
      "nodeContext" : "builder.append(part);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 649,
        "startLineNumber" : 211,
        "startColumnNumber" : 62,
        "endLineNumber" : 226,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  String part=parts.get(i);\n  if (i > 0) {\n    if (andOr.contains(part) || andOr.contains(last)) {\n      builder.append(part);\n      last=part;\n      continue;\n    }\n else {\n      if (!checkNest(part) && !checkNest(last)) {\n        builder.append(conjunction);\n      }\n    }\n  }\n  builder.append(part);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 695,
        "startLineNumber" : 211,
        "startColumnNumber" : 16,
        "endLineNumber" : 226,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (int i=0, n=parts.size(); i < n; i++) {\n  String part=parts.get(i);\n  if (i > 0) {\n    if (andOr.contains(part) || andOr.contains(last)) {\n      builder.append(part);\n      last=part;\n      continue;\n    }\n else {\n      if (!checkNest(part) && !checkNest(last)) {\n        builder.append(conjunction);\n      }\n    }\n  }\n  builder.append(part);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 74,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1021,
        "startLineNumber" : 202,
        "startColumnNumber" : 34,
        "endLineNumber" : 228,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (!builder.isEmpty()) {\n    builder.append(\"\\n\");\n  }\n  builder.append(keyword);\n  builder.append(\" \");\n  builder.append(open);\n  String last=\"__\";\n  for (int i=0, n=parts.size(); i < n; i++) {\n    String part=parts.get(i);\n    if (i > 0) {\n      if (andOr.contains(part) || andOr.contains(last)) {\n        builder.append(part);\n        last=part;\n        continue;\n      }\n else {\n        if (!checkNest(part) && !checkNest(last)) {\n          builder.append(conjunction);\n        }\n      }\n    }\n    builder.append(part);\n  }\n  builder.append(close);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1043,
        "startLineNumber" : 202,
        "startColumnNumber" : 12,
        "endLineNumber" : 228,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!parts.isEmpty()) {\n  if (!builder.isEmpty()) {\n    builder.append(\"\\n\");\n  }\n  builder.append(keyword);\n  builder.append(\" \");\n  builder.append(open);\n  String last=\"__\";\n  for (int i=0, n=parts.size(); i < n; i++) {\n    String part=parts.get(i);\n    if (i > 0) {\n      if (andOr.contains(part) || andOr.contains(last)) {\n        builder.append(part);\n        last=part;\n        continue;\n      }\n else {\n        if (!checkNest(part) && !checkNest(last)) {\n          builder.append(conjunction);\n        }\n      }\n    }\n    builder.append(part);\n  }\n  builder.append(close);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 117,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1105,
        "startLineNumber" : 200,
        "startColumnNumber" : 51,
        "endLineNumber" : 229,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  parts=clearNull(parts);\n  if (!parts.isEmpty()) {\n    if (!builder.isEmpty()) {\n      builder.append(\"\\n\");\n    }\n    builder.append(keyword);\n    builder.append(\" \");\n    builder.append(open);\n    String last=\"__\";\n    for (int i=0, n=parts.size(); i < n; i++) {\n      String part=parts.get(i);\n      if (i > 0) {\n        if (andOr.contains(part) || andOr.contains(last)) {\n          builder.append(part);\n          last=part;\n          continue;\n        }\n else {\n          if (!checkNest(part) && !checkNest(last)) {\n            builder.append(conjunction);\n          }\n        }\n      }\n      builder.append(part);\n    }\n    builder.append(close);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1540,
        "startLineNumber" : 189,
        "startColumnNumber" : 8,
        "endLineNumber" : 229,
        "endColumnNumber" : 9
      },
      "nodeContext" : "/** \n * 构建SQL的条件\n * @param builder     连接器\n * @param keyword     TSQL中的关键字\n * @param parts       SQL条件语句集合\n * @param open        起始符号\n * @param close       结束符号\n * @param conjunction 连接条件\n */\nprivate void sqlClause(SafeAppendable builder,String keyword,List<String> parts,String open,String close,String conjunction){\n  parts=clearNull(parts);\n  if (!parts.isEmpty()) {\n    if (!builder.isEmpty()) {\n      builder.append(\"\\n\");\n    }\n    builder.append(keyword);\n    builder.append(\" \");\n    builder.append(open);\n    String last=\"__\";\n    for (int i=0, n=parts.size(); i < n; i++) {\n      String part=parts.get(i);\n      if (i > 0) {\n        if (andOr.contains(part) || andOr.contains(last)) {\n          builder.append(part);\n          last=part;\n          continue;\n        }\n else {\n          if (!checkNest(part) && !checkNest(last)) {\n            builder.append(conjunction);\n          }\n        }\n      }\n      builder.append(part);\n    }\n    builder.append(close);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 156,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 225,
        "startColumnNumber" : 20,
        "endLineNumber" : 225,
        "endColumnNumber" : 41
      },
      "nodeContext" : "builder.append(part);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 214,
    "startColumnNumber" : 43,
    "endLineNumber" : 214,
    "endColumnNumber" : 47
  }, {
    "charLength" : 4,
    "startLineNumber" : 215,
    "startColumnNumber" : 43,
    "endLineNumber" : 215,
    "endColumnNumber" : 47
  }, {
    "charLength" : 4,
    "startLineNumber" : 216,
    "startColumnNumber" : 35,
    "endLineNumber" : 216,
    "endColumnNumber" : 39
  }, {
    "charLength" : 4,
    "startLineNumber" : 220,
    "startColumnNumber" : 43,
    "endLineNumber" : 220,
    "endColumnNumber" : 47
  }, {
    "charLength" : 4,
    "startLineNumber" : 225,
    "startColumnNumber" : 35,
    "endLineNumber" : 225,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 2
  } ]
}