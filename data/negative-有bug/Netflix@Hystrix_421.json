{
  "id" : 421,
  "expression" : "getLastExecutedCommand()",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-contrib/hystrix-javanica/src/test/java/com/netflix/hystrix/contrib/javanica/test/common/cache/BasicCacheTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "getLastExecutedCommand()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 79,
      "startColumnNumber" : 53,
      "endLineNumber" : 79,
      "endColumnNumber" : 77
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 79,
        "startColumnNumber" : 32,
        "endLineNumber" : 79,
        "endColumnNumber" : 77
      },
      "nodeContext" : "getUserByIdCommand=getLastExecutedCommand()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 78
      },
      "nodeContext" : "HystrixInvokableInfo<?> getUserByIdCommand=getLastExecutedCommand();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1798,
        "startLineNumber" : 76,
        "startColumnNumber" : 58,
        "endLineNumber" : 117,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  User user=userService.getUserById(\"1\");\n  HystrixInvokableInfo<?> getUserByIdCommand=getLastExecutedCommand();\n  assertFalse(getUserByIdCommand.isResponseFromCache());\n  assertEquals(\"1\",user.getId());\n  assertEquals(\"name\",user.getName());\n  user=userService.getUserById(\"1\");\n  assertEquals(\"1\",user.getId());\n  getUserByIdCommand=getLastExecutedCommand();\n  assertTrue(getUserByIdCommand.isResponseFromCache());\n  assertEquals(\"name\",user.getName());\n  user=new User(\"1\",\"new_name\");\n  userService.update(user);\n  user=userService.getUserById(\"1\");\n  getUserByIdCommand=getLastExecutedCommand();\n  assertFalse(getUserByIdCommand.isResponseFromCache());\n  assertEquals(\"1\",user.getId());\n  assertEquals(\"new_name\",user.getName());\n  resetContext();\n  user=userService.getUserById(\"1\");\n  getUserByIdCommand=getLastExecutedCommand();\n  assertEquals(\"1\",user.getId());\n  assertFalse(getUserByIdCommand.isResponseFromCache());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 144,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2837,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 117,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Get-Set-Get with Request Cache Invalidation Test. <p/> given: command to get user by id, see  {@link UserService#getUserById(String)}command to update user, see  {@link UserService#update(com.netflix.hystrix.contrib.javanica.test.common.domain.User)}<p/> when: 1. call  {@link UserService#getUserById(String)}2. call  {@link UserService#getUserById(String)}3. call  {@link UserService#update(com.netflix.hystrix.contrib.javanica.test.common.domain.User)}4. call  {@link UserService#getUserById(String)}<p/> then: at the first time \"getUserById\" command shouldn't retrieve value from cache at the second time \"getUserById\" command should retrieve value from cache \"update\" method should update an user and flush cache related to \"getUserById\" command after \"update\" method execution \"getUserById\" command shouldn't retrieve value from cache\n */\n@Test public void testGetSetGetUserCache_givenTwoCommands(){\n  User user=userService.getUserById(\"1\");\n  HystrixInvokableInfo<?> getUserByIdCommand=getLastExecutedCommand();\n  assertFalse(getUserByIdCommand.isResponseFromCache());\n  assertEquals(\"1\",user.getId());\n  assertEquals(\"name\",user.getName());\n  user=userService.getUserById(\"1\");\n  assertEquals(\"1\",user.getId());\n  getUserByIdCommand=getLastExecutedCommand();\n  assertTrue(getUserByIdCommand.isResponseFromCache());\n  assertEquals(\"name\",user.getName());\n  user=new User(\"1\",\"new_name\");\n  userService.update(user);\n  user=userService.getUserById(\"1\");\n  getUserByIdCommand=getLastExecutedCommand();\n  assertFalse(getUserByIdCommand.isResponseFromCache());\n  assertEquals(\"1\",user.getId());\n  assertEquals(\"new_name\",user.getName());\n  resetContext();\n  user=userService.getUserById(\"1\");\n  getUserByIdCommand=getLastExecutedCommand();\n  assertEquals(\"1\",user.getId());\n  assertFalse(getUserByIdCommand.isResponseFromCache());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 151,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 79,
        "startColumnNumber" : 8,
        "endLineNumber" : 79,
        "endColumnNumber" : 78
      },
      "nodeContext" : "HystrixInvokableInfo<?> getUserByIdCommand=getLastExecutedCommand();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.HystrixInvokableInfo<>"
  }, {
    "nodeContext" : "getLastExecutedCommand()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 88,
      "startColumnNumber" : 29,
      "endLineNumber" : 88,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 53
      },
      "nodeContext" : "getUserByIdCommand=getLastExecutedCommand()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 54
      },
      "nodeContext" : "getUserByIdCommand=getLastExecutedCommand();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1798,
        "startLineNumber" : 76,
        "startColumnNumber" : 58,
        "endLineNumber" : 117,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  User user=userService.getUserById(\"1\");\n  HystrixInvokableInfo<?> getUserByIdCommand=getLastExecutedCommand();\n  assertFalse(getUserByIdCommand.isResponseFromCache());\n  assertEquals(\"1\",user.getId());\n  assertEquals(\"name\",user.getName());\n  user=userService.getUserById(\"1\");\n  assertEquals(\"1\",user.getId());\n  getUserByIdCommand=getLastExecutedCommand();\n  assertTrue(getUserByIdCommand.isResponseFromCache());\n  assertEquals(\"name\",user.getName());\n  user=new User(\"1\",\"new_name\");\n  userService.update(user);\n  user=userService.getUserById(\"1\");\n  getUserByIdCommand=getLastExecutedCommand();\n  assertFalse(getUserByIdCommand.isResponseFromCache());\n  assertEquals(\"1\",user.getId());\n  assertEquals(\"new_name\",user.getName());\n  resetContext();\n  user=userService.getUserById(\"1\");\n  getUserByIdCommand=getLastExecutedCommand();\n  assertEquals(\"1\",user.getId());\n  assertFalse(getUserByIdCommand.isResponseFromCache());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 144,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2837,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 117,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Get-Set-Get with Request Cache Invalidation Test. <p/> given: command to get user by id, see  {@link UserService#getUserById(String)}command to update user, see  {@link UserService#update(com.netflix.hystrix.contrib.javanica.test.common.domain.User)}<p/> when: 1. call  {@link UserService#getUserById(String)}2. call  {@link UserService#getUserById(String)}3. call  {@link UserService#update(com.netflix.hystrix.contrib.javanica.test.common.domain.User)}4. call  {@link UserService#getUserById(String)}<p/> then: at the first time \"getUserById\" command shouldn't retrieve value from cache at the second time \"getUserById\" command should retrieve value from cache \"update\" method should update an user and flush cache related to \"getUserById\" command after \"update\" method execution \"getUserById\" command shouldn't retrieve value from cache\n */\n@Test public void testGetSetGetUserCache_givenTwoCommands(){\n  User user=userService.getUserById(\"1\");\n  HystrixInvokableInfo<?> getUserByIdCommand=getLastExecutedCommand();\n  assertFalse(getUserByIdCommand.isResponseFromCache());\n  assertEquals(\"1\",user.getId());\n  assertEquals(\"name\",user.getName());\n  user=userService.getUserById(\"1\");\n  assertEquals(\"1\",user.getId());\n  getUserByIdCommand=getLastExecutedCommand();\n  assertTrue(getUserByIdCommand.isResponseFromCache());\n  assertEquals(\"name\",user.getName());\n  user=new User(\"1\",\"new_name\");\n  userService.update(user);\n  user=userService.getUserById(\"1\");\n  getUserByIdCommand=getLastExecutedCommand();\n  assertFalse(getUserByIdCommand.isResponseFromCache());\n  assertEquals(\"1\",user.getId());\n  assertEquals(\"new_name\",user.getName());\n  resetContext();\n  user=userService.getUserById(\"1\");\n  getUserByIdCommand=getLastExecutedCommand();\n  assertEquals(\"1\",user.getId());\n  assertFalse(getUserByIdCommand.isResponseFromCache());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 151,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 54
      },
      "nodeContext" : "getUserByIdCommand=getLastExecutedCommand();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.HystrixInvokableInfo<>"
  }, {
    "nodeContext" : "getLastExecutedCommand()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 99,
      "startColumnNumber" : 29,
      "endLineNumber" : 99,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 99,
        "endColumnNumber" : 53
      },
      "nodeContext" : "getUserByIdCommand=getLastExecutedCommand()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 99,
        "endColumnNumber" : 54
      },
      "nodeContext" : "getUserByIdCommand=getLastExecutedCommand();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1798,
        "startLineNumber" : 76,
        "startColumnNumber" : 58,
        "endLineNumber" : 117,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  User user=userService.getUserById(\"1\");\n  HystrixInvokableInfo<?> getUserByIdCommand=getLastExecutedCommand();\n  assertFalse(getUserByIdCommand.isResponseFromCache());\n  assertEquals(\"1\",user.getId());\n  assertEquals(\"name\",user.getName());\n  user=userService.getUserById(\"1\");\n  assertEquals(\"1\",user.getId());\n  getUserByIdCommand=getLastExecutedCommand();\n  assertTrue(getUserByIdCommand.isResponseFromCache());\n  assertEquals(\"name\",user.getName());\n  user=new User(\"1\",\"new_name\");\n  userService.update(user);\n  user=userService.getUserById(\"1\");\n  getUserByIdCommand=getLastExecutedCommand();\n  assertFalse(getUserByIdCommand.isResponseFromCache());\n  assertEquals(\"1\",user.getId());\n  assertEquals(\"new_name\",user.getName());\n  resetContext();\n  user=userService.getUserById(\"1\");\n  getUserByIdCommand=getLastExecutedCommand();\n  assertEquals(\"1\",user.getId());\n  assertFalse(getUserByIdCommand.isResponseFromCache());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 144,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2837,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 117,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Get-Set-Get with Request Cache Invalidation Test. <p/> given: command to get user by id, see  {@link UserService#getUserById(String)}command to update user, see  {@link UserService#update(com.netflix.hystrix.contrib.javanica.test.common.domain.User)}<p/> when: 1. call  {@link UserService#getUserById(String)}2. call  {@link UserService#getUserById(String)}3. call  {@link UserService#update(com.netflix.hystrix.contrib.javanica.test.common.domain.User)}4. call  {@link UserService#getUserById(String)}<p/> then: at the first time \"getUserById\" command shouldn't retrieve value from cache at the second time \"getUserById\" command should retrieve value from cache \"update\" method should update an user and flush cache related to \"getUserById\" command after \"update\" method execution \"getUserById\" command shouldn't retrieve value from cache\n */\n@Test public void testGetSetGetUserCache_givenTwoCommands(){\n  User user=userService.getUserById(\"1\");\n  HystrixInvokableInfo<?> getUserByIdCommand=getLastExecutedCommand();\n  assertFalse(getUserByIdCommand.isResponseFromCache());\n  assertEquals(\"1\",user.getId());\n  assertEquals(\"name\",user.getName());\n  user=userService.getUserById(\"1\");\n  assertEquals(\"1\",user.getId());\n  getUserByIdCommand=getLastExecutedCommand();\n  assertTrue(getUserByIdCommand.isResponseFromCache());\n  assertEquals(\"name\",user.getName());\n  user=new User(\"1\",\"new_name\");\n  userService.update(user);\n  user=userService.getUserById(\"1\");\n  getUserByIdCommand=getLastExecutedCommand();\n  assertFalse(getUserByIdCommand.isResponseFromCache());\n  assertEquals(\"1\",user.getId());\n  assertEquals(\"new_name\",user.getName());\n  resetContext();\n  user=userService.getUserById(\"1\");\n  getUserByIdCommand=getLastExecutedCommand();\n  assertEquals(\"1\",user.getId());\n  assertFalse(getUserByIdCommand.isResponseFromCache());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 151,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 99,
        "endColumnNumber" : 54
      },
      "nodeContext" : "getUserByIdCommand=getLastExecutedCommand();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.HystrixInvokableInfo<>"
  }, {
    "nodeContext" : "getLastExecutedCommand()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 111,
      "startColumnNumber" : 29,
      "endLineNumber" : 111,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 111,
        "startColumnNumber" : 8,
        "endLineNumber" : 111,
        "endColumnNumber" : 53
      },
      "nodeContext" : "getUserByIdCommand=getLastExecutedCommand()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 111,
        "startColumnNumber" : 8,
        "endLineNumber" : 111,
        "endColumnNumber" : 54
      },
      "nodeContext" : "getUserByIdCommand=getLastExecutedCommand();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1798,
        "startLineNumber" : 76,
        "startColumnNumber" : 58,
        "endLineNumber" : 117,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  User user=userService.getUserById(\"1\");\n  HystrixInvokableInfo<?> getUserByIdCommand=getLastExecutedCommand();\n  assertFalse(getUserByIdCommand.isResponseFromCache());\n  assertEquals(\"1\",user.getId());\n  assertEquals(\"name\",user.getName());\n  user=userService.getUserById(\"1\");\n  assertEquals(\"1\",user.getId());\n  getUserByIdCommand=getLastExecutedCommand();\n  assertTrue(getUserByIdCommand.isResponseFromCache());\n  assertEquals(\"name\",user.getName());\n  user=new User(\"1\",\"new_name\");\n  userService.update(user);\n  user=userService.getUserById(\"1\");\n  getUserByIdCommand=getLastExecutedCommand();\n  assertFalse(getUserByIdCommand.isResponseFromCache());\n  assertEquals(\"1\",user.getId());\n  assertEquals(\"new_name\",user.getName());\n  resetContext();\n  user=userService.getUserById(\"1\");\n  getUserByIdCommand=getLastExecutedCommand();\n  assertEquals(\"1\",user.getId());\n  assertFalse(getUserByIdCommand.isResponseFromCache());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 144,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2837,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 117,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Get-Set-Get with Request Cache Invalidation Test. <p/> given: command to get user by id, see  {@link UserService#getUserById(String)}command to update user, see  {@link UserService#update(com.netflix.hystrix.contrib.javanica.test.common.domain.User)}<p/> when: 1. call  {@link UserService#getUserById(String)}2. call  {@link UserService#getUserById(String)}3. call  {@link UserService#update(com.netflix.hystrix.contrib.javanica.test.common.domain.User)}4. call  {@link UserService#getUserById(String)}<p/> then: at the first time \"getUserById\" command shouldn't retrieve value from cache at the second time \"getUserById\" command should retrieve value from cache \"update\" method should update an user and flush cache related to \"getUserById\" command after \"update\" method execution \"getUserById\" command shouldn't retrieve value from cache\n */\n@Test public void testGetSetGetUserCache_givenTwoCommands(){\n  User user=userService.getUserById(\"1\");\n  HystrixInvokableInfo<?> getUserByIdCommand=getLastExecutedCommand();\n  assertFalse(getUserByIdCommand.isResponseFromCache());\n  assertEquals(\"1\",user.getId());\n  assertEquals(\"name\",user.getName());\n  user=userService.getUserById(\"1\");\n  assertEquals(\"1\",user.getId());\n  getUserByIdCommand=getLastExecutedCommand();\n  assertTrue(getUserByIdCommand.isResponseFromCache());\n  assertEquals(\"name\",user.getName());\n  user=new User(\"1\",\"new_name\");\n  userService.update(user);\n  user=userService.getUserById(\"1\");\n  getUserByIdCommand=getLastExecutedCommand();\n  assertFalse(getUserByIdCommand.isResponseFromCache());\n  assertEquals(\"1\",user.getId());\n  assertEquals(\"new_name\",user.getName());\n  resetContext();\n  user=userService.getUserById(\"1\");\n  getUserByIdCommand=getLastExecutedCommand();\n  assertEquals(\"1\",user.getId());\n  assertFalse(getUserByIdCommand.isResponseFromCache());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 151,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 111,
        "startColumnNumber" : 8,
        "endLineNumber" : 111,
        "endColumnNumber" : 54
      },
      "nodeContext" : "getUserByIdCommand=getLastExecutedCommand();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.HystrixInvokableInfo<>"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 79,
    "startColumnNumber" : 53,
    "endLineNumber" : 79,
    "endColumnNumber" : 77
  }, {
    "charLength" : 24,
    "startLineNumber" : 88,
    "startColumnNumber" : 29,
    "endLineNumber" : 88,
    "endColumnNumber" : 53
  }, {
    "charLength" : 24,
    "startLineNumber" : 99,
    "startColumnNumber" : 29,
    "endLineNumber" : 99,
    "endColumnNumber" : 53
  }, {
    "charLength" : 24,
    "startLineNumber" : 111,
    "startColumnNumber" : 29,
    "endLineNumber" : 111,
    "endColumnNumber" : 53
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  } ]
}