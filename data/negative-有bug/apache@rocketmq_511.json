{
  "id" : 511,
  "expression" : "mq.getBrokerName()",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/tools/src/main/java/org/apache/rocketmq/tools/command/consumer/ConsumerProgressSubCommand.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "mq.getBrokerName()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 147,
      "startColumnNumber" : 51,
      "endLineNumber" : 147,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 147,
        "startColumnNumber" : 24,
        "endLineNumber" : 147,
        "endColumnNumber" : 74
      },
      "nodeContext" : "UtilAll.frontStringAtLeast(mq.getBrokerName(),32)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 522,
        "startLineNumber" : 145,
        "startColumnNumber" : 20,
        "endLineNumber" : 154,
        "endColumnNumber" : 21
      },
      "nodeContext" : "System.out.printf(\"%-32s  %-32s  %-4d  %-20d  %-20d  %-20s %-20d  %s%n\",UtilAll.frontStringAtLeast(mq.getTopic(),32),UtilAll.frontStringAtLeast(mq.getBrokerName(),32),mq.getQueueId(),offsetWrapper.getBrokerOffset(),offsetWrapper.getConsumerOffset(),null != clientIP ? clientIP : \"N/A\",diff,lastTime)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 37,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 523,
        "startLineNumber" : 145,
        "startColumnNumber" : 20,
        "endLineNumber" : 154,
        "endColumnNumber" : 22
      },
      "nodeContext" : "System.out.printf(\"%-32s  %-32s  %-4d  %-20d  %-20d  %-20s %-20d  %s%n\",UtilAll.frontStringAtLeast(mq.getTopic(),32),UtilAll.frontStringAtLeast(mq.getBrokerName(),32),mq.getQueueId(),offsetWrapper.getBrokerOffset(),offsetWrapper.getConsumerOffset(),null != clientIP ? clientIP : \"N/A\",diff,lastTime);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 38,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1413,
        "startLineNumber" : 126,
        "startColumnNumber" : 47,
        "endLineNumber" : 155,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  OffsetWrapper offsetWrapper=consumeStats.getOffsetTable().get(mq);\n  long diff=offsetWrapper.getBrokerOffset() - offsetWrapper.getConsumerOffset();\n  diffTotal+=diff;\n  String lastTime=\"\";\n  try {\n    if (offsetWrapper.getLastTimestamp() == 0) {\n      lastTime=\"N/A\";\n    }\n else {\n      lastTime=UtilAll.formatDate(new Date(offsetWrapper.getLastTimestamp()),UtilAll.YYYY_MM_DD_HH_MM_SS);\n    }\n  }\n catch (  Exception e) {\n  }\n  String clientIP=null;\n  if (showClientIP) {\n    clientIP=messageQueueAllocationResult.get(mq);\n  }\n  System.out.printf(\"%-32s  %-32s  %-4d  %-20d  %-20d  %-20s %-20d  %s%n\",UtilAll.frontStringAtLeast(mq.getTopic(),32),UtilAll.frontStringAtLeast(mq.getBrokerName(),32),mq.getQueueId(),offsetWrapper.getBrokerOffset(),offsetWrapper.getConsumerOffset(),null != clientIP ? clientIP : \"N/A\",diff,lastTime);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1444,
        "startLineNumber" : 126,
        "startColumnNumber" : 16,
        "endLineNumber" : 155,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (MessageQueue mq : mqList) {\n  OffsetWrapper offsetWrapper=consumeStats.getOffsetTable().get(mq);\n  long diff=offsetWrapper.getBrokerOffset() - offsetWrapper.getConsumerOffset();\n  diffTotal+=diff;\n  String lastTime=\"\";\n  try {\n    if (offsetWrapper.getLastTimestamp() == 0) {\n      lastTime=\"N/A\";\n    }\n else {\n      lastTime=UtilAll.formatDate(new Date(offsetWrapper.getLastTimestamp()),UtilAll.YYYY_MM_DD_HH_MM_SS);\n    }\n  }\n catch (  Exception e) {\n  }\n  String clientIP=null;\n  if (showClientIP) {\n    clientIP=messageQueueAllocationResult.get(mq);\n  }\n  System.out.printf(\"%-32s  %-32s  %-4d  %-20d  %-20d  %-20s %-20d  %s%n\",UtilAll.frontStringAtLeast(mq.getTopic(),32),UtilAll.frontStringAtLeast(mq.getBrokerName(),32),mq.getQueueId(),offsetWrapper.getBrokerOffset(),offsetWrapper.getConsumerOffset(),null != clientIP ? clientIP : \"N/A\",diff,lastTime);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 128,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2687,
        "startLineNumber" : 103,
        "startColumnNumber" : 44,
        "endLineNumber" : 160,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String consumerGroup=commandLine.getOptionValue('g').trim();\n  ConsumeStats consumeStats=defaultMQAdminExt.examineConsumeStats(consumerGroup);\n  List<MessageQueue> mqList=new LinkedList<MessageQueue>();\n  mqList.addAll(consumeStats.getOffsetTable().keySet());\n  Collections.sort(mqList);\n  Map<MessageQueue,String> messageQueueAllocationResult=null;\n  if (showClientIP) {\n    messageQueueAllocationResult=getMessageQueueAllocationResult(defaultMQAdminExt,consumerGroup);\n  }\n  System.out.printf(\"%-32s  %-32s  %-4s  %-20s  %-20s  %-20s %-20s  %s%n\",\"#Topic\",\"#Broker Name\",\"#QID\",\"#Broker Offset\",\"#Consumer Offset\",\"#Client IP\",\"#Diff\",\"#LastTime\");\n  long diffTotal=0L;\n  for (  MessageQueue mq : mqList) {\n    OffsetWrapper offsetWrapper=consumeStats.getOffsetTable().get(mq);\n    long diff=offsetWrapper.getBrokerOffset() - offsetWrapper.getConsumerOffset();\n    diffTotal+=diff;\n    String lastTime=\"\";\n    try {\n      if (offsetWrapper.getLastTimestamp() == 0) {\n        lastTime=\"N/A\";\n      }\n else {\n        lastTime=UtilAll.formatDate(new Date(offsetWrapper.getLastTimestamp()),UtilAll.YYYY_MM_DD_HH_MM_SS);\n      }\n    }\n catch (    Exception e) {\n    }\n    String clientIP=null;\n    if (showClientIP) {\n      clientIP=messageQueueAllocationResult.get(mq);\n    }\n    System.out.printf(\"%-32s  %-32s  %-4d  %-20d  %-20d  %-20s %-20d  %s%n\",UtilAll.frontStringAtLeast(mq.getTopic(),32),UtilAll.frontStringAtLeast(mq.getBrokerName(),32),mq.getQueueId(),offsetWrapper.getBrokerOffset(),offsetWrapper.getConsumerOffset(),null != clientIP ? clientIP : \"N/A\",diff,lastTime);\n  }\n  System.out.printf(\"%n\");\n  System.out.printf(\"Consume TPS: %.2f%n\",consumeStats.getConsumeTps());\n  System.out.printf(\"Diff Total: %d%n\",diffTotal);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 243,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5924,
        "startLineNumber" : 103,
        "startColumnNumber" : 12,
        "endLineNumber" : 218,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (commandLine.hasOption('g')) {\n  String consumerGroup=commandLine.getOptionValue('g').trim();\n  ConsumeStats consumeStats=defaultMQAdminExt.examineConsumeStats(consumerGroup);\n  List<MessageQueue> mqList=new LinkedList<MessageQueue>();\n  mqList.addAll(consumeStats.getOffsetTable().keySet());\n  Collections.sort(mqList);\n  Map<MessageQueue,String> messageQueueAllocationResult=null;\n  if (showClientIP) {\n    messageQueueAllocationResult=getMessageQueueAllocationResult(defaultMQAdminExt,consumerGroup);\n  }\n  System.out.printf(\"%-32s  %-32s  %-4s  %-20s  %-20s  %-20s %-20s  %s%n\",\"#Topic\",\"#Broker Name\",\"#QID\",\"#Broker Offset\",\"#Consumer Offset\",\"#Client IP\",\"#Diff\",\"#LastTime\");\n  long diffTotal=0L;\n  for (  MessageQueue mq : mqList) {\n    OffsetWrapper offsetWrapper=consumeStats.getOffsetTable().get(mq);\n    long diff=offsetWrapper.getBrokerOffset() - offsetWrapper.getConsumerOffset();\n    diffTotal+=diff;\n    String lastTime=\"\";\n    try {\n      if (offsetWrapper.getLastTimestamp() == 0) {\n        lastTime=\"N/A\";\n      }\n else {\n        lastTime=UtilAll.formatDate(new Date(offsetWrapper.getLastTimestamp()),UtilAll.YYYY_MM_DD_HH_MM_SS);\n      }\n    }\n catch (    Exception e) {\n    }\n    String clientIP=null;\n    if (showClientIP) {\n      clientIP=messageQueueAllocationResult.get(mq);\n    }\n    System.out.printf(\"%-32s  %-32s  %-4d  %-20d  %-20d  %-20s %-20d  %s%n\",UtilAll.frontStringAtLeast(mq.getTopic(),32),UtilAll.frontStringAtLeast(mq.getBrokerName(),32),mq.getQueueId(),offsetWrapper.getBrokerOffset(),offsetWrapper.getConsumerOffset(),null != clientIP ? clientIP : \"N/A\",diff,lastTime);\n  }\n  System.out.printf(\"%n\");\n  System.out.printf(\"Consume TPS: %.2f%n\",consumeStats.getConsumeTps());\n  System.out.printf(\"Diff Total: %d%n\",diffTotal);\n}\n else {\n  System.out.printf(\"%-32s  %-6s  %-24s %-5s  %-14s  %-7s  %s%n\",\"#Group\",\"#Count\",\"#Version\",\"#Type\",\"#Model\",\"#TPS\",\"#Diff Total\");\n  TopicList topicList=defaultMQAdminExt.fetchAllTopicList();\n  for (  String topic : topicList.getTopicList()) {\n    if (topic.startsWith(MixAll.RETRY_GROUP_TOPIC_PREFIX)) {\n      String consumerGroup=topic.substring(MixAll.RETRY_GROUP_TOPIC_PREFIX.length());\n      try {\n        ConsumeStats consumeStats=null;\n        try {\n          consumeStats=defaultMQAdminExt.examineConsumeStats(consumerGroup);\n        }\n catch (        Exception e) {\n          log.warn(\"examineConsumeStats exception, \" + consumerGroup,e);\n        }\n        ConsumerConnection cc=null;\n        try {\n          cc=defaultMQAdminExt.examineConsumerConnectionInfo(consumerGroup);\n        }\n catch (        Exception e) {\n          log.warn(\"examineConsumerConnectionInfo exception, \" + consumerGroup,e);\n        }\n        GroupConsumeInfo groupConsumeInfo=new GroupConsumeInfo();\n        groupConsumeInfo.setGroup(consumerGroup);\n        if (consumeStats != null) {\n          groupConsumeInfo.setConsumeTps((int)consumeStats.getConsumeTps());\n          groupConsumeInfo.setDiffTotal(consumeStats.computeTotalDiff());\n        }\n        if (cc != null) {\n          groupConsumeInfo.setCount(cc.getConnectionSet().size());\n          groupConsumeInfo.setMessageModel(cc.getMessageModel());\n          groupConsumeInfo.setConsumeType(cc.getConsumeType());\n          groupConsumeInfo.setVersion(cc.computeMinVersion());\n        }\n        System.out.printf(\"%-32s  %-6d  %-24s %-5s  %-14s  %-7d  %d%n\",UtilAll.frontStringAtLeast(groupConsumeInfo.getGroup(),32),groupConsumeInfo.getCount(),groupConsumeInfo.getCount() > 0 ? groupConsumeInfo.versionDesc() : \"OFFLINE\",groupConsumeInfo.consumeTypeDesc(),groupConsumeInfo.messageModelDesc(),groupConsumeInfo.getConsumeTps(),groupConsumeInfo.getDiffTotal());\n      }\n catch (      Exception e) {\n        log.warn(\"examineConsumeStats or examineConsumerConnectionInfo exception, \" + consumerGroup,e);\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 483,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 6128,
        "startLineNumber" : 97,
        "startColumnNumber" : 12,
        "endLineNumber" : 219,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  defaultMQAdminExt.start();\n  boolean showClientIP=commandLine.hasOption('s') && \"true\".equalsIgnoreCase(commandLine.getOptionValue('s'));\n  if (commandLine.hasOption('g')) {\n    String consumerGroup=commandLine.getOptionValue('g').trim();\n    ConsumeStats consumeStats=defaultMQAdminExt.examineConsumeStats(consumerGroup);\n    List<MessageQueue> mqList=new LinkedList<MessageQueue>();\n    mqList.addAll(consumeStats.getOffsetTable().keySet());\n    Collections.sort(mqList);\n    Map<MessageQueue,String> messageQueueAllocationResult=null;\n    if (showClientIP) {\n      messageQueueAllocationResult=getMessageQueueAllocationResult(defaultMQAdminExt,consumerGroup);\n    }\n    System.out.printf(\"%-32s  %-32s  %-4s  %-20s  %-20s  %-20s %-20s  %s%n\",\"#Topic\",\"#Broker Name\",\"#QID\",\"#Broker Offset\",\"#Consumer Offset\",\"#Client IP\",\"#Diff\",\"#LastTime\");\n    long diffTotal=0L;\n    for (    MessageQueue mq : mqList) {\n      OffsetWrapper offsetWrapper=consumeStats.getOffsetTable().get(mq);\n      long diff=offsetWrapper.getBrokerOffset() - offsetWrapper.getConsumerOffset();\n      diffTotal+=diff;\n      String lastTime=\"\";\n      try {\n        if (offsetWrapper.getLastTimestamp() == 0) {\n          lastTime=\"N/A\";\n        }\n else {\n          lastTime=UtilAll.formatDate(new Date(offsetWrapper.getLastTimestamp()),UtilAll.YYYY_MM_DD_HH_MM_SS);\n        }\n      }\n catch (      Exception e) {\n      }\n      String clientIP=null;\n      if (showClientIP) {\n        clientIP=messageQueueAllocationResult.get(mq);\n      }\n      System.out.printf(\"%-32s  %-32s  %-4d  %-20d  %-20d  %-20s %-20d  %s%n\",UtilAll.frontStringAtLeast(mq.getTopic(),32),UtilAll.frontStringAtLeast(mq.getBrokerName(),32),mq.getQueueId(),offsetWrapper.getBrokerOffset(),offsetWrapper.getConsumerOffset(),null != clientIP ? clientIP : \"N/A\",diff,lastTime);\n    }\n    System.out.printf(\"%n\");\n    System.out.printf(\"Consume TPS: %.2f%n\",consumeStats.getConsumeTps());\n    System.out.printf(\"Diff Total: %d%n\",diffTotal);\n  }\n else {\n    System.out.printf(\"%-32s  %-6s  %-24s %-5s  %-14s  %-7s  %s%n\",\"#Group\",\"#Count\",\"#Version\",\"#Type\",\"#Model\",\"#TPS\",\"#Diff Total\");\n    TopicList topicList=defaultMQAdminExt.fetchAllTopicList();\n    for (    String topic : topicList.getTopicList()) {\n      if (topic.startsWith(MixAll.RETRY_GROUP_TOPIC_PREFIX)) {\n        String consumerGroup=topic.substring(MixAll.RETRY_GROUP_TOPIC_PREFIX.length());\n        try {\n          ConsumeStats consumeStats=null;\n          try {\n            consumeStats=defaultMQAdminExt.examineConsumeStats(consumerGroup);\n          }\n catch (          Exception e) {\n            log.warn(\"examineConsumeStats exception, \" + consumerGroup,e);\n          }\n          ConsumerConnection cc=null;\n          try {\n            cc=defaultMQAdminExt.examineConsumerConnectionInfo(consumerGroup);\n          }\n catch (          Exception e) {\n            log.warn(\"examineConsumerConnectionInfo exception, \" + consumerGroup,e);\n          }\n          GroupConsumeInfo groupConsumeInfo=new GroupConsumeInfo();\n          groupConsumeInfo.setGroup(consumerGroup);\n          if (consumeStats != null) {\n            groupConsumeInfo.setConsumeTps((int)consumeStats.getConsumeTps());\n            groupConsumeInfo.setDiffTotal(consumeStats.computeTotalDiff());\n          }\n          if (cc != null) {\n            groupConsumeInfo.setCount(cc.getConnectionSet().size());\n            groupConsumeInfo.setMessageModel(cc.getMessageModel());\n            groupConsumeInfo.setConsumeType(cc.getConsumeType());\n            groupConsumeInfo.setVersion(cc.computeMinVersion());\n          }\n          System.out.printf(\"%-32s  %-6d  %-24s %-5s  %-14s  %-7d  %d%n\",UtilAll.frontStringAtLeast(groupConsumeInfo.getGroup(),32),groupConsumeInfo.getCount(),groupConsumeInfo.getCount() > 0 ? groupConsumeInfo.versionDesc() : \"OFFLINE\",groupConsumeInfo.consumeTypeDesc(),groupConsumeInfo.messageModelDesc(),groupConsumeInfo.getConsumeTps(),groupConsumeInfo.getDiffTotal());\n        }\n catch (        Exception e) {\n          log.warn(\"examineConsumeStats or examineConsumerConnectionInfo exception, \" + consumerGroup,e);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 504,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 6325,
        "startLineNumber" : 97,
        "startColumnNumber" : 8,
        "endLineNumber" : 223,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  defaultMQAdminExt.start();\n  boolean showClientIP=commandLine.hasOption('s') && \"true\".equalsIgnoreCase(commandLine.getOptionValue('s'));\n  if (commandLine.hasOption('g')) {\n    String consumerGroup=commandLine.getOptionValue('g').trim();\n    ConsumeStats consumeStats=defaultMQAdminExt.examineConsumeStats(consumerGroup);\n    List<MessageQueue> mqList=new LinkedList<MessageQueue>();\n    mqList.addAll(consumeStats.getOffsetTable().keySet());\n    Collections.sort(mqList);\n    Map<MessageQueue,String> messageQueueAllocationResult=null;\n    if (showClientIP) {\n      messageQueueAllocationResult=getMessageQueueAllocationResult(defaultMQAdminExt,consumerGroup);\n    }\n    System.out.printf(\"%-32s  %-32s  %-4s  %-20s  %-20s  %-20s %-20s  %s%n\",\"#Topic\",\"#Broker Name\",\"#QID\",\"#Broker Offset\",\"#Consumer Offset\",\"#Client IP\",\"#Diff\",\"#LastTime\");\n    long diffTotal=0L;\n    for (    MessageQueue mq : mqList) {\n      OffsetWrapper offsetWrapper=consumeStats.getOffsetTable().get(mq);\n      long diff=offsetWrapper.getBrokerOffset() - offsetWrapper.getConsumerOffset();\n      diffTotal+=diff;\n      String lastTime=\"\";\n      try {\n        if (offsetWrapper.getLastTimestamp() == 0) {\n          lastTime=\"N/A\";\n        }\n else {\n          lastTime=UtilAll.formatDate(new Date(offsetWrapper.getLastTimestamp()),UtilAll.YYYY_MM_DD_HH_MM_SS);\n        }\n      }\n catch (      Exception e) {\n      }\n      String clientIP=null;\n      if (showClientIP) {\n        clientIP=messageQueueAllocationResult.get(mq);\n      }\n      System.out.printf(\"%-32s  %-32s  %-4d  %-20d  %-20d  %-20s %-20d  %s%n\",UtilAll.frontStringAtLeast(mq.getTopic(),32),UtilAll.frontStringAtLeast(mq.getBrokerName(),32),mq.getQueueId(),offsetWrapper.getBrokerOffset(),offsetWrapper.getConsumerOffset(),null != clientIP ? clientIP : \"N/A\",diff,lastTime);\n    }\n    System.out.printf(\"%n\");\n    System.out.printf(\"Consume TPS: %.2f%n\",consumeStats.getConsumeTps());\n    System.out.printf(\"Diff Total: %d%n\",diffTotal);\n  }\n else {\n    System.out.printf(\"%-32s  %-6s  %-24s %-5s  %-14s  %-7s  %s%n\",\"#Group\",\"#Count\",\"#Version\",\"#Type\",\"#Model\",\"#TPS\",\"#Diff Total\");\n    TopicList topicList=defaultMQAdminExt.fetchAllTopicList();\n    for (    String topic : topicList.getTopicList()) {\n      if (topic.startsWith(MixAll.RETRY_GROUP_TOPIC_PREFIX)) {\n        String consumerGroup=topic.substring(MixAll.RETRY_GROUP_TOPIC_PREFIX.length());\n        try {\n          ConsumeStats consumeStats=null;\n          try {\n            consumeStats=defaultMQAdminExt.examineConsumeStats(consumerGroup);\n          }\n catch (          Exception e) {\n            log.warn(\"examineConsumeStats exception, \" + consumerGroup,e);\n          }\n          ConsumerConnection cc=null;\n          try {\n            cc=defaultMQAdminExt.examineConsumerConnectionInfo(consumerGroup);\n          }\n catch (          Exception e) {\n            log.warn(\"examineConsumerConnectionInfo exception, \" + consumerGroup,e);\n          }\n          GroupConsumeInfo groupConsumeInfo=new GroupConsumeInfo();\n          groupConsumeInfo.setGroup(consumerGroup);\n          if (consumeStats != null) {\n            groupConsumeInfo.setConsumeTps((int)consumeStats.getConsumeTps());\n            groupConsumeInfo.setDiffTotal(consumeStats.computeTotalDiff());\n          }\n          if (cc != null) {\n            groupConsumeInfo.setCount(cc.getConnectionSet().size());\n            groupConsumeInfo.setMessageModel(cc.getMessageModel());\n            groupConsumeInfo.setConsumeType(cc.getConsumeType());\n            groupConsumeInfo.setVersion(cc.computeMinVersion());\n          }\n          System.out.printf(\"%-32s  %-6d  %-24s %-5s  %-14s  %-7d  %d%n\",UtilAll.frontStringAtLeast(groupConsumeInfo.getGroup(),32),groupConsumeInfo.getCount(),groupConsumeInfo.getCount() > 0 ? groupConsumeInfo.versionDesc() : \"OFFLINE\",groupConsumeInfo.consumeTypeDesc(),groupConsumeInfo.messageModelDesc(),groupConsumeInfo.getConsumeTps(),groupConsumeInfo.getDiffTotal());\n        }\n catch (        Exception e) {\n          log.warn(\"examineConsumeStats or examineConsumerConnectionInfo exception, \" + consumerGroup,e);\n        }\n      }\n    }\n  }\n}\n catch (Exception e) {\n  throw new SubCommandException(this.getClass().getSimpleName() + \" command failed\",e);\n}\n finally {\n  defaultMQAdminExt.shutdown();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 528,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 6506,
        "startLineNumber" : 93,
        "startColumnNumber" : 110,
        "endLineNumber" : 224,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  DefaultMQAdminExt defaultMQAdminExt=new DefaultMQAdminExt(rpcHook);\n  defaultMQAdminExt.setInstanceName(Long.toString(System.currentTimeMillis()));\n  try {\n    defaultMQAdminExt.start();\n    boolean showClientIP=commandLine.hasOption('s') && \"true\".equalsIgnoreCase(commandLine.getOptionValue('s'));\n    if (commandLine.hasOption('g')) {\n      String consumerGroup=commandLine.getOptionValue('g').trim();\n      ConsumeStats consumeStats=defaultMQAdminExt.examineConsumeStats(consumerGroup);\n      List<MessageQueue> mqList=new LinkedList<MessageQueue>();\n      mqList.addAll(consumeStats.getOffsetTable().keySet());\n      Collections.sort(mqList);\n      Map<MessageQueue,String> messageQueueAllocationResult=null;\n      if (showClientIP) {\n        messageQueueAllocationResult=getMessageQueueAllocationResult(defaultMQAdminExt,consumerGroup);\n      }\n      System.out.printf(\"%-32s  %-32s  %-4s  %-20s  %-20s  %-20s %-20s  %s%n\",\"#Topic\",\"#Broker Name\",\"#QID\",\"#Broker Offset\",\"#Consumer Offset\",\"#Client IP\",\"#Diff\",\"#LastTime\");\n      long diffTotal=0L;\n      for (      MessageQueue mq : mqList) {\n        OffsetWrapper offsetWrapper=consumeStats.getOffsetTable().get(mq);\n        long diff=offsetWrapper.getBrokerOffset() - offsetWrapper.getConsumerOffset();\n        diffTotal+=diff;\n        String lastTime=\"\";\n        try {\n          if (offsetWrapper.getLastTimestamp() == 0) {\n            lastTime=\"N/A\";\n          }\n else {\n            lastTime=UtilAll.formatDate(new Date(offsetWrapper.getLastTimestamp()),UtilAll.YYYY_MM_DD_HH_MM_SS);\n          }\n        }\n catch (        Exception e) {\n        }\n        String clientIP=null;\n        if (showClientIP) {\n          clientIP=messageQueueAllocationResult.get(mq);\n        }\n        System.out.printf(\"%-32s  %-32s  %-4d  %-20d  %-20d  %-20s %-20d  %s%n\",UtilAll.frontStringAtLeast(mq.getTopic(),32),UtilAll.frontStringAtLeast(mq.getBrokerName(),32),mq.getQueueId(),offsetWrapper.getBrokerOffset(),offsetWrapper.getConsumerOffset(),null != clientIP ? clientIP : \"N/A\",diff,lastTime);\n      }\n      System.out.printf(\"%n\");\n      System.out.printf(\"Consume TPS: %.2f%n\",consumeStats.getConsumeTps());\n      System.out.printf(\"Diff Total: %d%n\",diffTotal);\n    }\n else {\n      System.out.printf(\"%-32s  %-6s  %-24s %-5s  %-14s  %-7s  %s%n\",\"#Group\",\"#Count\",\"#Version\",\"#Type\",\"#Model\",\"#TPS\",\"#Diff Total\");\n      TopicList topicList=defaultMQAdminExt.fetchAllTopicList();\n      for (      String topic : topicList.getTopicList()) {\n        if (topic.startsWith(MixAll.RETRY_GROUP_TOPIC_PREFIX)) {\n          String consumerGroup=topic.substring(MixAll.RETRY_GROUP_TOPIC_PREFIX.length());\n          try {\n            ConsumeStats consumeStats=null;\n            try {\n              consumeStats=defaultMQAdminExt.examineConsumeStats(consumerGroup);\n            }\n catch (            Exception e) {\n              log.warn(\"examineConsumeStats exception, \" + consumerGroup,e);\n            }\n            ConsumerConnection cc=null;\n            try {\n              cc=defaultMQAdminExt.examineConsumerConnectionInfo(consumerGroup);\n            }\n catch (            Exception e) {\n              log.warn(\"examineConsumerConnectionInfo exception, \" + consumerGroup,e);\n            }\n            GroupConsumeInfo groupConsumeInfo=new GroupConsumeInfo();\n            groupConsumeInfo.setGroup(consumerGroup);\n            if (consumeStats != null) {\n              groupConsumeInfo.setConsumeTps((int)consumeStats.getConsumeTps());\n              groupConsumeInfo.setDiffTotal(consumeStats.computeTotalDiff());\n            }\n            if (cc != null) {\n              groupConsumeInfo.setCount(cc.getConnectionSet().size());\n              groupConsumeInfo.setMessageModel(cc.getMessageModel());\n              groupConsumeInfo.setConsumeType(cc.getConsumeType());\n              groupConsumeInfo.setVersion(cc.computeMinVersion());\n            }\n            System.out.printf(\"%-32s  %-6d  %-24s %-5s  %-14s  %-7d  %d%n\",UtilAll.frontStringAtLeast(groupConsumeInfo.getGroup(),32),groupConsumeInfo.getCount(),groupConsumeInfo.getCount() > 0 ? groupConsumeInfo.versionDesc() : \"OFFLINE\",groupConsumeInfo.consumeTypeDesc(),groupConsumeInfo.messageModelDesc(),groupConsumeInfo.getConsumeTps(),groupConsumeInfo.getDiffTotal());\n          }\n catch (          Exception e) {\n            log.warn(\"examineConsumeStats or examineConsumerConnectionInfo exception, \" + consumerGroup,e);\n          }\n        }\n      }\n    }\n  }\n catch (  Exception e) {\n    throw new SubCommandException(this.getClass().getSimpleName() + \" command failed\",e);\n  }\n finally {\n    defaultMQAdminExt.shutdown();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 548,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 6626,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 224,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void execute(CommandLine commandLine,Options options,RPCHook rpcHook) throws SubCommandException {\n  DefaultMQAdminExt defaultMQAdminExt=new DefaultMQAdminExt(rpcHook);\n  defaultMQAdminExt.setInstanceName(Long.toString(System.currentTimeMillis()));\n  try {\n    defaultMQAdminExt.start();\n    boolean showClientIP=commandLine.hasOption('s') && \"true\".equalsIgnoreCase(commandLine.getOptionValue('s'));\n    if (commandLine.hasOption('g')) {\n      String consumerGroup=commandLine.getOptionValue('g').trim();\n      ConsumeStats consumeStats=defaultMQAdminExt.examineConsumeStats(consumerGroup);\n      List<MessageQueue> mqList=new LinkedList<MessageQueue>();\n      mqList.addAll(consumeStats.getOffsetTable().keySet());\n      Collections.sort(mqList);\n      Map<MessageQueue,String> messageQueueAllocationResult=null;\n      if (showClientIP) {\n        messageQueueAllocationResult=getMessageQueueAllocationResult(defaultMQAdminExt,consumerGroup);\n      }\n      System.out.printf(\"%-32s  %-32s  %-4s  %-20s  %-20s  %-20s %-20s  %s%n\",\"#Topic\",\"#Broker Name\",\"#QID\",\"#Broker Offset\",\"#Consumer Offset\",\"#Client IP\",\"#Diff\",\"#LastTime\");\n      long diffTotal=0L;\n      for (      MessageQueue mq : mqList) {\n        OffsetWrapper offsetWrapper=consumeStats.getOffsetTable().get(mq);\n        long diff=offsetWrapper.getBrokerOffset() - offsetWrapper.getConsumerOffset();\n        diffTotal+=diff;\n        String lastTime=\"\";\n        try {\n          if (offsetWrapper.getLastTimestamp() == 0) {\n            lastTime=\"N/A\";\n          }\n else {\n            lastTime=UtilAll.formatDate(new Date(offsetWrapper.getLastTimestamp()),UtilAll.YYYY_MM_DD_HH_MM_SS);\n          }\n        }\n catch (        Exception e) {\n        }\n        String clientIP=null;\n        if (showClientIP) {\n          clientIP=messageQueueAllocationResult.get(mq);\n        }\n        System.out.printf(\"%-32s  %-32s  %-4d  %-20d  %-20d  %-20s %-20d  %s%n\",UtilAll.frontStringAtLeast(mq.getTopic(),32),UtilAll.frontStringAtLeast(mq.getBrokerName(),32),mq.getQueueId(),offsetWrapper.getBrokerOffset(),offsetWrapper.getConsumerOffset(),null != clientIP ? clientIP : \"N/A\",diff,lastTime);\n      }\n      System.out.printf(\"%n\");\n      System.out.printf(\"Consume TPS: %.2f%n\",consumeStats.getConsumeTps());\n      System.out.printf(\"Diff Total: %d%n\",diffTotal);\n    }\n else {\n      System.out.printf(\"%-32s  %-6s  %-24s %-5s  %-14s  %-7s  %s%n\",\"#Group\",\"#Count\",\"#Version\",\"#Type\",\"#Model\",\"#TPS\",\"#Diff Total\");\n      TopicList topicList=defaultMQAdminExt.fetchAllTopicList();\n      for (      String topic : topicList.getTopicList()) {\n        if (topic.startsWith(MixAll.RETRY_GROUP_TOPIC_PREFIX)) {\n          String consumerGroup=topic.substring(MixAll.RETRY_GROUP_TOPIC_PREFIX.length());\n          try {\n            ConsumeStats consumeStats=null;\n            try {\n              consumeStats=defaultMQAdminExt.examineConsumeStats(consumerGroup);\n            }\n catch (            Exception e) {\n              log.warn(\"examineConsumeStats exception, \" + consumerGroup,e);\n            }\n            ConsumerConnection cc=null;\n            try {\n              cc=defaultMQAdminExt.examineConsumerConnectionInfo(consumerGroup);\n            }\n catch (            Exception e) {\n              log.warn(\"examineConsumerConnectionInfo exception, \" + consumerGroup,e);\n            }\n            GroupConsumeInfo groupConsumeInfo=new GroupConsumeInfo();\n            groupConsumeInfo.setGroup(consumerGroup);\n            if (consumeStats != null) {\n              groupConsumeInfo.setConsumeTps((int)consumeStats.getConsumeTps());\n              groupConsumeInfo.setDiffTotal(consumeStats.computeTotalDiff());\n            }\n            if (cc != null) {\n              groupConsumeInfo.setCount(cc.getConnectionSet().size());\n              groupConsumeInfo.setMessageModel(cc.getMessageModel());\n              groupConsumeInfo.setConsumeType(cc.getConsumeType());\n              groupConsumeInfo.setVersion(cc.computeMinVersion());\n            }\n            System.out.printf(\"%-32s  %-6d  %-24s %-5s  %-14s  %-7d  %d%n\",UtilAll.frontStringAtLeast(groupConsumeInfo.getGroup(),32),groupConsumeInfo.getCount(),groupConsumeInfo.getCount() > 0 ? groupConsumeInfo.versionDesc() : \"OFFLINE\",groupConsumeInfo.consumeTypeDesc(),groupConsumeInfo.messageModelDesc(),groupConsumeInfo.getConsumeTps(),groupConsumeInfo.getDiffTotal());\n          }\n catch (          Exception e) {\n            log.warn(\"examineConsumeStats or examineConsumerConnectionInfo exception, \" + consumerGroup,e);\n          }\n        }\n      }\n    }\n  }\n catch (  Exception e) {\n    throw new SubCommandException(this.getClass().getSimpleName() + \" command failed\",e);\n  }\n finally {\n    defaultMQAdminExt.shutdown();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 568,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 147,
        "startColumnNumber" : 24,
        "endLineNumber" : 147,
        "endColumnNumber" : 74
      },
      "nodeContext" : "UtilAll.frontStringAtLeast(mq.getBrokerName(),32)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 147,
    "startColumnNumber" : 51,
    "endLineNumber" : 147,
    "endColumnNumber" : 69
  } ],
  "layoutRelationDataList" : [ ]
}