{
  "id" : 460,
  "expression" : "SECOND",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/processing/src/main/java/org/apache/druid/query/expression/TimestampExtractExprMacro.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "SECOND",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 122,
      "startColumnNumber" : 15,
      "endLineNumber" : 122,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 122,
        "startColumnNumber" : 10,
        "endLineNumber" : 122,
        "endColumnNumber" : 22
      },
      "nodeContext" : "case SECOND:",
      "nodeType" : "SwitchCase",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1924,
        "startLineNumber" : 115,
        "startColumnNumber" : 8,
        "endLineNumber" : 157,
        "endColumnNumber" : 9
      },
      "nodeContext" : "switch (unit) {\ncase EPOCH:  return ExprEval.of(epoch);\ncase MICROSECOND:return ExprEval.of(epoch / 1000);\ncase MILLISECOND:return ExprEval.of(dateTime.millisOfSecond().get());\ncase SECOND:return ExprEval.of(dateTime.secondOfMinute().get());\ncase MINUTE:return ExprEval.of(dateTime.minuteOfHour().get());\ncase HOUR:return ExprEval.of(dateTime.hourOfDay().get());\ncase DAY:return ExprEval.of(dateTime.dayOfMonth().get());\ncase DOW:return ExprEval.of(dateTime.dayOfWeek().get());\ncase ISODOW:return ExprEval.of(dateTime.dayOfWeek().get());\ncase DOY:return ExprEval.of(dateTime.dayOfYear().get());\ncase WEEK:return ExprEval.of(dateTime.weekOfWeekyear().get());\ncase MONTH:return ExprEval.of(dateTime.monthOfYear().get());\ncase QUARTER:return ExprEval.of((dateTime.monthOfYear().get() - 1) / 3 + 1);\ncase YEAR:return ExprEval.of(dateTime.year().get());\ncase ISOYEAR:return ExprEval.of(dateTime.year().get());\ncase DECADE:return ExprEval.of(dateTime.year().get() / 10);\ncase CENTURY:return ExprEval.of(Math.ceil((double)dateTime.year().get() / 100));\ncase MILLENNIUM:return ExprEval.of(Math.ceil((double)dateTime.year().get() / 1000));\ndefault:throw new ISE(\"Unhandled unit[%s]\",unit);\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 224,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2230,
        "startLineNumber" : 106,
        "startColumnNumber" : 6,
        "endLineNumber" : 158,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  Object val=arg.eval(bindings).value();\n  if (val == null) {\n    return ExprEval.of(null);\n  }\n  final DateTime dateTime=new DateTime(val,chronology);\n  long epoch=dateTime.getMillis() / 1000;\nswitch (unit) {\ncase EPOCH:    return ExprEval.of(epoch);\ncase MICROSECOND:  return ExprEval.of(epoch / 1000);\ncase MILLISECOND:return ExprEval.of(dateTime.millisOfSecond().get());\ncase SECOND:return ExprEval.of(dateTime.secondOfMinute().get());\ncase MINUTE:return ExprEval.of(dateTime.minuteOfHour().get());\ncase HOUR:return ExprEval.of(dateTime.hourOfDay().get());\ncase DAY:return ExprEval.of(dateTime.dayOfMonth().get());\ncase DOW:return ExprEval.of(dateTime.dayOfWeek().get());\ncase ISODOW:return ExprEval.of(dateTime.dayOfWeek().get());\ncase DOY:return ExprEval.of(dateTime.dayOfYear().get());\ncase WEEK:return ExprEval.of(dateTime.weekOfWeekyear().get());\ncase MONTH:return ExprEval.of(dateTime.monthOfYear().get());\ncase QUARTER:return ExprEval.of((dateTime.monthOfYear().get() - 1) / 3 + 1);\ncase YEAR:return ExprEval.of(dateTime.year().get());\ncase ISOYEAR:return ExprEval.of(dateTime.year().get());\ncase DECADE:return ExprEval.of(dateTime.year().get() / 10);\ncase CENTURY:return ExprEval.of(Math.ceil((double)dateTime.year().get() / 100));\ncase MILLENNIUM:return ExprEval.of(Math.ceil((double)dateTime.year().get() / 1000));\ndefault:throw new ISE(\"Unhandled unit[%s]\",unit);\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 266,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2318,
        "startLineNumber" : 103,
        "startColumnNumber" : 6,
        "endLineNumber" : 158,
        "endColumnNumber" : 7
      },
      "nodeContext" : "@Nonnull @Override public ExprEval eval(final ObjectBinding bindings){\n  Object val=arg.eval(bindings).value();\n  if (val == null) {\n    return ExprEval.of(null);\n  }\n  final DateTime dateTime=new DateTime(val,chronology);\n  long epoch=dateTime.getMillis() / 1000;\nswitch (unit) {\ncase EPOCH:    return ExprEval.of(epoch);\ncase MICROSECOND:  return ExprEval.of(epoch / 1000);\ncase MILLISECOND:return ExprEval.of(dateTime.millisOfSecond().get());\ncase SECOND:return ExprEval.of(dateTime.secondOfMinute().get());\ncase MINUTE:return ExprEval.of(dateTime.minuteOfHour().get());\ncase HOUR:return ExprEval.of(dateTime.hourOfDay().get());\ncase DAY:return ExprEval.of(dateTime.dayOfMonth().get());\ncase DOW:return ExprEval.of(dateTime.dayOfWeek().get());\ncase ISODOW:return ExprEval.of(dateTime.dayOfWeek().get());\ncase DOY:return ExprEval.of(dateTime.dayOfYear().get());\ncase WEEK:return ExprEval.of(dateTime.weekOfWeekyear().get());\ncase MONTH:return ExprEval.of(dateTime.monthOfYear().get());\ncase QUARTER:return ExprEval.of((dateTime.monthOfYear().get() - 1) / 3 + 1);\ncase YEAR:return ExprEval.of(dateTime.year().get());\ncase ISOYEAR:return ExprEval.of(dateTime.year().get());\ncase DECADE:return ExprEval.of(dateTime.year().get() / 10);\ncase CENTURY:return ExprEval.of(Math.ceil((double)dateTime.year().get() / 100));\ncase MILLENNIUM:return ExprEval.of(Math.ceil((double)dateTime.year().get() / 1000));\ndefault:throw new ISE(\"Unhandled unit[%s]\",unit);\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 280,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 122,
        "startColumnNumber" : 10,
        "endLineNumber" : 122,
        "endColumnNumber" : 22
      },
      "nodeContext" : "case SECOND:",
      "nodeType" : "SwitchCase",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.druid.query.expression.TimestampExtractExprMacro.Unit"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 122,
    "startColumnNumber" : 15,
    "endLineNumber" : 122,
    "endColumnNumber" : 21
  } ],
  "layoutRelationDataList" : [ ]
}