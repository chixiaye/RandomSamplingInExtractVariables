{
  "id" : 345,
  "expression" : "edges",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/graphtheory/LazyPrimsAdjacencyList.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "edges",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 67,
      "startColumnNumber" : 18,
      "endLineNumber" : 67,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (Edge e : edges) if (!visited[e.to]) {\n  pq.offer(e);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 326,
        "startLineNumber" : 62,
        "startColumnNumber" : 39,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  visited[nodeIndex]=true;\n  List<Edge> edges=graph.get(nodeIndex);\n  for (  Edge e : edges)   if (!visited[e.to]) {\n    pq.offer(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 363,
        "startLineNumber" : 62,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void addEdges(int nodeIndex){\n  visited[nodeIndex]=true;\n  List<Edge> edges=graph.get(nodeIndex);\n  for (  Edge e : edges)   if (!visited[e.to]) {\n    pq.offer(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 45,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (Edge e : edges) if (!visited[e.to]) {\n  pq.offer(e);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.List<com.williamfiset.algorithms.graphtheory.LazyPrimsAdjacencyList.Edge>"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 67,
    "startColumnNumber" : 18,
    "endLineNumber" : 67,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ ]
}