{
  "id" : 190,
  "expression" : "slow",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-core/src/test/java/com/netflix/hystrix/metric/consumer/HystrixDashboardStreamTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "slow",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 284,
      "startColumnNumber" : 68,
      "endLineNumber" : 284,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 343,
        "startLineNumber" : 284,
        "startColumnNumber" : 47,
        "endLineNumber" : 289,
        "endColumnNumber" : 10
      },
      "nodeContext" : "Observable.zip(fast,slow,new Func2<HystrixDashboardStream.DashboardData,HystrixDashboardStream.DashboardData,Boolean>(){\n  @Override public Boolean call(  HystrixDashboardStream.DashboardData payload,  HystrixDashboardStream.DashboardData payload2){\n    return payload == payload2;\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 44,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 362,
        "startLineNumber" : 284,
        "startColumnNumber" : 28,
        "endLineNumber" : 289,
        "endColumnNumber" : 10
      },
      "nodeContext" : "checkZippedEqual=Observable.zip(fast,slow,new Func2<HystrixDashboardStream.DashboardData,HystrixDashboardStream.DashboardData,Boolean>(){\n  @Override public Boolean call(  HystrixDashboardStream.DashboardData payload,  HystrixDashboardStream.DashboardData payload2){\n    return payload == payload2;\n  }\n}\n)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 46,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 383,
        "startLineNumber" : 284,
        "startColumnNumber" : 8,
        "endLineNumber" : 289,
        "endColumnNumber" : 11
      },
      "nodeContext" : "Observable<Boolean> checkZippedEqual=Observable.zip(fast,slow,new Func2<HystrixDashboardStream.DashboardData,HystrixDashboardStream.DashboardData,Boolean>(){\n  @Override public Boolean call(  HystrixDashboardStream.DashboardData payload,  HystrixDashboardStream.DashboardData payload2){\n    return payload == payload2;\n  }\n}\n);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 52,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2683,
        "startLineNumber" : 262,
        "startColumnNumber" : 68,
        "endLineNumber" : 321,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final CountDownLatch latch=new CountDownLatch(1);\n  final AtomicBoolean foundError=new AtomicBoolean(false);\n  Observable<HystrixDashboardStream.DashboardData> fast=stream.observe().observeOn(Schedulers.newThread());\n  Observable<HystrixDashboardStream.DashboardData> slow=stream.observe().observeOn(Schedulers.newThread()).map(new Func1<HystrixDashboardStream.DashboardData,HystrixDashboardStream.DashboardData>(){\n    @Override public HystrixDashboardStream.DashboardData call(    HystrixDashboardStream.DashboardData n){\n      try {\n        Thread.sleep(100);\n        return n;\n      }\n catch (      InterruptedException ex) {\n        return n;\n      }\n    }\n  }\n);\n  Observable<Boolean> checkZippedEqual=Observable.zip(fast,slow,new Func2<HystrixDashboardStream.DashboardData,HystrixDashboardStream.DashboardData,Boolean>(){\n    @Override public Boolean call(    HystrixDashboardStream.DashboardData payload,    HystrixDashboardStream.DashboardData payload2){\n      return payload == payload2;\n    }\n  }\n);\n  Subscription s1=checkZippedEqual.take(10000).subscribe(new Subscriber<Boolean>(){\n    @Override public void onCompleted(){\n      System.out.println(System.currentTimeMillis() + \" : \" + Thread.currentThread().getName()+ \" : OnCompleted\");\n      latch.countDown();\n    }\n    @Override public void onError(    Throwable e){\n      System.out.println(System.currentTimeMillis() + \" : \" + Thread.currentThread().getName()+ \" : OnError : \"+ e);\n      e.printStackTrace();\n      foundError.set(true);\n      latch.countDown();\n    }\n    @Override public void onNext(    Boolean b){\n    }\n  }\n);\n  for (int i=0; i < 50; i++) {\n    HystrixCommand<Integer> cmd=Command.from(groupKey,commandKey,HystrixEventType.SUCCESS,50);\n    cmd.execute();\n  }\n  latch.await(10000,TimeUnit.MILLISECONDS);\n  assertFalse(foundError.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 303,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2757,
        "startLineNumber" : 261,
        "startColumnNumber" : 4,
        "endLineNumber" : 321,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testTwoSubscribersOneSlowOneFast() throws Exception {\n  final CountDownLatch latch=new CountDownLatch(1);\n  final AtomicBoolean foundError=new AtomicBoolean(false);\n  Observable<HystrixDashboardStream.DashboardData> fast=stream.observe().observeOn(Schedulers.newThread());\n  Observable<HystrixDashboardStream.DashboardData> slow=stream.observe().observeOn(Schedulers.newThread()).map(new Func1<HystrixDashboardStream.DashboardData,HystrixDashboardStream.DashboardData>(){\n    @Override public HystrixDashboardStream.DashboardData call(    HystrixDashboardStream.DashboardData n){\n      try {\n        Thread.sleep(100);\n        return n;\n      }\n catch (      InterruptedException ex) {\n        return n;\n      }\n    }\n  }\n);\n  Observable<Boolean> checkZippedEqual=Observable.zip(fast,slow,new Func2<HystrixDashboardStream.DashboardData,HystrixDashboardStream.DashboardData,Boolean>(){\n    @Override public Boolean call(    HystrixDashboardStream.DashboardData payload,    HystrixDashboardStream.DashboardData payload2){\n      return payload == payload2;\n    }\n  }\n);\n  Subscription s1=checkZippedEqual.take(10000).subscribe(new Subscriber<Boolean>(){\n    @Override public void onCompleted(){\n      System.out.println(System.currentTimeMillis() + \" : \" + Thread.currentThread().getName()+ \" : OnCompleted\");\n      latch.countDown();\n    }\n    @Override public void onError(    Throwable e){\n      System.out.println(System.currentTimeMillis() + \" : \" + Thread.currentThread().getName()+ \" : OnError : \"+ e);\n      e.printStackTrace();\n      foundError.set(true);\n      latch.countDown();\n    }\n    @Override public void onNext(    Boolean b){\n    }\n  }\n);\n  for (int i=0; i < 50; i++) {\n    HystrixCommand<Integer> cmd=Command.from(groupKey,commandKey,HystrixEventType.SUCCESS,50);\n    cmd.execute();\n  }\n  latch.await(10000,TimeUnit.MILLISECONDS);\n  assertFalse(foundError.get());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 311,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 343,
        "startLineNumber" : 284,
        "startColumnNumber" : 47,
        "endLineNumber" : 289,
        "endColumnNumber" : 10
      },
      "nodeContext" : "Observable.zip(fast,slow,new Func2<HystrixDashboardStream.DashboardData,HystrixDashboardStream.DashboardData,Boolean>(){\n  @Override public Boolean call(  HystrixDashboardStream.DashboardData payload,  HystrixDashboardStream.DashboardData payload2){\n    return payload == payload2;\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 44,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.metric.consumer.Observable<com.netflix.hystrix.metric.consumer.HystrixDashboardStream.DashboardData>"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 284,
    "startColumnNumber" : 68,
    "endLineNumber" : 284,
    "endColumnNumber" : 72
  } ],
  "layoutRelationDataList" : [ ]
}