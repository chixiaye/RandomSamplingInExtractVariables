{
  "id" : 44,
  "expression" : "getMethod().getName()",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/main/java/org/mockito/internal/invocation/InvocationMatcher.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "getMethod().getName()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 90,
      "startColumnNumber" : 34,
      "endLineNumber" : 90,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 90,
        "startColumnNumber" : 15,
        "endLineNumber" : 90,
        "endColumnNumber" : 55
      },
      "nodeContext" : "wantedMethodName=getMethod().getName()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 56
      },
      "nodeContext" : "String wantedMethodName=getMethod().getName();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 543,
        "startLineNumber" : 89,
        "startColumnNumber" : 58,
        "endLineNumber" : 107,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String wantedMethodName=getMethod().getName();\n  String candidateMethodName=candidate.getMethod().getName();\n  if (!wantedMethodName.equals(candidateMethodName)) {\n    return false;\n  }\n  if (candidate.isVerified()) {\n    return false;\n  }\n  if (getInvocation().getMock() != candidate.getMock()) {\n    return false;\n  }\n  if (hasSameMethod(candidate)) {\n    return true;\n  }\n  return !argumentsMatch(candidate);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 60,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 748,
        "startLineNumber" : 85,
        "startColumnNumber" : 4,
        "endLineNumber" : 107,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * similar means the same method name, same mock, unverified and: if arguments are the same cannot be overloaded\n */\n@Override public boolean hasSimilarMethod(Invocation candidate){\n  String wantedMethodName=getMethod().getName();\n  String candidateMethodName=candidate.getMethod().getName();\n  if (!wantedMethodName.equals(candidateMethodName)) {\n    return false;\n  }\n  if (candidate.isVerified()) {\n    return false;\n  }\n  if (getInvocation().getMock() != candidate.getMock()) {\n    return false;\n  }\n  if (hasSameMethod(candidate)) {\n    return true;\n  }\n  return !argumentsMatch(candidate);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 71,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 56
      },
      "nodeContext" : "String wantedMethodName=getMethod().getName();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 90,
    "startColumnNumber" : 34,
    "endLineNumber" : 90,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ ]
}