{
  "id" : 141,
  "expression" : "new TestSequenceReportingEventHandler()",
  "projectName" : "LMAX-Exchange@disruptor",
  "commitID" : "6d8500d39ac15cc2fdbc3dbf2e3a97fbe425b8fa",
  "filePath" : "/src/test/java/com/lmax/disruptor/SequenceReportingCallbackTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new TestSequenceReportingEventHandler()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 39,
      "startLineNumber" : 37,
      "startColumnNumber" : 65,
      "endLineNumber" : 37,
      "endColumnNumber" : 104
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 37,
        "startColumnNumber" : 55,
        "endLineNumber" : 37,
        "endColumnNumber" : 104
      },
      "nodeContext" : "handler=new TestSequenceReportingEventHandler()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 37,
        "startColumnNumber" : 8,
        "endLineNumber" : 37,
        "endColumnNumber" : 105
      },
      "nodeContext" : "final SequenceReportingEventHandler<StubEvent> handler=new TestSequenceReportingEventHandler();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 996,
        "startLineNumber" : 34,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final RingBuffer<StubEvent> ringBuffer=createMultiProducer(StubEvent.EVENT_FACTORY,16);\n  final SequenceBarrier sequenceBarrier=ringBuffer.newBarrier();\n  final SequenceReportingEventHandler<StubEvent> handler=new TestSequenceReportingEventHandler();\n  final BatchEventProcessor<StubEvent> batchEventProcessor=new BatchEventProcessor<StubEvent>(ringBuffer,sequenceBarrier,handler);\n  ringBuffer.addGatingSequences(batchEventProcessor.getSequence());\n  Thread thread=new Thread(batchEventProcessor);\n  thread.setDaemon(true);\n  thread.start();\n  assertEquals(-1L,batchEventProcessor.getSequence().get());\n  ringBuffer.publish(ringBuffer.next());\n  callbackLatch.await();\n  assertEquals(0L,batchEventProcessor.getSequence().get());\n  onEndOfBatchLatch.countDown();\n  assertEquals(0L,batchEventProcessor.getSequence().get());\n  batchEventProcessor.halt();\n  thread.join();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 131,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1099,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldReportProgressByUpdatingSequenceViaCallback() throws Exception {\n  final RingBuffer<StubEvent> ringBuffer=createMultiProducer(StubEvent.EVENT_FACTORY,16);\n  final SequenceBarrier sequenceBarrier=ringBuffer.newBarrier();\n  final SequenceReportingEventHandler<StubEvent> handler=new TestSequenceReportingEventHandler();\n  final BatchEventProcessor<StubEvent> batchEventProcessor=new BatchEventProcessor<StubEvent>(ringBuffer,sequenceBarrier,handler);\n  ringBuffer.addGatingSequences(batchEventProcessor.getSequence());\n  Thread thread=new Thread(batchEventProcessor);\n  thread.setDaemon(true);\n  thread.start();\n  assertEquals(-1L,batchEventProcessor.getSequence().get());\n  ringBuffer.publish(ringBuffer.next());\n  callbackLatch.await();\n  assertEquals(0L,batchEventProcessor.getSequence().get());\n  onEndOfBatchLatch.countDown();\n  assertEquals(0L,batchEventProcessor.getSequence().get());\n  batchEventProcessor.halt();\n  thread.join();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 139,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 37,
        "startColumnNumber" : 8,
        "endLineNumber" : 37,
        "endColumnNumber" : 105
      },
      "nodeContext" : "final SequenceReportingEventHandler<StubEvent> handler=new TestSequenceReportingEventHandler();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.lmax.disruptor.SequenceReportingCallbackTest.TestSequenceReportingEventHandler"
  } ],
  "positionList" : [ {
    "charLength" : 39,
    "startLineNumber" : 37,
    "startColumnNumber" : 65,
    "endLineNumber" : 37,
    "endColumnNumber" : 104
  } ],
  "layoutRelationDataList" : [ ]
}