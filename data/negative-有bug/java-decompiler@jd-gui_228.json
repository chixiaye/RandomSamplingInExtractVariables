{
  "id" : 228,
  "expression" : "entries",
  "projectName" : "java-decompiler@jd-gui",
  "commitID" : "fbc5b14d66b37b88bf1dc18386b530e874550240",
  "filePath" : "/services/src/main/java/org/jd/gui/service/treenode/DirectoryTreeNodeFactoryProvider.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "entries",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 38,
      "startColumnNumber" : 15,
      "endLineNumber" : 38,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 38,
        "startColumnNumber" : 15,
        "endLineNumber" : 38,
        "endColumnNumber" : 29
      },
      "nodeContext" : "entries.size()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 38,
        "startColumnNumber" : 15,
        "endLineNumber" : 38,
        "endColumnNumber" : 34
      },
      "nodeContext" : "entries.size() == 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 301,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (entries.size() == 1) {\n  Entry child=entries.iterator().next();\n  if (!child.isDirectory() || api.getTreeNodeFactory(child) != this || entry.getContainer() != child.getContainer())   break;\n  entry=child;\n  entries=entry.getChildren();\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 48,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 896,
        "startLineNumber" : 33,
        "startColumnNumber" : 124,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int lastSlashIndex=entry.getPath().lastIndexOf('/');\n  Collection<Entry> entries=entry.getChildren();\n  while (entries.size() == 1) {\n    Entry child=entries.iterator().next();\n    if (!child.isDirectory() || api.getTreeNodeFactory(child) != this || entry.getContainer() != child.getContainer())     break;\n    entry=child;\n    entries=entry.getChildren();\n  }\n  String label=entry.getPath().substring(lastSlashIndex + 1);\n  String location=new File(entry.getUri()).getPath();\n  TreeNode node=new TreeNode(entry,new TreeNodeBean(label,\"Location: \" + location,getIcon(),getOpenIcon()));\n  if (entries.size() > 0) {\n    node.add(new DefaultMutableTreeNode());\n  }\n  return (T)node;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1067,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override @SuppressWarnings(\"unchecked\") public <T extends DefaultMutableTreeNode & ContainerEntryGettable & UriGettable>T make(API api,Container.Entry entry){\n  int lastSlashIndex=entry.getPath().lastIndexOf('/');\n  Collection<Entry> entries=entry.getChildren();\n  while (entries.size() == 1) {\n    Entry child=entries.iterator().next();\n    if (!child.isDirectory() || api.getTreeNodeFactory(child) != this || entry.getContainer() != child.getContainer())     break;\n    entry=child;\n    entries=entry.getChildren();\n  }\n  String label=entry.getPath().substring(lastSlashIndex + 1);\n  String location=new File(entry.getUri()).getPath();\n  TreeNode node=new TreeNode(entry,new TreeNodeBean(label,\"Location: \" + location,getIcon(),getOpenIcon()));\n  if (entries.size() > 0) {\n    node.add(new DefaultMutableTreeNode());\n  }\n  return (T)node;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 163,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 38,
        "startColumnNumber" : 15,
        "endLineNumber" : 38,
        "endColumnNumber" : 34
      },
      "nodeContext" : "entries.size() == 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Collection<org.jd.gui.api.model.Container.Entry>"
  }, {
    "nodeContext" : "entries",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 39,
      "startColumnNumber" : 26,
      "endLineNumber" : 39,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 39,
        "startColumnNumber" : 26,
        "endLineNumber" : 39,
        "endColumnNumber" : 44
      },
      "nodeContext" : "entries.iterator()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 39,
        "startColumnNumber" : 26,
        "endLineNumber" : 39,
        "endColumnNumber" : 51
      },
      "nodeContext" : "entries.iterator().next()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 39,
        "startColumnNumber" : 18,
        "endLineNumber" : 39,
        "endColumnNumber" : 51
      },
      "nodeContext" : "child=entries.iterator().next()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 39,
        "startColumnNumber" : 12,
        "endLineNumber" : 39,
        "endColumnNumber" : 52
      },
      "nodeContext" : "Entry child=entries.iterator().next();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 273,
        "startLineNumber" : 38,
        "startColumnNumber" : 36,
        "endLineNumber" : 43,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Entry child=entries.iterator().next();\n  if (!child.isDirectory() || api.getTreeNodeFactory(child) != this || entry.getContainer() != child.getContainer())   break;\n  entry=child;\n  entries=entry.getChildren();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 301,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (entries.size() == 1) {\n  Entry child=entries.iterator().next();\n  if (!child.isDirectory() || api.getTreeNodeFactory(child) != this || entry.getContainer() != child.getContainer())   break;\n  entry=child;\n  entries=entry.getChildren();\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 48,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 896,
        "startLineNumber" : 33,
        "startColumnNumber" : 124,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int lastSlashIndex=entry.getPath().lastIndexOf('/');\n  Collection<Entry> entries=entry.getChildren();\n  while (entries.size() == 1) {\n    Entry child=entries.iterator().next();\n    if (!child.isDirectory() || api.getTreeNodeFactory(child) != this || entry.getContainer() != child.getContainer())     break;\n    entry=child;\n    entries=entry.getChildren();\n  }\n  String label=entry.getPath().substring(lastSlashIndex + 1);\n  String location=new File(entry.getUri()).getPath();\n  TreeNode node=new TreeNode(entry,new TreeNodeBean(label,\"Location: \" + location,getIcon(),getOpenIcon()));\n  if (entries.size() > 0) {\n    node.add(new DefaultMutableTreeNode());\n  }\n  return (T)node;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1067,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override @SuppressWarnings(\"unchecked\") public <T extends DefaultMutableTreeNode & ContainerEntryGettable & UriGettable>T make(API api,Container.Entry entry){\n  int lastSlashIndex=entry.getPath().lastIndexOf('/');\n  Collection<Entry> entries=entry.getChildren();\n  while (entries.size() == 1) {\n    Entry child=entries.iterator().next();\n    if (!child.isDirectory() || api.getTreeNodeFactory(child) != this || entry.getContainer() != child.getContainer())     break;\n    entry=child;\n    entries=entry.getChildren();\n  }\n  String label=entry.getPath().substring(lastSlashIndex + 1);\n  String location=new File(entry.getUri()).getPath();\n  TreeNode node=new TreeNode(entry,new TreeNodeBean(label,\"Location: \" + location,getIcon(),getOpenIcon()));\n  if (entries.size() > 0) {\n    node.add(new DefaultMutableTreeNode());\n  }\n  return (T)node;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 163,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 39,
        "startColumnNumber" : 12,
        "endLineNumber" : 39,
        "endColumnNumber" : 52
      },
      "nodeContext" : "Entry child=entries.iterator().next();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.Collection<org.jd.gui.api.model.Container.Entry>"
  }, {
    "nodeContext" : "entries",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 49,
      "startColumnNumber" : 12,
      "endLineNumber" : 49,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 49,
        "endColumnNumber" : 26
      },
      "nodeContext" : "entries.size()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 49,
        "endColumnNumber" : 30
      },
      "nodeContext" : "entries.size() > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (entries.size() > 0) {\n  node.add(new DefaultMutableTreeNode());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 896,
        "startLineNumber" : 33,
        "startColumnNumber" : 124,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int lastSlashIndex=entry.getPath().lastIndexOf('/');\n  Collection<Entry> entries=entry.getChildren();\n  while (entries.size() == 1) {\n    Entry child=entries.iterator().next();\n    if (!child.isDirectory() || api.getTreeNodeFactory(child) != this || entry.getContainer() != child.getContainer())     break;\n    entry=child;\n    entries=entry.getChildren();\n  }\n  String label=entry.getPath().substring(lastSlashIndex + 1);\n  String location=new File(entry.getUri()).getPath();\n  TreeNode node=new TreeNode(entry,new TreeNodeBean(label,\"Location: \" + location,getIcon(),getOpenIcon()));\n  if (entries.size() > 0) {\n    node.add(new DefaultMutableTreeNode());\n  }\n  return (T)node;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1067,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override @SuppressWarnings(\"unchecked\") public <T extends DefaultMutableTreeNode & ContainerEntryGettable & UriGettable>T make(API api,Container.Entry entry){\n  int lastSlashIndex=entry.getPath().lastIndexOf('/');\n  Collection<Entry> entries=entry.getChildren();\n  while (entries.size() == 1) {\n    Entry child=entries.iterator().next();\n    if (!child.isDirectory() || api.getTreeNodeFactory(child) != this || entry.getContainer() != child.getContainer())     break;\n    entry=child;\n    entries=entry.getChildren();\n  }\n  String label=entry.getPath().substring(lastSlashIndex + 1);\n  String location=new File(entry.getUri()).getPath();\n  TreeNode node=new TreeNode(entry,new TreeNodeBean(label,\"Location: \" + location,getIcon(),getOpenIcon()));\n  if (entries.size() > 0) {\n    node.add(new DefaultMutableTreeNode());\n  }\n  return (T)node;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 163,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 49,
        "endColumnNumber" : 30
      },
      "nodeContext" : "entries.size() > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Collection<org.jd.gui.api.model.Container.Entry>"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 38,
    "startColumnNumber" : 15,
    "endLineNumber" : 38,
    "endColumnNumber" : 22
  }, {
    "charLength" : 7,
    "startLineNumber" : 39,
    "startColumnNumber" : 26,
    "endLineNumber" : 39,
    "endColumnNumber" : 33
  }, {
    "charLength" : 7,
    "startLineNumber" : 49,
    "startColumnNumber" : 12,
    "endLineNumber" : 49,
    "endColumnNumber" : 19
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}