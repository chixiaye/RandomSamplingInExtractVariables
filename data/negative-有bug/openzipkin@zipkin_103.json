{
  "id" : 103,
  "expression" : "Span.newBuilder().traceId(1,2).id(1)",
  "projectName" : "openzipkin@zipkin",
  "commitID" : "f02a993656f506277ca83737ddf494ed45fde4b3",
  "filePath" : "/zipkin-tests/src/test/java/zipkin2/storage/StrictTraceIdTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Span.newBuilder().traceId(1,2).id(1)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 34,
      "startColumnNumber" : 18,
      "endLineNumber" : 34,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 10,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 34,
        "startColumnNumber" : 18,
        "endLineNumber" : 34,
        "endColumnNumber" : 63
      },
      "nodeContext" : "Span.newBuilder().traceId(1,2).id(1).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 34,
        "startColumnNumber" : 9,
        "endLineNumber" : 34,
        "endColumnNumber" : 63
      },
      "nodeContext" : "oneTwo=Span.newBuilder().traceId(1,2).id(1).build()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 34,
        "startColumnNumber" : 4,
        "endLineNumber" : 34,
        "endColumnNumber" : 64
      },
      "nodeContext" : "Span oneTwo=Span.newBuilder().traceId(1,2).id(1).build();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 332,
        "startLineNumber" : 32,
        "startColumnNumber" : 50,
        "endLineNumber" : 40,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Span oneOne=Span.newBuilder().traceId(1,1).id(1).build();\n  Span oneTwo=Span.newBuilder().traceId(1,2).id(1).build();\n  List<List<Span>> traces=asList(asList(oneOne),asList(oneTwo));\n  assertThat(StrictTraceId.filterTraces(requestBuilder().spanName(\"11\").build()).map(traces)).isSameAs(traces);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 380,
        "startLineNumber" : 32,
        "startColumnNumber" : 2,
        "endLineNumber" : 40,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void filterTraces_skipsOnNoClash(){\n  Span oneOne=Span.newBuilder().traceId(1,1).id(1).build();\n  Span oneTwo=Span.newBuilder().traceId(1,2).id(1).build();\n  List<List<Span>> traces=asList(asList(oneOne),asList(oneTwo));\n  assertThat(StrictTraceId.filterTraces(requestBuilder().spanName(\"11\").build()).map(traces)).isSameAs(traces);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 79,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 34,
        "startColumnNumber" : 4,
        "endLineNumber" : 34,
        "endColumnNumber" : 64
      },
      "nodeContext" : "Span oneTwo=Span.newBuilder().traceId(1,2).id(1).build();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    },
    "tokenLength" : 7,
    "type" : "zipkin2.Span.Builder"
  } ],
  "positionList" : [ {
    "charLength" : 37,
    "startLineNumber" : 34,
    "startColumnNumber" : 18,
    "endLineNumber" : 34,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ ]
}