{
  "id" : 36,
  "expression" : "baseOffset",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Framework/SoftwareModeling/src/main/java/ghidra/program/model/mem/WrappedMemBuffer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "baseOffset",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 64,
      "startColumnNumber" : 29,
      "endLineNumber" : 64,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 64,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 41
      },
      "nodeContext" : "this(buf,DEFAULT_BUFSIZE,baseOffset);\n",
      "nodeType" : "ConstructorInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 63,
        "startColumnNumber" : 91,
        "endLineNumber" : 65,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  this(buf,DEFAULT_BUFSIZE,baseOffset);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 443,
        "startLineNumber" : 56,
        "startColumnNumber" : 1,
        "endLineNumber" : 65,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Construct a wrapped MemBuffer with an adjustable base offset\n * @param buf memory buffer\n * @param baseOffset offset relative to the underlying buffer's start address(addr + baseOffset) will be the 0 index into this buffer\n * @throws AddressOutOfBoundsException\n */\npublic WrappedMemBuffer(MemBuffer buf,int baseOffset) throws AddressOutOfBoundsException {\n  this(buf,DEFAULT_BUFSIZE,baseOffset);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 18,
      "astHeight" : 4
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 64,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 41
      },
      "nodeContext" : "this(buf,DEFAULT_BUFSIZE,baseOffset);\n",
      "nodeType" : "ConstructorInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 64,
    "startColumnNumber" : 29,
    "endLineNumber" : 64,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ ]
}