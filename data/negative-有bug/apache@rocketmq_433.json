{
  "id" : 433,
  "expression" : "brokerInfo.getBrokerId(brokerAddress)",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/controller/src/main/java/org/apache/rocketmq/controller/impl/manager/ReplicasInfoManager.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "brokerInfo.getBrokerId(brokerAddress)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 237,
      "startColumnNumber" : 27,
      "endLineNumber" : 237,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 237,
        "startColumnNumber" : 16,
        "endLineNumber" : 237,
        "endColumnNumber" : 64
      },
      "nodeContext" : "brokerId=brokerInfo.getBrokerId(brokerAddress)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 237,
        "startColumnNumber" : 16,
        "endLineNumber" : 237,
        "endColumnNumber" : 65
      },
      "nodeContext" : "brokerId=brokerInfo.getBrokerId(brokerAddress);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 236,
        "startColumnNumber" : 19,
        "endLineNumber" : 238,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  brokerId=brokerInfo.getBrokerId(brokerAddress);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 500,
        "startLineNumber" : 231,
        "startColumnNumber" : 12,
        "endLineNumber" : 238,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!brokerInfo.isBrokerExist(brokerAddress)) {\n  brokerId=brokerInfo.newBrokerId();\n  final ApplyBrokerIdEvent applyIdEvent=new ApplyBrokerIdEvent(request.getBrokerName(),brokerAddress,brokerId);\n  result.addEvent(applyIdEvent);\n}\n else {\n  brokerId=brokerInfo.getBrokerId(brokerAddress);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 40,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1657,
        "startLineNumber" : 225,
        "startColumnNumber" : 42,
        "endLineNumber" : 254,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final SyncStateInfo syncStateInfo=this.syncStateSetInfoTable.get(brokerName);\n  final BrokerInfo brokerInfo=this.replicaInfoTable.get(brokerName);\n  long brokerId;\n  if (!brokerInfo.isBrokerExist(brokerAddress)) {\n    brokerId=brokerInfo.newBrokerId();\n    final ApplyBrokerIdEvent applyIdEvent=new ApplyBrokerIdEvent(request.getBrokerName(),brokerAddress,brokerId);\n    result.addEvent(applyIdEvent);\n  }\n else {\n    brokerId=brokerInfo.getBrokerId(brokerAddress);\n  }\n  response.setBrokerId(brokerId);\n  response.setMasterEpoch(syncStateInfo.getMasterEpoch());\n  response.setSyncStateSetEpoch(syncStateInfo.getSyncStateSetEpoch());\n  if (syncStateInfo.isMasterExist()) {\n    final String masterAddress=syncStateInfo.getMasterAddress();\n    response.setMasterAddress(masterAddress);\n    return result;\n  }\n else {\n    canBeElectedAsMaster=syncStateInfo.getSyncStateSet().contains(brokerAddress) || this.controllerConfig.isEnableElectUncleanMaster();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1877,
        "startLineNumber" : 225,
        "startColumnNumber" : 8,
        "endLineNumber" : 257,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (isContainsBroker(brokerName)) {\n  final SyncStateInfo syncStateInfo=this.syncStateSetInfoTable.get(brokerName);\n  final BrokerInfo brokerInfo=this.replicaInfoTable.get(brokerName);\n  long brokerId;\n  if (!brokerInfo.isBrokerExist(brokerAddress)) {\n    brokerId=brokerInfo.newBrokerId();\n    final ApplyBrokerIdEvent applyIdEvent=new ApplyBrokerIdEvent(request.getBrokerName(),brokerAddress,brokerId);\n    result.addEvent(applyIdEvent);\n  }\n else {\n    brokerId=brokerInfo.getBrokerId(brokerAddress);\n  }\n  response.setBrokerId(brokerId);\n  response.setMasterEpoch(syncStateInfo.getMasterEpoch());\n  response.setSyncStateSetEpoch(syncStateInfo.getSyncStateSetEpoch());\n  if (syncStateInfo.isMasterExist()) {\n    final String masterAddress=syncStateInfo.getMasterAddress();\n    response.setMasterAddress(masterAddress);\n    return result;\n  }\n else {\n    canBeElectedAsMaster=syncStateInfo.getSyncStateSet().contains(brokerAddress) || this.controllerConfig.isEnableElectUncleanMaster();\n  }\n}\n else {\n  canBeElectedAsMaster=true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 134,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3338,
        "startLineNumber" : 219,
        "startColumnNumber" : 63,
        "endLineNumber" : 276,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String brokerName=request.getBrokerName();\n  final String brokerAddress=request.getBrokerAddress();\n  final ControllerResult<RegisterBrokerToControllerResponseHeader> result=new ControllerResult<>(new RegisterBrokerToControllerResponseHeader());\n  final RegisterBrokerToControllerResponseHeader response=result.getResponse();\n  boolean canBeElectedAsMaster;\n  if (isContainsBroker(brokerName)) {\n    final SyncStateInfo syncStateInfo=this.syncStateSetInfoTable.get(brokerName);\n    final BrokerInfo brokerInfo=this.replicaInfoTable.get(brokerName);\n    long brokerId;\n    if (!brokerInfo.isBrokerExist(brokerAddress)) {\n      brokerId=brokerInfo.newBrokerId();\n      final ApplyBrokerIdEvent applyIdEvent=new ApplyBrokerIdEvent(request.getBrokerName(),brokerAddress,brokerId);\n      result.addEvent(applyIdEvent);\n    }\n else {\n      brokerId=brokerInfo.getBrokerId(brokerAddress);\n    }\n    response.setBrokerId(brokerId);\n    response.setMasterEpoch(syncStateInfo.getMasterEpoch());\n    response.setSyncStateSetEpoch(syncStateInfo.getSyncStateSetEpoch());\n    if (syncStateInfo.isMasterExist()) {\n      final String masterAddress=syncStateInfo.getMasterAddress();\n      response.setMasterAddress(masterAddress);\n      return result;\n    }\n else {\n      canBeElectedAsMaster=syncStateInfo.getSyncStateSet().contains(brokerAddress) || this.controllerConfig.isEnableElectUncleanMaster();\n    }\n  }\n else {\n    canBeElectedAsMaster=true;\n  }\n  if (canBeElectedAsMaster) {\n    final boolean isBrokerExist=isContainsBroker(brokerName);\n    int masterEpoch=isBrokerExist ? this.syncStateSetInfoTable.get(brokerName).getMasterEpoch() + 1 : 1;\n    int syncStateSetEpoch=isBrokerExist ? this.syncStateSetInfoTable.get(brokerName).getSyncStateSetEpoch() + 1 : 1;\n    response.setMasterAddress(request.getBrokerAddress());\n    response.setMasterEpoch(masterEpoch);\n    response.setSyncStateSetEpoch(syncStateSetEpoch);\n    response.setBrokerId(MixAll.MASTER_ID);\n    final ElectMasterEvent event=new ElectMasterEvent(true,brokerName,brokerAddress,request.getClusterName());\n    result.addEvent(event);\n    return result;\n  }\n  response.setMasterAddress(\"\");\n  result.setCodeAndRemark(ResponseCode.CONTROLLER_REGISTER_BROKER_FAILED,\"The broker has not master, and this new registered broker can't not be elected as master\");\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 288,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3484,
        "startLineNumber" : 218,
        "startColumnNumber" : 4,
        "endLineNumber" : 276,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public ControllerResult<RegisterBrokerToControllerResponseHeader> registerBroker(final RegisterBrokerToControllerRequestHeader request){\n  final String brokerName=request.getBrokerName();\n  final String brokerAddress=request.getBrokerAddress();\n  final ControllerResult<RegisterBrokerToControllerResponseHeader> result=new ControllerResult<>(new RegisterBrokerToControllerResponseHeader());\n  final RegisterBrokerToControllerResponseHeader response=result.getResponse();\n  boolean canBeElectedAsMaster;\n  if (isContainsBroker(brokerName)) {\n    final SyncStateInfo syncStateInfo=this.syncStateSetInfoTable.get(brokerName);\n    final BrokerInfo brokerInfo=this.replicaInfoTable.get(brokerName);\n    long brokerId;\n    if (!brokerInfo.isBrokerExist(brokerAddress)) {\n      brokerId=brokerInfo.newBrokerId();\n      final ApplyBrokerIdEvent applyIdEvent=new ApplyBrokerIdEvent(request.getBrokerName(),brokerAddress,brokerId);\n      result.addEvent(applyIdEvent);\n    }\n else {\n      brokerId=brokerInfo.getBrokerId(brokerAddress);\n    }\n    response.setBrokerId(brokerId);\n    response.setMasterEpoch(syncStateInfo.getMasterEpoch());\n    response.setSyncStateSetEpoch(syncStateInfo.getSyncStateSetEpoch());\n    if (syncStateInfo.isMasterExist()) {\n      final String masterAddress=syncStateInfo.getMasterAddress();\n      response.setMasterAddress(masterAddress);\n      return result;\n    }\n else {\n      canBeElectedAsMaster=syncStateInfo.getSyncStateSet().contains(brokerAddress) || this.controllerConfig.isEnableElectUncleanMaster();\n    }\n  }\n else {\n    canBeElectedAsMaster=true;\n  }\n  if (canBeElectedAsMaster) {\n    final boolean isBrokerExist=isContainsBroker(brokerName);\n    int masterEpoch=isBrokerExist ? this.syncStateSetInfoTable.get(brokerName).getMasterEpoch() + 1 : 1;\n    int syncStateSetEpoch=isBrokerExist ? this.syncStateSetInfoTable.get(brokerName).getSyncStateSetEpoch() + 1 : 1;\n    response.setMasterAddress(request.getBrokerAddress());\n    response.setMasterEpoch(masterEpoch);\n    response.setSyncStateSetEpoch(syncStateSetEpoch);\n    response.setBrokerId(MixAll.MASTER_ID);\n    final ElectMasterEvent event=new ElectMasterEvent(true,brokerName,brokerAddress,request.getClusterName());\n    result.addEvent(event);\n    return result;\n  }\n  response.setMasterAddress(\"\");\n  result.setCodeAndRemark(ResponseCode.CONTROLLER_REGISTER_BROKER_FAILED,\"The broker has not master, and this new registered broker can't not be elected as master\");\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 301,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 237,
        "startColumnNumber" : 16,
        "endLineNumber" : 237,
        "endColumnNumber" : 65
      },
      "nodeContext" : "brokerId=brokerInfo.getBrokerId(brokerAddress);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.Long"
  } ],
  "positionList" : [ {
    "charLength" : 37,
    "startLineNumber" : 237,
    "startColumnNumber" : 27,
    "endLineNumber" : 237,
    "endColumnNumber" : 64
  } ],
  "layoutRelationDataList" : [ ]
}