{
  "id" : 400,
  "expression" : "mLock",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/imagepipeline/src/main/java/com/facebook/imagepipeline/producers/PriorityNetworkFetcher.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "mLock",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 120,
      "startColumnNumber" : 18,
      "endLineNumber" : 120,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 414,
        "startLineNumber" : 120,
        "startColumnNumber" : 4,
        "endLineNumber" : 130,
        "endColumnNumber" : 5
      },
      "nodeContext" : "synchronized (mLock) {\n  if (mCurrentlyFetching.contains(fetchState)) {\n    FLog.e(TAG,\"fetch state was enqueued twice: \" + fetchState);\n    return;\n  }\n  boolean isHiPri=fetchState.getContext().getPriority() == HIGH;\n  FLog.v(TAG,\"enqueue: %s %s\",isHiPri ? \"HI-PRI\" : \"LOW-PRI\",fetchState.getUri());\n  fetchState.callback=callback;\n  putInQueue(fetchState,isHiPri);\n}\n",
      "nodeType" : "SynchronizedStatement",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 953,
        "startLineNumber" : 103,
        "startColumnNumber" : 31,
        "endLineNumber" : 132,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  fetchState.getContext().addCallbacks(new BaseProducerContextCallbacks(){\n    @Override public void onCancellationRequested(){\n      removeFromQueue(fetchState,\"CANCEL\");\n      callback.onCancellation();\n    }\n    @Override public void onPriorityChanged(){\n      changePriority(fetchState,fetchState.getContext().getPriority() == HIGH);\n    }\n  }\n);\nsynchronized (mLock) {\n    if (mCurrentlyFetching.contains(fetchState)) {\n      FLog.e(TAG,\"fetch state was enqueued twice: \" + fetchState);\n      return;\n    }\n    boolean isHiPri=fetchState.getContext().getPriority() == HIGH;\n    FLog.v(TAG,\"enqueue: %s %s\",isHiPri ? \"HI-PRI\" : \"LOW-PRI\",fetchState.getUri());\n    fetchState.callback=callback;\n    putInQueue(fetchState,isHiPri);\n  }\n  dequeueIfAvailableSlots();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1094,
        "startLineNumber" : 100,
        "startColumnNumber" : 2,
        "endLineNumber" : 132,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void fetch(final PriorityNetworkFetcher.PriorityFetchState<FETCH_STATE> fetchState,final Callback callback){\n  fetchState.getContext().addCallbacks(new BaseProducerContextCallbacks(){\n    @Override public void onCancellationRequested(){\n      removeFromQueue(fetchState,\"CANCEL\");\n      callback.onCancellation();\n    }\n    @Override public void onPriorityChanged(){\n      changePriority(fetchState,fetchState.getContext().getPriority() == HIGH);\n    }\n  }\n);\nsynchronized (mLock) {\n    if (mCurrentlyFetching.contains(fetchState)) {\n      FLog.e(TAG,\"fetch state was enqueued twice: \" + fetchState);\n      return;\n    }\n    boolean isHiPri=fetchState.getContext().getPriority() == HIGH;\n    FLog.v(TAG,\"enqueue: %s %s\",isHiPri ? \"HI-PRI\" : \"LOW-PRI\",fetchState.getUri());\n    fetchState.callback=callback;\n    putInQueue(fetchState,isHiPri);\n  }\n  dequeueIfAvailableSlots();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 414,
        "startLineNumber" : 120,
        "startColumnNumber" : 4,
        "endLineNumber" : 130,
        "endColumnNumber" : 5
      },
      "nodeContext" : "synchronized (mLock) {\n  if (mCurrentlyFetching.contains(fetchState)) {\n    FLog.e(TAG,\"fetch state was enqueued twice: \" + fetchState);\n    return;\n  }\n  boolean isHiPri=fetchState.getContext().getPriority() == HIGH;\n  FLog.v(TAG,\"enqueue: %s %s\",isHiPri ? \"HI-PRI\" : \"LOW-PRI\",fetchState.getUri());\n  fetchState.callback=callback;\n  putInQueue(fetchState,isHiPri);\n}\n",
      "nodeType" : "SynchronizedStatement",
      "astNodeNumber" : 53,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "java.lang.Object"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 120,
    "startColumnNumber" : 18,
    "endLineNumber" : 120,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ ]
}