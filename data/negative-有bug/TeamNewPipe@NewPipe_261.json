{
  "id" : 261,
  "expression" : "MediaFormat",
  "projectName" : "TeamNewPipe@NewPipe",
  "commitID" : "d7574973e97fa7a3a21aa59967311f6091941830",
  "filePath" : "/app/src/main/java/org/schabi/newpipe/util/SecondaryStreamHelper.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "MediaFormat",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 42,
      "startColumnNumber" : 49,
      "endLineNumber" : 42,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 42,
        "startColumnNumber" : 49,
        "endLineNumber" : 42,
        "endColumnNumber" : 67
      },
      "nodeContext" : "MediaFormat.MPEG_4",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 42,
        "startColumnNumber" : 22,
        "endLineNumber" : 42,
        "endColumnNumber" : 67
      },
      "nodeContext" : "videoStream.getFormat() == MediaFormat.MPEG_4",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 42,
        "startColumnNumber" : 16,
        "endLineNumber" : 42,
        "endColumnNumber" : 67
      },
      "nodeContext" : "m4v=videoStream.getFormat() == MediaFormat.MPEG_4",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 42,
        "startColumnNumber" : 8,
        "endLineNumber" : 42,
        "endColumnNumber" : 68
      },
      "nodeContext" : "boolean m4v=videoStream.getFormat() == MediaFormat.MPEG_4;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 816,
        "startLineNumber" : 33,
        "startColumnNumber" : 88,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\nswitch (videoStream.getFormat()) {\ncase WEBM:case MPEG_4:    break;\ndefault:  return null;\n}\nboolean m4v=videoStream.getFormat() == MediaFormat.MPEG_4;\nfor (AudioStream audio : audioStreams) {\nif (audio.getFormat() == (m4v ? MediaFormat.M4A : MediaFormat.WEBMA)) {\n  return audio;\n}\n}\nif (m4v) {\nreturn null;\n}\nfor (int i=audioStreams.size() - 1; i >= 0; i--) {\nAudioStream audio=audioStreams.get(i);\nif (audio.getFormat() == MediaFormat.WEBMA_OPUS) {\n  return audio;\n}\n}\nreturn null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1261,
        "startLineNumber" : 25,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Find the correct audio stream for the desired video stream.\n * @param audioStreams list of audio streams\n * @param videoStream  desired video ONLY stream\n * @return selected audio stream or null if a candidate was not found\n */\npublic static AudioStream getAudioStreamFor(@NonNull final List<AudioStream> audioStreams,@NonNull final VideoStream videoStream){\nswitch (videoStream.getFormat()) {\ncase WEBM:case MPEG_4:    break;\ndefault:  return null;\n}\nboolean m4v=videoStream.getFormat() == MediaFormat.MPEG_4;\nfor (AudioStream audio : audioStreams) {\nif (audio.getFormat() == (m4v ? MediaFormat.M4A : MediaFormat.WEBMA)) {\n  return audio;\n}\n}\nif (m4v) {\nreturn null;\n}\nfor (int i=audioStreams.size() - 1; i >= 0; i--) {\nAudioStream audio=audioStreams.get(i);\nif (audio.getFormat() == MediaFormat.WEBMA_OPUS) {\n  return audio;\n}\n}\nreturn null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 115,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 42,
        "startColumnNumber" : 8,
        "endLineNumber" : 42,
        "endColumnNumber" : 68
      },
      "nodeContext" : "boolean m4v=videoStream.getFormat() == MediaFormat.MPEG_4;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "MediaFormat",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 45,
      "startColumnNumber" : 44,
      "endLineNumber" : 45,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,thenExpression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 45,
        "startColumnNumber" : 44,
        "endLineNumber" : 45,
        "endColumnNumber" : 59
      },
      "nodeContext" : "MediaFormat.M4A",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 45,
        "startColumnNumber" : 38,
        "endLineNumber" : 45,
        "endColumnNumber" : 79
      },
      "nodeContext" : "m4v ? MediaFormat.M4A : MediaFormat.WEBMA",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 45,
        "startColumnNumber" : 37,
        "endLineNumber" : 45,
        "endColumnNumber" : 80
      },
      "nodeContext" : "(m4v ? MediaFormat.M4A : MediaFormat.WEBMA)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 45,
        "startColumnNumber" : 16,
        "endLineNumber" : 45,
        "endColumnNumber" : 80
      },
      "nodeContext" : "audio.getFormat() == (m4v ? MediaFormat.M4A : MediaFormat.WEBMA)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 45,
        "startColumnNumber" : 12,
        "endLineNumber" : 47,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (audio.getFormat() == (m4v ? MediaFormat.M4A : MediaFormat.WEBMA)) {\n  return audio;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 44,
        "startColumnNumber" : 47,
        "endLineNumber" : 48,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (audio.getFormat() == (m4v ? MediaFormat.M4A : MediaFormat.WEBMA)) {\n    return audio;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 178,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (AudioStream audio : audioStreams) {\n  if (audio.getFormat() == (m4v ? MediaFormat.M4A : MediaFormat.WEBMA)) {\n    return audio;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 816,
        "startLineNumber" : 33,
        "startColumnNumber" : 88,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\nswitch (videoStream.getFormat()) {\ncase WEBM:case MPEG_4:    break;\ndefault:  return null;\n}\nboolean m4v=videoStream.getFormat() == MediaFormat.MPEG_4;\nfor (AudioStream audio : audioStreams) {\nif (audio.getFormat() == (m4v ? MediaFormat.M4A : MediaFormat.WEBMA)) {\n  return audio;\n}\n}\nif (m4v) {\nreturn null;\n}\nfor (int i=audioStreams.size() - 1; i >= 0; i--) {\nAudioStream audio=audioStreams.get(i);\nif (audio.getFormat() == MediaFormat.WEBMA_OPUS) {\n  return audio;\n}\n}\nreturn null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1261,
        "startLineNumber" : 25,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Find the correct audio stream for the desired video stream.\n * @param audioStreams list of audio streams\n * @param videoStream  desired video ONLY stream\n * @return selected audio stream or null if a candidate was not found\n */\npublic static AudioStream getAudioStreamFor(@NonNull final List<AudioStream> audioStreams,@NonNull final VideoStream videoStream){\nswitch (videoStream.getFormat()) {\ncase WEBM:case MPEG_4:    break;\ndefault:  return null;\n}\nboolean m4v=videoStream.getFormat() == MediaFormat.MPEG_4;\nfor (AudioStream audio : audioStreams) {\nif (audio.getFormat() == (m4v ? MediaFormat.M4A : MediaFormat.WEBMA)) {\n  return audio;\n}\n}\nif (m4v) {\nreturn null;\n}\nfor (int i=audioStreams.size() - 1; i >= 0; i--) {\nAudioStream audio=audioStreams.get(i);\nif (audio.getFormat() == MediaFormat.WEBMA_OPUS) {\n  return audio;\n}\n}\nreturn null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 115,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 45,
        "startColumnNumber" : 16,
        "endLineNumber" : 45,
        "endColumnNumber" : 80
      },
      "nodeContext" : "audio.getFormat() == (m4v ? MediaFormat.M4A : MediaFormat.WEBMA)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "MediaFormat",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 45,
      "startColumnNumber" : 62,
      "endLineNumber" : 45,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,elseExpression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 45,
        "startColumnNumber" : 62,
        "endLineNumber" : 45,
        "endColumnNumber" : 79
      },
      "nodeContext" : "MediaFormat.WEBMA",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 45,
        "startColumnNumber" : 38,
        "endLineNumber" : 45,
        "endColumnNumber" : 79
      },
      "nodeContext" : "m4v ? MediaFormat.M4A : MediaFormat.WEBMA",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 45,
        "startColumnNumber" : 37,
        "endLineNumber" : 45,
        "endColumnNumber" : 80
      },
      "nodeContext" : "(m4v ? MediaFormat.M4A : MediaFormat.WEBMA)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 45,
        "startColumnNumber" : 16,
        "endLineNumber" : 45,
        "endColumnNumber" : 80
      },
      "nodeContext" : "audio.getFormat() == (m4v ? MediaFormat.M4A : MediaFormat.WEBMA)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 45,
        "startColumnNumber" : 12,
        "endLineNumber" : 47,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (audio.getFormat() == (m4v ? MediaFormat.M4A : MediaFormat.WEBMA)) {\n  return audio;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 44,
        "startColumnNumber" : 47,
        "endLineNumber" : 48,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (audio.getFormat() == (m4v ? MediaFormat.M4A : MediaFormat.WEBMA)) {\n    return audio;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 178,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (AudioStream audio : audioStreams) {\n  if (audio.getFormat() == (m4v ? MediaFormat.M4A : MediaFormat.WEBMA)) {\n    return audio;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 816,
        "startLineNumber" : 33,
        "startColumnNumber" : 88,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\nswitch (videoStream.getFormat()) {\ncase WEBM:case MPEG_4:    break;\ndefault:  return null;\n}\nboolean m4v=videoStream.getFormat() == MediaFormat.MPEG_4;\nfor (AudioStream audio : audioStreams) {\nif (audio.getFormat() == (m4v ? MediaFormat.M4A : MediaFormat.WEBMA)) {\n  return audio;\n}\n}\nif (m4v) {\nreturn null;\n}\nfor (int i=audioStreams.size() - 1; i >= 0; i--) {\nAudioStream audio=audioStreams.get(i);\nif (audio.getFormat() == MediaFormat.WEBMA_OPUS) {\n  return audio;\n}\n}\nreturn null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1261,
        "startLineNumber" : 25,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Find the correct audio stream for the desired video stream.\n * @param audioStreams list of audio streams\n * @param videoStream  desired video ONLY stream\n * @return selected audio stream or null if a candidate was not found\n */\npublic static AudioStream getAudioStreamFor(@NonNull final List<AudioStream> audioStreams,@NonNull final VideoStream videoStream){\nswitch (videoStream.getFormat()) {\ncase WEBM:case MPEG_4:    break;\ndefault:  return null;\n}\nboolean m4v=videoStream.getFormat() == MediaFormat.MPEG_4;\nfor (AudioStream audio : audioStreams) {\nif (audio.getFormat() == (m4v ? MediaFormat.M4A : MediaFormat.WEBMA)) {\n  return audio;\n}\n}\nif (m4v) {\nreturn null;\n}\nfor (int i=audioStreams.size() - 1; i >= 0; i--) {\nAudioStream audio=audioStreams.get(i);\nif (audio.getFormat() == MediaFormat.WEBMA_OPUS) {\n  return audio;\n}\n}\nreturn null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 115,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 45,
        "startColumnNumber" : 16,
        "endLineNumber" : 45,
        "endColumnNumber" : 80
      },
      "nodeContext" : "audio.getFormat() == (m4v ? MediaFormat.M4A : MediaFormat.WEBMA)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "MediaFormat",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 57,
      "startColumnNumber" : 37,
      "endLineNumber" : 57,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 57,
        "startColumnNumber" : 37,
        "endLineNumber" : 57,
        "endColumnNumber" : 59
      },
      "nodeContext" : "MediaFormat.WEBMA_OPUS",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 57,
        "startColumnNumber" : 16,
        "endLineNumber" : 57,
        "endColumnNumber" : 59
      },
      "nodeContext" : "audio.getFormat() == MediaFormat.WEBMA_OPUS",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 57,
        "startColumnNumber" : 12,
        "endLineNumber" : 59,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (audio.getFormat() == MediaFormat.WEBMA_OPUS) {\n  return audio;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 171,
        "startLineNumber" : 55,
        "startColumnNumber" : 59,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  AudioStream audio=audioStreams.get(i);\n  if (audio.getFormat() == MediaFormat.WEBMA_OPUS) {\n    return audio;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 222,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=audioStreams.size() - 1; i >= 0; i--) {\n  AudioStream audio=audioStreams.get(i);\n  if (audio.getFormat() == MediaFormat.WEBMA_OPUS) {\n    return audio;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 36,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 816,
        "startLineNumber" : 33,
        "startColumnNumber" : 88,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\nswitch (videoStream.getFormat()) {\ncase WEBM:case MPEG_4:    break;\ndefault:  return null;\n}\nboolean m4v=videoStream.getFormat() == MediaFormat.MPEG_4;\nfor (AudioStream audio : audioStreams) {\nif (audio.getFormat() == (m4v ? MediaFormat.M4A : MediaFormat.WEBMA)) {\n  return audio;\n}\n}\nif (m4v) {\nreturn null;\n}\nfor (int i=audioStreams.size() - 1; i >= 0; i--) {\nAudioStream audio=audioStreams.get(i);\nif (audio.getFormat() == MediaFormat.WEBMA_OPUS) {\n  return audio;\n}\n}\nreturn null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1261,
        "startLineNumber" : 25,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Find the correct audio stream for the desired video stream.\n * @param audioStreams list of audio streams\n * @param videoStream  desired video ONLY stream\n * @return selected audio stream or null if a candidate was not found\n */\npublic static AudioStream getAudioStreamFor(@NonNull final List<AudioStream> audioStreams,@NonNull final VideoStream videoStream){\nswitch (videoStream.getFormat()) {\ncase WEBM:case MPEG_4:    break;\ndefault:  return null;\n}\nboolean m4v=videoStream.getFormat() == MediaFormat.MPEG_4;\nfor (AudioStream audio : audioStreams) {\nif (audio.getFormat() == (m4v ? MediaFormat.M4A : MediaFormat.WEBMA)) {\n  return audio;\n}\n}\nif (m4v) {\nreturn null;\n}\nfor (int i=audioStreams.size() - 1; i >= 0; i--) {\nAudioStream audio=audioStreams.get(i);\nif (audio.getFormat() == MediaFormat.WEBMA_OPUS) {\n  return audio;\n}\n}\nreturn null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 115,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 57,
        "startColumnNumber" : 16,
        "endLineNumber" : 57,
        "endColumnNumber" : 59
      },
      "nodeContext" : "audio.getFormat() == MediaFormat.WEBMA_OPUS",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 42,
    "startColumnNumber" : 49,
    "endLineNumber" : 42,
    "endColumnNumber" : 60
  }, {
    "charLength" : 11,
    "startLineNumber" : 45,
    "startColumnNumber" : 44,
    "endLineNumber" : 45,
    "endColumnNumber" : 55
  }, {
    "charLength" : 11,
    "startLineNumber" : 45,
    "startColumnNumber" : 62,
    "endLineNumber" : 45,
    "endColumnNumber" : 73
  }, {
    "charLength" : 11,
    "startLineNumber" : 57,
    "startColumnNumber" : 37,
    "endLineNumber" : 57,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 5
  } ]
}