{
  "id" : 286,
  "expression" : "flushCounter.get()",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/thrift/src/test/java/com/navercorp/pinpoint/thrift/io/ChunkHeaderBufferedTBaseSerializerTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "flushCounter.get()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 60,
      "startColumnNumber" : 24,
      "endLineNumber" : 60,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 43
      },
      "nodeContext" : "assertEquals(1,flushCounter.get())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 44
      },
      "nodeContext" : "assertEquals(1,flushCounter.get());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1273,
        "startLineNumber" : 42,
        "startColumnNumber" : 40,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int chunkSize=1024;\n  UnsafeByteArrayOutputStream out=new UnsafeByteArrayOutputStream();\n  ChunkHeaderBufferedTBaseSerializer serializer=new ChunkHeaderBufferedTBaseSerializer(out,DEFAULT_PROTOCOL_FACTORY,DEFAULT_TBASE_LOCATOR);\n  serializer.setChunkSize(1024);\n  serializer.setFlushHandler(new ChunkHeaderBufferedTBaseSerializerFlushHandler(){\n    @Override public void handle(    byte[] buffer,    int offset,    int length){\n      flushCounter.incrementAndGet();\n    }\n  }\n);\n  flushCounter.set(0);\n  TSpanChunk chunk=new TSpanMockBuilder().buildChunk(1,1024);\n  serializer.add(chunk);\n  assertEquals(1,flushCounter.get());\n  flushCounter.set(0);\n  chunk=new TSpanMockBuilder().buildChunk(3,1024);\n  serializer.add(chunk);\n  assertEquals(3,flushCounter.get());\n  flushCounter.set(0);\n  chunk=new TSpanMockBuilder().buildChunk(3,10);\n  serializer.add(chunk);\n  assertEquals(0,flushCounter.get());\n  flushCounter.set(0);\n  serializer.flush();\n  assertEquals(1,flushCounter.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 160,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1319,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void add() throws TException {\n  final int chunkSize=1024;\n  UnsafeByteArrayOutputStream out=new UnsafeByteArrayOutputStream();\n  ChunkHeaderBufferedTBaseSerializer serializer=new ChunkHeaderBufferedTBaseSerializer(out,DEFAULT_PROTOCOL_FACTORY,DEFAULT_TBASE_LOCATOR);\n  serializer.setChunkSize(1024);\n  serializer.setFlushHandler(new ChunkHeaderBufferedTBaseSerializerFlushHandler(){\n    @Override public void handle(    byte[] buffer,    int offset,    int length){\n      flushCounter.incrementAndGet();\n    }\n  }\n);\n  flushCounter.set(0);\n  TSpanChunk chunk=new TSpanMockBuilder().buildChunk(1,1024);\n  serializer.add(chunk);\n  assertEquals(1,flushCounter.get());\n  flushCounter.set(0);\n  chunk=new TSpanMockBuilder().buildChunk(3,1024);\n  serializer.add(chunk);\n  assertEquals(3,flushCounter.get());\n  flushCounter.set(0);\n  chunk=new TSpanMockBuilder().buildChunk(3,10);\n  serializer.add(chunk);\n  assertEquals(0,flushCounter.get());\n  flushCounter.set(0);\n  serializer.flush();\n  assertEquals(1,flushCounter.get());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 168,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 44
      },
      "nodeContext" : "assertEquals(1,flushCounter.get());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  }, {
    "nodeContext" : "flushCounter.get()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 66,
      "startColumnNumber" : 24,
      "endLineNumber" : 66,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 43
      },
      "nodeContext" : "assertEquals(3,flushCounter.get())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 44
      },
      "nodeContext" : "assertEquals(3,flushCounter.get());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1273,
        "startLineNumber" : 42,
        "startColumnNumber" : 40,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int chunkSize=1024;\n  UnsafeByteArrayOutputStream out=new UnsafeByteArrayOutputStream();\n  ChunkHeaderBufferedTBaseSerializer serializer=new ChunkHeaderBufferedTBaseSerializer(out,DEFAULT_PROTOCOL_FACTORY,DEFAULT_TBASE_LOCATOR);\n  serializer.setChunkSize(1024);\n  serializer.setFlushHandler(new ChunkHeaderBufferedTBaseSerializerFlushHandler(){\n    @Override public void handle(    byte[] buffer,    int offset,    int length){\n      flushCounter.incrementAndGet();\n    }\n  }\n);\n  flushCounter.set(0);\n  TSpanChunk chunk=new TSpanMockBuilder().buildChunk(1,1024);\n  serializer.add(chunk);\n  assertEquals(1,flushCounter.get());\n  flushCounter.set(0);\n  chunk=new TSpanMockBuilder().buildChunk(3,1024);\n  serializer.add(chunk);\n  assertEquals(3,flushCounter.get());\n  flushCounter.set(0);\n  chunk=new TSpanMockBuilder().buildChunk(3,10);\n  serializer.add(chunk);\n  assertEquals(0,flushCounter.get());\n  flushCounter.set(0);\n  serializer.flush();\n  assertEquals(1,flushCounter.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 160,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1319,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void add() throws TException {\n  final int chunkSize=1024;\n  UnsafeByteArrayOutputStream out=new UnsafeByteArrayOutputStream();\n  ChunkHeaderBufferedTBaseSerializer serializer=new ChunkHeaderBufferedTBaseSerializer(out,DEFAULT_PROTOCOL_FACTORY,DEFAULT_TBASE_LOCATOR);\n  serializer.setChunkSize(1024);\n  serializer.setFlushHandler(new ChunkHeaderBufferedTBaseSerializerFlushHandler(){\n    @Override public void handle(    byte[] buffer,    int offset,    int length){\n      flushCounter.incrementAndGet();\n    }\n  }\n);\n  flushCounter.set(0);\n  TSpanChunk chunk=new TSpanMockBuilder().buildChunk(1,1024);\n  serializer.add(chunk);\n  assertEquals(1,flushCounter.get());\n  flushCounter.set(0);\n  chunk=new TSpanMockBuilder().buildChunk(3,1024);\n  serializer.add(chunk);\n  assertEquals(3,flushCounter.get());\n  flushCounter.set(0);\n  chunk=new TSpanMockBuilder().buildChunk(3,10);\n  serializer.add(chunk);\n  assertEquals(0,flushCounter.get());\n  flushCounter.set(0);\n  serializer.flush();\n  assertEquals(1,flushCounter.get());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 168,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 44
      },
      "nodeContext" : "assertEquals(3,flushCounter.get());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  }, {
    "nodeContext" : "flushCounter.get()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 72,
      "startColumnNumber" : 24,
      "endLineNumber" : 72,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 43
      },
      "nodeContext" : "assertEquals(0,flushCounter.get())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 44
      },
      "nodeContext" : "assertEquals(0,flushCounter.get());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1273,
        "startLineNumber" : 42,
        "startColumnNumber" : 40,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int chunkSize=1024;\n  UnsafeByteArrayOutputStream out=new UnsafeByteArrayOutputStream();\n  ChunkHeaderBufferedTBaseSerializer serializer=new ChunkHeaderBufferedTBaseSerializer(out,DEFAULT_PROTOCOL_FACTORY,DEFAULT_TBASE_LOCATOR);\n  serializer.setChunkSize(1024);\n  serializer.setFlushHandler(new ChunkHeaderBufferedTBaseSerializerFlushHandler(){\n    @Override public void handle(    byte[] buffer,    int offset,    int length){\n      flushCounter.incrementAndGet();\n    }\n  }\n);\n  flushCounter.set(0);\n  TSpanChunk chunk=new TSpanMockBuilder().buildChunk(1,1024);\n  serializer.add(chunk);\n  assertEquals(1,flushCounter.get());\n  flushCounter.set(0);\n  chunk=new TSpanMockBuilder().buildChunk(3,1024);\n  serializer.add(chunk);\n  assertEquals(3,flushCounter.get());\n  flushCounter.set(0);\n  chunk=new TSpanMockBuilder().buildChunk(3,10);\n  serializer.add(chunk);\n  assertEquals(0,flushCounter.get());\n  flushCounter.set(0);\n  serializer.flush();\n  assertEquals(1,flushCounter.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 160,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1319,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void add() throws TException {\n  final int chunkSize=1024;\n  UnsafeByteArrayOutputStream out=new UnsafeByteArrayOutputStream();\n  ChunkHeaderBufferedTBaseSerializer serializer=new ChunkHeaderBufferedTBaseSerializer(out,DEFAULT_PROTOCOL_FACTORY,DEFAULT_TBASE_LOCATOR);\n  serializer.setChunkSize(1024);\n  serializer.setFlushHandler(new ChunkHeaderBufferedTBaseSerializerFlushHandler(){\n    @Override public void handle(    byte[] buffer,    int offset,    int length){\n      flushCounter.incrementAndGet();\n    }\n  }\n);\n  flushCounter.set(0);\n  TSpanChunk chunk=new TSpanMockBuilder().buildChunk(1,1024);\n  serializer.add(chunk);\n  assertEquals(1,flushCounter.get());\n  flushCounter.set(0);\n  chunk=new TSpanMockBuilder().buildChunk(3,1024);\n  serializer.add(chunk);\n  assertEquals(3,flushCounter.get());\n  flushCounter.set(0);\n  chunk=new TSpanMockBuilder().buildChunk(3,10);\n  serializer.add(chunk);\n  assertEquals(0,flushCounter.get());\n  flushCounter.set(0);\n  serializer.flush();\n  assertEquals(1,flushCounter.get());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 168,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 44
      },
      "nodeContext" : "assertEquals(0,flushCounter.get());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  }, {
    "nodeContext" : "flushCounter.get()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 77,
      "startColumnNumber" : 24,
      "endLineNumber" : 77,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 43
      },
      "nodeContext" : "assertEquals(1,flushCounter.get())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 44
      },
      "nodeContext" : "assertEquals(1,flushCounter.get());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1273,
        "startLineNumber" : 42,
        "startColumnNumber" : 40,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int chunkSize=1024;\n  UnsafeByteArrayOutputStream out=new UnsafeByteArrayOutputStream();\n  ChunkHeaderBufferedTBaseSerializer serializer=new ChunkHeaderBufferedTBaseSerializer(out,DEFAULT_PROTOCOL_FACTORY,DEFAULT_TBASE_LOCATOR);\n  serializer.setChunkSize(1024);\n  serializer.setFlushHandler(new ChunkHeaderBufferedTBaseSerializerFlushHandler(){\n    @Override public void handle(    byte[] buffer,    int offset,    int length){\n      flushCounter.incrementAndGet();\n    }\n  }\n);\n  flushCounter.set(0);\n  TSpanChunk chunk=new TSpanMockBuilder().buildChunk(1,1024);\n  serializer.add(chunk);\n  assertEquals(1,flushCounter.get());\n  flushCounter.set(0);\n  chunk=new TSpanMockBuilder().buildChunk(3,1024);\n  serializer.add(chunk);\n  assertEquals(3,flushCounter.get());\n  flushCounter.set(0);\n  chunk=new TSpanMockBuilder().buildChunk(3,10);\n  serializer.add(chunk);\n  assertEquals(0,flushCounter.get());\n  flushCounter.set(0);\n  serializer.flush();\n  assertEquals(1,flushCounter.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 160,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1319,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void add() throws TException {\n  final int chunkSize=1024;\n  UnsafeByteArrayOutputStream out=new UnsafeByteArrayOutputStream();\n  ChunkHeaderBufferedTBaseSerializer serializer=new ChunkHeaderBufferedTBaseSerializer(out,DEFAULT_PROTOCOL_FACTORY,DEFAULT_TBASE_LOCATOR);\n  serializer.setChunkSize(1024);\n  serializer.setFlushHandler(new ChunkHeaderBufferedTBaseSerializerFlushHandler(){\n    @Override public void handle(    byte[] buffer,    int offset,    int length){\n      flushCounter.incrementAndGet();\n    }\n  }\n);\n  flushCounter.set(0);\n  TSpanChunk chunk=new TSpanMockBuilder().buildChunk(1,1024);\n  serializer.add(chunk);\n  assertEquals(1,flushCounter.get());\n  flushCounter.set(0);\n  chunk=new TSpanMockBuilder().buildChunk(3,1024);\n  serializer.add(chunk);\n  assertEquals(3,flushCounter.get());\n  flushCounter.set(0);\n  chunk=new TSpanMockBuilder().buildChunk(3,10);\n  serializer.add(chunk);\n  assertEquals(0,flushCounter.get());\n  flushCounter.set(0);\n  serializer.flush();\n  assertEquals(1,flushCounter.get());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 168,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 44
      },
      "nodeContext" : "assertEquals(1,flushCounter.get());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 60,
    "startColumnNumber" : 24,
    "endLineNumber" : 60,
    "endColumnNumber" : 42
  }, {
    "charLength" : 18,
    "startLineNumber" : 66,
    "startColumnNumber" : 24,
    "endLineNumber" : 66,
    "endColumnNumber" : 42
  }, {
    "charLength" : 18,
    "startLineNumber" : 72,
    "startColumnNumber" : 24,
    "endLineNumber" : 72,
    "endColumnNumber" : 42
  }, {
    "charLength" : 18,
    "startLineNumber" : 77,
    "startColumnNumber" : 24,
    "endLineNumber" : 77,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  } ]
}