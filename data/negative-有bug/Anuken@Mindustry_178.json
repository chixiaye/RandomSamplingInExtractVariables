{
  "id" : 178,
  "expression" : "tmpTiles",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/ai/BaseAI.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "tmpTiles",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 223,
      "startColumnNumber" : 12,
      "endLineNumber" : 223,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 223,
        "startColumnNumber" : 12,
        "endLineNumber" : 223,
        "endColumnNumber" : 28
      },
      "nodeContext" : "tmpTiles.clear()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 223,
        "startColumnNumber" : 12,
        "endLineNumber" : 223,
        "endColumnNumber" : 29
      },
      "nodeContext" : "tmpTiles.clear();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 903,
        "startLineNumber" : 205,
        "startColumnNumber" : 38,
        "endLineNumber" : 227,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int realX=tile.x + cx, realY=tile.y + cy;\n  if (!Build.validPlace(tile.block,data.team,realX,realY,tile.rotation)) {\n    return false;\n  }\n  Tile wtile=world.tile(realX,realY);\n  if (tile.block instanceof PayloadConveyor || tile.block instanceof PayloadAcceptor) {\n    for (    Point2 point : Edges.getEdges(tile.block.size)) {\n      var t=world.build(tile.x + point.x,tile.y + point.y);\n      if (t != null) {\n        return false;\n      }\n    }\n  }\n  tmpTiles.clear();\n  if (tile.block.solid && wtile != null && wtile.getLinkedTilesAs(tile.block,tmpTiles).contains(t -> path.contains(t.pos()))) {\n    return false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 140,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 933,
        "startLineNumber" : 205,
        "startColumnNumber" : 8,
        "endLineNumber" : 227,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Stile tile : result.tiles) {\n  int realX=tile.x + cx, realY=tile.y + cy;\n  if (!Build.validPlace(tile.block,data.team,realX,realY,tile.rotation)) {\n    return false;\n  }\n  Tile wtile=world.tile(realX,realY);\n  if (tile.block instanceof PayloadConveyor || tile.block instanceof PayloadAcceptor) {\n    for (    Point2 point : Edges.getEdges(tile.block.size)) {\n      var t=world.build(tile.x + point.x,tile.y + point.y);\n      if (t != null) {\n        return false;\n      }\n    }\n  }\n  tmpTiles.clear();\n  if (tile.block.solid && wtile != null && wtile.getLinkedTilesAs(tile.block,tmpTiles).contains(t -> path.contains(t.pos()))) {\n    return false;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 148,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2629,
        "startLineNumber" : 194,
        "startColumnNumber" : 57,
        "endLineNumber" : 268,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int rotation=Mathf.range(2);\n  axis.set((int)(part.schematic.width / 2f),(int)(part.schematic.height / 2f));\n  Schematic result=Schematics.rotate(part.schematic,rotation);\n  int rotdeg=rotation * 90;\n  rotator.set(part.centerX,part.centerY).rotateAround(axis,rotdeg);\n  int cx=x - (int)rotator.x;\n  int cy=y - (int)rotator.y;\n  for (  Stile tile : result.tiles) {\n    int realX=tile.x + cx, realY=tile.y + cy;\n    if (!Build.validPlace(tile.block,data.team,realX,realY,tile.rotation)) {\n      return false;\n    }\n    Tile wtile=world.tile(realX,realY);\n    if (tile.block instanceof PayloadConveyor || tile.block instanceof PayloadAcceptor) {\n      for (      Point2 point : Edges.getEdges(tile.block.size)) {\n        var t=world.build(tile.x + point.x,tile.y + point.y);\n        if (t != null) {\n          return false;\n        }\n      }\n    }\n    tmpTiles.clear();\n    if (tile.block.solid && wtile != null && wtile.getLinkedTilesAs(tile.block,tmpTiles).contains(t -> path.contains(t.pos()))) {\n      return false;\n    }\n  }\n  correct=incorrect=0;\n  anyDrills=false;\n  if (part.required instanceof Item) {\n    for (    Stile tile : result.tiles) {\n      if (tile.block instanceof Drill) {\n        anyDrills=true;\n        tile.block.iterateTaken(tile.x + cx,tile.y + cy,(ex,ey) -> {\n          Tile res=world.rawTile(ex,ey);\n          if (res.drop() == part.required) {\n            correct++;\n          }\n else           if (res.drop() != null) {\n            incorrect++;\n          }\n        }\n);\n      }\n    }\n  }\n  if (anyDrills && (incorrect != 0 || correct == 0)) {\n    return false;\n  }\n  for (  Stile tile : result.tiles) {\n    data.blocks.add(new BlockPlan(cx + tile.x,cy + tile.y,tile.rotation,tile.block.id,tile.config));\n  }\n  lastX=cx - 1;\n  lastY=cy - 1;\n  lastW=result.width + 2;\n  lastH=result.height + 2;\n  triedWalls=false;\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 416,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2682,
        "startLineNumber" : 194,
        "startColumnNumber" : 4,
        "endLineNumber" : 268,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private boolean tryPlace(BasePart part,int x,int y){\n  int rotation=Mathf.range(2);\n  axis.set((int)(part.schematic.width / 2f),(int)(part.schematic.height / 2f));\n  Schematic result=Schematics.rotate(part.schematic,rotation);\n  int rotdeg=rotation * 90;\n  rotator.set(part.centerX,part.centerY).rotateAround(axis,rotdeg);\n  int cx=x - (int)rotator.x;\n  int cy=y - (int)rotator.y;\n  for (  Stile tile : result.tiles) {\n    int realX=tile.x + cx, realY=tile.y + cy;\n    if (!Build.validPlace(tile.block,data.team,realX,realY,tile.rotation)) {\n      return false;\n    }\n    Tile wtile=world.tile(realX,realY);\n    if (tile.block instanceof PayloadConveyor || tile.block instanceof PayloadAcceptor) {\n      for (      Point2 point : Edges.getEdges(tile.block.size)) {\n        var t=world.build(tile.x + point.x,tile.y + point.y);\n        if (t != null) {\n          return false;\n        }\n      }\n    }\n    tmpTiles.clear();\n    if (tile.block.solid && wtile != null && wtile.getLinkedTilesAs(tile.block,tmpTiles).contains(t -> path.contains(t.pos()))) {\n      return false;\n    }\n  }\n  correct=incorrect=0;\n  anyDrills=false;\n  if (part.required instanceof Item) {\n    for (    Stile tile : result.tiles) {\n      if (tile.block instanceof Drill) {\n        anyDrills=true;\n        tile.block.iterateTaken(tile.x + cx,tile.y + cy,(ex,ey) -> {\n          Tile res=world.rawTile(ex,ey);\n          if (res.drop() == part.required) {\n            correct++;\n          }\n else           if (res.drop() != null) {\n            incorrect++;\n          }\n        }\n);\n      }\n    }\n  }\n  if (anyDrills && (incorrect != 0 || correct == 0)) {\n    return false;\n  }\n  for (  Stile tile : result.tiles) {\n    data.blocks.add(new BlockPlan(cx + tile.x,cy + tile.y,tile.rotation,tile.block.id,tile.config));\n  }\n  lastX=cx - 1;\n  lastY=cy - 1;\n  lastW=result.width + 2;\n  lastH=result.height + 2;\n  triedWalls=false;\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 430,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 223,
        "startColumnNumber" : 12,
        "endLineNumber" : 223,
        "endColumnNumber" : 29
      },
      "nodeContext" : "tmpTiles.clear();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "mindustry.ai.Seq<mindustry.world.Tile>"
  }, {
    "nodeContext" : "tmpTiles",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 224,
      "startColumnNumber" : 87,
      "endLineNumber" : 224,
      "endColumnNumber" : 95
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 224,
        "startColumnNumber" : 52,
        "endLineNumber" : 224,
        "endColumnNumber" : 96
      },
      "nodeContext" : "wtile.getLinkedTilesAs(tile.block,tmpTiles)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 224,
        "startColumnNumber" : 52,
        "endLineNumber" : 224,
        "endColumnNumber" : 134
      },
      "nodeContext" : "wtile.getLinkedTilesAs(tile.block,tmpTiles).contains(t -> path.contains(t.pos()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 224,
        "startColumnNumber" : 15,
        "endLineNumber" : 224,
        "endColumnNumber" : 134
      },
      "nodeContext" : "tile.block.solid && wtile != null && wtile.getLinkedTilesAs(tile.block,tmpTiles).contains(t -> path.contains(t.pos()))",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 28,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 224,
        "startColumnNumber" : 12,
        "endLineNumber" : 226,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (tile.block.solid && wtile != null && wtile.getLinkedTilesAs(tile.block,tmpTiles).contains(t -> path.contains(t.pos()))) {\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 903,
        "startLineNumber" : 205,
        "startColumnNumber" : 38,
        "endLineNumber" : 227,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int realX=tile.x + cx, realY=tile.y + cy;\n  if (!Build.validPlace(tile.block,data.team,realX,realY,tile.rotation)) {\n    return false;\n  }\n  Tile wtile=world.tile(realX,realY);\n  if (tile.block instanceof PayloadConveyor || tile.block instanceof PayloadAcceptor) {\n    for (    Point2 point : Edges.getEdges(tile.block.size)) {\n      var t=world.build(tile.x + point.x,tile.y + point.y);\n      if (t != null) {\n        return false;\n      }\n    }\n  }\n  tmpTiles.clear();\n  if (tile.block.solid && wtile != null && wtile.getLinkedTilesAs(tile.block,tmpTiles).contains(t -> path.contains(t.pos()))) {\n    return false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 140,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 933,
        "startLineNumber" : 205,
        "startColumnNumber" : 8,
        "endLineNumber" : 227,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Stile tile : result.tiles) {\n  int realX=tile.x + cx, realY=tile.y + cy;\n  if (!Build.validPlace(tile.block,data.team,realX,realY,tile.rotation)) {\n    return false;\n  }\n  Tile wtile=world.tile(realX,realY);\n  if (tile.block instanceof PayloadConveyor || tile.block instanceof PayloadAcceptor) {\n    for (    Point2 point : Edges.getEdges(tile.block.size)) {\n      var t=world.build(tile.x + point.x,tile.y + point.y);\n      if (t != null) {\n        return false;\n      }\n    }\n  }\n  tmpTiles.clear();\n  if (tile.block.solid && wtile != null && wtile.getLinkedTilesAs(tile.block,tmpTiles).contains(t -> path.contains(t.pos()))) {\n    return false;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 148,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2629,
        "startLineNumber" : 194,
        "startColumnNumber" : 57,
        "endLineNumber" : 268,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int rotation=Mathf.range(2);\n  axis.set((int)(part.schematic.width / 2f),(int)(part.schematic.height / 2f));\n  Schematic result=Schematics.rotate(part.schematic,rotation);\n  int rotdeg=rotation * 90;\n  rotator.set(part.centerX,part.centerY).rotateAround(axis,rotdeg);\n  int cx=x - (int)rotator.x;\n  int cy=y - (int)rotator.y;\n  for (  Stile tile : result.tiles) {\n    int realX=tile.x + cx, realY=tile.y + cy;\n    if (!Build.validPlace(tile.block,data.team,realX,realY,tile.rotation)) {\n      return false;\n    }\n    Tile wtile=world.tile(realX,realY);\n    if (tile.block instanceof PayloadConveyor || tile.block instanceof PayloadAcceptor) {\n      for (      Point2 point : Edges.getEdges(tile.block.size)) {\n        var t=world.build(tile.x + point.x,tile.y + point.y);\n        if (t != null) {\n          return false;\n        }\n      }\n    }\n    tmpTiles.clear();\n    if (tile.block.solid && wtile != null && wtile.getLinkedTilesAs(tile.block,tmpTiles).contains(t -> path.contains(t.pos()))) {\n      return false;\n    }\n  }\n  correct=incorrect=0;\n  anyDrills=false;\n  if (part.required instanceof Item) {\n    for (    Stile tile : result.tiles) {\n      if (tile.block instanceof Drill) {\n        anyDrills=true;\n        tile.block.iterateTaken(tile.x + cx,tile.y + cy,(ex,ey) -> {\n          Tile res=world.rawTile(ex,ey);\n          if (res.drop() == part.required) {\n            correct++;\n          }\n else           if (res.drop() != null) {\n            incorrect++;\n          }\n        }\n);\n      }\n    }\n  }\n  if (anyDrills && (incorrect != 0 || correct == 0)) {\n    return false;\n  }\n  for (  Stile tile : result.tiles) {\n    data.blocks.add(new BlockPlan(cx + tile.x,cy + tile.y,tile.rotation,tile.block.id,tile.config));\n  }\n  lastX=cx - 1;\n  lastY=cy - 1;\n  lastW=result.width + 2;\n  lastH=result.height + 2;\n  triedWalls=false;\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 416,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2682,
        "startLineNumber" : 194,
        "startColumnNumber" : 4,
        "endLineNumber" : 268,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private boolean tryPlace(BasePart part,int x,int y){\n  int rotation=Mathf.range(2);\n  axis.set((int)(part.schematic.width / 2f),(int)(part.schematic.height / 2f));\n  Schematic result=Schematics.rotate(part.schematic,rotation);\n  int rotdeg=rotation * 90;\n  rotator.set(part.centerX,part.centerY).rotateAround(axis,rotdeg);\n  int cx=x - (int)rotator.x;\n  int cy=y - (int)rotator.y;\n  for (  Stile tile : result.tiles) {\n    int realX=tile.x + cx, realY=tile.y + cy;\n    if (!Build.validPlace(tile.block,data.team,realX,realY,tile.rotation)) {\n      return false;\n    }\n    Tile wtile=world.tile(realX,realY);\n    if (tile.block instanceof PayloadConveyor || tile.block instanceof PayloadAcceptor) {\n      for (      Point2 point : Edges.getEdges(tile.block.size)) {\n        var t=world.build(tile.x + point.x,tile.y + point.y);\n        if (t != null) {\n          return false;\n        }\n      }\n    }\n    tmpTiles.clear();\n    if (tile.block.solid && wtile != null && wtile.getLinkedTilesAs(tile.block,tmpTiles).contains(t -> path.contains(t.pos()))) {\n      return false;\n    }\n  }\n  correct=incorrect=0;\n  anyDrills=false;\n  if (part.required instanceof Item) {\n    for (    Stile tile : result.tiles) {\n      if (tile.block instanceof Drill) {\n        anyDrills=true;\n        tile.block.iterateTaken(tile.x + cx,tile.y + cy,(ex,ey) -> {\n          Tile res=world.rawTile(ex,ey);\n          if (res.drop() == part.required) {\n            correct++;\n          }\n else           if (res.drop() != null) {\n            incorrect++;\n          }\n        }\n);\n      }\n    }\n  }\n  if (anyDrills && (incorrect != 0 || correct == 0)) {\n    return false;\n  }\n  for (  Stile tile : result.tiles) {\n    data.blocks.add(new BlockPlan(cx + tile.x,cy + tile.y,tile.rotation,tile.block.id,tile.config));\n  }\n  lastX=cx - 1;\n  lastY=cy - 1;\n  lastW=result.width + 2;\n  lastH=result.height + 2;\n  triedWalls=false;\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 430,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 119,
        "startLineNumber" : 224,
        "startColumnNumber" : 15,
        "endLineNumber" : 224,
        "endColumnNumber" : 134
      },
      "nodeContext" : "tile.block.solid && wtile != null && wtile.getLinkedTilesAs(tile.block,tmpTiles).contains(t -> path.contains(t.pos()))",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 28,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "mindustry.ai.Seq<mindustry.world.Tile>"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 223,
    "startColumnNumber" : 12,
    "endLineNumber" : 223,
    "endColumnNumber" : 20
  }, {
    "charLength" : 8,
    "startLineNumber" : 224,
    "startColumnNumber" : 87,
    "endLineNumber" : 224,
    "endColumnNumber" : 95
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}