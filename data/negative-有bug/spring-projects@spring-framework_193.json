{
  "id" : 193,
  "expression" : "false",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-jdbc/src/main/java/org/springframework/jdbc/support/incrementer/MySQLMaxValueIncrementer.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "false",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 123,
      "startColumnNumber" : 35,
      "endLineNumber" : 123,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 123,
        "startColumnNumber" : 11,
        "endLineNumber" : 123,
        "endColumnNumber" : 40
      },
      "nodeContext" : "mustRestoreAutoCommit=false",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 123,
        "startColumnNumber" : 3,
        "endLineNumber" : 123,
        "endColumnNumber" : 41
      },
      "nodeContext" : "boolean mustRestoreAutoCommit=false;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2561,
        "startLineNumber" : 112,
        "startColumnNumber" : 33,
        "endLineNumber" : 186,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Connection con=null;\n  Statement stmt=null;\n  boolean mustRestoreAutoCommit=false;\n  try {\n    if (this.useNewConnection) {\n      con=getDataSource().getConnection();\n      if (con.getAutoCommit()) {\n        mustRestoreAutoCommit=true;\n        con.setAutoCommit(false);\n      }\n    }\n else {\n      con=DataSourceUtils.getConnection(getDataSource());\n    }\n    stmt=con.createStatement();\n    if (!this.useNewConnection) {\n      DataSourceUtils.applyTransactionTimeout(stmt,getDataSource());\n    }\n    String columnName=getColumnName();\n    try {\n      stmt.executeUpdate(\"update \" + getIncrementerName() + \" set \"+ columnName+ \" = last_insert_id(\"+ columnName+ \" + \"+ getCacheSize()+ \")\");\n    }\n catch (    SQLException ex) {\n      throw new DataAccessResourceFailureException(\"Could not increment \" + columnName + \" for \"+ getIncrementerName()+ \" sequence table\",ex);\n    }\n    ResultSet rs=stmt.executeQuery(VALUE_SQL);\n    try {\n      if (!rs.next()) {\n        throw new DataAccessResourceFailureException(\"last_insert_id() failed after executing an update\");\n      }\n      this.maxId=rs.getLong(1);\n    }\n  finally {\n      JdbcUtils.closeResultSet(rs);\n    }\n    this.nextId=this.maxId - getCacheSize() + 1;\n  }\n catch (  SQLException ex) {\n    throw new DataAccessResourceFailureException(\"Could not obtain last_insert_id()\",ex);\n  }\n finally {\n    JdbcUtils.closeStatement(stmt);\n    if (con != null) {\n      if (this.useNewConnection) {\n        try {\n          con.commit();\n          if (mustRestoreAutoCommit) {\n            con.setAutoCommit(true);\n          }\n        }\n catch (        SQLException ignore) {\n          throw new DataAccessResourceFailureException(\"Unable to commit new sequence value changes for \" + getIncrementerName());\n        }\n        JdbcUtils.closeConnection(con);\n      }\n else {\n        DataSourceUtils.releaseConnection(con,getDataSource());\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 236,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2623,
        "startLineNumber" : 112,
        "startColumnNumber" : 2,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (this.maxId == this.nextId) {\n  Connection con=null;\n  Statement stmt=null;\n  boolean mustRestoreAutoCommit=false;\n  try {\n    if (this.useNewConnection) {\n      con=getDataSource().getConnection();\n      if (con.getAutoCommit()) {\n        mustRestoreAutoCommit=true;\n        con.setAutoCommit(false);\n      }\n    }\n else {\n      con=DataSourceUtils.getConnection(getDataSource());\n    }\n    stmt=con.createStatement();\n    if (!this.useNewConnection) {\n      DataSourceUtils.applyTransactionTimeout(stmt,getDataSource());\n    }\n    String columnName=getColumnName();\n    try {\n      stmt.executeUpdate(\"update \" + getIncrementerName() + \" set \"+ columnName+ \" = last_insert_id(\"+ columnName+ \" + \"+ getCacheSize()+ \")\");\n    }\n catch (    SQLException ex) {\n      throw new DataAccessResourceFailureException(\"Could not increment \" + columnName + \" for \"+ getIncrementerName()+ \" sequence table\",ex);\n    }\n    ResultSet rs=stmt.executeQuery(VALUE_SQL);\n    try {\n      if (!rs.next()) {\n        throw new DataAccessResourceFailureException(\"last_insert_id() failed after executing an update\");\n      }\n      this.maxId=rs.getLong(1);\n    }\n  finally {\n      JdbcUtils.closeResultSet(rs);\n    }\n    this.nextId=this.maxId - getCacheSize() + 1;\n  }\n catch (  SQLException ex) {\n    throw new DataAccessResourceFailureException(\"Could not obtain last_insert_id()\",ex);\n  }\n finally {\n    JdbcUtils.closeStatement(stmt);\n    if (con != null) {\n      if (this.useNewConnection) {\n        try {\n          con.commit();\n          if (mustRestoreAutoCommit) {\n            con.setAutoCommit(true);\n          }\n        }\n catch (        SQLException ignore) {\n          throw new DataAccessResourceFailureException(\"Unable to commit new sequence value changes for \" + getIncrementerName());\n        }\n        JdbcUtils.closeConnection(con);\n      }\n else {\n        DataSourceUtils.releaseConnection(con,getDataSource());\n      }\n    }\n  }\n}\n else {\n  this.nextId++;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 250,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2652,
        "startLineNumber" : 111,
        "startColumnNumber" : 69,
        "endLineNumber" : 191,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (this.maxId == this.nextId) {\n    Connection con=null;\n    Statement stmt=null;\n    boolean mustRestoreAutoCommit=false;\n    try {\n      if (this.useNewConnection) {\n        con=getDataSource().getConnection();\n        if (con.getAutoCommit()) {\n          mustRestoreAutoCommit=true;\n          con.setAutoCommit(false);\n        }\n      }\n else {\n        con=DataSourceUtils.getConnection(getDataSource());\n      }\n      stmt=con.createStatement();\n      if (!this.useNewConnection) {\n        DataSourceUtils.applyTransactionTimeout(stmt,getDataSource());\n      }\n      String columnName=getColumnName();\n      try {\n        stmt.executeUpdate(\"update \" + getIncrementerName() + \" set \"+ columnName+ \" = last_insert_id(\"+ columnName+ \" + \"+ getCacheSize()+ \")\");\n      }\n catch (      SQLException ex) {\n        throw new DataAccessResourceFailureException(\"Could not increment \" + columnName + \" for \"+ getIncrementerName()+ \" sequence table\",ex);\n      }\n      ResultSet rs=stmt.executeQuery(VALUE_SQL);\n      try {\n        if (!rs.next()) {\n          throw new DataAccessResourceFailureException(\"last_insert_id() failed after executing an update\");\n        }\n        this.maxId=rs.getLong(1);\n      }\n  finally {\n        JdbcUtils.closeResultSet(rs);\n      }\n      this.nextId=this.maxId - getCacheSize() + 1;\n    }\n catch (    SQLException ex) {\n      throw new DataAccessResourceFailureException(\"Could not obtain last_insert_id()\",ex);\n    }\n finally {\n      JdbcUtils.closeStatement(stmt);\n      if (con != null) {\n        if (this.useNewConnection) {\n          try {\n            con.commit();\n            if (mustRestoreAutoCommit) {\n              con.setAutoCommit(true);\n            }\n          }\n catch (          SQLException ignore) {\n            throw new DataAccessResourceFailureException(\"Unable to commit new sequence value changes for \" + getIncrementerName());\n          }\n          JdbcUtils.closeConnection(con);\n        }\n else {\n          DataSourceUtils.releaseConnection(con,getDataSource());\n        }\n      }\n    }\n  }\n else {\n    this.nextId++;\n  }\n  return this.nextId;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 255,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2731,
        "startLineNumber" : 110,
        "startColumnNumber" : 1,
        "endLineNumber" : 191,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override protected synchronized long getNextKey() throws DataAccessException {\n  if (this.maxId == this.nextId) {\n    Connection con=null;\n    Statement stmt=null;\n    boolean mustRestoreAutoCommit=false;\n    try {\n      if (this.useNewConnection) {\n        con=getDataSource().getConnection();\n        if (con.getAutoCommit()) {\n          mustRestoreAutoCommit=true;\n          con.setAutoCommit(false);\n        }\n      }\n else {\n        con=DataSourceUtils.getConnection(getDataSource());\n      }\n      stmt=con.createStatement();\n      if (!this.useNewConnection) {\n        DataSourceUtils.applyTransactionTimeout(stmt,getDataSource());\n      }\n      String columnName=getColumnName();\n      try {\n        stmt.executeUpdate(\"update \" + getIncrementerName() + \" set \"+ columnName+ \" = last_insert_id(\"+ columnName+ \" + \"+ getCacheSize()+ \")\");\n      }\n catch (      SQLException ex) {\n        throw new DataAccessResourceFailureException(\"Could not increment \" + columnName + \" for \"+ getIncrementerName()+ \" sequence table\",ex);\n      }\n      ResultSet rs=stmt.executeQuery(VALUE_SQL);\n      try {\n        if (!rs.next()) {\n          throw new DataAccessResourceFailureException(\"last_insert_id() failed after executing an update\");\n        }\n        this.maxId=rs.getLong(1);\n      }\n  finally {\n        JdbcUtils.closeResultSet(rs);\n      }\n      this.nextId=this.maxId - getCacheSize() + 1;\n    }\n catch (    SQLException ex) {\n      throw new DataAccessResourceFailureException(\"Could not obtain last_insert_id()\",ex);\n    }\n finally {\n      JdbcUtils.closeStatement(stmt);\n      if (con != null) {\n        if (this.useNewConnection) {\n          try {\n            con.commit();\n            if (mustRestoreAutoCommit) {\n              con.setAutoCommit(true);\n            }\n          }\n catch (          SQLException ignore) {\n            throw new DataAccessResourceFailureException(\"Unable to commit new sequence value changes for \" + getIncrementerName());\n          }\n          JdbcUtils.closeConnection(con);\n        }\n else {\n          DataSourceUtils.releaseConnection(con,getDataSource());\n        }\n      }\n    }\n  }\n else {\n    this.nextId++;\n  }\n  return this.nextId;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 264,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 123,
        "startColumnNumber" : 3,
        "endLineNumber" : 123,
        "endColumnNumber" : 41
      },
      "nodeContext" : "boolean mustRestoreAutoCommit=false;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "boolean"
  }, {
    "nodeContext" : "false",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 129,
      "startColumnNumber" : 24,
      "endLineNumber" : 129,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 129,
        "startColumnNumber" : 6,
        "endLineNumber" : 129,
        "endColumnNumber" : 30
      },
      "nodeContext" : "con.setAutoCommit(false)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 129,
        "startColumnNumber" : 6,
        "endLineNumber" : 129,
        "endColumnNumber" : 31
      },
      "nodeContext" : "con.setAutoCommit(false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 127,
        "startColumnNumber" : 30,
        "endLineNumber" : 130,
        "endColumnNumber" : 6
      },
      "nodeContext" : "{\n  mustRestoreAutoCommit=true;\n  con.setAutoCommit(false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 127,
        "startColumnNumber" : 5,
        "endLineNumber" : 130,
        "endColumnNumber" : 6
      },
      "nodeContext" : "if (con.getAutoCommit()) {\n  mustRestoreAutoCommit=true;\n  con.setAutoCommit(false);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 158,
        "startLineNumber" : 125,
        "startColumnNumber" : 31,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  con=getDataSource().getConnection();\n  if (con.getAutoCommit()) {\n    mustRestoreAutoCommit=true;\n    con.setAutoCommit(false);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 261,
        "startLineNumber" : 125,
        "startColumnNumber" : 4,
        "endLineNumber" : 134,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (this.useNewConnection) {\n  con=getDataSource().getConnection();\n  if (con.getAutoCommit()) {\n    mustRestoreAutoCommit=true;\n    con.setAutoCommit(false);\n  }\n}\n else {\n  con=DataSourceUtils.getConnection(getDataSource());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1249,
        "startLineNumber" : 124,
        "startColumnNumber" : 7,
        "endLineNumber" : 161,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  if (this.useNewConnection) {\n    con=getDataSource().getConnection();\n    if (con.getAutoCommit()) {\n      mustRestoreAutoCommit=true;\n      con.setAutoCommit(false);\n    }\n  }\n else {\n    con=DataSourceUtils.getConnection(getDataSource());\n  }\n  stmt=con.createStatement();\n  if (!this.useNewConnection) {\n    DataSourceUtils.applyTransactionTimeout(stmt,getDataSource());\n  }\n  String columnName=getColumnName();\n  try {\n    stmt.executeUpdate(\"update \" + getIncrementerName() + \" set \"+ columnName+ \" = last_insert_id(\"+ columnName+ \" + \"+ getCacheSize()+ \")\");\n  }\n catch (  SQLException ex) {\n    throw new DataAccessResourceFailureException(\"Could not increment \" + columnName + \" for \"+ getIncrementerName()+ \" sequence table\",ex);\n  }\n  ResultSet rs=stmt.executeQuery(VALUE_SQL);\n  try {\n    if (!rs.next()) {\n      throw new DataAccessResourceFailureException(\"last_insert_id() failed after executing an update\");\n    }\n    this.maxId=rs.getLong(1);\n  }\n  finally {\n    JdbcUtils.closeResultSet(rs);\n  }\n  this.nextId=this.maxId - getCacheSize() + 1;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 148,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1923,
        "startLineNumber" : 124,
        "startColumnNumber" : 3,
        "endLineNumber" : 185,
        "endColumnNumber" : 4
      },
      "nodeContext" : "try {\n  if (this.useNewConnection) {\n    con=getDataSource().getConnection();\n    if (con.getAutoCommit()) {\n      mustRestoreAutoCommit=true;\n      con.setAutoCommit(false);\n    }\n  }\n else {\n    con=DataSourceUtils.getConnection(getDataSource());\n  }\n  stmt=con.createStatement();\n  if (!this.useNewConnection) {\n    DataSourceUtils.applyTransactionTimeout(stmt,getDataSource());\n  }\n  String columnName=getColumnName();\n  try {\n    stmt.executeUpdate(\"update \" + getIncrementerName() + \" set \"+ columnName+ \" = last_insert_id(\"+ columnName+ \" + \"+ getCacheSize()+ \")\");\n  }\n catch (  SQLException ex) {\n    throw new DataAccessResourceFailureException(\"Could not increment \" + columnName + \" for \"+ getIncrementerName()+ \" sequence table\",ex);\n  }\n  ResultSet rs=stmt.executeQuery(VALUE_SQL);\n  try {\n    if (!rs.next()) {\n      throw new DataAccessResourceFailureException(\"last_insert_id() failed after executing an update\");\n    }\n    this.maxId=rs.getLong(1);\n  }\n  finally {\n    JdbcUtils.closeResultSet(rs);\n  }\n  this.nextId=this.maxId - getCacheSize() + 1;\n}\n catch (SQLException ex) {\n  throw new DataAccessResourceFailureException(\"Could not obtain last_insert_id()\",ex);\n}\n finally {\n  JdbcUtils.closeStatement(stmt);\n  if (con != null) {\n    if (this.useNewConnection) {\n      try {\n        con.commit();\n        if (mustRestoreAutoCommit) {\n          con.setAutoCommit(true);\n        }\n      }\n catch (      SQLException ignore) {\n        throw new DataAccessResourceFailureException(\"Unable to commit new sequence value changes for \" + getIncrementerName());\n      }\n      JdbcUtils.closeConnection(con);\n    }\n else {\n      DataSourceUtils.releaseConnection(con,getDataSource());\n    }\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 218,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2561,
        "startLineNumber" : 112,
        "startColumnNumber" : 33,
        "endLineNumber" : 186,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Connection con=null;\n  Statement stmt=null;\n  boolean mustRestoreAutoCommit=false;\n  try {\n    if (this.useNewConnection) {\n      con=getDataSource().getConnection();\n      if (con.getAutoCommit()) {\n        mustRestoreAutoCommit=true;\n        con.setAutoCommit(false);\n      }\n    }\n else {\n      con=DataSourceUtils.getConnection(getDataSource());\n    }\n    stmt=con.createStatement();\n    if (!this.useNewConnection) {\n      DataSourceUtils.applyTransactionTimeout(stmt,getDataSource());\n    }\n    String columnName=getColumnName();\n    try {\n      stmt.executeUpdate(\"update \" + getIncrementerName() + \" set \"+ columnName+ \" = last_insert_id(\"+ columnName+ \" + \"+ getCacheSize()+ \")\");\n    }\n catch (    SQLException ex) {\n      throw new DataAccessResourceFailureException(\"Could not increment \" + columnName + \" for \"+ getIncrementerName()+ \" sequence table\",ex);\n    }\n    ResultSet rs=stmt.executeQuery(VALUE_SQL);\n    try {\n      if (!rs.next()) {\n        throw new DataAccessResourceFailureException(\"last_insert_id() failed after executing an update\");\n      }\n      this.maxId=rs.getLong(1);\n    }\n  finally {\n      JdbcUtils.closeResultSet(rs);\n    }\n    this.nextId=this.maxId - getCacheSize() + 1;\n  }\n catch (  SQLException ex) {\n    throw new DataAccessResourceFailureException(\"Could not obtain last_insert_id()\",ex);\n  }\n finally {\n    JdbcUtils.closeStatement(stmt);\n    if (con != null) {\n      if (this.useNewConnection) {\n        try {\n          con.commit();\n          if (mustRestoreAutoCommit) {\n            con.setAutoCommit(true);\n          }\n        }\n catch (        SQLException ignore) {\n          throw new DataAccessResourceFailureException(\"Unable to commit new sequence value changes for \" + getIncrementerName());\n        }\n        JdbcUtils.closeConnection(con);\n      }\n else {\n        DataSourceUtils.releaseConnection(con,getDataSource());\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 236,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2623,
        "startLineNumber" : 112,
        "startColumnNumber" : 2,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (this.maxId == this.nextId) {\n  Connection con=null;\n  Statement stmt=null;\n  boolean mustRestoreAutoCommit=false;\n  try {\n    if (this.useNewConnection) {\n      con=getDataSource().getConnection();\n      if (con.getAutoCommit()) {\n        mustRestoreAutoCommit=true;\n        con.setAutoCommit(false);\n      }\n    }\n else {\n      con=DataSourceUtils.getConnection(getDataSource());\n    }\n    stmt=con.createStatement();\n    if (!this.useNewConnection) {\n      DataSourceUtils.applyTransactionTimeout(stmt,getDataSource());\n    }\n    String columnName=getColumnName();\n    try {\n      stmt.executeUpdate(\"update \" + getIncrementerName() + \" set \"+ columnName+ \" = last_insert_id(\"+ columnName+ \" + \"+ getCacheSize()+ \")\");\n    }\n catch (    SQLException ex) {\n      throw new DataAccessResourceFailureException(\"Could not increment \" + columnName + \" for \"+ getIncrementerName()+ \" sequence table\",ex);\n    }\n    ResultSet rs=stmt.executeQuery(VALUE_SQL);\n    try {\n      if (!rs.next()) {\n        throw new DataAccessResourceFailureException(\"last_insert_id() failed after executing an update\");\n      }\n      this.maxId=rs.getLong(1);\n    }\n  finally {\n      JdbcUtils.closeResultSet(rs);\n    }\n    this.nextId=this.maxId - getCacheSize() + 1;\n  }\n catch (  SQLException ex) {\n    throw new DataAccessResourceFailureException(\"Could not obtain last_insert_id()\",ex);\n  }\n finally {\n    JdbcUtils.closeStatement(stmt);\n    if (con != null) {\n      if (this.useNewConnection) {\n        try {\n          con.commit();\n          if (mustRestoreAutoCommit) {\n            con.setAutoCommit(true);\n          }\n        }\n catch (        SQLException ignore) {\n          throw new DataAccessResourceFailureException(\"Unable to commit new sequence value changes for \" + getIncrementerName());\n        }\n        JdbcUtils.closeConnection(con);\n      }\n else {\n        DataSourceUtils.releaseConnection(con,getDataSource());\n      }\n    }\n  }\n}\n else {\n  this.nextId++;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 250,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2652,
        "startLineNumber" : 111,
        "startColumnNumber" : 69,
        "endLineNumber" : 191,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (this.maxId == this.nextId) {\n    Connection con=null;\n    Statement stmt=null;\n    boolean mustRestoreAutoCommit=false;\n    try {\n      if (this.useNewConnection) {\n        con=getDataSource().getConnection();\n        if (con.getAutoCommit()) {\n          mustRestoreAutoCommit=true;\n          con.setAutoCommit(false);\n        }\n      }\n else {\n        con=DataSourceUtils.getConnection(getDataSource());\n      }\n      stmt=con.createStatement();\n      if (!this.useNewConnection) {\n        DataSourceUtils.applyTransactionTimeout(stmt,getDataSource());\n      }\n      String columnName=getColumnName();\n      try {\n        stmt.executeUpdate(\"update \" + getIncrementerName() + \" set \"+ columnName+ \" = last_insert_id(\"+ columnName+ \" + \"+ getCacheSize()+ \")\");\n      }\n catch (      SQLException ex) {\n        throw new DataAccessResourceFailureException(\"Could not increment \" + columnName + \" for \"+ getIncrementerName()+ \" sequence table\",ex);\n      }\n      ResultSet rs=stmt.executeQuery(VALUE_SQL);\n      try {\n        if (!rs.next()) {\n          throw new DataAccessResourceFailureException(\"last_insert_id() failed after executing an update\");\n        }\n        this.maxId=rs.getLong(1);\n      }\n  finally {\n        JdbcUtils.closeResultSet(rs);\n      }\n      this.nextId=this.maxId - getCacheSize() + 1;\n    }\n catch (    SQLException ex) {\n      throw new DataAccessResourceFailureException(\"Could not obtain last_insert_id()\",ex);\n    }\n finally {\n      JdbcUtils.closeStatement(stmt);\n      if (con != null) {\n        if (this.useNewConnection) {\n          try {\n            con.commit();\n            if (mustRestoreAutoCommit) {\n              con.setAutoCommit(true);\n            }\n          }\n catch (          SQLException ignore) {\n            throw new DataAccessResourceFailureException(\"Unable to commit new sequence value changes for \" + getIncrementerName());\n          }\n          JdbcUtils.closeConnection(con);\n        }\n else {\n          DataSourceUtils.releaseConnection(con,getDataSource());\n        }\n      }\n    }\n  }\n else {\n    this.nextId++;\n  }\n  return this.nextId;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 255,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2731,
        "startLineNumber" : 110,
        "startColumnNumber" : 1,
        "endLineNumber" : 191,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override protected synchronized long getNextKey() throws DataAccessException {\n  if (this.maxId == this.nextId) {\n    Connection con=null;\n    Statement stmt=null;\n    boolean mustRestoreAutoCommit=false;\n    try {\n      if (this.useNewConnection) {\n        con=getDataSource().getConnection();\n        if (con.getAutoCommit()) {\n          mustRestoreAutoCommit=true;\n          con.setAutoCommit(false);\n        }\n      }\n else {\n        con=DataSourceUtils.getConnection(getDataSource());\n      }\n      stmt=con.createStatement();\n      if (!this.useNewConnection) {\n        DataSourceUtils.applyTransactionTimeout(stmt,getDataSource());\n      }\n      String columnName=getColumnName();\n      try {\n        stmt.executeUpdate(\"update \" + getIncrementerName() + \" set \"+ columnName+ \" = last_insert_id(\"+ columnName+ \" + \"+ getCacheSize()+ \")\");\n      }\n catch (      SQLException ex) {\n        throw new DataAccessResourceFailureException(\"Could not increment \" + columnName + \" for \"+ getIncrementerName()+ \" sequence table\",ex);\n      }\n      ResultSet rs=stmt.executeQuery(VALUE_SQL);\n      try {\n        if (!rs.next()) {\n          throw new DataAccessResourceFailureException(\"last_insert_id() failed after executing an update\");\n        }\n        this.maxId=rs.getLong(1);\n      }\n  finally {\n        JdbcUtils.closeResultSet(rs);\n      }\n      this.nextId=this.maxId - getCacheSize() + 1;\n    }\n catch (    SQLException ex) {\n      throw new DataAccessResourceFailureException(\"Could not obtain last_insert_id()\",ex);\n    }\n finally {\n      JdbcUtils.closeStatement(stmt);\n      if (con != null) {\n        if (this.useNewConnection) {\n          try {\n            con.commit();\n            if (mustRestoreAutoCommit) {\n              con.setAutoCommit(true);\n            }\n          }\n catch (          SQLException ignore) {\n            throw new DataAccessResourceFailureException(\"Unable to commit new sequence value changes for \" + getIncrementerName());\n          }\n          JdbcUtils.closeConnection(con);\n        }\n else {\n          DataSourceUtils.releaseConnection(con,getDataSource());\n        }\n      }\n    }\n  }\n else {\n    this.nextId++;\n  }\n  return this.nextId;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 264,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 129,
        "startColumnNumber" : 6,
        "endLineNumber" : 129,
        "endColumnNumber" : 31
      },
      "nodeContext" : "con.setAutoCommit(false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 123,
    "startColumnNumber" : 35,
    "endLineNumber" : 123,
    "endColumnNumber" : 40
  }, {
    "charLength" : 5,
    "startLineNumber" : 129,
    "startColumnNumber" : 24,
    "endLineNumber" : 129,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 8
  } ]
}