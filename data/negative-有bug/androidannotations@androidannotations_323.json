{
  "id" : 323,
  "expression" : "returnType",
  "projectName" : "androidannotations@androidannotations",
  "commitID" : "b60a7ff27cb1bcb0eac2710c15c4957c0d992e27",
  "filePath" : "/AndroidAnnotations/androidannotations/src/main/java/com/googlecode/androidannotations/helper/APTCodeModelHelper.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "returnType",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 101,
      "startColumnNumber" : 52,
      "endLineNumber" : 101,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 101,
        "startColumnNumber" : 19,
        "endLineNumber" : 101,
        "endColumnNumber" : 75
      },
      "nodeContext" : "holder.eBean.method(JMod.PUBLIC,returnType,methodName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 101,
        "startColumnNumber" : 10,
        "endLineNumber" : 101,
        "endColumnNumber" : 75
      },
      "nodeContext" : "method=holder.eBean.method(JMod.PUBLIC,returnType,methodName)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 101,
        "startColumnNumber" : 2,
        "endLineNumber" : 101,
        "endColumnNumber" : 76
      },
      "nodeContext" : "JMethod method=holder.eBean.method(JMod.PUBLIC,returnType,methodName);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1400,
        "startLineNumber" : 82,
        "startColumnNumber" : 97,
        "endLineNumber" : 120,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  String methodName=executableElement.getSimpleName().toString();\n  JClass returnType=typeMirrorToJClass(executableElement.getReturnType(),holder);\n  List<Parameter> parameters=new ArrayList<Parameter>();\n  for (  VariableElement parameter : executableElement.getParameters()) {\n    String parameterName=parameter.getSimpleName().toString();\n    JClass parameterClass=typeMirrorToJClass(parameter.asType(),holder);\n    parameters.add(new Parameter(parameterName,parameterClass));\n  }\n  JMethod existingMethod=findAlreadyGeneratedMethod(holder.eBean,methodName,parameters);\n  if (existingMethod != null) {\n    return existingMethod;\n  }\n  JMethod method=holder.eBean.method(JMod.PUBLIC,returnType,methodName);\n  method.annotate(Override.class);\n  List<JVar> methodParameters=new ArrayList<JVar>();\n  for (  VariableElement parameter : executableElement.getParameters()) {\n    String parameterName=parameter.getSimpleName().toString();\n    JClass parameterClass=typeMirrorToJClass(parameter.asType(),holder);\n    JVar param=method.param(JMod.FINAL,parameterClass,parameterName);\n    methodParameters.add(param);\n  }\n  for (  TypeMirror superThrownType : executableElement.getThrownTypes()) {\n    JClass thrownType=typeMirrorToJClass(superThrownType,holder);\n    method._throws(thrownType);\n  }\n  callSuperMethod(method,holder,method.body());\n  return method;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 211,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1496,
        "startLineNumber" : 82,
        "startColumnNumber" : 1,
        "endLineNumber" : 120,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public JMethod overrideAnnotatedMethod(ExecutableElement executableElement,EBeanHolder holder){\n  String methodName=executableElement.getSimpleName().toString();\n  JClass returnType=typeMirrorToJClass(executableElement.getReturnType(),holder);\n  List<Parameter> parameters=new ArrayList<Parameter>();\n  for (  VariableElement parameter : executableElement.getParameters()) {\n    String parameterName=parameter.getSimpleName().toString();\n    JClass parameterClass=typeMirrorToJClass(parameter.asType(),holder);\n    parameters.add(new Parameter(parameterName,parameterClass));\n  }\n  JMethod existingMethod=findAlreadyGeneratedMethod(holder.eBean,methodName,parameters);\n  if (existingMethod != null) {\n    return existingMethod;\n  }\n  JMethod method=holder.eBean.method(JMod.PUBLIC,returnType,methodName);\n  method.annotate(Override.class);\n  List<JVar> methodParameters=new ArrayList<JVar>();\n  for (  VariableElement parameter : executableElement.getParameters()) {\n    String parameterName=parameter.getSimpleName().toString();\n    JClass parameterClass=typeMirrorToJClass(parameter.asType(),holder);\n    JVar param=method.param(JMod.FINAL,parameterClass,parameterName);\n    methodParameters.add(param);\n  }\n  for (  TypeMirror superThrownType : executableElement.getThrownTypes()) {\n    JClass thrownType=typeMirrorToJClass(superThrownType,holder);\n    method._throws(thrownType);\n  }\n  callSuperMethod(method,holder,method.body());\n  return method;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 224,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 101,
        "startColumnNumber" : 2,
        "endLineNumber" : 101,
        "endColumnNumber" : 76
      },
      "nodeContext" : "JMethod method=holder.eBean.method(JMod.PUBLIC,returnType,methodName);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.googlecode.androidannotations.helper.JClass"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 101,
    "startColumnNumber" : 52,
    "endLineNumber" : 101,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ ]
}