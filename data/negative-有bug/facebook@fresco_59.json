{
  "id" : 59,
  "expression" : "0L",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/imagepipeline-base/src/main/java/com/facebook/cache/disk/DiskStorageCache.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0L",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 393,
      "startColumnNumber" : 37,
      "endLineNumber" : 393,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 393,
        "startColumnNumber" : 9,
        "endLineNumber" : 393,
        "endColumnNumber" : 39
      },
      "nodeContext" : "oldestRemainingEntryAgeMs=0L",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 393,
        "startColumnNumber" : 4,
        "endLineNumber" : 393,
        "endColumnNumber" : 40
      },
      "nodeContext" : "long oldestRemainingEntryAgeMs=0L;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1872,
        "startLineNumber" : 392,
        "startColumnNumber" : 54,
        "endLineNumber" : 437,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  long oldestRemainingEntryAgeMs=0L;\nsynchronized (mLock) {\n    try {\n      long now=mClock.now();\n      Collection<DiskStorage.Entry> allEntries=mStorage.getEntries();\n      final long cacheSizeBeforeClearance=mCacheStats.getSize();\n      int itemsRemovedCount=0;\n      long itemsRemovedSize=0L;\n      for (      DiskStorage.Entry entry : allEntries) {\n        long entryAgeMs=Math.max(1,Math.abs(now - entry.getTimestamp()));\n        if (entryAgeMs >= cacheExpirationMs) {\n          long entryRemovedSize=mStorage.remove(entry);\n          mResourceIndex.remove(entry.getId());\n          if (entryRemovedSize > 0) {\n            itemsRemovedCount++;\n            itemsRemovedSize+=entryRemovedSize;\n            SettableCacheEvent cacheEvent=SettableCacheEvent.obtain().setResourceId(entry.getId()).setEvictionReason(CacheEventListener.EvictionReason.CONTENT_STALE).setItemSize(entryRemovedSize).setCacheSize(cacheSizeBeforeClearance - itemsRemovedSize);\n            mCacheEventListener.onEviction(cacheEvent);\n            cacheEvent.recycle();\n          }\n        }\n else {\n          oldestRemainingEntryAgeMs=Math.max(oldestRemainingEntryAgeMs,entryAgeMs);\n        }\n      }\n      mStorage.purgeUnexpectedResources();\n      if (itemsRemovedCount > 0) {\n        maybeUpdateFileCacheSize();\n        mCacheStats.increment(-itemsRemovedSize,-itemsRemovedCount);\n      }\n    }\n catch (    IOException ioe) {\n      mCacheErrorLogger.logError(CacheErrorLogger.CacheErrorCategory.EVICTION,TAG,\"clearOldEntries: \" + ioe.getMessage(),ioe);\n    }\n  }\n  return oldestRemainingEntryAgeMs;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 196,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2122,
        "startLineNumber" : 385,
        "startColumnNumber" : 2,
        "endLineNumber" : 437,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Deletes old cache files.\n * @param cacheExpirationMs files older than this will be deleted.\n * @return the age in ms of the oldest file remaining in the cache.\n */\n@Override public long clearOldEntries(long cacheExpirationMs){\n  long oldestRemainingEntryAgeMs=0L;\nsynchronized (mLock) {\n    try {\n      long now=mClock.now();\n      Collection<DiskStorage.Entry> allEntries=mStorage.getEntries();\n      final long cacheSizeBeforeClearance=mCacheStats.getSize();\n      int itemsRemovedCount=0;\n      long itemsRemovedSize=0L;\n      for (      DiskStorage.Entry entry : allEntries) {\n        long entryAgeMs=Math.max(1,Math.abs(now - entry.getTimestamp()));\n        if (entryAgeMs >= cacheExpirationMs) {\n          long entryRemovedSize=mStorage.remove(entry);\n          mResourceIndex.remove(entry.getId());\n          if (entryRemovedSize > 0) {\n            itemsRemovedCount++;\n            itemsRemovedSize+=entryRemovedSize;\n            SettableCacheEvent cacheEvent=SettableCacheEvent.obtain().setResourceId(entry.getId()).setEvictionReason(CacheEventListener.EvictionReason.CONTENT_STALE).setItemSize(entryRemovedSize).setCacheSize(cacheSizeBeforeClearance - itemsRemovedSize);\n            mCacheEventListener.onEviction(cacheEvent);\n            cacheEvent.recycle();\n          }\n        }\n else {\n          oldestRemainingEntryAgeMs=Math.max(oldestRemainingEntryAgeMs,entryAgeMs);\n        }\n      }\n      mStorage.purgeUnexpectedResources();\n      if (itemsRemovedCount > 0) {\n        maybeUpdateFileCacheSize();\n        mCacheStats.increment(-itemsRemovedSize,-itemsRemovedCount);\n      }\n    }\n catch (    IOException ioe) {\n      mCacheErrorLogger.logError(CacheErrorLogger.CacheErrorCategory.EVICTION,TAG,\"clearOldEntries: \" + ioe.getMessage(),ioe);\n    }\n  }\n  return oldestRemainingEntryAgeMs;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 206,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 393,
        "startColumnNumber" : 4,
        "endLineNumber" : 393,
        "endColumnNumber" : 40
      },
      "nodeContext" : "long oldestRemainingEntryAgeMs=0L;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "long"
  }, {
    "nodeContext" : "0L",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 400,
      "startColumnNumber" : 32,
      "endLineNumber" : 400,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 400,
        "startColumnNumber" : 13,
        "endLineNumber" : 400,
        "endColumnNumber" : 34
      },
      "nodeContext" : "itemsRemovedSize=0L",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 400,
        "startColumnNumber" : 8,
        "endLineNumber" : 400,
        "endColumnNumber" : 35
      },
      "nodeContext" : "long itemsRemovedSize=0L;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1529,
        "startLineNumber" : 395,
        "startColumnNumber" : 10,
        "endLineNumber" : 428,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  long now=mClock.now();\n  Collection<DiskStorage.Entry> allEntries=mStorage.getEntries();\n  final long cacheSizeBeforeClearance=mCacheStats.getSize();\n  int itemsRemovedCount=0;\n  long itemsRemovedSize=0L;\n  for (  DiskStorage.Entry entry : allEntries) {\n    long entryAgeMs=Math.max(1,Math.abs(now - entry.getTimestamp()));\n    if (entryAgeMs >= cacheExpirationMs) {\n      long entryRemovedSize=mStorage.remove(entry);\n      mResourceIndex.remove(entry.getId());\n      if (entryRemovedSize > 0) {\n        itemsRemovedCount++;\n        itemsRemovedSize+=entryRemovedSize;\n        SettableCacheEvent cacheEvent=SettableCacheEvent.obtain().setResourceId(entry.getId()).setEvictionReason(CacheEventListener.EvictionReason.CONTENT_STALE).setItemSize(entryRemovedSize).setCacheSize(cacheSizeBeforeClearance - itemsRemovedSize);\n        mCacheEventListener.onEviction(cacheEvent);\n        cacheEvent.recycle();\n      }\n    }\n else {\n      oldestRemainingEntryAgeMs=Math.max(oldestRemainingEntryAgeMs,entryAgeMs);\n    }\n  }\n  mStorage.purgeUnexpectedResources();\n  if (itemsRemovedCount > 0) {\n    maybeUpdateFileCacheSize();\n    mCacheStats.increment(-itemsRemovedSize,-itemsRemovedCount);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1748,
        "startLineNumber" : 395,
        "startColumnNumber" : 6,
        "endLineNumber" : 434,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  long now=mClock.now();\n  Collection<DiskStorage.Entry> allEntries=mStorage.getEntries();\n  final long cacheSizeBeforeClearance=mCacheStats.getSize();\n  int itemsRemovedCount=0;\n  long itemsRemovedSize=0L;\n  for (  DiskStorage.Entry entry : allEntries) {\n    long entryAgeMs=Math.max(1,Math.abs(now - entry.getTimestamp()));\n    if (entryAgeMs >= cacheExpirationMs) {\n      long entryRemovedSize=mStorage.remove(entry);\n      mResourceIndex.remove(entry.getId());\n      if (entryRemovedSize > 0) {\n        itemsRemovedCount++;\n        itemsRemovedSize+=entryRemovedSize;\n        SettableCacheEvent cacheEvent=SettableCacheEvent.obtain().setResourceId(entry.getId()).setEvictionReason(CacheEventListener.EvictionReason.CONTENT_STALE).setItemSize(entryRemovedSize).setCacheSize(cacheSizeBeforeClearance - itemsRemovedSize);\n        mCacheEventListener.onEviction(cacheEvent);\n        cacheEvent.recycle();\n      }\n    }\n else {\n      oldestRemainingEntryAgeMs=Math.max(oldestRemainingEntryAgeMs,entryAgeMs);\n    }\n  }\n  mStorage.purgeUnexpectedResources();\n  if (itemsRemovedCount > 0) {\n    maybeUpdateFileCacheSize();\n    mCacheStats.increment(-itemsRemovedSize,-itemsRemovedCount);\n  }\n}\n catch (IOException ioe) {\n  mCacheErrorLogger.logError(CacheErrorLogger.CacheErrorCategory.EVICTION,TAG,\"clearOldEntries: \" + ioe.getMessage(),ioe);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 185,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SynchronizedStatement,body]",
      "nodePosition" : {
        "charLength" : 1762,
        "startLineNumber" : 394,
        "startColumnNumber" : 25,
        "endLineNumber" : 435,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    long now=mClock.now();\n    Collection<DiskStorage.Entry> allEntries=mStorage.getEntries();\n    final long cacheSizeBeforeClearance=mCacheStats.getSize();\n    int itemsRemovedCount=0;\n    long itemsRemovedSize=0L;\n    for (    DiskStorage.Entry entry : allEntries) {\n      long entryAgeMs=Math.max(1,Math.abs(now - entry.getTimestamp()));\n      if (entryAgeMs >= cacheExpirationMs) {\n        long entryRemovedSize=mStorage.remove(entry);\n        mResourceIndex.remove(entry.getId());\n        if (entryRemovedSize > 0) {\n          itemsRemovedCount++;\n          itemsRemovedSize+=entryRemovedSize;\n          SettableCacheEvent cacheEvent=SettableCacheEvent.obtain().setResourceId(entry.getId()).setEvictionReason(CacheEventListener.EvictionReason.CONTENT_STALE).setItemSize(entryRemovedSize).setCacheSize(cacheSizeBeforeClearance - itemsRemovedSize);\n          mCacheEventListener.onEviction(cacheEvent);\n          cacheEvent.recycle();\n        }\n      }\n else {\n        oldestRemainingEntryAgeMs=Math.max(oldestRemainingEntryAgeMs,entryAgeMs);\n      }\n    }\n    mStorage.purgeUnexpectedResources();\n    if (itemsRemovedCount > 0) {\n      maybeUpdateFileCacheSize();\n      mCacheStats.increment(-itemsRemovedSize,-itemsRemovedCount);\n    }\n  }\n catch (  IOException ioe) {\n    mCacheErrorLogger.logError(CacheErrorLogger.CacheErrorCategory.EVICTION,TAG,\"clearOldEntries: \" + ioe.getMessage(),ioe);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 186,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1783,
        "startLineNumber" : 394,
        "startColumnNumber" : 4,
        "endLineNumber" : 435,
        "endColumnNumber" : 5
      },
      "nodeContext" : "synchronized (mLock) {\n  try {\n    long now=mClock.now();\n    Collection<DiskStorage.Entry> allEntries=mStorage.getEntries();\n    final long cacheSizeBeforeClearance=mCacheStats.getSize();\n    int itemsRemovedCount=0;\n    long itemsRemovedSize=0L;\n    for (    DiskStorage.Entry entry : allEntries) {\n      long entryAgeMs=Math.max(1,Math.abs(now - entry.getTimestamp()));\n      if (entryAgeMs >= cacheExpirationMs) {\n        long entryRemovedSize=mStorage.remove(entry);\n        mResourceIndex.remove(entry.getId());\n        if (entryRemovedSize > 0) {\n          itemsRemovedCount++;\n          itemsRemovedSize+=entryRemovedSize;\n          SettableCacheEvent cacheEvent=SettableCacheEvent.obtain().setResourceId(entry.getId()).setEvictionReason(CacheEventListener.EvictionReason.CONTENT_STALE).setItemSize(entryRemovedSize).setCacheSize(cacheSizeBeforeClearance - itemsRemovedSize);\n          mCacheEventListener.onEviction(cacheEvent);\n          cacheEvent.recycle();\n        }\n      }\n else {\n        oldestRemainingEntryAgeMs=Math.max(oldestRemainingEntryAgeMs,entryAgeMs);\n      }\n    }\n    mStorage.purgeUnexpectedResources();\n    if (itemsRemovedCount > 0) {\n      maybeUpdateFileCacheSize();\n      mCacheStats.increment(-itemsRemovedSize,-itemsRemovedCount);\n    }\n  }\n catch (  IOException ioe) {\n    mCacheErrorLogger.logError(CacheErrorLogger.CacheErrorCategory.EVICTION,TAG,\"clearOldEntries: \" + ioe.getMessage(),ioe);\n  }\n}\n",
      "nodeType" : "SynchronizedStatement",
      "astNodeNumber" : 188,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1872,
        "startLineNumber" : 392,
        "startColumnNumber" : 54,
        "endLineNumber" : 437,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  long oldestRemainingEntryAgeMs=0L;\nsynchronized (mLock) {\n    try {\n      long now=mClock.now();\n      Collection<DiskStorage.Entry> allEntries=mStorage.getEntries();\n      final long cacheSizeBeforeClearance=mCacheStats.getSize();\n      int itemsRemovedCount=0;\n      long itemsRemovedSize=0L;\n      for (      DiskStorage.Entry entry : allEntries) {\n        long entryAgeMs=Math.max(1,Math.abs(now - entry.getTimestamp()));\n        if (entryAgeMs >= cacheExpirationMs) {\n          long entryRemovedSize=mStorage.remove(entry);\n          mResourceIndex.remove(entry.getId());\n          if (entryRemovedSize > 0) {\n            itemsRemovedCount++;\n            itemsRemovedSize+=entryRemovedSize;\n            SettableCacheEvent cacheEvent=SettableCacheEvent.obtain().setResourceId(entry.getId()).setEvictionReason(CacheEventListener.EvictionReason.CONTENT_STALE).setItemSize(entryRemovedSize).setCacheSize(cacheSizeBeforeClearance - itemsRemovedSize);\n            mCacheEventListener.onEviction(cacheEvent);\n            cacheEvent.recycle();\n          }\n        }\n else {\n          oldestRemainingEntryAgeMs=Math.max(oldestRemainingEntryAgeMs,entryAgeMs);\n        }\n      }\n      mStorage.purgeUnexpectedResources();\n      if (itemsRemovedCount > 0) {\n        maybeUpdateFileCacheSize();\n        mCacheStats.increment(-itemsRemovedSize,-itemsRemovedCount);\n      }\n    }\n catch (    IOException ioe) {\n      mCacheErrorLogger.logError(CacheErrorLogger.CacheErrorCategory.EVICTION,TAG,\"clearOldEntries: \" + ioe.getMessage(),ioe);\n    }\n  }\n  return oldestRemainingEntryAgeMs;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 196,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2122,
        "startLineNumber" : 385,
        "startColumnNumber" : 2,
        "endLineNumber" : 437,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Deletes old cache files.\n * @param cacheExpirationMs files older than this will be deleted.\n * @return the age in ms of the oldest file remaining in the cache.\n */\n@Override public long clearOldEntries(long cacheExpirationMs){\n  long oldestRemainingEntryAgeMs=0L;\nsynchronized (mLock) {\n    try {\n      long now=mClock.now();\n      Collection<DiskStorage.Entry> allEntries=mStorage.getEntries();\n      final long cacheSizeBeforeClearance=mCacheStats.getSize();\n      int itemsRemovedCount=0;\n      long itemsRemovedSize=0L;\n      for (      DiskStorage.Entry entry : allEntries) {\n        long entryAgeMs=Math.max(1,Math.abs(now - entry.getTimestamp()));\n        if (entryAgeMs >= cacheExpirationMs) {\n          long entryRemovedSize=mStorage.remove(entry);\n          mResourceIndex.remove(entry.getId());\n          if (entryRemovedSize > 0) {\n            itemsRemovedCount++;\n            itemsRemovedSize+=entryRemovedSize;\n            SettableCacheEvent cacheEvent=SettableCacheEvent.obtain().setResourceId(entry.getId()).setEvictionReason(CacheEventListener.EvictionReason.CONTENT_STALE).setItemSize(entryRemovedSize).setCacheSize(cacheSizeBeforeClearance - itemsRemovedSize);\n            mCacheEventListener.onEviction(cacheEvent);\n            cacheEvent.recycle();\n          }\n        }\n else {\n          oldestRemainingEntryAgeMs=Math.max(oldestRemainingEntryAgeMs,entryAgeMs);\n        }\n      }\n      mStorage.purgeUnexpectedResources();\n      if (itemsRemovedCount > 0) {\n        maybeUpdateFileCacheSize();\n        mCacheStats.increment(-itemsRemovedSize,-itemsRemovedCount);\n      }\n    }\n catch (    IOException ioe) {\n      mCacheErrorLogger.logError(CacheErrorLogger.CacheErrorCategory.EVICTION,TAG,\"clearOldEntries: \" + ioe.getMessage(),ioe);\n    }\n  }\n  return oldestRemainingEntryAgeMs;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 206,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 400,
        "startColumnNumber" : 8,
        "endLineNumber" : 400,
        "endColumnNumber" : 35
      },
      "nodeContext" : "long itemsRemovedSize=0L;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 393,
    "startColumnNumber" : 37,
    "endLineNumber" : 393,
    "endColumnNumber" : 39
  }, {
    "charLength" : 2,
    "startLineNumber" : 400,
    "startColumnNumber" : 32,
    "endLineNumber" : 400,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  } ]
}