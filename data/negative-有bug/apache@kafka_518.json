{
  "id" : 518,
  "expression" : "StreamsConfig",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/streams/src/test/java/org/apache/kafka/streams/integration/StreamsUpgradeTestIntegrationTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "StreamsConfig",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 65,
      "startColumnNumber" : 24,
      "endLineNumber" : 65,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 65,
        "startColumnNumber" : 24,
        "endLineNumber" : 65,
        "endColumnNumber" : 62
      },
      "nodeContext" : "StreamsConfig.BOOTSTRAP_SERVERS_CONFIG",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 65,
        "startColumnNumber" : 16,
        "endLineNumber" : 65,
        "endColumnNumber" : 91
      },
      "nodeContext" : "mkEntry(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG,CLUSTER.bootstrapServers())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 64,
        "startColumnNumber" : 12,
        "endLineNumber" : 66,
        "endColumnNumber" : 13
      },
      "nodeContext" : "mkMap(mkEntry(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG,CLUSTER.bootstrapServers()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 148,
        "startLineNumber" : 63,
        "startColumnNumber" : 75,
        "endLineNumber" : 67,
        "endColumnNumber" : 9
      },
      "nodeContext" : "mkProperties(mkMap(mkEntry(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG,CLUSTER.bootstrapServers())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 63,
        "startColumnNumber" : 43,
        "endLineNumber" : 67,
        "endColumnNumber" : 10
      },
      "nodeContext" : "StreamsUpgradeTest.buildStreams(mkProperties(mkMap(mkEntry(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG,CLUSTER.bootstrapServers()))))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 197,
        "startLineNumber" : 63,
        "startColumnNumber" : 27,
        "endLineNumber" : 67,
        "endColumnNumber" : 10
      },
      "nodeContext" : "kafkaStreams1=StreamsUpgradeTest.buildStreams(mkProperties(mkMap(mkEntry(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG,CLUSTER.bootstrapServers()))))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 217,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 11
      },
      "nodeContext" : "final KafkaStreams kafkaStreams1=StreamsUpgradeTest.buildStreams(mkProperties(mkMap(mkEntry(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG,CLUSTER.bootstrapServers()))));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2148,
        "startLineNumber" : 62,
        "startColumnNumber" : 72,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final KafkaStreams kafkaStreams1=StreamsUpgradeTest.buildStreams(mkProperties(mkMap(mkEntry(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG,CLUSTER.bootstrapServers()))));\n  final KafkaStreams kafkaStreams2=StreamsUpgradeTest.buildStreams(mkProperties(mkMap(mkEntry(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG,CLUSTER.bootstrapServers()))));\n  final KafkaStreams kafkaStreams3=StreamsUpgradeTest.buildStreams(mkProperties(mkMap(mkEntry(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG,CLUSTER.bootstrapServers()))));\n  startSync(kafkaStreams1,kafkaStreams2,kafkaStreams3);\n  kafkaStreams1.close();\n  final AtomicInteger usedVersion4=new AtomicInteger();\n  final KafkaStreams kafkaStreams4=buildFutureStreams(usedVersion4);\n  startSync(kafkaStreams4);\n  assertThat(usedVersion4.get(),is(LATEST_SUPPORTED_VERSION));\n  kafkaStreams2.close();\n  final AtomicInteger usedVersion5=new AtomicInteger();\n  final KafkaStreams kafkaStreams5=buildFutureStreams(usedVersion5);\n  startSync(kafkaStreams5);\n  assertThat(usedVersion5.get(),is(LATEST_SUPPORTED_VERSION));\n  kafkaStreams3.close();\n  final AtomicInteger usedVersion6=new AtomicInteger();\n  final KafkaStreams kafkaStreams6=buildFutureStreams(usedVersion6);\n  startSync(kafkaStreams6);\n  retryOnExceptionWithTimeout(() -> assertThat(usedVersion6.get(),is(LATEST_SUPPORTED_VERSION + 1)));\n  retryOnExceptionWithTimeout(() -> assertThat(usedVersion5.get(),is(LATEST_SUPPORTED_VERSION + 1)));\n  retryOnExceptionWithTimeout(() -> assertThat(usedVersion4.get(),is(LATEST_SUPPORTED_VERSION + 1)));\n  kafkaStreams4.close(Duration.ZERO);\n  kafkaStreams5.close(Duration.ZERO);\n  kafkaStreams6.close(Duration.ZERO);\n  kafkaStreams4.close();\n  kafkaStreams5.close();\n  kafkaStreams6.close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 241,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2226,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testVersionProbingUpgrade() throws InterruptedException {\n  final KafkaStreams kafkaStreams1=StreamsUpgradeTest.buildStreams(mkProperties(mkMap(mkEntry(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG,CLUSTER.bootstrapServers()))));\n  final KafkaStreams kafkaStreams2=StreamsUpgradeTest.buildStreams(mkProperties(mkMap(mkEntry(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG,CLUSTER.bootstrapServers()))));\n  final KafkaStreams kafkaStreams3=StreamsUpgradeTest.buildStreams(mkProperties(mkMap(mkEntry(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG,CLUSTER.bootstrapServers()))));\n  startSync(kafkaStreams1,kafkaStreams2,kafkaStreams3);\n  kafkaStreams1.close();\n  final AtomicInteger usedVersion4=new AtomicInteger();\n  final KafkaStreams kafkaStreams4=buildFutureStreams(usedVersion4);\n  startSync(kafkaStreams4);\n  assertThat(usedVersion4.get(),is(LATEST_SUPPORTED_VERSION));\n  kafkaStreams2.close();\n  final AtomicInteger usedVersion5=new AtomicInteger();\n  final KafkaStreams kafkaStreams5=buildFutureStreams(usedVersion5);\n  startSync(kafkaStreams5);\n  assertThat(usedVersion5.get(),is(LATEST_SUPPORTED_VERSION));\n  kafkaStreams3.close();\n  final AtomicInteger usedVersion6=new AtomicInteger();\n  final KafkaStreams kafkaStreams6=buildFutureStreams(usedVersion6);\n  startSync(kafkaStreams6);\n  retryOnExceptionWithTimeout(() -> assertThat(usedVersion6.get(),is(LATEST_SUPPORTED_VERSION + 1)));\n  retryOnExceptionWithTimeout(() -> assertThat(usedVersion5.get(),is(LATEST_SUPPORTED_VERSION + 1)));\n  retryOnExceptionWithTimeout(() -> assertThat(usedVersion4.get(),is(LATEST_SUPPORTED_VERSION + 1)));\n  kafkaStreams4.close(Duration.ZERO);\n  kafkaStreams5.close(Duration.ZERO);\n  kafkaStreams6.close(Duration.ZERO);\n  kafkaStreams4.close();\n  kafkaStreams5.close();\n  kafkaStreams6.close();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 249,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 65,
        "startColumnNumber" : 16,
        "endLineNumber" : 65,
        "endColumnNumber" : 91
      },
      "nodeContext" : "mkEntry(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG,CLUSTER.bootstrapServers())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.kafka.streams.StreamsConfig"
  }, {
    "nodeContext" : "StreamsConfig",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 70,
      "startColumnNumber" : 24,
      "endLineNumber" : 70,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 70,
        "startColumnNumber" : 24,
        "endLineNumber" : 70,
        "endColumnNumber" : 62
      },
      "nodeContext" : "StreamsConfig.BOOTSTRAP_SERVERS_CONFIG",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 70,
        "startColumnNumber" : 16,
        "endLineNumber" : 70,
        "endColumnNumber" : 91
      },
      "nodeContext" : "mkEntry(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG,CLUSTER.bootstrapServers())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 69,
        "startColumnNumber" : 12,
        "endLineNumber" : 71,
        "endColumnNumber" : 13
      },
      "nodeContext" : "mkMap(mkEntry(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG,CLUSTER.bootstrapServers()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 148,
        "startLineNumber" : 68,
        "startColumnNumber" : 75,
        "endLineNumber" : 72,
        "endColumnNumber" : 9
      },
      "nodeContext" : "mkProperties(mkMap(mkEntry(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG,CLUSTER.bootstrapServers())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 68,
        "startColumnNumber" : 43,
        "endLineNumber" : 72,
        "endColumnNumber" : 10
      },
      "nodeContext" : "StreamsUpgradeTest.buildStreams(mkProperties(mkMap(mkEntry(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG,CLUSTER.bootstrapServers()))))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 197,
        "startLineNumber" : 68,
        "startColumnNumber" : 27,
        "endLineNumber" : 72,
        "endColumnNumber" : 10
      },
      "nodeContext" : "kafkaStreams2=StreamsUpgradeTest.buildStreams(mkProperties(mkMap(mkEntry(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG,CLUSTER.bootstrapServers()))))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 217,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 11
      },
      "nodeContext" : "final KafkaStreams kafkaStreams2=StreamsUpgradeTest.buildStreams(mkProperties(mkMap(mkEntry(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG,CLUSTER.bootstrapServers()))));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2148,
        "startLineNumber" : 62,
        "startColumnNumber" : 72,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final KafkaStreams kafkaStreams1=StreamsUpgradeTest.buildStreams(mkProperties(mkMap(mkEntry(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG,CLUSTER.bootstrapServers()))));\n  final KafkaStreams kafkaStreams2=StreamsUpgradeTest.buildStreams(mkProperties(mkMap(mkEntry(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG,CLUSTER.bootstrapServers()))));\n  final KafkaStreams kafkaStreams3=StreamsUpgradeTest.buildStreams(mkProperties(mkMap(mkEntry(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG,CLUSTER.bootstrapServers()))));\n  startSync(kafkaStreams1,kafkaStreams2,kafkaStreams3);\n  kafkaStreams1.close();\n  final AtomicInteger usedVersion4=new AtomicInteger();\n  final KafkaStreams kafkaStreams4=buildFutureStreams(usedVersion4);\n  startSync(kafkaStreams4);\n  assertThat(usedVersion4.get(),is(LATEST_SUPPORTED_VERSION));\n  kafkaStreams2.close();\n  final AtomicInteger usedVersion5=new AtomicInteger();\n  final KafkaStreams kafkaStreams5=buildFutureStreams(usedVersion5);\n  startSync(kafkaStreams5);\n  assertThat(usedVersion5.get(),is(LATEST_SUPPORTED_VERSION));\n  kafkaStreams3.close();\n  final AtomicInteger usedVersion6=new AtomicInteger();\n  final KafkaStreams kafkaStreams6=buildFutureStreams(usedVersion6);\n  startSync(kafkaStreams6);\n  retryOnExceptionWithTimeout(() -> assertThat(usedVersion6.get(),is(LATEST_SUPPORTED_VERSION + 1)));\n  retryOnExceptionWithTimeout(() -> assertThat(usedVersion5.get(),is(LATEST_SUPPORTED_VERSION + 1)));\n  retryOnExceptionWithTimeout(() -> assertThat(usedVersion4.get(),is(LATEST_SUPPORTED_VERSION + 1)));\n  kafkaStreams4.close(Duration.ZERO);\n  kafkaStreams5.close(Duration.ZERO);\n  kafkaStreams6.close(Duration.ZERO);\n  kafkaStreams4.close();\n  kafkaStreams5.close();\n  kafkaStreams6.close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 241,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2226,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testVersionProbingUpgrade() throws InterruptedException {\n  final KafkaStreams kafkaStreams1=StreamsUpgradeTest.buildStreams(mkProperties(mkMap(mkEntry(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG,CLUSTER.bootstrapServers()))));\n  final KafkaStreams kafkaStreams2=StreamsUpgradeTest.buildStreams(mkProperties(mkMap(mkEntry(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG,CLUSTER.bootstrapServers()))));\n  final KafkaStreams kafkaStreams3=StreamsUpgradeTest.buildStreams(mkProperties(mkMap(mkEntry(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG,CLUSTER.bootstrapServers()))));\n  startSync(kafkaStreams1,kafkaStreams2,kafkaStreams3);\n  kafkaStreams1.close();\n  final AtomicInteger usedVersion4=new AtomicInteger();\n  final KafkaStreams kafkaStreams4=buildFutureStreams(usedVersion4);\n  startSync(kafkaStreams4);\n  assertThat(usedVersion4.get(),is(LATEST_SUPPORTED_VERSION));\n  kafkaStreams2.close();\n  final AtomicInteger usedVersion5=new AtomicInteger();\n  final KafkaStreams kafkaStreams5=buildFutureStreams(usedVersion5);\n  startSync(kafkaStreams5);\n  assertThat(usedVersion5.get(),is(LATEST_SUPPORTED_VERSION));\n  kafkaStreams3.close();\n  final AtomicInteger usedVersion6=new AtomicInteger();\n  final KafkaStreams kafkaStreams6=buildFutureStreams(usedVersion6);\n  startSync(kafkaStreams6);\n  retryOnExceptionWithTimeout(() -> assertThat(usedVersion6.get(),is(LATEST_SUPPORTED_VERSION + 1)));\n  retryOnExceptionWithTimeout(() -> assertThat(usedVersion5.get(),is(LATEST_SUPPORTED_VERSION + 1)));\n  retryOnExceptionWithTimeout(() -> assertThat(usedVersion4.get(),is(LATEST_SUPPORTED_VERSION + 1)));\n  kafkaStreams4.close(Duration.ZERO);\n  kafkaStreams5.close(Duration.ZERO);\n  kafkaStreams6.close(Duration.ZERO);\n  kafkaStreams4.close();\n  kafkaStreams5.close();\n  kafkaStreams6.close();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 249,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 70,
        "startColumnNumber" : 16,
        "endLineNumber" : 70,
        "endColumnNumber" : 91
      },
      "nodeContext" : "mkEntry(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG,CLUSTER.bootstrapServers())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.kafka.streams.StreamsConfig"
  }, {
    "nodeContext" : "StreamsConfig",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 75,
      "startColumnNumber" : 24,
      "endLineNumber" : 75,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 75,
        "startColumnNumber" : 24,
        "endLineNumber" : 75,
        "endColumnNumber" : 62
      },
      "nodeContext" : "StreamsConfig.BOOTSTRAP_SERVERS_CONFIG",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 75,
        "startColumnNumber" : 16,
        "endLineNumber" : 75,
        "endColumnNumber" : 91
      },
      "nodeContext" : "mkEntry(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG,CLUSTER.bootstrapServers())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 74,
        "startColumnNumber" : 12,
        "endLineNumber" : 76,
        "endColumnNumber" : 13
      },
      "nodeContext" : "mkMap(mkEntry(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG,CLUSTER.bootstrapServers()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 148,
        "startLineNumber" : 73,
        "startColumnNumber" : 75,
        "endLineNumber" : 77,
        "endColumnNumber" : 9
      },
      "nodeContext" : "mkProperties(mkMap(mkEntry(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG,CLUSTER.bootstrapServers())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 73,
        "startColumnNumber" : 43,
        "endLineNumber" : 77,
        "endColumnNumber" : 10
      },
      "nodeContext" : "StreamsUpgradeTest.buildStreams(mkProperties(mkMap(mkEntry(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG,CLUSTER.bootstrapServers()))))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 197,
        "startLineNumber" : 73,
        "startColumnNumber" : 27,
        "endLineNumber" : 77,
        "endColumnNumber" : 10
      },
      "nodeContext" : "kafkaStreams3=StreamsUpgradeTest.buildStreams(mkProperties(mkMap(mkEntry(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG,CLUSTER.bootstrapServers()))))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 217,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 11
      },
      "nodeContext" : "final KafkaStreams kafkaStreams3=StreamsUpgradeTest.buildStreams(mkProperties(mkMap(mkEntry(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG,CLUSTER.bootstrapServers()))));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2148,
        "startLineNumber" : 62,
        "startColumnNumber" : 72,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final KafkaStreams kafkaStreams1=StreamsUpgradeTest.buildStreams(mkProperties(mkMap(mkEntry(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG,CLUSTER.bootstrapServers()))));\n  final KafkaStreams kafkaStreams2=StreamsUpgradeTest.buildStreams(mkProperties(mkMap(mkEntry(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG,CLUSTER.bootstrapServers()))));\n  final KafkaStreams kafkaStreams3=StreamsUpgradeTest.buildStreams(mkProperties(mkMap(mkEntry(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG,CLUSTER.bootstrapServers()))));\n  startSync(kafkaStreams1,kafkaStreams2,kafkaStreams3);\n  kafkaStreams1.close();\n  final AtomicInteger usedVersion4=new AtomicInteger();\n  final KafkaStreams kafkaStreams4=buildFutureStreams(usedVersion4);\n  startSync(kafkaStreams4);\n  assertThat(usedVersion4.get(),is(LATEST_SUPPORTED_VERSION));\n  kafkaStreams2.close();\n  final AtomicInteger usedVersion5=new AtomicInteger();\n  final KafkaStreams kafkaStreams5=buildFutureStreams(usedVersion5);\n  startSync(kafkaStreams5);\n  assertThat(usedVersion5.get(),is(LATEST_SUPPORTED_VERSION));\n  kafkaStreams3.close();\n  final AtomicInteger usedVersion6=new AtomicInteger();\n  final KafkaStreams kafkaStreams6=buildFutureStreams(usedVersion6);\n  startSync(kafkaStreams6);\n  retryOnExceptionWithTimeout(() -> assertThat(usedVersion6.get(),is(LATEST_SUPPORTED_VERSION + 1)));\n  retryOnExceptionWithTimeout(() -> assertThat(usedVersion5.get(),is(LATEST_SUPPORTED_VERSION + 1)));\n  retryOnExceptionWithTimeout(() -> assertThat(usedVersion4.get(),is(LATEST_SUPPORTED_VERSION + 1)));\n  kafkaStreams4.close(Duration.ZERO);\n  kafkaStreams5.close(Duration.ZERO);\n  kafkaStreams6.close(Duration.ZERO);\n  kafkaStreams4.close();\n  kafkaStreams5.close();\n  kafkaStreams6.close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 241,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2226,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testVersionProbingUpgrade() throws InterruptedException {\n  final KafkaStreams kafkaStreams1=StreamsUpgradeTest.buildStreams(mkProperties(mkMap(mkEntry(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG,CLUSTER.bootstrapServers()))));\n  final KafkaStreams kafkaStreams2=StreamsUpgradeTest.buildStreams(mkProperties(mkMap(mkEntry(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG,CLUSTER.bootstrapServers()))));\n  final KafkaStreams kafkaStreams3=StreamsUpgradeTest.buildStreams(mkProperties(mkMap(mkEntry(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG,CLUSTER.bootstrapServers()))));\n  startSync(kafkaStreams1,kafkaStreams2,kafkaStreams3);\n  kafkaStreams1.close();\n  final AtomicInteger usedVersion4=new AtomicInteger();\n  final KafkaStreams kafkaStreams4=buildFutureStreams(usedVersion4);\n  startSync(kafkaStreams4);\n  assertThat(usedVersion4.get(),is(LATEST_SUPPORTED_VERSION));\n  kafkaStreams2.close();\n  final AtomicInteger usedVersion5=new AtomicInteger();\n  final KafkaStreams kafkaStreams5=buildFutureStreams(usedVersion5);\n  startSync(kafkaStreams5);\n  assertThat(usedVersion5.get(),is(LATEST_SUPPORTED_VERSION));\n  kafkaStreams3.close();\n  final AtomicInteger usedVersion6=new AtomicInteger();\n  final KafkaStreams kafkaStreams6=buildFutureStreams(usedVersion6);\n  startSync(kafkaStreams6);\n  retryOnExceptionWithTimeout(() -> assertThat(usedVersion6.get(),is(LATEST_SUPPORTED_VERSION + 1)));\n  retryOnExceptionWithTimeout(() -> assertThat(usedVersion5.get(),is(LATEST_SUPPORTED_VERSION + 1)));\n  retryOnExceptionWithTimeout(() -> assertThat(usedVersion4.get(),is(LATEST_SUPPORTED_VERSION + 1)));\n  kafkaStreams4.close(Duration.ZERO);\n  kafkaStreams5.close(Duration.ZERO);\n  kafkaStreams6.close(Duration.ZERO);\n  kafkaStreams4.close();\n  kafkaStreams5.close();\n  kafkaStreams6.close();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 249,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 75,
        "startColumnNumber" : 16,
        "endLineNumber" : 75,
        "endColumnNumber" : 91
      },
      "nodeContext" : "mkEntry(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG,CLUSTER.bootstrapServers())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.kafka.streams.StreamsConfig"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 65,
    "startColumnNumber" : 24,
    "endLineNumber" : 65,
    "endColumnNumber" : 37
  }, {
    "charLength" : 13,
    "startLineNumber" : 70,
    "startColumnNumber" : 24,
    "endLineNumber" : 70,
    "endColumnNumber" : 37
  }, {
    "charLength" : 13,
    "startLineNumber" : 75,
    "startColumnNumber" : 24,
    "endLineNumber" : 75,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 7
  } ]
}