{
  "id" : 447,
  "expression" : "d",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/oned/UPCEReader.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "d",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 100,
      "startColumnNumber" : 22,
      "endLineNumber" : 100,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 100,
        "startColumnNumber" : 22,
        "endLineNumber" : 100,
        "endColumnNumber" : 28
      },
      "nodeContext" : "d < 10",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 254,
        "startLineNumber" : 100,
        "startColumnNumber" : 6,
        "endLineNumber" : 106,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int d=0; d < 10; d++) {\n  if (lgPatternFound == NUMSYS_AND_CHECK_DIGIT_PATTERNS[numSys][d]) {\n    resultString.insert(0,(char)('0' + numSys));\n    resultString.append((char)('0' + d));\n    return;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 43,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 270,
        "startLineNumber" : 99,
        "startColumnNumber" : 48,
        "endLineNumber" : 107,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (int d=0; d < 10; d++) {\n    if (lgPatternFound == NUMSYS_AND_CHECK_DIGIT_PATTERNS[numSys][d]) {\n      resultString.insert(0,(char)('0' + numSys));\n      resultString.append((char)('0' + d));\n      return;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 314,
        "startLineNumber" : 99,
        "startColumnNumber" : 4,
        "endLineNumber" : 107,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int numSys=0; numSys <= 1; numSys++) {\n  for (int d=0; d < 10; d++) {\n    if (lgPatternFound == NUMSYS_AND_CHECK_DIGIT_PATTERNS[numSys][d]) {\n      resultString.insert(0,(char)('0' + numSys));\n      resultString.append((char)('0' + d));\n      return;\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 55,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 380,
        "startLineNumber" : 97,
        "startColumnNumber" : 31,
        "endLineNumber" : 109,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int numSys=0; numSys <= 1; numSys++) {\n    for (int d=0; d < 10; d++) {\n      if (lgPatternFound == NUMSYS_AND_CHECK_DIGIT_PATTERNS[numSys][d]) {\n        resultString.insert(0,(char)('0' + numSys));\n        resultString.append((char)('0' + d));\n        return;\n      }\n    }\n  }\n  throw NotFoundException.getNotFoundInstance();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 60,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 509,
        "startLineNumber" : 96,
        "startColumnNumber" : 2,
        "endLineNumber" : 109,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void determineNumSysAndCheckDigit(StringBuilder resultString,int lgPatternFound) throws NotFoundException {\n  for (int numSys=0; numSys <= 1; numSys++) {\n    for (int d=0; d < 10; d++) {\n      if (lgPatternFound == NUMSYS_AND_CHECK_DIGIT_PATTERNS[numSys][d]) {\n        resultString.insert(0,(char)('0' + numSys));\n        resultString.append((char)('0' + d));\n        return;\n      }\n    }\n  }\n  throw NotFoundException.getNotFoundInstance();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 74,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 100,
        "startColumnNumber" : 22,
        "endLineNumber" : 100,
        "endColumnNumber" : 28
      },
      "nodeContext" : "d < 10",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "d",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 101,
      "startColumnNumber" : 70,
      "endLineNumber" : 101,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 101,
        "startColumnNumber" : 30,
        "endLineNumber" : 101,
        "endColumnNumber" : 72
      },
      "nodeContext" : "NUMSYS_AND_CHECK_DIGIT_PATTERNS[numSys][d]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 101,
        "startColumnNumber" : 12,
        "endLineNumber" : 101,
        "endColumnNumber" : 72
      },
      "nodeContext" : "lgPatternFound == NUMSYS_AND_CHECK_DIGIT_PATTERNS[numSys][d]",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 205,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 105,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (lgPatternFound == NUMSYS_AND_CHECK_DIGIT_PATTERNS[numSys][d]) {\n  resultString.insert(0,(char)('0' + numSys));\n  resultString.append((char)('0' + d));\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 31,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 225,
        "startLineNumber" : 100,
        "startColumnNumber" : 35,
        "endLineNumber" : 106,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (lgPatternFound == NUMSYS_AND_CHECK_DIGIT_PATTERNS[numSys][d]) {\n    resultString.insert(0,(char)('0' + numSys));\n    resultString.append((char)('0' + d));\n    return;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 254,
        "startLineNumber" : 100,
        "startColumnNumber" : 6,
        "endLineNumber" : 106,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int d=0; d < 10; d++) {\n  if (lgPatternFound == NUMSYS_AND_CHECK_DIGIT_PATTERNS[numSys][d]) {\n    resultString.insert(0,(char)('0' + numSys));\n    resultString.append((char)('0' + d));\n    return;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 43,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 270,
        "startLineNumber" : 99,
        "startColumnNumber" : 48,
        "endLineNumber" : 107,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (int d=0; d < 10; d++) {\n    if (lgPatternFound == NUMSYS_AND_CHECK_DIGIT_PATTERNS[numSys][d]) {\n      resultString.insert(0,(char)('0' + numSys));\n      resultString.append((char)('0' + d));\n      return;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 314,
        "startLineNumber" : 99,
        "startColumnNumber" : 4,
        "endLineNumber" : 107,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int numSys=0; numSys <= 1; numSys++) {\n  for (int d=0; d < 10; d++) {\n    if (lgPatternFound == NUMSYS_AND_CHECK_DIGIT_PATTERNS[numSys][d]) {\n      resultString.insert(0,(char)('0' + numSys));\n      resultString.append((char)('0' + d));\n      return;\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 55,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 380,
        "startLineNumber" : 97,
        "startColumnNumber" : 31,
        "endLineNumber" : 109,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int numSys=0; numSys <= 1; numSys++) {\n    for (int d=0; d < 10; d++) {\n      if (lgPatternFound == NUMSYS_AND_CHECK_DIGIT_PATTERNS[numSys][d]) {\n        resultString.insert(0,(char)('0' + numSys));\n        resultString.append((char)('0' + d));\n        return;\n      }\n    }\n  }\n  throw NotFoundException.getNotFoundInstance();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 60,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 509,
        "startLineNumber" : 96,
        "startColumnNumber" : 2,
        "endLineNumber" : 109,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void determineNumSysAndCheckDigit(StringBuilder resultString,int lgPatternFound) throws NotFoundException {\n  for (int numSys=0; numSys <= 1; numSys++) {\n    for (int d=0; d < 10; d++) {\n      if (lgPatternFound == NUMSYS_AND_CHECK_DIGIT_PATTERNS[numSys][d]) {\n        resultString.insert(0,(char)('0' + numSys));\n        resultString.append((char)('0' + d));\n        return;\n      }\n    }\n  }\n  throw NotFoundException.getNotFoundInstance();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 74,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 101,
        "startColumnNumber" : 12,
        "endLineNumber" : 101,
        "endColumnNumber" : 72
      },
      "nodeContext" : "lgPatternFound == NUMSYS_AND_CHECK_DIGIT_PATTERNS[numSys][d]",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "d",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 103,
      "startColumnNumber" : 44,
      "endLineNumber" : 103,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 103,
        "startColumnNumber" : 38,
        "endLineNumber" : 103,
        "endColumnNumber" : 45
      },
      "nodeContext" : "'0' + d",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 103,
        "startColumnNumber" : 37,
        "endLineNumber" : 103,
        "endColumnNumber" : 46
      },
      "nodeContext" : "('0' + d)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 103,
        "startColumnNumber" : 30,
        "endLineNumber" : 103,
        "endColumnNumber" : 46
      },
      "nodeContext" : "(char)('0' + d)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 103,
        "startColumnNumber" : 10,
        "endLineNumber" : 103,
        "endColumnNumber" : 47
      },
      "nodeContext" : "resultString.append((char)('0' + d))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 103,
        "startColumnNumber" : 10,
        "endLineNumber" : 103,
        "endColumnNumber" : 48
      },
      "nodeContext" : "resultString.append((char)('0' + d));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 101,
        "startColumnNumber" : 74,
        "endLineNumber" : 105,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  resultString.insert(0,(char)('0' + numSys));\n  resultString.append((char)('0' + d));\n  return;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 205,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 105,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (lgPatternFound == NUMSYS_AND_CHECK_DIGIT_PATTERNS[numSys][d]) {\n  resultString.insert(0,(char)('0' + numSys));\n  resultString.append((char)('0' + d));\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 31,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 225,
        "startLineNumber" : 100,
        "startColumnNumber" : 35,
        "endLineNumber" : 106,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (lgPatternFound == NUMSYS_AND_CHECK_DIGIT_PATTERNS[numSys][d]) {\n    resultString.insert(0,(char)('0' + numSys));\n    resultString.append((char)('0' + d));\n    return;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 254,
        "startLineNumber" : 100,
        "startColumnNumber" : 6,
        "endLineNumber" : 106,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int d=0; d < 10; d++) {\n  if (lgPatternFound == NUMSYS_AND_CHECK_DIGIT_PATTERNS[numSys][d]) {\n    resultString.insert(0,(char)('0' + numSys));\n    resultString.append((char)('0' + d));\n    return;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 43,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 270,
        "startLineNumber" : 99,
        "startColumnNumber" : 48,
        "endLineNumber" : 107,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (int d=0; d < 10; d++) {\n    if (lgPatternFound == NUMSYS_AND_CHECK_DIGIT_PATTERNS[numSys][d]) {\n      resultString.insert(0,(char)('0' + numSys));\n      resultString.append((char)('0' + d));\n      return;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 314,
        "startLineNumber" : 99,
        "startColumnNumber" : 4,
        "endLineNumber" : 107,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int numSys=0; numSys <= 1; numSys++) {\n  for (int d=0; d < 10; d++) {\n    if (lgPatternFound == NUMSYS_AND_CHECK_DIGIT_PATTERNS[numSys][d]) {\n      resultString.insert(0,(char)('0' + numSys));\n      resultString.append((char)('0' + d));\n      return;\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 55,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 380,
        "startLineNumber" : 97,
        "startColumnNumber" : 31,
        "endLineNumber" : 109,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int numSys=0; numSys <= 1; numSys++) {\n    for (int d=0; d < 10; d++) {\n      if (lgPatternFound == NUMSYS_AND_CHECK_DIGIT_PATTERNS[numSys][d]) {\n        resultString.insert(0,(char)('0' + numSys));\n        resultString.append((char)('0' + d));\n        return;\n      }\n    }\n  }\n  throw NotFoundException.getNotFoundInstance();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 60,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 509,
        "startLineNumber" : 96,
        "startColumnNumber" : 2,
        "endLineNumber" : 109,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void determineNumSysAndCheckDigit(StringBuilder resultString,int lgPatternFound) throws NotFoundException {\n  for (int numSys=0; numSys <= 1; numSys++) {\n    for (int d=0; d < 10; d++) {\n      if (lgPatternFound == NUMSYS_AND_CHECK_DIGIT_PATTERNS[numSys][d]) {\n        resultString.insert(0,(char)('0' + numSys));\n        resultString.append((char)('0' + d));\n        return;\n      }\n    }\n  }\n  throw NotFoundException.getNotFoundInstance();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 74,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 103,
        "startColumnNumber" : 10,
        "endLineNumber" : 103,
        "endColumnNumber" : 48
      },
      "nodeContext" : "resultString.append((char)('0' + d));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 100,
    "startColumnNumber" : 22,
    "endLineNumber" : 100,
    "endColumnNumber" : 23
  }, {
    "charLength" : 1,
    "startLineNumber" : 101,
    "startColumnNumber" : 70,
    "endLineNumber" : 101,
    "endColumnNumber" : 71
  }, {
    "charLength" : 1,
    "startLineNumber" : 103,
    "startColumnNumber" : 44,
    "endLineNumber" : 103,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 6
  } ]
}