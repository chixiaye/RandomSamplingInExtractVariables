{
  "id" : 426,
  "expression" : "new Format.Builder().setChannelCount(2).setSampleMimeType(MimeTypes.AUDIO_ALAW).setSampleRate(16_000).build()",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/rtsp/src/test/java/com/google/android/exoplayer2/source/rtsp/reader/RtpPcmReaderTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new Format.Builder().setChannelCount(2).setSampleMimeType(MimeTypes.AUDIO_ALAW).setSampleRate(16_000).build()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 197,
      "startLineNumber" : 120,
      "startColumnNumber" : 16,
      "endLineNumber" : 124,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 18,
    "astHeight" : 8,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 394,
        "startLineNumber" : 119,
        "startColumnNumber" : 12,
        "endLineNumber" : 127,
        "endColumnNumber" : 56
      },
      "nodeContext" : "new RtpPayloadFormat(new Format.Builder().setChannelCount(2).setSampleMimeType(MimeTypes.AUDIO_ALAW).setSampleRate(16_000).build(),RTP_PAYLOAD_TYPE,16_000,ImmutableMap.of())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 26,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 426,
        "startLineNumber" : 118,
        "startColumnNumber" : 8,
        "endLineNumber" : 127,
        "endColumnNumber" : 57
      },
      "nodeContext" : "new RtpPcmReader(new RtpPayloadFormat(new Format.Builder().setChannelCount(2).setSampleMimeType(MimeTypes.AUDIO_ALAW).setSampleRate(16_000).build(),RTP_PAYLOAD_TYPE,16_000,ImmutableMap.of()))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 29,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 447,
        "startLineNumber" : 117,
        "startColumnNumber" : 4,
        "endLineNumber" : 127,
        "endColumnNumber" : 57
      },
      "nodeContext" : "pcmReader=new RtpPcmReader(new RtpPayloadFormat(new Format.Builder().setChannelCount(2).setSampleMimeType(MimeTypes.AUDIO_ALAW).setSampleRate(16_000).build(),RTP_PAYLOAD_TYPE,16_000,ImmutableMap.of()))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 31,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 448,
        "startLineNumber" : 117,
        "startColumnNumber" : 4,
        "endLineNumber" : 127,
        "endColumnNumber" : 58
      },
      "nodeContext" : "pcmReader=new RtpPcmReader(new RtpPayloadFormat(new Format.Builder().setChannelCount(2).setSampleMimeType(MimeTypes.AUDIO_ALAW).setSampleRate(16_000).build(),RTP_PAYLOAD_TYPE,16_000,ImmutableMap.of()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 32,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1068,
        "startLineNumber" : 116,
        "startColumnNumber" : 50,
        "endLineNumber" : 140,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  pcmReader=new RtpPcmReader(new RtpPayloadFormat(new Format.Builder().setChannelCount(2).setSampleMimeType(MimeTypes.AUDIO_ALAW).setSampleRate(16_000).build(),RTP_PAYLOAD_TYPE,16_000,ImmutableMap.of()));\n  pcmReader.createTracks(extractorOutput,0);\n  pcmReader.onReceivingFirstPacket(PACKET_1.timestamp,PACKET_1.sequenceNumber);\n  consume(PACKET_1);\n  consume(PACKET_2);\n  FakeTrackOutput trackOutput=extractorOutput.trackOutputs.get(0);\n  assertThat(trackOutput.getSampleCount()).isEqualTo(2);\n  assertThat(trackOutput.getSampleData(0)).isEqualTo(FRAME_1_PAYLOAD);\n  assertThat(trackOutput.getSampleTimeUs(0)).isEqualTo(0);\n  assertThat(trackOutput.getSampleData(1)).isEqualTo(FRAME_2_PAYLOAD);\n  assertThat(trackOutput.getSampleTimeUs(1)).isEqualTo(96000);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 117,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1125,
        "startLineNumber" : 115,
        "startColumnNumber" : 2,
        "endLineNumber" : 140,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void consume_twoDualChannelAlawPackets(){\n  pcmReader=new RtpPcmReader(new RtpPayloadFormat(new Format.Builder().setChannelCount(2).setSampleMimeType(MimeTypes.AUDIO_ALAW).setSampleRate(16_000).build(),RTP_PAYLOAD_TYPE,16_000,ImmutableMap.of()));\n  pcmReader.createTracks(extractorOutput,0);\n  pcmReader.onReceivingFirstPacket(PACKET_1.timestamp,PACKET_1.sequenceNumber);\n  consume(PACKET_1);\n  consume(PACKET_2);\n  FakeTrackOutput trackOutput=extractorOutput.trackOutputs.get(0);\n  assertThat(trackOutput.getSampleCount()).isEqualTo(2);\n  assertThat(trackOutput.getSampleData(0)).isEqualTo(FRAME_1_PAYLOAD);\n  assertThat(trackOutput.getSampleTimeUs(0)).isEqualTo(0);\n  assertThat(trackOutput.getSampleData(1)).isEqualTo(FRAME_2_PAYLOAD);\n  assertThat(trackOutput.getSampleTimeUs(1)).isEqualTo(96000);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 123,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 394,
        "startLineNumber" : 119,
        "startColumnNumber" : 12,
        "endLineNumber" : 127,
        "endColumnNumber" : 56
      },
      "nodeContext" : "new RtpPayloadFormat(new Format.Builder().setChannelCount(2).setSampleMimeType(MimeTypes.AUDIO_ALAW).setSampleRate(16_000).build(),RTP_PAYLOAD_TYPE,16_000,ImmutableMap.of())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 26,
      "astHeight" : 9
    },
    "tokenLength" : 12,
    "type" : "com.google.android.exoplayer2.Format"
  } ],
  "positionList" : [ {
    "charLength" : 197,
    "startLineNumber" : 120,
    "startColumnNumber" : 16,
    "endLineNumber" : 124,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ ]
}