{
  "id" : 44,
  "expression" : "cleanMethods.toArray(new String[cleanMethods.size()])",
  "projectName" : "Konloch@bytecode-viewer",
  "commitID" : "9ab8ec7f8c061fb1d9b1db3e901034d162a211ff",
  "filePath" : "/plugins/XposedGenerator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "cleanMethods.toArray(new String[cleanMethods.size()])",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 53,
      "startLineNumber" : 79,
      "startColumnNumber" : 55,
      "endLineNumber" : 79,
      "endColumnNumber" : 108
    },
    "astNodeNumber" : 11,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 79,
        "startColumnNumber" : 39,
        "endLineNumber" : 79,
        "endColumnNumber" : 109
      },
      "nodeContext" : "new JComboBox<>(cleanMethods.toArray(new String[cleanMethods.size()]))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 79,
        "startColumnNumber" : 34,
        "endLineNumber" : 79,
        "endColumnNumber" : 109
      },
      "nodeContext" : "cb=new JComboBox<>(cleanMethods.toArray(new String[cleanMethods.size()]))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 79,
        "startColumnNumber" : 16,
        "endLineNumber" : 79,
        "endColumnNumber" : 110
      },
      "nodeContext" : "JComboBox<String> cb=new JComboBox<>(cleanMethods.toArray(new String[cleanMethods.size()]));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 23,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1425,
        "startLineNumber" : 78,
        "startColumnNumber" : 12,
        "endLineNumber" : 108,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  JComboBox<String> cb=new JComboBox<>(cleanMethods.toArray(new String[cleanMethods.size()]));\n  JPanel myPanel=new JPanel();\n  myPanel.add(Box.createHorizontalStrut(15));\n  myPanel.add(xposedTemplateList);\n  myPanel.add(cb);\n  int result=JOptionPane.showConfirmDialog(null,myPanel,\"Choose Template and Method for Xposed Module\",JOptionPane.OK_CANCEL_OPTION);\n  if (result == JOptionPane.OK_OPTION) {\n    System.out.println(\"SELECTED CLASS is\" + cb.getSelectedItem());\n    String selectedClass=cb.getSelectedItem().toString();\n    String selectedXposedTemplate=xposedTemplateList.getSelectedItem().toString();\n    try {\n      WriteXposedModule(selectedClass,packgExtracted,classname,selectedXposedTemplate);\n    }\n catch (    IllegalArgumentException e) {\n      e.printStackTrace();\n      JOptionPane.showMessageDialog(null,\"Error\" + e.toString());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 130,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1558,
        "startLineNumber" : 77,
        "startColumnNumber" : 12,
        "endLineNumber" : 112,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (!cleanMethods.isEmpty()) {\n  JComboBox<String> cb=new JComboBox<>(cleanMethods.toArray(new String[cleanMethods.size()]));\n  JPanel myPanel=new JPanel();\n  myPanel.add(Box.createHorizontalStrut(15));\n  myPanel.add(xposedTemplateList);\n  myPanel.add(cb);\n  int result=JOptionPane.showConfirmDialog(null,myPanel,\"Choose Template and Method for Xposed Module\",JOptionPane.OK_CANCEL_OPTION);\n  if (result == JOptionPane.OK_OPTION) {\n    System.out.println(\"SELECTED CLASS is\" + cb.getSelectedItem());\n    String selectedClass=cb.getSelectedItem().toString();\n    String selectedXposedTemplate=xposedTemplateList.getSelectedItem().toString();\n    try {\n      WriteXposedModule(selectedClass,packgExtracted,classname,selectedXposedTemplate);\n    }\n catch (    IllegalArgumentException e) {\n      e.printStackTrace();\n      JOptionPane.showMessageDialog(null,\"Error\" + e.toString());\n    }\n  }\n}\n else {\n  JOptionPane.showMessageDialog(null,\"Class Not Suitable\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 142,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2705,
        "startLineNumber" : 56,
        "startColumnNumber" : 11,
        "endLineNumber" : 113,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  byte[] cont=BytecodeViewer.getFileContents(classname.toString());\n  FernFlowerDecompiler decompilefern=new FernFlowerDecompiler();\n  String decomp=decompilefern.decompileClassNode(classNode,cont);\n  String[] xposedTemplateTypes={\"Empty\",\"Parameters\",\"Helper\"};\n  @SuppressWarnings({\"unchecked\",\"rawtypes\"}) JComboBox xposedTemplateList=new JComboBox(xposedTemplateTypes);\n  List<String> methodsExtracted=ProcessContentExtractedClass(decomp);\n  String packgExtracted=ProcessContentExtractedPackage(decomp);\n  System.out.println(\"PACKAGE NAME: \" + packgExtracted);\n  List<String> cleanMethods=null;\n  cleanMethods=ProcessCleanMethodsAll(methodsExtracted);\n  if (!cleanMethods.isEmpty()) {\n    JComboBox<String> cb=new JComboBox<>(cleanMethods.toArray(new String[cleanMethods.size()]));\n    JPanel myPanel=new JPanel();\n    myPanel.add(Box.createHorizontalStrut(15));\n    myPanel.add(xposedTemplateList);\n    myPanel.add(cb);\n    int result=JOptionPane.showConfirmDialog(null,myPanel,\"Choose Template and Method for Xposed Module\",JOptionPane.OK_CANCEL_OPTION);\n    if (result == JOptionPane.OK_OPTION) {\n      System.out.println(\"SELECTED CLASS is\" + cb.getSelectedItem());\n      String selectedClass=cb.getSelectedItem().toString();\n      String selectedXposedTemplate=xposedTemplateList.getSelectedItem().toString();\n      try {\n        WriteXposedModule(selectedClass,packgExtracted,classname,selectedXposedTemplate);\n      }\n catch (      IllegalArgumentException e) {\n        e.printStackTrace();\n        JOptionPane.showMessageDialog(null,\"Error\" + e.toString());\n      }\n    }\n  }\n else {\n    JOptionPane.showMessageDialog(null,\"Class Not Suitable\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 241,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2876,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 118,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  byte[] cont=BytecodeViewer.getFileContents(classname.toString());\n  FernFlowerDecompiler decompilefern=new FernFlowerDecompiler();\n  String decomp=decompilefern.decompileClassNode(classNode,cont);\n  String[] xposedTemplateTypes={\"Empty\",\"Parameters\",\"Helper\"};\n  @SuppressWarnings({\"unchecked\",\"rawtypes\"}) JComboBox xposedTemplateList=new JComboBox(xposedTemplateTypes);\n  List<String> methodsExtracted=ProcessContentExtractedClass(decomp);\n  String packgExtracted=ProcessContentExtractedPackage(decomp);\n  System.out.println(\"PACKAGE NAME: \" + packgExtracted);\n  List<String> cleanMethods=null;\n  cleanMethods=ProcessCleanMethodsAll(methodsExtracted);\n  if (!cleanMethods.isEmpty()) {\n    JComboBox<String> cb=new JComboBox<>(cleanMethods.toArray(new String[cleanMethods.size()]));\n    JPanel myPanel=new JPanel();\n    myPanel.add(Box.createHorizontalStrut(15));\n    myPanel.add(xposedTemplateList);\n    myPanel.add(cb);\n    int result=JOptionPane.showConfirmDialog(null,myPanel,\"Choose Template and Method for Xposed Module\",JOptionPane.OK_CANCEL_OPTION);\n    if (result == JOptionPane.OK_OPTION) {\n      System.out.println(\"SELECTED CLASS is\" + cb.getSelectedItem());\n      String selectedClass=cb.getSelectedItem().toString();\n      String selectedXposedTemplate=xposedTemplateList.getSelectedItem().toString();\n      try {\n        WriteXposedModule(selectedClass,packgExtracted,classname,selectedXposedTemplate);\n      }\n catch (      IllegalArgumentException e) {\n        e.printStackTrace();\n        JOptionPane.showMessageDialog(null,\"Error\" + e.toString());\n      }\n    }\n  }\n else {\n    JOptionPane.showMessageDialog(null,\"Class Not Suitable\");\n  }\n}\n catch (IllegalArgumentException e) {\n  e.printStackTrace();\n  JOptionPane.showMessageDialog(null,\"Error\" + e.toString());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 262,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2894,
        "startLineNumber" : 54,
        "startColumnNumber" : 106,
        "endLineNumber" : 120,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    byte[] cont=BytecodeViewer.getFileContents(classname.toString());\n    FernFlowerDecompiler decompilefern=new FernFlowerDecompiler();\n    String decomp=decompilefern.decompileClassNode(classNode,cont);\n    String[] xposedTemplateTypes={\"Empty\",\"Parameters\",\"Helper\"};\n    @SuppressWarnings({\"unchecked\",\"rawtypes\"}) JComboBox xposedTemplateList=new JComboBox(xposedTemplateTypes);\n    List<String> methodsExtracted=ProcessContentExtractedClass(decomp);\n    String packgExtracted=ProcessContentExtractedPackage(decomp);\n    System.out.println(\"PACKAGE NAME: \" + packgExtracted);\n    List<String> cleanMethods=null;\n    cleanMethods=ProcessCleanMethodsAll(methodsExtracted);\n    if (!cleanMethods.isEmpty()) {\n      JComboBox<String> cb=new JComboBox<>(cleanMethods.toArray(new String[cleanMethods.size()]));\n      JPanel myPanel=new JPanel();\n      myPanel.add(Box.createHorizontalStrut(15));\n      myPanel.add(xposedTemplateList);\n      myPanel.add(cb);\n      int result=JOptionPane.showConfirmDialog(null,myPanel,\"Choose Template and Method for Xposed Module\",JOptionPane.OK_CANCEL_OPTION);\n      if (result == JOptionPane.OK_OPTION) {\n        System.out.println(\"SELECTED CLASS is\" + cb.getSelectedItem());\n        String selectedClass=cb.getSelectedItem().toString();\n        String selectedXposedTemplate=xposedTemplateList.getSelectedItem().toString();\n        try {\n          WriteXposedModule(selectedClass,packgExtracted,classname,selectedXposedTemplate);\n        }\n catch (        IllegalArgumentException e) {\n          e.printStackTrace();\n          JOptionPane.showMessageDialog(null,\"Error\" + e.toString());\n        }\n      }\n    }\n else {\n      JOptionPane.showMessageDialog(null,\"Class Not Suitable\");\n    }\n  }\n catch (  IllegalArgumentException e) {\n    e.printStackTrace();\n    JOptionPane.showMessageDialog(null,\"Error\" + e.toString());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 263,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2996,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 120,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void ParseChosenFileContent(String classname,String containerName,ClassNode classNode){\n  try {\n    byte[] cont=BytecodeViewer.getFileContents(classname.toString());\n    FernFlowerDecompiler decompilefern=new FernFlowerDecompiler();\n    String decomp=decompilefern.decompileClassNode(classNode,cont);\n    String[] xposedTemplateTypes={\"Empty\",\"Parameters\",\"Helper\"};\n    @SuppressWarnings({\"unchecked\",\"rawtypes\"}) JComboBox xposedTemplateList=new JComboBox(xposedTemplateTypes);\n    List<String> methodsExtracted=ProcessContentExtractedClass(decomp);\n    String packgExtracted=ProcessContentExtractedPackage(decomp);\n    System.out.println(\"PACKAGE NAME: \" + packgExtracted);\n    List<String> cleanMethods=null;\n    cleanMethods=ProcessCleanMethodsAll(methodsExtracted);\n    if (!cleanMethods.isEmpty()) {\n      JComboBox<String> cb=new JComboBox<>(cleanMethods.toArray(new String[cleanMethods.size()]));\n      JPanel myPanel=new JPanel();\n      myPanel.add(Box.createHorizontalStrut(15));\n      myPanel.add(xposedTemplateList);\n      myPanel.add(cb);\n      int result=JOptionPane.showConfirmDialog(null,myPanel,\"Choose Template and Method for Xposed Module\",JOptionPane.OK_CANCEL_OPTION);\n      if (result == JOptionPane.OK_OPTION) {\n        System.out.println(\"SELECTED CLASS is\" + cb.getSelectedItem());\n        String selectedClass=cb.getSelectedItem().toString();\n        String selectedXposedTemplate=xposedTemplateList.getSelectedItem().toString();\n        try {\n          WriteXposedModule(selectedClass,packgExtracted,classname,selectedXposedTemplate);\n        }\n catch (        IllegalArgumentException e) {\n          e.printStackTrace();\n          JOptionPane.showMessageDialog(null,\"Error\" + e.toString());\n        }\n      }\n    }\n else {\n      JOptionPane.showMessageDialog(null,\"Class Not Suitable\");\n    }\n  }\n catch (  IllegalArgumentException e) {\n    e.printStackTrace();\n    JOptionPane.showMessageDialog(null,\"Error\" + e.toString());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 280,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 79,
        "startColumnNumber" : 16,
        "endLineNumber" : 79,
        "endColumnNumber" : 110
      },
      "nodeContext" : "JComboBox<String> cb=new JComboBox<>(cleanMethods.toArray(new String[cleanMethods.size()]));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 23,
      "astHeight" : 8
    },
    "tokenLength" : 5,
    "type" : "java.lang.String[]"
  } ],
  "positionList" : [ {
    "charLength" : 53,
    "startLineNumber" : 79,
    "startColumnNumber" : 55,
    "endLineNumber" : 79,
    "endColumnNumber" : 108
  } ],
  "layoutRelationDataList" : [ ]
}