{
  "id" : 123,
  "expression" : "areAttributeValuesRegexes ? valueMatchesRegex(attribute.getValue(),attributeValues) : attributeValues.contains(attribute.getValue())",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/services/src/main/java/org/keycloak/broker/saml/mappers/AdvancedAttributeToRoleMapper.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "areAttributeValuesRegexes ? valueMatchesRegex(attribute.getValue(),attributeValues) : attributeValues.contains(attribute.getValue())",
    "nodeType" : "ConditionalExpression",
    "nodePosition" : {
      "charLength" : 133,
      "startLineNumber" : 145,
      "startColumnNumber" : 42,
      "endLineNumber" : 145,
      "endColumnNumber" : 175
    },
    "astNodeNumber" : 14,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 155,
        "startLineNumber" : 145,
        "startColumnNumber" : 20,
        "endLineNumber" : 145,
        "endColumnNumber" : 175
      },
      "nodeContext" : "attributeValueMatch=areAttributeValuesRegexes ? valueMatchesRegex(attribute.getValue(),attributeValues) : attributeValues.contains(attribute.getValue())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 145,
        "startColumnNumber" : 12,
        "endLineNumber" : 145,
        "endColumnNumber" : 176
      },
      "nodeContext" : "boolean attributeValueMatch=areAttributeValuesRegexes ? valueMatchesRegex(attribute.getValue(),attributeValues) : attributeValues.contains(attribute.getValue());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 923,
        "startLineNumber" : 135,
        "startColumnNumber" : 74,
        "endLineNumber" : 149,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String attributeKey=attribute.getKey();\n  List<Object> attributeValues=attributeAssertions.stream().flatMap(statements -> statements.getAttributes().stream()).filter(choiceType -> attributeKey.equals(choiceType.getAttribute().getName()) || attributeKey.equals(choiceType.getAttribute().getFriendlyName())).flatMap(choiceType -> choiceType.getAttribute().getAttributeValue().stream()).collect(Collectors.toList());\n  boolean attributeValueMatch=areAttributeValuesRegexes ? valueMatchesRegex(attribute.getValue(),attributeValues) : attributeValues.contains(attribute.getValue());\n  if (!attributeValueMatch) {\n    return false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 989,
        "startLineNumber" : 135,
        "startColumnNumber" : 8,
        "endLineNumber" : 149,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Map.Entry<String,String> attribute : attributes.entrySet()) {\n  String attributeKey=attribute.getKey();\n  List<Object> attributeValues=attributeAssertions.stream().flatMap(statements -> statements.getAttributes().stream()).filter(choiceType -> attributeKey.equals(choiceType.getAttribute().getName()) || attributeKey.equals(choiceType.getAttribute().getFriendlyName())).flatMap(choiceType -> choiceType.getAttribute().getAttributeValue().stream()).collect(Collectors.toList());\n  boolean attributeValueMatch=areAttributeValuesRegexes ? valueMatchesRegex(attribute.getValue(),attributeValues) : attributeValues.contains(attribute.getValue());\n  if (!attributeValueMatch) {\n    return false;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 108,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1540,
        "startLineNumber" : 125,
        "startColumnNumber" : 116,
        "endLineNumber" : 152,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<String,String> attributes=mapperModel.getConfigMap(ATTRIBUTE_PROPERTY_NAME);\n  boolean areAttributeValuesRegexes=Boolean.parseBoolean(mapperModel.getConfig().get(ARE_ATTRIBUTE_VALUES_REGEX_PROPERTY_NAME));\n  AssertionType assertion=(AssertionType)context.getContextData().get(SAMLEndpoint.SAML_ASSERTION);\n  Set<AttributeStatementType> attributeAssertions=assertion.getAttributeStatements();\n  if (attributeAssertions == null) {\n    return false;\n  }\n  for (  Map.Entry<String,String> attribute : attributes.entrySet()) {\n    String attributeKey=attribute.getKey();\n    List<Object> attributeValues=attributeAssertions.stream().flatMap(statements -> statements.getAttributes().stream()).filter(choiceType -> attributeKey.equals(choiceType.getAttribute().getName()) || attributeKey.equals(choiceType.getAttribute().getFriendlyName())).flatMap(choiceType -> choiceType.getAttribute().getAttributeValue().stream()).collect(Collectors.toList());\n    boolean attributeValueMatch=areAttributeValuesRegexes ? valueMatchesRegex(attribute.getValue(),attributeValues) : attributeValues.contains(attribute.getValue());\n    if (!attributeValueMatch) {\n      return false;\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 172,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1652,
        "startLineNumber" : 125,
        "startColumnNumber" : 4,
        "endLineNumber" : 152,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected boolean applies(final IdentityProviderMapperModel mapperModel,final BrokeredIdentityContext context){\n  Map<String,String> attributes=mapperModel.getConfigMap(ATTRIBUTE_PROPERTY_NAME);\n  boolean areAttributeValuesRegexes=Boolean.parseBoolean(mapperModel.getConfig().get(ARE_ATTRIBUTE_VALUES_REGEX_PROPERTY_NAME));\n  AssertionType assertion=(AssertionType)context.getContextData().get(SAMLEndpoint.SAML_ASSERTION);\n  Set<AttributeStatementType> attributeAssertions=assertion.getAttributeStatements();\n  if (attributeAssertions == null) {\n    return false;\n  }\n  for (  Map.Entry<String,String> attribute : attributes.entrySet()) {\n    String attributeKey=attribute.getKey();\n    List<Object> attributeValues=attributeAssertions.stream().flatMap(statements -> statements.getAttributes().stream()).filter(choiceType -> attributeKey.equals(choiceType.getAttribute().getName()) || attributeKey.equals(choiceType.getAttribute().getFriendlyName())).flatMap(choiceType -> choiceType.getAttribute().getAttributeValue().stream()).collect(Collectors.toList());\n    boolean attributeValueMatch=areAttributeValuesRegexes ? valueMatchesRegex(attribute.getValue(),attributeValues) : attributeValues.contains(attribute.getValue());\n    if (!attributeValueMatch) {\n      return false;\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 186,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 145,
        "startColumnNumber" : 12,
        "endLineNumber" : 145,
        "endColumnNumber" : 176
      },
      "nodeContext" : "boolean attributeValueMatch=areAttributeValuesRegexes ? valueMatchesRegex(attribute.getValue(),attributeValues) : attributeValues.contains(attribute.getValue());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    },
    "tokenLength" : 9,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 133,
    "startLineNumber" : 145,
    "startColumnNumber" : 42,
    "endLineNumber" : 145,
    "endColumnNumber" : 175
  } ],
  "layoutRelationDataList" : [ ]
}