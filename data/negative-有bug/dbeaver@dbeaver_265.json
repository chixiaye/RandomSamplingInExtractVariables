{
  "id" : 265,
  "expression" : "DBPIdentifierCase.MIXED",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/model/impl/DBObjectNameCaseTransformer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "DBPIdentifierCase.MIXED",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 54,
      "startColumnNumber" : 44,
      "endLineNumber" : 54,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 54,
        "startColumnNumber" : 12,
        "endLineNumber" : 54,
        "endColumnNumber" : 67
      },
      "nodeContext" : "dialect.storesUnquotedCase() == DBPIdentifierCase.MIXED",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 167,
        "startLineNumber" : 53,
        "startColumnNumber" : 44,
        "endLineNumber" : 54,
        "endColumnNumber" : 67
      },
      "nodeContext" : "dataSource.getContainer().getPreferenceStore().getBoolean(ModelPreferences.META_CASE_SENSITIVE) || dialect.storesUnquotedCase() == DBPIdentifierCase.MIXED",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 189,
        "startLineNumber" : 53,
        "startColumnNumber" : 22,
        "endLineNumber" : 54,
        "endColumnNumber" : 67
      },
      "nodeContext" : "isNameCaseSensitive=dataSource.getContainer().getPreferenceStore().getBoolean(ModelPreferences.META_CASE_SENSITIVE) || dialect.storesUnquotedCase() == DBPIdentifierCase.MIXED",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 204,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 68
      },
      "nodeContext" : "final boolean isNameCaseSensitive=dataSource.getContainer().getPreferenceStore().getBoolean(ModelPreferences.META_CASE_SENSITIVE) || dialect.storesUnquotedCase() == DBPIdentifierCase.MIXED;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1171,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (value == null) {\n    return null;\n  }\n  final SQLDialect dialect=dataSource.getSQLDialect();\n  final boolean isNameCaseSensitive=dataSource.getContainer().getPreferenceStore().getBoolean(ModelPreferences.META_CASE_SENSITIVE) || dialect.storesUnquotedCase() == DBPIdentifierCase.MIXED;\n  if (isNameCaseSensitive) {\n    return value;\n  }\n  if (DBUtils.isQuotedIdentifier(dataSource,value)) {\n    if (dialect.supportsQuotedMixedCase() || dialect.supportsUnquotedMixedCase()) {\n      return value;\n    }\n    value=DBUtils.getUnQuotedIdentifier(dataSource,value);\n  }\n else {\n    if (dialect.supportsUnquotedMixedCase() || dialect.storesUnquotedCase() == null) {\n      return value;\n    }\n  }\n  String xName=dialect.storesUnquotedCase().transform(value);\n  if (!DBUtils.getQuotedIdentifier(dataSource,xName).equals(xName)) {\n    return value;\n  }\n  return xName;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1285,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Nullable public static String transformName(@NotNull DBPDataSource dataSource,@Nullable String value){\n  if (value == null) {\n    return null;\n  }\n  final SQLDialect dialect=dataSource.getSQLDialect();\n  final boolean isNameCaseSensitive=dataSource.getContainer().getPreferenceStore().getBoolean(ModelPreferences.META_CASE_SENSITIVE) || dialect.storesUnquotedCase() == DBPIdentifierCase.MIXED;\n  if (isNameCaseSensitive) {\n    return value;\n  }\n  if (DBUtils.isQuotedIdentifier(dataSource,value)) {\n    if (dialect.supportsQuotedMixedCase() || dialect.supportsUnquotedMixedCase()) {\n      return value;\n    }\n    value=DBUtils.getUnQuotedIdentifier(dataSource,value);\n  }\n else {\n    if (dialect.supportsUnquotedMixedCase() || dialect.storesUnquotedCase() == null) {\n      return value;\n    }\n  }\n  String xName=dialect.storesUnquotedCase().transform(value);\n  if (!DBUtils.getQuotedIdentifier(dataSource,xName).equals(xName)) {\n    return value;\n  }\n  return xName;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 131,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 54,
        "startColumnNumber" : 12,
        "endLineNumber" : 54,
        "endColumnNumber" : 67
      },
      "nodeContext" : "dialect.storesUnquotedCase() == DBPIdentifierCase.MIXED",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "org.jkiss.dbeaver.model.DBPIdentifierCase"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 54,
    "startColumnNumber" : 44,
    "endLineNumber" : 54,
    "endColumnNumber" : 67
  } ],
  "layoutRelationDataList" : [ ]
}