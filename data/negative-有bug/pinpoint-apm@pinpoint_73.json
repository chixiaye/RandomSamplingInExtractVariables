{
  "id" : 73,
  "expression" : "parser",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/bootstrap-core/src/test/java/com/navercorp/pinpoint/bootstrap/plugin/jdbc/interceptor/DriverConnectInterceptorTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "parser",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 47,
      "startColumnNumber" : 13,
      "endLineNumber" : 47,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 47,
        "startColumnNumber" : 13,
        "endLineNumber" : 47,
        "endColumnNumber" : 38
      },
      "nodeContext" : "parser.parse(anyString())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 39
      },
      "nodeContext" : "when(parser.parse(anyString()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 80
      },
      "nodeContext" : "when(parser.parse(anyString())).thenReturn(UnKnownDatabaseInfo.INSTANCE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 81
      },
      "nodeContext" : "when(parser.parse(anyString())).thenReturn(UnKnownDatabaseInfo.INSTANCE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1105,
        "startLineNumber" : 43,
        "startColumnNumber" : 52,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MockTraceContext mockTraceContext=new MockTraceContext();\n  MethodDescriptor mock=mock(MethodDescriptor.class);\n  JdbcUrlParser parser=mock(JdbcUrlParser.class);\n  when(parser.parse(anyString())).thenReturn(UnKnownDatabaseInfo.INSTANCE);\n  String invalidJdbcUrl=\"invalidUrl\";\n  Driver driver=mock(Driver.class);\n  DatabaseInfoAccessor setAccessor=mock(DatabaseInfoAccessor.class);\n  DatabaseInfoAccessor getAccessor=mock(DatabaseInfoAccessor.class);\n  SpanEventRecorder spanEventRecorder=mock(SpanEventRecorder.class);\n  DriverConnectInterceptor driverConnectInterceptor=new DriverConnectInterceptor(mockTraceContext,mock,parser);\n  driverConnectInterceptor.prepareAfterTrace(driver,va(invalidJdbcUrl),setAccessor,null);\n  driverConnectInterceptor.doInAfterTrace(spanEventRecorder,driver,va(invalidJdbcUrl),getAccessor,null);\n  verify(setAccessor,times(1))._$PINPOINT$_setDatabaseInfo(UnKnownDatabaseInfo.INSTANCE);\n  verify(getAccessor,times(1))._$PINPOINT$_getDatabaseInfo();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1163,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void driverConnect() throws SQLException {\n  MockTraceContext mockTraceContext=new MockTraceContext();\n  MethodDescriptor mock=mock(MethodDescriptor.class);\n  JdbcUrlParser parser=mock(JdbcUrlParser.class);\n  when(parser.parse(anyString())).thenReturn(UnKnownDatabaseInfo.INSTANCE);\n  String invalidJdbcUrl=\"invalidUrl\";\n  Driver driver=mock(Driver.class);\n  DatabaseInfoAccessor setAccessor=mock(DatabaseInfoAccessor.class);\n  DatabaseInfoAccessor getAccessor=mock(DatabaseInfoAccessor.class);\n  SpanEventRecorder spanEventRecorder=mock(SpanEventRecorder.class);\n  DriverConnectInterceptor driverConnectInterceptor=new DriverConnectInterceptor(mockTraceContext,mock,parser);\n  driverConnectInterceptor.prepareAfterTrace(driver,va(invalidJdbcUrl),setAccessor,null);\n  driverConnectInterceptor.doInAfterTrace(spanEventRecorder,driver,va(invalidJdbcUrl),getAccessor,null);\n  verify(setAccessor,times(1))._$PINPOINT$_setDatabaseInfo(UnKnownDatabaseInfo.INSTANCE);\n  verify(getAccessor,times(1))._$PINPOINT$_getDatabaseInfo();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 149,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 81
      },
      "nodeContext" : "when(parser.parse(anyString())).thenReturn(UnKnownDatabaseInfo.INSTANCE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "com.navercorp.pinpoint.bootstrap.plugin.jdbc.JdbcUrlParser"
  }, {
    "nodeContext" : "parser",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 56,
      "startColumnNumber" : 113,
      "endLineNumber" : 56,
      "endColumnNumber" : 119
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 56,
        "startColumnNumber" : 60,
        "endLineNumber" : 56,
        "endColumnNumber" : 120
      },
      "nodeContext" : "new DriverConnectInterceptor(mockTraceContext,mock,parser)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 56,
        "startColumnNumber" : 33,
        "endLineNumber" : 56,
        "endColumnNumber" : 120
      },
      "nodeContext" : "driverConnectInterceptor=new DriverConnectInterceptor(mockTraceContext,mock,parser)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 121
      },
      "nodeContext" : "DriverConnectInterceptor driverConnectInterceptor=new DriverConnectInterceptor(mockTraceContext,mock,parser);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1105,
        "startLineNumber" : 43,
        "startColumnNumber" : 52,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MockTraceContext mockTraceContext=new MockTraceContext();\n  MethodDescriptor mock=mock(MethodDescriptor.class);\n  JdbcUrlParser parser=mock(JdbcUrlParser.class);\n  when(parser.parse(anyString())).thenReturn(UnKnownDatabaseInfo.INSTANCE);\n  String invalidJdbcUrl=\"invalidUrl\";\n  Driver driver=mock(Driver.class);\n  DatabaseInfoAccessor setAccessor=mock(DatabaseInfoAccessor.class);\n  DatabaseInfoAccessor getAccessor=mock(DatabaseInfoAccessor.class);\n  SpanEventRecorder spanEventRecorder=mock(SpanEventRecorder.class);\n  DriverConnectInterceptor driverConnectInterceptor=new DriverConnectInterceptor(mockTraceContext,mock,parser);\n  driverConnectInterceptor.prepareAfterTrace(driver,va(invalidJdbcUrl),setAccessor,null);\n  driverConnectInterceptor.doInAfterTrace(spanEventRecorder,driver,va(invalidJdbcUrl),getAccessor,null);\n  verify(setAccessor,times(1))._$PINPOINT$_setDatabaseInfo(UnKnownDatabaseInfo.INSTANCE);\n  verify(getAccessor,times(1))._$PINPOINT$_getDatabaseInfo();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1163,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void driverConnect() throws SQLException {\n  MockTraceContext mockTraceContext=new MockTraceContext();\n  MethodDescriptor mock=mock(MethodDescriptor.class);\n  JdbcUrlParser parser=mock(JdbcUrlParser.class);\n  when(parser.parse(anyString())).thenReturn(UnKnownDatabaseInfo.INSTANCE);\n  String invalidJdbcUrl=\"invalidUrl\";\n  Driver driver=mock(Driver.class);\n  DatabaseInfoAccessor setAccessor=mock(DatabaseInfoAccessor.class);\n  DatabaseInfoAccessor getAccessor=mock(DatabaseInfoAccessor.class);\n  SpanEventRecorder spanEventRecorder=mock(SpanEventRecorder.class);\n  DriverConnectInterceptor driverConnectInterceptor=new DriverConnectInterceptor(mockTraceContext,mock,parser);\n  driverConnectInterceptor.prepareAfterTrace(driver,va(invalidJdbcUrl),setAccessor,null);\n  driverConnectInterceptor.doInAfterTrace(spanEventRecorder,driver,va(invalidJdbcUrl),getAccessor,null);\n  verify(setAccessor,times(1))._$PINPOINT$_setDatabaseInfo(UnKnownDatabaseInfo.INSTANCE);\n  verify(getAccessor,times(1))._$PINPOINT$_getDatabaseInfo();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 149,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 121
      },
      "nodeContext" : "DriverConnectInterceptor driverConnectInterceptor=new DriverConnectInterceptor(mockTraceContext,mock,parser);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.navercorp.pinpoint.bootstrap.plugin.jdbc.JdbcUrlParser"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 47,
    "startColumnNumber" : 13,
    "endLineNumber" : 47,
    "endColumnNumber" : 19
  }, {
    "charLength" : 6,
    "startLineNumber" : 56,
    "startColumnNumber" : 113,
    "endLineNumber" : 56,
    "endColumnNumber" : 119
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}