{
  "id" : 124,
  "expression" : "data[p++] != 0",
  "projectName" : "antlr@antlr4",
  "commitID" : "f2b93e550cd912be3973743d09206db98f4092c9",
  "filePath" : "/tool-testsuite/test/org/antlr/v4/test/tool/ATNDescriber.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "data[p++] != 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 143,
      "startColumnNumber" : 25,
      "endLineNumber" : 143,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 6,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 143,
        "startColumnNumber" : 11,
        "endLineNumber" : 143,
        "endColumnNumber" : 39
      },
      "nodeContext" : "containsEof=data[p++] != 0",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 143,
        "startColumnNumber" : 3,
        "endLineNumber" : 143,
        "endColumnNumber" : 40
      },
      "nodeContext" : "boolean containsEof=data[p++] != 0;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 436,
        "startLineNumber" : 140,
        "startColumnNumber" : 30,
        "endLineNumber" : 158,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int nintervals=data[p++];\n  buf.append(i).append(\":\");\n  boolean containsEof=data[p++] != 0;\n  if (containsEof) {\n    buf.append(getTokenName(Token.EOF));\n  }\n  for (int j=0; j < nintervals; j++) {\n    if (containsEof || j > 0) {\n      buf.append(\", \");\n    }\n    int a=data[p++];\n    int b=data[p++];\n    buf.append(getTokenName(a)).append(\"..\").append(getTokenName(b));\n  }\n  buf.append(\"\\n\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 464,
        "startLineNumber" : 140,
        "startColumnNumber" : 2,
        "endLineNumber" : 158,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=0; i < nsets; i++) {\n  int nintervals=data[p++];\n  buf.append(i).append(\":\");\n  boolean containsEof=data[p++] != 0;\n  if (containsEof) {\n    buf.append(getTokenName(Token.EOF));\n  }\n  for (int j=0; j < nintervals; j++) {\n    if (containsEof || j > 0) {\n      buf.append(\", \");\n    }\n    int a=data[p++];\n    int b=data[p++];\n    buf.append(getTokenName(a)).append(\"..\").append(getTokenName(b));\n  }\n  buf.append(\"\\n\");\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 110,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 486,
        "startLineNumber" : 139,
        "startColumnNumber" : 73,
        "endLineNumber" : 160,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  for (int i=0; i < nsets; i++) {\n    int nintervals=data[p++];\n    buf.append(i).append(\":\");\n    boolean containsEof=data[p++] != 0;\n    if (containsEof) {\n      buf.append(getTokenName(Token.EOF));\n    }\n    for (int j=0; j < nintervals; j++) {\n      if (containsEof || j > 0) {\n        buf.append(\", \");\n      }\n      int a=data[p++];\n      int b=data[p++];\n      buf.append(getTokenName(a)).append(\"..\").append(getTokenName(b));\n    }\n    buf.append(\"\\n\");\n  }\n  return p;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 558,
        "startLineNumber" : 139,
        "startColumnNumber" : 1,
        "endLineNumber" : 160,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private int appendSets(StringBuilder buf,int[] data,int p,int nsets){\n  for (int i=0; i < nsets; i++) {\n    int nintervals=data[p++];\n    buf.append(i).append(\":\");\n    boolean containsEof=data[p++] != 0;\n    if (containsEof) {\n      buf.append(getTokenName(Token.EOF));\n    }\n    for (int j=0; j < nintervals; j++) {\n      if (containsEof || j > 0) {\n        buf.append(\", \");\n      }\n      int a=data[p++];\n      int b=data[p++];\n      buf.append(getTokenName(a)).append(\"..\").append(getTokenName(b));\n    }\n    buf.append(\"\\n\");\n  }\n  return p;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 132,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 143,
        "startColumnNumber" : 3,
        "endLineNumber" : 143,
        "endColumnNumber" : 40
      },
      "nodeContext" : "boolean containsEof=data[p++] != 0;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 143,
    "startColumnNumber" : 25,
    "endLineNumber" : 143,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ ]
}