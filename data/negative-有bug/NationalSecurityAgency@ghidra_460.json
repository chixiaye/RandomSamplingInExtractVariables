{
  "id" : 460,
  "expression" : "input0.getOffset()",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Features/Base/src/main/java/ghidra/app/util/pcode/PcodeFormatter.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "input0.getOffset()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 375,
      "startColumnNumber" : 43,
      "endLineNumber" : 375,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 375,
        "startColumnNumber" : 43,
        "endLineNumber" : 375,
        "endColumnNumber" : 71
      },
      "nodeContext" : "input0.getOffset().getType()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 375,
        "startColumnNumber" : 43,
        "endLineNumber" : 375,
        "endColumnNumber" : 88
      },
      "nodeContext" : "input0.getOffset().getType() != ConstTpl.REAL",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 375,
        "startColumnNumber" : 6,
        "endLineNumber" : 375,
        "endColumnNumber" : 88
      },
      "nodeContext" : "!input0.getSpace().isConstSpace() || input0.getOffset().getType() != ConstTpl.REAL",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 179,
        "startLineNumber" : 375,
        "startColumnNumber" : 2,
        "endLineNumber" : 377,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (!input0.getSpace().isConstSpace() || input0.getOffset().getType() != ConstTpl.REAL) {\n  throw new RuntimeException(\"Expected constant input[0] for CALLOTHER pcode op\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 696,
        "startLineNumber" : 373,
        "startColumnNumber" : 36,
        "endLineNumber" : 392,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (!input0.getSpace().isConstSpace() || input0.getOffset().getType() != ConstTpl.REAL) {\n    throw new RuntimeException(\"Expected constant input[0] for CALLOTHER pcode op\");\n  }\n  if (!(language instanceof SleighLanguage)) {\n    throw new RuntimeException(\"Expected Sleigh language for CALLOTHER op\");\n  }\n  int id=(int)input0.getOffset().getReal();\n  String psuedoOp=((SleighLanguage)language).getUserDefinedOpName(id);\n  if (psuedoOp == null) {\n    Msg.error(PcodeFormatter.class,\"Psuedo-op index not found: \" + id);\n    psuedoOp=\"unknown\";\n  }\n  lineList.add(QUOTE);\n  lineList.add(new AttributedString(psuedoOp,Color.BLUE,metrics));\n  lineList.add(QUOTE);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 804,
        "startLineNumber" : 372,
        "startColumnNumber" : 1,
        "endLineNumber" : 392,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private void formatCallOtherName(Language language,VarnodeTpl input0,List<AttributedString> lineList){\n  if (!input0.getSpace().isConstSpace() || input0.getOffset().getType() != ConstTpl.REAL) {\n    throw new RuntimeException(\"Expected constant input[0] for CALLOTHER pcode op\");\n  }\n  if (!(language instanceof SleighLanguage)) {\n    throw new RuntimeException(\"Expected Sleigh language for CALLOTHER op\");\n  }\n  int id=(int)input0.getOffset().getReal();\n  String psuedoOp=((SleighLanguage)language).getUserDefinedOpName(id);\n  if (psuedoOp == null) {\n    Msg.error(PcodeFormatter.class,\"Psuedo-op index not found: \" + id);\n    psuedoOp=\"unknown\";\n  }\n  lineList.add(QUOTE);\n  lineList.add(new AttributedString(psuedoOp,Color.BLUE,metrics));\n  lineList.add(QUOTE);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 121,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 375,
        "startColumnNumber" : 6,
        "endLineNumber" : 375,
        "endColumnNumber" : 88
      },
      "nodeContext" : "!input0.getSpace().isConstSpace() || input0.getOffset().getType() != ConstTpl.REAL",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "ghidra.app.plugin.processors.sleigh.template.ConstTpl"
  }, {
    "nodeContext" : "input0.getOffset()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 383,
      "startColumnNumber" : 17,
      "endLineNumber" : 383,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 383,
        "startColumnNumber" : 17,
        "endLineNumber" : 383,
        "endColumnNumber" : 45
      },
      "nodeContext" : "input0.getOffset().getReal()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 383,
        "startColumnNumber" : 11,
        "endLineNumber" : 383,
        "endColumnNumber" : 45
      },
      "nodeContext" : "(int)input0.getOffset().getReal()",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 383,
        "startColumnNumber" : 6,
        "endLineNumber" : 383,
        "endColumnNumber" : 45
      },
      "nodeContext" : "id=(int)input0.getOffset().getReal()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 383,
        "startColumnNumber" : 2,
        "endLineNumber" : 383,
        "endColumnNumber" : 46
      },
      "nodeContext" : "int id=(int)input0.getOffset().getReal();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 696,
        "startLineNumber" : 373,
        "startColumnNumber" : 36,
        "endLineNumber" : 392,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (!input0.getSpace().isConstSpace() || input0.getOffset().getType() != ConstTpl.REAL) {\n    throw new RuntimeException(\"Expected constant input[0] for CALLOTHER pcode op\");\n  }\n  if (!(language instanceof SleighLanguage)) {\n    throw new RuntimeException(\"Expected Sleigh language for CALLOTHER op\");\n  }\n  int id=(int)input0.getOffset().getReal();\n  String psuedoOp=((SleighLanguage)language).getUserDefinedOpName(id);\n  if (psuedoOp == null) {\n    Msg.error(PcodeFormatter.class,\"Psuedo-op index not found: \" + id);\n    psuedoOp=\"unknown\";\n  }\n  lineList.add(QUOTE);\n  lineList.add(new AttributedString(psuedoOp,Color.BLUE,metrics));\n  lineList.add(QUOTE);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 804,
        "startLineNumber" : 372,
        "startColumnNumber" : 1,
        "endLineNumber" : 392,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private void formatCallOtherName(Language language,VarnodeTpl input0,List<AttributedString> lineList){\n  if (!input0.getSpace().isConstSpace() || input0.getOffset().getType() != ConstTpl.REAL) {\n    throw new RuntimeException(\"Expected constant input[0] for CALLOTHER pcode op\");\n  }\n  if (!(language instanceof SleighLanguage)) {\n    throw new RuntimeException(\"Expected Sleigh language for CALLOTHER op\");\n  }\n  int id=(int)input0.getOffset().getReal();\n  String psuedoOp=((SleighLanguage)language).getUserDefinedOpName(id);\n  if (psuedoOp == null) {\n    Msg.error(PcodeFormatter.class,\"Psuedo-op index not found: \" + id);\n    psuedoOp=\"unknown\";\n  }\n  lineList.add(QUOTE);\n  lineList.add(new AttributedString(psuedoOp,Color.BLUE,metrics));\n  lineList.add(QUOTE);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 121,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 383,
        "startColumnNumber" : 2,
        "endLineNumber" : 383,
        "endColumnNumber" : 46
      },
      "nodeContext" : "int id=(int)input0.getOffset().getReal();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "ghidra.app.plugin.processors.sleigh.template.ConstTpl"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 375,
    "startColumnNumber" : 43,
    "endLineNumber" : 375,
    "endColumnNumber" : 61
  }, {
    "charLength" : 18,
    "startLineNumber" : 383,
    "startColumnNumber" : 17,
    "endLineNumber" : 383,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}