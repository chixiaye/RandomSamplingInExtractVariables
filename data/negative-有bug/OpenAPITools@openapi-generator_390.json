{
  "id" : 390,
  "expression" : "tagsArray",
  "projectName" : "OpenAPITools@openapi-generator",
  "commitID" : "9e1972bb1d3a4f1e3f47c87613f4050feada0146",
  "filePath" : "/samples/server/petstore/java-play-framework-no-exception-handling/app/controllers/PetApiController.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "tagsArray",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 89,
      "startColumnNumber" : 12,
      "endLineNumber" : 89,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 89,
        "startColumnNumber" : 12,
        "endLineNumber" : 89,
        "endColumnNumber" : 29
      },
      "nodeContext" : "tagsArray == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 91,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (tagsArray == null) {\n  throw new IllegalArgumentException(\"'tags' parameter is required\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 566,
        "startLineNumber" : 87,
        "startColumnNumber" : 56,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String[] tagsArray=request.queryString().get(\"tags\");\n  if (tagsArray == null) {\n    throw new IllegalArgumentException(\"'tags' parameter is required\");\n  }\n  List<String> tagsList=OpenAPIUtils.parametersToList(\"csv\",tagsArray);\n  List<String> tags=new ArrayList<>();\n  for (  String curParam : tagsList) {\n    if (!curParam.isEmpty()) {\n      tags.add(curParam);\n    }\n  }\n  return imp.findPetsByTagsHttp(request,tags);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 633,
        "startLineNumber" : 86,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@ApiAction public Result findPetsByTags(Http.Request request){\n  String[] tagsArray=request.queryString().get(\"tags\");\n  if (tagsArray == null) {\n    throw new IllegalArgumentException(\"'tags' parameter is required\");\n  }\n  List<String> tagsList=OpenAPIUtils.parametersToList(\"csv\",tagsArray);\n  List<String> tags=new ArrayList<>();\n  for (  String curParam : tagsList) {\n    if (!curParam.isEmpty()) {\n      tags.add(curParam);\n    }\n  }\n  return imp.findPetsByTagsHttp(request,tags);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 86,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 89,
        "startColumnNumber" : 12,
        "endLineNumber" : 89,
        "endColumnNumber" : 29
      },
      "nodeContext" : "tagsArray == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String[]"
  }, {
    "nodeContext" : "tagsArray",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 92,
      "startColumnNumber" : 69,
      "endLineNumber" : 92,
      "endColumnNumber" : 78
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 92,
        "startColumnNumber" : 32,
        "endLineNumber" : 92,
        "endColumnNumber" : 79
      },
      "nodeContext" : "OpenAPIUtils.parametersToList(\"csv\",tagsArray)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 92,
        "startColumnNumber" : 21,
        "endLineNumber" : 92,
        "endColumnNumber" : 79
      },
      "nodeContext" : "tagsList=OpenAPIUtils.parametersToList(\"csv\",tagsArray)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 92,
        "startColumnNumber" : 8,
        "endLineNumber" : 92,
        "endColumnNumber" : 80
      },
      "nodeContext" : "List<String> tagsList=OpenAPIUtils.parametersToList(\"csv\",tagsArray);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 566,
        "startLineNumber" : 87,
        "startColumnNumber" : 56,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String[] tagsArray=request.queryString().get(\"tags\");\n  if (tagsArray == null) {\n    throw new IllegalArgumentException(\"'tags' parameter is required\");\n  }\n  List<String> tagsList=OpenAPIUtils.parametersToList(\"csv\",tagsArray);\n  List<String> tags=new ArrayList<>();\n  for (  String curParam : tagsList) {\n    if (!curParam.isEmpty()) {\n      tags.add(curParam);\n    }\n  }\n  return imp.findPetsByTagsHttp(request,tags);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 633,
        "startLineNumber" : 86,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@ApiAction public Result findPetsByTags(Http.Request request){\n  String[] tagsArray=request.queryString().get(\"tags\");\n  if (tagsArray == null) {\n    throw new IllegalArgumentException(\"'tags' parameter is required\");\n  }\n  List<String> tagsList=OpenAPIUtils.parametersToList(\"csv\",tagsArray);\n  List<String> tags=new ArrayList<>();\n  for (  String curParam : tagsList) {\n    if (!curParam.isEmpty()) {\n      tags.add(curParam);\n    }\n  }\n  return imp.findPetsByTagsHttp(request,tags);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 86,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 92,
        "startColumnNumber" : 8,
        "endLineNumber" : 92,
        "endColumnNumber" : 80
      },
      "nodeContext" : "List<String> tagsList=OpenAPIUtils.parametersToList(\"csv\",tagsArray);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String[]"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 89,
    "startColumnNumber" : 12,
    "endLineNumber" : 89,
    "endColumnNumber" : 21
  }, {
    "charLength" : 9,
    "startLineNumber" : 92,
    "startColumnNumber" : 69,
    "endLineNumber" : 92,
    "endColumnNumber" : 78
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}