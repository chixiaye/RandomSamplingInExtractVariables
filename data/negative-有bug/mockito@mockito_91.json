{
  "id" : 91,
  "expression" : "\"or\"",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/subprojects/android/src/main/java/org/mockito/android/internal/creation/AndroidLoadingStrategy.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"or\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 35,
      "startColumnNumber" : 20,
      "endLineNumber" : 35,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 647,
        "startLineNumber" : 27,
        "startColumnNumber" : 39,
        "endLineNumber" : 37,
        "endColumnNumber" : 13
      },
      "nodeContext" : "join(\"Could not look up implicit location for storing generated classes\",\"\",\"You can configure an explicit location by setting the system property\",\"'org.mockito.android.target' to a folder for storing generated class files\",\"This location must be in private scope for most API versions, for example:\",\"\",\"MyActivity.this.getDir(\\\"target\\\", Context.MODE_PRIVATE)\",\"or\",\"getInstrumentation().getTargetContext().getCacheDir().getPath()\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 669,
        "startLineNumber" : 27,
        "startColumnNumber" : 18,
        "endLineNumber" : 37,
        "endColumnNumber" : 14
      },
      "nodeContext" : "new MockitoException(join(\"Could not look up implicit location for storing generated classes\",\"\",\"You can configure an explicit location by setting the system property\",\"'org.mockito.android.target' to a folder for storing generated class files\",\"This location must be in private scope for most API versions, for example:\",\"\",\"MyActivity.this.getDir(\\\"target\\\", Context.MODE_PRIVATE)\",\"or\",\"getInstrumentation().getTargetContext().getCacheDir().getPath()\"))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 14,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 676,
        "startLineNumber" : 27,
        "startColumnNumber" : 12,
        "endLineNumber" : 37,
        "endColumnNumber" : 15
      },
      "nodeContext" : "throw new MockitoException(join(\"Could not look up implicit location for storing generated classes\",\"\",\"You can configure an explicit location by setting the system property\",\"'org.mockito.android.target' to a folder for storing generated class files\",\"This location must be in private scope for most API versions, for example:\",\"\",\"MyActivity.this.getDir(\\\"target\\\", Context.MODE_PRIVATE)\",\"or\",\"getInstrumentation().getTargetContext().getCacheDir().getPath()\"));\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 702,
        "startLineNumber" : 26,
        "startColumnNumber" : 28,
        "endLineNumber" : 38,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  throw new MockitoException(join(\"Could not look up implicit location for storing generated classes\",\"\",\"You can configure an explicit location by setting the system property\",\"'org.mockito.android.target' to a folder for storing generated class files\",\"This location must be in private scope for most API versions, for example:\",\"\",\"MyActivity.this.getDir(\\\"target\\\", Context.MODE_PRIVATE)\",\"or\",\"getInstrumentation().getTargetContext().getCacheDir().getPath()\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 722,
        "startLineNumber" : 26,
        "startColumnNumber" : 8,
        "endLineNumber" : 38,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (target == null) {\n  throw new MockitoException(join(\"Could not look up implicit location for storing generated classes\",\"\",\"You can configure an explicit location by setting the system property\",\"'org.mockito.android.target' to a folder for storing generated class files\",\"This location must be in private scope for most API versions, for example:\",\"\",\"MyActivity.this.getDir(\\\"target\\\", Context.MODE_PRIVATE)\",\"or\",\"getInstrumentation().getTargetContext().getCacheDir().getPath()\"));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 861,
        "startLineNumber" : 24,
        "startColumnNumber" : 126,
        "endLineNumber" : 40,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  File target=AndroidTempFileLocator.target;\n  if (target == null) {\n    throw new MockitoException(join(\"Could not look up implicit location for storing generated classes\",\"\",\"You can configure an explicit location by setting the system property\",\"'org.mockito.android.target' to a folder for storing generated class files\",\"This location must be in private scope for most API versions, for example:\",\"\",\"MyActivity.this.getDir(\\\"target\\\", Context.MODE_PRIVATE)\",\"or\",\"getInstrumentation().getTargetContext().getCacheDir().getPath()\"));\n  }\n  return new AndroidClassLoadingStrategy.Injecting(target);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 998,
        "startLineNumber" : 23,
        "startColumnNumber" : 4,
        "endLineNumber" : 40,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public ClassLoadingStrategy<ClassLoader> resolveStrategy(Class<?> mockedType,ClassLoader classLoader,boolean localMock){\n  File target=AndroidTempFileLocator.target;\n  if (target == null) {\n    throw new MockitoException(join(\"Could not look up implicit location for storing generated classes\",\"\",\"You can configure an explicit location by setting the system property\",\"'org.mockito.android.target' to a folder for storing generated class files\",\"This location must be in private scope for most API versions, for example:\",\"\",\"MyActivity.this.getDir(\\\"target\\\", Context.MODE_PRIVATE)\",\"or\",\"getInstrumentation().getTargetContext().getCacheDir().getPath()\"));\n  }\n  return new AndroidClassLoadingStrategy.Injecting(target);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 59,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 647,
        "startLineNumber" : 27,
        "startColumnNumber" : 39,
        "endLineNumber" : 37,
        "endColumnNumber" : 13
      },
      "nodeContext" : "join(\"Could not look up implicit location for storing generated classes\",\"\",\"You can configure an explicit location by setting the system property\",\"'org.mockito.android.target' to a folder for storing generated class files\",\"This location must be in private scope for most API versions, for example:\",\"\",\"MyActivity.this.getDir(\\\"target\\\", Context.MODE_PRIVATE)\",\"or\",\"getInstrumentation().getTargetContext().getCacheDir().getPath()\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 35,
    "startColumnNumber" : 20,
    "endLineNumber" : 35,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ ]
}