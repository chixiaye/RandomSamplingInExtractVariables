{
  "id" : 369,
  "expression" : "\"Password and confirmation doesn't match\"",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/services/src/main/java/org/keycloak/services/resources/WelcomeResource.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Password and confirmation doesn't match\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 41,
      "startLineNumber" : 130,
      "startColumnNumber" : 47,
      "endLineNumber" : 130,
      "endColumnNumber" : 88
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 130,
        "startColumnNumber" : 23,
        "endLineNumber" : 130,
        "endColumnNumber" : 89
      },
      "nodeContext" : "createWelcomePage(null,\"Password and confirmation doesn't match\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 130,
        "startColumnNumber" : 16,
        "endLineNumber" : 130,
        "endColumnNumber" : 90
      },
      "nodeContext" : "return createWelcomePage(null,\"Password and confirmation doesn't match\");\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 129,
        "startColumnNumber" : 56,
        "endLineNumber" : 131,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  return createWelcomePage(null,\"Password and confirmation doesn't match\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 150,
        "startLineNumber" : 129,
        "startColumnNumber" : 12,
        "endLineNumber" : 131,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!password.equals(passwordConfirmation)) {\n  return createWelcomePage(null,\"Password and confirmation doesn't match\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1669,
        "startLineNumber" : 105,
        "startColumnNumber" : 15,
        "endLineNumber" : 146,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!isLocal()) {\n    ServicesLogger.LOGGER.rejectedNonLocalAttemptToCreateInitialUser(session.getContext().getConnection().getRemoteAddr());\n    throw new WebApplicationException(Response.Status.BAD_REQUEST);\n  }\n  csrfCheck(formData);\n  String username=formData.getFirst(\"username\");\n  String password=formData.getFirst(\"password\");\n  String passwordConfirmation=formData.getFirst(\"passwordConfirmation\");\n  if (username != null) {\n    username=username.trim();\n  }\n  if (username == null || username.length() == 0) {\n    return createWelcomePage(null,\"Username is missing\");\n  }\n  if (password == null || password.length() == 0) {\n    return createWelcomePage(null,\"Password is missing\");\n  }\n  if (!password.equals(passwordConfirmation)) {\n    return createWelcomePage(null,\"Password and confirmation doesn't match\");\n  }\n  expireCsrfCookie();\n  ApplianceBootstrap applianceBootstrap=new ApplianceBootstrap(session);\n  if (applianceBootstrap.isNoMasterUser()) {\n    setBootstrap(false);\n    applianceBootstrap.createMasterRealmUser(username,password);\n    ServicesLogger.LOGGER.createdInitialAdminUser(username);\n    return createWelcomePage(\"User created\",null);\n  }\n else {\n    ServicesLogger.LOGGER.initialUserAlreadyCreated();\n    return createWelcomePage(null,\"Users already exists\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 165,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1760,
        "startLineNumber" : 103,
        "startColumnNumber" : 8,
        "endLineNumber" : 146,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!shouldBootstrap()) {\n  return createWelcomePage(null,null);\n}\n else {\n  if (!isLocal()) {\n    ServicesLogger.LOGGER.rejectedNonLocalAttemptToCreateInitialUser(session.getContext().getConnection().getRemoteAddr());\n    throw new WebApplicationException(Response.Status.BAD_REQUEST);\n  }\n  csrfCheck(formData);\n  String username=formData.getFirst(\"username\");\n  String password=formData.getFirst(\"password\");\n  String passwordConfirmation=formData.getFirst(\"passwordConfirmation\");\n  if (username != null) {\n    username=username.trim();\n  }\n  if (username == null || username.length() == 0) {\n    return createWelcomePage(null,\"Username is missing\");\n  }\n  if (password == null || password.length() == 0) {\n    return createWelcomePage(null,\"Password is missing\");\n  }\n  if (!password.equals(passwordConfirmation)) {\n    return createWelcomePage(null,\"Password and confirmation doesn't match\");\n  }\n  expireCsrfCookie();\n  ApplianceBootstrap applianceBootstrap=new ApplianceBootstrap(session);\n  if (applianceBootstrap.isNoMasterUser()) {\n    setBootstrap(false);\n    applianceBootstrap.createMasterRealmUser(username,password);\n    ServicesLogger.LOGGER.createdInitialAdminUser(username);\n    return createWelcomePage(\"User created\",null);\n  }\n else {\n    ServicesLogger.LOGGER.initialUserAlreadyCreated();\n    return createWelcomePage(null,\"Users already exists\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 175,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1803,
        "startLineNumber" : 100,
        "startColumnNumber" : 78,
        "endLineNumber" : 147,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  checkBootstrap();\n  if (!shouldBootstrap()) {\n    return createWelcomePage(null,null);\n  }\n else {\n    if (!isLocal()) {\n      ServicesLogger.LOGGER.rejectedNonLocalAttemptToCreateInitialUser(session.getContext().getConnection().getRemoteAddr());\n      throw new WebApplicationException(Response.Status.BAD_REQUEST);\n    }\n    csrfCheck(formData);\n    String username=formData.getFirst(\"username\");\n    String password=formData.getFirst(\"password\");\n    String passwordConfirmation=formData.getFirst(\"passwordConfirmation\");\n    if (username != null) {\n      username=username.trim();\n    }\n    if (username == null || username.length() == 0) {\n      return createWelcomePage(null,\"Username is missing\");\n    }\n    if (password == null || password.length() == 0) {\n      return createWelcomePage(null,\"Password is missing\");\n    }\n    if (!password.equals(passwordConfirmation)) {\n      return createWelcomePage(null,\"Password and confirmation doesn't match\");\n    }\n    expireCsrfCookie();\n    ApplianceBootstrap applianceBootstrap=new ApplianceBootstrap(session);\n    if (applianceBootstrap.isNoMasterUser()) {\n      setBootstrap(false);\n      applianceBootstrap.createMasterRealmUser(username,password);\n      ServicesLogger.LOGGER.createdInitialAdminUser(username);\n      return createWelcomePage(\"User created\",null);\n    }\n else {\n      ServicesLogger.LOGGER.initialUserAlreadyCreated();\n      return createWelcomePage(null,\"Users already exists\");\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 179,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1981,
        "startLineNumber" : 97,
        "startColumnNumber" : 4,
        "endLineNumber" : 147,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@POST @Consumes(MediaType.APPLICATION_FORM_URLENCODED) @Produces(MediaType.TEXT_HTML_UTF_8) public Response createUser(final MultivaluedMap<String,String> formData){\n  checkBootstrap();\n  if (!shouldBootstrap()) {\n    return createWelcomePage(null,null);\n  }\n else {\n    if (!isLocal()) {\n      ServicesLogger.LOGGER.rejectedNonLocalAttemptToCreateInitialUser(session.getContext().getConnection().getRemoteAddr());\n      throw new WebApplicationException(Response.Status.BAD_REQUEST);\n    }\n    csrfCheck(formData);\n    String username=formData.getFirst(\"username\");\n    String password=formData.getFirst(\"password\");\n    String passwordConfirmation=formData.getFirst(\"passwordConfirmation\");\n    if (username != null) {\n      username=username.trim();\n    }\n    if (username == null || username.length() == 0) {\n      return createWelcomePage(null,\"Username is missing\");\n    }\n    if (password == null || password.length() == 0) {\n      return createWelcomePage(null,\"Password is missing\");\n    }\n    if (!password.equals(passwordConfirmation)) {\n      return createWelcomePage(null,\"Password and confirmation doesn't match\");\n    }\n    expireCsrfCookie();\n    ApplianceBootstrap applianceBootstrap=new ApplianceBootstrap(session);\n    if (applianceBootstrap.isNoMasterUser()) {\n      setBootstrap(false);\n      applianceBootstrap.createMasterRealmUser(username,password);\n      ServicesLogger.LOGGER.createdInitialAdminUser(username);\n      return createWelcomePage(\"User created\",null);\n    }\n else {\n      ServicesLogger.LOGGER.initialUserAlreadyCreated();\n      return createWelcomePage(null,\"Users already exists\");\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 206,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 130,
        "startColumnNumber" : 16,
        "endLineNumber" : 130,
        "endColumnNumber" : 90
      },
      "nodeContext" : "return createWelcomePage(null,\"Password and confirmation doesn't match\");\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 6,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 41,
    "startLineNumber" : 130,
    "startColumnNumber" : 47,
    "endLineNumber" : 130,
    "endColumnNumber" : 88
  } ],
  "layoutRelationDataList" : [ ]
}