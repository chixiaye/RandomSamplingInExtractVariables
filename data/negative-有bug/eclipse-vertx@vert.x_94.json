{
  "id" : 94,
  "expression" : "received",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/test/java/io/vertx/test/core/EventBusTestBase.java",
  "occurrences" : 6,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "received",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 267,
      "startColumnNumber" : 24,
      "endLineNumber" : 267,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 267,
        "startColumnNumber" : 6,
        "endLineNumber" : 267,
        "endColumnNumber" : 33
      },
      "nodeContext" : "assertEquals(arr,received)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 267,
        "startColumnNumber" : 6,
        "endLineNumber" : 267,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertEquals(arr,received);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 266,
        "startColumnNumber" : 32,
        "endLineNumber" : 269,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertEquals(arr,received);\n  assertFalse(arr == received);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 266,
        "startColumnNumber" : 18,
        "endLineNumber" : 269,
        "endColumnNumber" : 5
      },
      "nodeContext" : "(received) -> {\n  assertEquals(arr,received);\n  assertFalse(arr == received);\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 15,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 267,
        "startColumnNumber" : 6,
        "endLineNumber" : 267,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertEquals(arr,received);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "io.vertx.core.json.JsonArray"
  }, {
    "nodeContext" : "received",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 268,
      "startColumnNumber" : 25,
      "endLineNumber" : 268,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 268,
        "startColumnNumber" : 18,
        "endLineNumber" : 268,
        "endColumnNumber" : 33
      },
      "nodeContext" : "arr == received",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 268,
        "startColumnNumber" : 6,
        "endLineNumber" : 268,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertFalse(arr == received)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 268,
        "startColumnNumber" : 6,
        "endLineNumber" : 268,
        "endColumnNumber" : 35
      },
      "nodeContext" : "assertFalse(arr == received);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 266,
        "startColumnNumber" : 32,
        "endLineNumber" : 269,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertEquals(arr,received);\n  assertFalse(arr == received);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 266,
        "startColumnNumber" : 18,
        "endLineNumber" : 269,
        "endColumnNumber" : 5
      },
      "nodeContext" : "(received) -> {\n  assertEquals(arr,received);\n  assertFalse(arr == received);\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 15,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 268,
        "startColumnNumber" : 6,
        "endLineNumber" : 268,
        "endColumnNumber" : 35
      },
      "nodeContext" : "assertFalse(arr == received);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "io.vertx.core.json.JsonArray"
  }, {
    "nodeContext" : "received",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 277,
      "startColumnNumber" : 24,
      "endLineNumber" : 277,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 277,
        "startColumnNumber" : 6,
        "endLineNumber" : 277,
        "endColumnNumber" : 33
      },
      "nodeContext" : "assertEquals(arr,received)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 277,
        "startColumnNumber" : 6,
        "endLineNumber" : 277,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertEquals(arr,received);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 276,
        "startColumnNumber" : 33,
        "endLineNumber" : 279,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertEquals(arr,received);\n  assertFalse(arr == received);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 276,
        "startColumnNumber" : 19,
        "endLineNumber" : 279,
        "endColumnNumber" : 5
      },
      "nodeContext" : "(received) -> {\n  assertEquals(arr,received);\n  assertFalse(arr == received);\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 15,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 277,
        "startColumnNumber" : 6,
        "endLineNumber" : 277,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertEquals(arr,received);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "io.vertx.core.json.JsonArray"
  }, {
    "nodeContext" : "received",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 278,
      "startColumnNumber" : 25,
      "endLineNumber" : 278,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 278,
        "startColumnNumber" : 18,
        "endLineNumber" : 278,
        "endColumnNumber" : 33
      },
      "nodeContext" : "arr == received",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 278,
        "startColumnNumber" : 6,
        "endLineNumber" : 278,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertFalse(arr == received)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 278,
        "startColumnNumber" : 6,
        "endLineNumber" : 278,
        "endColumnNumber" : 35
      },
      "nodeContext" : "assertFalse(arr == received);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 276,
        "startColumnNumber" : 33,
        "endLineNumber" : 279,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertEquals(arr,received);\n  assertFalse(arr == received);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 276,
        "startColumnNumber" : 19,
        "endLineNumber" : 279,
        "endColumnNumber" : 5
      },
      "nodeContext" : "(received) -> {\n  assertEquals(arr,received);\n  assertFalse(arr == received);\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 15,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 278,
        "startColumnNumber" : 6,
        "endLineNumber" : 278,
        "endColumnNumber" : 35
      },
      "nodeContext" : "assertFalse(arr == received);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "io.vertx.core.json.JsonArray"
  }, {
    "nodeContext" : "received",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 287,
      "startColumnNumber" : 24,
      "endLineNumber" : 287,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 287,
        "startColumnNumber" : 6,
        "endLineNumber" : 287,
        "endColumnNumber" : 33
      },
      "nodeContext" : "assertEquals(arr,received)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 287,
        "startColumnNumber" : 6,
        "endLineNumber" : 287,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertEquals(arr,received);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 286,
        "startColumnNumber" : 35,
        "endLineNumber" : 289,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertEquals(arr,received);\n  assertFalse(arr == received);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 286,
        "startColumnNumber" : 21,
        "endLineNumber" : 289,
        "endColumnNumber" : 5
      },
      "nodeContext" : "(received) -> {\n  assertEquals(arr,received);\n  assertFalse(arr == received);\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 15,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 287,
        "startColumnNumber" : 6,
        "endLineNumber" : 287,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertEquals(arr,received);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "io.vertx.core.json.JsonArray"
  }, {
    "nodeContext" : "received",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 288,
      "startColumnNumber" : 25,
      "endLineNumber" : 288,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 288,
        "startColumnNumber" : 18,
        "endLineNumber" : 288,
        "endColumnNumber" : 33
      },
      "nodeContext" : "arr == received",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 288,
        "startColumnNumber" : 6,
        "endLineNumber" : 288,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertFalse(arr == received)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 288,
        "startColumnNumber" : 6,
        "endLineNumber" : 288,
        "endColumnNumber" : 35
      },
      "nodeContext" : "assertFalse(arr == received);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 286,
        "startColumnNumber" : 35,
        "endLineNumber" : 289,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertEquals(arr,received);\n  assertFalse(arr == received);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 286,
        "startColumnNumber" : 21,
        "endLineNumber" : 289,
        "endColumnNumber" : 5
      },
      "nodeContext" : "(received) -> {\n  assertEquals(arr,received);\n  assertFalse(arr == received);\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 15,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 288,
        "startColumnNumber" : 6,
        "endLineNumber" : 288,
        "endColumnNumber" : 35
      },
      "nodeContext" : "assertFalse(arr == received);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "io.vertx.core.json.JsonArray"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 267,
    "startColumnNumber" : 24,
    "endLineNumber" : 267,
    "endColumnNumber" : 32
  }, {
    "charLength" : 8,
    "startLineNumber" : 268,
    "startColumnNumber" : 25,
    "endLineNumber" : 268,
    "endColumnNumber" : 33
  }, {
    "charLength" : 8,
    "startLineNumber" : 277,
    "startColumnNumber" : 24,
    "endLineNumber" : 277,
    "endColumnNumber" : 32
  }, {
    "charLength" : 8,
    "startLineNumber" : 278,
    "startColumnNumber" : 25,
    "endLineNumber" : 278,
    "endColumnNumber" : 33
  }, {
    "charLength" : 8,
    "startLineNumber" : 287,
    "startColumnNumber" : 24,
    "endLineNumber" : 287,
    "endColumnNumber" : 32
  }, {
    "charLength" : 8,
    "startLineNumber" : 288,
    "startColumnNumber" : 25,
    "endLineNumber" : 288,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : -1
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : -1
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : -1
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : -1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : -1
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : -1
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : -1
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : -1
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : -1
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : -1
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : -1
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : -1
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : -1
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : -1
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : -1
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : -1
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : -1
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : -1
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : -1
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : -1
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : -1
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : -1
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : -1
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : -1
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  } ]
}