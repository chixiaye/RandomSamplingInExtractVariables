{
  "id" : 18,
  "expression" : "' '",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-main/src/test/java/com/facebook/presto/type/TestCharacterStringCasts.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "' '",
    "nodeType" : "CharacterLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 65,
      "startColumnNumber" : 67,
      "endLineNumber" : 65,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 65,
        "startColumnNumber" : 67,
        "endLineNumber" : 65,
        "endColumnNumber" : 74
      },
      "nodeContext" : "' ' - 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 65,
        "startColumnNumber" : 49,
        "endLineNumber" : 65,
        "endColumnNumber" : 75
      },
      "nodeContext" : "Character.toChars(' ' - 1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 65,
        "startColumnNumber" : 38,
        "endLineNumber" : 65,
        "endColumnNumber" : 76
      },
      "nodeContext" : "new String(Character.toChars(' ' - 1))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 65,
        "startColumnNumber" : 15,
        "endLineNumber" : 65,
        "endColumnNumber" : 76
      },
      "nodeContext" : "codePointBeforeSpace=new String(Character.toChars(' ' - 1))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 77
      },
      "nodeContext" : "String codePointBeforeSpace=new String(Character.toChars(' ' - 1));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3627,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 142,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String nonBmpCharacter=new String(Character.toChars(0x1F50D));\n  String nonBmpCharacterMinusOne=new String(Character.toChars(0x1F50C));\n  String maxCodePoint=new String(Character.toChars(Character.MAX_CODE_POINT));\n  String codePointBeforeSpace=new String(Character.toChars(' ' - 1));\n  assertEquals(varcharToCharSaturatedFloorCast(4L,utf8Slice(\"12345\")),utf8Slice(\"1234\"));\n  assertEquals(varcharToCharSaturatedFloorCast(4L,utf8Slice(\"1234\")),utf8Slice(\"1234\"));\n  assertEquals(varcharToCharSaturatedFloorCast(4L,utf8Slice(\"123\" + nonBmpCharacter)),utf8Slice(\"123\" + nonBmpCharacter));\n  assertEquals(varcharToCharSaturatedFloorCast(4L,utf8Slice(\"12\" + nonBmpCharacter + \"3\")),utf8Slice(\"12\" + nonBmpCharacter + \"3\"));\n  assertEquals(varcharToCharSaturatedFloorCast(4L,utf8Slice(\"123 \")),utf8Slice(\"123\"));\n  assertEquals(varcharToCharSaturatedFloorCast(4L,utf8Slice(\"123\")),utf8Slice(\"122\" + maxCodePoint));\n  assertEquals(varcharToCharSaturatedFloorCast(4L,utf8Slice(\"12 \")),utf8Slice(\"12\" + codePointBeforeSpace + maxCodePoint));\n  assertEquals(varcharToCharSaturatedFloorCast(4L,utf8Slice(\"1  \")),utf8Slice(\"1 \" + codePointBeforeSpace + maxCodePoint));\n  assertEquals(varcharToCharSaturatedFloorCast(4L,utf8Slice(\" \")),utf8Slice(codePointBeforeSpace + maxCodePoint + maxCodePoint+ maxCodePoint));\n  assertEquals(varcharToCharSaturatedFloorCast(4L,utf8Slice(\"12\" + nonBmpCharacter)),utf8Slice(\"12\" + nonBmpCharacterMinusOne + maxCodePoint));\n  assertEquals(varcharToCharSaturatedFloorCast(4L,utf8Slice(\"1\" + nonBmpCharacter + \"3\")),utf8Slice(\"1\" + nonBmpCharacter + \"2\"+ maxCodePoint));\n  assertEquals(varcharToCharSaturatedFloorCast(4L,utf8Slice(\"12\\0\")),utf8Slice(\"11\" + maxCodePoint + maxCodePoint));\n  assertEquals(varcharToCharSaturatedFloorCast(4L,utf8Slice(\"1\\0\")),utf8Slice(\"0\" + maxCodePoint + maxCodePoint+ maxCodePoint));\n  assertEquals(varcharToCharSaturatedFloorCast(4L,utf8Slice(\"\\0\")),utf8Slice(\"\\0\\0\\0\\0\"));\n  assertEquals(varcharToCharSaturatedFloorCast(4L,utf8Slice(\"\\0\\0\")),utf8Slice(\"\\0\\0\\0\\0\"));\n  assertEquals(varcharToCharSaturatedFloorCast(4L,utf8Slice(\"\")),utf8Slice(\"\\0\\0\\0\\0\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 286,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3691,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 142,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testVarcharToCharSaturatedFloorCast(){\n  String nonBmpCharacter=new String(Character.toChars(0x1F50D));\n  String nonBmpCharacterMinusOne=new String(Character.toChars(0x1F50C));\n  String maxCodePoint=new String(Character.toChars(Character.MAX_CODE_POINT));\n  String codePointBeforeSpace=new String(Character.toChars(' ' - 1));\n  assertEquals(varcharToCharSaturatedFloorCast(4L,utf8Slice(\"12345\")),utf8Slice(\"1234\"));\n  assertEquals(varcharToCharSaturatedFloorCast(4L,utf8Slice(\"1234\")),utf8Slice(\"1234\"));\n  assertEquals(varcharToCharSaturatedFloorCast(4L,utf8Slice(\"123\" + nonBmpCharacter)),utf8Slice(\"123\" + nonBmpCharacter));\n  assertEquals(varcharToCharSaturatedFloorCast(4L,utf8Slice(\"12\" + nonBmpCharacter + \"3\")),utf8Slice(\"12\" + nonBmpCharacter + \"3\"));\n  assertEquals(varcharToCharSaturatedFloorCast(4L,utf8Slice(\"123 \")),utf8Slice(\"123\"));\n  assertEquals(varcharToCharSaturatedFloorCast(4L,utf8Slice(\"123\")),utf8Slice(\"122\" + maxCodePoint));\n  assertEquals(varcharToCharSaturatedFloorCast(4L,utf8Slice(\"12 \")),utf8Slice(\"12\" + codePointBeforeSpace + maxCodePoint));\n  assertEquals(varcharToCharSaturatedFloorCast(4L,utf8Slice(\"1  \")),utf8Slice(\"1 \" + codePointBeforeSpace + maxCodePoint));\n  assertEquals(varcharToCharSaturatedFloorCast(4L,utf8Slice(\" \")),utf8Slice(codePointBeforeSpace + maxCodePoint + maxCodePoint+ maxCodePoint));\n  assertEquals(varcharToCharSaturatedFloorCast(4L,utf8Slice(\"12\" + nonBmpCharacter)),utf8Slice(\"12\" + nonBmpCharacterMinusOne + maxCodePoint));\n  assertEquals(varcharToCharSaturatedFloorCast(4L,utf8Slice(\"1\" + nonBmpCharacter + \"3\")),utf8Slice(\"1\" + nonBmpCharacter + \"2\"+ maxCodePoint));\n  assertEquals(varcharToCharSaturatedFloorCast(4L,utf8Slice(\"12\\0\")),utf8Slice(\"11\" + maxCodePoint + maxCodePoint));\n  assertEquals(varcharToCharSaturatedFloorCast(4L,utf8Slice(\"1\\0\")),utf8Slice(\"0\" + maxCodePoint + maxCodePoint+ maxCodePoint));\n  assertEquals(varcharToCharSaturatedFloorCast(4L,utf8Slice(\"\\0\")),utf8Slice(\"\\0\\0\\0\\0\"));\n  assertEquals(varcharToCharSaturatedFloorCast(4L,utf8Slice(\"\\0\\0\")),utf8Slice(\"\\0\\0\\0\\0\"));\n  assertEquals(varcharToCharSaturatedFloorCast(4L,utf8Slice(\"\")),utf8Slice(\"\\0\\0\\0\\0\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 292,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 77
      },
      "nodeContext" : "String codePointBeforeSpace=new String(Character.toChars(' ' - 1));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "char"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 65,
    "startColumnNumber" : 67,
    "endLineNumber" : 65,
    "endColumnNumber" : 70
  } ],
  "layoutRelationDataList" : [ ]
}