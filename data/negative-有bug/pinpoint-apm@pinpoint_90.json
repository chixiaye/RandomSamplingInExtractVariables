{
  "id" : 90,
  "expression" : "new HeaderTBaseSerializerFactory(false,SpanStreamSendDataFactory.DEFAULT_UDP_MAX_BUFFER_SIZE,false)",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/profiler/src/main/java/com/navercorp/pinpoint/profiler/sender/planer/SpanStreamSendDataPlaner.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new HeaderTBaseSerializerFactory(false,SpanStreamSendDataFactory.DEFAULT_UDP_MAX_BUFFER_SIZE,false)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 101,
      "startLineNumber" : 64,
      "startColumnNumber" : 47,
      "endLineNumber" : 64,
      "endColumnNumber" : 148
    },
    "astNodeNumber" : 8,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 64,
        "startColumnNumber" : 47,
        "endLineNumber" : 64,
        "endColumnNumber" : 167
      },
      "nodeContext" : "new HeaderTBaseSerializerFactory(false,SpanStreamSendDataFactory.DEFAULT_UDP_MAX_BUFFER_SIZE,false).createSerializer()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 64,
        "startColumnNumber" : 34,
        "endLineNumber" : 64,
        "endColumnNumber" : 167
      },
      "nodeContext" : "serializer=new HeaderTBaseSerializerFactory(false,SpanStreamSendDataFactory.DEFAULT_UDP_MAX_BUFFER_SIZE,false).createSerializer()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 156,
        "startLineNumber" : 64,
        "startColumnNumber" : 12,
        "endLineNumber" : 64,
        "endColumnNumber" : 168
      },
      "nodeContext" : "HeaderTBaseSerializer serializer=new HeaderTBaseSerializerFactory(false,SpanStreamSendDataFactory.DEFAULT_UDP_MAX_BUFFER_SIZE,false).createSerializer();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 615,
        "startLineNumber" : 61,
        "startColumnNumber" : 37,
        "endLineNumber" : 73,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final TSpanChunk spanChunk=toSpanChunk(span);\n  HeaderTBaseSerializer serializer=new HeaderTBaseSerializerFactory(false,SpanStreamSendDataFactory.DEFAULT_UDP_MAX_BUFFER_SIZE,false).createSerializer();\n  byte[] spanChunkBuffer;\n  try {\n    spanChunkBuffer=serializer.serialize(spanChunk);\n    this.spanChunkBuffer=spanChunkBuffer;\n    this.spanChunkSize=serializer.getInterBufferSize();\n  }\n catch (  TException e) {\n    logger.warn(\"Spanchunk serializer failed. {}.\",spanChunk);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 644,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (spanChunkBuffer == null) {\n  final TSpanChunk spanChunk=toSpanChunk(span);\n  HeaderTBaseSerializer serializer=new HeaderTBaseSerializerFactory(false,SpanStreamSendDataFactory.DEFAULT_UDP_MAX_BUFFER_SIZE,false).createSerializer();\n  byte[] spanChunkBuffer;\n  try {\n    spanChunkBuffer=serializer.serialize(spanChunk);\n    this.spanChunkBuffer=spanChunkBuffer;\n    this.spanChunkSize=serializer.getInterBufferSize();\n  }\n catch (  TException e) {\n    logger.warn(\"Spanchunk serializer failed. {}.\",spanChunk);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 70,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 775,
        "startLineNumber" : 60,
        "startColumnNumber" : 41,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (spanChunkBuffer == null) {\n    final TSpanChunk spanChunk=toSpanChunk(span);\n    HeaderTBaseSerializer serializer=new HeaderTBaseSerializerFactory(false,SpanStreamSendDataFactory.DEFAULT_UDP_MAX_BUFFER_SIZE,false).createSerializer();\n    byte[] spanChunkBuffer;\n    try {\n      spanChunkBuffer=serializer.serialize(spanChunk);\n      this.spanChunkBuffer=spanChunkBuffer;\n      this.spanChunkSize=serializer.getInterBufferSize();\n    }\n catch (    TException e) {\n      logger.warn(\"Spanchunk serializer failed. {}.\",spanChunk);\n    }\n  }\n  if (spanChunkBuffer == null) {\n    return new byte[0];\n  }\n  return spanChunkBuffer;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 812,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private byte[] getSpanChunkBuffer0(){\n  if (spanChunkBuffer == null) {\n    final TSpanChunk spanChunk=toSpanChunk(span);\n    HeaderTBaseSerializer serializer=new HeaderTBaseSerializerFactory(false,SpanStreamSendDataFactory.DEFAULT_UDP_MAX_BUFFER_SIZE,false).createSerializer();\n    byte[] spanChunkBuffer;\n    try {\n      spanChunkBuffer=serializer.serialize(spanChunk);\n      this.spanChunkBuffer=spanChunkBuffer;\n      this.spanChunkSize=serializer.getInterBufferSize();\n    }\n catch (    TException e) {\n      logger.warn(\"Spanchunk serializer failed. {}.\",spanChunk);\n    }\n  }\n  if (spanChunkBuffer == null) {\n    return new byte[0];\n  }\n  return spanChunkBuffer;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 90,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 156,
        "startLineNumber" : 64,
        "startColumnNumber" : 12,
        "endLineNumber" : 64,
        "endColumnNumber" : 168
      },
      "nodeContext" : "HeaderTBaseSerializer serializer=new HeaderTBaseSerializerFactory(false,SpanStreamSendDataFactory.DEFAULT_UDP_MAX_BUFFER_SIZE,false).createSerializer();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 9,
    "type" : "com.navercorp.pinpoint.thrift.io.HeaderTBaseSerializerFactory"
  } ],
  "positionList" : [ {
    "charLength" : 101,
    "startLineNumber" : 64,
    "startColumnNumber" : 47,
    "endLineNumber" : 64,
    "endColumnNumber" : 148
  } ],
  "layoutRelationDataList" : [ ]
}