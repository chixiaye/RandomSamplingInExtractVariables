{
  "id" : 448,
  "expression" : "LocalDateTime.now()",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-test/shardingsphere-integration-test/shardingsphere-integration-test-scaling/src/test/java/org/apache/shardingsphere/integration/data/pipeline/cases/migration/general/PostgreSQLMigrationGeneralIT.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "LocalDateTime.now()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 97,
      "startColumnNumber" : 40,
      "endLineNumber" : 97,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 97,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 60
      },
      "nodeContext" : "log.info(\"init data begin: {}\",LocalDateTime.now())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 97,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 61
      },
      "nodeContext" : "log.info(\"init data begin: {}\",LocalDateTime.now());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1443,
        "startLineNumber" : 84,
        "startColumnNumber" : 83,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  addMigrationProcessConfig();\n  createSourceSchema(SCHEMA_NAME);\n  createSourceOrderTable();\n  createSourceOrderItemTable();\n  createSourceTableIndexList(SCHEMA_NAME);\n  createSourceCommentOnList(SCHEMA_NAME);\n  addMigrationSourceResource();\n  addMigrationTargetResource();\n  createTargetOrderTableRule();\n  createTargetOrderItemTableRule();\n  Pair<List<Object[]>,List<Object[]>> dataPair=ScalingCaseHelper.generateFullInsertData(KEY_GENERATE_ALGORITHM,parameterized.getDatabaseType(),TABLE_INIT_ROW_COUNT);\n  JdbcTemplate jdbcTemplate=new JdbcTemplate(getSourceDataSource());\n  log.info(\"init data begin: {}\",LocalDateTime.now());\n  jdbcTemplate.batchUpdate(getExtraSQLCommand().getFullInsertOrder(getSourceTableOrderName()),dataPair.getLeft());\n  jdbcTemplate.batchUpdate(getExtraSQLCommand().getFullInsertOrderItem(),dataPair.getRight());\n  log.info(\"init data end: {}\",LocalDateTime.now());\n  checkOrderMigration(jdbcTemplate);\n  checkOrderItemMigration();\n  if (ENV.getItEnvType() == ITEnvTypeEnum.DOCKER) {\n    for (    String each : listJobId()) {\n      commitMigrationByJobId(each);\n    }\n    List<String> lastJobIds=listJobId();\n    assertThat(lastJobIds.size(),is(0));\n  }\n  assertGreaterThanOrderTableInitRows(TABLE_INIT_ROW_COUNT,SCHEMA_NAME);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 164,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1532,
        "startLineNumber" : 83,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void assertMigrationSuccess() throws SQLException, InterruptedException {\n  addMigrationProcessConfig();\n  createSourceSchema(SCHEMA_NAME);\n  createSourceOrderTable();\n  createSourceOrderItemTable();\n  createSourceTableIndexList(SCHEMA_NAME);\n  createSourceCommentOnList(SCHEMA_NAME);\n  addMigrationSourceResource();\n  addMigrationTargetResource();\n  createTargetOrderTableRule();\n  createTargetOrderItemTableRule();\n  Pair<List<Object[]>,List<Object[]>> dataPair=ScalingCaseHelper.generateFullInsertData(KEY_GENERATE_ALGORITHM,parameterized.getDatabaseType(),TABLE_INIT_ROW_COUNT);\n  JdbcTemplate jdbcTemplate=new JdbcTemplate(getSourceDataSource());\n  log.info(\"init data begin: {}\",LocalDateTime.now());\n  jdbcTemplate.batchUpdate(getExtraSQLCommand().getFullInsertOrder(getSourceTableOrderName()),dataPair.getLeft());\n  jdbcTemplate.batchUpdate(getExtraSQLCommand().getFullInsertOrderItem(),dataPair.getRight());\n  log.info(\"init data end: {}\",LocalDateTime.now());\n  checkOrderMigration(jdbcTemplate);\n  checkOrderItemMigration();\n  if (ENV.getItEnvType() == ITEnvTypeEnum.DOCKER) {\n    for (    String each : listJobId()) {\n      commitMigrationByJobId(each);\n    }\n    List<String> lastJobIds=listJobId();\n    assertThat(lastJobIds.size(),is(0));\n  }\n  assertGreaterThanOrderTableInitRows(TABLE_INIT_ROW_COUNT,SCHEMA_NAME);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 174,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 97,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 61
      },
      "nodeContext" : "log.info(\"init data begin: {}\",LocalDateTime.now());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.time.LocalDateTime"
  }, {
    "nodeContext" : "LocalDateTime.now()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 100,
      "startColumnNumber" : 38,
      "endLineNumber" : 100,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 100,
        "endColumnNumber" : 58
      },
      "nodeContext" : "log.info(\"init data end: {}\",LocalDateTime.now())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 100,
        "endColumnNumber" : 59
      },
      "nodeContext" : "log.info(\"init data end: {}\",LocalDateTime.now());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1443,
        "startLineNumber" : 84,
        "startColumnNumber" : 83,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  addMigrationProcessConfig();\n  createSourceSchema(SCHEMA_NAME);\n  createSourceOrderTable();\n  createSourceOrderItemTable();\n  createSourceTableIndexList(SCHEMA_NAME);\n  createSourceCommentOnList(SCHEMA_NAME);\n  addMigrationSourceResource();\n  addMigrationTargetResource();\n  createTargetOrderTableRule();\n  createTargetOrderItemTableRule();\n  Pair<List<Object[]>,List<Object[]>> dataPair=ScalingCaseHelper.generateFullInsertData(KEY_GENERATE_ALGORITHM,parameterized.getDatabaseType(),TABLE_INIT_ROW_COUNT);\n  JdbcTemplate jdbcTemplate=new JdbcTemplate(getSourceDataSource());\n  log.info(\"init data begin: {}\",LocalDateTime.now());\n  jdbcTemplate.batchUpdate(getExtraSQLCommand().getFullInsertOrder(getSourceTableOrderName()),dataPair.getLeft());\n  jdbcTemplate.batchUpdate(getExtraSQLCommand().getFullInsertOrderItem(),dataPair.getRight());\n  log.info(\"init data end: {}\",LocalDateTime.now());\n  checkOrderMigration(jdbcTemplate);\n  checkOrderItemMigration();\n  if (ENV.getItEnvType() == ITEnvTypeEnum.DOCKER) {\n    for (    String each : listJobId()) {\n      commitMigrationByJobId(each);\n    }\n    List<String> lastJobIds=listJobId();\n    assertThat(lastJobIds.size(),is(0));\n  }\n  assertGreaterThanOrderTableInitRows(TABLE_INIT_ROW_COUNT,SCHEMA_NAME);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 164,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1532,
        "startLineNumber" : 83,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void assertMigrationSuccess() throws SQLException, InterruptedException {\n  addMigrationProcessConfig();\n  createSourceSchema(SCHEMA_NAME);\n  createSourceOrderTable();\n  createSourceOrderItemTable();\n  createSourceTableIndexList(SCHEMA_NAME);\n  createSourceCommentOnList(SCHEMA_NAME);\n  addMigrationSourceResource();\n  addMigrationTargetResource();\n  createTargetOrderTableRule();\n  createTargetOrderItemTableRule();\n  Pair<List<Object[]>,List<Object[]>> dataPair=ScalingCaseHelper.generateFullInsertData(KEY_GENERATE_ALGORITHM,parameterized.getDatabaseType(),TABLE_INIT_ROW_COUNT);\n  JdbcTemplate jdbcTemplate=new JdbcTemplate(getSourceDataSource());\n  log.info(\"init data begin: {}\",LocalDateTime.now());\n  jdbcTemplate.batchUpdate(getExtraSQLCommand().getFullInsertOrder(getSourceTableOrderName()),dataPair.getLeft());\n  jdbcTemplate.batchUpdate(getExtraSQLCommand().getFullInsertOrderItem(),dataPair.getRight());\n  log.info(\"init data end: {}\",LocalDateTime.now());\n  checkOrderMigration(jdbcTemplate);\n  checkOrderItemMigration();\n  if (ENV.getItEnvType() == ITEnvTypeEnum.DOCKER) {\n    for (    String each : listJobId()) {\n      commitMigrationByJobId(each);\n    }\n    List<String> lastJobIds=listJobId();\n    assertThat(lastJobIds.size(),is(0));\n  }\n  assertGreaterThanOrderTableInitRows(TABLE_INIT_ROW_COUNT,SCHEMA_NAME);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 174,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 100,
        "endColumnNumber" : 59
      },
      "nodeContext" : "log.info(\"init data end: {}\",LocalDateTime.now());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.time.LocalDateTime"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 97,
    "startColumnNumber" : 40,
    "endLineNumber" : 97,
    "endColumnNumber" : 59
  }, {
    "charLength" : 19,
    "startLineNumber" : 100,
    "startColumnNumber" : 38,
    "endLineNumber" : 100,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}