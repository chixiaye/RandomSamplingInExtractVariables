{
  "id" : 251,
  "expression" : "endHandler != null",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/main/java/io/vertx/core/http/impl/HttpClientImpl.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "endHandler != null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 769,
      "startColumnNumber" : 12,
      "endLineNumber" : 769,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 246,
        "startLineNumber" : 769,
        "startColumnNumber" : 8,
        "endLineNumber" : 777,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (endHandler != null) {\n  Handler<Void> endCallback=endHandler;\n  wsConnect=ws -> {\n    handler.handle(ws);\n    endCallback.handle(null);\n  }\n;\n}\n else {\n  wsConnect=handler;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 36,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 979,
        "startLineNumber" : 760,
        "startColumnNumber" : 51,
        "endLineNumber" : 785,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  this.handler=handler;\n  checkClosed();\n  ContextImpl context=vertx.getOrCreateContext();\n  Handler<Throwable> connectionExceptionHandler=exceptionHandler;\n  if (connectionExceptionHandler == null) {\n    connectionExceptionHandler=log::error;\n  }\n  Handler<WebSocket> wsConnect;\n  if (endHandler != null) {\n    Handler<Void> endCallback=endHandler;\n    wsConnect=ws -> {\n      handler.handle(ws);\n      endCallback.handle(null);\n    }\n;\n  }\n else {\n    wsConnect=handler;\n  }\n  getConnectionForWebsocket(port,host,conn -> {\n    if (conn.isValid()) {\n      conn.toWebSocket(requestURI,headers,version,subProtocols,options.getMaxWebsocketFrameSize(),wsConnect);\n    }\n else {\n      websocket(port,host,requestURI,headers,version,subProtocols,wsConnect);\n    }\n  }\n,connectionExceptionHandler,context);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 121,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1024,
        "startLineNumber" : 760,
        "startColumnNumber" : 6,
        "endLineNumber" : 785,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (this.handler == null && handler != null) {\n  this.handler=handler;\n  checkClosed();\n  ContextImpl context=vertx.getOrCreateContext();\n  Handler<Throwable> connectionExceptionHandler=exceptionHandler;\n  if (connectionExceptionHandler == null) {\n    connectionExceptionHandler=log::error;\n  }\n  Handler<WebSocket> wsConnect;\n  if (endHandler != null) {\n    Handler<Void> endCallback=endHandler;\n    wsConnect=ws -> {\n      handler.handle(ws);\n      endCallback.handle(null);\n    }\n;\n  }\n else {\n    wsConnect=handler;\n  }\n  getConnectionForWebsocket(port,host,conn -> {\n    if (conn.isValid()) {\n      conn.toWebSocket(requestURI,headers,version,subProtocols,options.getMaxWebsocketFrameSize(),wsConnect);\n    }\n else {\n      websocket(port,host,requestURI,headers,version,subProtocols,wsConnect);\n    }\n  }\n,connectionExceptionHandler,context);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 131,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1057,
        "startLineNumber" : 759,
        "startColumnNumber" : 76,
        "endLineNumber" : 787,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (this.handler == null && handler != null) {\n    this.handler=handler;\n    checkClosed();\n    ContextImpl context=vertx.getOrCreateContext();\n    Handler<Throwable> connectionExceptionHandler=exceptionHandler;\n    if (connectionExceptionHandler == null) {\n      connectionExceptionHandler=log::error;\n    }\n    Handler<WebSocket> wsConnect;\n    if (endHandler != null) {\n      Handler<Void> endCallback=endHandler;\n      wsConnect=ws -> {\n        handler.handle(ws);\n        endCallback.handle(null);\n      }\n;\n    }\n else {\n      wsConnect=handler;\n    }\n    getConnectionForWebsocket(port,host,conn -> {\n      if (conn.isValid()) {\n        conn.toWebSocket(requestURI,headers,version,subProtocols,options.getMaxWebsocketFrameSize(),wsConnect);\n      }\n else {\n        websocket(port,host,requestURI,headers,version,subProtocols,wsConnect);\n      }\n    }\n,connectionExceptionHandler,context);\n  }\n  return this;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 134,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1143,
        "startLineNumber" : 758,
        "startColumnNumber" : 4,
        "endLineNumber" : 787,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public synchronized WebSocketStream handler(Handler<WebSocket> handler){\n  if (this.handler == null && handler != null) {\n    this.handler=handler;\n    checkClosed();\n    ContextImpl context=vertx.getOrCreateContext();\n    Handler<Throwable> connectionExceptionHandler=exceptionHandler;\n    if (connectionExceptionHandler == null) {\n      connectionExceptionHandler=log::error;\n    }\n    Handler<WebSocket> wsConnect;\n    if (endHandler != null) {\n      Handler<Void> endCallback=endHandler;\n      wsConnect=ws -> {\n        handler.handle(ws);\n        endCallback.handle(null);\n      }\n;\n    }\n else {\n      wsConnect=handler;\n    }\n    getConnectionForWebsocket(port,host,conn -> {\n      if (conn.isValid()) {\n        conn.toWebSocket(requestURI,headers,version,subProtocols,options.getMaxWebsocketFrameSize(),wsConnect);\n      }\n else {\n        websocket(port,host,requestURI,headers,version,subProtocols,wsConnect);\n      }\n    }\n,connectionExceptionHandler,context);\n  }\n  return this;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 149,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 246,
        "startLineNumber" : 769,
        "startColumnNumber" : 8,
        "endLineNumber" : 777,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (endHandler != null) {\n  Handler<Void> endCallback=endHandler;\n  wsConnect=ws -> {\n    handler.handle(ws);\n    endCallback.handle(null);\n  }\n;\n}\n else {\n  wsConnect=handler;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 36,
      "astHeight" : 9
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 769,
    "startColumnNumber" : 12,
    "endLineNumber" : 769,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}