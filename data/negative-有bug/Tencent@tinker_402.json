{
  "id" : 402,
  "expression" : "extraFiles",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/tinker-android/tinker-android-loader/src/main/java/com/tencent/tinker/loader/SystemClassLoaderAdder.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "extraFiles",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 390,
      "startColumnNumber" : 16,
      "endLineNumber" : 390,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 390,
        "startColumnNumber" : 16,
        "endLineNumber" : 390,
        "endColumnNumber" : 33
      },
      "nodeContext" : "extraFiles[index]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 390,
        "startColumnNumber" : 16,
        "endLineNumber" : 390,
        "endColumnNumber" : 51
      },
      "nodeContext" : "extraFiles[index]=additionalEntry",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 390,
        "startColumnNumber" : 16,
        "endLineNumber" : 390,
        "endColumnNumber" : 52
      },
      "nodeContext" : "extraFiles[index]=additionalEntry;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 705,
        "startLineNumber" : 384,
        "startColumnNumber" : 38,
        "endLineNumber" : 396,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  File additionalEntry=iterator.next();\n  String entryPath=additionalEntry.getAbsolutePath();\n  path.append(':').append(entryPath);\n  int index=iterator.previousIndex();\n  extraPaths[index]=entryPath;\n  extraFiles[index]=additionalEntry;\n  extraZips[index]=new ZipFile(additionalEntry);\n  String outputPathName=SharePatchFileUtil.optimizedPathFor(additionalEntry,optimizedDirectory);\n  extraDexs[index]=DexFile.loadDex(entryPath,outputPathName,0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 821,
        "startLineNumber" : 383,
        "startColumnNumber" : 12,
        "endLineNumber" : 396,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (ListIterator<File> iterator=additionalClassPathEntries.listIterator(); iterator.hasNext(); ) {\n  File additionalEntry=iterator.next();\n  String entryPath=additionalEntry.getAbsolutePath();\n  path.append(':').append(entryPath);\n  int index=iterator.previousIndex();\n  extraPaths[index]=entryPath;\n  extraFiles[index]=additionalEntry;\n  extraZips[index]=new ZipFile(additionalEntry);\n  String outputPathName=SharePatchFileUtil.optimizedPathFor(additionalEntry,optimizedDirectory);\n  extraDexs[index]=DexFile.loadDex(entryPath,outputPathName,0);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 89,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2008,
        "startLineNumber" : 368,
        "startColumnNumber" : 46,
        "endLineNumber" : 407,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int extraSize=additionalClassPathEntries.size();\n  Field pathField=ShareReflectUtil.findField(loader,\"path\");\n  StringBuilder path=new StringBuilder((String)pathField.get(loader));\n  String[] extraPaths=new String[extraSize];\n  File[] extraFiles=new File[extraSize];\n  ZipFile[] extraZips=new ZipFile[extraSize];\n  DexFile[] extraDexs=new DexFile[extraSize];\n  for (ListIterator<File> iterator=additionalClassPathEntries.listIterator(); iterator.hasNext(); ) {\n    File additionalEntry=iterator.next();\n    String entryPath=additionalEntry.getAbsolutePath();\n    path.append(':').append(entryPath);\n    int index=iterator.previousIndex();\n    extraPaths[index]=entryPath;\n    extraFiles[index]=additionalEntry;\n    extraZips[index]=new ZipFile(additionalEntry);\n    String outputPathName=SharePatchFileUtil.optimizedPathFor(additionalEntry,optimizedDirectory);\n    extraDexs[index]=DexFile.loadDex(entryPath,outputPathName,0);\n  }\n  pathField.set(loader,path.toString());\n  ShareReflectUtil.expandFieldArray(loader,\"mPaths\",extraPaths);\n  ShareReflectUtil.expandFieldArray(loader,\"mFiles\",extraFiles);\n  ShareReflectUtil.expandFieldArray(loader,\"mZips\",extraZips);\n  try {\n    ShareReflectUtil.expandFieldArray(loader,\"mDexs\",extraDexs);\n  }\n catch (  Exception e) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 218,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2235,
        "startLineNumber" : 366,
        "startColumnNumber" : 8,
        "endLineNumber" : 407,
        "endColumnNumber" : 9
      },
      "nodeContext" : "private static void install(ClassLoader loader,List<File> additionalClassPathEntries,File optimizedDirectory) throws IllegalArgumentException, IllegalAccessException, NoSuchFieldException, IOException {\n  int extraSize=additionalClassPathEntries.size();\n  Field pathField=ShareReflectUtil.findField(loader,\"path\");\n  StringBuilder path=new StringBuilder((String)pathField.get(loader));\n  String[] extraPaths=new String[extraSize];\n  File[] extraFiles=new File[extraSize];\n  ZipFile[] extraZips=new ZipFile[extraSize];\n  DexFile[] extraDexs=new DexFile[extraSize];\n  for (ListIterator<File> iterator=additionalClassPathEntries.listIterator(); iterator.hasNext(); ) {\n    File additionalEntry=iterator.next();\n    String entryPath=additionalEntry.getAbsolutePath();\n    path.append(':').append(entryPath);\n    int index=iterator.previousIndex();\n    extraPaths[index]=entryPath;\n    extraFiles[index]=additionalEntry;\n    extraZips[index]=new ZipFile(additionalEntry);\n    String outputPathName=SharePatchFileUtil.optimizedPathFor(additionalEntry,optimizedDirectory);\n    extraDexs[index]=DexFile.loadDex(entryPath,outputPathName,0);\n  }\n  pathField.set(loader,path.toString());\n  ShareReflectUtil.expandFieldArray(loader,\"mPaths\",extraPaths);\n  ShareReflectUtil.expandFieldArray(loader,\"mFiles\",extraFiles);\n  ShareReflectUtil.expandFieldArray(loader,\"mZips\",extraZips);\n  try {\n    ShareReflectUtil.expandFieldArray(loader,\"mDexs\",extraDexs);\n  }\n catch (  Exception e) {\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 246,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 390,
        "startColumnNumber" : 16,
        "endLineNumber" : 390,
        "endColumnNumber" : 52
      },
      "nodeContext" : "extraFiles[index]=additionalEntry;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.io.File[]"
  }, {
    "nodeContext" : "extraFiles",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 400,
      "startColumnNumber" : 64,
      "endLineNumber" : 400,
      "endColumnNumber" : 74
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 400,
        "startColumnNumber" : 12,
        "endLineNumber" : 400,
        "endColumnNumber" : 75
      },
      "nodeContext" : "ShareReflectUtil.expandFieldArray(loader,\"mFiles\",extraFiles)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 400,
        "startColumnNumber" : 12,
        "endLineNumber" : 400,
        "endColumnNumber" : 76
      },
      "nodeContext" : "ShareReflectUtil.expandFieldArray(loader,\"mFiles\",extraFiles);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2008,
        "startLineNumber" : 368,
        "startColumnNumber" : 46,
        "endLineNumber" : 407,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int extraSize=additionalClassPathEntries.size();\n  Field pathField=ShareReflectUtil.findField(loader,\"path\");\n  StringBuilder path=new StringBuilder((String)pathField.get(loader));\n  String[] extraPaths=new String[extraSize];\n  File[] extraFiles=new File[extraSize];\n  ZipFile[] extraZips=new ZipFile[extraSize];\n  DexFile[] extraDexs=new DexFile[extraSize];\n  for (ListIterator<File> iterator=additionalClassPathEntries.listIterator(); iterator.hasNext(); ) {\n    File additionalEntry=iterator.next();\n    String entryPath=additionalEntry.getAbsolutePath();\n    path.append(':').append(entryPath);\n    int index=iterator.previousIndex();\n    extraPaths[index]=entryPath;\n    extraFiles[index]=additionalEntry;\n    extraZips[index]=new ZipFile(additionalEntry);\n    String outputPathName=SharePatchFileUtil.optimizedPathFor(additionalEntry,optimizedDirectory);\n    extraDexs[index]=DexFile.loadDex(entryPath,outputPathName,0);\n  }\n  pathField.set(loader,path.toString());\n  ShareReflectUtil.expandFieldArray(loader,\"mPaths\",extraPaths);\n  ShareReflectUtil.expandFieldArray(loader,\"mFiles\",extraFiles);\n  ShareReflectUtil.expandFieldArray(loader,\"mZips\",extraZips);\n  try {\n    ShareReflectUtil.expandFieldArray(loader,\"mDexs\",extraDexs);\n  }\n catch (  Exception e) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 218,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2235,
        "startLineNumber" : 366,
        "startColumnNumber" : 8,
        "endLineNumber" : 407,
        "endColumnNumber" : 9
      },
      "nodeContext" : "private static void install(ClassLoader loader,List<File> additionalClassPathEntries,File optimizedDirectory) throws IllegalArgumentException, IllegalAccessException, NoSuchFieldException, IOException {\n  int extraSize=additionalClassPathEntries.size();\n  Field pathField=ShareReflectUtil.findField(loader,\"path\");\n  StringBuilder path=new StringBuilder((String)pathField.get(loader));\n  String[] extraPaths=new String[extraSize];\n  File[] extraFiles=new File[extraSize];\n  ZipFile[] extraZips=new ZipFile[extraSize];\n  DexFile[] extraDexs=new DexFile[extraSize];\n  for (ListIterator<File> iterator=additionalClassPathEntries.listIterator(); iterator.hasNext(); ) {\n    File additionalEntry=iterator.next();\n    String entryPath=additionalEntry.getAbsolutePath();\n    path.append(':').append(entryPath);\n    int index=iterator.previousIndex();\n    extraPaths[index]=entryPath;\n    extraFiles[index]=additionalEntry;\n    extraZips[index]=new ZipFile(additionalEntry);\n    String outputPathName=SharePatchFileUtil.optimizedPathFor(additionalEntry,optimizedDirectory);\n    extraDexs[index]=DexFile.loadDex(entryPath,outputPathName,0);\n  }\n  pathField.set(loader,path.toString());\n  ShareReflectUtil.expandFieldArray(loader,\"mPaths\",extraPaths);\n  ShareReflectUtil.expandFieldArray(loader,\"mFiles\",extraFiles);\n  ShareReflectUtil.expandFieldArray(loader,\"mZips\",extraZips);\n  try {\n    ShareReflectUtil.expandFieldArray(loader,\"mDexs\",extraDexs);\n  }\n catch (  Exception e) {\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 246,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 400,
        "startColumnNumber" : 12,
        "endLineNumber" : 400,
        "endColumnNumber" : 76
      },
      "nodeContext" : "ShareReflectUtil.expandFieldArray(loader,\"mFiles\",extraFiles);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.io.File[]"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 390,
    "startColumnNumber" : 16,
    "endLineNumber" : 390,
    "endColumnNumber" : 26
  }, {
    "charLength" : 10,
    "startLineNumber" : 400,
    "startColumnNumber" : 64,
    "endLineNumber" : 400,
    "endColumnNumber" : 74
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}