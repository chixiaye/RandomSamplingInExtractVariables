{
  "id" : 264,
  "expression" : "s1offset",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/third-party/bsdiff-util/src/main/java/com/tencent/tinker/bsdiff/BSDiff.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "s1offset",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 280,
      "startColumnNumber" : 25,
      "endLineNumber" : 280,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 280,
        "startColumnNumber" : 16,
        "endLineNumber" : 280,
        "endColumnNumber" : 33
      },
      "nodeContext" : "s1Size - s1offset",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 280,
        "startColumnNumber" : 12,
        "endLineNumber" : 280,
        "endColumnNumber" : 33
      },
      "nodeContext" : "n=s1Size - s1offset",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 280,
        "startColumnNumber" : 8,
        "endLineNumber" : 280,
        "endColumnNumber" : 34
      },
      "nodeContext" : "int n=s1Size - s1offset;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 335,
        "startLineNumber" : 278,
        "startColumnNumber" : 104,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int n=s1Size - s1offset;\n  if (n > (s2Size - s2offset)) {\n    n=s2Size - s2offset;\n  }\n  for (int i=0; i < n; i++) {\n    if (s1[i + s1offset] != s2[i + s2offset]) {\n      return s1[i + s1offset] < s2[i + s2offset] ? -1 : 1;\n    }\n  }\n  return 0;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 620,
        "startLineNumber" : 273,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Compare two byte array segments to see if they are equal return 1 if s1[s1offset...s1Size] is bigger than s2[s2offset...s2Size] otherwise return -1\n */\nprivate static int memcmp(byte[] s1,int s1Size,int s1offset,byte[] s2,int s2Size,int s2offset){\n  int n=s1Size - s1offset;\n  if (n > (s2Size - s2offset)) {\n    n=s2Size - s2offset;\n  }\n  for (int i=0; i < n; i++) {\n    if (s1[i + s1offset] != s2[i + s2offset]) {\n      return s1[i + s1offset] < s2[i + s2offset] ? -1 : 1;\n    }\n  }\n  return 0;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 93,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 280,
        "startColumnNumber" : 8,
        "endLineNumber" : 280,
        "endColumnNumber" : 34
      },
      "nodeContext" : "int n=s1Size - s1offset;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "s1offset",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 288,
      "startColumnNumber" : 23,
      "endLineNumber" : 288,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayAccess,index]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 288,
        "startColumnNumber" : 19,
        "endLineNumber" : 288,
        "endColumnNumber" : 31
      },
      "nodeContext" : "i + s1offset",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 288,
        "startColumnNumber" : 16,
        "endLineNumber" : 288,
        "endColumnNumber" : 32
      },
      "nodeContext" : "s1[i + s1offset]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 288,
        "startColumnNumber" : 16,
        "endLineNumber" : 288,
        "endColumnNumber" : 52
      },
      "nodeContext" : "s1[i + s1offset] != s2[i + s2offset]",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 288,
        "startColumnNumber" : 12,
        "endLineNumber" : 290,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (s1[i + s1offset] != s2[i + s2offset]) {\n  return s1[i + s1offset] < s2[i + s2offset] ? -1 : 1;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 29,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 286,
        "startColumnNumber" : 36,
        "endLineNumber" : 291,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (s1[i + s1offset] != s2[i + s2offset]) {\n    return s1[i + s1offset] < s2[i + s2offset] ? -1 : 1;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 30,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 179,
        "startLineNumber" : 286,
        "startColumnNumber" : 8,
        "endLineNumber" : 291,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < n; i++) {\n  if (s1[i + s1offset] != s2[i + s2offset]) {\n    return s1[i + s1offset] < s2[i + s2offset] ? -1 : 1;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 41,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 335,
        "startLineNumber" : 278,
        "startColumnNumber" : 104,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int n=s1Size - s1offset;\n  if (n > (s2Size - s2offset)) {\n    n=s2Size - s2offset;\n  }\n  for (int i=0; i < n; i++) {\n    if (s1[i + s1offset] != s2[i + s2offset]) {\n      return s1[i + s1offset] < s2[i + s2offset] ? -1 : 1;\n    }\n  }\n  return 0;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 620,
        "startLineNumber" : 273,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Compare two byte array segments to see if they are equal return 1 if s1[s1offset...s1Size] is bigger than s2[s2offset...s2Size] otherwise return -1\n */\nprivate static int memcmp(byte[] s1,int s1Size,int s1offset,byte[] s2,int s2Size,int s2offset){\n  int n=s1Size - s1offset;\n  if (n > (s2Size - s2offset)) {\n    n=s2Size - s2offset;\n  }\n  for (int i=0; i < n; i++) {\n    if (s1[i + s1offset] != s2[i + s2offset]) {\n      return s1[i + s1offset] < s2[i + s2offset] ? -1 : 1;\n    }\n  }\n  return 0;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 93,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 288,
        "startColumnNumber" : 16,
        "endLineNumber" : 288,
        "endColumnNumber" : 52
      },
      "nodeContext" : "s1[i + s1offset] != s2[i + s2offset]",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "s1offset",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 289,
      "startColumnNumber" : 30,
      "endLineNumber" : 289,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayAccess,index]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 289,
        "startColumnNumber" : 26,
        "endLineNumber" : 289,
        "endColumnNumber" : 38
      },
      "nodeContext" : "i + s1offset",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 289,
        "startColumnNumber" : 23,
        "endLineNumber" : 289,
        "endColumnNumber" : 39
      },
      "nodeContext" : "s1[i + s1offset]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 289,
        "startColumnNumber" : 23,
        "endLineNumber" : 289,
        "endColumnNumber" : 58
      },
      "nodeContext" : "s1[i + s1offset] < s2[i + s2offset]",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 289,
        "startColumnNumber" : 23,
        "endLineNumber" : 289,
        "endColumnNumber" : 67
      },
      "nodeContext" : "s1[i + s1offset] < s2[i + s2offset] ? -1 : 1",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 289,
        "startColumnNumber" : 16,
        "endLineNumber" : 289,
        "endColumnNumber" : 68
      },
      "nodeContext" : "return s1[i + s1offset] < s2[i + s2offset] ? -1 : 1;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 288,
        "startColumnNumber" : 54,
        "endLineNumber" : 290,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  return s1[i + s1offset] < s2[i + s2offset] ? -1 : 1;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 288,
        "startColumnNumber" : 12,
        "endLineNumber" : 290,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (s1[i + s1offset] != s2[i + s2offset]) {\n  return s1[i + s1offset] < s2[i + s2offset] ? -1 : 1;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 29,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 286,
        "startColumnNumber" : 36,
        "endLineNumber" : 291,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (s1[i + s1offset] != s2[i + s2offset]) {\n    return s1[i + s1offset] < s2[i + s2offset] ? -1 : 1;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 30,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 179,
        "startLineNumber" : 286,
        "startColumnNumber" : 8,
        "endLineNumber" : 291,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < n; i++) {\n  if (s1[i + s1offset] != s2[i + s2offset]) {\n    return s1[i + s1offset] < s2[i + s2offset] ? -1 : 1;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 41,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 335,
        "startLineNumber" : 278,
        "startColumnNumber" : 104,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int n=s1Size - s1offset;\n  if (n > (s2Size - s2offset)) {\n    n=s2Size - s2offset;\n  }\n  for (int i=0; i < n; i++) {\n    if (s1[i + s1offset] != s2[i + s2offset]) {\n      return s1[i + s1offset] < s2[i + s2offset] ? -1 : 1;\n    }\n  }\n  return 0;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 620,
        "startLineNumber" : 273,
        "startColumnNumber" : 4,
        "endLineNumber" : 293,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Compare two byte array segments to see if they are equal return 1 if s1[s1offset...s1Size] is bigger than s2[s2offset...s2Size] otherwise return -1\n */\nprivate static int memcmp(byte[] s1,int s1Size,int s1offset,byte[] s2,int s2Size,int s2offset){\n  int n=s1Size - s1offset;\n  if (n > (s2Size - s2offset)) {\n    n=s2Size - s2offset;\n  }\n  for (int i=0; i < n; i++) {\n    if (s1[i + s1offset] != s2[i + s2offset]) {\n      return s1[i + s1offset] < s2[i + s2offset] ? -1 : 1;\n    }\n  }\n  return 0;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 93,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 289,
        "startColumnNumber" : 16,
        "endLineNumber" : 289,
        "endColumnNumber" : 68
      },
      "nodeContext" : "return s1[i + s1offset] < s2[i + s2offset] ? -1 : 1;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 280,
    "startColumnNumber" : 25,
    "endLineNumber" : 280,
    "endColumnNumber" : 33
  }, {
    "charLength" : 8,
    "startLineNumber" : 288,
    "startColumnNumber" : 23,
    "endLineNumber" : 288,
    "endColumnNumber" : 31
  }, {
    "charLength" : 8,
    "startLineNumber" : 289,
    "startColumnNumber" : 30,
    "endLineNumber" : 289,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 9
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 6
  } ]
}