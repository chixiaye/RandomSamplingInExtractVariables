{
  "id" : 411,
  "expression" : "MockConnectorFactory",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-tests/src/test/java/com/facebook/presto/connector/informationschema/BenchmarkInformationSchema.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "MockConnectorFactory",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 130,
      "startColumnNumber" : 60,
      "endLineNumber" : 130,
      "endColumnNumber" : 80
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 130,
        "startColumnNumber" : 60,
        "endLineNumber" : 130,
        "endColumnNumber" : 90
      },
      "nodeContext" : "MockConnectorFactory.builder()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 130,
        "startColumnNumber" : 60,
        "endLineNumber" : 131,
        "endColumnNumber" : 65
      },
      "nodeContext" : "MockConnectorFactory.builder().withListSchemaNames(listSchemaNames)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 130,
        "startColumnNumber" : 60,
        "endLineNumber" : 132,
        "endColumnNumber" : 55
      },
      "nodeContext" : "MockConnectorFactory.builder().withListSchemaNames(listSchemaNames).withListTables(listTables)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 234,
        "startLineNumber" : 130,
        "startColumnNumber" : 60,
        "endLineNumber" : 133,
        "endColumnNumber" : 81
      },
      "nodeContext" : "MockConnectorFactory.builder().withListSchemaNames(listSchemaNames).withListTables(listTables).withGetViews((session,prefix) -> ImmutableMap.of())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 302,
        "startLineNumber" : 130,
        "startColumnNumber" : 60,
        "endLineNumber" : 134,
        "endColumnNumber" : 67
      },
      "nodeContext" : "MockConnectorFactory.builder().withListSchemaNames(listSchemaNames).withListTables(listTables).withGetViews((session,prefix) -> ImmutableMap.of()).withGetColumnHandles(getColumnHandles)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 339,
        "startLineNumber" : 130,
        "startColumnNumber" : 60,
        "endLineNumber" : 135,
        "endColumnNumber" : 36
      },
      "nodeContext" : "MockConnectorFactory.builder().withListSchemaNames(listSchemaNames).withListTables(listTables).withGetViews((session,prefix) -> ImmutableMap.of()).withGetColumnHandles(getColumnHandles).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 358,
        "startLineNumber" : 130,
        "startColumnNumber" : 41,
        "endLineNumber" : 135,
        "endColumnNumber" : 36
      },
      "nodeContext" : "connectorFactory=MockConnectorFactory.builder().withListSchemaNames(listSchemaNames).withListTables(listTables).withGetViews((session,prefix) -> ImmutableMap.of()).withGetColumnHandles(getColumnHandles).build()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 26,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 380,
        "startLineNumber" : 130,
        "startColumnNumber" : 20,
        "endLineNumber" : 135,
        "endColumnNumber" : 37
      },
      "nodeContext" : "MockConnectorFactory connectorFactory=MockConnectorFactory.builder().withListSchemaNames(listSchemaNames).withListTables(listTables).withGetViews((session,prefix) -> ImmutableMap.of()).withGetColumnHandles(getColumnHandles).build();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 29,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2164,
        "startLineNumber" : 103,
        "startColumnNumber" : 16,
        "endLineNumber" : 137,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  Function<ConnectorSession,List<String>> listSchemaNames=session -> IntStream.range(0,Integer.parseInt(schemasCount)).boxed().map(i -> \"stream_\" + i).collect(toImmutableList());\n  BiFunction<ConnectorSession,String,List<SchemaTableName>> listTables=(session,schemaNameOrNull) -> {\n    List<String> tables=IntStream.range(0,Integer.parseInt(tablesCount)).boxed().map(i -> \"table_\" + i).collect(toImmutableList());\n    List<String> schemas;\n    if (schemaNameOrNull == null) {\n      schemas=listSchemaNames.apply(session);\n    }\n else {\n      schemas=ImmutableList.of(schemaNameOrNull);\n    }\n    return schemas.stream().flatMap(schema -> tables.stream().map(table -> new SchemaTableName(schema,table))).collect(toImmutableList());\n  }\n;\n  BiFunction<ConnectorSession,ConnectorTableHandle,Map<String,TpchColumnHandle>> getColumnHandles=(session,tableHandle) -> IntStream.range(0,Integer.parseInt(columnsCount)).boxed().map(i -> \"column_\" + i).collect(toImmutableMap(column -> column,column -> new TpchColumnHandle(column,createUnboundedVarcharType()){\n  }\n));\n  MockConnectorFactory connectorFactory=MockConnectorFactory.builder().withListSchemaNames(listSchemaNames).withListTables(listTables).withGetViews((session,prefix) -> ImmutableMap.of()).withGetColumnHandles(getColumnHandles).build();\n  return ImmutableList.of(connectorFactory);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 236,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2264,
        "startLineNumber" : 101,
        "startColumnNumber" : 16,
        "endLineNumber" : 137,
        "endColumnNumber" : 17
      },
      "nodeContext" : "@Override public Iterable<ConnectorFactory> getConnectorFactories(){\n  Function<ConnectorSession,List<String>> listSchemaNames=session -> IntStream.range(0,Integer.parseInt(schemasCount)).boxed().map(i -> \"stream_\" + i).collect(toImmutableList());\n  BiFunction<ConnectorSession,String,List<SchemaTableName>> listTables=(session,schemaNameOrNull) -> {\n    List<String> tables=IntStream.range(0,Integer.parseInt(tablesCount)).boxed().map(i -> \"table_\" + i).collect(toImmutableList());\n    List<String> schemas;\n    if (schemaNameOrNull == null) {\n      schemas=listSchemaNames.apply(session);\n    }\n else {\n      schemas=ImmutableList.of(schemaNameOrNull);\n    }\n    return schemas.stream().flatMap(schema -> tables.stream().map(table -> new SchemaTableName(schema,table))).collect(toImmutableList());\n  }\n;\n  BiFunction<ConnectorSession,ConnectorTableHandle,Map<String,TpchColumnHandle>> getColumnHandles=(session,tableHandle) -> IntStream.range(0,Integer.parseInt(columnsCount)).boxed().map(i -> \"column_\" + i).collect(toImmutableMap(column -> column,column -> new TpchColumnHandle(column,createUnboundedVarcharType()){\n  }\n));\n  MockConnectorFactory connectorFactory=MockConnectorFactory.builder().withListSchemaNames(listSchemaNames).withListTables(listTables).withGetViews((session,prefix) -> ImmutableMap.of()).withGetColumnHandles(getColumnHandles).build();\n  return ImmutableList.of(connectorFactory);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 246,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 130,
        "startColumnNumber" : 60,
        "endLineNumber" : 130,
        "endColumnNumber" : 90
      },
      "nodeContext" : "MockConnectorFactory.builder()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.facebook.presto.connector.MockConnectorFactory"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 130,
    "startColumnNumber" : 60,
    "endLineNumber" : 130,
    "endColumnNumber" : 80
  } ],
  "layoutRelationDataList" : [ ]
}