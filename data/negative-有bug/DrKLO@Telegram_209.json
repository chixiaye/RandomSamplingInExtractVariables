{
  "id" : 209,
  "expression" : "otherDataLenBits << 8",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/com/google/android/exoplayer2/extractor/ts/LatmReader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "otherDataLenBits << 8",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 224,
      "startColumnNumber" : 32,
      "endLineNumber" : 224,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 224,
        "startColumnNumber" : 31,
        "endLineNumber" : 224,
        "endColumnNumber" : 54
      },
      "nodeContext" : "(otherDataLenBits << 8)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 224,
        "startColumnNumber" : 31,
        "endLineNumber" : 224,
        "endColumnNumber" : 73
      },
      "nodeContext" : "(otherDataLenBits << 8) + data.readBits(8)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 224,
        "startColumnNumber" : 12,
        "endLineNumber" : 224,
        "endColumnNumber" : 73
      },
      "nodeContext" : "otherDataLenBits=(otherDataLenBits << 8) + data.readBits(8)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 224,
        "startColumnNumber" : 12,
        "endLineNumber" : 224,
        "endColumnNumber" : 74
      },
      "nodeContext" : "otherDataLenBits=(otherDataLenBits << 8) + data.readBits(8);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.DoStatement,body]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 222,
        "startColumnNumber" : 13,
        "endLineNumber" : 225,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  otherDataLenEsc=data.readBit();\n  otherDataLenBits=(otherDataLenBits << 8) + data.readBits(8);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 222,
        "startColumnNumber" : 10,
        "endLineNumber" : 225,
        "endColumnNumber" : 36
      },
      "nodeContext" : "do {\n  otherDataLenEsc=data.readBit();\n  otherDataLenBits=(otherDataLenBits << 8) + data.readBits(8);\n}\n while (otherDataLenEsc);\n",
      "nodeType" : "DoStatement",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 219,
        "startLineNumber" : 220,
        "startColumnNumber" : 15,
        "endLineNumber" : 226,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  boolean otherDataLenEsc;\n  do {\n    otherDataLenEsc=data.readBit();\n    otherDataLenBits=(otherDataLenBits << 8) + data.readBits(8);\n  }\n while (otherDataLenEsc);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 311,
        "startLineNumber" : 218,
        "startColumnNumber" : 8,
        "endLineNumber" : 226,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (audioMuxVersion == 1) {\n  otherDataLenBits=latmGetValue(data);\n}\n else {\n  boolean otherDataLenEsc;\n  do {\n    otherDataLenEsc=data.readBit();\n    otherDataLenBits=(otherDataLenBits << 8) + data.readBits(8);\n  }\n while (otherDataLenEsc);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 37,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 329,
        "startLineNumber" : 217,
        "startColumnNumber" : 28,
        "endLineNumber" : 227,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (audioMuxVersion == 1) {\n    otherDataLenBits=latmGetValue(data);\n  }\n else {\n    boolean otherDataLenEsc;\n    do {\n      otherDataLenEsc=data.readBit();\n      otherDataLenBits=(otherDataLenBits << 8) + data.readBits(8);\n    }\n while (otherDataLenEsc);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 351,
        "startLineNumber" : 217,
        "startColumnNumber" : 6,
        "endLineNumber" : 227,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (otherDataPresent) {\n  if (audioMuxVersion == 1) {\n    otherDataLenBits=latmGetValue(data);\n  }\n else {\n    boolean otherDataLenEsc;\n    do {\n      otherDataLenEsc=data.readBit();\n      otherDataLenBits=(otherDataLenBits << 8) + data.readBits(8);\n    }\n while (otherDataLenEsc);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 40,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1865,
        "startLineNumber" : 182,
        "startColumnNumber" : 31,
        "endLineNumber" : 232,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (audioMuxVersion == 1) {\n    latmGetValue(data);\n  }\n  if (!data.readBit()) {\n    throw new ParserException();\n  }\n  numSubframes=data.readBits(6);\n  int numProgram=data.readBits(4);\n  int numLayer=data.readBits(3);\n  if (numProgram != 0 || numLayer != 0) {\n    throw new ParserException();\n  }\n  if (audioMuxVersion == 0) {\n    int startPosition=data.getPosition();\n    int readBits=parseAudioSpecificConfig(data);\n    data.setPosition(startPosition);\n    byte[] initData=new byte[(readBits + 7) / 8];\n    data.readBits(initData,0,readBits);\n    Format format=Format.createAudioSampleFormat(formatId,MimeTypes.AUDIO_AAC,null,Format.NO_VALUE,Format.NO_VALUE,channelCount,sampleRateHz,Collections.singletonList(initData),null,0,language);\n    if (!format.equals(this.format)) {\n      this.format=format;\n      sampleDurationUs=(C.MICROS_PER_SECOND * 1024) / format.sampleRate;\n      output.format(format);\n    }\n  }\n else {\n    int ascLen=(int)latmGetValue(data);\n    int bitsRead=parseAudioSpecificConfig(data);\n    data.skipBits(ascLen - bitsRead);\n  }\n  parseFrameLength(data);\n  otherDataPresent=data.readBit();\n  otherDataLenBits=0;\n  if (otherDataPresent) {\n    if (audioMuxVersion == 1) {\n      otherDataLenBits=latmGetValue(data);\n    }\n else {\n      boolean otherDataLenEsc;\n      do {\n        otherDataLenEsc=data.readBit();\n        otherDataLenBits=(otherDataLenBits << 8) + data.readBits(8);\n      }\n while (otherDataLenEsc);\n    }\n  }\n  boolean crcCheckPresent=data.readBit();\n  if (crcCheckPresent) {\n    data.skipBits(8);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 257,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1988,
        "startLineNumber" : 182,
        "startColumnNumber" : 4,
        "endLineNumber" : 234,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (audioMuxVersionA == 0) {\n  if (audioMuxVersion == 1) {\n    latmGetValue(data);\n  }\n  if (!data.readBit()) {\n    throw new ParserException();\n  }\n  numSubframes=data.readBits(6);\n  int numProgram=data.readBits(4);\n  int numLayer=data.readBits(3);\n  if (numProgram != 0 || numLayer != 0) {\n    throw new ParserException();\n  }\n  if (audioMuxVersion == 0) {\n    int startPosition=data.getPosition();\n    int readBits=parseAudioSpecificConfig(data);\n    data.setPosition(startPosition);\n    byte[] initData=new byte[(readBits + 7) / 8];\n    data.readBits(initData,0,readBits);\n    Format format=Format.createAudioSampleFormat(formatId,MimeTypes.AUDIO_AAC,null,Format.NO_VALUE,Format.NO_VALUE,channelCount,sampleRateHz,Collections.singletonList(initData),null,0,language);\n    if (!format.equals(this.format)) {\n      this.format=format;\n      sampleDurationUs=(C.MICROS_PER_SECOND * 1024) / format.sampleRate;\n      output.format(format);\n    }\n  }\n else {\n    int ascLen=(int)latmGetValue(data);\n    int bitsRead=parseAudioSpecificConfig(data);\n    data.skipBits(ascLen - bitsRead);\n  }\n  parseFrameLength(data);\n  otherDataPresent=data.readBit();\n  otherDataLenBits=0;\n  if (otherDataPresent) {\n    if (audioMuxVersion == 1) {\n      otherDataLenBits=latmGetValue(data);\n    }\n else {\n      boolean otherDataLenEsc;\n      do {\n        otherDataLenEsc=data.readBit();\n        otherDataLenBits=(otherDataLenBits << 8) + data.readBits(8);\n      }\n while (otherDataLenEsc);\n    }\n  }\n  boolean crcCheckPresent=data.readBit();\n  if (crcCheckPresent) {\n    data.skipBits(8);\n  }\n}\n else {\n  throw new ParserException();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 266,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2110,
        "startLineNumber" : 179,
        "startColumnNumber" : 82,
        "endLineNumber" : 235,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int audioMuxVersion=data.readBits(1);\n  audioMuxVersionA=audioMuxVersion == 1 ? data.readBits(1) : 0;\n  if (audioMuxVersionA == 0) {\n    if (audioMuxVersion == 1) {\n      latmGetValue(data);\n    }\n    if (!data.readBit()) {\n      throw new ParserException();\n    }\n    numSubframes=data.readBits(6);\n    int numProgram=data.readBits(4);\n    int numLayer=data.readBits(3);\n    if (numProgram != 0 || numLayer != 0) {\n      throw new ParserException();\n    }\n    if (audioMuxVersion == 0) {\n      int startPosition=data.getPosition();\n      int readBits=parseAudioSpecificConfig(data);\n      data.setPosition(startPosition);\n      byte[] initData=new byte[(readBits + 7) / 8];\n      data.readBits(initData,0,readBits);\n      Format format=Format.createAudioSampleFormat(formatId,MimeTypes.AUDIO_AAC,null,Format.NO_VALUE,Format.NO_VALUE,channelCount,sampleRateHz,Collections.singletonList(initData),null,0,language);\n      if (!format.equals(this.format)) {\n        this.format=format;\n        sampleDurationUs=(C.MICROS_PER_SECOND * 1024) / format.sampleRate;\n        output.format(format);\n      }\n    }\n else {\n      int ascLen=(int)latmGetValue(data);\n      int bitsRead=parseAudioSpecificConfig(data);\n      data.skipBits(ascLen - bitsRead);\n    }\n    parseFrameLength(data);\n    otherDataPresent=data.readBit();\n    otherDataLenBits=0;\n    if (otherDataPresent) {\n      if (audioMuxVersion == 1) {\n        otherDataLenBits=latmGetValue(data);\n      }\n else {\n        boolean otherDataLenEsc;\n        do {\n          otherDataLenEsc=data.readBit();\n          otherDataLenBits=(otherDataLenBits << 8) + data.readBits(8);\n        }\n while (otherDataLenEsc);\n      }\n    }\n    boolean crcCheckPresent=data.readBit();\n    if (crcCheckPresent) {\n      data.skipBits(8);\n    }\n  }\n else {\n    throw new ParserException();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 287,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2296,
        "startLineNumber" : 176,
        "startColumnNumber" : 2,
        "endLineNumber" : 235,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Parses a StreamMuxConfig as defined in ISO/IEC 14496-3:2009 Section 1.7.3.1, Table 1.42.\n */\nprivate void parseStreamMuxConfig(ParsableBitArray data) throws ParserException {\n  int audioMuxVersion=data.readBits(1);\n  audioMuxVersionA=audioMuxVersion == 1 ? data.readBits(1) : 0;\n  if (audioMuxVersionA == 0) {\n    if (audioMuxVersion == 1) {\n      latmGetValue(data);\n    }\n    if (!data.readBit()) {\n      throw new ParserException();\n    }\n    numSubframes=data.readBits(6);\n    int numProgram=data.readBits(4);\n    int numLayer=data.readBits(3);\n    if (numProgram != 0 || numLayer != 0) {\n      throw new ParserException();\n    }\n    if (audioMuxVersion == 0) {\n      int startPosition=data.getPosition();\n      int readBits=parseAudioSpecificConfig(data);\n      data.setPosition(startPosition);\n      byte[] initData=new byte[(readBits + 7) / 8];\n      data.readBits(initData,0,readBits);\n      Format format=Format.createAudioSampleFormat(formatId,MimeTypes.AUDIO_AAC,null,Format.NO_VALUE,Format.NO_VALUE,channelCount,sampleRateHz,Collections.singletonList(initData),null,0,language);\n      if (!format.equals(this.format)) {\n        this.format=format;\n        sampleDurationUs=(C.MICROS_PER_SECOND * 1024) / format.sampleRate;\n        output.format(format);\n      }\n    }\n else {\n      int ascLen=(int)latmGetValue(data);\n      int bitsRead=parseAudioSpecificConfig(data);\n      data.skipBits(ascLen - bitsRead);\n    }\n    parseFrameLength(data);\n    otherDataPresent=data.readBit();\n    otherDataLenBits=0;\n    if (otherDataPresent) {\n      if (audioMuxVersion == 1) {\n        otherDataLenBits=latmGetValue(data);\n      }\n else {\n        boolean otherDataLenEsc;\n        do {\n          otherDataLenEsc=data.readBit();\n          otherDataLenBits=(otherDataLenBits << 8) + data.readBits(8);\n        }\n while (otherDataLenEsc);\n      }\n    }\n    boolean crcCheckPresent=data.readBit();\n    if (crcCheckPresent) {\n      data.skipBits(8);\n    }\n  }\n else {\n    throw new ParserException();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 298,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 224,
        "startColumnNumber" : 12,
        "endLineNumber" : 224,
        "endColumnNumber" : 74
      },
      "nodeContext" : "otherDataLenBits=(otherDataLenBits << 8) + data.readBits(8);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 224,
    "startColumnNumber" : 32,
    "endLineNumber" : 224,
    "endColumnNumber" : 53
  } ],
  "layoutRelationDataList" : [ ]
}