{
  "id" : 385,
  "expression" : "Math",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-state-backends/flink-statebackend-rocksdb/src/main/java/org/apache/flink/contrib/streaming/state/RocksDBWriteBatchWrapper.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Math",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 88,
      "startColumnNumber" : 34,
      "endLineNumber" : 88,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 88,
        "startColumnNumber" : 34,
        "endLineNumber" : 88,
        "endColumnNumber" : 92
      },
      "nodeContext" : "Math.min(this.batchSize,this.capacity * PER_RECORD_BYTES)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 88,
        "startColumnNumber" : 28,
        "endLineNumber" : 88,
        "endColumnNumber" : 92
      },
      "nodeContext" : "(int)Math.min(this.batchSize,this.capacity * PER_RECORD_BYTES)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 87,
        "startColumnNumber" : 20,
        "endLineNumber" : 88,
        "endColumnNumber" : 93
      },
      "nodeContext" : "new WriteBatch((int)Math.min(this.batchSize,this.capacity * PER_RECORD_BYTES))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 86,
        "startColumnNumber" : 12,
        "endLineNumber" : 88,
        "endColumnNumber" : 93
      },
      "nodeContext" : "this.batch=new WriteBatch((int)Math.min(this.batchSize,this.capacity * PER_RECORD_BYTES))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 143,
        "startLineNumber" : 86,
        "startColumnNumber" : 12,
        "endLineNumber" : 88,
        "endColumnNumber" : 94
      },
      "nodeContext" : "this.batch=new WriteBatch((int)Math.min(this.batchSize,this.capacity * PER_RECORD_BYTES));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 167,
        "startLineNumber" : 85,
        "startColumnNumber" : 32,
        "endLineNumber" : 89,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  this.batch=new WriteBatch((int)Math.min(this.batchSize,this.capacity * PER_RECORD_BYTES));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 283,
        "startLineNumber" : 85,
        "startColumnNumber" : 8,
        "endLineNumber" : 91,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (this.batchSize > 0) {\n  this.batch=new WriteBatch((int)Math.min(this.batchSize,this.capacity * PER_RECORD_BYTES));\n}\n else {\n  this.batch=new WriteBatch(this.capacity * PER_RECORD_BYTES);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 42,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 719,
        "startLineNumber" : 75,
        "startColumnNumber" : 28,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Preconditions.checkArgument(capacity >= MIN_CAPACITY && capacity <= MAX_CAPACITY,\"capacity should be between \" + MIN_CAPACITY + \" and \"+ MAX_CAPACITY);\n  Preconditions.checkArgument(batchSize >= 0,\"Max batch size have to be no negative.\");\n  this.db=rocksDB;\n  this.options=options;\n  this.capacity=capacity;\n  this.batchSize=batchSize;\n  if (this.batchSize > 0) {\n    this.batch=new WriteBatch((int)Math.min(this.batchSize,this.capacity * PER_RECORD_BYTES));\n  }\n else {\n    this.batch=new WriteBatch(this.capacity * PER_RECORD_BYTES);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 888,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public RocksDBWriteBatchWrapper(@Nonnull RocksDB rocksDB,@Nullable WriteOptions options,int capacity,long batchSize){\n  Preconditions.checkArgument(capacity >= MIN_CAPACITY && capacity <= MAX_CAPACITY,\"capacity should be between \" + MIN_CAPACITY + \" and \"+ MAX_CAPACITY);\n  Preconditions.checkArgument(batchSize >= 0,\"Max batch size have to be no negative.\");\n  this.db=rocksDB;\n  this.options=options;\n  this.capacity=capacity;\n  this.batchSize=batchSize;\n  if (this.batchSize > 0) {\n    this.batch=new WriteBatch((int)Math.min(this.batchSize,this.capacity * PER_RECORD_BYTES));\n  }\n else {\n    this.batch=new WriteBatch(this.capacity * PER_RECORD_BYTES);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 112,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 88,
        "startColumnNumber" : 28,
        "endLineNumber" : 88,
        "endColumnNumber" : 92
      },
      "nodeContext" : "(int)Math.min(this.batchSize,this.capacity * PER_RECORD_BYTES)",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.Math"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 88,
    "startColumnNumber" : 34,
    "endLineNumber" : 88,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ ]
}