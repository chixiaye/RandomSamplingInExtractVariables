{
  "id" : 241,
  "expression" : "imageReleaseTime",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/drawee-backends/drawee-pipeline/src/test/java/com/facebook/drawee/backends/pipeline/info/internal/ImagePerfControllerListenerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "imageReleaseTime",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 66,
      "startColumnNumber" : 43,
      "endLineNumber" : 66,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 66,
        "endColumnNumber" : 60
      },
      "nodeContext" : "when(mMonotonicClock.now()).thenReturn(imageReleaseTime)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 66,
        "endColumnNumber" : 61
      },
      "nodeContext" : "when(mMonotonicClock.now()).thenReturn(imageReleaseTime);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1531,
        "startLineNumber" : 50,
        "startColumnNumber" : 28,
        "endLineNumber" : 82,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final long startTime=10L;\n  final long imageLoadTime=200L;\n  final long imageReleaseTime=345L;\n  int expectedNumOfTimestamps=0;\n  when(mMonotonicClock.now()).thenReturn(startTime);\n  mListener.onSubmit(CONTROLLER_ID,CALLER_CONTEXT);\n  expectedNumOfTimestamps++;\n  when(mImagePerfState.getImageLoadStatus()).thenReturn(ImageLoadStatus.REQUESTED);\n  when(mMonotonicClock.now()).thenReturn(imageLoadTime);\n  mListener.onFinalImageSet(CONTROLLER_ID,null,null);\n  expectedNumOfTimestamps++;\n  when(mImagePerfState.getImageLoadStatus()).thenReturn(ImageLoadStatus.SUCCESS);\n  when(mMonotonicClock.now()).thenReturn(imageReleaseTime);\n  mListener.onRelease(CONTROLLER_ID);\n  expectedNumOfTimestamps++;\n  verify(mMonotonicClock,times(expectedNumOfTimestamps)).now();\n  verify(mImagePerfMonitor).notifyStatusUpdated(eq(mImagePerfState),eq(ImageLoadStatus.REQUESTED));\n  verify(mImagePerfMonitor).notifyStatusUpdated(eq(mImagePerfState),eq(ImageLoadStatus.SUCCESS));\n  verify(mImagePerfMonitor).notifyListenersOfVisibilityStateUpdate(eq(mImagePerfState),eq(VisibilityState.VISIBLE));\n  verify(mImagePerfMonitor).notifyListenersOfVisibilityStateUpdate(eq(mImagePerfState),eq(VisibilityState.INVISIBLE));\n  verify(mListener).reportViewVisible(anyLong());\n  verify(mImagePerfState).setControllerSubmitTimeMs(startTime);\n  verify(mImagePerfState).setControllerFinalImageSetTimeMs(imageLoadTime);\n  verifyNoMoreInteractions(mImagePerfMonitor);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 191,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1565,
        "startLineNumber" : 49,
        "startColumnNumber" : 2,
        "endLineNumber" : 82,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testSuccess(){\n  final long startTime=10L;\n  final long imageLoadTime=200L;\n  final long imageReleaseTime=345L;\n  int expectedNumOfTimestamps=0;\n  when(mMonotonicClock.now()).thenReturn(startTime);\n  mListener.onSubmit(CONTROLLER_ID,CALLER_CONTEXT);\n  expectedNumOfTimestamps++;\n  when(mImagePerfState.getImageLoadStatus()).thenReturn(ImageLoadStatus.REQUESTED);\n  when(mMonotonicClock.now()).thenReturn(imageLoadTime);\n  mListener.onFinalImageSet(CONTROLLER_ID,null,null);\n  expectedNumOfTimestamps++;\n  when(mImagePerfState.getImageLoadStatus()).thenReturn(ImageLoadStatus.SUCCESS);\n  when(mMonotonicClock.now()).thenReturn(imageReleaseTime);\n  mListener.onRelease(CONTROLLER_ID);\n  expectedNumOfTimestamps++;\n  verify(mMonotonicClock,times(expectedNumOfTimestamps)).now();\n  verify(mImagePerfMonitor).notifyStatusUpdated(eq(mImagePerfState),eq(ImageLoadStatus.REQUESTED));\n  verify(mImagePerfMonitor).notifyStatusUpdated(eq(mImagePerfState),eq(ImageLoadStatus.SUCCESS));\n  verify(mImagePerfMonitor).notifyListenersOfVisibilityStateUpdate(eq(mImagePerfState),eq(VisibilityState.VISIBLE));\n  verify(mImagePerfMonitor).notifyListenersOfVisibilityStateUpdate(eq(mImagePerfState),eq(VisibilityState.INVISIBLE));\n  verify(mListener).reportViewVisible(anyLong());\n  verify(mImagePerfState).setControllerSubmitTimeMs(startTime);\n  verify(mImagePerfState).setControllerFinalImageSetTimeMs(imageLoadTime);\n  verifyNoMoreInteractions(mImagePerfMonitor);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 197,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 66,
        "endColumnNumber" : 61
      },
      "nodeContext" : "when(mMonotonicClock.now()).thenReturn(imageReleaseTime);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 66,
    "startColumnNumber" : 43,
    "endLineNumber" : 66,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ ]
}