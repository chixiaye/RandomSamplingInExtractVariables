{
  "id" : 371,
  "expression" : "VertexAttributes",
  "projectName" : "libgdx@libgdx",
  "commitID" : "3485b16e8979c0141421bc80cb8831b7a0403f67",
  "filePath" : "/tests/gdx-tests/src/com/badlogic/gdx/tests/g3d/MultipleRenderTargetTest.java",
  "occurrences" : 6,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "VertexAttributes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 177,
      "startColumnNumber" : 83,
      "endLineNumber" : 177,
      "endColumnNumber" : 99
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.QualifiedName,qualifier]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 177,
        "startColumnNumber" : 83,
        "endLineNumber" : 177,
        "endColumnNumber" : 105
      },
      "nodeContext" : "VertexAttributes.Usage",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 177,
        "startColumnNumber" : 83,
        "endLineNumber" : 177,
        "endColumnNumber" : 114
      },
      "nodeContext" : "VertexAttributes.Usage.Position",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 177,
        "startColumnNumber" : 83,
        "endLineNumber" : 177,
        "endColumnNumber" : 183
      },
      "nodeContext" : "VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 177,
        "startColumnNumber" : 37,
        "endLineNumber" : 177,
        "endColumnNumber" : 200
      },
      "nodeContext" : "modelBuilder.part(\"light\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 26,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 177,
        "startColumnNumber" : 19,
        "endLineNumber" : 177,
        "endColumnNumber" : 200
      },
      "nodeContext" : "meshPartBuilder=modelBuilder.part(\"light\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 28,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 198,
        "startLineNumber" : 177,
        "startColumnNumber" : 3,
        "endLineNumber" : 177,
        "endColumnNumber" : 201
      },
      "nodeContext" : "MeshPartBuilder meshPartBuilder=modelBuilder.part(\"light\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 805,
        "startLineNumber" : 167,
        "startColumnNumber" : 39,
        "endLineNumber" : 183,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  modelBuilder.begin();\n  Light light=new Light();\n  light.color.set(MathUtils.random(1f),MathUtils.random(1f),MathUtils.random(1f));\n  light.position.set(MathUtils.random(-10f,10f),MathUtils.random(10f,15f),MathUtils.random(-10f,10f));\n  light.vy=MathUtils.random(10f,20f);\n  light.vx=MathUtils.random(-10f,10f);\n  light.vz=MathUtils.random(-10f,10f);\n  MeshPartBuilder meshPartBuilder=modelBuilder.part(\"light\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material());\n  meshPartBuilder.setColor(light.color.x,light.color.y,light.color.z,1f);\n  meshPartBuilder.sphere(0.2f,0.2f,0.2f,10,10);\n  light.lightInstance=new ModelInstance(modelBuilder.end());\n  lights.add(light);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 842,
        "startLineNumber" : 167,
        "startColumnNumber" : 2,
        "endLineNumber" : 183,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=0; i < NUM_LIGHTS; i++) {\n  modelBuilder.begin();\n  Light light=new Light();\n  light.color.set(MathUtils.random(1f),MathUtils.random(1f),MathUtils.random(1f));\n  light.position.set(MathUtils.random(-10f,10f),MathUtils.random(10f,15f),MathUtils.random(-10f,10f));\n  light.vy=MathUtils.random(10f,20f);\n  light.vx=MathUtils.random(-10f,10f);\n  light.vz=MathUtils.random(-10f,10f);\n  MeshPartBuilder meshPartBuilder=modelBuilder.part(\"light\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material());\n  meshPartBuilder.setColor(light.color.x,light.color.y,light.color.z,1f);\n  meshPartBuilder.sphere(0.2f,0.2f,0.2f,10,10);\n  light.lightInstance=new ModelInstance(modelBuilder.end());\n  lights.add(light);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 173,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4003,
        "startLineNumber" : 103,
        "startColumnNumber" : 23,
        "endLineNumber" : 192,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  batch=new SpriteBatch();\n  ShaderProgram.pedantic=false;\n  modelCache=new ModelCache();\n  ShaderProgram.prependVertexCode=Gdx.app.getType().equals(Application.ApplicationType.Desktop) ? \"#version 140\\n #extension GL_ARB_explicit_attrib_location : enable\\n\" : \"#version 300 es\\n\";\n  ShaderProgram.prependFragmentCode=Gdx.app.getType().equals(Application.ApplicationType.Desktop) ? \"#version 140\\n #extension GL_ARB_explicit_attrib_location : enable\\n\" : \"#version 300 es\\n\";\n  renderContext=new RenderContext(new DefaultTextureBinder(DefaultTextureBinder.ROUNDROBIN));\n  shaderProvider=new BaseShaderProvider(){\n    @Override protected Shader createShader(    Renderable renderable){\n      return new MRTShader(renderable);\n    }\n  }\n;\n  renderableSorter=new DefaultRenderableSorter(){\n    @Override public int compare(    Renderable o1,    Renderable o2){\n      return o1.shader.compareTo(o2.shader);\n    }\n  }\n;\n  mrtSceneShader=new ShaderProgram(Gdx.files.internal(\"data/g3d/shaders/mrtscene.vert\"),Gdx.files.internal(\"data/g3d/shaders/mrtscene.frag\"));\n  if (!mrtSceneShader.isCompiled()) {\n    System.out.println(mrtSceneShader.getLog());\n  }\n  quad=createFullScreenQuad();\n  camera=new PerspectiveCamera(67,Gdx.graphics.getWidth(),Gdx.graphics.getHeight());\n  camera.near=1f;\n  camera.far=100f;\n  camera.position.set(3,5,10);\n  camera.lookAt(0,2,0);\n  camera.up.set(0,1,0);\n  camera.update();\n  cameraController=new FirstPersonCameraController(camera);\n  cameraController.setVelocity(50);\n  Gdx.input.setInputProcessor(cameraController);\n  GLFrameBuffer.FrameBufferBuilder frameBufferBuilder=new GLFrameBuffer.FrameBufferBuilder(Gdx.graphics.getWidth(),Gdx.graphics.getHeight());\n  frameBufferBuilder.addColorTextureAttachment(GL30.GL_RGBA8,GL30.GL_RGBA,GL30.GL_UNSIGNED_BYTE);\n  frameBufferBuilder.addColorTextureAttachment(GL30.GL_RGB8,GL30.GL_RGB,GL30.GL_UNSIGNED_BYTE);\n  frameBufferBuilder.addColorTextureAttachment(GL30.GL_RGB8,GL30.GL_RGB,GL30.GL_UNSIGNED_BYTE);\n  frameBufferBuilder.addDepthTextureAttachment(GL30.GL_DEPTH_COMPONENT,GL30.GL_UNSIGNED_SHORT);\n  frameBuffer=frameBufferBuilder.build();\n  AssetManager assetManager=new AssetManager();\n  assetManager.load(\"data/g3d/materials/cannon.g3db\",Model.class);\n  assetManager.finishLoading();\n  Model scene=assetManager.get(\"data/g3d/materials/cannon.g3db\");\n  cannon=new ModelInstance(scene,\"Cannon_LP\");\n  cannon.transform.setToTranslationAndScaling(0,0,0,0.001f,0.001f,0.001f);\n  ModelBuilder modelBuilder=new ModelBuilder();\n  for (int i=0; i < NUM_LIGHTS; i++) {\n    modelBuilder.begin();\n    Light light=new Light();\n    light.color.set(MathUtils.random(1f),MathUtils.random(1f),MathUtils.random(1f));\n    light.position.set(MathUtils.random(-10f,10f),MathUtils.random(10f,15f),MathUtils.random(-10f,10f));\n    light.vy=MathUtils.random(10f,20f);\n    light.vx=MathUtils.random(-10f,10f);\n    light.vz=MathUtils.random(-10f,10f);\n    MeshPartBuilder meshPartBuilder=modelBuilder.part(\"light\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material());\n    meshPartBuilder.setColor(light.color.x,light.color.y,light.color.z,1f);\n    meshPartBuilder.sphere(0.2f,0.2f,0.2f,10,10);\n    light.lightInstance=new ModelInstance(modelBuilder.end());\n    lights.add(light);\n  }\n  modelBuilder.begin();\n  MeshPartBuilder meshPartBuilder=modelBuilder.part(\"floor\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material());\n  meshPartBuilder.setColor(0.2f,0.2f,0.2f,1f);\n  meshPartBuilder.box(0,-0.1f,0f,20f,0.1f,20f);\n  floorInstance=new ModelInstance(modelBuilder.end());\n  Gdx.input.setInputProcessor(new InputMultiplexer(this,cameraController));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 622,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4036,
        "startLineNumber" : 102,
        "startColumnNumber" : 1,
        "endLineNumber" : 192,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void create(){\n  batch=new SpriteBatch();\n  ShaderProgram.pedantic=false;\n  modelCache=new ModelCache();\n  ShaderProgram.prependVertexCode=Gdx.app.getType().equals(Application.ApplicationType.Desktop) ? \"#version 140\\n #extension GL_ARB_explicit_attrib_location : enable\\n\" : \"#version 300 es\\n\";\n  ShaderProgram.prependFragmentCode=Gdx.app.getType().equals(Application.ApplicationType.Desktop) ? \"#version 140\\n #extension GL_ARB_explicit_attrib_location : enable\\n\" : \"#version 300 es\\n\";\n  renderContext=new RenderContext(new DefaultTextureBinder(DefaultTextureBinder.ROUNDROBIN));\n  shaderProvider=new BaseShaderProvider(){\n    @Override protected Shader createShader(    Renderable renderable){\n      return new MRTShader(renderable);\n    }\n  }\n;\n  renderableSorter=new DefaultRenderableSorter(){\n    @Override public int compare(    Renderable o1,    Renderable o2){\n      return o1.shader.compareTo(o2.shader);\n    }\n  }\n;\n  mrtSceneShader=new ShaderProgram(Gdx.files.internal(\"data/g3d/shaders/mrtscene.vert\"),Gdx.files.internal(\"data/g3d/shaders/mrtscene.frag\"));\n  if (!mrtSceneShader.isCompiled()) {\n    System.out.println(mrtSceneShader.getLog());\n  }\n  quad=createFullScreenQuad();\n  camera=new PerspectiveCamera(67,Gdx.graphics.getWidth(),Gdx.graphics.getHeight());\n  camera.near=1f;\n  camera.far=100f;\n  camera.position.set(3,5,10);\n  camera.lookAt(0,2,0);\n  camera.up.set(0,1,0);\n  camera.update();\n  cameraController=new FirstPersonCameraController(camera);\n  cameraController.setVelocity(50);\n  Gdx.input.setInputProcessor(cameraController);\n  GLFrameBuffer.FrameBufferBuilder frameBufferBuilder=new GLFrameBuffer.FrameBufferBuilder(Gdx.graphics.getWidth(),Gdx.graphics.getHeight());\n  frameBufferBuilder.addColorTextureAttachment(GL30.GL_RGBA8,GL30.GL_RGBA,GL30.GL_UNSIGNED_BYTE);\n  frameBufferBuilder.addColorTextureAttachment(GL30.GL_RGB8,GL30.GL_RGB,GL30.GL_UNSIGNED_BYTE);\n  frameBufferBuilder.addColorTextureAttachment(GL30.GL_RGB8,GL30.GL_RGB,GL30.GL_UNSIGNED_BYTE);\n  frameBufferBuilder.addDepthTextureAttachment(GL30.GL_DEPTH_COMPONENT,GL30.GL_UNSIGNED_SHORT);\n  frameBuffer=frameBufferBuilder.build();\n  AssetManager assetManager=new AssetManager();\n  assetManager.load(\"data/g3d/materials/cannon.g3db\",Model.class);\n  assetManager.finishLoading();\n  Model scene=assetManager.get(\"data/g3d/materials/cannon.g3db\");\n  cannon=new ModelInstance(scene,\"Cannon_LP\");\n  cannon.transform.setToTranslationAndScaling(0,0,0,0.001f,0.001f,0.001f);\n  ModelBuilder modelBuilder=new ModelBuilder();\n  for (int i=0; i < NUM_LIGHTS; i++) {\n    modelBuilder.begin();\n    Light light=new Light();\n    light.color.set(MathUtils.random(1f),MathUtils.random(1f),MathUtils.random(1f));\n    light.position.set(MathUtils.random(-10f,10f),MathUtils.random(10f,15f),MathUtils.random(-10f,10f));\n    light.vy=MathUtils.random(10f,20f);\n    light.vx=MathUtils.random(-10f,10f);\n    light.vz=MathUtils.random(-10f,10f);\n    MeshPartBuilder meshPartBuilder=modelBuilder.part(\"light\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material());\n    meshPartBuilder.setColor(light.color.x,light.color.y,light.color.z,1f);\n    meshPartBuilder.sphere(0.2f,0.2f,0.2f,10,10);\n    light.lightInstance=new ModelInstance(modelBuilder.end());\n    lights.add(light);\n  }\n  modelBuilder.begin();\n  MeshPartBuilder meshPartBuilder=modelBuilder.part(\"floor\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material());\n  meshPartBuilder.setColor(0.2f,0.2f,0.2f,1f);\n  meshPartBuilder.box(0,-0.1f,0f,20f,0.1f,20f);\n  floorInstance=new ModelInstance(modelBuilder.end());\n  Gdx.input.setInputProcessor(new InputMultiplexer(this,cameraController));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 628,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 198,
        "startLineNumber" : 177,
        "startColumnNumber" : 3,
        "endLineNumber" : 177,
        "endColumnNumber" : 201
      },
      "nodeContext" : "MeshPartBuilder meshPartBuilder=modelBuilder.part(\"light\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "com.badlogic.gdx.graphics.VertexAttributes"
  }, {
    "nodeContext" : "VertexAttributes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 177,
      "startColumnNumber" : 117,
      "endLineNumber" : 177,
      "endColumnNumber" : 133
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.QualifiedName,qualifier]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 177,
        "startColumnNumber" : 117,
        "endLineNumber" : 177,
        "endColumnNumber" : 139
      },
      "nodeContext" : "VertexAttributes.Usage",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 177,
        "startColumnNumber" : 117,
        "endLineNumber" : 177,
        "endColumnNumber" : 151
      },
      "nodeContext" : "VertexAttributes.Usage.ColorPacked",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 177,
        "startColumnNumber" : 83,
        "endLineNumber" : 177,
        "endColumnNumber" : 183
      },
      "nodeContext" : "VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 177,
        "startColumnNumber" : 37,
        "endLineNumber" : 177,
        "endColumnNumber" : 200
      },
      "nodeContext" : "modelBuilder.part(\"light\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 26,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 177,
        "startColumnNumber" : 19,
        "endLineNumber" : 177,
        "endColumnNumber" : 200
      },
      "nodeContext" : "meshPartBuilder=modelBuilder.part(\"light\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 28,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 198,
        "startLineNumber" : 177,
        "startColumnNumber" : 3,
        "endLineNumber" : 177,
        "endColumnNumber" : 201
      },
      "nodeContext" : "MeshPartBuilder meshPartBuilder=modelBuilder.part(\"light\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 805,
        "startLineNumber" : 167,
        "startColumnNumber" : 39,
        "endLineNumber" : 183,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  modelBuilder.begin();\n  Light light=new Light();\n  light.color.set(MathUtils.random(1f),MathUtils.random(1f),MathUtils.random(1f));\n  light.position.set(MathUtils.random(-10f,10f),MathUtils.random(10f,15f),MathUtils.random(-10f,10f));\n  light.vy=MathUtils.random(10f,20f);\n  light.vx=MathUtils.random(-10f,10f);\n  light.vz=MathUtils.random(-10f,10f);\n  MeshPartBuilder meshPartBuilder=modelBuilder.part(\"light\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material());\n  meshPartBuilder.setColor(light.color.x,light.color.y,light.color.z,1f);\n  meshPartBuilder.sphere(0.2f,0.2f,0.2f,10,10);\n  light.lightInstance=new ModelInstance(modelBuilder.end());\n  lights.add(light);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 842,
        "startLineNumber" : 167,
        "startColumnNumber" : 2,
        "endLineNumber" : 183,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=0; i < NUM_LIGHTS; i++) {\n  modelBuilder.begin();\n  Light light=new Light();\n  light.color.set(MathUtils.random(1f),MathUtils.random(1f),MathUtils.random(1f));\n  light.position.set(MathUtils.random(-10f,10f),MathUtils.random(10f,15f),MathUtils.random(-10f,10f));\n  light.vy=MathUtils.random(10f,20f);\n  light.vx=MathUtils.random(-10f,10f);\n  light.vz=MathUtils.random(-10f,10f);\n  MeshPartBuilder meshPartBuilder=modelBuilder.part(\"light\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material());\n  meshPartBuilder.setColor(light.color.x,light.color.y,light.color.z,1f);\n  meshPartBuilder.sphere(0.2f,0.2f,0.2f,10,10);\n  light.lightInstance=new ModelInstance(modelBuilder.end());\n  lights.add(light);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 173,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4003,
        "startLineNumber" : 103,
        "startColumnNumber" : 23,
        "endLineNumber" : 192,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  batch=new SpriteBatch();\n  ShaderProgram.pedantic=false;\n  modelCache=new ModelCache();\n  ShaderProgram.prependVertexCode=Gdx.app.getType().equals(Application.ApplicationType.Desktop) ? \"#version 140\\n #extension GL_ARB_explicit_attrib_location : enable\\n\" : \"#version 300 es\\n\";\n  ShaderProgram.prependFragmentCode=Gdx.app.getType().equals(Application.ApplicationType.Desktop) ? \"#version 140\\n #extension GL_ARB_explicit_attrib_location : enable\\n\" : \"#version 300 es\\n\";\n  renderContext=new RenderContext(new DefaultTextureBinder(DefaultTextureBinder.ROUNDROBIN));\n  shaderProvider=new BaseShaderProvider(){\n    @Override protected Shader createShader(    Renderable renderable){\n      return new MRTShader(renderable);\n    }\n  }\n;\n  renderableSorter=new DefaultRenderableSorter(){\n    @Override public int compare(    Renderable o1,    Renderable o2){\n      return o1.shader.compareTo(o2.shader);\n    }\n  }\n;\n  mrtSceneShader=new ShaderProgram(Gdx.files.internal(\"data/g3d/shaders/mrtscene.vert\"),Gdx.files.internal(\"data/g3d/shaders/mrtscene.frag\"));\n  if (!mrtSceneShader.isCompiled()) {\n    System.out.println(mrtSceneShader.getLog());\n  }\n  quad=createFullScreenQuad();\n  camera=new PerspectiveCamera(67,Gdx.graphics.getWidth(),Gdx.graphics.getHeight());\n  camera.near=1f;\n  camera.far=100f;\n  camera.position.set(3,5,10);\n  camera.lookAt(0,2,0);\n  camera.up.set(0,1,0);\n  camera.update();\n  cameraController=new FirstPersonCameraController(camera);\n  cameraController.setVelocity(50);\n  Gdx.input.setInputProcessor(cameraController);\n  GLFrameBuffer.FrameBufferBuilder frameBufferBuilder=new GLFrameBuffer.FrameBufferBuilder(Gdx.graphics.getWidth(),Gdx.graphics.getHeight());\n  frameBufferBuilder.addColorTextureAttachment(GL30.GL_RGBA8,GL30.GL_RGBA,GL30.GL_UNSIGNED_BYTE);\n  frameBufferBuilder.addColorTextureAttachment(GL30.GL_RGB8,GL30.GL_RGB,GL30.GL_UNSIGNED_BYTE);\n  frameBufferBuilder.addColorTextureAttachment(GL30.GL_RGB8,GL30.GL_RGB,GL30.GL_UNSIGNED_BYTE);\n  frameBufferBuilder.addDepthTextureAttachment(GL30.GL_DEPTH_COMPONENT,GL30.GL_UNSIGNED_SHORT);\n  frameBuffer=frameBufferBuilder.build();\n  AssetManager assetManager=new AssetManager();\n  assetManager.load(\"data/g3d/materials/cannon.g3db\",Model.class);\n  assetManager.finishLoading();\n  Model scene=assetManager.get(\"data/g3d/materials/cannon.g3db\");\n  cannon=new ModelInstance(scene,\"Cannon_LP\");\n  cannon.transform.setToTranslationAndScaling(0,0,0,0.001f,0.001f,0.001f);\n  ModelBuilder modelBuilder=new ModelBuilder();\n  for (int i=0; i < NUM_LIGHTS; i++) {\n    modelBuilder.begin();\n    Light light=new Light();\n    light.color.set(MathUtils.random(1f),MathUtils.random(1f),MathUtils.random(1f));\n    light.position.set(MathUtils.random(-10f,10f),MathUtils.random(10f,15f),MathUtils.random(-10f,10f));\n    light.vy=MathUtils.random(10f,20f);\n    light.vx=MathUtils.random(-10f,10f);\n    light.vz=MathUtils.random(-10f,10f);\n    MeshPartBuilder meshPartBuilder=modelBuilder.part(\"light\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material());\n    meshPartBuilder.setColor(light.color.x,light.color.y,light.color.z,1f);\n    meshPartBuilder.sphere(0.2f,0.2f,0.2f,10,10);\n    light.lightInstance=new ModelInstance(modelBuilder.end());\n    lights.add(light);\n  }\n  modelBuilder.begin();\n  MeshPartBuilder meshPartBuilder=modelBuilder.part(\"floor\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material());\n  meshPartBuilder.setColor(0.2f,0.2f,0.2f,1f);\n  meshPartBuilder.box(0,-0.1f,0f,20f,0.1f,20f);\n  floorInstance=new ModelInstance(modelBuilder.end());\n  Gdx.input.setInputProcessor(new InputMultiplexer(this,cameraController));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 622,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4036,
        "startLineNumber" : 102,
        "startColumnNumber" : 1,
        "endLineNumber" : 192,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void create(){\n  batch=new SpriteBatch();\n  ShaderProgram.pedantic=false;\n  modelCache=new ModelCache();\n  ShaderProgram.prependVertexCode=Gdx.app.getType().equals(Application.ApplicationType.Desktop) ? \"#version 140\\n #extension GL_ARB_explicit_attrib_location : enable\\n\" : \"#version 300 es\\n\";\n  ShaderProgram.prependFragmentCode=Gdx.app.getType().equals(Application.ApplicationType.Desktop) ? \"#version 140\\n #extension GL_ARB_explicit_attrib_location : enable\\n\" : \"#version 300 es\\n\";\n  renderContext=new RenderContext(new DefaultTextureBinder(DefaultTextureBinder.ROUNDROBIN));\n  shaderProvider=new BaseShaderProvider(){\n    @Override protected Shader createShader(    Renderable renderable){\n      return new MRTShader(renderable);\n    }\n  }\n;\n  renderableSorter=new DefaultRenderableSorter(){\n    @Override public int compare(    Renderable o1,    Renderable o2){\n      return o1.shader.compareTo(o2.shader);\n    }\n  }\n;\n  mrtSceneShader=new ShaderProgram(Gdx.files.internal(\"data/g3d/shaders/mrtscene.vert\"),Gdx.files.internal(\"data/g3d/shaders/mrtscene.frag\"));\n  if (!mrtSceneShader.isCompiled()) {\n    System.out.println(mrtSceneShader.getLog());\n  }\n  quad=createFullScreenQuad();\n  camera=new PerspectiveCamera(67,Gdx.graphics.getWidth(),Gdx.graphics.getHeight());\n  camera.near=1f;\n  camera.far=100f;\n  camera.position.set(3,5,10);\n  camera.lookAt(0,2,0);\n  camera.up.set(0,1,0);\n  camera.update();\n  cameraController=new FirstPersonCameraController(camera);\n  cameraController.setVelocity(50);\n  Gdx.input.setInputProcessor(cameraController);\n  GLFrameBuffer.FrameBufferBuilder frameBufferBuilder=new GLFrameBuffer.FrameBufferBuilder(Gdx.graphics.getWidth(),Gdx.graphics.getHeight());\n  frameBufferBuilder.addColorTextureAttachment(GL30.GL_RGBA8,GL30.GL_RGBA,GL30.GL_UNSIGNED_BYTE);\n  frameBufferBuilder.addColorTextureAttachment(GL30.GL_RGB8,GL30.GL_RGB,GL30.GL_UNSIGNED_BYTE);\n  frameBufferBuilder.addColorTextureAttachment(GL30.GL_RGB8,GL30.GL_RGB,GL30.GL_UNSIGNED_BYTE);\n  frameBufferBuilder.addDepthTextureAttachment(GL30.GL_DEPTH_COMPONENT,GL30.GL_UNSIGNED_SHORT);\n  frameBuffer=frameBufferBuilder.build();\n  AssetManager assetManager=new AssetManager();\n  assetManager.load(\"data/g3d/materials/cannon.g3db\",Model.class);\n  assetManager.finishLoading();\n  Model scene=assetManager.get(\"data/g3d/materials/cannon.g3db\");\n  cannon=new ModelInstance(scene,\"Cannon_LP\");\n  cannon.transform.setToTranslationAndScaling(0,0,0,0.001f,0.001f,0.001f);\n  ModelBuilder modelBuilder=new ModelBuilder();\n  for (int i=0; i < NUM_LIGHTS; i++) {\n    modelBuilder.begin();\n    Light light=new Light();\n    light.color.set(MathUtils.random(1f),MathUtils.random(1f),MathUtils.random(1f));\n    light.position.set(MathUtils.random(-10f,10f),MathUtils.random(10f,15f),MathUtils.random(-10f,10f));\n    light.vy=MathUtils.random(10f,20f);\n    light.vx=MathUtils.random(-10f,10f);\n    light.vz=MathUtils.random(-10f,10f);\n    MeshPartBuilder meshPartBuilder=modelBuilder.part(\"light\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material());\n    meshPartBuilder.setColor(light.color.x,light.color.y,light.color.z,1f);\n    meshPartBuilder.sphere(0.2f,0.2f,0.2f,10,10);\n    light.lightInstance=new ModelInstance(modelBuilder.end());\n    lights.add(light);\n  }\n  modelBuilder.begin();\n  MeshPartBuilder meshPartBuilder=modelBuilder.part(\"floor\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material());\n  meshPartBuilder.setColor(0.2f,0.2f,0.2f,1f);\n  meshPartBuilder.box(0,-0.1f,0f,20f,0.1f,20f);\n  floorInstance=new ModelInstance(modelBuilder.end());\n  Gdx.input.setInputProcessor(new InputMultiplexer(this,cameraController));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 628,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 198,
        "startLineNumber" : 177,
        "startColumnNumber" : 3,
        "endLineNumber" : 177,
        "endColumnNumber" : 201
      },
      "nodeContext" : "MeshPartBuilder meshPartBuilder=modelBuilder.part(\"light\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "com.badlogic.gdx.graphics.VertexAttributes"
  }, {
    "nodeContext" : "VertexAttributes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 177,
      "startColumnNumber" : 154,
      "endLineNumber" : 177,
      "endColumnNumber" : 170
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.QualifiedName,qualifier]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 177,
        "startColumnNumber" : 154,
        "endLineNumber" : 177,
        "endColumnNumber" : 176
      },
      "nodeContext" : "VertexAttributes.Usage",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 177,
        "startColumnNumber" : 154,
        "endLineNumber" : 177,
        "endColumnNumber" : 183
      },
      "nodeContext" : "VertexAttributes.Usage.Normal",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 177,
        "startColumnNumber" : 83,
        "endLineNumber" : 177,
        "endColumnNumber" : 183
      },
      "nodeContext" : "VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 177,
        "startColumnNumber" : 37,
        "endLineNumber" : 177,
        "endColumnNumber" : 200
      },
      "nodeContext" : "modelBuilder.part(\"light\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 26,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 177,
        "startColumnNumber" : 19,
        "endLineNumber" : 177,
        "endColumnNumber" : 200
      },
      "nodeContext" : "meshPartBuilder=modelBuilder.part(\"light\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 28,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 198,
        "startLineNumber" : 177,
        "startColumnNumber" : 3,
        "endLineNumber" : 177,
        "endColumnNumber" : 201
      },
      "nodeContext" : "MeshPartBuilder meshPartBuilder=modelBuilder.part(\"light\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 805,
        "startLineNumber" : 167,
        "startColumnNumber" : 39,
        "endLineNumber" : 183,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  modelBuilder.begin();\n  Light light=new Light();\n  light.color.set(MathUtils.random(1f),MathUtils.random(1f),MathUtils.random(1f));\n  light.position.set(MathUtils.random(-10f,10f),MathUtils.random(10f,15f),MathUtils.random(-10f,10f));\n  light.vy=MathUtils.random(10f,20f);\n  light.vx=MathUtils.random(-10f,10f);\n  light.vz=MathUtils.random(-10f,10f);\n  MeshPartBuilder meshPartBuilder=modelBuilder.part(\"light\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material());\n  meshPartBuilder.setColor(light.color.x,light.color.y,light.color.z,1f);\n  meshPartBuilder.sphere(0.2f,0.2f,0.2f,10,10);\n  light.lightInstance=new ModelInstance(modelBuilder.end());\n  lights.add(light);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 842,
        "startLineNumber" : 167,
        "startColumnNumber" : 2,
        "endLineNumber" : 183,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=0; i < NUM_LIGHTS; i++) {\n  modelBuilder.begin();\n  Light light=new Light();\n  light.color.set(MathUtils.random(1f),MathUtils.random(1f),MathUtils.random(1f));\n  light.position.set(MathUtils.random(-10f,10f),MathUtils.random(10f,15f),MathUtils.random(-10f,10f));\n  light.vy=MathUtils.random(10f,20f);\n  light.vx=MathUtils.random(-10f,10f);\n  light.vz=MathUtils.random(-10f,10f);\n  MeshPartBuilder meshPartBuilder=modelBuilder.part(\"light\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material());\n  meshPartBuilder.setColor(light.color.x,light.color.y,light.color.z,1f);\n  meshPartBuilder.sphere(0.2f,0.2f,0.2f,10,10);\n  light.lightInstance=new ModelInstance(modelBuilder.end());\n  lights.add(light);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 173,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4003,
        "startLineNumber" : 103,
        "startColumnNumber" : 23,
        "endLineNumber" : 192,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  batch=new SpriteBatch();\n  ShaderProgram.pedantic=false;\n  modelCache=new ModelCache();\n  ShaderProgram.prependVertexCode=Gdx.app.getType().equals(Application.ApplicationType.Desktop) ? \"#version 140\\n #extension GL_ARB_explicit_attrib_location : enable\\n\" : \"#version 300 es\\n\";\n  ShaderProgram.prependFragmentCode=Gdx.app.getType().equals(Application.ApplicationType.Desktop) ? \"#version 140\\n #extension GL_ARB_explicit_attrib_location : enable\\n\" : \"#version 300 es\\n\";\n  renderContext=new RenderContext(new DefaultTextureBinder(DefaultTextureBinder.ROUNDROBIN));\n  shaderProvider=new BaseShaderProvider(){\n    @Override protected Shader createShader(    Renderable renderable){\n      return new MRTShader(renderable);\n    }\n  }\n;\n  renderableSorter=new DefaultRenderableSorter(){\n    @Override public int compare(    Renderable o1,    Renderable o2){\n      return o1.shader.compareTo(o2.shader);\n    }\n  }\n;\n  mrtSceneShader=new ShaderProgram(Gdx.files.internal(\"data/g3d/shaders/mrtscene.vert\"),Gdx.files.internal(\"data/g3d/shaders/mrtscene.frag\"));\n  if (!mrtSceneShader.isCompiled()) {\n    System.out.println(mrtSceneShader.getLog());\n  }\n  quad=createFullScreenQuad();\n  camera=new PerspectiveCamera(67,Gdx.graphics.getWidth(),Gdx.graphics.getHeight());\n  camera.near=1f;\n  camera.far=100f;\n  camera.position.set(3,5,10);\n  camera.lookAt(0,2,0);\n  camera.up.set(0,1,0);\n  camera.update();\n  cameraController=new FirstPersonCameraController(camera);\n  cameraController.setVelocity(50);\n  Gdx.input.setInputProcessor(cameraController);\n  GLFrameBuffer.FrameBufferBuilder frameBufferBuilder=new GLFrameBuffer.FrameBufferBuilder(Gdx.graphics.getWidth(),Gdx.graphics.getHeight());\n  frameBufferBuilder.addColorTextureAttachment(GL30.GL_RGBA8,GL30.GL_RGBA,GL30.GL_UNSIGNED_BYTE);\n  frameBufferBuilder.addColorTextureAttachment(GL30.GL_RGB8,GL30.GL_RGB,GL30.GL_UNSIGNED_BYTE);\n  frameBufferBuilder.addColorTextureAttachment(GL30.GL_RGB8,GL30.GL_RGB,GL30.GL_UNSIGNED_BYTE);\n  frameBufferBuilder.addDepthTextureAttachment(GL30.GL_DEPTH_COMPONENT,GL30.GL_UNSIGNED_SHORT);\n  frameBuffer=frameBufferBuilder.build();\n  AssetManager assetManager=new AssetManager();\n  assetManager.load(\"data/g3d/materials/cannon.g3db\",Model.class);\n  assetManager.finishLoading();\n  Model scene=assetManager.get(\"data/g3d/materials/cannon.g3db\");\n  cannon=new ModelInstance(scene,\"Cannon_LP\");\n  cannon.transform.setToTranslationAndScaling(0,0,0,0.001f,0.001f,0.001f);\n  ModelBuilder modelBuilder=new ModelBuilder();\n  for (int i=0; i < NUM_LIGHTS; i++) {\n    modelBuilder.begin();\n    Light light=new Light();\n    light.color.set(MathUtils.random(1f),MathUtils.random(1f),MathUtils.random(1f));\n    light.position.set(MathUtils.random(-10f,10f),MathUtils.random(10f,15f),MathUtils.random(-10f,10f));\n    light.vy=MathUtils.random(10f,20f);\n    light.vx=MathUtils.random(-10f,10f);\n    light.vz=MathUtils.random(-10f,10f);\n    MeshPartBuilder meshPartBuilder=modelBuilder.part(\"light\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material());\n    meshPartBuilder.setColor(light.color.x,light.color.y,light.color.z,1f);\n    meshPartBuilder.sphere(0.2f,0.2f,0.2f,10,10);\n    light.lightInstance=new ModelInstance(modelBuilder.end());\n    lights.add(light);\n  }\n  modelBuilder.begin();\n  MeshPartBuilder meshPartBuilder=modelBuilder.part(\"floor\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material());\n  meshPartBuilder.setColor(0.2f,0.2f,0.2f,1f);\n  meshPartBuilder.box(0,-0.1f,0f,20f,0.1f,20f);\n  floorInstance=new ModelInstance(modelBuilder.end());\n  Gdx.input.setInputProcessor(new InputMultiplexer(this,cameraController));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 622,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4036,
        "startLineNumber" : 102,
        "startColumnNumber" : 1,
        "endLineNumber" : 192,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void create(){\n  batch=new SpriteBatch();\n  ShaderProgram.pedantic=false;\n  modelCache=new ModelCache();\n  ShaderProgram.prependVertexCode=Gdx.app.getType().equals(Application.ApplicationType.Desktop) ? \"#version 140\\n #extension GL_ARB_explicit_attrib_location : enable\\n\" : \"#version 300 es\\n\";\n  ShaderProgram.prependFragmentCode=Gdx.app.getType().equals(Application.ApplicationType.Desktop) ? \"#version 140\\n #extension GL_ARB_explicit_attrib_location : enable\\n\" : \"#version 300 es\\n\";\n  renderContext=new RenderContext(new DefaultTextureBinder(DefaultTextureBinder.ROUNDROBIN));\n  shaderProvider=new BaseShaderProvider(){\n    @Override protected Shader createShader(    Renderable renderable){\n      return new MRTShader(renderable);\n    }\n  }\n;\n  renderableSorter=new DefaultRenderableSorter(){\n    @Override public int compare(    Renderable o1,    Renderable o2){\n      return o1.shader.compareTo(o2.shader);\n    }\n  }\n;\n  mrtSceneShader=new ShaderProgram(Gdx.files.internal(\"data/g3d/shaders/mrtscene.vert\"),Gdx.files.internal(\"data/g3d/shaders/mrtscene.frag\"));\n  if (!mrtSceneShader.isCompiled()) {\n    System.out.println(mrtSceneShader.getLog());\n  }\n  quad=createFullScreenQuad();\n  camera=new PerspectiveCamera(67,Gdx.graphics.getWidth(),Gdx.graphics.getHeight());\n  camera.near=1f;\n  camera.far=100f;\n  camera.position.set(3,5,10);\n  camera.lookAt(0,2,0);\n  camera.up.set(0,1,0);\n  camera.update();\n  cameraController=new FirstPersonCameraController(camera);\n  cameraController.setVelocity(50);\n  Gdx.input.setInputProcessor(cameraController);\n  GLFrameBuffer.FrameBufferBuilder frameBufferBuilder=new GLFrameBuffer.FrameBufferBuilder(Gdx.graphics.getWidth(),Gdx.graphics.getHeight());\n  frameBufferBuilder.addColorTextureAttachment(GL30.GL_RGBA8,GL30.GL_RGBA,GL30.GL_UNSIGNED_BYTE);\n  frameBufferBuilder.addColorTextureAttachment(GL30.GL_RGB8,GL30.GL_RGB,GL30.GL_UNSIGNED_BYTE);\n  frameBufferBuilder.addColorTextureAttachment(GL30.GL_RGB8,GL30.GL_RGB,GL30.GL_UNSIGNED_BYTE);\n  frameBufferBuilder.addDepthTextureAttachment(GL30.GL_DEPTH_COMPONENT,GL30.GL_UNSIGNED_SHORT);\n  frameBuffer=frameBufferBuilder.build();\n  AssetManager assetManager=new AssetManager();\n  assetManager.load(\"data/g3d/materials/cannon.g3db\",Model.class);\n  assetManager.finishLoading();\n  Model scene=assetManager.get(\"data/g3d/materials/cannon.g3db\");\n  cannon=new ModelInstance(scene,\"Cannon_LP\");\n  cannon.transform.setToTranslationAndScaling(0,0,0,0.001f,0.001f,0.001f);\n  ModelBuilder modelBuilder=new ModelBuilder();\n  for (int i=0; i < NUM_LIGHTS; i++) {\n    modelBuilder.begin();\n    Light light=new Light();\n    light.color.set(MathUtils.random(1f),MathUtils.random(1f),MathUtils.random(1f));\n    light.position.set(MathUtils.random(-10f,10f),MathUtils.random(10f,15f),MathUtils.random(-10f,10f));\n    light.vy=MathUtils.random(10f,20f);\n    light.vx=MathUtils.random(-10f,10f);\n    light.vz=MathUtils.random(-10f,10f);\n    MeshPartBuilder meshPartBuilder=modelBuilder.part(\"light\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material());\n    meshPartBuilder.setColor(light.color.x,light.color.y,light.color.z,1f);\n    meshPartBuilder.sphere(0.2f,0.2f,0.2f,10,10);\n    light.lightInstance=new ModelInstance(modelBuilder.end());\n    lights.add(light);\n  }\n  modelBuilder.begin();\n  MeshPartBuilder meshPartBuilder=modelBuilder.part(\"floor\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material());\n  meshPartBuilder.setColor(0.2f,0.2f,0.2f,1f);\n  meshPartBuilder.box(0,-0.1f,0f,20f,0.1f,20f);\n  floorInstance=new ModelInstance(modelBuilder.end());\n  Gdx.input.setInputProcessor(new InputMultiplexer(this,cameraController));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 628,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 198,
        "startLineNumber" : 177,
        "startColumnNumber" : 3,
        "endLineNumber" : 177,
        "endColumnNumber" : 201
      },
      "nodeContext" : "MeshPartBuilder meshPartBuilder=modelBuilder.part(\"light\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "com.badlogic.gdx.graphics.VertexAttributes"
  }, {
    "nodeContext" : "VertexAttributes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 186,
      "startColumnNumber" : 82,
      "endLineNumber" : 186,
      "endColumnNumber" : 98
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.QualifiedName,qualifier]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 186,
        "startColumnNumber" : 82,
        "endLineNumber" : 186,
        "endColumnNumber" : 104
      },
      "nodeContext" : "VertexAttributes.Usage",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 186,
        "startColumnNumber" : 82,
        "endLineNumber" : 186,
        "endColumnNumber" : 113
      },
      "nodeContext" : "VertexAttributes.Usage.Position",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 186,
        "startColumnNumber" : 82,
        "endLineNumber" : 186,
        "endColumnNumber" : 182
      },
      "nodeContext" : "VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 186,
        "startColumnNumber" : 36,
        "endLineNumber" : 186,
        "endColumnNumber" : 199
      },
      "nodeContext" : "modelBuilder.part(\"floor\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 26,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 186,
        "startColumnNumber" : 18,
        "endLineNumber" : 186,
        "endColumnNumber" : 199
      },
      "nodeContext" : "meshPartBuilder=modelBuilder.part(\"floor\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 28,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 198,
        "startLineNumber" : 186,
        "startColumnNumber" : 2,
        "endLineNumber" : 186,
        "endColumnNumber" : 200
      },
      "nodeContext" : "MeshPartBuilder meshPartBuilder=modelBuilder.part(\"floor\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4003,
        "startLineNumber" : 103,
        "startColumnNumber" : 23,
        "endLineNumber" : 192,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  batch=new SpriteBatch();\n  ShaderProgram.pedantic=false;\n  modelCache=new ModelCache();\n  ShaderProgram.prependVertexCode=Gdx.app.getType().equals(Application.ApplicationType.Desktop) ? \"#version 140\\n #extension GL_ARB_explicit_attrib_location : enable\\n\" : \"#version 300 es\\n\";\n  ShaderProgram.prependFragmentCode=Gdx.app.getType().equals(Application.ApplicationType.Desktop) ? \"#version 140\\n #extension GL_ARB_explicit_attrib_location : enable\\n\" : \"#version 300 es\\n\";\n  renderContext=new RenderContext(new DefaultTextureBinder(DefaultTextureBinder.ROUNDROBIN));\n  shaderProvider=new BaseShaderProvider(){\n    @Override protected Shader createShader(    Renderable renderable){\n      return new MRTShader(renderable);\n    }\n  }\n;\n  renderableSorter=new DefaultRenderableSorter(){\n    @Override public int compare(    Renderable o1,    Renderable o2){\n      return o1.shader.compareTo(o2.shader);\n    }\n  }\n;\n  mrtSceneShader=new ShaderProgram(Gdx.files.internal(\"data/g3d/shaders/mrtscene.vert\"),Gdx.files.internal(\"data/g3d/shaders/mrtscene.frag\"));\n  if (!mrtSceneShader.isCompiled()) {\n    System.out.println(mrtSceneShader.getLog());\n  }\n  quad=createFullScreenQuad();\n  camera=new PerspectiveCamera(67,Gdx.graphics.getWidth(),Gdx.graphics.getHeight());\n  camera.near=1f;\n  camera.far=100f;\n  camera.position.set(3,5,10);\n  camera.lookAt(0,2,0);\n  camera.up.set(0,1,0);\n  camera.update();\n  cameraController=new FirstPersonCameraController(camera);\n  cameraController.setVelocity(50);\n  Gdx.input.setInputProcessor(cameraController);\n  GLFrameBuffer.FrameBufferBuilder frameBufferBuilder=new GLFrameBuffer.FrameBufferBuilder(Gdx.graphics.getWidth(),Gdx.graphics.getHeight());\n  frameBufferBuilder.addColorTextureAttachment(GL30.GL_RGBA8,GL30.GL_RGBA,GL30.GL_UNSIGNED_BYTE);\n  frameBufferBuilder.addColorTextureAttachment(GL30.GL_RGB8,GL30.GL_RGB,GL30.GL_UNSIGNED_BYTE);\n  frameBufferBuilder.addColorTextureAttachment(GL30.GL_RGB8,GL30.GL_RGB,GL30.GL_UNSIGNED_BYTE);\n  frameBufferBuilder.addDepthTextureAttachment(GL30.GL_DEPTH_COMPONENT,GL30.GL_UNSIGNED_SHORT);\n  frameBuffer=frameBufferBuilder.build();\n  AssetManager assetManager=new AssetManager();\n  assetManager.load(\"data/g3d/materials/cannon.g3db\",Model.class);\n  assetManager.finishLoading();\n  Model scene=assetManager.get(\"data/g3d/materials/cannon.g3db\");\n  cannon=new ModelInstance(scene,\"Cannon_LP\");\n  cannon.transform.setToTranslationAndScaling(0,0,0,0.001f,0.001f,0.001f);\n  ModelBuilder modelBuilder=new ModelBuilder();\n  for (int i=0; i < NUM_LIGHTS; i++) {\n    modelBuilder.begin();\n    Light light=new Light();\n    light.color.set(MathUtils.random(1f),MathUtils.random(1f),MathUtils.random(1f));\n    light.position.set(MathUtils.random(-10f,10f),MathUtils.random(10f,15f),MathUtils.random(-10f,10f));\n    light.vy=MathUtils.random(10f,20f);\n    light.vx=MathUtils.random(-10f,10f);\n    light.vz=MathUtils.random(-10f,10f);\n    MeshPartBuilder meshPartBuilder=modelBuilder.part(\"light\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material());\n    meshPartBuilder.setColor(light.color.x,light.color.y,light.color.z,1f);\n    meshPartBuilder.sphere(0.2f,0.2f,0.2f,10,10);\n    light.lightInstance=new ModelInstance(modelBuilder.end());\n    lights.add(light);\n  }\n  modelBuilder.begin();\n  MeshPartBuilder meshPartBuilder=modelBuilder.part(\"floor\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material());\n  meshPartBuilder.setColor(0.2f,0.2f,0.2f,1f);\n  meshPartBuilder.box(0,-0.1f,0f,20f,0.1f,20f);\n  floorInstance=new ModelInstance(modelBuilder.end());\n  Gdx.input.setInputProcessor(new InputMultiplexer(this,cameraController));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 622,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4036,
        "startLineNumber" : 102,
        "startColumnNumber" : 1,
        "endLineNumber" : 192,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void create(){\n  batch=new SpriteBatch();\n  ShaderProgram.pedantic=false;\n  modelCache=new ModelCache();\n  ShaderProgram.prependVertexCode=Gdx.app.getType().equals(Application.ApplicationType.Desktop) ? \"#version 140\\n #extension GL_ARB_explicit_attrib_location : enable\\n\" : \"#version 300 es\\n\";\n  ShaderProgram.prependFragmentCode=Gdx.app.getType().equals(Application.ApplicationType.Desktop) ? \"#version 140\\n #extension GL_ARB_explicit_attrib_location : enable\\n\" : \"#version 300 es\\n\";\n  renderContext=new RenderContext(new DefaultTextureBinder(DefaultTextureBinder.ROUNDROBIN));\n  shaderProvider=new BaseShaderProvider(){\n    @Override protected Shader createShader(    Renderable renderable){\n      return new MRTShader(renderable);\n    }\n  }\n;\n  renderableSorter=new DefaultRenderableSorter(){\n    @Override public int compare(    Renderable o1,    Renderable o2){\n      return o1.shader.compareTo(o2.shader);\n    }\n  }\n;\n  mrtSceneShader=new ShaderProgram(Gdx.files.internal(\"data/g3d/shaders/mrtscene.vert\"),Gdx.files.internal(\"data/g3d/shaders/mrtscene.frag\"));\n  if (!mrtSceneShader.isCompiled()) {\n    System.out.println(mrtSceneShader.getLog());\n  }\n  quad=createFullScreenQuad();\n  camera=new PerspectiveCamera(67,Gdx.graphics.getWidth(),Gdx.graphics.getHeight());\n  camera.near=1f;\n  camera.far=100f;\n  camera.position.set(3,5,10);\n  camera.lookAt(0,2,0);\n  camera.up.set(0,1,0);\n  camera.update();\n  cameraController=new FirstPersonCameraController(camera);\n  cameraController.setVelocity(50);\n  Gdx.input.setInputProcessor(cameraController);\n  GLFrameBuffer.FrameBufferBuilder frameBufferBuilder=new GLFrameBuffer.FrameBufferBuilder(Gdx.graphics.getWidth(),Gdx.graphics.getHeight());\n  frameBufferBuilder.addColorTextureAttachment(GL30.GL_RGBA8,GL30.GL_RGBA,GL30.GL_UNSIGNED_BYTE);\n  frameBufferBuilder.addColorTextureAttachment(GL30.GL_RGB8,GL30.GL_RGB,GL30.GL_UNSIGNED_BYTE);\n  frameBufferBuilder.addColorTextureAttachment(GL30.GL_RGB8,GL30.GL_RGB,GL30.GL_UNSIGNED_BYTE);\n  frameBufferBuilder.addDepthTextureAttachment(GL30.GL_DEPTH_COMPONENT,GL30.GL_UNSIGNED_SHORT);\n  frameBuffer=frameBufferBuilder.build();\n  AssetManager assetManager=new AssetManager();\n  assetManager.load(\"data/g3d/materials/cannon.g3db\",Model.class);\n  assetManager.finishLoading();\n  Model scene=assetManager.get(\"data/g3d/materials/cannon.g3db\");\n  cannon=new ModelInstance(scene,\"Cannon_LP\");\n  cannon.transform.setToTranslationAndScaling(0,0,0,0.001f,0.001f,0.001f);\n  ModelBuilder modelBuilder=new ModelBuilder();\n  for (int i=0; i < NUM_LIGHTS; i++) {\n    modelBuilder.begin();\n    Light light=new Light();\n    light.color.set(MathUtils.random(1f),MathUtils.random(1f),MathUtils.random(1f));\n    light.position.set(MathUtils.random(-10f,10f),MathUtils.random(10f,15f),MathUtils.random(-10f,10f));\n    light.vy=MathUtils.random(10f,20f);\n    light.vx=MathUtils.random(-10f,10f);\n    light.vz=MathUtils.random(-10f,10f);\n    MeshPartBuilder meshPartBuilder=modelBuilder.part(\"light\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material());\n    meshPartBuilder.setColor(light.color.x,light.color.y,light.color.z,1f);\n    meshPartBuilder.sphere(0.2f,0.2f,0.2f,10,10);\n    light.lightInstance=new ModelInstance(modelBuilder.end());\n    lights.add(light);\n  }\n  modelBuilder.begin();\n  MeshPartBuilder meshPartBuilder=modelBuilder.part(\"floor\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material());\n  meshPartBuilder.setColor(0.2f,0.2f,0.2f,1f);\n  meshPartBuilder.box(0,-0.1f,0f,20f,0.1f,20f);\n  floorInstance=new ModelInstance(modelBuilder.end());\n  Gdx.input.setInputProcessor(new InputMultiplexer(this,cameraController));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 628,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 198,
        "startLineNumber" : 186,
        "startColumnNumber" : 2,
        "endLineNumber" : 186,
        "endColumnNumber" : 200
      },
      "nodeContext" : "MeshPartBuilder meshPartBuilder=modelBuilder.part(\"floor\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "com.badlogic.gdx.graphics.VertexAttributes"
  }, {
    "nodeContext" : "VertexAttributes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 186,
      "startColumnNumber" : 116,
      "endLineNumber" : 186,
      "endColumnNumber" : 132
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.QualifiedName,qualifier]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 186,
        "startColumnNumber" : 116,
        "endLineNumber" : 186,
        "endColumnNumber" : 138
      },
      "nodeContext" : "VertexAttributes.Usage",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 186,
        "startColumnNumber" : 116,
        "endLineNumber" : 186,
        "endColumnNumber" : 150
      },
      "nodeContext" : "VertexAttributes.Usage.ColorPacked",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 186,
        "startColumnNumber" : 82,
        "endLineNumber" : 186,
        "endColumnNumber" : 182
      },
      "nodeContext" : "VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 186,
        "startColumnNumber" : 36,
        "endLineNumber" : 186,
        "endColumnNumber" : 199
      },
      "nodeContext" : "modelBuilder.part(\"floor\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 26,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 186,
        "startColumnNumber" : 18,
        "endLineNumber" : 186,
        "endColumnNumber" : 199
      },
      "nodeContext" : "meshPartBuilder=modelBuilder.part(\"floor\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 28,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 198,
        "startLineNumber" : 186,
        "startColumnNumber" : 2,
        "endLineNumber" : 186,
        "endColumnNumber" : 200
      },
      "nodeContext" : "MeshPartBuilder meshPartBuilder=modelBuilder.part(\"floor\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4003,
        "startLineNumber" : 103,
        "startColumnNumber" : 23,
        "endLineNumber" : 192,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  batch=new SpriteBatch();\n  ShaderProgram.pedantic=false;\n  modelCache=new ModelCache();\n  ShaderProgram.prependVertexCode=Gdx.app.getType().equals(Application.ApplicationType.Desktop) ? \"#version 140\\n #extension GL_ARB_explicit_attrib_location : enable\\n\" : \"#version 300 es\\n\";\n  ShaderProgram.prependFragmentCode=Gdx.app.getType().equals(Application.ApplicationType.Desktop) ? \"#version 140\\n #extension GL_ARB_explicit_attrib_location : enable\\n\" : \"#version 300 es\\n\";\n  renderContext=new RenderContext(new DefaultTextureBinder(DefaultTextureBinder.ROUNDROBIN));\n  shaderProvider=new BaseShaderProvider(){\n    @Override protected Shader createShader(    Renderable renderable){\n      return new MRTShader(renderable);\n    }\n  }\n;\n  renderableSorter=new DefaultRenderableSorter(){\n    @Override public int compare(    Renderable o1,    Renderable o2){\n      return o1.shader.compareTo(o2.shader);\n    }\n  }\n;\n  mrtSceneShader=new ShaderProgram(Gdx.files.internal(\"data/g3d/shaders/mrtscene.vert\"),Gdx.files.internal(\"data/g3d/shaders/mrtscene.frag\"));\n  if (!mrtSceneShader.isCompiled()) {\n    System.out.println(mrtSceneShader.getLog());\n  }\n  quad=createFullScreenQuad();\n  camera=new PerspectiveCamera(67,Gdx.graphics.getWidth(),Gdx.graphics.getHeight());\n  camera.near=1f;\n  camera.far=100f;\n  camera.position.set(3,5,10);\n  camera.lookAt(0,2,0);\n  camera.up.set(0,1,0);\n  camera.update();\n  cameraController=new FirstPersonCameraController(camera);\n  cameraController.setVelocity(50);\n  Gdx.input.setInputProcessor(cameraController);\n  GLFrameBuffer.FrameBufferBuilder frameBufferBuilder=new GLFrameBuffer.FrameBufferBuilder(Gdx.graphics.getWidth(),Gdx.graphics.getHeight());\n  frameBufferBuilder.addColorTextureAttachment(GL30.GL_RGBA8,GL30.GL_RGBA,GL30.GL_UNSIGNED_BYTE);\n  frameBufferBuilder.addColorTextureAttachment(GL30.GL_RGB8,GL30.GL_RGB,GL30.GL_UNSIGNED_BYTE);\n  frameBufferBuilder.addColorTextureAttachment(GL30.GL_RGB8,GL30.GL_RGB,GL30.GL_UNSIGNED_BYTE);\n  frameBufferBuilder.addDepthTextureAttachment(GL30.GL_DEPTH_COMPONENT,GL30.GL_UNSIGNED_SHORT);\n  frameBuffer=frameBufferBuilder.build();\n  AssetManager assetManager=new AssetManager();\n  assetManager.load(\"data/g3d/materials/cannon.g3db\",Model.class);\n  assetManager.finishLoading();\n  Model scene=assetManager.get(\"data/g3d/materials/cannon.g3db\");\n  cannon=new ModelInstance(scene,\"Cannon_LP\");\n  cannon.transform.setToTranslationAndScaling(0,0,0,0.001f,0.001f,0.001f);\n  ModelBuilder modelBuilder=new ModelBuilder();\n  for (int i=0; i < NUM_LIGHTS; i++) {\n    modelBuilder.begin();\n    Light light=new Light();\n    light.color.set(MathUtils.random(1f),MathUtils.random(1f),MathUtils.random(1f));\n    light.position.set(MathUtils.random(-10f,10f),MathUtils.random(10f,15f),MathUtils.random(-10f,10f));\n    light.vy=MathUtils.random(10f,20f);\n    light.vx=MathUtils.random(-10f,10f);\n    light.vz=MathUtils.random(-10f,10f);\n    MeshPartBuilder meshPartBuilder=modelBuilder.part(\"light\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material());\n    meshPartBuilder.setColor(light.color.x,light.color.y,light.color.z,1f);\n    meshPartBuilder.sphere(0.2f,0.2f,0.2f,10,10);\n    light.lightInstance=new ModelInstance(modelBuilder.end());\n    lights.add(light);\n  }\n  modelBuilder.begin();\n  MeshPartBuilder meshPartBuilder=modelBuilder.part(\"floor\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material());\n  meshPartBuilder.setColor(0.2f,0.2f,0.2f,1f);\n  meshPartBuilder.box(0,-0.1f,0f,20f,0.1f,20f);\n  floorInstance=new ModelInstance(modelBuilder.end());\n  Gdx.input.setInputProcessor(new InputMultiplexer(this,cameraController));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 622,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4036,
        "startLineNumber" : 102,
        "startColumnNumber" : 1,
        "endLineNumber" : 192,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void create(){\n  batch=new SpriteBatch();\n  ShaderProgram.pedantic=false;\n  modelCache=new ModelCache();\n  ShaderProgram.prependVertexCode=Gdx.app.getType().equals(Application.ApplicationType.Desktop) ? \"#version 140\\n #extension GL_ARB_explicit_attrib_location : enable\\n\" : \"#version 300 es\\n\";\n  ShaderProgram.prependFragmentCode=Gdx.app.getType().equals(Application.ApplicationType.Desktop) ? \"#version 140\\n #extension GL_ARB_explicit_attrib_location : enable\\n\" : \"#version 300 es\\n\";\n  renderContext=new RenderContext(new DefaultTextureBinder(DefaultTextureBinder.ROUNDROBIN));\n  shaderProvider=new BaseShaderProvider(){\n    @Override protected Shader createShader(    Renderable renderable){\n      return new MRTShader(renderable);\n    }\n  }\n;\n  renderableSorter=new DefaultRenderableSorter(){\n    @Override public int compare(    Renderable o1,    Renderable o2){\n      return o1.shader.compareTo(o2.shader);\n    }\n  }\n;\n  mrtSceneShader=new ShaderProgram(Gdx.files.internal(\"data/g3d/shaders/mrtscene.vert\"),Gdx.files.internal(\"data/g3d/shaders/mrtscene.frag\"));\n  if (!mrtSceneShader.isCompiled()) {\n    System.out.println(mrtSceneShader.getLog());\n  }\n  quad=createFullScreenQuad();\n  camera=new PerspectiveCamera(67,Gdx.graphics.getWidth(),Gdx.graphics.getHeight());\n  camera.near=1f;\n  camera.far=100f;\n  camera.position.set(3,5,10);\n  camera.lookAt(0,2,0);\n  camera.up.set(0,1,0);\n  camera.update();\n  cameraController=new FirstPersonCameraController(camera);\n  cameraController.setVelocity(50);\n  Gdx.input.setInputProcessor(cameraController);\n  GLFrameBuffer.FrameBufferBuilder frameBufferBuilder=new GLFrameBuffer.FrameBufferBuilder(Gdx.graphics.getWidth(),Gdx.graphics.getHeight());\n  frameBufferBuilder.addColorTextureAttachment(GL30.GL_RGBA8,GL30.GL_RGBA,GL30.GL_UNSIGNED_BYTE);\n  frameBufferBuilder.addColorTextureAttachment(GL30.GL_RGB8,GL30.GL_RGB,GL30.GL_UNSIGNED_BYTE);\n  frameBufferBuilder.addColorTextureAttachment(GL30.GL_RGB8,GL30.GL_RGB,GL30.GL_UNSIGNED_BYTE);\n  frameBufferBuilder.addDepthTextureAttachment(GL30.GL_DEPTH_COMPONENT,GL30.GL_UNSIGNED_SHORT);\n  frameBuffer=frameBufferBuilder.build();\n  AssetManager assetManager=new AssetManager();\n  assetManager.load(\"data/g3d/materials/cannon.g3db\",Model.class);\n  assetManager.finishLoading();\n  Model scene=assetManager.get(\"data/g3d/materials/cannon.g3db\");\n  cannon=new ModelInstance(scene,\"Cannon_LP\");\n  cannon.transform.setToTranslationAndScaling(0,0,0,0.001f,0.001f,0.001f);\n  ModelBuilder modelBuilder=new ModelBuilder();\n  for (int i=0; i < NUM_LIGHTS; i++) {\n    modelBuilder.begin();\n    Light light=new Light();\n    light.color.set(MathUtils.random(1f),MathUtils.random(1f),MathUtils.random(1f));\n    light.position.set(MathUtils.random(-10f,10f),MathUtils.random(10f,15f),MathUtils.random(-10f,10f));\n    light.vy=MathUtils.random(10f,20f);\n    light.vx=MathUtils.random(-10f,10f);\n    light.vz=MathUtils.random(-10f,10f);\n    MeshPartBuilder meshPartBuilder=modelBuilder.part(\"light\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material());\n    meshPartBuilder.setColor(light.color.x,light.color.y,light.color.z,1f);\n    meshPartBuilder.sphere(0.2f,0.2f,0.2f,10,10);\n    light.lightInstance=new ModelInstance(modelBuilder.end());\n    lights.add(light);\n  }\n  modelBuilder.begin();\n  MeshPartBuilder meshPartBuilder=modelBuilder.part(\"floor\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material());\n  meshPartBuilder.setColor(0.2f,0.2f,0.2f,1f);\n  meshPartBuilder.box(0,-0.1f,0f,20f,0.1f,20f);\n  floorInstance=new ModelInstance(modelBuilder.end());\n  Gdx.input.setInputProcessor(new InputMultiplexer(this,cameraController));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 628,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 198,
        "startLineNumber" : 186,
        "startColumnNumber" : 2,
        "endLineNumber" : 186,
        "endColumnNumber" : 200
      },
      "nodeContext" : "MeshPartBuilder meshPartBuilder=modelBuilder.part(\"floor\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "com.badlogic.gdx.graphics.VertexAttributes"
  }, {
    "nodeContext" : "VertexAttributes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 186,
      "startColumnNumber" : 153,
      "endLineNumber" : 186,
      "endColumnNumber" : 169
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.QualifiedName,qualifier]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 186,
        "startColumnNumber" : 153,
        "endLineNumber" : 186,
        "endColumnNumber" : 175
      },
      "nodeContext" : "VertexAttributes.Usage",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 186,
        "startColumnNumber" : 153,
        "endLineNumber" : 186,
        "endColumnNumber" : 182
      },
      "nodeContext" : "VertexAttributes.Usage.Normal",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 186,
        "startColumnNumber" : 82,
        "endLineNumber" : 186,
        "endColumnNumber" : 182
      },
      "nodeContext" : "VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 186,
        "startColumnNumber" : 36,
        "endLineNumber" : 186,
        "endColumnNumber" : 199
      },
      "nodeContext" : "modelBuilder.part(\"floor\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 26,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 186,
        "startColumnNumber" : 18,
        "endLineNumber" : 186,
        "endColumnNumber" : 199
      },
      "nodeContext" : "meshPartBuilder=modelBuilder.part(\"floor\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 28,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 198,
        "startLineNumber" : 186,
        "startColumnNumber" : 2,
        "endLineNumber" : 186,
        "endColumnNumber" : 200
      },
      "nodeContext" : "MeshPartBuilder meshPartBuilder=modelBuilder.part(\"floor\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4003,
        "startLineNumber" : 103,
        "startColumnNumber" : 23,
        "endLineNumber" : 192,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  batch=new SpriteBatch();\n  ShaderProgram.pedantic=false;\n  modelCache=new ModelCache();\n  ShaderProgram.prependVertexCode=Gdx.app.getType().equals(Application.ApplicationType.Desktop) ? \"#version 140\\n #extension GL_ARB_explicit_attrib_location : enable\\n\" : \"#version 300 es\\n\";\n  ShaderProgram.prependFragmentCode=Gdx.app.getType().equals(Application.ApplicationType.Desktop) ? \"#version 140\\n #extension GL_ARB_explicit_attrib_location : enable\\n\" : \"#version 300 es\\n\";\n  renderContext=new RenderContext(new DefaultTextureBinder(DefaultTextureBinder.ROUNDROBIN));\n  shaderProvider=new BaseShaderProvider(){\n    @Override protected Shader createShader(    Renderable renderable){\n      return new MRTShader(renderable);\n    }\n  }\n;\n  renderableSorter=new DefaultRenderableSorter(){\n    @Override public int compare(    Renderable o1,    Renderable o2){\n      return o1.shader.compareTo(o2.shader);\n    }\n  }\n;\n  mrtSceneShader=new ShaderProgram(Gdx.files.internal(\"data/g3d/shaders/mrtscene.vert\"),Gdx.files.internal(\"data/g3d/shaders/mrtscene.frag\"));\n  if (!mrtSceneShader.isCompiled()) {\n    System.out.println(mrtSceneShader.getLog());\n  }\n  quad=createFullScreenQuad();\n  camera=new PerspectiveCamera(67,Gdx.graphics.getWidth(),Gdx.graphics.getHeight());\n  camera.near=1f;\n  camera.far=100f;\n  camera.position.set(3,5,10);\n  camera.lookAt(0,2,0);\n  camera.up.set(0,1,0);\n  camera.update();\n  cameraController=new FirstPersonCameraController(camera);\n  cameraController.setVelocity(50);\n  Gdx.input.setInputProcessor(cameraController);\n  GLFrameBuffer.FrameBufferBuilder frameBufferBuilder=new GLFrameBuffer.FrameBufferBuilder(Gdx.graphics.getWidth(),Gdx.graphics.getHeight());\n  frameBufferBuilder.addColorTextureAttachment(GL30.GL_RGBA8,GL30.GL_RGBA,GL30.GL_UNSIGNED_BYTE);\n  frameBufferBuilder.addColorTextureAttachment(GL30.GL_RGB8,GL30.GL_RGB,GL30.GL_UNSIGNED_BYTE);\n  frameBufferBuilder.addColorTextureAttachment(GL30.GL_RGB8,GL30.GL_RGB,GL30.GL_UNSIGNED_BYTE);\n  frameBufferBuilder.addDepthTextureAttachment(GL30.GL_DEPTH_COMPONENT,GL30.GL_UNSIGNED_SHORT);\n  frameBuffer=frameBufferBuilder.build();\n  AssetManager assetManager=new AssetManager();\n  assetManager.load(\"data/g3d/materials/cannon.g3db\",Model.class);\n  assetManager.finishLoading();\n  Model scene=assetManager.get(\"data/g3d/materials/cannon.g3db\");\n  cannon=new ModelInstance(scene,\"Cannon_LP\");\n  cannon.transform.setToTranslationAndScaling(0,0,0,0.001f,0.001f,0.001f);\n  ModelBuilder modelBuilder=new ModelBuilder();\n  for (int i=0; i < NUM_LIGHTS; i++) {\n    modelBuilder.begin();\n    Light light=new Light();\n    light.color.set(MathUtils.random(1f),MathUtils.random(1f),MathUtils.random(1f));\n    light.position.set(MathUtils.random(-10f,10f),MathUtils.random(10f,15f),MathUtils.random(-10f,10f));\n    light.vy=MathUtils.random(10f,20f);\n    light.vx=MathUtils.random(-10f,10f);\n    light.vz=MathUtils.random(-10f,10f);\n    MeshPartBuilder meshPartBuilder=modelBuilder.part(\"light\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material());\n    meshPartBuilder.setColor(light.color.x,light.color.y,light.color.z,1f);\n    meshPartBuilder.sphere(0.2f,0.2f,0.2f,10,10);\n    light.lightInstance=new ModelInstance(modelBuilder.end());\n    lights.add(light);\n  }\n  modelBuilder.begin();\n  MeshPartBuilder meshPartBuilder=modelBuilder.part(\"floor\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material());\n  meshPartBuilder.setColor(0.2f,0.2f,0.2f,1f);\n  meshPartBuilder.box(0,-0.1f,0f,20f,0.1f,20f);\n  floorInstance=new ModelInstance(modelBuilder.end());\n  Gdx.input.setInputProcessor(new InputMultiplexer(this,cameraController));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 622,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4036,
        "startLineNumber" : 102,
        "startColumnNumber" : 1,
        "endLineNumber" : 192,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void create(){\n  batch=new SpriteBatch();\n  ShaderProgram.pedantic=false;\n  modelCache=new ModelCache();\n  ShaderProgram.prependVertexCode=Gdx.app.getType().equals(Application.ApplicationType.Desktop) ? \"#version 140\\n #extension GL_ARB_explicit_attrib_location : enable\\n\" : \"#version 300 es\\n\";\n  ShaderProgram.prependFragmentCode=Gdx.app.getType().equals(Application.ApplicationType.Desktop) ? \"#version 140\\n #extension GL_ARB_explicit_attrib_location : enable\\n\" : \"#version 300 es\\n\";\n  renderContext=new RenderContext(new DefaultTextureBinder(DefaultTextureBinder.ROUNDROBIN));\n  shaderProvider=new BaseShaderProvider(){\n    @Override protected Shader createShader(    Renderable renderable){\n      return new MRTShader(renderable);\n    }\n  }\n;\n  renderableSorter=new DefaultRenderableSorter(){\n    @Override public int compare(    Renderable o1,    Renderable o2){\n      return o1.shader.compareTo(o2.shader);\n    }\n  }\n;\n  mrtSceneShader=new ShaderProgram(Gdx.files.internal(\"data/g3d/shaders/mrtscene.vert\"),Gdx.files.internal(\"data/g3d/shaders/mrtscene.frag\"));\n  if (!mrtSceneShader.isCompiled()) {\n    System.out.println(mrtSceneShader.getLog());\n  }\n  quad=createFullScreenQuad();\n  camera=new PerspectiveCamera(67,Gdx.graphics.getWidth(),Gdx.graphics.getHeight());\n  camera.near=1f;\n  camera.far=100f;\n  camera.position.set(3,5,10);\n  camera.lookAt(0,2,0);\n  camera.up.set(0,1,0);\n  camera.update();\n  cameraController=new FirstPersonCameraController(camera);\n  cameraController.setVelocity(50);\n  Gdx.input.setInputProcessor(cameraController);\n  GLFrameBuffer.FrameBufferBuilder frameBufferBuilder=new GLFrameBuffer.FrameBufferBuilder(Gdx.graphics.getWidth(),Gdx.graphics.getHeight());\n  frameBufferBuilder.addColorTextureAttachment(GL30.GL_RGBA8,GL30.GL_RGBA,GL30.GL_UNSIGNED_BYTE);\n  frameBufferBuilder.addColorTextureAttachment(GL30.GL_RGB8,GL30.GL_RGB,GL30.GL_UNSIGNED_BYTE);\n  frameBufferBuilder.addColorTextureAttachment(GL30.GL_RGB8,GL30.GL_RGB,GL30.GL_UNSIGNED_BYTE);\n  frameBufferBuilder.addDepthTextureAttachment(GL30.GL_DEPTH_COMPONENT,GL30.GL_UNSIGNED_SHORT);\n  frameBuffer=frameBufferBuilder.build();\n  AssetManager assetManager=new AssetManager();\n  assetManager.load(\"data/g3d/materials/cannon.g3db\",Model.class);\n  assetManager.finishLoading();\n  Model scene=assetManager.get(\"data/g3d/materials/cannon.g3db\");\n  cannon=new ModelInstance(scene,\"Cannon_LP\");\n  cannon.transform.setToTranslationAndScaling(0,0,0,0.001f,0.001f,0.001f);\n  ModelBuilder modelBuilder=new ModelBuilder();\n  for (int i=0; i < NUM_LIGHTS; i++) {\n    modelBuilder.begin();\n    Light light=new Light();\n    light.color.set(MathUtils.random(1f),MathUtils.random(1f),MathUtils.random(1f));\n    light.position.set(MathUtils.random(-10f,10f),MathUtils.random(10f,15f),MathUtils.random(-10f,10f));\n    light.vy=MathUtils.random(10f,20f);\n    light.vx=MathUtils.random(-10f,10f);\n    light.vz=MathUtils.random(-10f,10f);\n    MeshPartBuilder meshPartBuilder=modelBuilder.part(\"light\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material());\n    meshPartBuilder.setColor(light.color.x,light.color.y,light.color.z,1f);\n    meshPartBuilder.sphere(0.2f,0.2f,0.2f,10,10);\n    light.lightInstance=new ModelInstance(modelBuilder.end());\n    lights.add(light);\n  }\n  modelBuilder.begin();\n  MeshPartBuilder meshPartBuilder=modelBuilder.part(\"floor\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material());\n  meshPartBuilder.setColor(0.2f,0.2f,0.2f,1f);\n  meshPartBuilder.box(0,-0.1f,0f,20f,0.1f,20f);\n  floorInstance=new ModelInstance(modelBuilder.end());\n  Gdx.input.setInputProcessor(new InputMultiplexer(this,cameraController));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 628,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 198,
        "startLineNumber" : 186,
        "startColumnNumber" : 2,
        "endLineNumber" : 186,
        "endColumnNumber" : 200
      },
      "nodeContext" : "MeshPartBuilder meshPartBuilder=modelBuilder.part(\"floor\",GL20.GL_TRIANGLES,VertexAttributes.Usage.Position | VertexAttributes.Usage.ColorPacked | VertexAttributes.Usage.Normal,new Material());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "com.badlogic.gdx.graphics.VertexAttributes"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 177,
    "startColumnNumber" : 83,
    "endLineNumber" : 177,
    "endColumnNumber" : 99
  }, {
    "charLength" : 16,
    "startLineNumber" : 177,
    "startColumnNumber" : 117,
    "endLineNumber" : 177,
    "endColumnNumber" : 133
  }, {
    "charLength" : 16,
    "startLineNumber" : 177,
    "startColumnNumber" : 154,
    "endLineNumber" : 177,
    "endColumnNumber" : 170
  }, {
    "charLength" : 16,
    "startLineNumber" : 186,
    "startColumnNumber" : 82,
    "endLineNumber" : 186,
    "endColumnNumber" : 98
  }, {
    "charLength" : 16,
    "startLineNumber" : 186,
    "startColumnNumber" : 116,
    "endLineNumber" : 186,
    "endColumnNumber" : 132
  }, {
    "charLength" : 16,
    "startLineNumber" : 186,
    "startColumnNumber" : 153,
    "endLineNumber" : 186,
    "endColumnNumber" : 169
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 2
  } ]
}