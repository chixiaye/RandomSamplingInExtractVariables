{
  "id" : 330,
  "expression" : "\"      object: java.nio.HeapByteBuffer {order: BIG_ENDIAN},\\n\"",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/processing/src/test/java/org/apache/druid/query/monomorphicprocessing/StringRuntimeShapeTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"      object: java.nio.HeapByteBuffer {order: BIG_ENDIAN},\\n\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 62,
      "startLineNumber" : 90,
      "startColumnNumber" : 10,
      "endLineNumber" : 90,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 1779,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 13
      },
      "nodeContext" : "\"org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Bar {\\n\" + \"  foo: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Foo {\\n\" + \"    flag1: true,\\n\"+ \"    flag2: false,\\n\"+ \"    key: value,\\n\"+ \"    empty: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Empty,\\n\"+ \"    object: java.nio.HeapByteBuffer {order: BIG_ENDIAN},\\n\"+ \"    array: [\\n\"+ \"      java.util.HashSet,\\n\"+ \"      java.util.TreeSet\\n\"+ \"    ],\\n\"+ \"    emptyArray: []\\n\"+ \"  },\\n\"+ \"  array: [\\n\"+ \"    org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Foo {\\n\"+ \"      flag1: true,\\n\"+ \"      flag2: false,\\n\"+ \"      key: value,\\n\"+ \"      empty: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Empty,\\n\"+ \"      object: java.nio.HeapByteBuffer {order: BIG_ENDIAN},\\n\"+ \"      array: [\\n\"+ \"        java.util.HashSet,\\n\"+ \"        java.util.TreeSet\\n\"+ \"      ],\\n\"+ \"      emptyArray: []\\n\"+ \"    },\\n\"+ \"    org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Foo {\\n\"+ \"      flag1: true,\\n\"+ \"      flag2: false,\\n\"+ \"      key: value,\\n\"+ \"      empty: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Empty,\\n\"+ \"      object: java.nio.HeapByteBuffer {order: BIG_ENDIAN},\\n\"+ \"      array: [\\n\"+ \"        java.util.HashSet,\\n\"+ \"        java.util.TreeSet\\n\"+ \"      ],\\n\"+ \"      emptyArray: []\\n\"+ \"    }\\n\"+ \"  ]\\n\"+ \"}\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 41,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 1839,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "Assert.assertEquals(\"org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Bar {\\n\" + \"  foo: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Foo {\\n\" + \"    flag1: true,\\n\"+ \"    flag2: false,\\n\"+ \"    key: value,\\n\"+ \"    empty: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Empty,\\n\"+ \"    object: java.nio.HeapByteBuffer {order: BIG_ENDIAN},\\n\"+ \"    array: [\\n\"+ \"      java.util.HashSet,\\n\"+ \"      java.util.TreeSet\\n\"+ \"    ],\\n\"+ \"    emptyArray: []\\n\"+ \"  },\\n\"+ \"  array: [\\n\"+ \"    org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Foo {\\n\"+ \"      flag1: true,\\n\"+ \"      flag2: false,\\n\"+ \"      key: value,\\n\"+ \"      empty: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Empty,\\n\"+ \"      object: java.nio.HeapByteBuffer {order: BIG_ENDIAN},\\n\"+ \"      array: [\\n\"+ \"        java.util.HashSet,\\n\"+ \"        java.util.TreeSet\\n\"+ \"      ],\\n\"+ \"      emptyArray: []\\n\"+ \"    },\\n\"+ \"    org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Foo {\\n\"+ \"      flag1: true,\\n\"+ \"      flag2: false,\\n\"+ \"      key: value,\\n\"+ \"      empty: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Empty,\\n\"+ \"      object: java.nio.HeapByteBuffer {order: BIG_ENDIAN},\\n\"+ \"      array: [\\n\"+ \"        java.util.HashSet,\\n\"+ \"        java.util.TreeSet\\n\"+ \"      ],\\n\"+ \"      emptyArray: []\\n\"+ \"    }\\n\"+ \"  ]\\n\"+ \"}\",barRuntimeShape)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 45,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1840,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 112,
        "endColumnNumber" : 6
      },
      "nodeContext" : "Assert.assertEquals(\"org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Bar {\\n\" + \"  foo: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Foo {\\n\" + \"    flag1: true,\\n\"+ \"    flag2: false,\\n\"+ \"    key: value,\\n\"+ \"    empty: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Empty,\\n\"+ \"    object: java.nio.HeapByteBuffer {order: BIG_ENDIAN},\\n\"+ \"    array: [\\n\"+ \"      java.util.HashSet,\\n\"+ \"      java.util.TreeSet\\n\"+ \"    ],\\n\"+ \"    emptyArray: []\\n\"+ \"  },\\n\"+ \"  array: [\\n\"+ \"    org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Foo {\\n\"+ \"      flag1: true,\\n\"+ \"      flag2: false,\\n\"+ \"      key: value,\\n\"+ \"      empty: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Empty,\\n\"+ \"      object: java.nio.HeapByteBuffer {order: BIG_ENDIAN},\\n\"+ \"      array: [\\n\"+ \"        java.util.HashSet,\\n\"+ \"        java.util.TreeSet\\n\"+ \"      ],\\n\"+ \"      emptyArray: []\\n\"+ \"    },\\n\"+ \"    org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Foo {\\n\"+ \"      flag1: true,\\n\"+ \"      flag2: false,\\n\"+ \"      key: value,\\n\"+ \"      empty: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Empty,\\n\"+ \"      object: java.nio.HeapByteBuffer {order: BIG_ENDIAN},\\n\"+ \"      array: [\\n\"+ \"        java.util.HashSet,\\n\"+ \"        java.util.TreeSet\\n\"+ \"      ],\\n\"+ \"      emptyArray: []\\n\"+ \"    }\\n\"+ \"  ]\\n\"+ \"}\",barRuntimeShape);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 46,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1913,
        "startLineNumber" : 68,
        "startColumnNumber" : 2,
        "endLineNumber" : 113,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String barRuntimeShape=StringRuntimeShape.of(new Bar());\n  Assert.assertEquals(\"org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Bar {\\n\" + \"  foo: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Foo {\\n\" + \"    flag1: true,\\n\"+ \"    flag2: false,\\n\"+ \"    key: value,\\n\"+ \"    empty: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Empty,\\n\"+ \"    object: java.nio.HeapByteBuffer {order: BIG_ENDIAN},\\n\"+ \"    array: [\\n\"+ \"      java.util.HashSet,\\n\"+ \"      java.util.TreeSet\\n\"+ \"    ],\\n\"+ \"    emptyArray: []\\n\"+ \"  },\\n\"+ \"  array: [\\n\"+ \"    org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Foo {\\n\"+ \"      flag1: true,\\n\"+ \"      flag2: false,\\n\"+ \"      key: value,\\n\"+ \"      empty: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Empty,\\n\"+ \"      object: java.nio.HeapByteBuffer {order: BIG_ENDIAN},\\n\"+ \"      array: [\\n\"+ \"        java.util.HashSet,\\n\"+ \"        java.util.TreeSet\\n\"+ \"      ],\\n\"+ \"      emptyArray: []\\n\"+ \"    },\\n\"+ \"    org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Foo {\\n\"+ \"      flag1: true,\\n\"+ \"      flag2: false,\\n\"+ \"      key: value,\\n\"+ \"      empty: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Empty,\\n\"+ \"      object: java.nio.HeapByteBuffer {order: BIG_ENDIAN},\\n\"+ \"      array: [\\n\"+ \"        java.util.HashSet,\\n\"+ \"        java.util.TreeSet\\n\"+ \"      ],\\n\"+ \"      emptyArray: []\\n\"+ \"    }\\n\"+ \"  ]\\n\"+ \"}\",barRuntimeShape);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1960,
        "startLineNumber" : 66,
        "startColumnNumber" : 2,
        "endLineNumber" : 113,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testStringRuntimeShape(){\n  String barRuntimeShape=StringRuntimeShape.of(new Bar());\n  Assert.assertEquals(\"org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Bar {\\n\" + \"  foo: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Foo {\\n\" + \"    flag1: true,\\n\"+ \"    flag2: false,\\n\"+ \"    key: value,\\n\"+ \"    empty: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Empty,\\n\"+ \"    object: java.nio.HeapByteBuffer {order: BIG_ENDIAN},\\n\"+ \"    array: [\\n\"+ \"      java.util.HashSet,\\n\"+ \"      java.util.TreeSet\\n\"+ \"    ],\\n\"+ \"    emptyArray: []\\n\"+ \"  },\\n\"+ \"  array: [\\n\"+ \"    org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Foo {\\n\"+ \"      flag1: true,\\n\"+ \"      flag2: false,\\n\"+ \"      key: value,\\n\"+ \"      empty: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Empty,\\n\"+ \"      object: java.nio.HeapByteBuffer {order: BIG_ENDIAN},\\n\"+ \"      array: [\\n\"+ \"        java.util.HashSet,\\n\"+ \"        java.util.TreeSet\\n\"+ \"      ],\\n\"+ \"      emptyArray: []\\n\"+ \"    },\\n\"+ \"    org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Foo {\\n\"+ \"      flag1: true,\\n\"+ \"      flag2: false,\\n\"+ \"      key: value,\\n\"+ \"      empty: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Empty,\\n\"+ \"      object: java.nio.HeapByteBuffer {order: BIG_ENDIAN},\\n\"+ \"      array: [\\n\"+ \"        java.util.HashSet,\\n\"+ \"        java.util.TreeSet\\n\"+ \"      ],\\n\"+ \"      emptyArray: []\\n\"+ \"    }\\n\"+ \"  ]\\n\"+ \"}\",barRuntimeShape);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 64,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 1779,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 13
      },
      "nodeContext" : "\"org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Bar {\\n\" + \"  foo: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Foo {\\n\" + \"    flag1: true,\\n\"+ \"    flag2: false,\\n\"+ \"    key: value,\\n\"+ \"    empty: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Empty,\\n\"+ \"    object: java.nio.HeapByteBuffer {order: BIG_ENDIAN},\\n\"+ \"    array: [\\n\"+ \"      java.util.HashSet,\\n\"+ \"      java.util.TreeSet\\n\"+ \"    ],\\n\"+ \"    emptyArray: []\\n\"+ \"  },\\n\"+ \"  array: [\\n\"+ \"    org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Foo {\\n\"+ \"      flag1: true,\\n\"+ \"      flag2: false,\\n\"+ \"      key: value,\\n\"+ \"      empty: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Empty,\\n\"+ \"      object: java.nio.HeapByteBuffer {order: BIG_ENDIAN},\\n\"+ \"      array: [\\n\"+ \"        java.util.HashSet,\\n\"+ \"        java.util.TreeSet\\n\"+ \"      ],\\n\"+ \"      emptyArray: []\\n\"+ \"    },\\n\"+ \"    org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Foo {\\n\"+ \"      flag1: true,\\n\"+ \"      flag2: false,\\n\"+ \"      key: value,\\n\"+ \"      empty: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Empty,\\n\"+ \"      object: java.nio.HeapByteBuffer {order: BIG_ENDIAN},\\n\"+ \"      array: [\\n\"+ \"        java.util.HashSet,\\n\"+ \"        java.util.TreeSet\\n\"+ \"      ],\\n\"+ \"      emptyArray: []\\n\"+ \"    }\\n\"+ \"  ]\\n\"+ \"}\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 41,
      "astHeight" : 2
    },
    "tokenLength" : 8,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"      object: java.nio.HeapByteBuffer {order: BIG_ENDIAN},\\n\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 62,
      "startLineNumber" : 102,
      "startColumnNumber" : 10,
      "endLineNumber" : 102,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 1779,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 13
      },
      "nodeContext" : "\"org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Bar {\\n\" + \"  foo: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Foo {\\n\" + \"    flag1: true,\\n\"+ \"    flag2: false,\\n\"+ \"    key: value,\\n\"+ \"    empty: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Empty,\\n\"+ \"    object: java.nio.HeapByteBuffer {order: BIG_ENDIAN},\\n\"+ \"    array: [\\n\"+ \"      java.util.HashSet,\\n\"+ \"      java.util.TreeSet\\n\"+ \"    ],\\n\"+ \"    emptyArray: []\\n\"+ \"  },\\n\"+ \"  array: [\\n\"+ \"    org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Foo {\\n\"+ \"      flag1: true,\\n\"+ \"      flag2: false,\\n\"+ \"      key: value,\\n\"+ \"      empty: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Empty,\\n\"+ \"      object: java.nio.HeapByteBuffer {order: BIG_ENDIAN},\\n\"+ \"      array: [\\n\"+ \"        java.util.HashSet,\\n\"+ \"        java.util.TreeSet\\n\"+ \"      ],\\n\"+ \"      emptyArray: []\\n\"+ \"    },\\n\"+ \"    org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Foo {\\n\"+ \"      flag1: true,\\n\"+ \"      flag2: false,\\n\"+ \"      key: value,\\n\"+ \"      empty: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Empty,\\n\"+ \"      object: java.nio.HeapByteBuffer {order: BIG_ENDIAN},\\n\"+ \"      array: [\\n\"+ \"        java.util.HashSet,\\n\"+ \"        java.util.TreeSet\\n\"+ \"      ],\\n\"+ \"      emptyArray: []\\n\"+ \"    }\\n\"+ \"  ]\\n\"+ \"}\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 41,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 1839,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "Assert.assertEquals(\"org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Bar {\\n\" + \"  foo: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Foo {\\n\" + \"    flag1: true,\\n\"+ \"    flag2: false,\\n\"+ \"    key: value,\\n\"+ \"    empty: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Empty,\\n\"+ \"    object: java.nio.HeapByteBuffer {order: BIG_ENDIAN},\\n\"+ \"    array: [\\n\"+ \"      java.util.HashSet,\\n\"+ \"      java.util.TreeSet\\n\"+ \"    ],\\n\"+ \"    emptyArray: []\\n\"+ \"  },\\n\"+ \"  array: [\\n\"+ \"    org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Foo {\\n\"+ \"      flag1: true,\\n\"+ \"      flag2: false,\\n\"+ \"      key: value,\\n\"+ \"      empty: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Empty,\\n\"+ \"      object: java.nio.HeapByteBuffer {order: BIG_ENDIAN},\\n\"+ \"      array: [\\n\"+ \"        java.util.HashSet,\\n\"+ \"        java.util.TreeSet\\n\"+ \"      ],\\n\"+ \"      emptyArray: []\\n\"+ \"    },\\n\"+ \"    org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Foo {\\n\"+ \"      flag1: true,\\n\"+ \"      flag2: false,\\n\"+ \"      key: value,\\n\"+ \"      empty: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Empty,\\n\"+ \"      object: java.nio.HeapByteBuffer {order: BIG_ENDIAN},\\n\"+ \"      array: [\\n\"+ \"        java.util.HashSet,\\n\"+ \"        java.util.TreeSet\\n\"+ \"      ],\\n\"+ \"      emptyArray: []\\n\"+ \"    }\\n\"+ \"  ]\\n\"+ \"}\",barRuntimeShape)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 45,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1840,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 112,
        "endColumnNumber" : 6
      },
      "nodeContext" : "Assert.assertEquals(\"org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Bar {\\n\" + \"  foo: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Foo {\\n\" + \"    flag1: true,\\n\"+ \"    flag2: false,\\n\"+ \"    key: value,\\n\"+ \"    empty: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Empty,\\n\"+ \"    object: java.nio.HeapByteBuffer {order: BIG_ENDIAN},\\n\"+ \"    array: [\\n\"+ \"      java.util.HashSet,\\n\"+ \"      java.util.TreeSet\\n\"+ \"    ],\\n\"+ \"    emptyArray: []\\n\"+ \"  },\\n\"+ \"  array: [\\n\"+ \"    org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Foo {\\n\"+ \"      flag1: true,\\n\"+ \"      flag2: false,\\n\"+ \"      key: value,\\n\"+ \"      empty: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Empty,\\n\"+ \"      object: java.nio.HeapByteBuffer {order: BIG_ENDIAN},\\n\"+ \"      array: [\\n\"+ \"        java.util.HashSet,\\n\"+ \"        java.util.TreeSet\\n\"+ \"      ],\\n\"+ \"      emptyArray: []\\n\"+ \"    },\\n\"+ \"    org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Foo {\\n\"+ \"      flag1: true,\\n\"+ \"      flag2: false,\\n\"+ \"      key: value,\\n\"+ \"      empty: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Empty,\\n\"+ \"      object: java.nio.HeapByteBuffer {order: BIG_ENDIAN},\\n\"+ \"      array: [\\n\"+ \"        java.util.HashSet,\\n\"+ \"        java.util.TreeSet\\n\"+ \"      ],\\n\"+ \"      emptyArray: []\\n\"+ \"    }\\n\"+ \"  ]\\n\"+ \"}\",barRuntimeShape);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 46,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1913,
        "startLineNumber" : 68,
        "startColumnNumber" : 2,
        "endLineNumber" : 113,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String barRuntimeShape=StringRuntimeShape.of(new Bar());\n  Assert.assertEquals(\"org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Bar {\\n\" + \"  foo: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Foo {\\n\" + \"    flag1: true,\\n\"+ \"    flag2: false,\\n\"+ \"    key: value,\\n\"+ \"    empty: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Empty,\\n\"+ \"    object: java.nio.HeapByteBuffer {order: BIG_ENDIAN},\\n\"+ \"    array: [\\n\"+ \"      java.util.HashSet,\\n\"+ \"      java.util.TreeSet\\n\"+ \"    ],\\n\"+ \"    emptyArray: []\\n\"+ \"  },\\n\"+ \"  array: [\\n\"+ \"    org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Foo {\\n\"+ \"      flag1: true,\\n\"+ \"      flag2: false,\\n\"+ \"      key: value,\\n\"+ \"      empty: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Empty,\\n\"+ \"      object: java.nio.HeapByteBuffer {order: BIG_ENDIAN},\\n\"+ \"      array: [\\n\"+ \"        java.util.HashSet,\\n\"+ \"        java.util.TreeSet\\n\"+ \"      ],\\n\"+ \"      emptyArray: []\\n\"+ \"    },\\n\"+ \"    org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Foo {\\n\"+ \"      flag1: true,\\n\"+ \"      flag2: false,\\n\"+ \"      key: value,\\n\"+ \"      empty: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Empty,\\n\"+ \"      object: java.nio.HeapByteBuffer {order: BIG_ENDIAN},\\n\"+ \"      array: [\\n\"+ \"        java.util.HashSet,\\n\"+ \"        java.util.TreeSet\\n\"+ \"      ],\\n\"+ \"      emptyArray: []\\n\"+ \"    }\\n\"+ \"  ]\\n\"+ \"}\",barRuntimeShape);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1960,
        "startLineNumber" : 66,
        "startColumnNumber" : 2,
        "endLineNumber" : 113,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testStringRuntimeShape(){\n  String barRuntimeShape=StringRuntimeShape.of(new Bar());\n  Assert.assertEquals(\"org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Bar {\\n\" + \"  foo: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Foo {\\n\" + \"    flag1: true,\\n\"+ \"    flag2: false,\\n\"+ \"    key: value,\\n\"+ \"    empty: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Empty,\\n\"+ \"    object: java.nio.HeapByteBuffer {order: BIG_ENDIAN},\\n\"+ \"    array: [\\n\"+ \"      java.util.HashSet,\\n\"+ \"      java.util.TreeSet\\n\"+ \"    ],\\n\"+ \"    emptyArray: []\\n\"+ \"  },\\n\"+ \"  array: [\\n\"+ \"    org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Foo {\\n\"+ \"      flag1: true,\\n\"+ \"      flag2: false,\\n\"+ \"      key: value,\\n\"+ \"      empty: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Empty,\\n\"+ \"      object: java.nio.HeapByteBuffer {order: BIG_ENDIAN},\\n\"+ \"      array: [\\n\"+ \"        java.util.HashSet,\\n\"+ \"        java.util.TreeSet\\n\"+ \"      ],\\n\"+ \"      emptyArray: []\\n\"+ \"    },\\n\"+ \"    org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Foo {\\n\"+ \"      flag1: true,\\n\"+ \"      flag2: false,\\n\"+ \"      key: value,\\n\"+ \"      empty: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Empty,\\n\"+ \"      object: java.nio.HeapByteBuffer {order: BIG_ENDIAN},\\n\"+ \"      array: [\\n\"+ \"        java.util.HashSet,\\n\"+ \"        java.util.TreeSet\\n\"+ \"      ],\\n\"+ \"      emptyArray: []\\n\"+ \"    }\\n\"+ \"  ]\\n\"+ \"}\",barRuntimeShape);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 64,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 1779,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 13
      },
      "nodeContext" : "\"org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Bar {\\n\" + \"  foo: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Foo {\\n\" + \"    flag1: true,\\n\"+ \"    flag2: false,\\n\"+ \"    key: value,\\n\"+ \"    empty: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Empty,\\n\"+ \"    object: java.nio.HeapByteBuffer {order: BIG_ENDIAN},\\n\"+ \"    array: [\\n\"+ \"      java.util.HashSet,\\n\"+ \"      java.util.TreeSet\\n\"+ \"    ],\\n\"+ \"    emptyArray: []\\n\"+ \"  },\\n\"+ \"  array: [\\n\"+ \"    org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Foo {\\n\"+ \"      flag1: true,\\n\"+ \"      flag2: false,\\n\"+ \"      key: value,\\n\"+ \"      empty: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Empty,\\n\"+ \"      object: java.nio.HeapByteBuffer {order: BIG_ENDIAN},\\n\"+ \"      array: [\\n\"+ \"        java.util.HashSet,\\n\"+ \"        java.util.TreeSet\\n\"+ \"      ],\\n\"+ \"      emptyArray: []\\n\"+ \"    },\\n\"+ \"    org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Foo {\\n\"+ \"      flag1: true,\\n\"+ \"      flag2: false,\\n\"+ \"      key: value,\\n\"+ \"      empty: org.apache.druid.query.monomorphicprocessing.StringRuntimeShapeTest$Empty,\\n\"+ \"      object: java.nio.HeapByteBuffer {order: BIG_ENDIAN},\\n\"+ \"      array: [\\n\"+ \"        java.util.HashSet,\\n\"+ \"        java.util.TreeSet\\n\"+ \"      ],\\n\"+ \"      emptyArray: []\\n\"+ \"    }\\n\"+ \"  ]\\n\"+ \"}\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 41,
      "astHeight" : 2
    },
    "tokenLength" : 8,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 62,
    "startLineNumber" : 90,
    "startColumnNumber" : 10,
    "endLineNumber" : 90,
    "endColumnNumber" : 72
  }, {
    "charLength" : 62,
    "startLineNumber" : 102,
    "startColumnNumber" : 10,
    "endLineNumber" : 102,
    "endColumnNumber" : 72
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 0
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 0
  } ]
}