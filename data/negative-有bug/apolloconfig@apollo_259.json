{
  "id" : 259,
  "expression" : "propertySource",
  "projectName" : "apolloconfig@apollo",
  "commitID" : "7b7d753f78e444f9cf97b0f238f7e33f585cb277",
  "filePath" : "/apollo-client/src/test/java/com/ctrip/framework/apollo/spring/config/PropertySourcesProcessorTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "propertySource",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 97,
      "startColumnNumber" : 32,
      "endLineNumber" : 97,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 97,
        "startColumnNumber" : 32,
        "endLineNumber" : 97,
        "endColumnNumber" : 56
      },
      "nodeContext" : "propertySource.getName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 97,
        "startColumnNumber" : 4,
        "endLineNumber" : 97,
        "endColumnNumber" : 57
      },
      "nodeContext" : "assertEquals(namespaceName,propertySource.getName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 97,
        "startColumnNumber" : 4,
        "endLineNumber" : 97,
        "endColumnNumber" : 58
      },
      "nodeContext" : "assertEquals(namespaceName,propertySource.getName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1374,
        "startLineNumber" : 73,
        "startColumnNumber" : 46,
        "endLineNumber" : 101,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String namespaceName=\"someNamespace\";\n  String anotherNamespaceName=\"anotherNamespace\";\n  Config config=mock(Config.class);\n  Config anotherConfig=mock(Config.class);\n  mockConfig(namespaceName,config);\n  mockConfig(anotherNamespaceName,anotherConfig);\n  PropertySourcesProcessor.addNamespaces(Lists.newArrayList(namespaceName,anotherNamespaceName),0);\n  processor.postProcessBeanFactory(beanFactory);\n  ArgumentCaptor<CompositePropertySource> argumentCaptor=ArgumentCaptor.forClass(CompositePropertySource.class);\n  verify(propertySources).addFirst(argumentCaptor.capture());\n  CompositePropertySource compositePropertySource=argumentCaptor.getValue();\n  assertEquals(2,compositePropertySource.getPropertySources().size());\n  ConfigPropertySource propertySource=(ConfigPropertySource)Lists.newArrayList(compositePropertySource.getPropertySources()).get(0);\n  ConfigPropertySource anotherPropertySource=(ConfigPropertySource)Lists.newArrayList(compositePropertySource.getPropertySources()).get(1);\n  assertEquals(namespaceName,propertySource.getName());\n  assertSame(config,propertySource.getSource());\n  assertEquals(anotherNamespaceName,anotherPropertySource.getName());\n  assertSame(anotherConfig,anotherPropertySource.getSource());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 160,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1427,
        "startLineNumber" : 72,
        "startColumnNumber" : 2,
        "endLineNumber" : 101,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testInitializePropertySources(){\n  String namespaceName=\"someNamespace\";\n  String anotherNamespaceName=\"anotherNamespace\";\n  Config config=mock(Config.class);\n  Config anotherConfig=mock(Config.class);\n  mockConfig(namespaceName,config);\n  mockConfig(anotherNamespaceName,anotherConfig);\n  PropertySourcesProcessor.addNamespaces(Lists.newArrayList(namespaceName,anotherNamespaceName),0);\n  processor.postProcessBeanFactory(beanFactory);\n  ArgumentCaptor<CompositePropertySource> argumentCaptor=ArgumentCaptor.forClass(CompositePropertySource.class);\n  verify(propertySources).addFirst(argumentCaptor.capture());\n  CompositePropertySource compositePropertySource=argumentCaptor.getValue();\n  assertEquals(2,compositePropertySource.getPropertySources().size());\n  ConfigPropertySource propertySource=(ConfigPropertySource)Lists.newArrayList(compositePropertySource.getPropertySources()).get(0);\n  ConfigPropertySource anotherPropertySource=(ConfigPropertySource)Lists.newArrayList(compositePropertySource.getPropertySources()).get(1);\n  assertEquals(namespaceName,propertySource.getName());\n  assertSame(config,propertySource.getSource());\n  assertEquals(anotherNamespaceName,anotherPropertySource.getName());\n  assertSame(anotherConfig,anotherPropertySource.getSource());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 166,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 97,
        "startColumnNumber" : 4,
        "endLineNumber" : 97,
        "endColumnNumber" : 58
      },
      "nodeContext" : "assertEquals(namespaceName,propertySource.getName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.ctrip.framework.apollo.spring.config.ConfigPropertySource"
  }, {
    "nodeContext" : "propertySource",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 98,
      "startColumnNumber" : 23,
      "endLineNumber" : 98,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 98,
        "startColumnNumber" : 23,
        "endLineNumber" : 98,
        "endColumnNumber" : 49
      },
      "nodeContext" : "propertySource.getSource()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 50
      },
      "nodeContext" : "assertSame(config,propertySource.getSource())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 51
      },
      "nodeContext" : "assertSame(config,propertySource.getSource());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1374,
        "startLineNumber" : 73,
        "startColumnNumber" : 46,
        "endLineNumber" : 101,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String namespaceName=\"someNamespace\";\n  String anotherNamespaceName=\"anotherNamespace\";\n  Config config=mock(Config.class);\n  Config anotherConfig=mock(Config.class);\n  mockConfig(namespaceName,config);\n  mockConfig(anotherNamespaceName,anotherConfig);\n  PropertySourcesProcessor.addNamespaces(Lists.newArrayList(namespaceName,anotherNamespaceName),0);\n  processor.postProcessBeanFactory(beanFactory);\n  ArgumentCaptor<CompositePropertySource> argumentCaptor=ArgumentCaptor.forClass(CompositePropertySource.class);\n  verify(propertySources).addFirst(argumentCaptor.capture());\n  CompositePropertySource compositePropertySource=argumentCaptor.getValue();\n  assertEquals(2,compositePropertySource.getPropertySources().size());\n  ConfigPropertySource propertySource=(ConfigPropertySource)Lists.newArrayList(compositePropertySource.getPropertySources()).get(0);\n  ConfigPropertySource anotherPropertySource=(ConfigPropertySource)Lists.newArrayList(compositePropertySource.getPropertySources()).get(1);\n  assertEquals(namespaceName,propertySource.getName());\n  assertSame(config,propertySource.getSource());\n  assertEquals(anotherNamespaceName,anotherPropertySource.getName());\n  assertSame(anotherConfig,anotherPropertySource.getSource());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 160,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1427,
        "startLineNumber" : 72,
        "startColumnNumber" : 2,
        "endLineNumber" : 101,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testInitializePropertySources(){\n  String namespaceName=\"someNamespace\";\n  String anotherNamespaceName=\"anotherNamespace\";\n  Config config=mock(Config.class);\n  Config anotherConfig=mock(Config.class);\n  mockConfig(namespaceName,config);\n  mockConfig(anotherNamespaceName,anotherConfig);\n  PropertySourcesProcessor.addNamespaces(Lists.newArrayList(namespaceName,anotherNamespaceName),0);\n  processor.postProcessBeanFactory(beanFactory);\n  ArgumentCaptor<CompositePropertySource> argumentCaptor=ArgumentCaptor.forClass(CompositePropertySource.class);\n  verify(propertySources).addFirst(argumentCaptor.capture());\n  CompositePropertySource compositePropertySource=argumentCaptor.getValue();\n  assertEquals(2,compositePropertySource.getPropertySources().size());\n  ConfigPropertySource propertySource=(ConfigPropertySource)Lists.newArrayList(compositePropertySource.getPropertySources()).get(0);\n  ConfigPropertySource anotherPropertySource=(ConfigPropertySource)Lists.newArrayList(compositePropertySource.getPropertySources()).get(1);\n  assertEquals(namespaceName,propertySource.getName());\n  assertSame(config,propertySource.getSource());\n  assertEquals(anotherNamespaceName,anotherPropertySource.getName());\n  assertSame(anotherConfig,anotherPropertySource.getSource());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 166,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 51
      },
      "nodeContext" : "assertSame(config,propertySource.getSource());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.ctrip.framework.apollo.spring.config.ConfigPropertySource"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 97,
    "startColumnNumber" : 32,
    "endLineNumber" : 97,
    "endColumnNumber" : 46
  }, {
    "charLength" : 14,
    "startLineNumber" : 98,
    "startColumnNumber" : 23,
    "endLineNumber" : 98,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}