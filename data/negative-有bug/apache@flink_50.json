{
  "id" : 50,
  "expression" : "index != -1",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-table/flink-table-common/src/test/java/org/apache/flink/table/factories/TestManagedTableFactory.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "index != -1",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 212,
      "startColumnNumber" : 28,
      "endLineNumber" : 212,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 186,
        "startLineNumber" : 212,
        "startColumnNumber" : 24,
        "endLineNumber" : 215,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (index != -1) {\n  return Optional.of(file.getPath().substring(0,index + tableName.length()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 383,
        "startLineNumber" : 209,
        "startColumnNumber" : 27,
        "endLineNumber" : 216,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  String tableName=tableIdentifier.asSummaryString();\n  int index=file.getPath().indexOf(tableName);\n  if (index != -1) {\n    return Optional.of(file.getPath().substring(0,index + tableName.length()));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 513,
        "startLineNumber" : 207,
        "startColumnNumber" : 20,
        "endLineNumber" : 216,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (partitionSpec.isEmpty()) {\n  return Optional.of(file.getParent().getPath());\n}\n else {\n  String tableName=tableIdentifier.asSummaryString();\n  int index=file.getPath().indexOf(tableName);\n  if (index != -1) {\n    return Optional.of(file.getPath().substring(0,index + tableName.length()));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 54,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 757,
        "startLineNumber" : 203,
        "startColumnNumber" : 47,
        "endLineNumber" : 217,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  Path file=partitionFiles.get(0);\n  LinkedHashMap<String,String> partitionSpec=PartitionPathUtils.extractPartitionSpecFromPath(file);\n  if (partitionSpec.isEmpty()) {\n    return Optional.of(file.getParent().getPath());\n  }\n else {\n    String tableName=tableIdentifier.asSummaryString();\n    int index=file.getPath().indexOf(tableName);\n    if (index != -1) {\n      return Optional.of(file.getPath().substring(0,index + tableName.length()));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 78,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 788,
        "startLineNumber" : 203,
        "startColumnNumber" : 16,
        "endLineNumber" : 217,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (partitionFiles.size() > 0) {\n  Path file=partitionFiles.get(0);\n  LinkedHashMap<String,String> partitionSpec=PartitionPathUtils.extractPartitionSpecFromPath(file);\n  if (partitionSpec.isEmpty()) {\n    return Optional.of(file.getParent().getPath());\n  }\n else {\n    String tableName=tableIdentifier.asSummaryString();\n    int index=file.getPath().indexOf(tableName);\n    if (index != -1) {\n      return Optional.of(file.getPath().substring(0,index + tableName.length()));\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 84,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 882,
        "startLineNumber" : 201,
        "startColumnNumber" : 56,
        "endLineNumber" : 218,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  List<Path> partitionFiles=entry.getValue();\n  if (partitionFiles.size() > 0) {\n    Path file=partitionFiles.get(0);\n    LinkedHashMap<String,String> partitionSpec=PartitionPathUtils.extractPartitionSpecFromPath(file);\n    if (partitionSpec.isEmpty()) {\n      return Optional.of(file.getParent().getPath());\n    }\n else {\n      String tableName=tableIdentifier.asSummaryString();\n      int index=file.getPath().indexOf(tableName);\n      if (index != -1) {\n        return Optional.of(file.getPath().substring(0,index + tableName.length()));\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 96,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 995,
        "startLineNumber" : 200,
        "startColumnNumber" : 12,
        "endLineNumber" : 218,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (Map.Entry<CatalogPartitionSpec,List<Path>> entry : managedTableFileEntries.entrySet()) {\n  List<Path> partitionFiles=entry.getValue();\n  if (partitionFiles.size() > 0) {\n    Path file=partitionFiles.get(0);\n    LinkedHashMap<String,String> partitionSpec=PartitionPathUtils.extractPartitionSpecFromPath(file);\n    if (partitionSpec.isEmpty()) {\n      return Optional.of(file.getParent().getPath());\n    }\n else {\n      String tableName=tableIdentifier.asSummaryString();\n      int index=file.getPath().indexOf(tableName);\n      if (index != -1) {\n        return Optional.of(file.getPath().substring(0,index + tableName.length()));\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 114,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1112,
        "startLineNumber" : 198,
        "startColumnNumber" : 31,
        "endLineNumber" : 219,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Map<CatalogPartitionSpec,List<Path>> managedTableFileEntries=reference.get();\n  for (  Map.Entry<CatalogPartitionSpec,List<Path>> entry : managedTableFileEntries.entrySet()) {\n    List<Path> partitionFiles=entry.getValue();\n    if (partitionFiles.size() > 0) {\n      Path file=partitionFiles.get(0);\n      LinkedHashMap<String,String> partitionSpec=PartitionPathUtils.extractPartitionSpecFromPath(file);\n      if (partitionSpec.isEmpty()) {\n        return Optional.of(file.getParent().getPath());\n      }\n else {\n        String tableName=tableIdentifier.asSummaryString();\n        int index=file.getPath().indexOf(tableName);\n        if (index != -1) {\n          return Optional.of(file.getPath().substring(0,index + tableName.length()));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 131,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1135,
        "startLineNumber" : 198,
        "startColumnNumber" : 8,
        "endLineNumber" : 219,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (reference != null) {\n  Map<CatalogPartitionSpec,List<Path>> managedTableFileEntries=reference.get();\n  for (  Map.Entry<CatalogPartitionSpec,List<Path>> entry : managedTableFileEntries.entrySet()) {\n    List<Path> partitionFiles=entry.getValue();\n    if (partitionFiles.size() > 0) {\n      Path file=partitionFiles.get(0);\n      LinkedHashMap<String,String> partitionSpec=PartitionPathUtils.extractPartitionSpecFromPath(file);\n      if (partitionSpec.isEmpty()) {\n        return Optional.of(file.getParent().getPath());\n      }\n else {\n        String tableName=tableIdentifier.asSummaryString();\n        int index=file.getPath().indexOf(tableName);\n        if (index != -1) {\n          return Optional.of(file.getPath().substring(0,index + tableName.length()));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 135,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1324,
        "startLineNumber" : 195,
        "startColumnNumber" : 97,
        "endLineNumber" : 221,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  AtomicReference<Map<CatalogPartitionSpec,List<Path>>> reference=MANAGED_TABLE_FILE_ENTRIES.get(tableIdentifier);\n  if (reference != null) {\n    Map<CatalogPartitionSpec,List<Path>> managedTableFileEntries=reference.get();\n    for (    Map.Entry<CatalogPartitionSpec,List<Path>> entry : managedTableFileEntries.entrySet()) {\n      List<Path> partitionFiles=entry.getValue();\n      if (partitionFiles.size() > 0) {\n        Path file=partitionFiles.get(0);\n        LinkedHashMap<String,String> partitionSpec=PartitionPathUtils.extractPartitionSpecFromPath(file);\n        if (partitionSpec.isEmpty()) {\n          return Optional.of(file.getParent().getPath());\n        }\n else {\n          String tableName=tableIdentifier.asSummaryString();\n          int index=file.getPath().indexOf(tableName);\n          if (index != -1) {\n            return Optional.of(file.getPath().substring(0,index + tableName.length()));\n          }\n        }\n      }\n    }\n  }\n  return Optional.empty();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 160,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1417,
        "startLineNumber" : 195,
        "startColumnNumber" : 4,
        "endLineNumber" : 221,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static Optional<String> resolveCompactFileBasePath(ObjectIdentifier tableIdentifier){\n  AtomicReference<Map<CatalogPartitionSpec,List<Path>>> reference=MANAGED_TABLE_FILE_ENTRIES.get(tableIdentifier);\n  if (reference != null) {\n    Map<CatalogPartitionSpec,List<Path>> managedTableFileEntries=reference.get();\n    for (    Map.Entry<CatalogPartitionSpec,List<Path>> entry : managedTableFileEntries.entrySet()) {\n      List<Path> partitionFiles=entry.getValue();\n      if (partitionFiles.size() > 0) {\n        Path file=partitionFiles.get(0);\n        LinkedHashMap<String,String> partitionSpec=PartitionPathUtils.extractPartitionSpecFromPath(file);\n        if (partitionSpec.isEmpty()) {\n          return Optional.of(file.getParent().getPath());\n        }\n else {\n          String tableName=tableIdentifier.asSummaryString();\n          int index=file.getPath().indexOf(tableName);\n          if (index != -1) {\n            return Optional.of(file.getPath().substring(0,index + tableName.length()));\n          }\n        }\n      }\n    }\n  }\n  return Optional.empty();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 186,
        "startLineNumber" : 212,
        "startColumnNumber" : 24,
        "endLineNumber" : 215,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (index != -1) {\n  return Optional.of(file.getPath().substring(0,index + tableName.length()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 8
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 212,
    "startColumnNumber" : 28,
    "endLineNumber" : 212,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ ]
}