{
  "id" : 76,
  "expression" : "extDirectory.exists() && extDirectory.isDirectory()",
  "projectName" : "java-decompiler@jd-gui",
  "commitID" : "fbc5b14d66b37b88bf1dc18386b530e874550240",
  "filePath" : "/app/src/main/java/org/jd/gui/service/extension/ExtensionService.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "extDirectory.exists() && extDirectory.isDirectory()",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 51,
      "startLineNumber" : 34,
      "startColumnNumber" : 16,
      "endLineNumber" : 34,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 492,
        "startLineNumber" : 34,
        "startColumnNumber" : 12,
        "endLineNumber" : 44,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (extDirectory.exists() && extDirectory.isDirectory()) {\n  ArrayList<URL> urls=new ArrayList<>();\n  searchJarAndMetaInf(urls,extDirectory);\n  if (!urls.isEmpty()) {\n    URL[] array=urls.toArray(new URL[urls.size()]);\n    Arrays.sort(array,URL_COMPARATOR);\n    extensionClassLoader=new URLClassLoader(array,ExtensionService.class.getClassLoader());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 68,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 763,
        "startLineNumber" : 29,
        "startColumnNumber" : 12,
        "endLineNumber" : 45,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  URI jarUri=ExtensionService.class.getProtectionDomain().getCodeSource().getLocation().toURI();\n  File baseDirectory=new File(jarUri).getParentFile();\n  File extDirectory=new File(baseDirectory,\"ext\");\n  if (extDirectory.exists() && extDirectory.isDirectory()) {\n    ArrayList<URL> urls=new ArrayList<>();\n    searchJarAndMetaInf(urls,extDirectory);\n    if (!urls.isEmpty()) {\n      URL[] array=urls.toArray(new URL[urls.size()]);\n      Arrays.sort(array,URL_COMPARATOR);\n      extensionClassLoader=new URLClassLoader(array,ExtensionService.class.getClassLoader());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 854,
        "startLineNumber" : 29,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  URI jarUri=ExtensionService.class.getProtectionDomain().getCodeSource().getLocation().toURI();\n  File baseDirectory=new File(jarUri).getParentFile();\n  File extDirectory=new File(baseDirectory,\"ext\");\n  if (extDirectory.exists() && extDirectory.isDirectory()) {\n    ArrayList<URL> urls=new ArrayList<>();\n    searchJarAndMetaInf(urls,extDirectory);\n    if (!urls.isEmpty()) {\n      URL[] array=urls.toArray(new URL[urls.size()]);\n      Arrays.sort(array,URL_COMPARATOR);\n      extensionClassLoader=new URLClassLoader(array,ExtensionService.class.getClassLoader());\n    }\n  }\n}\n catch (Exception e) {\n  assert ExceptionUtil.printStackTrace(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 118,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 947,
        "startLineNumber" : 28,
        "startColumnNumber" : 33,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    URI jarUri=ExtensionService.class.getProtectionDomain().getCodeSource().getLocation().toURI();\n    File baseDirectory=new File(jarUri).getParentFile();\n    File extDirectory=new File(baseDirectory,\"ext\");\n    if (extDirectory.exists() && extDirectory.isDirectory()) {\n      ArrayList<URL> urls=new ArrayList<>();\n      searchJarAndMetaInf(urls,extDirectory);\n      if (!urls.isEmpty()) {\n        URL[] array=urls.toArray(new URL[urls.size()]);\n        Arrays.sort(array,URL_COMPARATOR);\n        extensionClassLoader=new URLClassLoader(array,ExtensionService.class.getClassLoader());\n      }\n    }\n  }\n catch (  Exception e) {\n    assert ExceptionUtil.printStackTrace(e);\n  }\n  extensionClassLoader=ExtensionService.class.getClassLoader();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 127,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 976,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected ExtensionService(){\n  try {\n    URI jarUri=ExtensionService.class.getProtectionDomain().getCodeSource().getLocation().toURI();\n    File baseDirectory=new File(jarUri).getParentFile();\n    File extDirectory=new File(baseDirectory,\"ext\");\n    if (extDirectory.exists() && extDirectory.isDirectory()) {\n      ArrayList<URL> urls=new ArrayList<>();\n      searchJarAndMetaInf(urls,extDirectory);\n      if (!urls.isEmpty()) {\n        URL[] array=urls.toArray(new URL[urls.size()]);\n        Arrays.sort(array,URL_COMPARATOR);\n        extensionClassLoader=new URLClassLoader(array,ExtensionService.class.getClassLoader());\n      }\n    }\n  }\n catch (  Exception e) {\n    assert ExceptionUtil.printStackTrace(e);\n  }\n  extensionClassLoader=ExtensionService.class.getClassLoader();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 130,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 492,
        "startLineNumber" : 34,
        "startColumnNumber" : 12,
        "endLineNumber" : 44,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (extDirectory.exists() && extDirectory.isDirectory()) {\n  ArrayList<URL> urls=new ArrayList<>();\n  searchJarAndMetaInf(urls,extDirectory);\n  if (!urls.isEmpty()) {\n    URL[] array=urls.toArray(new URL[urls.size()]);\n    Arrays.sort(array,URL_COMPARATOR);\n    extensionClassLoader=new URLClassLoader(array,ExtensionService.class.getClassLoader());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 68,
      "astHeight" : 11
    },
    "tokenLength" : 5,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 51,
    "startLineNumber" : 34,
    "startColumnNumber" : 16,
    "endLineNumber" : 34,
    "endColumnNumber" : 67
  } ],
  "layoutRelationDataList" : [ ]
}