{
  "id" : 471,
  "expression" : "\"] fail !\"",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-cron/src/main/java/cn/hutool/cron/task/InvokeTask.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"] fail !\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 45,
      "startColumnNumber" : 80,
      "endLineNumber" : 45,
      "endColumnNumber" : 90
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 45,
        "startColumnNumber" : 38,
        "endLineNumber" : 45,
        "endColumnNumber" : 90
      },
      "nodeContext" : "\"Load class with name of [\" + className + \"] fail !\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 45,
        "startColumnNumber" : 9,
        "endLineNumber" : 45,
        "endColumnNumber" : 91
      },
      "nodeContext" : "new IllegalArgumentException(\"Load class with name of [\" + className + \"] fail !\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 45,
        "startColumnNumber" : 3,
        "endLineNumber" : 45,
        "endColumnNumber" : 92
      },
      "nodeContext" : "throw new IllegalArgumentException(\"Load class with name of [\" + className + \"] fail !\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 44,
        "startColumnNumber" : 20,
        "endLineNumber" : 46,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  throw new IllegalArgumentException(\"Load class with name of [\" + className + \"] fail !\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 44,
        "startColumnNumber" : 2,
        "endLineNumber" : 46,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (null == clazz) {\n  throw new IllegalArgumentException(\"Load class with name of [\" + className + \"] fail !\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1102,
        "startLineNumber" : 29,
        "startColumnNumber" : 51,
        "endLineNumber" : 58,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int splitIndex=classNameWithMethodName.lastIndexOf('#');\n  if (splitIndex <= 0) {\n    splitIndex=classNameWithMethodName.lastIndexOf('.');\n  }\n  if (splitIndex <= 0) {\n    throw new UtilException(\"Invalid classNameWithMethodName [{}]!\",classNameWithMethodName);\n  }\n  final String className=classNameWithMethodName.substring(0,splitIndex);\n  if (StrUtil.isBlank(className)) {\n    throw new IllegalArgumentException(\"Class name is blank !\");\n  }\n  final Class<?> clazz=ClassLoaderUtil.loadClass(className);\n  if (null == clazz) {\n    throw new IllegalArgumentException(\"Load class with name of [\" + className + \"] fail !\");\n  }\n  this.obj=ReflectUtil.newInstanceIfPossible(clazz);\n  final String methodName=classNameWithMethodName.substring(splitIndex + 1);\n  if (StrUtil.isBlank(methodName)) {\n    throw new IllegalArgumentException(\"Method name is blank !\");\n  }\n  this.method=ClassUtil.getPublicMethod(clazz,methodName);\n  if (null == this.method) {\n    throw new IllegalArgumentException(\"No method with name of [\" + methodName + \"] !\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 136,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1238,
        "startLineNumber" : 25,
        "startColumnNumber" : 1,
        "endLineNumber" : 58,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 构造\n * @param classNameWithMethodName 类名与方法名的字符串表示，方法名和类名使用#隔开或者.隔开\n */\npublic InvokeTask(String classNameWithMethodName){\n  int splitIndex=classNameWithMethodName.lastIndexOf('#');\n  if (splitIndex <= 0) {\n    splitIndex=classNameWithMethodName.lastIndexOf('.');\n  }\n  if (splitIndex <= 0) {\n    throw new UtilException(\"Invalid classNameWithMethodName [{}]!\",classNameWithMethodName);\n  }\n  final String className=classNameWithMethodName.substring(0,splitIndex);\n  if (StrUtil.isBlank(className)) {\n    throw new IllegalArgumentException(\"Class name is blank !\");\n  }\n  final Class<?> clazz=ClassLoaderUtil.loadClass(className);\n  if (null == clazz) {\n    throw new IllegalArgumentException(\"Load class with name of [\" + className + \"] fail !\");\n  }\n  this.obj=ReflectUtil.newInstanceIfPossible(clazz);\n  final String methodName=classNameWithMethodName.substring(splitIndex + 1);\n  if (StrUtil.isBlank(methodName)) {\n    throw new IllegalArgumentException(\"Method name is blank !\");\n  }\n  this.method=ClassUtil.getPublicMethod(clazz,methodName);\n  if (null == this.method) {\n    throw new IllegalArgumentException(\"No method with name of [\" + methodName + \"] !\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 144,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 45,
        "startColumnNumber" : 3,
        "endLineNumber" : 45,
        "endColumnNumber" : 92
      },
      "nodeContext" : "throw new IllegalArgumentException(\"Load class with name of [\" + className + \"] fail !\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 45,
    "startColumnNumber" : 80,
    "endLineNumber" : 45,
    "endColumnNumber" : 90
  } ],
  "layoutRelationDataList" : [ ]
}