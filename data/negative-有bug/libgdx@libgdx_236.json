{
  "id" : 236,
  "expression" : "root.getChildCount()",
  "projectName" : "libgdx@libgdx",
  "commitID" : "3485b16e8979c0141421bc80cb8831b7a0403f67",
  "filePath" : "/gdx/src/com/badlogic/gdx/maps/tiled/BaseTmxMapLoader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "root.getChildCount()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 160,
      "startColumnNumber" : 22,
      "endLineNumber" : 160,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 160,
        "startColumnNumber" : 18,
        "endLineNumber" : 160,
        "endColumnNumber" : 42
      },
      "nodeContext" : "j=root.getChildCount()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 160,
        "startColumnNumber" : 7,
        "endLineNumber" : 160,
        "endColumnNumber" : 42
      },
      "nodeContext" : "int i=0, j=root.getChildCount()",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 167,
        "startLineNumber" : 160,
        "startColumnNumber" : 2,
        "endLineNumber" : 163,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int i=0, j=root.getChildCount(); i < j; i++) {\n  Element element=root.getChild(i);\n  loadLayer(map,map.getLayers(),element,tmxFile,imageResolver);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 36,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2347,
        "startLineNumber" : 96,
        "startColumnNumber" : 96,
        "endLineNumber" : 165,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  this.map=new TiledMap();\n  if (parameter != null) {\n    this.convertObjectToTileSpace=parameter.convertObjectToTileSpace;\n    this.flipY=parameter.flipY;\n  }\n else {\n    this.convertObjectToTileSpace=false;\n    this.flipY=true;\n  }\n  String mapOrientation=root.getAttribute(\"orientation\",null);\n  int mapWidth=root.getIntAttribute(\"width\",0);\n  int mapHeight=root.getIntAttribute(\"height\",0);\n  int tileWidth=root.getIntAttribute(\"tilewidth\",0);\n  int tileHeight=root.getIntAttribute(\"tileheight\",0);\n  int hexSideLength=root.getIntAttribute(\"hexsidelength\",0);\n  String staggerAxis=root.getAttribute(\"staggeraxis\",null);\n  String staggerIndex=root.getAttribute(\"staggerindex\",null);\n  String mapBackgroundColor=root.getAttribute(\"backgroundcolor\",null);\n  MapProperties mapProperties=map.getProperties();\n  if (mapOrientation != null) {\n    mapProperties.put(\"orientation\",mapOrientation);\n  }\n  mapProperties.put(\"width\",mapWidth);\n  mapProperties.put(\"height\",mapHeight);\n  mapProperties.put(\"tilewidth\",tileWidth);\n  mapProperties.put(\"tileheight\",tileHeight);\n  mapProperties.put(\"hexsidelength\",hexSideLength);\n  if (staggerAxis != null) {\n    mapProperties.put(\"staggeraxis\",staggerAxis);\n  }\n  if (staggerIndex != null) {\n    mapProperties.put(\"staggerindex\",staggerIndex);\n  }\n  if (mapBackgroundColor != null) {\n    mapProperties.put(\"backgroundcolor\",mapBackgroundColor);\n  }\n  this.mapTileWidth=tileWidth;\n  this.mapTileHeight=tileHeight;\n  this.mapWidthInPixels=mapWidth * tileWidth;\n  this.mapHeightInPixels=mapHeight * tileHeight;\n  if (mapOrientation != null) {\n    if (\"staggered\".equals(mapOrientation)) {\n      if (mapHeight > 1) {\n        this.mapWidthInPixels+=tileWidth / 2;\n        this.mapHeightInPixels=mapHeightInPixels / 2 + tileHeight / 2;\n      }\n    }\n  }\n  Element properties=root.getChildByName(\"properties\");\n  if (properties != null) {\n    loadProperties(map.getProperties(),properties);\n  }\n  Array<Element> tilesets=root.getChildrenByName(\"tileset\");\n  for (  Element element : tilesets) {\n    loadTileSet(element,tmxFile,imageResolver);\n    root.removeChild(element);\n  }\n  for (int i=0, j=root.getChildCount(); i < j; i++) {\n    Element element=root.getChild(i);\n    loadLayer(map,map.getLayers(),element,tmxFile,imageResolver);\n  }\n  return map;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 363,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2642,
        "startLineNumber" : 88,
        "startColumnNumber" : 1,
        "endLineNumber" : 165,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Loads the map data, given the XML root element\n * @param tmxFile       the Filehandle of the tmx file\n * @param parameter\n * @param imageResolver\n * @return the {@link TiledMap}\n */\nprotected TiledMap loadTiledMap(FileHandle tmxFile,P parameter,ImageResolver imageResolver){\n  this.map=new TiledMap();\n  if (parameter != null) {\n    this.convertObjectToTileSpace=parameter.convertObjectToTileSpace;\n    this.flipY=parameter.flipY;\n  }\n else {\n    this.convertObjectToTileSpace=false;\n    this.flipY=true;\n  }\n  String mapOrientation=root.getAttribute(\"orientation\",null);\n  int mapWidth=root.getIntAttribute(\"width\",0);\n  int mapHeight=root.getIntAttribute(\"height\",0);\n  int tileWidth=root.getIntAttribute(\"tilewidth\",0);\n  int tileHeight=root.getIntAttribute(\"tileheight\",0);\n  int hexSideLength=root.getIntAttribute(\"hexsidelength\",0);\n  String staggerAxis=root.getAttribute(\"staggeraxis\",null);\n  String staggerIndex=root.getAttribute(\"staggerindex\",null);\n  String mapBackgroundColor=root.getAttribute(\"backgroundcolor\",null);\n  MapProperties mapProperties=map.getProperties();\n  if (mapOrientation != null) {\n    mapProperties.put(\"orientation\",mapOrientation);\n  }\n  mapProperties.put(\"width\",mapWidth);\n  mapProperties.put(\"height\",mapHeight);\n  mapProperties.put(\"tilewidth\",tileWidth);\n  mapProperties.put(\"tileheight\",tileHeight);\n  mapProperties.put(\"hexsidelength\",hexSideLength);\n  if (staggerAxis != null) {\n    mapProperties.put(\"staggeraxis\",staggerAxis);\n  }\n  if (staggerIndex != null) {\n    mapProperties.put(\"staggerindex\",staggerIndex);\n  }\n  if (mapBackgroundColor != null) {\n    mapProperties.put(\"backgroundcolor\",mapBackgroundColor);\n  }\n  this.mapTileWidth=tileWidth;\n  this.mapTileHeight=tileHeight;\n  this.mapWidthInPixels=mapWidth * tileWidth;\n  this.mapHeightInPixels=mapHeight * tileHeight;\n  if (mapOrientation != null) {\n    if (\"staggered\".equals(mapOrientation)) {\n      if (mapHeight > 1) {\n        this.mapWidthInPixels+=tileWidth / 2;\n        this.mapHeightInPixels=mapHeightInPixels / 2 + tileHeight / 2;\n      }\n    }\n  }\n  Element properties=root.getChildByName(\"properties\");\n  if (properties != null) {\n    loadProperties(map.getProperties(),properties);\n  }\n  Array<Element> tilesets=root.getChildrenByName(\"tileset\");\n  for (  Element element : tilesets) {\n    loadTileSet(element,tmxFile,imageResolver);\n    root.removeChild(element);\n  }\n  for (int i=0, j=root.getChildCount(); i < j; i++) {\n    Element element=root.getChild(i);\n    loadLayer(map,map.getLayers(),element,tmxFile,imageResolver);\n  }\n  return map;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 381,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 160,
        "startColumnNumber" : 7,
        "endLineNumber" : 160,
        "endColumnNumber" : 42
      },
      "nodeContext" : "int i=0, j=root.getChildCount()",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 160,
    "startColumnNumber" : 22,
    "endLineNumber" : 160,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ ]
}