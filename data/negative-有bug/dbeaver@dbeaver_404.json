{
  "id" : 404,
  "expression" : "\" \\t\\n\\r\"",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/test/org.jkiss.dbeaver.test.platform/src/org/jkiss/dbeaver/data/transfer/StreamTransferUtilsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\" \\t\\n\\r\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 31,
      "startColumnNumber" : 28,
      "endLineNumber" : 31,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 31,
        "endColumnNumber" : 98
      },
      "nodeContext" : "Assert.assertEquals(\" \\t\\n\\r\",StreamTransferUtils.getDelimiterString(props,\"delimiter\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 31,
        "endColumnNumber" : 99
      },
      "nodeContext" : "Assert.assertEquals(\" \\t\\n\\r\",StreamTransferUtils.getDelimiterString(props,\"delimiter\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 468,
        "startLineNumber" : 28,
        "startColumnNumber" : 38,
        "endLineNumber" : 36,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<String,Object> props=new HashMap<>();\n  props.put(\"delimiter\",\" \\\\t\\\\n\\\\r\");\n  Assert.assertEquals(\" \\t\\n\\r\",StreamTransferUtils.getDelimiterString(props,\"delimiter\"));\n  props.put(\"delimiter\",\"\");\n  Assert.assertEquals(\",\",StreamTransferUtils.getDelimiterString(props,\"delimiter\"));\n  props.put(\"delimiter\",null);\n  Assert.assertEquals(\",\",StreamTransferUtils.getDelimiterString(props,\"delimiter\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 512,
        "startLineNumber" : 27,
        "startColumnNumber" : 4,
        "endLineNumber" : 36,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testDelimiterString(){\n  Map<String,Object> props=new HashMap<>();\n  props.put(\"delimiter\",\" \\\\t\\\\n\\\\r\");\n  Assert.assertEquals(\" \\t\\n\\r\",StreamTransferUtils.getDelimiterString(props,\"delimiter\"));\n  props.put(\"delimiter\",\"\");\n  Assert.assertEquals(\",\",StreamTransferUtils.getDelimiterString(props,\"delimiter\"));\n  props.put(\"delimiter\",null);\n  Assert.assertEquals(\",\",StreamTransferUtils.getDelimiterString(props,\"delimiter\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 69,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 31,
        "endColumnNumber" : 99
      },
      "nodeContext" : "Assert.assertEquals(\" \\t\\n\\r\",StreamTransferUtils.getDelimiterString(props,\"delimiter\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 31,
    "startColumnNumber" : 28,
    "endLineNumber" : 31,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ ]
}