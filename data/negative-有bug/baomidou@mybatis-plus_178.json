{
  "id" : 178,
  "expression" : "new StringBuilder(\"\\n<where>\")",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "7815611a659da4cc8d5443f5ef4c10ca0d937582",
  "filePath" : "/mybatis-plus-core/src/main/java/com/baomidou/mybatisplus/mapper/LogicSqlInjector.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new StringBuilder(\"\\n<where>\")",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 226,
      "startColumnNumber" : 34,
      "endLineNumber" : 226,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 226,
        "startColumnNumber" : 26,
        "endLineNumber" : 226,
        "endColumnNumber" : 64
      },
      "nodeContext" : "where=new StringBuilder(\"\\n<where>\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 226,
        "startColumnNumber" : 12,
        "endLineNumber" : 226,
        "endColumnNumber" : 65
      },
      "nodeContext" : "StringBuilder where=new StringBuilder(\"\\n<where>\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1080,
        "startLineNumber" : 225,
        "startColumnNumber" : 35,
        "endLineNumber" : 246,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  StringBuilder where=new StringBuilder(\"\\n<where>\");\n  List<TableFieldInfo> fieldList=table.getFieldList();\n  if (StringUtils.isNotEmpty(table.getKeyProperty())) {\n    where.append(\"\\n<if test=\\\"ew.\").append(table.getKeyProperty()).append(\"!=null\\\">\");\n    where.append(\" AND \").append(table.getKeyColumn()).append(\"=#{ew.\");\n    where.append(table.getKeyProperty()).append(\"}\");\n    where.append(\"</if>\");\n  }\n  for (  TableFieldInfo fieldInfo : fieldList) {\n    where.append(convertIfTag(fieldInfo,\"ew.\",false));\n    where.append(\" AND \").append(this.sqlCondition(fieldInfo.getCondition(),fieldInfo.getColumn(),\"ew.\" + fieldInfo.getEl()));\n    where.append(convertIfTag(fieldInfo,true));\n  }\n  where.append(\"\\n\").append(getLogicDeleteSql(table));\n  where.append(\"\\n</where>\");\n  return where.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 134,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1107,
        "startLineNumber" : 225,
        "startColumnNumber" : 8,
        "endLineNumber" : 246,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (table.isLogicDelete()) {\n  StringBuilder where=new StringBuilder(\"\\n<where>\");\n  List<TableFieldInfo> fieldList=table.getFieldList();\n  if (StringUtils.isNotEmpty(table.getKeyProperty())) {\n    where.append(\"\\n<if test=\\\"ew.\").append(table.getKeyProperty()).append(\"!=null\\\">\");\n    where.append(\" AND \").append(table.getKeyColumn()).append(\"=#{ew.\");\n    where.append(table.getKeyProperty()).append(\"}\");\n    where.append(\"</if>\");\n  }\n  for (  TableFieldInfo fieldInfo : fieldList) {\n    where.append(convertIfTag(fieldInfo,\"ew.\",false));\n    where.append(\" AND \").append(this.sqlCondition(fieldInfo.getCondition(),fieldInfo.getColumn(),\"ew.\" + fieldInfo.getEl()));\n    where.append(convertIfTag(fieldInfo,true));\n  }\n  where.append(\"\\n\").append(getLogicDeleteSql(table));\n  where.append(\"\\n</where>\");\n  return where.toString();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 138,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1177,
        "startLineNumber" : 224,
        "startColumnNumber" : 47,
        "endLineNumber" : 249,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (table.isLogicDelete()) {\n    StringBuilder where=new StringBuilder(\"\\n<where>\");\n    List<TableFieldInfo> fieldList=table.getFieldList();\n    if (StringUtils.isNotEmpty(table.getKeyProperty())) {\n      where.append(\"\\n<if test=\\\"ew.\").append(table.getKeyProperty()).append(\"!=null\\\">\");\n      where.append(\" AND \").append(table.getKeyColumn()).append(\"=#{ew.\");\n      where.append(table.getKeyProperty()).append(\"}\");\n      where.append(\"</if>\");\n    }\n    for (    TableFieldInfo fieldInfo : fieldList) {\n      where.append(convertIfTag(fieldInfo,\"ew.\",false));\n      where.append(\" AND \").append(this.sqlCondition(fieldInfo.getCondition(),fieldInfo.getColumn(),\"ew.\" + fieldInfo.getEl()));\n      where.append(convertIfTag(fieldInfo,true));\n    }\n    where.append(\"\\n\").append(getLogicDeleteSql(table));\n    where.append(\"\\n</where>\");\n    return where.toString();\n  }\n  return super.sqlWhere(table);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 143,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1234,
        "startLineNumber" : 223,
        "startColumnNumber" : 4,
        "endLineNumber" : 249,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected String sqlWhere(TableInfo table){\n  if (table.isLogicDelete()) {\n    StringBuilder where=new StringBuilder(\"\\n<where>\");\n    List<TableFieldInfo> fieldList=table.getFieldList();\n    if (StringUtils.isNotEmpty(table.getKeyProperty())) {\n      where.append(\"\\n<if test=\\\"ew.\").append(table.getKeyProperty()).append(\"!=null\\\">\");\n      where.append(\" AND \").append(table.getKeyColumn()).append(\"=#{ew.\");\n      where.append(table.getKeyProperty()).append(\"}\");\n      where.append(\"</if>\");\n    }\n    for (    TableFieldInfo fieldInfo : fieldList) {\n      where.append(convertIfTag(fieldInfo,\"ew.\",false));\n      where.append(\" AND \").append(this.sqlCondition(fieldInfo.getCondition(),fieldInfo.getColumn(),\"ew.\" + fieldInfo.getEl()));\n      where.append(convertIfTag(fieldInfo,true));\n    }\n    where.append(\"\\n\").append(getLogicDeleteSql(table));\n    where.append(\"\\n</where>\");\n    return where.toString();\n  }\n  return super.sqlWhere(table);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 154,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 226,
        "startColumnNumber" : 12,
        "endLineNumber" : 226,
        "endColumnNumber" : 65
      },
      "nodeContext" : "StringBuilder where=new StringBuilder(\"\\n<where>\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.StringBuilder"
  } ],
  "positionList" : [ {
    "charLength" : 30,
    "startLineNumber" : 226,
    "startColumnNumber" : 34,
    "endLineNumber" : 226,
    "endColumnNumber" : 64
  } ],
  "layoutRelationDataList" : [ ]
}