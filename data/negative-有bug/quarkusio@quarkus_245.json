{
  "id" : 245,
  "expression" : "new NullJsonWebToken()",
  "projectName" : "quarkusio@quarkus",
  "commitID" : "2862b200ee266332150317795b9fe315be51d68b",
  "filePath" : "/extensions/oidc/runtime/src/main/java/io/quarkus/oidc/runtime/OidcJsonWebTokenProducer.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new NullJsonWebToken()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 58,
      "startColumnNumber" : 19,
      "endLineNumber" : 58,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 58,
        "endColumnNumber" : 42
      },
      "nodeContext" : "return new NullJsonWebToken();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 57,
        "startColumnNumber" : 36,
        "endLineNumber" : 59,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  return new NullJsonWebToken();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (identity.isAnonymous()) {\n  return new NullJsonWebToken();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1460,
        "startLineNumber" : 56,
        "startColumnNumber" : 83,
        "endLineNumber" : 84,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (identity.isAnonymous()) {\n    return new NullJsonWebToken();\n  }\n  if (identity.getPrincipal() instanceof OidcJwtCallerPrincipal && ((OidcJwtCallerPrincipal)identity.getPrincipal()).getCredential().getClass() == type) {\n    return (JsonWebToken)identity.getPrincipal();\n  }\n  TokenCredential credential=identity.getCredential(type);\n  if (credential != null && credential.getToken() != null) {\n    if (credential instanceof AccessTokenCredential && ((AccessTokenCredential)credential).isOpaque()) {\n      throw new OIDCException(\"Opaque access token can not be converted to JsonWebToken\");\n    }\n    JwtClaims jwtClaims;\n    try {\n      jwtClaims=new JwtConsumerBuilder().setSkipSignatureVerification().setSkipAllValidators().build().processToClaims(credential.getToken());\n    }\n catch (    InvalidJwtException e) {\n      throw new OIDCException(e);\n    }\n    jwtClaims.setClaim(Claims.raw_token.name(),credential.getToken());\n    return new OidcJwtCallerPrincipal(jwtClaims,credential);\n  }\n  String tokenType=type == AccessTokenCredential.class ? \"access\" : \"ID\";\n  LOG.tracef(\"Current identity is not associated with an %s token\",tokenType);\n  return new NullJsonWebToken();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 154,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1539,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private JsonWebToken getTokenCredential(Class<? extends TokenCredential> type){\n  if (identity.isAnonymous()) {\n    return new NullJsonWebToken();\n  }\n  if (identity.getPrincipal() instanceof OidcJwtCallerPrincipal && ((OidcJwtCallerPrincipal)identity.getPrincipal()).getCredential().getClass() == type) {\n    return (JsonWebToken)identity.getPrincipal();\n  }\n  TokenCredential credential=identity.getCredential(type);\n  if (credential != null && credential.getToken() != null) {\n    if (credential instanceof AccessTokenCredential && ((AccessTokenCredential)credential).isOpaque()) {\n      throw new OIDCException(\"Opaque access token can not be converted to JsonWebToken\");\n    }\n    JwtClaims jwtClaims;\n    try {\n      jwtClaims=new JwtConsumerBuilder().setSkipSignatureVerification().setSkipAllValidators().build().processToClaims(credential.getToken());\n    }\n catch (    InvalidJwtException e) {\n      throw new OIDCException(e);\n    }\n    jwtClaims.setClaim(Claims.raw_token.name(),credential.getToken());\n    return new OidcJwtCallerPrincipal(jwtClaims,credential);\n  }\n  String tokenType=type == AccessTokenCredential.class ? \"access\" : \"ID\";\n  LOG.tracef(\"Current identity is not associated with an %s token\",tokenType);\n  return new NullJsonWebToken();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 167,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 58,
        "endColumnNumber" : 42
      },
      "nodeContext" : "return new NullJsonWebToken();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "io.quarkus.oidc.runtime.NullJsonWebToken"
  }, {
    "nodeContext" : "new NullJsonWebToken()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 83,
      "startColumnNumber" : 15,
      "endLineNumber" : 83,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 83,
        "endColumnNumber" : 38
      },
      "nodeContext" : "return new NullJsonWebToken();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1460,
        "startLineNumber" : 56,
        "startColumnNumber" : 83,
        "endLineNumber" : 84,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (identity.isAnonymous()) {\n    return new NullJsonWebToken();\n  }\n  if (identity.getPrincipal() instanceof OidcJwtCallerPrincipal && ((OidcJwtCallerPrincipal)identity.getPrincipal()).getCredential().getClass() == type) {\n    return (JsonWebToken)identity.getPrincipal();\n  }\n  TokenCredential credential=identity.getCredential(type);\n  if (credential != null && credential.getToken() != null) {\n    if (credential instanceof AccessTokenCredential && ((AccessTokenCredential)credential).isOpaque()) {\n      throw new OIDCException(\"Opaque access token can not be converted to JsonWebToken\");\n    }\n    JwtClaims jwtClaims;\n    try {\n      jwtClaims=new JwtConsumerBuilder().setSkipSignatureVerification().setSkipAllValidators().build().processToClaims(credential.getToken());\n    }\n catch (    InvalidJwtException e) {\n      throw new OIDCException(e);\n    }\n    jwtClaims.setClaim(Claims.raw_token.name(),credential.getToken());\n    return new OidcJwtCallerPrincipal(jwtClaims,credential);\n  }\n  String tokenType=type == AccessTokenCredential.class ? \"access\" : \"ID\";\n  LOG.tracef(\"Current identity is not associated with an %s token\",tokenType);\n  return new NullJsonWebToken();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 154,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1539,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private JsonWebToken getTokenCredential(Class<? extends TokenCredential> type){\n  if (identity.isAnonymous()) {\n    return new NullJsonWebToken();\n  }\n  if (identity.getPrincipal() instanceof OidcJwtCallerPrincipal && ((OidcJwtCallerPrincipal)identity.getPrincipal()).getCredential().getClass() == type) {\n    return (JsonWebToken)identity.getPrincipal();\n  }\n  TokenCredential credential=identity.getCredential(type);\n  if (credential != null && credential.getToken() != null) {\n    if (credential instanceof AccessTokenCredential && ((AccessTokenCredential)credential).isOpaque()) {\n      throw new OIDCException(\"Opaque access token can not be converted to JsonWebToken\");\n    }\n    JwtClaims jwtClaims;\n    try {\n      jwtClaims=new JwtConsumerBuilder().setSkipSignatureVerification().setSkipAllValidators().build().processToClaims(credential.getToken());\n    }\n catch (    InvalidJwtException e) {\n      throw new OIDCException(e);\n    }\n    jwtClaims.setClaim(Claims.raw_token.name(),credential.getToken());\n    return new OidcJwtCallerPrincipal(jwtClaims,credential);\n  }\n  String tokenType=type == AccessTokenCredential.class ? \"access\" : \"ID\";\n  LOG.tracef(\"Current identity is not associated with an %s token\",tokenType);\n  return new NullJsonWebToken();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 167,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 83,
        "endColumnNumber" : 38
      },
      "nodeContext" : "return new NullJsonWebToken();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "io.quarkus.oidc.runtime.NullJsonWebToken"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 58,
    "startColumnNumber" : 19,
    "endLineNumber" : 58,
    "endColumnNumber" : 41
  }, {
    "charLength" : 22,
    "startLineNumber" : 83,
    "startColumnNumber" : 15,
    "endLineNumber" : 83,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}