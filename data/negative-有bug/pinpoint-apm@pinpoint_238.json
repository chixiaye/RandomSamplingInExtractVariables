{
  "id" : 238,
  "expression" : "new TransformCallback(){\n  @Override public byte[] doInTransform(  Instrumentor instrumentor,  ClassLoader loader,  String className,  Class<?> classBeingRedefined,  ProtectionDomain protectionDomain,  byte[] classfileBuffer) throws InstrumentException {\n    InstrumentClass target=instrumentor.getInstrumentClass(loader,className,classfileBuffer);\n    target.addGetter(\"com.navercorp.pinpoint.plugin.jdk.http.ConnectedGetter\",\"connected\");\n    if (target.hasField(\"connecting\",\"boolean\")) {\n      target.addGetter(\"com.navercorp.pinpoint.plugin.jdk.http.ConnectingGetter\",\"connecting\");\n    }\n    target.addInterceptor(\"com.navercorp.pinpoint.plugin.jdk.http.interceptor.HttpURLConnectionInterceptor\");\n    return target.toBytecode();\n  }\n}\n",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/plugins/jdk-http/src/main/java/com/navercorp/pinpoint/plugin/jdk/http/JdkHttpPlugin.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new TransformCallback(){\n  @Override public byte[] doInTransform(  Instrumentor instrumentor,  ClassLoader loader,  String className,  Class<?> classBeingRedefined,  ProtectionDomain protectionDomain,  byte[] classfileBuffer) throws InstrumentException {\n    InstrumentClass target=instrumentor.getInstrumentClass(loader,className,classfileBuffer);\n    target.addGetter(\"com.navercorp.pinpoint.plugin.jdk.http.ConnectedGetter\",\"connected\");\n    if (target.hasField(\"connecting\",\"boolean\")) {\n      target.addGetter(\"com.navercorp.pinpoint.plugin.jdk.http.ConnectingGetter\",\"connecting\");\n    }\n    target.addInterceptor(\"com.navercorp.pinpoint.plugin.jdk.http.interceptor.HttpURLConnectionInterceptor\");\n    return target.toBytecode();\n  }\n}\n",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 933,
      "startLineNumber" : 40,
      "startColumnNumber" : 83,
      "endLineNumber" : 56,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 81,
    "astHeight" : 9,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 1009,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 10
      },
      "nodeContext" : "transformTemplate.transform(\"sun.net.www.protocol.http.HttpURLConnection\",new TransformCallback(){\n  @Override public byte[] doInTransform(  Instrumentor instrumentor,  ClassLoader loader,  String className,  Class<?> classBeingRedefined,  ProtectionDomain protectionDomain,  byte[] classfileBuffer) throws InstrumentException {\n    InstrumentClass target=instrumentor.getInstrumentClass(loader,className,classfileBuffer);\n    target.addGetter(\"com.navercorp.pinpoint.plugin.jdk.http.ConnectedGetter\",\"connected\");\n    if (target.hasField(\"connecting\",\"boolean\")) {\n      target.addGetter(\"com.navercorp.pinpoint.plugin.jdk.http.ConnectingGetter\",\"connecting\");\n    }\n    target.addInterceptor(\"com.navercorp.pinpoint.plugin.jdk.http.interceptor.HttpURLConnectionInterceptor\");\n    return target.toBytecode();\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 85,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1010,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 11
      },
      "nodeContext" : "transformTemplate.transform(\"sun.net.www.protocol.http.HttpURLConnection\",new TransformCallback(){\n  @Override public byte[] doInTransform(  Instrumentor instrumentor,  ClassLoader loader,  String className,  Class<?> classBeingRedefined,  ProtectionDomain protectionDomain,  byte[] classfileBuffer) throws InstrumentException {\n    InstrumentClass target=instrumentor.getInstrumentClass(loader,className,classfileBuffer);\n    target.addGetter(\"com.navercorp.pinpoint.plugin.jdk.http.ConnectedGetter\",\"connected\");\n    if (target.hasField(\"connecting\",\"boolean\")) {\n      target.addGetter(\"com.navercorp.pinpoint.plugin.jdk.http.ConnectingGetter\",\"connecting\");\n    }\n    target.addInterceptor(\"com.navercorp.pinpoint.plugin.jdk.http.interceptor.HttpURLConnectionInterceptor\");\n    return target.toBytecode();\n  }\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 86,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1026,
        "startLineNumber" : 39,
        "startColumnNumber" : 58,
        "endLineNumber" : 57,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  transformTemplate.transform(\"sun.net.www.protocol.http.HttpURLConnection\",new TransformCallback(){\n    @Override public byte[] doInTransform(    Instrumentor instrumentor,    ClassLoader loader,    String className,    Class<?> classBeingRedefined,    ProtectionDomain protectionDomain,    byte[] classfileBuffer) throws InstrumentException {\n      InstrumentClass target=instrumentor.getInstrumentClass(loader,className,classfileBuffer);\n      target.addGetter(\"com.navercorp.pinpoint.plugin.jdk.http.ConnectedGetter\",\"connected\");\n      if (target.hasField(\"connecting\",\"boolean\")) {\n        target.addGetter(\"com.navercorp.pinpoint.plugin.jdk.http.ConnectingGetter\",\"connecting\");\n      }\n      target.addInterceptor(\"com.navercorp.pinpoint.plugin.jdk.http.interceptor.HttpURLConnectionInterceptor\");\n      return target.toBytecode();\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1094,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 57,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void setup(ProfilerPluginSetupContext context){\n  transformTemplate.transform(\"sun.net.www.protocol.http.HttpURLConnection\",new TransformCallback(){\n    @Override public byte[] doInTransform(    Instrumentor instrumentor,    ClassLoader loader,    String className,    Class<?> classBeingRedefined,    ProtectionDomain protectionDomain,    byte[] classfileBuffer) throws InstrumentException {\n      InstrumentClass target=instrumentor.getInstrumentClass(loader,className,classfileBuffer);\n      target.addGetter(\"com.navercorp.pinpoint.plugin.jdk.http.ConnectedGetter\",\"connected\");\n      if (target.hasField(\"connecting\",\"boolean\")) {\n        target.addGetter(\"com.navercorp.pinpoint.plugin.jdk.http.ConnectingGetter\",\"connecting\");\n      }\n      target.addInterceptor(\"com.navercorp.pinpoint.plugin.jdk.http.interceptor.HttpURLConnectionInterceptor\");\n      return target.toBytecode();\n    }\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 97,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1010,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 11
      },
      "nodeContext" : "transformTemplate.transform(\"sun.net.www.protocol.http.HttpURLConnection\",new TransformCallback(){\n  @Override public byte[] doInTransform(  Instrumentor instrumentor,  ClassLoader loader,  String className,  Class<?> classBeingRedefined,  ProtectionDomain protectionDomain,  byte[] classfileBuffer) throws InstrumentException {\n    InstrumentClass target=instrumentor.getInstrumentClass(loader,className,classfileBuffer);\n    target.addGetter(\"com.navercorp.pinpoint.plugin.jdk.http.ConnectedGetter\",\"connected\");\n    if (target.hasField(\"connecting\",\"boolean\")) {\n      target.addGetter(\"com.navercorp.pinpoint.plugin.jdk.http.ConnectingGetter\",\"connecting\");\n    }\n    target.addInterceptor(\"com.navercorp.pinpoint.plugin.jdk.http.interceptor.HttpURLConnectionInterceptor\");\n    return target.toBytecode();\n  }\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 86,
      "astHeight" : 11
    },
    "tokenLength" : 57,
    "type" : ""
  } ],
  "positionList" : [ {
    "charLength" : 933,
    "startLineNumber" : 40,
    "startColumnNumber" : 83,
    "endLineNumber" : 56,
    "endColumnNumber" : 9
  } ],
  "layoutRelationDataList" : [ ]
}