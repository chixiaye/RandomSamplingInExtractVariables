{
  "id" : 263,
  "expression" : "responseEntity",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-samples/spring-boot-sample-web-freemarker/src/test/java/sample/freemarker/SampleWebFreeMarkerApplicationTests.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "responseEntity",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 68,
      "startColumnNumber" : 13,
      "endLineNumber" : 68,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 68,
        "startColumnNumber" : 13,
        "endLineNumber" : 68,
        "endColumnNumber" : 43
      },
      "nodeContext" : "responseEntity.getStatusCode()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 68,
        "startColumnNumber" : 2,
        "endLineNumber" : 68,
        "endColumnNumber" : 44
      },
      "nodeContext" : "assertThat(responseEntity.getStatusCode())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 68,
        "startColumnNumber" : 2,
        "endLineNumber" : 68,
        "endColumnNumber" : 76
      },
      "nodeContext" : "assertThat(responseEntity.getStatusCode()).isEqualTo(HttpStatus.NOT_FOUND)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 68,
        "startColumnNumber" : 2,
        "endLineNumber" : 68,
        "endColumnNumber" : 77
      },
      "nodeContext" : "assertThat(responseEntity.getStatusCode()).isEqualTo(HttpStatus.NOT_FOUND);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 484,
        "startLineNumber" : 60,
        "startColumnNumber" : 60,
        "endLineNumber" : 71,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  HttpHeaders headers=new HttpHeaders();\n  headers.setAccept(Arrays.asList(MediaType.TEXT_HTML));\n  HttpEntity<String> requestEntity=new HttpEntity<>(headers);\n  ResponseEntity<String> responseEntity=this.testRestTemplate.exchange(\"/does-not-exist\",HttpMethod.GET,requestEntity,String.class);\n  assertThat(responseEntity.getStatusCode()).isEqualTo(HttpStatus.NOT_FOUND);\n  assertThat(responseEntity.getBody()).contains(\"Something went wrong: 404 Not Found\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 550,
        "startLineNumber" : 59,
        "startColumnNumber" : 1,
        "endLineNumber" : 71,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testFreeMarkerErrorTemplate() throws Exception {\n  HttpHeaders headers=new HttpHeaders();\n  headers.setAccept(Arrays.asList(MediaType.TEXT_HTML));\n  HttpEntity<String> requestEntity=new HttpEntity<>(headers);\n  ResponseEntity<String> responseEntity=this.testRestTemplate.exchange(\"/does-not-exist\",HttpMethod.GET,requestEntity,String.class);\n  assertThat(responseEntity.getStatusCode()).isEqualTo(HttpStatus.NOT_FOUND);\n  assertThat(responseEntity.getBody()).contains(\"Something went wrong: 404 Not Found\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 81,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 68,
        "startColumnNumber" : 2,
        "endLineNumber" : 68,
        "endColumnNumber" : 77
      },
      "nodeContext" : "assertThat(responseEntity.getStatusCode()).isEqualTo(HttpStatus.NOT_FOUND);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "sample.freemarker.ResponseEntity<java.lang.String>"
  }, {
    "nodeContext" : "responseEntity",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 69,
      "startColumnNumber" : 13,
      "endLineNumber" : 69,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 69,
        "startColumnNumber" : 13,
        "endLineNumber" : 69,
        "endColumnNumber" : 37
      },
      "nodeContext" : "responseEntity.getBody()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 69,
        "startColumnNumber" : 2,
        "endLineNumber" : 69,
        "endColumnNumber" : 38
      },
      "nodeContext" : "assertThat(responseEntity.getBody())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 69,
        "startColumnNumber" : 2,
        "endLineNumber" : 70,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertThat(responseEntity.getBody()).contains(\"Something went wrong: 404 Not Found\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 69,
        "startColumnNumber" : 2,
        "endLineNumber" : 70,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertThat(responseEntity.getBody()).contains(\"Something went wrong: 404 Not Found\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 484,
        "startLineNumber" : 60,
        "startColumnNumber" : 60,
        "endLineNumber" : 71,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  HttpHeaders headers=new HttpHeaders();\n  headers.setAccept(Arrays.asList(MediaType.TEXT_HTML));\n  HttpEntity<String> requestEntity=new HttpEntity<>(headers);\n  ResponseEntity<String> responseEntity=this.testRestTemplate.exchange(\"/does-not-exist\",HttpMethod.GET,requestEntity,String.class);\n  assertThat(responseEntity.getStatusCode()).isEqualTo(HttpStatus.NOT_FOUND);\n  assertThat(responseEntity.getBody()).contains(\"Something went wrong: 404 Not Found\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 550,
        "startLineNumber" : 59,
        "startColumnNumber" : 1,
        "endLineNumber" : 71,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void testFreeMarkerErrorTemplate() throws Exception {\n  HttpHeaders headers=new HttpHeaders();\n  headers.setAccept(Arrays.asList(MediaType.TEXT_HTML));\n  HttpEntity<String> requestEntity=new HttpEntity<>(headers);\n  ResponseEntity<String> responseEntity=this.testRestTemplate.exchange(\"/does-not-exist\",HttpMethod.GET,requestEntity,String.class);\n  assertThat(responseEntity.getStatusCode()).isEqualTo(HttpStatus.NOT_FOUND);\n  assertThat(responseEntity.getBody()).contains(\"Something went wrong: 404 Not Found\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 81,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 69,
        "startColumnNumber" : 2,
        "endLineNumber" : 69,
        "endColumnNumber" : 38
      },
      "nodeContext" : "assertThat(responseEntity.getBody())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "sample.freemarker.ResponseEntity<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 68,
    "startColumnNumber" : 13,
    "endLineNumber" : 68,
    "endColumnNumber" : 27
  }, {
    "charLength" : 14,
    "startLineNumber" : 69,
    "startColumnNumber" : 13,
    "endLineNumber" : 69,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}