{
  "id" : 322,
  "expression" : "ClassUtils.forName(ClassUtilsTest.class.getName())",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-common/src/test/java/org/apache/dubbo/common/utils/ClassUtilsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ClassUtils.forName(ClassUtilsTest.class.getName())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 50,
      "startLineNumber" : 74,
      "startColumnNumber" : 19,
      "endLineNumber" : 74,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 8,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 74,
        "startColumnNumber" : 19,
        "endLineNumber" : 74,
        "endColumnNumber" : 93
      },
      "nodeContext" : "ClassUtils.forName(ClassUtilsTest.class.getName()) == ClassUtilsTest.class",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 104
      },
      "nodeContext" : "assertThat(ClassUtils.forName(ClassUtilsTest.class.getName()) == ClassUtilsTest.class,is(true))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 105
      },
      "nodeContext" : "assertThat(ClassUtils.forName(ClassUtilsTest.class.getName()) == ClassUtilsTest.class,is(true));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 73,
        "startColumnNumber" : 48,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertThat(ClassUtils.forName(ClassUtilsTest.class.getName()) == ClassUtilsTest.class,is(true));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 167,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testForName1() throws Exception {\n  assertThat(ClassUtils.forName(ClassUtilsTest.class.getName()) == ClassUtilsTest.class,is(true));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 27,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 105
      },
      "nodeContext" : "assertThat(ClassUtils.forName(ClassUtilsTest.class.getName()) == ClassUtilsTest.class,is(true));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 8
    },
    "tokenLength" : 4,
    "type" : "java.lang.Class<>"
  } ],
  "positionList" : [ {
    "charLength" : 50,
    "startLineNumber" : 74,
    "startColumnNumber" : 19,
    "endLineNumber" : 74,
    "endColumnNumber" : 69
  } ],
  "layoutRelationDataList" : [ ]
}