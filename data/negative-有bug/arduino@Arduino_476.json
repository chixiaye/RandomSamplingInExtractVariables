{
  "id" : 476,
  "expression" : "packageFolder",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/arduino-core/src/cc/arduino/contributions/packages/ContributionInstaller.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "packageFolder",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 132,
      "startColumnNumber" : 32,
      "endLineNumber" : 132,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 132,
        "startColumnNumber" : 23,
        "endLineNumber" : 132,
        "endColumnNumber" : 55
      },
      "nodeContext" : "new File(packageFolder,\"tools\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 132,
        "startColumnNumber" : 9,
        "endLineNumber" : 132,
        "endColumnNumber" : 55
      },
      "nodeContext" : "toolsFolder=new File(packageFolder,\"tools\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 132,
        "startColumnNumber" : 4,
        "endLineNumber" : 132,
        "endColumnNumber" : 56
      },
      "nodeContext" : "File toolsFolder=new File(packageFolder,\"tools\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3410,
        "startLineNumber" : 82,
        "startColumnNumber" : 77,
        "endLineNumber" : 169,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<String> errors=new LinkedList<String>();\n  if (platform.isInstalled()) {\n    throw new Exception(\"Platform is already installed!\");\n  }\n  List<ContributedTool> tools=new LinkedList<ContributedTool>(platform.getResolvedTools());\n  Iterator<ContributedTool> toolsIterator=tools.iterator();\n  while (toolsIterator.hasNext()) {\n    ContributedTool tool=toolsIterator.next();\n    DownloadableContribution downloadable=tool.getDownloadableContribution();\n    if (downloadable == null) {\n      throw new Exception(format(_(\"Tool {0} is not available for your operating system.\"),tool.getName()));\n    }\n    if (downloadable.isInstalled()) {\n      toolsIterator.remove();\n    }\n  }\n  MultiStepProgress progress=new MultiStepProgress((tools.size() + 1) * 2);\n  try {\n    downloader.download(platform,progress,_(\"Downloading boards definitions.\"));\n    progress.stepDone();\n    int i=1;\n    for (    ContributedTool tool : tools) {\n      String msg=format(_(\"Downloading tools ({0}/{1}).\"),i,tools.size());\n      i++;\n      downloader.download(tool.getDownloadableContribution(),progress,msg);\n      progress.stepDone();\n    }\n  }\n catch (  InterruptedException e) {\n    return errors;\n  }\n  ContributedPackage pack=platform.getParentPackage();\n  File packageFolder=new File(indexer.getPackagesFolder(),pack.getName());\n  File toolsFolder=new File(packageFolder,\"tools\");\n  int i=1;\n  for (  ContributedTool tool : tools) {\n    progress.setStatus(format(_(\"Installing tools ({0}/{1})...\"),i,tools.size()));\n    onProgress(progress);\n    i++;\n    DownloadableContribution toolContrib=tool.getDownloadableContribution();\n    File destFolder=new File(toolsFolder,tool.getName() + File.separator + tool.getVersion());\n    destFolder.mkdirs();\n    assert toolContrib.getDownloadedFile() != null;\n    new ArchiveExtractor(BaseNoGui.getPlatform()).extract(toolContrib.getDownloadedFile(),destFolder,1);\n    try {\n      executePostInstallScriptIfAny(destFolder);\n    }\n catch (    IOException e) {\n      errors.add(_(\"Error running post install script\"));\n    }\n    toolContrib.setInstalled(true);\n    toolContrib.setInstalledFolder(destFolder);\n    progress.stepDone();\n  }\n  progress.setStatus(_(\"Installing boards...\"));\n  onProgress(progress);\n  File platformFolder=new File(packageFolder,\"hardware\" + File.separator + platform.getArchitecture());\n  File destFolder=new File(platformFolder,platform.getParsedVersion());\n  destFolder.mkdirs();\n  new ArchiveExtractor(BaseNoGui.getPlatform()).extract(platform.getDownloadedFile(),destFolder,1);\n  platform.setInstalled(true);\n  platform.setInstalledFolder(destFolder);\n  progress.stepDone();\n  progress.setStatus(_(\"Installation completed!\"));\n  onProgress(progress);\n  return errors;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 414,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3485,
        "startLineNumber" : 82,
        "startColumnNumber" : 2,
        "endLineNumber" : 169,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public List<String> install(ContributedPlatform platform) throws Exception {\n  List<String> errors=new LinkedList<String>();\n  if (platform.isInstalled()) {\n    throw new Exception(\"Platform is already installed!\");\n  }\n  List<ContributedTool> tools=new LinkedList<ContributedTool>(platform.getResolvedTools());\n  Iterator<ContributedTool> toolsIterator=tools.iterator();\n  while (toolsIterator.hasNext()) {\n    ContributedTool tool=toolsIterator.next();\n    DownloadableContribution downloadable=tool.getDownloadableContribution();\n    if (downloadable == null) {\n      throw new Exception(format(_(\"Tool {0} is not available for your operating system.\"),tool.getName()));\n    }\n    if (downloadable.isInstalled()) {\n      toolsIterator.remove();\n    }\n  }\n  MultiStepProgress progress=new MultiStepProgress((tools.size() + 1) * 2);\n  try {\n    downloader.download(platform,progress,_(\"Downloading boards definitions.\"));\n    progress.stepDone();\n    int i=1;\n    for (    ContributedTool tool : tools) {\n      String msg=format(_(\"Downloading tools ({0}/{1}).\"),i,tools.size());\n      i++;\n      downloader.download(tool.getDownloadableContribution(),progress,msg);\n      progress.stepDone();\n    }\n  }\n catch (  InterruptedException e) {\n    return errors;\n  }\n  ContributedPackage pack=platform.getParentPackage();\n  File packageFolder=new File(indexer.getPackagesFolder(),pack.getName());\n  File toolsFolder=new File(packageFolder,\"tools\");\n  int i=1;\n  for (  ContributedTool tool : tools) {\n    progress.setStatus(format(_(\"Installing tools ({0}/{1})...\"),i,tools.size()));\n    onProgress(progress);\n    i++;\n    DownloadableContribution toolContrib=tool.getDownloadableContribution();\n    File destFolder=new File(toolsFolder,tool.getName() + File.separator + tool.getVersion());\n    destFolder.mkdirs();\n    assert toolContrib.getDownloadedFile() != null;\n    new ArchiveExtractor(BaseNoGui.getPlatform()).extract(toolContrib.getDownloadedFile(),destFolder,1);\n    try {\n      executePostInstallScriptIfAny(destFolder);\n    }\n catch (    IOException e) {\n      errors.add(_(\"Error running post install script\"));\n    }\n    toolContrib.setInstalled(true);\n    toolContrib.setInstalledFolder(destFolder);\n    progress.stepDone();\n  }\n  progress.setStatus(_(\"Installing boards...\"));\n  onProgress(progress);\n  File platformFolder=new File(packageFolder,\"hardware\" + File.separator + platform.getArchitecture());\n  File destFolder=new File(platformFolder,platform.getParsedVersion());\n  destFolder.mkdirs();\n  new ArchiveExtractor(BaseNoGui.getPlatform()).extract(platform.getDownloadedFile(),destFolder,1);\n  platform.setInstalled(true);\n  platform.setInstalledFolder(destFolder);\n  progress.stepDone();\n  progress.setStatus(_(\"Installation completed!\"));\n  onProgress(progress);\n  return errors;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 428,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 132,
        "startColumnNumber" : 4,
        "endLineNumber" : 132,
        "endColumnNumber" : 56
      },
      "nodeContext" : "File toolsFolder=new File(packageFolder,\"tools\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.io.File"
  }, {
    "nodeContext" : "packageFolder",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 157,
      "startColumnNumber" : 35,
      "endLineNumber" : 157,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 157,
        "startColumnNumber" : 26,
        "endLineNumber" : 157,
        "endColumnNumber" : 107
      },
      "nodeContext" : "new File(packageFolder,\"hardware\" + File.separator + platform.getArchitecture())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 157,
        "startColumnNumber" : 9,
        "endLineNumber" : 157,
        "endColumnNumber" : 107
      },
      "nodeContext" : "platformFolder=new File(packageFolder,\"hardware\" + File.separator + platform.getArchitecture())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 157,
        "startColumnNumber" : 4,
        "endLineNumber" : 157,
        "endColumnNumber" : 108
      },
      "nodeContext" : "File platformFolder=new File(packageFolder,\"hardware\" + File.separator + platform.getArchitecture());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3410,
        "startLineNumber" : 82,
        "startColumnNumber" : 77,
        "endLineNumber" : 169,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<String> errors=new LinkedList<String>();\n  if (platform.isInstalled()) {\n    throw new Exception(\"Platform is already installed!\");\n  }\n  List<ContributedTool> tools=new LinkedList<ContributedTool>(platform.getResolvedTools());\n  Iterator<ContributedTool> toolsIterator=tools.iterator();\n  while (toolsIterator.hasNext()) {\n    ContributedTool tool=toolsIterator.next();\n    DownloadableContribution downloadable=tool.getDownloadableContribution();\n    if (downloadable == null) {\n      throw new Exception(format(_(\"Tool {0} is not available for your operating system.\"),tool.getName()));\n    }\n    if (downloadable.isInstalled()) {\n      toolsIterator.remove();\n    }\n  }\n  MultiStepProgress progress=new MultiStepProgress((tools.size() + 1) * 2);\n  try {\n    downloader.download(platform,progress,_(\"Downloading boards definitions.\"));\n    progress.stepDone();\n    int i=1;\n    for (    ContributedTool tool : tools) {\n      String msg=format(_(\"Downloading tools ({0}/{1}).\"),i,tools.size());\n      i++;\n      downloader.download(tool.getDownloadableContribution(),progress,msg);\n      progress.stepDone();\n    }\n  }\n catch (  InterruptedException e) {\n    return errors;\n  }\n  ContributedPackage pack=platform.getParentPackage();\n  File packageFolder=new File(indexer.getPackagesFolder(),pack.getName());\n  File toolsFolder=new File(packageFolder,\"tools\");\n  int i=1;\n  for (  ContributedTool tool : tools) {\n    progress.setStatus(format(_(\"Installing tools ({0}/{1})...\"),i,tools.size()));\n    onProgress(progress);\n    i++;\n    DownloadableContribution toolContrib=tool.getDownloadableContribution();\n    File destFolder=new File(toolsFolder,tool.getName() + File.separator + tool.getVersion());\n    destFolder.mkdirs();\n    assert toolContrib.getDownloadedFile() != null;\n    new ArchiveExtractor(BaseNoGui.getPlatform()).extract(toolContrib.getDownloadedFile(),destFolder,1);\n    try {\n      executePostInstallScriptIfAny(destFolder);\n    }\n catch (    IOException e) {\n      errors.add(_(\"Error running post install script\"));\n    }\n    toolContrib.setInstalled(true);\n    toolContrib.setInstalledFolder(destFolder);\n    progress.stepDone();\n  }\n  progress.setStatus(_(\"Installing boards...\"));\n  onProgress(progress);\n  File platformFolder=new File(packageFolder,\"hardware\" + File.separator + platform.getArchitecture());\n  File destFolder=new File(platformFolder,platform.getParsedVersion());\n  destFolder.mkdirs();\n  new ArchiveExtractor(BaseNoGui.getPlatform()).extract(platform.getDownloadedFile(),destFolder,1);\n  platform.setInstalled(true);\n  platform.setInstalledFolder(destFolder);\n  progress.stepDone();\n  progress.setStatus(_(\"Installation completed!\"));\n  onProgress(progress);\n  return errors;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 414,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3485,
        "startLineNumber" : 82,
        "startColumnNumber" : 2,
        "endLineNumber" : 169,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public List<String> install(ContributedPlatform platform) throws Exception {\n  List<String> errors=new LinkedList<String>();\n  if (platform.isInstalled()) {\n    throw new Exception(\"Platform is already installed!\");\n  }\n  List<ContributedTool> tools=new LinkedList<ContributedTool>(platform.getResolvedTools());\n  Iterator<ContributedTool> toolsIterator=tools.iterator();\n  while (toolsIterator.hasNext()) {\n    ContributedTool tool=toolsIterator.next();\n    DownloadableContribution downloadable=tool.getDownloadableContribution();\n    if (downloadable == null) {\n      throw new Exception(format(_(\"Tool {0} is not available for your operating system.\"),tool.getName()));\n    }\n    if (downloadable.isInstalled()) {\n      toolsIterator.remove();\n    }\n  }\n  MultiStepProgress progress=new MultiStepProgress((tools.size() + 1) * 2);\n  try {\n    downloader.download(platform,progress,_(\"Downloading boards definitions.\"));\n    progress.stepDone();\n    int i=1;\n    for (    ContributedTool tool : tools) {\n      String msg=format(_(\"Downloading tools ({0}/{1}).\"),i,tools.size());\n      i++;\n      downloader.download(tool.getDownloadableContribution(),progress,msg);\n      progress.stepDone();\n    }\n  }\n catch (  InterruptedException e) {\n    return errors;\n  }\n  ContributedPackage pack=platform.getParentPackage();\n  File packageFolder=new File(indexer.getPackagesFolder(),pack.getName());\n  File toolsFolder=new File(packageFolder,\"tools\");\n  int i=1;\n  for (  ContributedTool tool : tools) {\n    progress.setStatus(format(_(\"Installing tools ({0}/{1})...\"),i,tools.size()));\n    onProgress(progress);\n    i++;\n    DownloadableContribution toolContrib=tool.getDownloadableContribution();\n    File destFolder=new File(toolsFolder,tool.getName() + File.separator + tool.getVersion());\n    destFolder.mkdirs();\n    assert toolContrib.getDownloadedFile() != null;\n    new ArchiveExtractor(BaseNoGui.getPlatform()).extract(toolContrib.getDownloadedFile(),destFolder,1);\n    try {\n      executePostInstallScriptIfAny(destFolder);\n    }\n catch (    IOException e) {\n      errors.add(_(\"Error running post install script\"));\n    }\n    toolContrib.setInstalled(true);\n    toolContrib.setInstalledFolder(destFolder);\n    progress.stepDone();\n  }\n  progress.setStatus(_(\"Installing boards...\"));\n  onProgress(progress);\n  File platformFolder=new File(packageFolder,\"hardware\" + File.separator + platform.getArchitecture());\n  File destFolder=new File(platformFolder,platform.getParsedVersion());\n  destFolder.mkdirs();\n  new ArchiveExtractor(BaseNoGui.getPlatform()).extract(platform.getDownloadedFile(),destFolder,1);\n  platform.setInstalled(true);\n  platform.setInstalledFolder(destFolder);\n  progress.stepDone();\n  progress.setStatus(_(\"Installation completed!\"));\n  onProgress(progress);\n  return errors;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 428,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 157,
        "startColumnNumber" : 4,
        "endLineNumber" : 157,
        "endColumnNumber" : 108
      },
      "nodeContext" : "File platformFolder=new File(packageFolder,\"hardware\" + File.separator + platform.getArchitecture());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.io.File"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 132,
    "startColumnNumber" : 32,
    "endLineNumber" : 132,
    "endColumnNumber" : 45
  }, {
    "charLength" : 13,
    "startLineNumber" : 157,
    "startColumnNumber" : 35,
    "endLineNumber" : 157,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}