{
  "id" : 125,
  "expression" : "source.cast(Boolean.class)",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/flowable/FlowableCastTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "source.cast(Boolean.class)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 44,
      "startColumnNumber" : 39,
      "endLineNumber" : 44,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 6,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 44,
        "startColumnNumber" : 26,
        "endLineNumber" : 44,
        "endColumnNumber" : 65
      },
      "nodeContext" : "observable=source.cast(Boolean.class)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 66
      },
      "nodeContext" : "Flowable<Boolean> observable=source.cast(Boolean.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 366,
        "startLineNumber" : 42,
        "startColumnNumber" : 40,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Flowable<?> source=Flowable.just(1,2);\n  Flowable<Boolean> observable=source.cast(Boolean.class);\n  Subscriber<Boolean> observer=TestHelper.mockSubscriber();\n  observable.subscribe(observer);\n  verify(observer,times(1)).onError(org.mockito.Matchers.any(ClassCastException.class));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 413,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testCastWithWrongType(){\n  Flowable<?> source=Flowable.just(1,2);\n  Flowable<Boolean> observable=source.cast(Boolean.class);\n  Subscriber<Boolean> observer=TestHelper.mockSubscriber();\n  observable.subscribe(observer);\n  verify(observer,times(1)).onError(org.mockito.Matchers.any(ClassCastException.class));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 68,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 66
      },
      "nodeContext" : "Flowable<Boolean> observable=source.cast(Boolean.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "io.reactivex.Flowable<java.lang.Boolean>"
  } ],
  "positionList" : [ {
    "charLength" : 26,
    "startLineNumber" : 44,
    "startColumnNumber" : 39,
    "endLineNumber" : 44,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ ]
}