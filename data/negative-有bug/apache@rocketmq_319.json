{
  "id" : 319,
  "expression" : "\"Not all are sent\"",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/test/src/test/java/org/apache/rocketmq/test/client/consumer/broadcast/normal/NormalMsgTwoSameGroupConsumerIT.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Not all are sent\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 65,
      "startColumnNumber" : 28,
      "endLineNumber" : 65,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 94
      },
      "nodeContext" : "Assert.assertEquals(\"Not all are sent\",msgSize,producer.getAllUndupMsgBody().size())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 95
      },
      "nodeContext" : "Assert.assertEquals(\"Not all are sent\",msgSize,producer.getAllUndupMsgBody().size());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1132,
        "startLineNumber" : 54,
        "startColumnNumber" : 48,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int msgSize=16;\n  String group=initConsumerGroup();\n  RMQBroadCastConsumer consumer1=getBroadCastConsumer(nsAddr,group,topic,\"*\",new RMQNormalListener(group + \"_1\"));\n  RMQBroadCastConsumer consumer2=getBroadCastConsumer(nsAddr,consumer1.getConsumerGroup(),topic,\"*\",new RMQNormalListener(group + \"_2\"));\n  TestUtils.waitForSeconds(waitTime);\n  producer.send(msgSize);\n  Assert.assertEquals(\"Not all are sent\",msgSize,producer.getAllUndupMsgBody().size());\n  consumer1.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n  consumer2.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n  assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer1.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody());\n  assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer2.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1186,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testStartTwoSameGroupConsumer(){\n  int msgSize=16;\n  String group=initConsumerGroup();\n  RMQBroadCastConsumer consumer1=getBroadCastConsumer(nsAddr,group,topic,\"*\",new RMQNormalListener(group + \"_1\"));\n  RMQBroadCastConsumer consumer2=getBroadCastConsumer(nsAddr,consumer1.getConsumerGroup(),topic,\"*\",new RMQNormalListener(group + \"_2\"));\n  TestUtils.waitForSeconds(waitTime);\n  producer.send(msgSize);\n  Assert.assertEquals(\"Not all are sent\",msgSize,producer.getAllUndupMsgBody().size());\n  consumer1.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n  consumer2.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n  assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer1.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody());\n  assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer2.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 134,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 95
      },
      "nodeContext" : "Assert.assertEquals(\"Not all are sent\",msgSize,producer.getAllUndupMsgBody().size());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 65,
    "startColumnNumber" : 28,
    "endLineNumber" : 65,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ ]
}