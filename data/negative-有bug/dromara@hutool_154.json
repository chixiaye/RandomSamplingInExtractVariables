{
  "id" : 154,
  "expression" : "newElements.length",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-core/src/main/java/cn/hutool/core/util/ArrayUtil.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "newElements.length",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 376,
      "startColumnNumber" : 90,
      "endLineNumber" : 376,
      "endColumnNumber" : 108
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 376,
        "startColumnNumber" : 67,
        "endLineNumber" : 376,
        "endColumnNumber" : 108
      },
      "nodeContext" : "Math.max(len,index) + newElements.length",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 376,
        "startColumnNumber" : 21,
        "endLineNumber" : 376,
        "endColumnNumber" : 109
      },
      "nodeContext" : "newArray(array.getClass().getComponentType(),Math.max(len,index) + newElements.length)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 376,
        "startColumnNumber" : 12,
        "endLineNumber" : 376,
        "endColumnNumber" : 109
      },
      "nodeContext" : "result=newArray(array.getClass().getComponentType(),Math.max(len,index) + newElements.length)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 376,
        "startColumnNumber" : 2,
        "endLineNumber" : 376,
        "endColumnNumber" : 110
      },
      "nodeContext" : "final T[] result=newArray(array.getClass().getComponentType(),Math.max(len,index) + newElements.length);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 587,
        "startLineNumber" : 363,
        "startColumnNumber" : 76,
        "endLineNumber" : 383,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (isEmpty(newElements)) {\n    return array;\n  }\n  if (isEmpty(array)) {\n    return newElements;\n  }\n  final int len=length(array);\n  if (index < 0) {\n    index=(index % len) + len;\n  }\n  final T[] result=newArray(array.getClass().getComponentType(),Math.max(len,index) + newElements.length);\n  System.arraycopy(array,0,result,0,Math.min(len,index));\n  System.arraycopy(newElements,0,result,index,newElements.length);\n  if (index < len) {\n    System.arraycopy(array,index,result,index + newElements.length,len - index);\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1019,
        "startLineNumber" : 350,
        "startColumnNumber" : 1,
        "endLineNumber" : 383,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 将新元素插入到到已有数组中的某个位置<br> 添加新元素会生成一个新的数组，不影响原数组<br> 如果插入位置为为负数，从原数组从后向前计数，若大于原数组长度，则空白处用null填充\n * @param < T >         数组元素类型\n * @param array       已有数组\n * @param index       插入位置，此位置为对应此位置元素之前的空档\n * @param newElements 新元素\n * @return 新数组\n * @since 4.0.8\n */\n@SuppressWarnings({\"unchecked\",\"SuspiciousSystemArraycopy\"}) public static <T>Object insert(Object array,int index,T... newElements){\n  if (isEmpty(newElements)) {\n    return array;\n  }\n  if (isEmpty(array)) {\n    return newElements;\n  }\n  final int len=length(array);\n  if (index < 0) {\n    index=(index % len) + len;\n  }\n  final T[] result=newArray(array.getClass().getComponentType(),Math.max(len,index) + newElements.length);\n  System.arraycopy(array,0,result,0,Math.min(len,index));\n  System.arraycopy(newElements,0,result,index,newElements.length);\n  if (index < len) {\n    System.arraycopy(array,index,result,index + newElements.length,len - index);\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 132,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 376,
        "startColumnNumber" : 2,
        "endLineNumber" : 376,
        "endColumnNumber" : 110
      },
      "nodeContext" : "final T[] result=newArray(array.getClass().getComponentType(),Math.max(len,index) + newElements.length);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 24,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "int"
  }, {
    "nodeContext" : "newElements.length",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 378,
      "startColumnNumber" : 50,
      "endLineNumber" : 378,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 378,
        "startColumnNumber" : 2,
        "endLineNumber" : 378,
        "endColumnNumber" : 69
      },
      "nodeContext" : "System.arraycopy(newElements,0,result,index,newElements.length)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 378,
        "startColumnNumber" : 2,
        "endLineNumber" : 378,
        "endColumnNumber" : 70
      },
      "nodeContext" : "System.arraycopy(newElements,0,result,index,newElements.length);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 587,
        "startLineNumber" : 363,
        "startColumnNumber" : 76,
        "endLineNumber" : 383,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (isEmpty(newElements)) {\n    return array;\n  }\n  if (isEmpty(array)) {\n    return newElements;\n  }\n  final int len=length(array);\n  if (index < 0) {\n    index=(index % len) + len;\n  }\n  final T[] result=newArray(array.getClass().getComponentType(),Math.max(len,index) + newElements.length);\n  System.arraycopy(array,0,result,0,Math.min(len,index));\n  System.arraycopy(newElements,0,result,index,newElements.length);\n  if (index < len) {\n    System.arraycopy(array,index,result,index + newElements.length,len - index);\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1019,
        "startLineNumber" : 350,
        "startColumnNumber" : 1,
        "endLineNumber" : 383,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 将新元素插入到到已有数组中的某个位置<br> 添加新元素会生成一个新的数组，不影响原数组<br> 如果插入位置为为负数，从原数组从后向前计数，若大于原数组长度，则空白处用null填充\n * @param < T >         数组元素类型\n * @param array       已有数组\n * @param index       插入位置，此位置为对应此位置元素之前的空档\n * @param newElements 新元素\n * @return 新数组\n * @since 4.0.8\n */\n@SuppressWarnings({\"unchecked\",\"SuspiciousSystemArraycopy\"}) public static <T>Object insert(Object array,int index,T... newElements){\n  if (isEmpty(newElements)) {\n    return array;\n  }\n  if (isEmpty(array)) {\n    return newElements;\n  }\n  final int len=length(array);\n  if (index < 0) {\n    index=(index % len) + len;\n  }\n  final T[] result=newArray(array.getClass().getComponentType(),Math.max(len,index) + newElements.length);\n  System.arraycopy(array,0,result,0,Math.min(len,index));\n  System.arraycopy(newElements,0,result,index,newElements.length);\n  if (index < len) {\n    System.arraycopy(array,index,result,index + newElements.length,len - index);\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 132,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 378,
        "startColumnNumber" : 2,
        "endLineNumber" : 378,
        "endColumnNumber" : 70
      },
      "nodeContext" : "System.arraycopy(newElements,0,result,index,newElements.length);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  }, {
    "nodeContext" : "newElements.length",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 380,
      "startColumnNumber" : 50,
      "endLineNumber" : 380,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 380,
        "startColumnNumber" : 42,
        "endLineNumber" : 380,
        "endColumnNumber" : 68
      },
      "nodeContext" : "index + newElements.length",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 380,
        "startColumnNumber" : 3,
        "endLineNumber" : 380,
        "endColumnNumber" : 82
      },
      "nodeContext" : "System.arraycopy(array,index,result,index + newElements.length,len - index)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 380,
        "startColumnNumber" : 3,
        "endLineNumber" : 380,
        "endColumnNumber" : 83
      },
      "nodeContext" : "System.arraycopy(array,index,result,index + newElements.length,len - index);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 379,
        "startColumnNumber" : 19,
        "endLineNumber" : 381,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  System.arraycopy(array,index,result,index + newElements.length,len - index);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 379,
        "startColumnNumber" : 2,
        "endLineNumber" : 381,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (index < len) {\n  System.arraycopy(array,index,result,index + newElements.length,len - index);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 587,
        "startLineNumber" : 363,
        "startColumnNumber" : 76,
        "endLineNumber" : 383,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (isEmpty(newElements)) {\n    return array;\n  }\n  if (isEmpty(array)) {\n    return newElements;\n  }\n  final int len=length(array);\n  if (index < 0) {\n    index=(index % len) + len;\n  }\n  final T[] result=newArray(array.getClass().getComponentType(),Math.max(len,index) + newElements.length);\n  System.arraycopy(array,0,result,0,Math.min(len,index));\n  System.arraycopy(newElements,0,result,index,newElements.length);\n  if (index < len) {\n    System.arraycopy(array,index,result,index + newElements.length,len - index);\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1019,
        "startLineNumber" : 350,
        "startColumnNumber" : 1,
        "endLineNumber" : 383,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 将新元素插入到到已有数组中的某个位置<br> 添加新元素会生成一个新的数组，不影响原数组<br> 如果插入位置为为负数，从原数组从后向前计数，若大于原数组长度，则空白处用null填充\n * @param < T >         数组元素类型\n * @param array       已有数组\n * @param index       插入位置，此位置为对应此位置元素之前的空档\n * @param newElements 新元素\n * @return 新数组\n * @since 4.0.8\n */\n@SuppressWarnings({\"unchecked\",\"SuspiciousSystemArraycopy\"}) public static <T>Object insert(Object array,int index,T... newElements){\n  if (isEmpty(newElements)) {\n    return array;\n  }\n  if (isEmpty(array)) {\n    return newElements;\n  }\n  final int len=length(array);\n  if (index < 0) {\n    index=(index % len) + len;\n  }\n  final T[] result=newArray(array.getClass().getComponentType(),Math.max(len,index) + newElements.length);\n  System.arraycopy(array,0,result,0,Math.min(len,index));\n  System.arraycopy(newElements,0,result,index,newElements.length);\n  if (index < len) {\n    System.arraycopy(array,index,result,index + newElements.length,len - index);\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 132,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 380,
        "startColumnNumber" : 3,
        "endLineNumber" : 380,
        "endColumnNumber" : 83
      },
      "nodeContext" : "System.arraycopy(array,index,result,index + newElements.length,len - index);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 376,
    "startColumnNumber" : 90,
    "endLineNumber" : 376,
    "endColumnNumber" : 108
  }, {
    "charLength" : 18,
    "startLineNumber" : 378,
    "startColumnNumber" : 50,
    "endLineNumber" : 378,
    "endColumnNumber" : 68
  }, {
    "charLength" : 18,
    "startLineNumber" : 380,
    "startColumnNumber" : 50,
    "endLineNumber" : 380,
    "endColumnNumber" : 68
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  } ]
}