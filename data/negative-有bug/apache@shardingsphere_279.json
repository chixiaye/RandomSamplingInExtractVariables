{
  "id" : 279,
  "expression" : "new SqlNode[]{sqlNode}",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-infra/shardingsphere-infra-federation/shardingsphere-infra-federation-optimizer/src/main/java/org/apache/shardingsphere/infra/federation/optimizer/converter/segment/expression/impl/InExpressionConverter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new SqlNode[]{sqlNode}",
    "nodeType" : "ArrayCreation",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 56,
      "startColumnNumber" : 90,
      "endLineNumber" : 56,
      "endColumnNumber" : 112
    },
    "astNodeNumber" : 7,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 56,
        "startColumnNumber" : 48,
        "endLineNumber" : 56,
        "endColumnNumber" : 132
      },
      "nodeContext" : "new SqlBasicCall(SqlStdOperatorTable.NOT,new SqlNode[]{sqlNode},SqlParserPos.ZERO)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,thenExpression]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 56,
        "startColumnNumber" : 36,
        "endLineNumber" : 56,
        "endColumnNumber" : 133
      },
      "nodeContext" : "Optional.of(new SqlBasicCall(SqlStdOperatorTable.NOT,new SqlNode[]{sqlNode},SqlParserPos.ZERO))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 56,
        "startColumnNumber" : 15,
        "endLineNumber" : 56,
        "endColumnNumber" : 156
      },
      "nodeContext" : "expression.isNot() ? Optional.of(new SqlBasicCall(SqlStdOperatorTable.NOT,new SqlNode[]{sqlNode},SqlParserPos.ZERO)) : Optional.of(sqlNode)",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 157
      },
      "nodeContext" : "return expression.isNot() ? Optional.of(new SqlBasicCall(SqlStdOperatorTable.NOT,new SqlNode[]{sqlNode},SqlParserPos.ZERO)) : Optional.of(sqlNode);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 28,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 696,
        "startLineNumber" : 47,
        "startColumnNumber" : 82,
        "endLineNumber" : 57,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (null == expression) {\n    return Optional.empty();\n  }\n  Collection<SqlNode> sqlNodes=new LinkedList<>();\n  ExpressionConverter expressionConverter=new ExpressionConverter();\n  expressionConverter.convertToSQLNode(expression.getLeft()).ifPresent(sqlNodes::add);\n  expressionConverter.convertToSQLNode(expression.getRight()).ifPresent(sqlNodes::add);\n  SqlBasicCall sqlNode=new SqlBasicCall(SqlStdOperatorTable.IN,sqlNodes.toArray(new SqlNode[]{}),SqlParserPos.ZERO);\n  return expression.isNot() ? Optional.of(new SqlBasicCall(SqlStdOperatorTable.NOT,new SqlNode[]{sqlNode},SqlParserPos.ZERO)) : Optional.of(sqlNode);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 788,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 57,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Optional<SqlBasicCall> convertToSQLNode(final InExpression expression){\n  if (null == expression) {\n    return Optional.empty();\n  }\n  Collection<SqlNode> sqlNodes=new LinkedList<>();\n  ExpressionConverter expressionConverter=new ExpressionConverter();\n  expressionConverter.convertToSQLNode(expression.getLeft()).ifPresent(sqlNodes::add);\n  expressionConverter.convertToSQLNode(expression.getRight()).ifPresent(sqlNodes::add);\n  SqlBasicCall sqlNode=new SqlBasicCall(SqlStdOperatorTable.IN,sqlNodes.toArray(new SqlNode[]{}),SqlParserPos.ZERO);\n  return expression.isNot() ? Optional.of(new SqlBasicCall(SqlStdOperatorTable.NOT,new SqlNode[]{sqlNode},SqlParserPos.ZERO)) : Optional.of(sqlNode);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 120,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 157
      },
      "nodeContext" : "return expression.isNot() ? Optional.of(new SqlBasicCall(SqlStdOperatorTable.NOT,new SqlNode[]{sqlNode},SqlParserPos.ZERO)) : Optional.of(sqlNode);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 28,
      "astHeight" : 8
    },
    "tokenLength" : 2,
    "type" : "org.apache.shardingsphere.infra.federation.optimizer.converter.segment.expression.impl.SqlNode[]"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 56,
    "startColumnNumber" : 90,
    "endLineNumber" : 56,
    "endColumnNumber" : 112
  } ],
  "layoutRelationDataList" : [ ]
}