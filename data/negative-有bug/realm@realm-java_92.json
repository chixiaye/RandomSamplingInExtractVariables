{
  "id" : 92,
  "expression" : "new Realm.Transaction.OnSuccess(){\n  @Override public void onSuccess(){\n    assertEquals(0,callbackCounter.getAndIncrement());\n    foregroundRealm.beginTransaction();\n    foregroundRealm.createObject(AllTypes.class);\n    foregroundRealm.commitTransaction();\n  }\n}\n",
  "projectName" : "realm@realm-java",
  "commitID" : "9da3b229a46407f73e2003fb40857cadf062086b",
  "filePath" : "/realm/realm-library/src/androidTest/java/io/realm/RealmAsyncQueryTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new Realm.Transaction.OnSuccess(){\n  @Override public void onSuccess(){\n    assertEquals(0,callbackCounter.getAndIncrement());\n    foregroundRealm.beginTransaction();\n    foregroundRealm.createObject(AllTypes.class);\n    foregroundRealm.commitTransaction();\n  }\n}\n",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 486,
      "startLineNumber" : 428,
      "startColumnNumber" : 11,
      "endLineNumber" : 439,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 37,
    "astHeight" : 9,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 699,
        "startLineNumber" : 423,
        "startColumnNumber" : 8,
        "endLineNumber" : 439,
        "endColumnNumber" : 10
      },
      "nodeContext" : "foregroundRealm.executeTransactionAsync(new Realm.Transaction(){\n  @Override public void execute(  Realm realm){\n    realm.createObject(AllTypes.class);\n  }\n}\n,new Realm.Transaction.OnSuccess(){\n  @Override public void onSuccess(){\n    assertEquals(0,callbackCounter.getAndIncrement());\n    foregroundRealm.beginTransaction();\n    foregroundRealm.createObject(AllTypes.class);\n    foregroundRealm.commitTransaction();\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 64,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 700,
        "startLineNumber" : 423,
        "startColumnNumber" : 8,
        "endLineNumber" : 439,
        "endColumnNumber" : 11
      },
      "nodeContext" : "foregroundRealm.executeTransactionAsync(new Realm.Transaction(){\n  @Override public void execute(  Realm realm){\n    realm.createObject(AllTypes.class);\n  }\n}\n,new Realm.Transaction.OnSuccess(){\n  @Override public void onSuccess(){\n    assertEquals(0,callbackCounter.getAndIncrement());\n    foregroundRealm.beginTransaction();\n    foregroundRealm.createObject(AllTypes.class);\n    foregroundRealm.commitTransaction();\n  }\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 65,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2169,
        "startLineNumber" : 413,
        "startColumnNumber" : 64,
        "endLineNumber" : 464,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final AtomicInteger callbackCounter=new AtomicInteger(0);\n  final Realm foregroundRealm=looperThread.getRealm();\n  TestHelper.replaceRealmThreadExecutor(RealmThreadPoolExecutor.newSingleThreadExecutor());\n  foregroundRealm.setAutoRefresh(false);\n  foregroundRealm.executeTransactionAsync(new Realm.Transaction(){\n    @Override public void execute(    Realm realm){\n      realm.createObject(AllTypes.class);\n    }\n  }\n,new Realm.Transaction.OnSuccess(){\n    @Override public void onSuccess(){\n      assertEquals(0,callbackCounter.getAndIncrement());\n      foregroundRealm.beginTransaction();\n      foregroundRealm.createObject(AllTypes.class);\n      foregroundRealm.commitTransaction();\n    }\n  }\n);\n  foregroundRealm.executeTransactionAsync(new Realm.Transaction(){\n    @Override public void execute(    Realm realm){\n      realm.createObject(AllTypes.class);\n    }\n  }\n,new Realm.Transaction.OnSuccess(){\n    @Override public void onSuccess(){\n      assertEquals(1,callbackCounter.getAndIncrement());\n      looperThread.testComplete();\n    }\n  }\n);\n  TestHelper.resetRealmThreadExecutor();\n  looperThread.postRunnable(new Runnable(){\n    @Override public void run(){\n      foregroundRealm.sharedRealm.refresh();\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 176,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2346,
        "startLineNumber" : 410,
        "startColumnNumber" : 4,
        "endLineNumber" : 464,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test @RunTestInLooperThread public void executeTransactionAsync_callbacksShouldBeClearedBeforeCalling() throws NoSuchFieldException, IllegalAccessException {\n  final AtomicInteger callbackCounter=new AtomicInteger(0);\n  final Realm foregroundRealm=looperThread.getRealm();\n  TestHelper.replaceRealmThreadExecutor(RealmThreadPoolExecutor.newSingleThreadExecutor());\n  foregroundRealm.setAutoRefresh(false);\n  foregroundRealm.executeTransactionAsync(new Realm.Transaction(){\n    @Override public void execute(    Realm realm){\n      realm.createObject(AllTypes.class);\n    }\n  }\n,new Realm.Transaction.OnSuccess(){\n    @Override public void onSuccess(){\n      assertEquals(0,callbackCounter.getAndIncrement());\n      foregroundRealm.beginTransaction();\n      foregroundRealm.createObject(AllTypes.class);\n      foregroundRealm.commitTransaction();\n    }\n  }\n);\n  foregroundRealm.executeTransactionAsync(new Realm.Transaction(){\n    @Override public void execute(    Realm realm){\n      realm.createObject(AllTypes.class);\n    }\n  }\n,new Realm.Transaction.OnSuccess(){\n    @Override public void onSuccess(){\n      assertEquals(1,callbackCounter.getAndIncrement());\n      looperThread.testComplete();\n    }\n  }\n);\n  TestHelper.resetRealmThreadExecutor();\n  looperThread.postRunnable(new Runnable(){\n    @Override public void run(){\n      foregroundRealm.sharedRealm.refresh();\n    }\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 188,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 699,
        "startLineNumber" : 423,
        "startColumnNumber" : 8,
        "endLineNumber" : 439,
        "endColumnNumber" : 10
      },
      "nodeContext" : "foregroundRealm.executeTransactionAsync(new Realm.Transaction(){\n  @Override public void execute(  Realm realm){\n    realm.createObject(AllTypes.class);\n  }\n}\n,new Realm.Transaction.OnSuccess(){\n  @Override public void onSuccess(){\n    assertEquals(0,callbackCounter.getAndIncrement());\n    foregroundRealm.beginTransaction();\n    foregroundRealm.createObject(AllTypes.class);\n    foregroundRealm.commitTransaction();\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 64,
      "astHeight" : 10
    },
    "tokenLength" : 16,
    "type" : ""
  } ],
  "positionList" : [ {
    "charLength" : 486,
    "startLineNumber" : 428,
    "startColumnNumber" : 11,
    "endLineNumber" : 439,
    "endColumnNumber" : 9
  } ],
  "layoutRelationDataList" : [ ]
}