{
  "id" : 417,
  "expression" : "\"http://hosting.example.com.evil.example/user/foo/file.txt\"",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/test/java/com/google/devtools/build/lib/bazel/repository/downloader/HttpConnectorMultiplexerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"http://hosting.example.com.evil.example/user/foo/file.txt\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 59,
      "startLineNumber" : 185,
      "startColumnNumber" : 24,
      "endLineNumber" : 185,
      "endColumnNumber" : 83
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 185,
        "startColumnNumber" : 16,
        "endLineNumber" : 185,
        "endColumnNumber" : 84
      },
      "nodeContext" : "new URL(\"http://hosting.example.com.evil.example/user/foo/file.txt\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 184,
        "startColumnNumber" : 12,
        "endLineNumber" : 185,
        "endColumnNumber" : 85
      },
      "nodeContext" : "headerFunction.apply(new URL(\"http://hosting.example.com.evil.example/user/foo/file.txt\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 183,
        "startColumnNumber" : 4,
        "endLineNumber" : 185,
        "endColumnNumber" : 86
      },
      "nodeContext" : "assertThat(headerFunction.apply(new URL(\"http://hosting.example.com.evil.example/user/foo/file.txt\")))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 215,
        "startLineNumber" : 183,
        "startColumnNumber" : 4,
        "endLineNumber" : 186,
        "endColumnNumber" : 82
      },
      "nodeContext" : "assertThat(headerFunction.apply(new URL(\"http://hosting.example.com.evil.example/user/foo/file.txt\"))).containsExactly(\"Accept-Encoding\",\"gzip\",\"User-Agent\",\"Bazel/testing\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 216,
        "startLineNumber" : 183,
        "startColumnNumber" : 4,
        "endLineNumber" : 186,
        "endColumnNumber" : 83
      },
      "nodeContext" : "assertThat(headerFunction.apply(new URL(\"http://hosting.example.com.evil.example/user/foo/file.txt\"))).containsExactly(\"Accept-Encoding\",\"gzip\",\"User-Agent\",\"Bazel/testing\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2444,
        "startLineNumber" : 151,
        "startColumnNumber" : 63,
        "endLineNumber" : 197,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Map<String,String> baseHeaders=ImmutableMap.of(\"Accept-Encoding\",\"gzip\",\"User-Agent\",\"Bazel/testing\");\n  Map<URI,Map<String,String>> additionalHeaders=ImmutableMap.of(new URI(\"http://hosting.example.com/user/foo/file.txt\"),ImmutableMap.of(\"Authentication\",\"Zm9vOmZvb3NlY3JldA==\"));\n  Function<URL,ImmutableMap<String,String>> headerFunction=HttpConnectorMultiplexer.getHeaderFunction(baseHeaders,additionalHeaders);\n  assertThat(headerFunction.apply(new URL(\"http://example.org/some/path/file.txt\"))).containsExactly(\"Accept-Encoding\",\"gzip\",\"User-Agent\",\"Bazel/testing\");\n  assertThat(headerFunction.apply(new URL(\"http://hosting.example.com/user/foo/file.txt\"))).containsExactly(\"Accept-Encoding\",\"gzip\",\"User-Agent\",\"Bazel/testing\",\"Authentication\",\"Zm9vOmZvb3NlY3JldA==\");\n  assertThat(headerFunction.apply(new URL(\"http://hosting2.example.com/user/foo/file.txt\"))).containsExactly(\"Accept-Encoding\",\"gzip\",\"User-Agent\",\"Bazel/testing\");\n  assertThat(headerFunction.apply(new URL(\"http://sub.hosting.example.com/user/foo/file.txt\"))).containsExactly(\"Accept-Encoding\",\"gzip\",\"User-Agent\",\"Bazel/testing\");\n  assertThat(headerFunction.apply(new URL(\"http://example.com/user/foo/file.txt\"))).containsExactly(\"Accept-Encoding\",\"gzip\",\"User-Agent\",\"Bazel/testing\");\n  assertThat(headerFunction.apply(new URL(\"http://hosting.example.com.evil.example/user/foo/file.txt\"))).containsExactly(\"Accept-Encoding\",\"gzip\",\"User-Agent\",\"Bazel/testing\");\n  Map<String,String> annonAuth=ImmutableMap.of(\"Authentication\",\"YW5vbnltb3VzOmZvb0BleGFtcGxlLm9yZw==\");\n  Function<URL,ImmutableMap<String,String>> combinedHeaders=HttpConnectorMultiplexer.getHeaderFunction(annonAuth,additionalHeaders);\n  assertThat(combinedHeaders.apply(new URL(\"http://hosting.example.com/user/foo/file.txt\"))).containsExactly(\"Authentication\",\"Zm9vOmZvb3NlY3JldA==\");\n  assertThat(combinedHeaders.apply(new URL(\"http://unreleated.example.org/user/foo/file.txt\"))).containsExactly(\"Authentication\",\"YW5vbnltb3VzOmZvb0BleGFtcGxlLm9yZw==\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 226,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2513,
        "startLineNumber" : 150,
        "startColumnNumber" : 2,
        "endLineNumber" : 197,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testHeaderComputationFunction() throws Exception {\n  Map<String,String> baseHeaders=ImmutableMap.of(\"Accept-Encoding\",\"gzip\",\"User-Agent\",\"Bazel/testing\");\n  Map<URI,Map<String,String>> additionalHeaders=ImmutableMap.of(new URI(\"http://hosting.example.com/user/foo/file.txt\"),ImmutableMap.of(\"Authentication\",\"Zm9vOmZvb3NlY3JldA==\"));\n  Function<URL,ImmutableMap<String,String>> headerFunction=HttpConnectorMultiplexer.getHeaderFunction(baseHeaders,additionalHeaders);\n  assertThat(headerFunction.apply(new URL(\"http://example.org/some/path/file.txt\"))).containsExactly(\"Accept-Encoding\",\"gzip\",\"User-Agent\",\"Bazel/testing\");\n  assertThat(headerFunction.apply(new URL(\"http://hosting.example.com/user/foo/file.txt\"))).containsExactly(\"Accept-Encoding\",\"gzip\",\"User-Agent\",\"Bazel/testing\",\"Authentication\",\"Zm9vOmZvb3NlY3JldA==\");\n  assertThat(headerFunction.apply(new URL(\"http://hosting2.example.com/user/foo/file.txt\"))).containsExactly(\"Accept-Encoding\",\"gzip\",\"User-Agent\",\"Bazel/testing\");\n  assertThat(headerFunction.apply(new URL(\"http://sub.hosting.example.com/user/foo/file.txt\"))).containsExactly(\"Accept-Encoding\",\"gzip\",\"User-Agent\",\"Bazel/testing\");\n  assertThat(headerFunction.apply(new URL(\"http://example.com/user/foo/file.txt\"))).containsExactly(\"Accept-Encoding\",\"gzip\",\"User-Agent\",\"Bazel/testing\");\n  assertThat(headerFunction.apply(new URL(\"http://hosting.example.com.evil.example/user/foo/file.txt\"))).containsExactly(\"Accept-Encoding\",\"gzip\",\"User-Agent\",\"Bazel/testing\");\n  Map<String,String> annonAuth=ImmutableMap.of(\"Authentication\",\"YW5vbnltb3VzOmZvb0BleGFtcGxlLm9yZw==\");\n  Function<URL,ImmutableMap<String,String>> combinedHeaders=HttpConnectorMultiplexer.getHeaderFunction(annonAuth,additionalHeaders);\n  assertThat(combinedHeaders.apply(new URL(\"http://hosting.example.com/user/foo/file.txt\"))).containsExactly(\"Authentication\",\"Zm9vOmZvb3NlY3JldA==\");\n  assertThat(combinedHeaders.apply(new URL(\"http://unreleated.example.org/user/foo/file.txt\"))).containsExactly(\"Authentication\",\"YW5vbnltb3VzOmZvb0BleGFtcGxlLm9yZw==\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 234,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 185,
        "startColumnNumber" : 16,
        "endLineNumber" : 185,
        "endColumnNumber" : 84
      },
      "nodeContext" : "new URL(\"http://hosting.example.com.evil.example/user/foo/file.txt\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 7,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 59,
    "startLineNumber" : 185,
    "startColumnNumber" : 24,
    "endLineNumber" : 185,
    "endColumnNumber" : 83
  } ],
  "layoutRelationDataList" : [ ]
}