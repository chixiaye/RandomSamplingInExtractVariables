{
  "id" : 351,
  "expression" : "properties",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/server/src/test/java/org/apache/druid/client/cache/CaffeineCacheTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "properties",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 380,
      "startColumnNumber" : 4,
      "endLineNumber" : 380,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 380,
        "startColumnNumber" : 4,
        "endLineNumber" : 380,
        "endColumnNumber" : 52
      },
      "nodeContext" : "properties.put(keyPrefix + \".expireAfter\",\"10\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 380,
        "startColumnNumber" : 4,
        "endLineNumber" : 380,
        "endColumnNumber" : 53
      },
      "nodeContext" : "properties.put(keyPrefix + \".expireAfter\",\"10\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1431,
        "startLineNumber" : 377,
        "startColumnNumber" : 2,
        "endLineNumber" : 404,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final String keyPrefix=\"cache.config.prefix\";\n  final Properties properties=new Properties();\n  properties.put(keyPrefix + \".expireAfter\",\"10\");\n  properties.put(keyPrefix + \".sizeInBytes\",\"100\");\n  properties.put(keyPrefix + \".cacheExecutorFactory\",\"single_thread\");\n  final Injector injector=Initialization.makeInjectorWithModules(GuiceInjectors.makeStartupInjector(),ImmutableList.of(binder -> {\n    binder.bindConstant().annotatedWith(Names.named(\"serviceName\")).to(\"druid/test\");\n    binder.bindConstant().annotatedWith(Names.named(\"servicePort\")).to(0);\n    binder.bindConstant().annotatedWith(Names.named(\"tlsServicePort\")).to(-1);\n    JsonConfigProvider.bind(binder,keyPrefix,CaffeineCacheConfig.class);\n  }\n));\n  final JsonConfigurator configurator=injector.getInstance(JsonConfigurator.class);\n  final JsonConfigProvider<CaffeineCacheConfig> caffeineCacheConfigJsonConfigProvider=JsonConfigProvider.of(keyPrefix,CaffeineCacheConfig.class);\n  caffeineCacheConfigJsonConfigProvider.inject(properties,configurator);\n  final CaffeineCacheConfig config=caffeineCacheConfigJsonConfigProvider.get().get();\n  Assert.assertEquals(10,config.getExpireAfter());\n  Assert.assertEquals(100,config.getSizeInBytes());\n  Assert.assertNotNull(config.createExecutor());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 177,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1474,
        "startLineNumber" : 375,
        "startColumnNumber" : 2,
        "endLineNumber" : 404,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testFromProperties(){\n  final String keyPrefix=\"cache.config.prefix\";\n  final Properties properties=new Properties();\n  properties.put(keyPrefix + \".expireAfter\",\"10\");\n  properties.put(keyPrefix + \".sizeInBytes\",\"100\");\n  properties.put(keyPrefix + \".cacheExecutorFactory\",\"single_thread\");\n  final Injector injector=Initialization.makeInjectorWithModules(GuiceInjectors.makeStartupInjector(),ImmutableList.of(binder -> {\n    binder.bindConstant().annotatedWith(Names.named(\"serviceName\")).to(\"druid/test\");\n    binder.bindConstant().annotatedWith(Names.named(\"servicePort\")).to(0);\n    binder.bindConstant().annotatedWith(Names.named(\"tlsServicePort\")).to(-1);\n    JsonConfigProvider.bind(binder,keyPrefix,CaffeineCacheConfig.class);\n  }\n));\n  final JsonConfigurator configurator=injector.getInstance(JsonConfigurator.class);\n  final JsonConfigProvider<CaffeineCacheConfig> caffeineCacheConfigJsonConfigProvider=JsonConfigProvider.of(keyPrefix,CaffeineCacheConfig.class);\n  caffeineCacheConfigJsonConfigProvider.inject(properties,configurator);\n  final CaffeineCacheConfig config=caffeineCacheConfigJsonConfigProvider.get().get();\n  Assert.assertEquals(10,config.getExpireAfter());\n  Assert.assertEquals(100,config.getSizeInBytes());\n  Assert.assertNotNull(config.createExecutor());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 183,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 380,
        "startColumnNumber" : 4,
        "endLineNumber" : 380,
        "endColumnNumber" : 53
      },
      "nodeContext" : "properties.put(keyPrefix + \".expireAfter\",\"10\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Properties"
  }, {
    "nodeContext" : "properties",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 381,
      "startColumnNumber" : 4,
      "endLineNumber" : 381,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 381,
        "startColumnNumber" : 4,
        "endLineNumber" : 381,
        "endColumnNumber" : 53
      },
      "nodeContext" : "properties.put(keyPrefix + \".sizeInBytes\",\"100\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 381,
        "startColumnNumber" : 4,
        "endLineNumber" : 381,
        "endColumnNumber" : 54
      },
      "nodeContext" : "properties.put(keyPrefix + \".sizeInBytes\",\"100\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1431,
        "startLineNumber" : 377,
        "startColumnNumber" : 2,
        "endLineNumber" : 404,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final String keyPrefix=\"cache.config.prefix\";\n  final Properties properties=new Properties();\n  properties.put(keyPrefix + \".expireAfter\",\"10\");\n  properties.put(keyPrefix + \".sizeInBytes\",\"100\");\n  properties.put(keyPrefix + \".cacheExecutorFactory\",\"single_thread\");\n  final Injector injector=Initialization.makeInjectorWithModules(GuiceInjectors.makeStartupInjector(),ImmutableList.of(binder -> {\n    binder.bindConstant().annotatedWith(Names.named(\"serviceName\")).to(\"druid/test\");\n    binder.bindConstant().annotatedWith(Names.named(\"servicePort\")).to(0);\n    binder.bindConstant().annotatedWith(Names.named(\"tlsServicePort\")).to(-1);\n    JsonConfigProvider.bind(binder,keyPrefix,CaffeineCacheConfig.class);\n  }\n));\n  final JsonConfigurator configurator=injector.getInstance(JsonConfigurator.class);\n  final JsonConfigProvider<CaffeineCacheConfig> caffeineCacheConfigJsonConfigProvider=JsonConfigProvider.of(keyPrefix,CaffeineCacheConfig.class);\n  caffeineCacheConfigJsonConfigProvider.inject(properties,configurator);\n  final CaffeineCacheConfig config=caffeineCacheConfigJsonConfigProvider.get().get();\n  Assert.assertEquals(10,config.getExpireAfter());\n  Assert.assertEquals(100,config.getSizeInBytes());\n  Assert.assertNotNull(config.createExecutor());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 177,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1474,
        "startLineNumber" : 375,
        "startColumnNumber" : 2,
        "endLineNumber" : 404,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testFromProperties(){\n  final String keyPrefix=\"cache.config.prefix\";\n  final Properties properties=new Properties();\n  properties.put(keyPrefix + \".expireAfter\",\"10\");\n  properties.put(keyPrefix + \".sizeInBytes\",\"100\");\n  properties.put(keyPrefix + \".cacheExecutorFactory\",\"single_thread\");\n  final Injector injector=Initialization.makeInjectorWithModules(GuiceInjectors.makeStartupInjector(),ImmutableList.of(binder -> {\n    binder.bindConstant().annotatedWith(Names.named(\"serviceName\")).to(\"druid/test\");\n    binder.bindConstant().annotatedWith(Names.named(\"servicePort\")).to(0);\n    binder.bindConstant().annotatedWith(Names.named(\"tlsServicePort\")).to(-1);\n    JsonConfigProvider.bind(binder,keyPrefix,CaffeineCacheConfig.class);\n  }\n));\n  final JsonConfigurator configurator=injector.getInstance(JsonConfigurator.class);\n  final JsonConfigProvider<CaffeineCacheConfig> caffeineCacheConfigJsonConfigProvider=JsonConfigProvider.of(keyPrefix,CaffeineCacheConfig.class);\n  caffeineCacheConfigJsonConfigProvider.inject(properties,configurator);\n  final CaffeineCacheConfig config=caffeineCacheConfigJsonConfigProvider.get().get();\n  Assert.assertEquals(10,config.getExpireAfter());\n  Assert.assertEquals(100,config.getSizeInBytes());\n  Assert.assertNotNull(config.createExecutor());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 183,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 381,
        "startColumnNumber" : 4,
        "endLineNumber" : 381,
        "endColumnNumber" : 54
      },
      "nodeContext" : "properties.put(keyPrefix + \".sizeInBytes\",\"100\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Properties"
  }, {
    "nodeContext" : "properties",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 382,
      "startColumnNumber" : 4,
      "endLineNumber" : 382,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 382,
        "startColumnNumber" : 4,
        "endLineNumber" : 382,
        "endColumnNumber" : 72
      },
      "nodeContext" : "properties.put(keyPrefix + \".cacheExecutorFactory\",\"single_thread\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 382,
        "startColumnNumber" : 4,
        "endLineNumber" : 382,
        "endColumnNumber" : 73
      },
      "nodeContext" : "properties.put(keyPrefix + \".cacheExecutorFactory\",\"single_thread\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1431,
        "startLineNumber" : 377,
        "startColumnNumber" : 2,
        "endLineNumber" : 404,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final String keyPrefix=\"cache.config.prefix\";\n  final Properties properties=new Properties();\n  properties.put(keyPrefix + \".expireAfter\",\"10\");\n  properties.put(keyPrefix + \".sizeInBytes\",\"100\");\n  properties.put(keyPrefix + \".cacheExecutorFactory\",\"single_thread\");\n  final Injector injector=Initialization.makeInjectorWithModules(GuiceInjectors.makeStartupInjector(),ImmutableList.of(binder -> {\n    binder.bindConstant().annotatedWith(Names.named(\"serviceName\")).to(\"druid/test\");\n    binder.bindConstant().annotatedWith(Names.named(\"servicePort\")).to(0);\n    binder.bindConstant().annotatedWith(Names.named(\"tlsServicePort\")).to(-1);\n    JsonConfigProvider.bind(binder,keyPrefix,CaffeineCacheConfig.class);\n  }\n));\n  final JsonConfigurator configurator=injector.getInstance(JsonConfigurator.class);\n  final JsonConfigProvider<CaffeineCacheConfig> caffeineCacheConfigJsonConfigProvider=JsonConfigProvider.of(keyPrefix,CaffeineCacheConfig.class);\n  caffeineCacheConfigJsonConfigProvider.inject(properties,configurator);\n  final CaffeineCacheConfig config=caffeineCacheConfigJsonConfigProvider.get().get();\n  Assert.assertEquals(10,config.getExpireAfter());\n  Assert.assertEquals(100,config.getSizeInBytes());\n  Assert.assertNotNull(config.createExecutor());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 177,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1474,
        "startLineNumber" : 375,
        "startColumnNumber" : 2,
        "endLineNumber" : 404,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testFromProperties(){\n  final String keyPrefix=\"cache.config.prefix\";\n  final Properties properties=new Properties();\n  properties.put(keyPrefix + \".expireAfter\",\"10\");\n  properties.put(keyPrefix + \".sizeInBytes\",\"100\");\n  properties.put(keyPrefix + \".cacheExecutorFactory\",\"single_thread\");\n  final Injector injector=Initialization.makeInjectorWithModules(GuiceInjectors.makeStartupInjector(),ImmutableList.of(binder -> {\n    binder.bindConstant().annotatedWith(Names.named(\"serviceName\")).to(\"druid/test\");\n    binder.bindConstant().annotatedWith(Names.named(\"servicePort\")).to(0);\n    binder.bindConstant().annotatedWith(Names.named(\"tlsServicePort\")).to(-1);\n    JsonConfigProvider.bind(binder,keyPrefix,CaffeineCacheConfig.class);\n  }\n));\n  final JsonConfigurator configurator=injector.getInstance(JsonConfigurator.class);\n  final JsonConfigProvider<CaffeineCacheConfig> caffeineCacheConfigJsonConfigProvider=JsonConfigProvider.of(keyPrefix,CaffeineCacheConfig.class);\n  caffeineCacheConfigJsonConfigProvider.inject(properties,configurator);\n  final CaffeineCacheConfig config=caffeineCacheConfigJsonConfigProvider.get().get();\n  Assert.assertEquals(10,config.getExpireAfter());\n  Assert.assertEquals(100,config.getSizeInBytes());\n  Assert.assertNotNull(config.createExecutor());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 183,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 382,
        "startColumnNumber" : 4,
        "endLineNumber" : 382,
        "endColumnNumber" : 73
      },
      "nodeContext" : "properties.put(keyPrefix + \".cacheExecutorFactory\",\"single_thread\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Properties"
  }, {
    "nodeContext" : "properties",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 399,
      "startColumnNumber" : 49,
      "endLineNumber" : 399,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 399,
        "startColumnNumber" : 4,
        "endLineNumber" : 399,
        "endColumnNumber" : 74
      },
      "nodeContext" : "caffeineCacheConfigJsonConfigProvider.inject(properties,configurator)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 399,
        "startColumnNumber" : 4,
        "endLineNumber" : 399,
        "endColumnNumber" : 75
      },
      "nodeContext" : "caffeineCacheConfigJsonConfigProvider.inject(properties,configurator);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1431,
        "startLineNumber" : 377,
        "startColumnNumber" : 2,
        "endLineNumber" : 404,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final String keyPrefix=\"cache.config.prefix\";\n  final Properties properties=new Properties();\n  properties.put(keyPrefix + \".expireAfter\",\"10\");\n  properties.put(keyPrefix + \".sizeInBytes\",\"100\");\n  properties.put(keyPrefix + \".cacheExecutorFactory\",\"single_thread\");\n  final Injector injector=Initialization.makeInjectorWithModules(GuiceInjectors.makeStartupInjector(),ImmutableList.of(binder -> {\n    binder.bindConstant().annotatedWith(Names.named(\"serviceName\")).to(\"druid/test\");\n    binder.bindConstant().annotatedWith(Names.named(\"servicePort\")).to(0);\n    binder.bindConstant().annotatedWith(Names.named(\"tlsServicePort\")).to(-1);\n    JsonConfigProvider.bind(binder,keyPrefix,CaffeineCacheConfig.class);\n  }\n));\n  final JsonConfigurator configurator=injector.getInstance(JsonConfigurator.class);\n  final JsonConfigProvider<CaffeineCacheConfig> caffeineCacheConfigJsonConfigProvider=JsonConfigProvider.of(keyPrefix,CaffeineCacheConfig.class);\n  caffeineCacheConfigJsonConfigProvider.inject(properties,configurator);\n  final CaffeineCacheConfig config=caffeineCacheConfigJsonConfigProvider.get().get();\n  Assert.assertEquals(10,config.getExpireAfter());\n  Assert.assertEquals(100,config.getSizeInBytes());\n  Assert.assertNotNull(config.createExecutor());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 177,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1474,
        "startLineNumber" : 375,
        "startColumnNumber" : 2,
        "endLineNumber" : 404,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testFromProperties(){\n  final String keyPrefix=\"cache.config.prefix\";\n  final Properties properties=new Properties();\n  properties.put(keyPrefix + \".expireAfter\",\"10\");\n  properties.put(keyPrefix + \".sizeInBytes\",\"100\");\n  properties.put(keyPrefix + \".cacheExecutorFactory\",\"single_thread\");\n  final Injector injector=Initialization.makeInjectorWithModules(GuiceInjectors.makeStartupInjector(),ImmutableList.of(binder -> {\n    binder.bindConstant().annotatedWith(Names.named(\"serviceName\")).to(\"druid/test\");\n    binder.bindConstant().annotatedWith(Names.named(\"servicePort\")).to(0);\n    binder.bindConstant().annotatedWith(Names.named(\"tlsServicePort\")).to(-1);\n    JsonConfigProvider.bind(binder,keyPrefix,CaffeineCacheConfig.class);\n  }\n));\n  final JsonConfigurator configurator=injector.getInstance(JsonConfigurator.class);\n  final JsonConfigProvider<CaffeineCacheConfig> caffeineCacheConfigJsonConfigProvider=JsonConfigProvider.of(keyPrefix,CaffeineCacheConfig.class);\n  caffeineCacheConfigJsonConfigProvider.inject(properties,configurator);\n  final CaffeineCacheConfig config=caffeineCacheConfigJsonConfigProvider.get().get();\n  Assert.assertEquals(10,config.getExpireAfter());\n  Assert.assertEquals(100,config.getSizeInBytes());\n  Assert.assertNotNull(config.createExecutor());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 183,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 399,
        "startColumnNumber" : 4,
        "endLineNumber" : 399,
        "endColumnNumber" : 75
      },
      "nodeContext" : "caffeineCacheConfigJsonConfigProvider.inject(properties,configurator);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Properties"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 380,
    "startColumnNumber" : 4,
    "endLineNumber" : 380,
    "endColumnNumber" : 14
  }, {
    "charLength" : 10,
    "startLineNumber" : 381,
    "startColumnNumber" : 4,
    "endLineNumber" : 381,
    "endColumnNumber" : 14
  }, {
    "charLength" : 10,
    "startLineNumber" : 382,
    "startColumnNumber" : 4,
    "endLineNumber" : 382,
    "endColumnNumber" : 14
  }, {
    "charLength" : 10,
    "startLineNumber" : 399,
    "startColumnNumber" : 49,
    "endLineNumber" : 399,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  } ]
}