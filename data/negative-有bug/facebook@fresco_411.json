{
  "id" : 411,
  "expression" : "(CloseableAnimatedImage)mAnimatedImageFactory.decodeWebP(encodedImage,imageDecodeOptions,DEFAULT_BITMAP_CONFIG)",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/animated-webp/src/test/java/com/facebook/imagepipeline/animated/factory/AnimatedImageFactoryWebPImplTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(CloseableAnimatedImage)mAnimatedImageFactory.decodeWebP(encodedImage,imageDecodeOptions,DEFAULT_BITMAP_CONFIG)",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 143,
      "startLineNumber" : 237,
      "startColumnNumber" : 8,
      "endLineNumber" : 239,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 9,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 236,
        "startColumnNumber" : 27,
        "endLineNumber" : 239,
        "endColumnNumber" : 72
      },
      "nodeContext" : "closeableImage=(CloseableAnimatedImage)mAnimatedImageFactory.decodeWebP(encodedImage,imageDecodeOptions,DEFAULT_BITMAP_CONFIG)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 192,
        "startLineNumber" : 236,
        "startColumnNumber" : 4,
        "endLineNumber" : 239,
        "endColumnNumber" : 73
      },
      "nodeContext" : "CloseableAnimatedImage closeableImage=(CloseableAnimatedImage)mAnimatedImageFactory.decodeWebP(encodedImage,imageDecodeOptions,DEFAULT_BITMAP_CONFIG);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1881,
        "startLineNumber" : 216,
        "startColumnNumber" : 96,
        "endLineNumber" : 254,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final AnimatedDrawableBackend mockAnimatedDrawableBackend=createAnimatedDrawableBackendMock(1);\n  when(mMockAnimatedDrawableBackendProvider.get(any(AnimatedImageResult.class),isNull(Rect.class))).thenReturn(mockAnimatedDrawableBackend);\n  when(mMockBitmapFactory.createBitmapInternal(50,50,DEFAULT_BITMAP_CONFIG)).thenReturn(CloseableReference.of(mockBitmap,FAKE_BITMAP_RESOURCE_RELEASER));\n  AnimatedImageCompositor mockCompositor=mock(AnimatedImageCompositor.class);\n  PowerMockito.whenNew(AnimatedImageCompositor.class).withAnyArguments().thenReturn(mockCompositor);\n  ImageDecodeOptions imageDecodeOptions=ImageDecodeOptions.newBuilder().setDecodePreviewFrame(true).build();\n  EncodedImage encodedImage=new EncodedImage(CloseableReference.of(byteBuffer,FAKE_RESOURCE_RELEASER));\n  encodedImage.setImageFormat(ImageFormat.UNKNOWN);\n  CloseableAnimatedImage closeableImage=(CloseableAnimatedImage)mAnimatedImageFactory.decodeWebP(encodedImage,imageDecodeOptions,DEFAULT_BITMAP_CONFIG);\n  AnimatedImageResult imageResult=closeableImage.getImageResult();\n  assertSame(mockWebPImage,imageResult.getImage());\n  assertNotNull(imageResult.getPreviewBitmap());\n  assertFalse(imageResult.hasDecodedFrame(0));\n  verify(mMockAnimatedDrawableBackendProvider).get(any(AnimatedImageResult.class),isNull(Rect.class));\n  verifyNoMoreInteractions(mMockAnimatedDrawableBackendProvider);\n  verify(mMockBitmapFactory).createBitmapInternal(50,50,DEFAULT_BITMAP_CONFIG);\n  verifyNoMoreInteractions(mMockBitmapFactory);\n  verify(mockCompositor).renderFrame(0,mockBitmap);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 183,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2019,
        "startLineNumber" : 215,
        "startColumnNumber" : 2,
        "endLineNumber" : 254,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void testCreateWithPreviewBitmap(WebPImage mockWebPImage,PooledByteBuffer byteBuffer,Bitmap mockBitmap) throws Exception {\n  final AnimatedDrawableBackend mockAnimatedDrawableBackend=createAnimatedDrawableBackendMock(1);\n  when(mMockAnimatedDrawableBackendProvider.get(any(AnimatedImageResult.class),isNull(Rect.class))).thenReturn(mockAnimatedDrawableBackend);\n  when(mMockBitmapFactory.createBitmapInternal(50,50,DEFAULT_BITMAP_CONFIG)).thenReturn(CloseableReference.of(mockBitmap,FAKE_BITMAP_RESOURCE_RELEASER));\n  AnimatedImageCompositor mockCompositor=mock(AnimatedImageCompositor.class);\n  PowerMockito.whenNew(AnimatedImageCompositor.class).withAnyArguments().thenReturn(mockCompositor);\n  ImageDecodeOptions imageDecodeOptions=ImageDecodeOptions.newBuilder().setDecodePreviewFrame(true).build();\n  EncodedImage encodedImage=new EncodedImage(CloseableReference.of(byteBuffer,FAKE_RESOURCE_RELEASER));\n  encodedImage.setImageFormat(ImageFormat.UNKNOWN);\n  CloseableAnimatedImage closeableImage=(CloseableAnimatedImage)mAnimatedImageFactory.decodeWebP(encodedImage,imageDecodeOptions,DEFAULT_BITMAP_CONFIG);\n  AnimatedImageResult imageResult=closeableImage.getImageResult();\n  assertSame(mockWebPImage,imageResult.getImage());\n  assertNotNull(imageResult.getPreviewBitmap());\n  assertFalse(imageResult.hasDecodedFrame(0));\n  verify(mMockAnimatedDrawableBackendProvider).get(any(AnimatedImageResult.class),isNull(Rect.class));\n  verifyNoMoreInteractions(mMockAnimatedDrawableBackendProvider);\n  verify(mMockBitmapFactory).createBitmapInternal(50,50,DEFAULT_BITMAP_CONFIG);\n  verifyNoMoreInteractions(mMockBitmapFactory);\n  verify(mockCompositor).renderFrame(0,mockBitmap);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 201,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 236,
        "startColumnNumber" : 27,
        "endLineNumber" : 239,
        "endColumnNumber" : 72
      },
      "nodeContext" : "closeableImage=(CloseableAnimatedImage)mAnimatedImageFactory.decodeWebP(encodedImage,imageDecodeOptions,DEFAULT_BITMAP_CONFIG)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 8,
    "type" : "com.facebook.imagepipeline.image.CloseableAnimatedImage"
  } ],
  "positionList" : [ {
    "charLength" : 143,
    "startLineNumber" : 237,
    "startColumnNumber" : 8,
    "endLineNumber" : 239,
    "endColumnNumber" : 72
  } ],
  "layoutRelationDataList" : [ ]
}