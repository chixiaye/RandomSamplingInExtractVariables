{
  "id" : 314,
  "expression" : "\"\\n对照表：\"",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "7815611a659da4cc8d5443f5ef4c10ca0d937582",
  "filePath" : "/mybatis-plus-generate/src/test/java/com/baomidou/mybatisplus/test/generator/GeneratorTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"\\n对照表：\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 25,
      "startColumnNumber" : 20,
      "endLineNumber" : 25,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 25,
        "startColumnNumber" : 8,
        "endLineNumber" : 25,
        "endColumnNumber" : 29
      },
      "nodeContext" : "help.append(\"\\n对照表：\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 25,
        "startColumnNumber" : 8,
        "endLineNumber" : 25,
        "endColumnNumber" : 30
      },
      "nodeContext" : "help.append(\"\\n对照表：\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 576,
        "startLineNumber" : 21,
        "startColumnNumber" : 32,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Scanner scanner=new Scanner(System.in);\n  StringBuilder help=new StringBuilder();\n  help.append(\" ！！代码生成, 输入 0 表示使用 Velocity 引擎 ！！\");\n  help.append(\"\\n对照表：\");\n  help.append(\"\\n0 = Velocity 引擎\");\n  help.append(\"\\n1 = Freemarker 引擎\");\n  help.append(\"\\n请输入：\");\n  System.out.println(help.toString());\n  int slt=0;\n  if (scanner.hasNext()) {\n    String ipt=scanner.next();\n    if (\"1\".equals(ipt)) {\n      slt=1;\n    }\n  }\n  return slt;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 658,
        "startLineNumber" : 16,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * <p> 读取控制台内容 </p>\n */\npublic static int scanner(){\n  Scanner scanner=new Scanner(System.in);\n  StringBuilder help=new StringBuilder();\n  help.append(\" ！！代码生成, 输入 0 表示使用 Velocity 引擎 ！！\");\n  help.append(\"\\n对照表：\");\n  help.append(\"\\n0 = Velocity 引擎\");\n  help.append(\"\\n1 = Freemarker 引擎\");\n  help.append(\"\\n请输入：\");\n  System.out.println(help.toString());\n  int slt=0;\n  if (scanner.hasNext()) {\n    String ipt=scanner.next();\n    if (\"1\".equals(ipt)) {\n      slt=1;\n    }\n  }\n  return slt;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 90,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 25,
        "startColumnNumber" : 8,
        "endLineNumber" : 25,
        "endColumnNumber" : 30
      },
      "nodeContext" : "help.append(\"\\n对照表：\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 25,
    "startColumnNumber" : 20,
    "endLineNumber" : 25,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ ]
}