{
  "id" : 390,
  "expression" : "new StringLoader.StreamFactory()",
  "projectName" : "bumptech@glide",
  "commitID" : "7d9c28ec2763e973775abd5c3e3c971728a48a56",
  "filePath" : "/library/src/main/java/com/bumptech/glide/RegistryFactory.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new StringLoader.StreamFactory()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 32,
      "startLineNumber" : 288,
      "startColumnNumber" : 49,
      "endLineNumber" : 288,
      "endColumnNumber" : 81
    },
    "astNodeNumber" : 5,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 950,
        "startLineNumber" : 277,
        "startColumnNumber" : 4,
        "endLineNumber" : 288,
        "endColumnNumber" : 82
      },
      "nodeContext" : "registry.append(int.class,InputStream.class,resourceLoaderStreamFactory).append(int.class,ParcelFileDescriptor.class,resourceLoaderFileDescriptorFactory).append(Integer.class,InputStream.class,resourceLoaderStreamFactory).append(Integer.class,ParcelFileDescriptor.class,resourceLoaderFileDescriptorFactory).append(Integer.class,Uri.class,resourceLoaderUriFactory).append(int.class,AssetFileDescriptor.class,resourceLoaderAssetFileDescriptorFactory).append(Integer.class,AssetFileDescriptor.class,resourceLoaderAssetFileDescriptorFactory).append(int.class,Uri.class,resourceLoaderUriFactory).append(String.class,InputStream.class,new DataUrlLoader.StreamFactory<String>()).append(Uri.class,InputStream.class,new DataUrlLoader.StreamFactory<Uri>()).append(String.class,InputStream.class,new StringLoader.StreamFactory())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 114,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1051,
        "startLineNumber" : 277,
        "startColumnNumber" : 4,
        "endLineNumber" : 289,
        "endColumnNumber" : 99
      },
      "nodeContext" : "registry.append(int.class,InputStream.class,resourceLoaderStreamFactory).append(int.class,ParcelFileDescriptor.class,resourceLoaderFileDescriptorFactory).append(Integer.class,InputStream.class,resourceLoaderStreamFactory).append(Integer.class,ParcelFileDescriptor.class,resourceLoaderFileDescriptorFactory).append(Integer.class,Uri.class,resourceLoaderUriFactory).append(int.class,AssetFileDescriptor.class,resourceLoaderAssetFileDescriptorFactory).append(Integer.class,AssetFileDescriptor.class,resourceLoaderAssetFileDescriptorFactory).append(int.class,Uri.class,resourceLoaderUriFactory).append(String.class,InputStream.class,new DataUrlLoader.StreamFactory<String>()).append(Uri.class,InputStream.class,new DataUrlLoader.StreamFactory<Uri>()).append(String.class,InputStream.class,new StringLoader.StreamFactory()).append(String.class,ParcelFileDescriptor.class,new StringLoader.FileDescriptorFactory())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 127,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1170,
        "startLineNumber" : 277,
        "startColumnNumber" : 4,
        "endLineNumber" : 291,
        "endColumnNumber" : 99
      },
      "nodeContext" : "registry.append(int.class,InputStream.class,resourceLoaderStreamFactory).append(int.class,ParcelFileDescriptor.class,resourceLoaderFileDescriptorFactory).append(Integer.class,InputStream.class,resourceLoaderStreamFactory).append(Integer.class,ParcelFileDescriptor.class,resourceLoaderFileDescriptorFactory).append(Integer.class,Uri.class,resourceLoaderUriFactory).append(int.class,AssetFileDescriptor.class,resourceLoaderAssetFileDescriptorFactory).append(Integer.class,AssetFileDescriptor.class,resourceLoaderAssetFileDescriptorFactory).append(int.class,Uri.class,resourceLoaderUriFactory).append(String.class,InputStream.class,new DataUrlLoader.StreamFactory<String>()).append(Uri.class,InputStream.class,new DataUrlLoader.StreamFactory<Uri>()).append(String.class,InputStream.class,new StringLoader.StreamFactory()).append(String.class,ParcelFileDescriptor.class,new StringLoader.FileDescriptorFactory()).append(String.class,AssetFileDescriptor.class,new StringLoader.AssetFileDescriptorFactory())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 140,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1272,
        "startLineNumber" : 277,
        "startColumnNumber" : 4,
        "endLineNumber" : 292,
        "endColumnNumber" : 100
      },
      "nodeContext" : "registry.append(int.class,InputStream.class,resourceLoaderStreamFactory).append(int.class,ParcelFileDescriptor.class,resourceLoaderFileDescriptorFactory).append(Integer.class,InputStream.class,resourceLoaderStreamFactory).append(Integer.class,ParcelFileDescriptor.class,resourceLoaderFileDescriptorFactory).append(Integer.class,Uri.class,resourceLoaderUriFactory).append(int.class,AssetFileDescriptor.class,resourceLoaderAssetFileDescriptorFactory).append(Integer.class,AssetFileDescriptor.class,resourceLoaderAssetFileDescriptorFactory).append(int.class,Uri.class,resourceLoaderUriFactory).append(String.class,InputStream.class,new DataUrlLoader.StreamFactory<String>()).append(Uri.class,InputStream.class,new DataUrlLoader.StreamFactory<Uri>()).append(String.class,InputStream.class,new StringLoader.StreamFactory()).append(String.class,ParcelFileDescriptor.class,new StringLoader.FileDescriptorFactory()).append(String.class,AssetFileDescriptor.class,new StringLoader.AssetFileDescriptorFactory()).append(Uri.class,InputStream.class,new AssetUriLoader.StreamFactory(context.getAssets()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 156,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1430,
        "startLineNumber" : 277,
        "startColumnNumber" : 4,
        "endLineNumber" : 296,
        "endColumnNumber" : 74
      },
      "nodeContext" : "registry.append(int.class,InputStream.class,resourceLoaderStreamFactory).append(int.class,ParcelFileDescriptor.class,resourceLoaderFileDescriptorFactory).append(Integer.class,InputStream.class,resourceLoaderStreamFactory).append(Integer.class,ParcelFileDescriptor.class,resourceLoaderFileDescriptorFactory).append(Integer.class,Uri.class,resourceLoaderUriFactory).append(int.class,AssetFileDescriptor.class,resourceLoaderAssetFileDescriptorFactory).append(Integer.class,AssetFileDescriptor.class,resourceLoaderAssetFileDescriptorFactory).append(int.class,Uri.class,resourceLoaderUriFactory).append(String.class,InputStream.class,new DataUrlLoader.StreamFactory<String>()).append(Uri.class,InputStream.class,new DataUrlLoader.StreamFactory<Uri>()).append(String.class,InputStream.class,new StringLoader.StreamFactory()).append(String.class,ParcelFileDescriptor.class,new StringLoader.FileDescriptorFactory()).append(String.class,AssetFileDescriptor.class,new StringLoader.AssetFileDescriptorFactory()).append(Uri.class,InputStream.class,new AssetUriLoader.StreamFactory(context.getAssets())).append(Uri.class,AssetFileDescriptor.class,new AssetUriLoader.FileDescriptorFactory(context.getAssets()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 172,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 1526,
        "startLineNumber" : 277,
        "startColumnNumber" : 4,
        "endLineNumber" : 297,
        "endColumnNumber" : 94
      },
      "nodeContext" : "registry.append(int.class,InputStream.class,resourceLoaderStreamFactory).append(int.class,ParcelFileDescriptor.class,resourceLoaderFileDescriptorFactory).append(Integer.class,InputStream.class,resourceLoaderStreamFactory).append(Integer.class,ParcelFileDescriptor.class,resourceLoaderFileDescriptorFactory).append(Integer.class,Uri.class,resourceLoaderUriFactory).append(int.class,AssetFileDescriptor.class,resourceLoaderAssetFileDescriptorFactory).append(Integer.class,AssetFileDescriptor.class,resourceLoaderAssetFileDescriptorFactory).append(int.class,Uri.class,resourceLoaderUriFactory).append(String.class,InputStream.class,new DataUrlLoader.StreamFactory<String>()).append(Uri.class,InputStream.class,new DataUrlLoader.StreamFactory<Uri>()).append(String.class,InputStream.class,new StringLoader.StreamFactory()).append(String.class,ParcelFileDescriptor.class,new StringLoader.FileDescriptorFactory()).append(String.class,AssetFileDescriptor.class,new StringLoader.AssetFileDescriptorFactory()).append(Uri.class,InputStream.class,new AssetUriLoader.StreamFactory(context.getAssets())).append(Uri.class,AssetFileDescriptor.class,new AssetUriLoader.FileDescriptorFactory(context.getAssets())).append(Uri.class,InputStream.class,new MediaStoreImageThumbLoader.Factory(context))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 186,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 1622,
        "startLineNumber" : 277,
        "startColumnNumber" : 4,
        "endLineNumber" : 298,
        "endColumnNumber" : 94
      },
      "nodeContext" : "registry.append(int.class,InputStream.class,resourceLoaderStreamFactory).append(int.class,ParcelFileDescriptor.class,resourceLoaderFileDescriptorFactory).append(Integer.class,InputStream.class,resourceLoaderStreamFactory).append(Integer.class,ParcelFileDescriptor.class,resourceLoaderFileDescriptorFactory).append(Integer.class,Uri.class,resourceLoaderUriFactory).append(int.class,AssetFileDescriptor.class,resourceLoaderAssetFileDescriptorFactory).append(Integer.class,AssetFileDescriptor.class,resourceLoaderAssetFileDescriptorFactory).append(int.class,Uri.class,resourceLoaderUriFactory).append(String.class,InputStream.class,new DataUrlLoader.StreamFactory<String>()).append(Uri.class,InputStream.class,new DataUrlLoader.StreamFactory<Uri>()).append(String.class,InputStream.class,new StringLoader.StreamFactory()).append(String.class,ParcelFileDescriptor.class,new StringLoader.FileDescriptorFactory()).append(String.class,AssetFileDescriptor.class,new StringLoader.AssetFileDescriptorFactory()).append(Uri.class,InputStream.class,new AssetUriLoader.StreamFactory(context.getAssets())).append(Uri.class,AssetFileDescriptor.class,new AssetUriLoader.FileDescriptorFactory(context.getAssets())).append(Uri.class,InputStream.class,new MediaStoreImageThumbLoader.Factory(context)).append(Uri.class,InputStream.class,new MediaStoreVideoThumbLoader.Factory(context))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 200,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1623,
        "startLineNumber" : 277,
        "startColumnNumber" : 4,
        "endLineNumber" : 298,
        "endColumnNumber" : 95
      },
      "nodeContext" : "registry.append(int.class,InputStream.class,resourceLoaderStreamFactory).append(int.class,ParcelFileDescriptor.class,resourceLoaderFileDescriptorFactory).append(Integer.class,InputStream.class,resourceLoaderStreamFactory).append(Integer.class,ParcelFileDescriptor.class,resourceLoaderFileDescriptorFactory).append(Integer.class,Uri.class,resourceLoaderUriFactory).append(int.class,AssetFileDescriptor.class,resourceLoaderAssetFileDescriptorFactory).append(Integer.class,AssetFileDescriptor.class,resourceLoaderAssetFileDescriptorFactory).append(int.class,Uri.class,resourceLoaderUriFactory).append(String.class,InputStream.class,new DataUrlLoader.StreamFactory<String>()).append(Uri.class,InputStream.class,new DataUrlLoader.StreamFactory<Uri>()).append(String.class,InputStream.class,new StringLoader.StreamFactory()).append(String.class,ParcelFileDescriptor.class,new StringLoader.FileDescriptorFactory()).append(String.class,AssetFileDescriptor.class,new StringLoader.AssetFileDescriptorFactory()).append(Uri.class,InputStream.class,new AssetUriLoader.StreamFactory(context.getAssets())).append(Uri.class,AssetFileDescriptor.class,new AssetUriLoader.FileDescriptorFactory(context.getAssets())).append(Uri.class,InputStream.class,new MediaStoreImageThumbLoader.Factory(context)).append(Uri.class,InputStream.class,new MediaStoreVideoThumbLoader.Factory(context));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 201,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 10858,
        "startLineNumber" : 134,
        "startColumnNumber" : 36,
        "endLineNumber" : 345,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  registry.register(new DefaultImageHeaderParser());\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O_MR1) {\n    registry.register(new ExifInterfaceImageHeaderParser());\n  }\n  final Resources resources=context.getResources();\n  List<ImageHeaderParser> imageHeaderParsers=registry.getImageHeaderParsers();\n  ByteBufferGifDecoder byteBufferGifDecoder=new ByteBufferGifDecoder(context,imageHeaderParsers,bitmapPool,arrayPool);\n  ResourceDecoder<ParcelFileDescriptor,Bitmap> parcelFileDescriptorVideoDecoder=VideoDecoder.parcel(bitmapPool);\n  Downsampler downsampler=new Downsampler(registry.getImageHeaderParsers(),resources.getDisplayMetrics(),bitmapPool,arrayPool);\n  ResourceDecoder<ByteBuffer,Bitmap> byteBufferBitmapDecoder;\n  ResourceDecoder<InputStream,Bitmap> streamBitmapDecoder;\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P && experiments.isEnabled(EnableImageDecoderForBitmaps.class)) {\n    streamBitmapDecoder=new InputStreamBitmapImageDecoderResourceDecoder();\n    byteBufferBitmapDecoder=new ByteBufferBitmapImageDecoderResourceDecoder();\n  }\n else {\n    byteBufferBitmapDecoder=new ByteBufferBitmapDecoder(downsampler);\n    streamBitmapDecoder=new StreamBitmapDecoder(downsampler,arrayPool);\n  }\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P) {\n    registry.append(Registry.BUCKET_ANIMATION,InputStream.class,Drawable.class,AnimatedWebpDecoder.streamDecoder(imageHeaderParsers,arrayPool));\n    registry.append(Registry.BUCKET_ANIMATION,ByteBuffer.class,Drawable.class,AnimatedWebpDecoder.byteBufferDecoder(imageHeaderParsers,arrayPool));\n  }\n  ResourceDrawableDecoder resourceDrawableDecoder=new ResourceDrawableDecoder(context);\n  ResourceLoader.StreamFactory resourceLoaderStreamFactory=new ResourceLoader.StreamFactory(resources);\n  ResourceLoader.UriFactory resourceLoaderUriFactory=new ResourceLoader.UriFactory(resources);\n  ResourceLoader.FileDescriptorFactory resourceLoaderFileDescriptorFactory=new ResourceLoader.FileDescriptorFactory(resources);\n  ResourceLoader.AssetFileDescriptorFactory resourceLoaderAssetFileDescriptorFactory=new ResourceLoader.AssetFileDescriptorFactory(resources);\n  BitmapEncoder bitmapEncoder=new BitmapEncoder(arrayPool);\n  BitmapBytesTranscoder bitmapBytesTranscoder=new BitmapBytesTranscoder();\n  GifDrawableBytesTranscoder gifDrawableBytesTranscoder=new GifDrawableBytesTranscoder();\n  ContentResolver contentResolver=context.getContentResolver();\n  registry.append(ByteBuffer.class,new ByteBufferEncoder()).append(InputStream.class,new StreamEncoder(arrayPool)).append(Registry.BUCKET_BITMAP,ByteBuffer.class,Bitmap.class,byteBufferBitmapDecoder).append(Registry.BUCKET_BITMAP,InputStream.class,Bitmap.class,streamBitmapDecoder);\n  if (ParcelFileDescriptorRewinder.isSupported()) {\n    registry.append(Registry.BUCKET_BITMAP,ParcelFileDescriptor.class,Bitmap.class,new ParcelFileDescriptorBitmapDecoder(downsampler));\n  }\n  registry.append(Registry.BUCKET_BITMAP,ParcelFileDescriptor.class,Bitmap.class,parcelFileDescriptorVideoDecoder).append(Registry.BUCKET_BITMAP,AssetFileDescriptor.class,Bitmap.class,VideoDecoder.asset(bitmapPool)).append(Bitmap.class,Bitmap.class,UnitModelLoader.Factory.<Bitmap>getInstance()).append(Registry.BUCKET_BITMAP,Bitmap.class,Bitmap.class,new UnitBitmapDecoder()).append(Bitmap.class,bitmapEncoder).append(Registry.BUCKET_BITMAP_DRAWABLE,ByteBuffer.class,BitmapDrawable.class,new BitmapDrawableDecoder<>(resources,byteBufferBitmapDecoder)).append(Registry.BUCKET_BITMAP_DRAWABLE,InputStream.class,BitmapDrawable.class,new BitmapDrawableDecoder<>(resources,streamBitmapDecoder)).append(Registry.BUCKET_BITMAP_DRAWABLE,ParcelFileDescriptor.class,BitmapDrawable.class,new BitmapDrawableDecoder<>(resources,parcelFileDescriptorVideoDecoder)).append(BitmapDrawable.class,new BitmapDrawableEncoder(bitmapPool,bitmapEncoder)).append(Registry.BUCKET_ANIMATION,InputStream.class,GifDrawable.class,new StreamGifDecoder(imageHeaderParsers,byteBufferGifDecoder,arrayPool)).append(Registry.BUCKET_ANIMATION,ByteBuffer.class,GifDrawable.class,byteBufferGifDecoder).append(GifDrawable.class,new GifDrawableEncoder()).append(GifDecoder.class,GifDecoder.class,UnitModelLoader.Factory.<GifDecoder>getInstance()).append(Registry.BUCKET_BITMAP,GifDecoder.class,Bitmap.class,new GifFrameResourceDecoder(bitmapPool)).append(Uri.class,Drawable.class,resourceDrawableDecoder).append(Uri.class,Bitmap.class,new ResourceBitmapDecoder(resourceDrawableDecoder,bitmapPool)).register(new ByteBufferRewinder.Factory()).append(File.class,ByteBuffer.class,new ByteBufferFileLoader.Factory()).append(File.class,InputStream.class,new FileLoader.StreamFactory()).append(File.class,File.class,new FileDecoder()).append(File.class,ParcelFileDescriptor.class,new FileLoader.FileDescriptorFactory()).append(File.class,File.class,UnitModelLoader.Factory.<File>getInstance()).register(new InputStreamRewinder.Factory(arrayPool));\n  if (ParcelFileDescriptorRewinder.isSupported()) {\n    registry.register(new ParcelFileDescriptorRewinder.Factory());\n  }\n  registry.append(int.class,InputStream.class,resourceLoaderStreamFactory).append(int.class,ParcelFileDescriptor.class,resourceLoaderFileDescriptorFactory).append(Integer.class,InputStream.class,resourceLoaderStreamFactory).append(Integer.class,ParcelFileDescriptor.class,resourceLoaderFileDescriptorFactory).append(Integer.class,Uri.class,resourceLoaderUriFactory).append(int.class,AssetFileDescriptor.class,resourceLoaderAssetFileDescriptorFactory).append(Integer.class,AssetFileDescriptor.class,resourceLoaderAssetFileDescriptorFactory).append(int.class,Uri.class,resourceLoaderUriFactory).append(String.class,InputStream.class,new DataUrlLoader.StreamFactory<String>()).append(Uri.class,InputStream.class,new DataUrlLoader.StreamFactory<Uri>()).append(String.class,InputStream.class,new StringLoader.StreamFactory()).append(String.class,ParcelFileDescriptor.class,new StringLoader.FileDescriptorFactory()).append(String.class,AssetFileDescriptor.class,new StringLoader.AssetFileDescriptorFactory()).append(Uri.class,InputStream.class,new AssetUriLoader.StreamFactory(context.getAssets())).append(Uri.class,AssetFileDescriptor.class,new AssetUriLoader.FileDescriptorFactory(context.getAssets())).append(Uri.class,InputStream.class,new MediaStoreImageThumbLoader.Factory(context)).append(Uri.class,InputStream.class,new MediaStoreVideoThumbLoader.Factory(context));\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {\n    registry.append(Uri.class,InputStream.class,new QMediaStoreUriLoader.InputStreamFactory(context));\n    registry.append(Uri.class,ParcelFileDescriptor.class,new QMediaStoreUriLoader.FileDescriptorFactory(context));\n  }\n  registry.append(Uri.class,InputStream.class,new UriLoader.StreamFactory(contentResolver)).append(Uri.class,ParcelFileDescriptor.class,new UriLoader.FileDescriptorFactory(contentResolver)).append(Uri.class,AssetFileDescriptor.class,new UriLoader.AssetFileDescriptorFactory(contentResolver)).append(Uri.class,InputStream.class,new UrlUriLoader.StreamFactory()).append(URL.class,InputStream.class,new UrlLoader.StreamFactory()).append(Uri.class,File.class,new MediaStoreFileLoader.Factory(context)).append(GlideUrl.class,InputStream.class,new HttpGlideUrlLoader.Factory()).append(byte[].class,ByteBuffer.class,new ByteArrayLoader.ByteBufferFactory()).append(byte[].class,InputStream.class,new ByteArrayLoader.StreamFactory()).append(Uri.class,Uri.class,UnitModelLoader.Factory.<Uri>getInstance()).append(Drawable.class,Drawable.class,UnitModelLoader.Factory.<Drawable>getInstance()).append(Drawable.class,Drawable.class,new UnitDrawableDecoder()).register(Bitmap.class,BitmapDrawable.class,new BitmapDrawableTranscoder(resources)).register(Bitmap.class,byte[].class,bitmapBytesTranscoder).register(Drawable.class,byte[].class,new DrawableBytesTranscoder(bitmapPool,bitmapBytesTranscoder,gifDrawableBytesTranscoder)).register(GifDrawable.class,byte[].class,gifDrawableBytesTranscoder);\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n    ResourceDecoder<ByteBuffer,Bitmap> byteBufferVideoDecoder=VideoDecoder.byteBuffer(bitmapPool);\n    registry.append(ByteBuffer.class,Bitmap.class,byteBufferVideoDecoder);\n    registry.append(ByteBuffer.class,BitmapDrawable.class,new BitmapDrawableDecoder<>(resources,byteBufferVideoDecoder));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1187,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 11043,
        "startLineNumber" : 129,
        "startColumnNumber" : 2,
        "endLineNumber" : 345,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void initializeDefaults(Context context,Registry registry,BitmapPool bitmapPool,ArrayPool arrayPool,GlideExperiments experiments){\n  registry.register(new DefaultImageHeaderParser());\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.O_MR1) {\n    registry.register(new ExifInterfaceImageHeaderParser());\n  }\n  final Resources resources=context.getResources();\n  List<ImageHeaderParser> imageHeaderParsers=registry.getImageHeaderParsers();\n  ByteBufferGifDecoder byteBufferGifDecoder=new ByteBufferGifDecoder(context,imageHeaderParsers,bitmapPool,arrayPool);\n  ResourceDecoder<ParcelFileDescriptor,Bitmap> parcelFileDescriptorVideoDecoder=VideoDecoder.parcel(bitmapPool);\n  Downsampler downsampler=new Downsampler(registry.getImageHeaderParsers(),resources.getDisplayMetrics(),bitmapPool,arrayPool);\n  ResourceDecoder<ByteBuffer,Bitmap> byteBufferBitmapDecoder;\n  ResourceDecoder<InputStream,Bitmap> streamBitmapDecoder;\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P && experiments.isEnabled(EnableImageDecoderForBitmaps.class)) {\n    streamBitmapDecoder=new InputStreamBitmapImageDecoderResourceDecoder();\n    byteBufferBitmapDecoder=new ByteBufferBitmapImageDecoderResourceDecoder();\n  }\n else {\n    byteBufferBitmapDecoder=new ByteBufferBitmapDecoder(downsampler);\n    streamBitmapDecoder=new StreamBitmapDecoder(downsampler,arrayPool);\n  }\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P) {\n    registry.append(Registry.BUCKET_ANIMATION,InputStream.class,Drawable.class,AnimatedWebpDecoder.streamDecoder(imageHeaderParsers,arrayPool));\n    registry.append(Registry.BUCKET_ANIMATION,ByteBuffer.class,Drawable.class,AnimatedWebpDecoder.byteBufferDecoder(imageHeaderParsers,arrayPool));\n  }\n  ResourceDrawableDecoder resourceDrawableDecoder=new ResourceDrawableDecoder(context);\n  ResourceLoader.StreamFactory resourceLoaderStreamFactory=new ResourceLoader.StreamFactory(resources);\n  ResourceLoader.UriFactory resourceLoaderUriFactory=new ResourceLoader.UriFactory(resources);\n  ResourceLoader.FileDescriptorFactory resourceLoaderFileDescriptorFactory=new ResourceLoader.FileDescriptorFactory(resources);\n  ResourceLoader.AssetFileDescriptorFactory resourceLoaderAssetFileDescriptorFactory=new ResourceLoader.AssetFileDescriptorFactory(resources);\n  BitmapEncoder bitmapEncoder=new BitmapEncoder(arrayPool);\n  BitmapBytesTranscoder bitmapBytesTranscoder=new BitmapBytesTranscoder();\n  GifDrawableBytesTranscoder gifDrawableBytesTranscoder=new GifDrawableBytesTranscoder();\n  ContentResolver contentResolver=context.getContentResolver();\n  registry.append(ByteBuffer.class,new ByteBufferEncoder()).append(InputStream.class,new StreamEncoder(arrayPool)).append(Registry.BUCKET_BITMAP,ByteBuffer.class,Bitmap.class,byteBufferBitmapDecoder).append(Registry.BUCKET_BITMAP,InputStream.class,Bitmap.class,streamBitmapDecoder);\n  if (ParcelFileDescriptorRewinder.isSupported()) {\n    registry.append(Registry.BUCKET_BITMAP,ParcelFileDescriptor.class,Bitmap.class,new ParcelFileDescriptorBitmapDecoder(downsampler));\n  }\n  registry.append(Registry.BUCKET_BITMAP,ParcelFileDescriptor.class,Bitmap.class,parcelFileDescriptorVideoDecoder).append(Registry.BUCKET_BITMAP,AssetFileDescriptor.class,Bitmap.class,VideoDecoder.asset(bitmapPool)).append(Bitmap.class,Bitmap.class,UnitModelLoader.Factory.<Bitmap>getInstance()).append(Registry.BUCKET_BITMAP,Bitmap.class,Bitmap.class,new UnitBitmapDecoder()).append(Bitmap.class,bitmapEncoder).append(Registry.BUCKET_BITMAP_DRAWABLE,ByteBuffer.class,BitmapDrawable.class,new BitmapDrawableDecoder<>(resources,byteBufferBitmapDecoder)).append(Registry.BUCKET_BITMAP_DRAWABLE,InputStream.class,BitmapDrawable.class,new BitmapDrawableDecoder<>(resources,streamBitmapDecoder)).append(Registry.BUCKET_BITMAP_DRAWABLE,ParcelFileDescriptor.class,BitmapDrawable.class,new BitmapDrawableDecoder<>(resources,parcelFileDescriptorVideoDecoder)).append(BitmapDrawable.class,new BitmapDrawableEncoder(bitmapPool,bitmapEncoder)).append(Registry.BUCKET_ANIMATION,InputStream.class,GifDrawable.class,new StreamGifDecoder(imageHeaderParsers,byteBufferGifDecoder,arrayPool)).append(Registry.BUCKET_ANIMATION,ByteBuffer.class,GifDrawable.class,byteBufferGifDecoder).append(GifDrawable.class,new GifDrawableEncoder()).append(GifDecoder.class,GifDecoder.class,UnitModelLoader.Factory.<GifDecoder>getInstance()).append(Registry.BUCKET_BITMAP,GifDecoder.class,Bitmap.class,new GifFrameResourceDecoder(bitmapPool)).append(Uri.class,Drawable.class,resourceDrawableDecoder).append(Uri.class,Bitmap.class,new ResourceBitmapDecoder(resourceDrawableDecoder,bitmapPool)).register(new ByteBufferRewinder.Factory()).append(File.class,ByteBuffer.class,new ByteBufferFileLoader.Factory()).append(File.class,InputStream.class,new FileLoader.StreamFactory()).append(File.class,File.class,new FileDecoder()).append(File.class,ParcelFileDescriptor.class,new FileLoader.FileDescriptorFactory()).append(File.class,File.class,UnitModelLoader.Factory.<File>getInstance()).register(new InputStreamRewinder.Factory(arrayPool));\n  if (ParcelFileDescriptorRewinder.isSupported()) {\n    registry.register(new ParcelFileDescriptorRewinder.Factory());\n  }\n  registry.append(int.class,InputStream.class,resourceLoaderStreamFactory).append(int.class,ParcelFileDescriptor.class,resourceLoaderFileDescriptorFactory).append(Integer.class,InputStream.class,resourceLoaderStreamFactory).append(Integer.class,ParcelFileDescriptor.class,resourceLoaderFileDescriptorFactory).append(Integer.class,Uri.class,resourceLoaderUriFactory).append(int.class,AssetFileDescriptor.class,resourceLoaderAssetFileDescriptorFactory).append(Integer.class,AssetFileDescriptor.class,resourceLoaderAssetFileDescriptorFactory).append(int.class,Uri.class,resourceLoaderUriFactory).append(String.class,InputStream.class,new DataUrlLoader.StreamFactory<String>()).append(Uri.class,InputStream.class,new DataUrlLoader.StreamFactory<Uri>()).append(String.class,InputStream.class,new StringLoader.StreamFactory()).append(String.class,ParcelFileDescriptor.class,new StringLoader.FileDescriptorFactory()).append(String.class,AssetFileDescriptor.class,new StringLoader.AssetFileDescriptorFactory()).append(Uri.class,InputStream.class,new AssetUriLoader.StreamFactory(context.getAssets())).append(Uri.class,AssetFileDescriptor.class,new AssetUriLoader.FileDescriptorFactory(context.getAssets())).append(Uri.class,InputStream.class,new MediaStoreImageThumbLoader.Factory(context)).append(Uri.class,InputStream.class,new MediaStoreVideoThumbLoader.Factory(context));\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.Q) {\n    registry.append(Uri.class,InputStream.class,new QMediaStoreUriLoader.InputStreamFactory(context));\n    registry.append(Uri.class,ParcelFileDescriptor.class,new QMediaStoreUriLoader.FileDescriptorFactory(context));\n  }\n  registry.append(Uri.class,InputStream.class,new UriLoader.StreamFactory(contentResolver)).append(Uri.class,ParcelFileDescriptor.class,new UriLoader.FileDescriptorFactory(contentResolver)).append(Uri.class,AssetFileDescriptor.class,new UriLoader.AssetFileDescriptorFactory(contentResolver)).append(Uri.class,InputStream.class,new UrlUriLoader.StreamFactory()).append(URL.class,InputStream.class,new UrlLoader.StreamFactory()).append(Uri.class,File.class,new MediaStoreFileLoader.Factory(context)).append(GlideUrl.class,InputStream.class,new HttpGlideUrlLoader.Factory()).append(byte[].class,ByteBuffer.class,new ByteArrayLoader.ByteBufferFactory()).append(byte[].class,InputStream.class,new ByteArrayLoader.StreamFactory()).append(Uri.class,Uri.class,UnitModelLoader.Factory.<Uri>getInstance()).append(Drawable.class,Drawable.class,UnitModelLoader.Factory.<Drawable>getInstance()).append(Drawable.class,Drawable.class,new UnitDrawableDecoder()).register(Bitmap.class,BitmapDrawable.class,new BitmapDrawableTranscoder(resources)).register(Bitmap.class,byte[].class,bitmapBytesTranscoder).register(Drawable.class,byte[].class,new DrawableBytesTranscoder(bitmapPool,bitmapBytesTranscoder,gifDrawableBytesTranscoder)).register(GifDrawable.class,byte[].class,gifDrawableBytesTranscoder);\n  if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.M) {\n    ResourceDecoder<ByteBuffer,Bitmap> byteBufferVideoDecoder=VideoDecoder.byteBuffer(bitmapPool);\n    registry.append(ByteBuffer.class,Bitmap.class,byteBufferVideoDecoder);\n    registry.append(ByteBuffer.class,BitmapDrawable.class,new BitmapDrawableDecoder<>(resources,byteBufferVideoDecoder));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1212,
      "astHeight" : 29
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 950,
        "startLineNumber" : 277,
        "startColumnNumber" : 4,
        "endLineNumber" : 288,
        "endColumnNumber" : 82
      },
      "nodeContext" : "registry.append(int.class,InputStream.class,resourceLoaderStreamFactory).append(int.class,ParcelFileDescriptor.class,resourceLoaderFileDescriptorFactory).append(Integer.class,InputStream.class,resourceLoaderStreamFactory).append(Integer.class,ParcelFileDescriptor.class,resourceLoaderFileDescriptorFactory).append(Integer.class,Uri.class,resourceLoaderUriFactory).append(int.class,AssetFileDescriptor.class,resourceLoaderAssetFileDescriptorFactory).append(Integer.class,AssetFileDescriptor.class,resourceLoaderAssetFileDescriptorFactory).append(int.class,Uri.class,resourceLoaderUriFactory).append(String.class,InputStream.class,new DataUrlLoader.StreamFactory<String>()).append(Uri.class,InputStream.class,new DataUrlLoader.StreamFactory<Uri>()).append(String.class,InputStream.class,new StringLoader.StreamFactory())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 114,
      "astHeight" : 14
    },
    "tokenLength" : 2,
    "type" : "com.bumptech.glide.load.model.StringLoader.StreamFactory"
  } ],
  "positionList" : [ {
    "charLength" : 32,
    "startLineNumber" : 288,
    "startColumnNumber" : 49,
    "endLineNumber" : 288,
    "endColumnNumber" : 81
  } ],
  "layoutRelationDataList" : [ ]
}