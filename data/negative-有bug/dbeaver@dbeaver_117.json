{
  "id" : 117,
  "expression" : "tableSupportsAndHasOids(table) && tableIsGreenplumWithRelOptions(table,tableBase)",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.ext.greenplum/src/org/jkiss/dbeaver/ext/greenplum/model/GreenplumWithClauseBuilder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "tableSupportsAndHasOids(table) && tableIsGreenplumWithRelOptions(table,tableBase)",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 82,
      "startLineNumber" : 33,
      "startColumnNumber" : 12,
      "endLineNumber" : 33,
      "endColumnNumber" : 94
    },
    "astNodeNumber" : 8,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1027,
        "startLineNumber" : 33,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (tableSupportsAndHasOids(table) && tableIsGreenplumWithRelOptions(table,tableBase)) {\n  withClauseBuilder.append(\"\\nWITH (\\n\\tOIDS=\").append(table.isHasOids() ? \"TRUE\" : \"FALSE\");\n  for (  String option : tableBase.getRelOptions()) {\n    withClauseBuilder.append(format(\",\\n\\t%s\",option));\n  }\n  withClauseBuilder.append(\"\\n)\");\n}\n else if (tableSupportsAndHasOids(table)) {\n  withClauseBuilder.append(\"\\nWITH (\\n\\tOIDS=\").append(table.isHasOids() ? \"TRUE\" : \"FALSE\");\n  withClauseBuilder.append(\"\\n)\");\n}\n else if (tableIsGreenplumWithRelOptions(table,tableBase)) {\n  String[] options=tableBase.getRelOptions();\n  withClauseBuilder.append(format(\"\\nWITH (\\n\\t%s\",options[0]));\n  for (int i=1; i < options.length; i++) {\n    String option=options[i];\n    withClauseBuilder.append(format(\",\\n\\t%s\",option));\n  }\n  withClauseBuilder.append(\"\\n)\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 129,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1153,
        "startLineNumber" : 30,
        "startColumnNumber" : 92,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringBuilder withClauseBuilder=new StringBuilder();\n  if (tableSupportsAndHasOids(table) && tableIsGreenplumWithRelOptions(table,tableBase)) {\n    withClauseBuilder.append(\"\\nWITH (\\n\\tOIDS=\").append(table.isHasOids() ? \"TRUE\" : \"FALSE\");\n    for (    String option : tableBase.getRelOptions()) {\n      withClauseBuilder.append(format(\",\\n\\t%s\",option));\n    }\n    withClauseBuilder.append(\"\\n)\");\n  }\n else   if (tableSupportsAndHasOids(table)) {\n    withClauseBuilder.append(\"\\nWITH (\\n\\tOIDS=\").append(table.isHasOids() ? \"TRUE\" : \"FALSE\");\n    withClauseBuilder.append(\"\\n)\");\n  }\n else   if (tableIsGreenplumWithRelOptions(table,tableBase)) {\n    String[] options=tableBase.getRelOptions();\n    withClauseBuilder.append(format(\"\\nWITH (\\n\\t%s\",options[0]));\n    for (int i=1; i < options.length; i++) {\n      String option=options[i];\n      withClauseBuilder.append(format(\",\\n\\t%s\",option));\n    }\n    withClauseBuilder.append(\"\\n)\");\n  }\n  return withClauseBuilder.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 142,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1241,
        "startLineNumber" : 30,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static String generateWithClause(PostgreTable table,PostgreTableBase tableBase){\n  StringBuilder withClauseBuilder=new StringBuilder();\n  if (tableSupportsAndHasOids(table) && tableIsGreenplumWithRelOptions(table,tableBase)) {\n    withClauseBuilder.append(\"\\nWITH (\\n\\tOIDS=\").append(table.isHasOids() ? \"TRUE\" : \"FALSE\");\n    for (    String option : tableBase.getRelOptions()) {\n      withClauseBuilder.append(format(\",\\n\\t%s\",option));\n    }\n    withClauseBuilder.append(\"\\n)\");\n  }\n else   if (tableSupportsAndHasOids(table)) {\n    withClauseBuilder.append(\"\\nWITH (\\n\\tOIDS=\").append(table.isHasOids() ? \"TRUE\" : \"FALSE\");\n    withClauseBuilder.append(\"\\n)\");\n  }\n else   if (tableIsGreenplumWithRelOptions(table,tableBase)) {\n    String[] options=tableBase.getRelOptions();\n    withClauseBuilder.append(format(\"\\nWITH (\\n\\t%s\",options[0]));\n    for (int i=1; i < options.length; i++) {\n      String option=options[i];\n      withClauseBuilder.append(format(\",\\n\\t%s\",option));\n    }\n    withClauseBuilder.append(\"\\n)\");\n  }\n  return withClauseBuilder.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 156,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1027,
        "startLineNumber" : 33,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (tableSupportsAndHasOids(table) && tableIsGreenplumWithRelOptions(table,tableBase)) {\n  withClauseBuilder.append(\"\\nWITH (\\n\\tOIDS=\").append(table.isHasOids() ? \"TRUE\" : \"FALSE\");\n  for (  String option : tableBase.getRelOptions()) {\n    withClauseBuilder.append(format(\",\\n\\t%s\",option));\n  }\n  withClauseBuilder.append(\"\\n)\");\n}\n else if (tableSupportsAndHasOids(table)) {\n  withClauseBuilder.append(\"\\nWITH (\\n\\tOIDS=\").append(table.isHasOids() ? \"TRUE\" : \"FALSE\");\n  withClauseBuilder.append(\"\\n)\");\n}\n else if (tableIsGreenplumWithRelOptions(table,tableBase)) {\n  String[] options=tableBase.getRelOptions();\n  withClauseBuilder.append(format(\"\\nWITH (\\n\\t%s\",options[0]));\n  for (int i=1; i < options.length; i++) {\n    String option=options[i];\n    withClauseBuilder.append(format(\",\\n\\t%s\",option));\n  }\n  withClauseBuilder.append(\"\\n)\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 129,
      "astHeight" : 10
    },
    "tokenLength" : 6,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 82,
    "startLineNumber" : 33,
    "startColumnNumber" : 12,
    "endLineNumber" : 33,
    "endColumnNumber" : 94
  } ],
  "layoutRelationDataList" : [ ]
}