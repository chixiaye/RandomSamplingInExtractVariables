{
  "id" : 113,
  "expression" : "Validators.filterNumber(input)",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/zxing.appspot.com/src/main/java/com/google/zxing/web/generator/client/SmsAddressGenerator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Validators.filterNumber(input)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 69,
      "startColumnNumber" : 12,
      "endLineNumber" : 69,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 42
      },
      "nodeContext" : "input=Validators.filterNumber(input)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 43
      },
      "nodeContext" : "input=Validators.filterNumber(input);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 252,
        "startLineNumber" : 64,
        "startColumnNumber" : 57,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String input=number.getText();\n  if (input.isEmpty()) {\n    throw new GeneratorException(\"Phone number must be present.\");\n  }\n  input=Validators.filterNumber(input);\n  Validators.validateNumber(input);\n  return input;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 307,
        "startLineNumber" : 64,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private String getTelField() throws GeneratorException {\n  String input=number.getText();\n  if (input.isEmpty()) {\n    throw new GeneratorException(\"Phone number must be present.\");\n  }\n  input=Validators.filterNumber(input);\n  Validators.validateNumber(input);\n  return input;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 40,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 43
      },
      "nodeContext" : "input=Validators.filterNumber(input);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 30,
    "startLineNumber" : 69,
    "startColumnNumber" : 12,
    "endLineNumber" : 69,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ ]
}