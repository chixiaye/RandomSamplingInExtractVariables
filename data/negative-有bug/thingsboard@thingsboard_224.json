{
  "id" : 224,
  "expression" : "dashboardService.findDashboardById(tenantId,dashboard.getId()).getAssignedCustomers()",
  "projectName" : "thingsboard@thingsboard",
  "commitID" : "7c2b3a9fbf84cc58aa7546029c5c7c10a662c55a",
  "filePath" : "/application/src/main/java/org/thingsboard/server/service/sync/ie/importing/impl/DashboardImportService.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "dashboardService.findDashboardById(tenantId,dashboard.getId()).getAssignedCustomers()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 86,
      "startLineNumber" : 94,
      "startColumnNumber" : 76,
      "endLineNumber" : 94,
      "endColumnNumber" : 162
    },
    "astNodeNumber" : 9,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 94,
        "startColumnNumber" : 56,
        "endLineNumber" : 94,
        "endColumnNumber" : 163
      },
      "nodeContext" : "Optional.ofNullable(dashboardService.findDashboardById(tenantId,dashboard.getId()).getAssignedCustomers())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 160,
        "startLineNumber" : 94,
        "startColumnNumber" : 56,
        "endLineNumber" : 95,
        "endColumnNumber" : 51
      },
      "nodeContext" : "Optional.ofNullable(dashboardService.findDashboardById(tenantId,dashboard.getId()).getAssignedCustomers()).orElse(Collections.emptySet())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 169,
        "startLineNumber" : 94,
        "startColumnNumber" : 56,
        "endLineNumber" : 95,
        "endColumnNumber" : 60
      },
      "nodeContext" : "Optional.ofNullable(dashboardService.findDashboardById(tenantId,dashboard.getId()).getAssignedCustomers()).orElse(Collections.emptySet()).stream()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 207,
        "startLineNumber" : 94,
        "startColumnNumber" : 56,
        "endLineNumber" : 95,
        "endColumnNumber" : 98
      },
      "nodeContext" : "Optional.ofNullable(dashboardService.findDashboardById(tenantId,dashboard.getId()).getAssignedCustomers()).orElse(Collections.emptySet()).stream().map(ShortCustomerInfo::getCustomerId)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 235,
        "startLineNumber" : 94,
        "startColumnNumber" : 56,
        "endLineNumber" : 95,
        "endColumnNumber" : 126
      },
      "nodeContext" : "Optional.ofNullable(dashboardService.findDashboardById(tenantId,dashboard.getId()).getAssignedCustomers()).orElse(Collections.emptySet()).stream().map(ShortCustomerInfo::getCustomerId).collect(Collectors.toSet())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 29,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 263,
        "startLineNumber" : 94,
        "startColumnNumber" : 28,
        "endLineNumber" : 95,
        "endColumnNumber" : 126
      },
      "nodeContext" : "existingAssignedCustomers=Optional.ofNullable(dashboardService.findDashboardById(tenantId,dashboard.getId()).getAssignedCustomers()).orElse(Collections.emptySet()).stream().map(ShortCustomerInfo::getCustomerId).collect(Collectors.toSet())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 31,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 280,
        "startLineNumber" : 94,
        "startColumnNumber" : 12,
        "endLineNumber" : 95,
        "endColumnNumber" : 127
      },
      "nodeContext" : "Set<CustomerId> existingAssignedCustomers=Optional.ofNullable(dashboardService.findDashboardById(tenantId,dashboard.getId()).getAssignedCustomers()).orElse(Collections.emptySet()).stream().map(ShortCustomerInfo::getCustomerId).collect(Collectors.toSet());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 37,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1300,
        "startLineNumber" : 93,
        "startColumnNumber" : 15,
        "endLineNumber" : 111,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Set<CustomerId> existingAssignedCustomers=Optional.ofNullable(dashboardService.findDashboardById(tenantId,dashboard.getId()).getAssignedCustomers()).orElse(Collections.emptySet()).stream().map(ShortCustomerInfo::getCustomerId).collect(Collectors.toSet());\n  Set<CustomerId> newAssignedCustomers=assignedCustomers.stream().map(ShortCustomerInfo::getCustomerId).collect(Collectors.toSet());\n  Set<CustomerId> toUnassign=new HashSet<>(existingAssignedCustomers);\n  toUnassign.removeAll(newAssignedCustomers);\n  for (  CustomerId customerId : toUnassign) {\n    assignedCustomers=dashboardService.unassignDashboardFromCustomer(tenantId,dashboard.getId(),customerId).getAssignedCustomers();\n  }\n  Set<CustomerId> toAssign=new HashSet<>(newAssignedCustomers);\n  toAssign.removeAll(existingAssignedCustomers);\n  for (  CustomerId customerId : toAssign) {\n    assignedCustomers=dashboardService.assignDashboardToCustomer(tenantId,dashboard.getId(),customerId).getAssignedCustomers();\n  }\n  dashboard.setAssignedCustomers(assignedCustomers);\n  dashboard=dashboardService.saveDashboard(dashboard);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 147,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1700,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 111,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (dashboard.getId() == null) {\n  dashboard.setAssignedCustomers(assignedCustomers);\n  dashboard=dashboardService.saveDashboard(dashboard);\n  for (  ShortCustomerInfo customerInfo : assignedCustomers) {\n    dashboard=dashboardService.assignDashboardToCustomer(tenantId,dashboard.getId(),customerInfo.getCustomerId());\n  }\n}\n else {\n  Set<CustomerId> existingAssignedCustomers=Optional.ofNullable(dashboardService.findDashboardById(tenantId,dashboard.getId()).getAssignedCustomers()).orElse(Collections.emptySet()).stream().map(ShortCustomerInfo::getCustomerId).collect(Collectors.toSet());\n  Set<CustomerId> newAssignedCustomers=assignedCustomers.stream().map(ShortCustomerInfo::getCustomerId).collect(Collectors.toSet());\n  Set<CustomerId> toUnassign=new HashSet<>(existingAssignedCustomers);\n  toUnassign.removeAll(newAssignedCustomers);\n  for (  CustomerId customerId : toUnassign) {\n    assignedCustomers=dashboardService.unassignDashboardFromCustomer(tenantId,dashboard.getId(),customerId).getAssignedCustomers();\n  }\n  Set<CustomerId> toAssign=new HashSet<>(newAssignedCustomers);\n  toAssign.removeAll(existingAssignedCustomers);\n  for (  CustomerId customerId : toAssign) {\n    assignedCustomers=dashboardService.assignDashboardToCustomer(tenantId,dashboard.getId(),customerId).getAssignedCustomers();\n  }\n  dashboard.setAssignedCustomers(assignedCustomers);\n  dashboard=dashboardService.saveDashboard(dashboard);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 186,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2108,
        "startLineNumber" : 80,
        "startColumnNumber" : 144,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  var tenantId=ctx.getTenantId();\n  Set<ShortCustomerInfo> assignedCustomers=Optional.ofNullable(dashboard.getAssignedCustomers()).orElse(Collections.emptySet()).stream().peek(customerInfo -> customerInfo.setCustomerId(idProvider.getInternalId(customerInfo.getCustomerId()))).collect(Collectors.toSet());\n  if (dashboard.getId() == null) {\n    dashboard.setAssignedCustomers(assignedCustomers);\n    dashboard=dashboardService.saveDashboard(dashboard);\n    for (    ShortCustomerInfo customerInfo : assignedCustomers) {\n      dashboard=dashboardService.assignDashboardToCustomer(tenantId,dashboard.getId(),customerInfo.getCustomerId());\n    }\n  }\n else {\n    Set<CustomerId> existingAssignedCustomers=Optional.ofNullable(dashboardService.findDashboardById(tenantId,dashboard.getId()).getAssignedCustomers()).orElse(Collections.emptySet()).stream().map(ShortCustomerInfo::getCustomerId).collect(Collectors.toSet());\n    Set<CustomerId> newAssignedCustomers=assignedCustomers.stream().map(ShortCustomerInfo::getCustomerId).collect(Collectors.toSet());\n    Set<CustomerId> toUnassign=new HashSet<>(existingAssignedCustomers);\n    toUnassign.removeAll(newAssignedCustomers);\n    for (    CustomerId customerId : toUnassign) {\n      assignedCustomers=dashboardService.unassignDashboardFromCustomer(tenantId,dashboard.getId(),customerId).getAssignedCustomers();\n    }\n    Set<CustomerId> toAssign=new HashSet<>(newAssignedCustomers);\n    toAssign.removeAll(existingAssignedCustomers);\n    for (    CustomerId customerId : toAssign) {\n      assignedCustomers=dashboardService.assignDashboardToCustomer(tenantId,dashboard.getId(),customerId).getAssignedCustomers();\n    }\n    dashboard.setAssignedCustomers(assignedCustomers);\n    dashboard=dashboardService.saveDashboard(dashboard);\n  }\n  return dashboard;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 237,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2263,
        "startLineNumber" : 79,
        "startColumnNumber" : 4,
        "endLineNumber" : 113,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected Dashboard saveOrUpdate(EntitiesImportCtx ctx,Dashboard dashboard,EntityExportData<Dashboard> exportData,IdProvider idProvider){\n  var tenantId=ctx.getTenantId();\n  Set<ShortCustomerInfo> assignedCustomers=Optional.ofNullable(dashboard.getAssignedCustomers()).orElse(Collections.emptySet()).stream().peek(customerInfo -> customerInfo.setCustomerId(idProvider.getInternalId(customerInfo.getCustomerId()))).collect(Collectors.toSet());\n  if (dashboard.getId() == null) {\n    dashboard.setAssignedCustomers(assignedCustomers);\n    dashboard=dashboardService.saveDashboard(dashboard);\n    for (    ShortCustomerInfo customerInfo : assignedCustomers) {\n      dashboard=dashboardService.assignDashboardToCustomer(tenantId,dashboard.getId(),customerInfo.getCustomerId());\n    }\n  }\n else {\n    Set<CustomerId> existingAssignedCustomers=Optional.ofNullable(dashboardService.findDashboardById(tenantId,dashboard.getId()).getAssignedCustomers()).orElse(Collections.emptySet()).stream().map(ShortCustomerInfo::getCustomerId).collect(Collectors.toSet());\n    Set<CustomerId> newAssignedCustomers=assignedCustomers.stream().map(ShortCustomerInfo::getCustomerId).collect(Collectors.toSet());\n    Set<CustomerId> toUnassign=new HashSet<>(existingAssignedCustomers);\n    toUnassign.removeAll(newAssignedCustomers);\n    for (    CustomerId customerId : toUnassign) {\n      assignedCustomers=dashboardService.unassignDashboardFromCustomer(tenantId,dashboard.getId(),customerId).getAssignedCustomers();\n    }\n    Set<CustomerId> toAssign=new HashSet<>(newAssignedCustomers);\n    toAssign.removeAll(existingAssignedCustomers);\n    for (    CustomerId customerId : toAssign) {\n      assignedCustomers=dashboardService.assignDashboardToCustomer(tenantId,dashboard.getId(),customerId).getAssignedCustomers();\n    }\n    dashboard.setAssignedCustomers(assignedCustomers);\n    dashboard=dashboardService.saveDashboard(dashboard);\n  }\n  return dashboard;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 263,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 94,
        "startColumnNumber" : 56,
        "endLineNumber" : 94,
        "endColumnNumber" : 163
      },
      "nodeContext" : "Optional.ofNullable(dashboardService.findDashboardById(tenantId,dashboard.getId()).getAssignedCustomers())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 6,
    "type" : "java.util.Set<org.thingsboard.server.common.data.ShortCustomerInfo>"
  } ],
  "positionList" : [ {
    "charLength" : 86,
    "startLineNumber" : 94,
    "startColumnNumber" : 76,
    "endLineNumber" : 94,
    "endColumnNumber" : 162
  } ],
  "layoutRelationDataList" : [ ]
}