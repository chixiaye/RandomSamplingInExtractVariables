{
  "id" : 425,
  "expression" : "new SafeObserverTestException(\"failed\")",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/subscribers/SafeObserverTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new SafeObserverTestException(\"failed\")",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 39,
      "startLineNumber" : 209,
      "startColumnNumber" : 50,
      "endLineNumber" : 209,
      "endColumnNumber" : 89
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 209,
        "startColumnNumber" : 12,
        "endLineNumber" : 209,
        "endColumnNumber" : 90
      },
      "nodeContext" : "new SafeSubscriber<String>(o).onError(new SafeObserverTestException(\"failed\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 209,
        "startColumnNumber" : 12,
        "endLineNumber" : 209,
        "endColumnNumber" : 91
      },
      "nodeContext" : "new SafeSubscriber<String>(o).onError(new SafeObserverTestException(\"failed\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 629,
        "startLineNumber" : 195,
        "startColumnNumber" : 12,
        "endLineNumber" : 211,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  o.onSubscribe(new Subscription(){\n    @Override public void cancel(){\n      throw new SafeObserverTestException(\"failure from unsubscribe\");\n    }\n    @Override public void request(    long n){\n    }\n  }\n);\n  new SafeSubscriber<String>(o).onError(new SafeObserverTestException(\"failed\"));\n  fail(\"we expect the unsubscribe failure to cause an exception to be thrown\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 49,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1389,
        "startLineNumber" : 195,
        "startColumnNumber" : 8,
        "endLineNumber" : 226,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  o.onSubscribe(new Subscription(){\n    @Override public void cancel(){\n      throw new SafeObserverTestException(\"failure from unsubscribe\");\n    }\n    @Override public void request(    long n){\n    }\n  }\n);\n  new SafeSubscriber<String>(o).onError(new SafeObserverTestException(\"failed\"));\n  fail(\"we expect the unsubscribe failure to cause an exception to be thrown\");\n}\n catch (Exception e) {\n  e.printStackTrace();\n  assertNotNull(onError.get());\n  assertTrue(onError.get() instanceof SafeObserverTestException);\n  assertEquals(\"failed\",onError.get().getMessage());\n  OnErrorFailedException onErrorFailedException=(OnErrorFailedException)e;\n  assertTrue(onErrorFailedException.getCause() instanceof SafeObserverTestException);\n  assertEquals(\"failure from unsubscribe\",e.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 109,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1546,
        "startLineNumber" : 192,
        "startColumnNumber" : 55,
        "endLineNumber" : 227,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  AtomicReference<Throwable> onError=new AtomicReference<Throwable>();\n  Subscriber<String> o=OBSERVER_SUCCESS(onError);\n  try {\n    o.onSubscribe(new Subscription(){\n      @Override public void cancel(){\n        throw new SafeObserverTestException(\"failure from unsubscribe\");\n      }\n      @Override public void request(      long n){\n      }\n    }\n);\n    new SafeSubscriber<String>(o).onError(new SafeObserverTestException(\"failed\"));\n    fail(\"we expect the unsubscribe failure to cause an exception to be thrown\");\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    assertNotNull(onError.get());\n    assertTrue(onError.get() instanceof SafeObserverTestException);\n    assertEquals(\"failed\",onError.get().getMessage());\n    OnErrorFailedException onErrorFailedException=(OnErrorFailedException)e;\n    assertTrue(onErrorFailedException.getCause() instanceof SafeObserverTestException);\n    assertEquals(\"failure from unsubscribe\",e.getMessage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1648,
        "startLineNumber" : 190,
        "startColumnNumber" : 4,
        "endLineNumber" : 227,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test @Ignore(\"Subscribers can't throw\") public void onErrorSuccessWithUnsubscribeFailure(){\n  AtomicReference<Throwable> onError=new AtomicReference<Throwable>();\n  Subscriber<String> o=OBSERVER_SUCCESS(onError);\n  try {\n    o.onSubscribe(new Subscription(){\n      @Override public void cancel(){\n        throw new SafeObserverTestException(\"failure from unsubscribe\");\n      }\n      @Override public void request(      long n){\n      }\n    }\n);\n    new SafeSubscriber<String>(o).onError(new SafeObserverTestException(\"failed\"));\n    fail(\"we expect the unsubscribe failure to cause an exception to be thrown\");\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    assertNotNull(onError.get());\n    assertTrue(onError.get() instanceof SafeObserverTestException);\n    assertEquals(\"failed\",onError.get().getMessage());\n    OnErrorFailedException onErrorFailedException=(OnErrorFailedException)e;\n    assertTrue(onErrorFailedException.getCause() instanceof SafeObserverTestException);\n    assertEquals(\"failure from unsubscribe\",e.getMessage());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 144,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 209,
        "startColumnNumber" : 12,
        "endLineNumber" : 209,
        "endColumnNumber" : 91
      },
      "nodeContext" : "new SafeSubscriber<String>(o).onError(new SafeObserverTestException(\"failed\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "io.reactivex.subscribers.SafeObserverTest.SafeObserverTestException"
  } ],
  "positionList" : [ {
    "charLength" : 39,
    "startLineNumber" : 209,
    "startColumnNumber" : 50,
    "endLineNumber" : 209,
    "endColumnNumber" : 89
  } ],
  "layoutRelationDataList" : [ ]
}