{
  "id" : 16,
  "expression" : "\"Main thread was not interrupted during command execution!\"",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/test/java/com/google/devtools/build/lib/shell/InterruptibleTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Main thread was not interrupted during command execution!\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 59,
      "startLineNumber" : 113,
      "startColumnNumber" : 22,
      "endLineNumber" : 113,
      "endColumnNumber" : 81
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 113,
        "startColumnNumber" : 4,
        "endLineNumber" : 113,
        "endColumnNumber" : 82
      },
      "nodeContext" : "assertWithMessage(\"Main thread was not interrupted during command execution!\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 113,
        "startColumnNumber" : 4,
        "endLineNumber" : 114,
        "endColumnNumber" : 41
      },
      "nodeContext" : "assertWithMessage(\"Main thread was not interrupted during command execution!\").that(mainThread.isInterrupted())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 113,
        "startColumnNumber" : 4,
        "endLineNumber" : 115,
        "endColumnNumber" : 17
      },
      "nodeContext" : "assertWithMessage(\"Main thread was not interrupted during command execution!\").that(mainThread.isInterrupted()).isTrue()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 113,
        "startColumnNumber" : 4,
        "endLineNumber" : 115,
        "endColumnNumber" : 18
      },
      "nodeContext" : "assertWithMessage(\"Main thread was not interrupted during command execution!\").that(mainThread.isInterrupted()).isTrue();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 850,
        "startLineNumber" : 99,
        "startColumnNumber" : 72,
        "endLineNumber" : 116,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  assumeTrue(OS.getCurrent() != OS.WINDOWS);\n  CommandResult result=command.executeAsync(Command.NO_INPUT,Command.CONTINUE_SUBPROCESS_ON_INTERRUPT).get();\n  assertThat(result.getTerminationStatus().success()).isTrue();\n  assertThat(new String(result.getStdout(),UTF_8)).isEqualTo(\"start\\n\");\n  assertThat(new String(result.getStderr(),UTF_8)).isEqualTo(\"end\\n\");\n  assertThat(Files.exists(tmpDir.resolve(\"endfile\"))).isTrue();\n  assertWithMessage(\"Interrupter thread is still alive!\").that(interrupter.isAlive()).isFalse();\n  assertWithMessage(\"Main thread was not interrupted during command execution!\").that(mainThread.isInterrupted()).isTrue();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1094,
        "startLineNumber" : 94,
        "startColumnNumber" : 2,
        "endLineNumber" : 116,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Test that interrupting a thread in an \"uninterruptible\" Command.execute marks the thread as interrupted, and does not terminate the subprocess.\n */\n@Test public void uninterruptibleCommandRunsToCompletion() throws Exception {\n  assumeTrue(OS.getCurrent() != OS.WINDOWS);\n  CommandResult result=command.executeAsync(Command.NO_INPUT,Command.CONTINUE_SUBPROCESS_ON_INTERRUPT).get();\n  assertThat(result.getTerminationStatus().success()).isTrue();\n  assertThat(new String(result.getStdout(),UTF_8)).isEqualTo(\"start\\n\");\n  assertThat(new String(result.getStderr(),UTF_8)).isEqualTo(\"end\\n\");\n  assertThat(Files.exists(tmpDir.resolve(\"endfile\"))).isTrue();\n  assertWithMessage(\"Interrupter thread is still alive!\").that(interrupter.isAlive()).isFalse();\n  assertWithMessage(\"Main thread was not interrupted during command execution!\").that(mainThread.isInterrupted()).isTrue();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 106,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 113,
        "startColumnNumber" : 4,
        "endLineNumber" : 113,
        "endColumnNumber" : 82
      },
      "nodeContext" : "assertWithMessage(\"Main thread was not interrupted during command execution!\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 8,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 59,
    "startLineNumber" : 113,
    "startColumnNumber" : 22,
    "endLineNumber" : 113,
    "endColumnNumber" : 81
  } ],
  "layoutRelationDataList" : [ ]
}