{
  "id" : 187,
  "expression" : "r.readCustomHeader()",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/proxy/src/main/java/org/apache/rocketmq/proxy/service/message/LocalMessageService.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "r.readCustomHeader()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 124,
      "startColumnNumber" : 83,
      "endLineNumber" : 124,
      "endColumnNumber" : 103
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 124,
        "startColumnNumber" : 55,
        "endLineNumber" : 124,
        "endColumnNumber" : 103
      },
      "nodeContext" : "(SendMessageResponseHeader)r.readCustomHeader()",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 124,
        "startColumnNumber" : 38,
        "endLineNumber" : 124,
        "endColumnNumber" : 103
      },
      "nodeContext" : "responseHeader=(SendMessageResponseHeader)r.readCustomHeader()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 124,
        "startColumnNumber" : 12,
        "endLineNumber" : 124,
        "endColumnNumber" : 104
      },
      "nodeContext" : "SendMessageResponseHeader responseHeader=(SendMessageResponseHeader)r.readCustomHeader();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 1606,
        "startLineNumber" : 122,
        "startColumnNumber" : 37,
        "endLineNumber" : 154,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  SendResult sendResult=new SendResult();\n  SendMessageResponseHeader responseHeader=(SendMessageResponseHeader)r.readCustomHeader();\n  SendStatus sendStatus;\nswitch (r.getCode()) {\ncase ResponseCode.FLUSH_DISK_TIMEOUT:{\n      sendStatus=SendStatus.FLUSH_DISK_TIMEOUT;\n      break;\n    }\ncase ResponseCode.FLUSH_SLAVE_TIMEOUT:{\n    sendStatus=SendStatus.FLUSH_SLAVE_TIMEOUT;\n    break;\n  }\ncase ResponseCode.SLAVE_NOT_AVAILABLE:{\n  sendStatus=SendStatus.SLAVE_NOT_AVAILABLE;\n  break;\n}\ncase ResponseCode.SUCCESS:{\nsendStatus=SendStatus.SEND_OK;\nbreak;\n}\ndefault:{\nthrow new ProxyException(ProxyExceptionCode.INTERNAL_SERVER_ERROR,r.getRemark());\n}\n}\nsendResult.setSendStatus(sendStatus);\nsendResult.setMsgId(messageId);\nsendResult.setMessageQueue(new MessageQueue(requestHeader.getTopic(),brokerController.getBrokerConfig().getBrokerName(),requestHeader.getQueueId()));\nsendResult.setQueueOffset(responseHeader.getQueueOffset());\nsendResult.setTransactionId(responseHeader.getTransactionId());\nsendResult.setOffsetMsgId(responseHeader.getMsgId());\nreturn Collections.singletonList(sendResult);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 143,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 1611,
        "startLineNumber" : 122,
        "startColumnNumber" : 32,
        "endLineNumber" : 154,
        "endColumnNumber" : 9
      },
      "nodeContext" : "r -> {\n  SendResult sendResult=new SendResult();\n  SendMessageResponseHeader responseHeader=(SendMessageResponseHeader)r.readCustomHeader();\n  SendStatus sendStatus;\nswitch (r.getCode()) {\ncase ResponseCode.FLUSH_DISK_TIMEOUT:{\n      sendStatus=SendStatus.FLUSH_DISK_TIMEOUT;\n      break;\n    }\ncase ResponseCode.FLUSH_SLAVE_TIMEOUT:{\n    sendStatus=SendStatus.FLUSH_SLAVE_TIMEOUT;\n    break;\n  }\ncase ResponseCode.SLAVE_NOT_AVAILABLE:{\n  sendStatus=SendStatus.SLAVE_NOT_AVAILABLE;\n  break;\n}\ncase ResponseCode.SUCCESS:{\nsendStatus=SendStatus.SEND_OK;\nbreak;\n}\ndefault:{\nthrow new ProxyException(ProxyExceptionCode.INTERNAL_SERVER_ERROR,r.getRemark());\n}\n}\nsendResult.setSendStatus(sendStatus);\nsendResult.setMsgId(messageId);\nsendResult.setMessageQueue(new MessageQueue(requestHeader.getTopic(),brokerController.getBrokerConfig().getBrokerName(),requestHeader.getQueueId()));\nsendResult.setQueueOffset(responseHeader.getQueueOffset());\nsendResult.setTransactionId(responseHeader.getTransactionId());\nsendResult.setOffsetMsgId(responseHeader.getMsgId());\nreturn Collections.singletonList(sendResult);\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 146,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 124,
        "startColumnNumber" : 12,
        "endLineNumber" : 124,
        "endColumnNumber" : 104
      },
      "nodeContext" : "SendMessageResponseHeader responseHeader=(SendMessageResponseHeader)r.readCustomHeader();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "org.apache.rocketmq.remoting.CommandCustomHeader"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 124,
    "startColumnNumber" : 83,
    "endLineNumber" : 124,
    "endColumnNumber" : 103
  } ],
  "layoutRelationDataList" : [ ]
}