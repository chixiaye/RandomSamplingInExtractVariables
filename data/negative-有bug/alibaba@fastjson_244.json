{
  "id" : 244,
  "expression" : "text",
  "projectName" : "alibaba@fastjson",
  "commitID" : "d3797da65a3d9f804c9e275c25395c59e31f097d",
  "filePath" : "/src/test/java/com/alibaba/json/bvt/parser/JSONScannerTest_singQuoteString.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "text",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 45,
      "startColumnNumber" : 40,
      "endLineNumber" : 45,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 45,
        "startColumnNumber" : 40,
        "endLineNumber" : 45,
        "endColumnNumber" : 58
      },
      "nodeContext" : "text.toCharArray()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 45,
        "startColumnNumber" : 26,
        "endLineNumber" : 45,
        "endColumnNumber" : 78
      },
      "nodeContext" : "new JSONLexer(text.toCharArray(),text.length() - 1)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 45,
        "startColumnNumber" : 18,
        "endLineNumber" : 45,
        "endColumnNumber" : 78
      },
      "nodeContext" : "lexer=new JSONLexer(text.toCharArray(),text.length() - 1)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 79
      },
      "nodeContext" : "JSONLexer lexer=new JSONLexer(text.toCharArray(),text.length() - 1);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1366,
        "startLineNumber" : 16,
        "startColumnNumber" : 47,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n{\n    JSONLexer lexer=new JSONLexer(\"\\'中国\\'\");\n    lexer.config(Feature.AllowSingleQuotes,true);\n    lexer.nextToken();\n    Assert.assertEquals(\"中国\",lexer.stringVal());\n  }\n{\n    JSONLexer lexer=new JSONLexer(\"'中国\\t\\\\'\\\\\\\"'\");\n    lexer.config(Feature.AllowSingleQuotes,true);\n    lexer.nextToken();\n    Assert.assertEquals(\"中国\\t'\\\"\",lexer.stringVal());\n  }\n{\n    JSONLexer lexer=new JSONLexer(\"\\'中国\\tV5\\'\");\n    lexer.config(Feature.AllowSingleQuotes,true);\n    lexer.nextToken();\n    Assert.assertEquals(\"中国\\tV5\",lexer.stringVal());\n  }\n  StringBuilder buf=new StringBuilder();\n  buf.append('\\'');\n  buf.append(\"\\\\\\\\\\\\/\\\\b\\\\f\\\\n\\\\r\\t\\\\u\" + Integer.toHexString('中'));\n  buf.append('\\'');\n  buf.append('\\u2001');\n  String text=buf.toString();\n  JSONLexer lexer=new JSONLexer(text.toCharArray(),text.length() - 1);\n  lexer.config(Feature.AllowSingleQuotes,true);\n  lexer.nextToken();\n  Assert.assertEquals(0,pos(lexer));\n  String stringVal=lexer.stringVal();\n  Assert.assertEquals(\"\\\"\\\\\\\\/\\\\b\\\\f\\\\n\\\\r\\\\t中\\\"\",JSON.toJSONString(stringVal));\n  JSON.toJSONString(stringVal);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 190,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1409,
        "startLineNumber" : 16,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void test_string() throws Exception {\n{\n    JSONLexer lexer=new JSONLexer(\"\\'中国\\'\");\n    lexer.config(Feature.AllowSingleQuotes,true);\n    lexer.nextToken();\n    Assert.assertEquals(\"中国\",lexer.stringVal());\n  }\n{\n    JSONLexer lexer=new JSONLexer(\"'中国\\t\\\\'\\\\\\\"'\");\n    lexer.config(Feature.AllowSingleQuotes,true);\n    lexer.nextToken();\n    Assert.assertEquals(\"中国\\t'\\\"\",lexer.stringVal());\n  }\n{\n    JSONLexer lexer=new JSONLexer(\"\\'中国\\tV5\\'\");\n    lexer.config(Feature.AllowSingleQuotes,true);\n    lexer.nextToken();\n    Assert.assertEquals(\"中国\\tV5\",lexer.stringVal());\n  }\n  StringBuilder buf=new StringBuilder();\n  buf.append('\\'');\n  buf.append(\"\\\\\\\\\\\\/\\\\b\\\\f\\\\n\\\\r\\t\\\\u\" + Integer.toHexString('中'));\n  buf.append('\\'');\n  buf.append('\\u2001');\n  String text=buf.toString();\n  JSONLexer lexer=new JSONLexer(text.toCharArray(),text.length() - 1);\n  lexer.config(Feature.AllowSingleQuotes,true);\n  lexer.nextToken();\n  Assert.assertEquals(0,pos(lexer));\n  String stringVal=lexer.stringVal();\n  Assert.assertEquals(\"\\\"\\\\\\\\/\\\\b\\\\f\\\\n\\\\r\\\\t中\\\"\",JSON.toJSONString(stringVal));\n  JSON.toJSONString(stringVal);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 196,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 79
      },
      "nodeContext" : "JSONLexer lexer=new JSONLexer(text.toCharArray(),text.length() - 1);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "text",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 45,
      "startColumnNumber" : 60,
      "endLineNumber" : 45,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 45,
        "startColumnNumber" : 60,
        "endLineNumber" : 45,
        "endColumnNumber" : 73
      },
      "nodeContext" : "text.length()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 45,
        "startColumnNumber" : 60,
        "endLineNumber" : 45,
        "endColumnNumber" : 77
      },
      "nodeContext" : "text.length() - 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 45,
        "startColumnNumber" : 26,
        "endLineNumber" : 45,
        "endColumnNumber" : 78
      },
      "nodeContext" : "new JSONLexer(text.toCharArray(),text.length() - 1)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 45,
        "startColumnNumber" : 18,
        "endLineNumber" : 45,
        "endColumnNumber" : 78
      },
      "nodeContext" : "lexer=new JSONLexer(text.toCharArray(),text.length() - 1)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 79
      },
      "nodeContext" : "JSONLexer lexer=new JSONLexer(text.toCharArray(),text.length() - 1);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1366,
        "startLineNumber" : 16,
        "startColumnNumber" : 47,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n{\n    JSONLexer lexer=new JSONLexer(\"\\'中国\\'\");\n    lexer.config(Feature.AllowSingleQuotes,true);\n    lexer.nextToken();\n    Assert.assertEquals(\"中国\",lexer.stringVal());\n  }\n{\n    JSONLexer lexer=new JSONLexer(\"'中国\\t\\\\'\\\\\\\"'\");\n    lexer.config(Feature.AllowSingleQuotes,true);\n    lexer.nextToken();\n    Assert.assertEquals(\"中国\\t'\\\"\",lexer.stringVal());\n  }\n{\n    JSONLexer lexer=new JSONLexer(\"\\'中国\\tV5\\'\");\n    lexer.config(Feature.AllowSingleQuotes,true);\n    lexer.nextToken();\n    Assert.assertEquals(\"中国\\tV5\",lexer.stringVal());\n  }\n  StringBuilder buf=new StringBuilder();\n  buf.append('\\'');\n  buf.append(\"\\\\\\\\\\\\/\\\\b\\\\f\\\\n\\\\r\\t\\\\u\" + Integer.toHexString('中'));\n  buf.append('\\'');\n  buf.append('\\u2001');\n  String text=buf.toString();\n  JSONLexer lexer=new JSONLexer(text.toCharArray(),text.length() - 1);\n  lexer.config(Feature.AllowSingleQuotes,true);\n  lexer.nextToken();\n  Assert.assertEquals(0,pos(lexer));\n  String stringVal=lexer.stringVal();\n  Assert.assertEquals(\"\\\"\\\\\\\\/\\\\b\\\\f\\\\n\\\\r\\\\t中\\\"\",JSON.toJSONString(stringVal));\n  JSON.toJSONString(stringVal);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 190,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1409,
        "startLineNumber" : 16,
        "startColumnNumber" : 4,
        "endLineNumber" : 56,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void test_string() throws Exception {\n{\n    JSONLexer lexer=new JSONLexer(\"\\'中国\\'\");\n    lexer.config(Feature.AllowSingleQuotes,true);\n    lexer.nextToken();\n    Assert.assertEquals(\"中国\",lexer.stringVal());\n  }\n{\n    JSONLexer lexer=new JSONLexer(\"'中国\\t\\\\'\\\\\\\"'\");\n    lexer.config(Feature.AllowSingleQuotes,true);\n    lexer.nextToken();\n    Assert.assertEquals(\"中国\\t'\\\"\",lexer.stringVal());\n  }\n{\n    JSONLexer lexer=new JSONLexer(\"\\'中国\\tV5\\'\");\n    lexer.config(Feature.AllowSingleQuotes,true);\n    lexer.nextToken();\n    Assert.assertEquals(\"中国\\tV5\",lexer.stringVal());\n  }\n  StringBuilder buf=new StringBuilder();\n  buf.append('\\'');\n  buf.append(\"\\\\\\\\\\\\/\\\\b\\\\f\\\\n\\\\r\\t\\\\u\" + Integer.toHexString('中'));\n  buf.append('\\'');\n  buf.append('\\u2001');\n  String text=buf.toString();\n  JSONLexer lexer=new JSONLexer(text.toCharArray(),text.length() - 1);\n  lexer.config(Feature.AllowSingleQuotes,true);\n  lexer.nextToken();\n  Assert.assertEquals(0,pos(lexer));\n  String stringVal=lexer.stringVal();\n  Assert.assertEquals(\"\\\"\\\\\\\\/\\\\b\\\\f\\\\n\\\\r\\\\t中\\\"\",JSON.toJSONString(stringVal));\n  JSON.toJSONString(stringVal);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 196,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 79
      },
      "nodeContext" : "JSONLexer lexer=new JSONLexer(text.toCharArray(),text.length() - 1);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 45,
    "startColumnNumber" : 40,
    "endLineNumber" : 45,
    "endColumnNumber" : 44
  }, {
    "charLength" : 4,
    "startLineNumber" : 45,
    "startColumnNumber" : 60,
    "endLineNumber" : 45,
    "endColumnNumber" : 64
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}