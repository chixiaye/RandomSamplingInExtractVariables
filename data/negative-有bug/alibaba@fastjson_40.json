{
  "id" : 40,
  "expression" : "\"p2's name\"",
  "projectName" : "alibaba@fastjson",
  "commitID" : "d3797da65a3d9f804c9e275c25395c59e31f097d",
  "filePath" : "/src/test/java/com/alibaba/json/bvt/bug/Bug_for_zhuel.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"p2's name\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 94,
      "startColumnNumber" : 56,
      "endLineNumber" : 94,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayCreation,initializer]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 94,
        "startColumnNumber" : 41,
        "endLineNumber" : 94,
        "endColumnNumber" : 82
      },
      "nodeContext" : "{\"p1's name\",\"p2's name\",\"p3's name\"}",
      "nodeType" : "ArrayInitializer",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 94,
        "startColumnNumber" : 28,
        "endLineNumber" : 94,
        "endColumnNumber" : 82
      },
      "nodeContext" : "new String[]{\"p1's name\",\"p2's name\",\"p3's name\"}",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 94,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 83
      },
      "nodeContext" : "f1.setChildrennames(new String[]{\"p1's name\",\"p2's name\",\"p3's name\"})",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 94,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 84
      },
      "nodeContext" : "f1.setChildrennames(new String[]{\"p1's name\",\"p2's name\",\"p3's name\"});\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4390,
        "startLineNumber" : 12,
        "startColumnNumber" : 50,
        "endLineNumber" : 141,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Person[] ps=new Person[3];\n  Person p1=new Person();\n  p1.setAge(50);\n  p1.setHight(\"170\");\n  p1.setId(\"p1's id\");\n  p1.setName(\"person1's name\");\n  p1.setNames(new String[]{\"p1's id\",\"person1's name\"});\n  p1.setSex(\"男\");\n  Person p2=new Person();\n  p2.setAge(48);\n  p2.setHight(\"155\");\n  p2.setId(\"p2's id\");\n  p2.setName(\"person2's name\");\n  p2.setNames(new String[]{\"p2's id\",\"person2's name\"});\n  p2.setSex(\"女\");\n  Person p3=new Person();\n  p3.setAge(10);\n  p3.setHight(\"120\");\n  p3.setId(\"p3's id \");\n  p3.setName(\"son's name\");\n  p3.setNames(new String[]{\"p3's id \",\"son's name\"});\n  p3.setSex(\"男\");\n  ps[0]=p1;\n  ps[1]=p2;\n  ps[2]=p3;\n  Person[] ps1=new Person[3];\n  Person pp1=new Person();\n  pp1.setAge(52);\n  pp1.setHight(\"170\");\n  pp1.setId(\"pp1's id\");\n  pp1.setName(\"personpp1's name\");\n  pp1.setNames(new String[]{\"pp1's id\",\"personpp1's name\"});\n  pp1.setSex(\"男\");\n  Person pp2=new Person();\n  pp2.setAge(49);\n  pp2.setHight(\"150\");\n  pp2.setId(\"pp2's id\");\n  pp2.setName(\"personpp2's name\");\n  pp2.setNames(new String[]{\"pp2's id\",\"personpp2's name\"});\n  pp2.setSex(\"女\");\n  Person pp3=new Person();\n  pp3.setAge(10);\n  pp3.setHight(\"125\");\n  pp3.setId(\"pp3's id\");\n  pp3.setName(\"daughter's name\");\n  pp3.setNames(new String[]{\"pp3's id\",\"daughter's name\"});\n  pp3.setSex(\"女\");\n  ps1[0]=pp1;\n  ps1[1]=pp2;\n  ps1[2]=pp3;\n  Person[] ps2=new Person[3];\n  Person a1=new Person();\n  a1.setAge(52);\n  a1.setHight(\"170\");\n  a1.setId(\"a1's id\");\n  a1.setName(\"a1's name\");\n  a1.setNames(new String[]{\"a1's id\",\"a1's name\"});\n  a1.setSex(\"男\");\n  Person a2=new Person();\n  a2.setAge(49);\n  a2.setHight(\"150\");\n  a2.setId(\"a2's id\");\n  a2.setName(\"a2's name\");\n  a2.setNames(new String[]{\"a2's id\",\"a2's name\"});\n  a2.setSex(\"女\");\n  Person a3=new Person();\n  a3.setAge(10);\n  a3.setHight(\"125\");\n  a3.setId(\"a3's id\");\n  a3.setName(\"daughter's name\");\n  a3.setNames(new String[]{\"a3's id\",\"daughter's name\"});\n  a3.setSex(\"女\");\n  ps2[0]=a1;\n  ps2[1]=a2;\n  ps2[2]=a3;\n  Family f1=new Family();\n  f1.setId(\"f1's id\");\n  f1.setAddress(\"f1's address\");\n  f1.setChildrennames(new String[]{\"p1's name\",\"p2's name\",\"p3's name\"});\n  f1.setIncome(100000000);\n  f1.setMaster(p1);\n  f1.setName(\"person1's home\");\n  f1.setPs(ps);\n  f1.setTest(1994.08);\n  Family f2=new Family();\n  f2.setId(\"f2's id\");\n  f2.setAddress(\"f2's address\");\n  f2.setChildrennames(new String[]{\"pp1's name\",\"pp2's name\",\"pp3's name\"});\n  f2.setIncome(100000000);\n  f2.setMaster(pp1);\n  f2.setName(\"personpp1's home\");\n  f2.setPs(ps1);\n  Family f3=new Family();\n  f3.setId(\"f3's id\");\n  f3.setAddress(\"f3's address\");\n  f3.setChildrennames(new String[]{\"a1's name\",\"a2's name\",\"a3's name\"});\n  f3.setIncome(100000000);\n  f3.setMaster(a1);\n  f3.setName(\"a1's home\");\n  f3.setPs(ps2);\n  f3.setTest(1995.08);\n  Family[] fs=new Family[3];\n  fs[0]=f1;\n  fs[1]=f2;\n  fs[2]=f3;\n  System.out.println(JSON.VERSION);\n  String sfs=JSON.toJSONString(fs,true);\n  Assert.assertSame(fs[0].getMaster(),fs[0].getPs()[0]);\n  System.out.println(sfs);\n{\n    Family[] result=JSON.parseObject(sfs,Family[].class);\n    Assert.assertSame(result[0].getMaster(),result[0].getPs()[0]);\n    Assert.assertSame(result[1].getMaster(),result[1].getPs()[0]);\n    Assert.assertSame(result[2].getMaster(),result[2].getPs()[0]);\n  }\n{\n    JSONArray array=JSON.parseArray(sfs);\n    for (int i=0; i < array.size(); ++i) {\n      JSONObject jsonObj=array.getJSONObject(i);\n      Assert.assertSame(jsonObj.get(\"master\"),jsonObj.getJSONArray(\"ps\").get(0));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 848,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4436,
        "startLineNumber" : 12,
        "startColumnNumber" : 4,
        "endLineNumber" : 141,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void test_for_zhuel() throws Exception {\n  Person[] ps=new Person[3];\n  Person p1=new Person();\n  p1.setAge(50);\n  p1.setHight(\"170\");\n  p1.setId(\"p1's id\");\n  p1.setName(\"person1's name\");\n  p1.setNames(new String[]{\"p1's id\",\"person1's name\"});\n  p1.setSex(\"男\");\n  Person p2=new Person();\n  p2.setAge(48);\n  p2.setHight(\"155\");\n  p2.setId(\"p2's id\");\n  p2.setName(\"person2's name\");\n  p2.setNames(new String[]{\"p2's id\",\"person2's name\"});\n  p2.setSex(\"女\");\n  Person p3=new Person();\n  p3.setAge(10);\n  p3.setHight(\"120\");\n  p3.setId(\"p3's id \");\n  p3.setName(\"son's name\");\n  p3.setNames(new String[]{\"p3's id \",\"son's name\"});\n  p3.setSex(\"男\");\n  ps[0]=p1;\n  ps[1]=p2;\n  ps[2]=p3;\n  Person[] ps1=new Person[3];\n  Person pp1=new Person();\n  pp1.setAge(52);\n  pp1.setHight(\"170\");\n  pp1.setId(\"pp1's id\");\n  pp1.setName(\"personpp1's name\");\n  pp1.setNames(new String[]{\"pp1's id\",\"personpp1's name\"});\n  pp1.setSex(\"男\");\n  Person pp2=new Person();\n  pp2.setAge(49);\n  pp2.setHight(\"150\");\n  pp2.setId(\"pp2's id\");\n  pp2.setName(\"personpp2's name\");\n  pp2.setNames(new String[]{\"pp2's id\",\"personpp2's name\"});\n  pp2.setSex(\"女\");\n  Person pp3=new Person();\n  pp3.setAge(10);\n  pp3.setHight(\"125\");\n  pp3.setId(\"pp3's id\");\n  pp3.setName(\"daughter's name\");\n  pp3.setNames(new String[]{\"pp3's id\",\"daughter's name\"});\n  pp3.setSex(\"女\");\n  ps1[0]=pp1;\n  ps1[1]=pp2;\n  ps1[2]=pp3;\n  Person[] ps2=new Person[3];\n  Person a1=new Person();\n  a1.setAge(52);\n  a1.setHight(\"170\");\n  a1.setId(\"a1's id\");\n  a1.setName(\"a1's name\");\n  a1.setNames(new String[]{\"a1's id\",\"a1's name\"});\n  a1.setSex(\"男\");\n  Person a2=new Person();\n  a2.setAge(49);\n  a2.setHight(\"150\");\n  a2.setId(\"a2's id\");\n  a2.setName(\"a2's name\");\n  a2.setNames(new String[]{\"a2's id\",\"a2's name\"});\n  a2.setSex(\"女\");\n  Person a3=new Person();\n  a3.setAge(10);\n  a3.setHight(\"125\");\n  a3.setId(\"a3's id\");\n  a3.setName(\"daughter's name\");\n  a3.setNames(new String[]{\"a3's id\",\"daughter's name\"});\n  a3.setSex(\"女\");\n  ps2[0]=a1;\n  ps2[1]=a2;\n  ps2[2]=a3;\n  Family f1=new Family();\n  f1.setId(\"f1's id\");\n  f1.setAddress(\"f1's address\");\n  f1.setChildrennames(new String[]{\"p1's name\",\"p2's name\",\"p3's name\"});\n  f1.setIncome(100000000);\n  f1.setMaster(p1);\n  f1.setName(\"person1's home\");\n  f1.setPs(ps);\n  f1.setTest(1994.08);\n  Family f2=new Family();\n  f2.setId(\"f2's id\");\n  f2.setAddress(\"f2's address\");\n  f2.setChildrennames(new String[]{\"pp1's name\",\"pp2's name\",\"pp3's name\"});\n  f2.setIncome(100000000);\n  f2.setMaster(pp1);\n  f2.setName(\"personpp1's home\");\n  f2.setPs(ps1);\n  Family f3=new Family();\n  f3.setId(\"f3's id\");\n  f3.setAddress(\"f3's address\");\n  f3.setChildrennames(new String[]{\"a1's name\",\"a2's name\",\"a3's name\"});\n  f3.setIncome(100000000);\n  f3.setMaster(a1);\n  f3.setName(\"a1's home\");\n  f3.setPs(ps2);\n  f3.setTest(1995.08);\n  Family[] fs=new Family[3];\n  fs[0]=f1;\n  fs[1]=f2;\n  fs[2]=f3;\n  System.out.println(JSON.VERSION);\n  String sfs=JSON.toJSONString(fs,true);\n  Assert.assertSame(fs[0].getMaster(),fs[0].getPs()[0]);\n  System.out.println(sfs);\n{\n    Family[] result=JSON.parseObject(sfs,Family[].class);\n    Assert.assertSame(result[0].getMaster(),result[0].getPs()[0]);\n    Assert.assertSame(result[1].getMaster(),result[1].getPs()[0]);\n    Assert.assertSame(result[2].getMaster(),result[2].getPs()[0]);\n  }\n{\n    JSONArray array=JSON.parseArray(sfs);\n    for (int i=0; i < array.size(); ++i) {\n      JSONObject jsonObj=array.getJSONObject(i);\n      Assert.assertSame(jsonObj.get(\"master\"),jsonObj.getJSONArray(\"ps\").get(0));\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 854,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 94,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 84
      },
      "nodeContext" : "f1.setChildrennames(new String[]{\"p1's name\",\"p2's name\",\"p3's name\"});\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 94,
    "startColumnNumber" : 56,
    "endLineNumber" : 94,
    "endColumnNumber" : 67
  } ],
  "layoutRelationDataList" : [ ]
}