{
  "id" : 128,
  "expression" : "inChannel.read()",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/extensions-core/multi-stage-query/src/main/java/org/apache/druid/msq/indexing/SegmentGeneratorFrameProcessor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "inChannel.read()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 162,
      "startColumnNumber" : 15,
      "endLineNumber" : 162,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 162,
        "startColumnNumber" : 6,
        "endLineNumber" : 162,
        "endColumnNumber" : 32
      },
      "nodeContext" : "addFrame(inChannel.read())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 162,
        "startColumnNumber" : 6,
        "endLineNumber" : 162,
        "endColumnNumber" : 33
      },
      "nodeContext" : "addFrame(inChannel.read());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 246,
        "startLineNumber" : 157,
        "startColumnNumber" : 11,
        "endLineNumber" : 164,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (appenderator.getSegments().isEmpty()) {\n    log.debug(\"Received first frame for segment [%s].\",segmentIdWithShardSpec.asSegmentId());\n  }\n  addFrame(inChannel.read());\n  return ReturnOrAwait.awaitAll(1);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1416,
        "startLineNumber" : 131,
        "startColumnNumber" : 4,
        "endLineNumber" : 164,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (inChannel.isFinished()) {\n  if (rowsWritten == 0) {\n    log.debug(\"Finished reading. No data for segment [%s], skipping.\",segmentIdWithShardSpec.asSegmentId());\n    return ReturnOrAwait.returnObject(null);\n  }\n else {\n    log.debug(\"Finished reading. Pushing segment [%s].\",segmentIdWithShardSpec.asSegmentId());\n    final ListenableFuture<SegmentsAndCommitMetadata> pushFuture=appenderator.push(Collections.singletonList(segmentIdWithShardSpec),null,false);\n    final SegmentsAndCommitMetadata metadata;\n    try {\n      metadata=FutureUtils.get(pushFuture,true);\n    }\n catch (    ExecutionException e) {\n      throw new RuntimeException(e.getCause());\n    }\n    appenderator.clear();\n    log.debug(\"Finished work for segment [%s].\",segmentIdWithShardSpec.asSegmentId());\n    return ReturnOrAwait.returnObject(Iterables.getOnlyElement(metadata.getSegments()));\n  }\n}\n else {\n  if (appenderator.getSegments().isEmpty()) {\n    log.debug(\"Received first frame for segment [%s].\",segmentIdWithShardSpec.asSegmentId());\n  }\n  addFrame(inChannel.read());\n  return ReturnOrAwait.awaitAll(1);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 128,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1692,
        "startLineNumber" : 120,
        "startColumnNumber" : 2,
        "endLineNumber" : 165,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (firstRun) {\n    log.debug(\"Starting job for segment [%s].\",segmentIdWithShardSpec.asSegmentId());\n    appenderator.startJob();\n    firstRun=false;\n  }\n  if (readableInputs.isEmpty()) {\n    return ReturnOrAwait.awaitAll(1);\n  }\n  if (inChannel.isFinished()) {\n    if (rowsWritten == 0) {\n      log.debug(\"Finished reading. No data for segment [%s], skipping.\",segmentIdWithShardSpec.asSegmentId());\n      return ReturnOrAwait.returnObject(null);\n    }\n else {\n      log.debug(\"Finished reading. Pushing segment [%s].\",segmentIdWithShardSpec.asSegmentId());\n      final ListenableFuture<SegmentsAndCommitMetadata> pushFuture=appenderator.push(Collections.singletonList(segmentIdWithShardSpec),null,false);\n      final SegmentsAndCommitMetadata metadata;\n      try {\n        metadata=FutureUtils.get(pushFuture,true);\n      }\n catch (      ExecutionException e) {\n        throw new RuntimeException(e.getCause());\n      }\n      appenderator.clear();\n      log.debug(\"Finished work for segment [%s].\",segmentIdWithShardSpec.asSegmentId());\n      return ReturnOrAwait.returnObject(Iterables.getOnlyElement(metadata.getSegments()));\n    }\n  }\n else {\n    if (appenderator.getSegments().isEmpty()) {\n      log.debug(\"Received first frame for segment [%s].\",segmentIdWithShardSpec.asSegmentId());\n    }\n    addFrame(inChannel.read());\n    return ReturnOrAwait.awaitAll(1);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 158,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1816,
        "startLineNumber" : 118,
        "startColumnNumber" : 2,
        "endLineNumber" : 165,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public ReturnOrAwait<DataSegment> runIncrementally(final IntSet readableInputs) throws InterruptedException {\n  if (firstRun) {\n    log.debug(\"Starting job for segment [%s].\",segmentIdWithShardSpec.asSegmentId());\n    appenderator.startJob();\n    firstRun=false;\n  }\n  if (readableInputs.isEmpty()) {\n    return ReturnOrAwait.awaitAll(1);\n  }\n  if (inChannel.isFinished()) {\n    if (rowsWritten == 0) {\n      log.debug(\"Finished reading. No data for segment [%s], skipping.\",segmentIdWithShardSpec.asSegmentId());\n      return ReturnOrAwait.returnObject(null);\n    }\n else {\n      log.debug(\"Finished reading. Pushing segment [%s].\",segmentIdWithShardSpec.asSegmentId());\n      final ListenableFuture<SegmentsAndCommitMetadata> pushFuture=appenderator.push(Collections.singletonList(segmentIdWithShardSpec),null,false);\n      final SegmentsAndCommitMetadata metadata;\n      try {\n        metadata=FutureUtils.get(pushFuture,true);\n      }\n catch (      ExecutionException e) {\n        throw new RuntimeException(e.getCause());\n      }\n      appenderator.clear();\n      log.debug(\"Finished work for segment [%s].\",segmentIdWithShardSpec.asSegmentId());\n      return ReturnOrAwait.returnObject(Iterables.getOnlyElement(metadata.getSegments()));\n    }\n  }\n else {\n    if (appenderator.getSegments().isEmpty()) {\n      log.debug(\"Received first frame for segment [%s].\",segmentIdWithShardSpec.asSegmentId());\n    }\n    addFrame(inChannel.read());\n    return ReturnOrAwait.awaitAll(1);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 175,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 162,
        "startColumnNumber" : 6,
        "endLineNumber" : 162,
        "endColumnNumber" : 33
      },
      "nodeContext" : "addFrame(inChannel.read());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "org.apache.druid.frame.Frame"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 162,
    "startColumnNumber" : 15,
    "endLineNumber" : 162,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ ]
}