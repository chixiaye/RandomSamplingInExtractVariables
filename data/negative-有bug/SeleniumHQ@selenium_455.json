{
  "id" : 455,
  "expression" : "jsonInput",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/server/src/org/openqa/selenium/remote/server/xdrpc/CrossDomainRpcLoader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "jsonInput",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 65,
      "startColumnNumber" : 33,
      "endLineNumber" : 65,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 65,
        "startColumnNumber" : 33,
        "endLineNumber" : 65,
        "endColumnNumber" : 57
      },
      "nodeContext" : "jsonInput.read(MAP_TYPE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 65,
        "startColumnNumber" : 26,
        "endLineNumber" : 65,
        "endColumnNumber" : 57
      },
      "nodeContext" : "read=jsonInput.read(MAP_TYPE)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 65,
        "startColumnNumber" : 6,
        "endLineNumber" : 65,
        "endColumnNumber" : 58
      },
      "nodeContext" : "Map<String,Object> read=jsonInput.read(MAP_TYPE);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 217,
        "startLineNumber" : 64,
        "startColumnNumber" : 53,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<String,Object> read=jsonInput.read(MAP_TYPE);\n  return new CrossDomainRpc(getField(read,Field.METHOD),getField(read,Field.PATH),getField(read,Field.DATA));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 518,
        "startLineNumber" : 62,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try (InputStream in=request.getInputStream();Reader reader=new InputStreamReader(in,encoding);JsonInput jsonInput=json.newInput(reader)){\n  Map<String,Object> read=jsonInput.read(MAP_TYPE);\n  return new CrossDomainRpc(getField(read,Field.METHOD),getField(read,Field.PATH),getField(read,Field.DATA));\n}\n catch (JsonException e) {\n  throw new IllegalArgumentException(\"Failed to parse JSON request: \" + e.getMessage(),e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 81,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 815,
        "startLineNumber" : 52,
        "startColumnNumber" : 79,
        "endLineNumber" : 75,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Charset encoding;\n  try {\n    String enc=request.getCharacterEncoding();\n    encoding=Charset.forName(enc);\n  }\n catch (  IllegalArgumentException|NullPointerException e) {\n    encoding=UTF_8;\n  }\n  try (InputStream in=request.getInputStream();Reader reader=new InputStreamReader(in,encoding);JsonInput jsonInput=json.newInput(reader)){\n    Map<String,Object> read=jsonInput.read(MAP_TYPE);\n    return new CrossDomainRpc(getField(read,Field.METHOD),getField(read,Field.PATH),getField(read,Field.DATA));\n  }\n catch (  JsonException e) {\n    throw new IllegalArgumentException(\"Failed to parse JSON request: \" + e.getMessage(),e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 117,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1188,
        "startLineNumber" : 43,
        "startColumnNumber" : 2,
        "endLineNumber" : 75,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Parses the request for a CrossDomainRpc.\n * @param request The request to parse.\n * @return The parsed RPC.\n * @throws IOException If an error occurs reading from the request.\n * @throws IllegalArgumentException If an occurs while parsing the requestdata.\n */\npublic CrossDomainRpc loadRpc(HttpServletRequest request) throws IOException {\n  Charset encoding;\n  try {\n    String enc=request.getCharacterEncoding();\n    encoding=Charset.forName(enc);\n  }\n catch (  IllegalArgumentException|NullPointerException e) {\n    encoding=UTF_8;\n  }\n  try (InputStream in=request.getInputStream();Reader reader=new InputStreamReader(in,encoding);JsonInput jsonInput=json.newInput(reader)){\n    Map<String,Object> read=jsonInput.read(MAP_TYPE);\n    return new CrossDomainRpc(getField(read,Field.METHOD),getField(read,Field.PATH),getField(read,Field.DATA));\n  }\n catch (  JsonException e) {\n    throw new IllegalArgumentException(\"Failed to parse JSON request: \" + e.getMessage(),e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 129,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 65,
        "startColumnNumber" : 6,
        "endLineNumber" : 65,
        "endColumnNumber" : 58
      },
      "nodeContext" : "Map<String,Object> read=jsonInput.read(MAP_TYPE);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.openqa.selenium.json.JsonInput"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 65,
    "startColumnNumber" : 33,
    "endLineNumber" : 65,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ ]
}