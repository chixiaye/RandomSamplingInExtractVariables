{
  "id" : 217,
  "expression" : "\"Invalid GeoPackage data\"",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.ext.sqlite/src/org/jkiss/dbeaver/ext/sqlite/model/data/SQLiteGeometryValueHandler.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Invalid GeoPackage data\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 76,
      "startColumnNumber" : 26,
      "endLineNumber" : 76,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 76,
        "startColumnNumber" : 16,
        "endLineNumber" : 76,
        "endColumnNumber" : 52
      },
      "nodeContext" : "log.debug(\"Invalid GeoPackage data\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 76,
        "startColumnNumber" : 16,
        "endLineNumber" : 76,
        "endColumnNumber" : 53
      },
      "nodeContext" : "log.debug(\"Invalid GeoPackage data\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 75,
        "startColumnNumber" : 60,
        "endLineNumber" : 78,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  log.debug(\"Invalid GeoPackage data\");\n  return object;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 148,
        "startLineNumber" : 75,
        "startColumnNumber" : 12,
        "endLineNumber" : 78,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (buffer.get() != 'G' || buffer.get() != 'P') {\n  log.debug(\"Invalid GeoPackage data\");\n  return object;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1860,
        "startLineNumber" : 69,
        "startColumnNumber" : 38,
        "endLineNumber" : 122,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final byte[] bytes=(byte[])object;\n  final ByteBuffer buffer=ByteBuffer.wrap(bytes);\n  if (buffer.get() != 'G' || buffer.get() != 'P') {\n    log.debug(\"Invalid GeoPackage data\");\n    return object;\n  }\n  final byte version=buffer.get();\n  if (version != 0) {\n    log.debug(\"Invalid GeoPackage version: \" + version);\n    return object;\n  }\n  final byte flags=buffer.get();\n  if (CommonUtils.isBitSet(flags,1)) {\n    buffer.order(ByteOrder.LITTLE_ENDIAN);\n  }\n  final int srsId=buffer.getInt();\nswitch ((byte)((flags >> 1) & 0b111)) {\ncase 1:    buffer.position(buffer.position() + 32);\n  break;\ncase 2:case 3:buffer.position(buffer.position() + 48);\nbreak;\ncase 4:buffer.position(buffer.position() + 64);\nbreak;\ndefault:break;\n}\nbyte[] wkb=new byte[bytes.length - buffer.position()];\nSystem.arraycopy(bytes,buffer.position(),wkb,0,wkb.length);\ntry {\nGeometryFactory geometryFactory=new GeometryFactory(new PrecisionModel(),srsId);\nWKBReader wkbReader=new WKBReader(geometryFactory);\nGeometry geometry=wkbReader.read(new ByteArrayInStream(wkb));\nreturn new DBGeometry(geometry,srsId);\n}\n catch (Exception e) {\nlog.debug(\"Error reading GeoPackage WKB\",e);\nreturn object;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 230,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1890,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 122,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (object instanceof byte[]) {\n  final byte[] bytes=(byte[])object;\n  final ByteBuffer buffer=ByteBuffer.wrap(bytes);\n  if (buffer.get() != 'G' || buffer.get() != 'P') {\n    log.debug(\"Invalid GeoPackage data\");\n    return object;\n  }\n  final byte version=buffer.get();\n  if (version != 0) {\n    log.debug(\"Invalid GeoPackage version: \" + version);\n    return object;\n  }\n  final byte flags=buffer.get();\n  if (CommonUtils.isBitSet(flags,1)) {\n    buffer.order(ByteOrder.LITTLE_ENDIAN);\n  }\n  final int srsId=buffer.getInt();\nswitch ((byte)((flags >> 1) & 0b111)) {\ncase 1:    buffer.position(buffer.position() + 32);\n  break;\ncase 2:case 3:buffer.position(buffer.position() + 48);\nbreak;\ncase 4:buffer.position(buffer.position() + 64);\nbreak;\ndefault:break;\n}\nbyte[] wkb=new byte[bytes.length - buffer.position()];\nSystem.arraycopy(bytes,buffer.position(),wkb,0,wkb.length);\ntry {\nGeometryFactory geometryFactory=new GeometryFactory(new PrecisionModel(),srsId);\nWKBReader wkbReader=new WKBReader(geometryFactory);\nGeometry geometry=wkbReader.read(new ByteArrayInStream(wkb));\nreturn new DBGeometry(geometry,srsId);\n}\n catch (Exception e) {\nlog.debug(\"Error reading GeoPackage WKB\",e);\nreturn object;\n}\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 236,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2008,
        "startLineNumber" : 64,
        "startColumnNumber" : 158,
        "endLineNumber" : 125,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (object == null) {\n    return new DBGeometry();\n  }\n  if (object instanceof byte[]) {\n    final byte[] bytes=(byte[])object;\n    final ByteBuffer buffer=ByteBuffer.wrap(bytes);\n    if (buffer.get() != 'G' || buffer.get() != 'P') {\n      log.debug(\"Invalid GeoPackage data\");\n      return object;\n    }\n    final byte version=buffer.get();\n    if (version != 0) {\n      log.debug(\"Invalid GeoPackage version: \" + version);\n      return object;\n    }\n    final byte flags=buffer.get();\n    if (CommonUtils.isBitSet(flags,1)) {\n      buffer.order(ByteOrder.LITTLE_ENDIAN);\n    }\n    final int srsId=buffer.getInt();\nswitch ((byte)((flags >> 1) & 0b111)) {\ncase 1:      buffer.position(buffer.position() + 32);\n    break;\ncase 2:case 3:  buffer.position(buffer.position() + 48);\nbreak;\ncase 4:buffer.position(buffer.position() + 64);\nbreak;\ndefault:break;\n}\nbyte[] wkb=new byte[bytes.length - buffer.position()];\nSystem.arraycopy(bytes,buffer.position(),wkb,0,wkb.length);\ntry {\nGeometryFactory geometryFactory=new GeometryFactory(new PrecisionModel(),srsId);\nWKBReader wkbReader=new WKBReader(geometryFactory);\nGeometry geometry=wkbReader.read(new ByteArrayInStream(wkb));\nreturn new DBGeometry(geometry,srsId);\n}\n catch (Exception e) {\nlog.debug(\"Error reading GeoPackage WKB\",e);\nreturn object;\n}\n}\nreturn object;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 248,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2190,
        "startLineNumber" : 62,
        "startColumnNumber" : 4,
        "endLineNumber" : 125,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Nullable @Override public Object getValueFromObject(@NotNull DBCSession session,@NotNull DBSTypedObject type,@Nullable Object object,boolean copy,boolean validateValue){\n  if (object == null) {\n    return new DBGeometry();\n  }\n  if (object instanceof byte[]) {\n    final byte[] bytes=(byte[])object;\n    final ByteBuffer buffer=ByteBuffer.wrap(bytes);\n    if (buffer.get() != 'G' || buffer.get() != 'P') {\n      log.debug(\"Invalid GeoPackage data\");\n      return object;\n    }\n    final byte version=buffer.get();\n    if (version != 0) {\n      log.debug(\"Invalid GeoPackage version: \" + version);\n      return object;\n    }\n    final byte flags=buffer.get();\n    if (CommonUtils.isBitSet(flags,1)) {\n      buffer.order(ByteOrder.LITTLE_ENDIAN);\n    }\n    final int srsId=buffer.getInt();\nswitch ((byte)((flags >> 1) & 0b111)) {\ncase 1:      buffer.position(buffer.position() + 32);\n    break;\ncase 2:case 3:  buffer.position(buffer.position() + 48);\nbreak;\ncase 4:buffer.position(buffer.position() + 64);\nbreak;\ndefault:break;\n}\nbyte[] wkb=new byte[bytes.length - buffer.position()];\nSystem.arraycopy(bytes,buffer.position(),wkb,0,wkb.length);\ntry {\nGeometryFactory geometryFactory=new GeometryFactory(new PrecisionModel(),srsId);\nWKBReader wkbReader=new WKBReader(geometryFactory);\nGeometry geometry=wkbReader.read(new ByteArrayInStream(wkb));\nreturn new DBGeometry(geometry,srsId);\n}\n catch (Exception e) {\nlog.debug(\"Error reading GeoPackage WKB\",e);\nreturn object;\n}\n}\nreturn object;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 281,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 76,
        "startColumnNumber" : 16,
        "endLineNumber" : 76,
        "endColumnNumber" : 53
      },
      "nodeContext" : "log.debug(\"Invalid GeoPackage data\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 76,
    "startColumnNumber" : 26,
    "endLineNumber" : 76,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ ]
}