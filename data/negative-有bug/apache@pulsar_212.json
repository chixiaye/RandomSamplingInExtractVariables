{
  "id" : 212,
  "expression" : "metadata",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-broker/src/main/java/org/apache/pulsar/broker/service/schema/BookkeeperSchemaStorage.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "metadata",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 559,
      "startColumnNumber" : 29,
      "endLineNumber" : 559,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 718,
        "startLineNumber" : 547,
        "startColumnNumber" : 12,
        "endLineNumber" : 559,
        "endColumnNumber" : 38
      },
      "nodeContext" : "bookKeeper.asyncCreateLedger(config.getManagedLedgerDefaultEnsembleSize(),config.getManagedLedgerDefaultWriteQuorum(),config.getManagedLedgerDefaultAckQuorum(),BookKeeper.DigestType.fromApiDigestType(config.getManagedLedgerDigestType()),LedgerPassword,(rc,handle,ctx) -> {\n  if (rc != BKException.Code.OK) {\n    future.completeExceptionally(bkException(\"Failed to create ledger\",rc,-1,-1));\n  }\n else {\n    future.complete(handle);\n  }\n}\n,null,metadata)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 58,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 719,
        "startLineNumber" : 547,
        "startColumnNumber" : 12,
        "endLineNumber" : 559,
        "endColumnNumber" : 39
      },
      "nodeContext" : "bookKeeper.asyncCreateLedger(config.getManagedLedgerDefaultEnsembleSize(),config.getManagedLedgerDefaultWriteQuorum(),config.getManagedLedgerDefaultAckQuorum(),BookKeeper.DigestType.fromApiDigestType(config.getManagedLedgerDigestType()),LedgerPassword,(rc,handle,ctx) -> {\n  if (rc != BKException.Code.OK) {\n    future.completeExceptionally(bkException(\"Failed to create ledger\",rc,-1,-1));\n  }\n else {\n    future.complete(handle);\n  }\n}\n,null,metadata);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 59,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 743,
        "startLineNumber" : 546,
        "startColumnNumber" : 12,
        "endLineNumber" : 560,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  bookKeeper.asyncCreateLedger(config.getManagedLedgerDefaultEnsembleSize(),config.getManagedLedgerDefaultWriteQuorum(),config.getManagedLedgerDefaultAckQuorum(),BookKeeper.DigestType.fromApiDigestType(config.getManagedLedgerDigestType()),LedgerPassword,(rc,handle,ctx) -> {\n    if (rc != BKException.Code.OK) {\n      future.completeExceptionally(bkException(\"Failed to create ledger\",rc,-1,-1));\n    }\n else {\n      future.complete(handle);\n    }\n  }\n,null,metadata);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 60,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 927,
        "startLineNumber" : 546,
        "startColumnNumber" : 8,
        "endLineNumber" : 563,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  bookKeeper.asyncCreateLedger(config.getManagedLedgerDefaultEnsembleSize(),config.getManagedLedgerDefaultWriteQuorum(),config.getManagedLedgerDefaultAckQuorum(),BookKeeper.DigestType.fromApiDigestType(config.getManagedLedgerDigestType()),LedgerPassword,(rc,handle,ctx) -> {\n    if (rc != BKException.Code.OK) {\n      future.completeExceptionally(bkException(\"Failed to create ledger\",rc,-1,-1));\n    }\n else {\n      future.complete(handle);\n    }\n  }\n,null,metadata);\n}\n catch (Throwable t) {\n  log.error(\"[{}] Encountered unexpected error when creating schema ledger\",schemaId,t);\n  return FutureUtil.failedFuture(t);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 79,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1141,
        "startLineNumber" : 543,
        "startColumnNumber" : 74,
        "endLineNumber" : 565,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<String,byte[]> metadata=LedgerMetadataUtils.buildMetadataForSchema(schemaId);\n  final CompletableFuture<LedgerHandle> future=new CompletableFuture<>();\n  try {\n    bookKeeper.asyncCreateLedger(config.getManagedLedgerDefaultEnsembleSize(),config.getManagedLedgerDefaultWriteQuorum(),config.getManagedLedgerDefaultAckQuorum(),BookKeeper.DigestType.fromApiDigestType(config.getManagedLedgerDigestType()),LedgerPassword,(rc,handle,ctx) -> {\n      if (rc != BKException.Code.OK) {\n        future.completeExceptionally(bkException(\"Failed to create ledger\",rc,-1,-1));\n      }\n else {\n        future.complete(handle);\n      }\n    }\n,null,metadata);\n  }\n catch (  Throwable t) {\n    log.error(\"[{}] Encountered unexpected error when creating schema ledger\",schemaId,t);\n    return FutureUtil.failedFuture(t);\n  }\n  return future;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1224,
        "startLineNumber" : 542,
        "startColumnNumber" : 4,
        "endLineNumber" : 565,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@NotNull private CompletableFuture<LedgerHandle> createLedger(String schemaId){\n  Map<String,byte[]> metadata=LedgerMetadataUtils.buildMetadataForSchema(schemaId);\n  final CompletableFuture<LedgerHandle> future=new CompletableFuture<>();\n  try {\n    bookKeeper.asyncCreateLedger(config.getManagedLedgerDefaultEnsembleSize(),config.getManagedLedgerDefaultWriteQuorum(),config.getManagedLedgerDefaultAckQuorum(),BookKeeper.DigestType.fromApiDigestType(config.getManagedLedgerDigestType()),LedgerPassword,(rc,handle,ctx) -> {\n      if (rc != BKException.Code.OK) {\n        future.completeExceptionally(bkException(\"Failed to create ledger\",rc,-1,-1));\n      }\n else {\n        future.complete(handle);\n      }\n    }\n,null,metadata);\n  }\n catch (  Throwable t) {\n    log.error(\"[{}] Encountered unexpected error when creating schema ledger\",schemaId,t);\n    return FutureUtil.failedFuture(t);\n  }\n  return future;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 718,
        "startLineNumber" : 547,
        "startColumnNumber" : 12,
        "endLineNumber" : 559,
        "endColumnNumber" : 38
      },
      "nodeContext" : "bookKeeper.asyncCreateLedger(config.getManagedLedgerDefaultEnsembleSize(),config.getManagedLedgerDefaultWriteQuorum(),config.getManagedLedgerDefaultAckQuorum(),BookKeeper.DigestType.fromApiDigestType(config.getManagedLedgerDigestType()),LedgerPassword,(rc,handle,ctx) -> {\n  if (rc != BKException.Code.OK) {\n    future.completeExceptionally(bkException(\"Failed to create ledger\",rc,-1,-1));\n  }\n else {\n    future.complete(handle);\n  }\n}\n,null,metadata)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 58,
      "astHeight" : 10
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,byte[]>"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 559,
    "startColumnNumber" : 29,
    "endLineNumber" : 559,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ ]
}