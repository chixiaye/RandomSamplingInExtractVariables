{
  "id" : 108,
  "expression" : "health.getDetails().get(\"cluster_size\")",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-project/spring-boot-actuator/src/test/java/org/springframework/boot/actuate/redis/RedisHealthIndicatorTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "health.getDetails().get(\"cluster_size\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 39,
      "startLineNumber" : 100,
      "startColumnNumber" : 13,
      "endLineNumber" : 100,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 100,
        "startColumnNumber" : 2,
        "endLineNumber" : 100,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertThat(health.getDetails().get(\"cluster_size\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 100,
        "startColumnNumber" : 2,
        "endLineNumber" : 100,
        "endColumnNumber" : 67
      },
      "nodeContext" : "assertThat(health.getDetails().get(\"cluster_size\")).isEqualTo(4L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 100,
        "startColumnNumber" : 2,
        "endLineNumber" : 100,
        "endColumnNumber" : 68
      },
      "nodeContext" : "assertThat(health.getDetails().get(\"cluster_size\")).isEqualTo(4L);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1260,
        "startLineNumber" : 81,
        "startColumnNumber" : 49,
        "endLineNumber" : 104,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Properties clusterProperties=new Properties();\n  clusterProperties.setProperty(\"cluster_size\",\"4\");\n  clusterProperties.setProperty(\"cluster_slots_ok\",\"4\");\n  clusterProperties.setProperty(\"cluster_slots_fail\",\"0\");\n  List<RedisClusterNode> redisMasterNodes=Arrays.asList(new RedisClusterNode(\"127.0.0.1\",7001),new RedisClusterNode(\"127.0.0.2\",7001));\n  RedisClusterConnection redisConnection=mock(RedisClusterConnection.class);\n  given(redisConnection.clusterGetNodes()).willReturn(redisMasterNodes);\n  given(redisConnection.clusterGetClusterInfo()).willReturn(new ClusterInfo(clusterProperties));\n  RedisConnectionFactory redisConnectionFactory=mock(RedisConnectionFactory.class);\n  given(redisConnectionFactory.getConnection()).willReturn(redisConnection);\n  RedisHealthIndicator healthIndicator=new RedisHealthIndicator(redisConnectionFactory);\n  Health health=healthIndicator.health();\n  assertThat(health.getStatus()).isEqualTo(Status.UP);\n  assertThat(health.getDetails().get(\"cluster_size\")).isEqualTo(4L);\n  assertThat(health.getDetails().get(\"slots_up\")).isEqualTo(4L);\n  assertThat(health.getDetails().get(\"slots_fail\")).isEqualTo(0L);\n  verify(redisConnectionFactory,atLeastOnce()).getConnection();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 170,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1315,
        "startLineNumber" : 80,
        "startColumnNumber" : 1,
        "endLineNumber" : 104,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void redisClusterIsUp() throws Exception {\n  Properties clusterProperties=new Properties();\n  clusterProperties.setProperty(\"cluster_size\",\"4\");\n  clusterProperties.setProperty(\"cluster_slots_ok\",\"4\");\n  clusterProperties.setProperty(\"cluster_slots_fail\",\"0\");\n  List<RedisClusterNode> redisMasterNodes=Arrays.asList(new RedisClusterNode(\"127.0.0.1\",7001),new RedisClusterNode(\"127.0.0.2\",7001));\n  RedisClusterConnection redisConnection=mock(RedisClusterConnection.class);\n  given(redisConnection.clusterGetNodes()).willReturn(redisMasterNodes);\n  given(redisConnection.clusterGetClusterInfo()).willReturn(new ClusterInfo(clusterProperties));\n  RedisConnectionFactory redisConnectionFactory=mock(RedisConnectionFactory.class);\n  given(redisConnectionFactory.getConnection()).willReturn(redisConnection);\n  RedisHealthIndicator healthIndicator=new RedisHealthIndicator(redisConnectionFactory);\n  Health health=healthIndicator.health();\n  assertThat(health.getStatus()).isEqualTo(Status.UP);\n  assertThat(health.getDetails().get(\"cluster_size\")).isEqualTo(4L);\n  assertThat(health.getDetails().get(\"slots_up\")).isEqualTo(4L);\n  assertThat(health.getDetails().get(\"slots_fail\")).isEqualTo(0L);\n  verify(redisConnectionFactory,atLeastOnce()).getConnection();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 178,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 100,
        "startColumnNumber" : 2,
        "endLineNumber" : 100,
        "endColumnNumber" : 68
      },
      "nodeContext" : "assertThat(health.getDetails().get(\"cluster_size\")).isEqualTo(4L);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 5,
    "type" : "java.lang.Object"
  } ],
  "positionList" : [ {
    "charLength" : 39,
    "startLineNumber" : 100,
    "startColumnNumber" : 13,
    "endLineNumber" : 100,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}