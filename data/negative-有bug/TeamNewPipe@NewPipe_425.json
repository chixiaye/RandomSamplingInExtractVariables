{
  "id" : 425,
  "expression" : "e",
  "projectName" : "TeamNewPipe@NewPipe",
  "commitID" : "d7574973e97fa7a3a21aa59967311f6091941830",
  "filePath" : "/app/src/main/java/org/schabi/newpipe/local/subscription/services/ImportExportJsonHelper.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "e",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 105,
      "startColumnNumber" : 68,
      "endLineNumber" : 105,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 105,
        "startColumnNumber" : 18,
        "endLineNumber" : 105,
        "endColumnNumber" : 70
      },
      "nodeContext" : "new InvalidSourceException(\"Couldn't parse json\",e)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 105,
        "startColumnNumber" : 12,
        "endLineNumber" : 105,
        "endColumnNumber" : 71
      },
      "nodeContext" : "throw new InvalidSourceException(\"Couldn't parse json\",e);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 104,
        "startColumnNumber" : 30,
        "endLineNumber" : 106,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  throw new InvalidSourceException(\"Couldn't parse json\",e);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 104,
        "startColumnNumber" : 10,
        "endLineNumber" : 106,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (Throwable e) {\n  throw new InvalidSourceException(\"Couldn't parse json\",e);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1318,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 106,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  final JsonObject parentObject=JsonParser.object().from(in);\n  if (!parentObject.has(JSON_SUBSCRIPTIONS_ARRAY_KEY)) {\n    throw new InvalidSourceException(\"Channels array is null\");\n  }\n  final JsonArray channelsArray=parentObject.getArray(JSON_SUBSCRIPTIONS_ARRAY_KEY);\n  if (eventListener != null) {\n    eventListener.onSizeReceived(channelsArray.size());\n  }\n  for (  Object o : channelsArray) {\n    if (o instanceof JsonObject) {\n      JsonObject itemObject=(JsonObject)o;\n      int serviceId=itemObject.getInt(JSON_SERVICE_ID_KEY,0);\n      String url=itemObject.getString(JSON_URL_KEY);\n      String name=itemObject.getString(JSON_NAME_KEY);\n      if (url != null && name != null && !url.isEmpty() && !name.isEmpty()) {\n        channels.add(new SubscriptionItem(serviceId,url,name));\n        if (eventListener != null) {\n          eventListener.onItemCompleted(name);\n        }\n      }\n    }\n  }\n}\n catch (Throwable e) {\n  throw new InvalidSourceException(\"Couldn't parse json\",e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 148,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1528,
        "startLineNumber" : 69,
        "startColumnNumber" : 42,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (in == null) {\n    throw new InvalidSourceException(\"input is null\");\n  }\n  final List<SubscriptionItem> channels=new ArrayList<>();\n  try {\n    final JsonObject parentObject=JsonParser.object().from(in);\n    if (!parentObject.has(JSON_SUBSCRIPTIONS_ARRAY_KEY)) {\n      throw new InvalidSourceException(\"Channels array is null\");\n    }\n    final JsonArray channelsArray=parentObject.getArray(JSON_SUBSCRIPTIONS_ARRAY_KEY);\n    if (eventListener != null) {\n      eventListener.onSizeReceived(channelsArray.size());\n    }\n    for (    Object o : channelsArray) {\n      if (o instanceof JsonObject) {\n        JsonObject itemObject=(JsonObject)o;\n        int serviceId=itemObject.getInt(JSON_SERVICE_ID_KEY,0);\n        String url=itemObject.getString(JSON_URL_KEY);\n        String name=itemObject.getString(JSON_NAME_KEY);\n        if (url != null && name != null && !url.isEmpty() && !name.isEmpty()) {\n          channels.add(new SubscriptionItem(serviceId,url,name));\n          if (eventListener != null) {\n            eventListener.onItemCompleted(name);\n          }\n        }\n      }\n    }\n  }\n catch (  Throwable e) {\n    throw new InvalidSourceException(\"Couldn't parse json\",e);\n  }\n  return channels;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 174,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1949,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Read a JSON source through the input stream.\n * @param in            the input stream (e.g. a file)\n * @param eventListener listener for the events generated\n * @return the parsed subscription items\n */\npublic static List<SubscriptionItem> readFrom(final InputStream in,@Nullable final ImportExportEventListener eventListener) throws InvalidSourceException {\n  if (in == null) {\n    throw new InvalidSourceException(\"input is null\");\n  }\n  final List<SubscriptionItem> channels=new ArrayList<>();\n  try {\n    final JsonObject parentObject=JsonParser.object().from(in);\n    if (!parentObject.has(JSON_SUBSCRIPTIONS_ARRAY_KEY)) {\n      throw new InvalidSourceException(\"Channels array is null\");\n    }\n    final JsonArray channelsArray=parentObject.getArray(JSON_SUBSCRIPTIONS_ARRAY_KEY);\n    if (eventListener != null) {\n      eventListener.onSizeReceived(channelsArray.size());\n    }\n    for (    Object o : channelsArray) {\n      if (o instanceof JsonObject) {\n        JsonObject itemObject=(JsonObject)o;\n        int serviceId=itemObject.getInt(JSON_SERVICE_ID_KEY,0);\n        String url=itemObject.getString(JSON_URL_KEY);\n        String name=itemObject.getString(JSON_NAME_KEY);\n        if (url != null && name != null && !url.isEmpty() && !name.isEmpty()) {\n          channels.add(new SubscriptionItem(serviceId,url,name));\n          if (eventListener != null) {\n            eventListener.onItemCompleted(name);\n          }\n        }\n      }\n    }\n  }\n catch (  Throwable e) {\n    throw new InvalidSourceException(\"Couldn't parse json\",e);\n  }\n  return channels;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 198,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 105,
        "startColumnNumber" : 12,
        "endLineNumber" : 105,
        "endColumnNumber" : 71
      },
      "nodeContext" : "throw new InvalidSourceException(\"Couldn't parse json\",e);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Throwable"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 105,
    "startColumnNumber" : 68,
    "endLineNumber" : 105,
    "endColumnNumber" : 69
  } ],
  "layoutRelationDataList" : [ ]
}