{
  "id" : 382,
  "expression" : "IPUtil.splitIPPortStr(serverAddr)",
  "projectName" : "alibaba@nacos",
  "commitID" : "4e7346db1d6657ffe07c96bebd2d348229c2812f",
  "filePath" : "/client/src/main/java/com/alibaba/nacos/client/config/impl/ServerListManager.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "IPUtil.splitIPPortStr(serverAddr)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 92,
      "startColumnNumber" : 37,
      "endLineNumber" : 92,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 92,
        "startColumnNumber" : 21,
        "endLineNumber" : 92,
        "endColumnNumber" : 70
      },
      "nodeContext" : "serverAddrArr=IPUtil.splitIPPortStr(serverAddr)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 92,
        "endColumnNumber" : 71
      },
      "nodeContext" : "String[] serverAddrArr=IPUtil.splitIPPortStr(serverAddr);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 319,
        "startLineNumber" : 91,
        "startColumnNumber" : 40,
        "endLineNumber" : 98,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String[] serverAddrArr=IPUtil.splitIPPortStr(serverAddr);\n  if (serverAddrArr.length == 1) {\n    serverAddrs.add(serverAddrArr[0] + IPUtil.IP_PORT_SPLITER + ParamUtil.getDefaultServerPort());\n  }\n else {\n    serverAddrs.add(serverAddr);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 351,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (String serverAddr : fixed) {\n  String[] serverAddrArr=IPUtil.splitIPPortStr(serverAddr);\n  if (serverAddrArr.length == 1) {\n    serverAddrs.add(serverAddrArr[0] + IPUtil.IP_PORT_SPLITER + ParamUtil.getDefaultServerPort());\n  }\n else {\n    serverAddrs.add(serverAddr);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 45,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 932,
        "startLineNumber" : 87,
        "startColumnNumber" : 67,
        "endLineNumber" : 107,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.isFixed=true;\n  this.isStarted=true;\n  List<String> serverAddrs=new ArrayList<String>();\n  for (  String serverAddr : fixed) {\n    String[] serverAddrArr=IPUtil.splitIPPortStr(serverAddr);\n    if (serverAddrArr.length == 1) {\n      serverAddrs.add(serverAddrArr[0] + IPUtil.IP_PORT_SPLITER + ParamUtil.getDefaultServerPort());\n    }\n else {\n      serverAddrs.add(serverAddr);\n    }\n  }\n  this.serverUrls=new ArrayList<String>(serverAddrs);\n  if (StringUtils.isBlank(namespace)) {\n    this.name=FIXED_NAME + \"-\" + getFixedNameSuffix(serverAddrs.toArray(new String[serverAddrs.size()]));\n  }\n else {\n    this.namespace=namespace;\n    this.name=FIXED_NAME + \"-\" + getFixedNameSuffix(serverAddrs.toArray(new String[serverAddrs.size()]))+ \"-\"+ namespace;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 995,
        "startLineNumber" : 87,
        "startColumnNumber" : 4,
        "endLineNumber" : 107,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public ServerListManager(List<String> fixed,String namespace){\n  this.isFixed=true;\n  this.isStarted=true;\n  List<String> serverAddrs=new ArrayList<String>();\n  for (  String serverAddr : fixed) {\n    String[] serverAddrArr=IPUtil.splitIPPortStr(serverAddr);\n    if (serverAddrArr.length == 1) {\n      serverAddrs.add(serverAddrArr[0] + IPUtil.IP_PORT_SPLITER + ParamUtil.getDefaultServerPort());\n    }\n else {\n      serverAddrs.add(serverAddr);\n    }\n  }\n  this.serverUrls=new ArrayList<String>(serverAddrs);\n  if (StringUtils.isBlank(namespace)) {\n    this.name=FIXED_NAME + \"-\" + getFixedNameSuffix(serverAddrs.toArray(new String[serverAddrs.size()]));\n  }\n else {\n    this.namespace=namespace;\n    this.name=FIXED_NAME + \"-\" + getFixedNameSuffix(serverAddrs.toArray(new String[serverAddrs.size()]))+ \"-\"+ namespace;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 155,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 92,
        "startColumnNumber" : 12,
        "endLineNumber" : 92,
        "endColumnNumber" : 71
      },
      "nodeContext" : "String[] serverAddrArr=IPUtil.splitIPPortStr(serverAddr);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.String[]"
  } ],
  "positionList" : [ {
    "charLength" : 33,
    "startLineNumber" : 92,
    "startColumnNumber" : 37,
    "endLineNumber" : 92,
    "endColumnNumber" : 70
  } ],
  "layoutRelationDataList" : [ ]
}