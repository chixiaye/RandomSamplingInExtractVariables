{
  "id" : 10,
  "expression" : "\"result\"",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-rpc/dubbo-rpc-api/src/test/java/org/apache/dubbo/rpc/filter/ExecuteLimitFilterTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"result\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 46,
      "startColumnNumber" : 79,
      "endLineNumber" : 46,
      "endColumnNumber" : 87
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 46,
        "startColumnNumber" : 63,
        "endLineNumber" : 46,
        "endColumnNumber" : 88
      },
      "nodeContext" : "new AppResponse(\"result\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 89
      },
      "nodeContext" : "when(invoker.invoke(any(Invocation.class))).thenReturn(new AppResponse(\"result\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 90
      },
      "nodeContext" : "when(invoker.invoke(any(Invocation.class))).thenReturn(new AppResponse(\"result\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 552,
        "startLineNumber" : 44,
        "startColumnNumber" : 60,
        "endLineNumber" : 54,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Invoker invoker=Mockito.mock(Invoker.class);\n  when(invoker.invoke(any(Invocation.class))).thenReturn(new AppResponse(\"result\"));\n  when(invoker.getUrl()).thenReturn(URL.valueOf(\"test://test:11/test?accesslog=true&group=dubbo&version=1.1\"));\n  Invocation invocation=Mockito.mock(Invocation.class);\n  when(invocation.getMethodName()).thenReturn(\"testNoExecuteLimitInvoke\");\n  Result result=executeLimitFilter.invoke(invoker,invocation);\n  Assertions.assertEquals(\"result\",result.getValue());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 618,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 54,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testNoExecuteLimitInvoke() throws Exception {\n  Invoker invoker=Mockito.mock(Invoker.class);\n  when(invoker.invoke(any(Invocation.class))).thenReturn(new AppResponse(\"result\"));\n  when(invoker.getUrl()).thenReturn(URL.valueOf(\"test://test:11/test?accesslog=true&group=dubbo&version=1.1\"));\n  Invocation invocation=Mockito.mock(Invocation.class);\n  when(invocation.getMethodName()).thenReturn(\"testNoExecuteLimitInvoke\");\n  Result result=executeLimitFilter.invoke(invoker,invocation);\n  Assertions.assertEquals(\"result\",result.getValue());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 87,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 90
      },
      "nodeContext" : "when(invoker.invoke(any(Invocation.class))).thenReturn(new AppResponse(\"result\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"result\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 53,
      "startColumnNumber" : 32,
      "endLineNumber" : 53,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 60
      },
      "nodeContext" : "Assertions.assertEquals(\"result\",result.getValue())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 61
      },
      "nodeContext" : "Assertions.assertEquals(\"result\",result.getValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 552,
        "startLineNumber" : 44,
        "startColumnNumber" : 60,
        "endLineNumber" : 54,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Invoker invoker=Mockito.mock(Invoker.class);\n  when(invoker.invoke(any(Invocation.class))).thenReturn(new AppResponse(\"result\"));\n  when(invoker.getUrl()).thenReturn(URL.valueOf(\"test://test:11/test?accesslog=true&group=dubbo&version=1.1\"));\n  Invocation invocation=Mockito.mock(Invocation.class);\n  when(invocation.getMethodName()).thenReturn(\"testNoExecuteLimitInvoke\");\n  Result result=executeLimitFilter.invoke(invoker,invocation);\n  Assertions.assertEquals(\"result\",result.getValue());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 618,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 54,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testNoExecuteLimitInvoke() throws Exception {\n  Invoker invoker=Mockito.mock(Invoker.class);\n  when(invoker.invoke(any(Invocation.class))).thenReturn(new AppResponse(\"result\"));\n  when(invoker.getUrl()).thenReturn(URL.valueOf(\"test://test:11/test?accesslog=true&group=dubbo&version=1.1\"));\n  Invocation invocation=Mockito.mock(Invocation.class);\n  when(invocation.getMethodName()).thenReturn(\"testNoExecuteLimitInvoke\");\n  Result result=executeLimitFilter.invoke(invoker,invocation);\n  Assertions.assertEquals(\"result\",result.getValue());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 87,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 61
      },
      "nodeContext" : "Assertions.assertEquals(\"result\",result.getValue());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 46,
    "startColumnNumber" : 79,
    "endLineNumber" : 46,
    "endColumnNumber" : 87
  }, {
    "charLength" : 8,
    "startLineNumber" : 53,
    "startColumnNumber" : 32,
    "endLineNumber" : 53,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}