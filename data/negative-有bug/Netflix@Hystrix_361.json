{
  "id" : 361,
  "expression" : "\"rollingCountCommandsRejected\"",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-contrib/hystrix-yammer-metrics-publisher/src/main/java/com/netflix/hystrix/contrib/yammermetricspublisher/HystrixYammerMetricsPublisherThreadPool.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"rollingCountCommandsRejected\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 118,
      "startColumnNumber" : 50,
      "endLineNumber" : 118,
      "endColumnNumber" : 80
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 118,
        "startColumnNumber" : 33,
        "endLineNumber" : 118,
        "endColumnNumber" : 81
      },
      "nodeContext" : "createMetricName(\"rollingCountCommandsRejected\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 588,
        "startLineNumber" : 118,
        "startColumnNumber" : 8,
        "endLineNumber" : 128,
        "endColumnNumber" : 10
      },
      "nodeContext" : "metricsRegistry.newGauge(createMetricName(\"rollingCountCommandsRejected\"),new Gauge<Number>(){\n  @Override public Number value(){\n    try {\n      return metrics.getRollingCount(HystrixRollingNumberEvent.THREAD_POOL_REJECTED);\n    }\n catch (    NoSuchFieldError error) {\n      logger.error(\"While publishing Yammer metrics, error looking up eventType for : rollingCountCommandsRejected.  Please check that all Hystrix versions are the same!\");\n      return 0L;\n    }\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 43,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 589,
        "startLineNumber" : 118,
        "startColumnNumber" : 8,
        "endLineNumber" : 128,
        "endColumnNumber" : 11
      },
      "nodeContext" : "metricsRegistry.newGauge(createMetricName(\"rollingCountCommandsRejected\"),new Gauge<Number>(){\n  @Override public Number value(){\n    try {\n      return metrics.getRollingCount(HystrixRollingNumberEvent.THREAD_POOL_REJECTED);\n    }\n catch (    NoSuchFieldError error) {\n      logger.error(\"While publishing Yammer metrics, error looking up eventType for : rollingCountCommandsRejected.  Please check that all Hystrix versions are the same!\");\n      return 0L;\n    }\n  }\n}\n);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 44,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4603,
        "startLineNumber" : 53,
        "startColumnNumber" : 29,
        "endLineNumber" : 179,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  metricsRegistry.newGauge(createMetricName(\"name\"),new Gauge<String>(){\n    @Override public String value(){\n      return key.name();\n    }\n  }\n);\n  metricsRegistry.newGauge(createMetricName(\"currentTime\"),new Gauge<Long>(){\n    @Override public Long value(){\n      return System.currentTimeMillis();\n    }\n  }\n);\n  metricsRegistry.newGauge(createMetricName(\"threadActiveCount\"),new Gauge<Number>(){\n    @Override public Number value(){\n      return metrics.getCurrentActiveCount();\n    }\n  }\n);\n  metricsRegistry.newGauge(createMetricName(\"completedTaskCount\"),new Gauge<Number>(){\n    @Override public Number value(){\n      return metrics.getCurrentCompletedTaskCount();\n    }\n  }\n);\n  metricsRegistry.newGauge(createMetricName(\"largestPoolSize\"),new Gauge<Number>(){\n    @Override public Number value(){\n      return metrics.getCurrentLargestPoolSize();\n    }\n  }\n);\n  metricsRegistry.newGauge(createMetricName(\"totalTaskCount\"),new Gauge<Number>(){\n    @Override public Number value(){\n      return metrics.getCurrentTaskCount();\n    }\n  }\n);\n  metricsRegistry.newGauge(createMetricName(\"queueSize\"),new Gauge<Number>(){\n    @Override public Number value(){\n      return metrics.getCurrentQueueSize();\n    }\n  }\n);\n  metricsRegistry.newGauge(createMetricName(\"rollingMaxActiveThreads\"),new Gauge<Number>(){\n    @Override public Number value(){\n      return metrics.getRollingMaxActiveThreads();\n    }\n  }\n);\n  metricsRegistry.newGauge(createMetricName(\"countThreadsExecuted\"),new Gauge<Number>(){\n    @Override public Number value(){\n      return metrics.getCumulativeCountThreadsExecuted();\n    }\n  }\n);\n  metricsRegistry.newGauge(createMetricName(\"rollingCountCommandsRejected\"),new Gauge<Number>(){\n    @Override public Number value(){\n      try {\n        return metrics.getRollingCount(HystrixRollingNumberEvent.THREAD_POOL_REJECTED);\n      }\n catch (      NoSuchFieldError error) {\n        logger.error(\"While publishing Yammer metrics, error looking up eventType for : rollingCountCommandsRejected.  Please check that all Hystrix versions are the same!\");\n        return 0L;\n      }\n    }\n  }\n);\n  metricsRegistry.newGauge(createMetricName(\"rollingCountThreadsExecuted\"),new Gauge<Number>(){\n    @Override public Number value(){\n      return metrics.getRollingCountThreadsExecuted();\n    }\n  }\n);\n  metricsRegistry.newGauge(createMetricName(\"propertyValue_corePoolSize\"),new Gauge<Number>(){\n    @Override public Number value(){\n      return properties.coreSize().get();\n    }\n  }\n);\n  metricsRegistry.newGauge(createMetricName(\"propertyValue_maximumSize\"),new Gauge<Number>(){\n    @Override public Number value(){\n      return properties.maximumSize().get();\n    }\n  }\n);\n  metricsRegistry.newGauge(createMetricName(\"propertyValue_actualMaximumSize\"),new Gauge<Number>(){\n    @Override public Number value(){\n      return properties.actualMaximumSize();\n    }\n  }\n);\n  metricsRegistry.newGauge(createMetricName(\"propertyValue_keepAliveTimeInMinutes\"),new Gauge<Number>(){\n    @Override public Number value(){\n      return properties.keepAliveTimeMinutes().get();\n    }\n  }\n);\n  metricsRegistry.newGauge(createMetricName(\"propertyValue_queueSizeRejectionThreshold\"),new Gauge<Number>(){\n    @Override public Number value(){\n      return properties.queueSizeRejectionThreshold().get();\n    }\n  }\n);\n  metricsRegistry.newGauge(createMetricName(\"propertyValue_maxQueueSize\"),new Gauge<Number>(){\n    @Override public Number value(){\n      return properties.maxQueueSize().get();\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 471,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4642,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 179,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void initialize(){\n  metricsRegistry.newGauge(createMetricName(\"name\"),new Gauge<String>(){\n    @Override public String value(){\n      return key.name();\n    }\n  }\n);\n  metricsRegistry.newGauge(createMetricName(\"currentTime\"),new Gauge<Long>(){\n    @Override public Long value(){\n      return System.currentTimeMillis();\n    }\n  }\n);\n  metricsRegistry.newGauge(createMetricName(\"threadActiveCount\"),new Gauge<Number>(){\n    @Override public Number value(){\n      return metrics.getCurrentActiveCount();\n    }\n  }\n);\n  metricsRegistry.newGauge(createMetricName(\"completedTaskCount\"),new Gauge<Number>(){\n    @Override public Number value(){\n      return metrics.getCurrentCompletedTaskCount();\n    }\n  }\n);\n  metricsRegistry.newGauge(createMetricName(\"largestPoolSize\"),new Gauge<Number>(){\n    @Override public Number value(){\n      return metrics.getCurrentLargestPoolSize();\n    }\n  }\n);\n  metricsRegistry.newGauge(createMetricName(\"totalTaskCount\"),new Gauge<Number>(){\n    @Override public Number value(){\n      return metrics.getCurrentTaskCount();\n    }\n  }\n);\n  metricsRegistry.newGauge(createMetricName(\"queueSize\"),new Gauge<Number>(){\n    @Override public Number value(){\n      return metrics.getCurrentQueueSize();\n    }\n  }\n);\n  metricsRegistry.newGauge(createMetricName(\"rollingMaxActiveThreads\"),new Gauge<Number>(){\n    @Override public Number value(){\n      return metrics.getRollingMaxActiveThreads();\n    }\n  }\n);\n  metricsRegistry.newGauge(createMetricName(\"countThreadsExecuted\"),new Gauge<Number>(){\n    @Override public Number value(){\n      return metrics.getCumulativeCountThreadsExecuted();\n    }\n  }\n);\n  metricsRegistry.newGauge(createMetricName(\"rollingCountCommandsRejected\"),new Gauge<Number>(){\n    @Override public Number value(){\n      try {\n        return metrics.getRollingCount(HystrixRollingNumberEvent.THREAD_POOL_REJECTED);\n      }\n catch (      NoSuchFieldError error) {\n        logger.error(\"While publishing Yammer metrics, error looking up eventType for : rollingCountCommandsRejected.  Please check that all Hystrix versions are the same!\");\n        return 0L;\n      }\n    }\n  }\n);\n  metricsRegistry.newGauge(createMetricName(\"rollingCountThreadsExecuted\"),new Gauge<Number>(){\n    @Override public Number value(){\n      return metrics.getRollingCountThreadsExecuted();\n    }\n  }\n);\n  metricsRegistry.newGauge(createMetricName(\"propertyValue_corePoolSize\"),new Gauge<Number>(){\n    @Override public Number value(){\n      return properties.coreSize().get();\n    }\n  }\n);\n  metricsRegistry.newGauge(createMetricName(\"propertyValue_maximumSize\"),new Gauge<Number>(){\n    @Override public Number value(){\n      return properties.maximumSize().get();\n    }\n  }\n);\n  metricsRegistry.newGauge(createMetricName(\"propertyValue_actualMaximumSize\"),new Gauge<Number>(){\n    @Override public Number value(){\n      return properties.actualMaximumSize();\n    }\n  }\n);\n  metricsRegistry.newGauge(createMetricName(\"propertyValue_keepAliveTimeInMinutes\"),new Gauge<Number>(){\n    @Override public Number value(){\n      return properties.keepAliveTimeMinutes().get();\n    }\n  }\n);\n  metricsRegistry.newGauge(createMetricName(\"propertyValue_queueSizeRejectionThreshold\"),new Gauge<Number>(){\n    @Override public Number value(){\n      return properties.queueSizeRejectionThreshold().get();\n    }\n  }\n);\n  metricsRegistry.newGauge(createMetricName(\"propertyValue_maxQueueSize\"),new Gauge<Number>(){\n    @Override public Number value(){\n      return properties.maxQueueSize().get();\n    }\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 477,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 118,
        "startColumnNumber" : 33,
        "endLineNumber" : 118,
        "endColumnNumber" : 81
      },
      "nodeContext" : "createMetricName(\"rollingCountCommandsRejected\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 30,
    "startLineNumber" : 118,
    "startColumnNumber" : 50,
    "endLineNumber" : 118,
    "endColumnNumber" : 80
  } ],
  "layoutRelationDataList" : [ ]
}