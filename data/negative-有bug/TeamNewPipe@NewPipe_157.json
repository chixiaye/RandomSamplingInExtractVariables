{
  "id" : 157,
  "expression" : "\"CREATE TABLE IF NOT EXISTS feed_group_subscription_join \" + \"(group_id INTEGER NOT NULL, subscription_id INTEGER NOT NULL, \" + \"PRIMARY KEY(group_id, subscription_id), \"+ \"FOREIGN KEY(group_id) REFERENCES feed_group(uid) \"+ \"ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED, \"+ \"FOREIGN KEY(subscription_id) REFERENCES subscriptions(uid) \"+ \"ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)\"",
  "projectName" : "TeamNewPipe@NewPipe",
  "commitID" : "d7574973e97fa7a3a21aa59967311f6091941830",
  "filePath" : "/app/src/main/java/org/schabi/newpipe/database/Migrations.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"CREATE TABLE IF NOT EXISTS feed_group_subscription_join \" + \"(group_id INTEGER NOT NULL, subscription_id INTEGER NOT NULL, \" + \"PRIMARY KEY(group_id, subscription_id), \"+ \"FOREIGN KEY(group_id) REFERENCES feed_group(uid) \"+ \"ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED, \"+ \"FOREIGN KEY(subscription_id) REFERENCES subscriptions(uid) \"+ \"ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)\"",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 551,
      "startLineNumber" : 146,
      "startColumnNumber" : 29,
      "endLineNumber" : 152,
      "endColumnNumber" : 90
    },
    "astNodeNumber" : 8,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 569,
        "startLineNumber" : 146,
        "startColumnNumber" : 12,
        "endLineNumber" : 152,
        "endColumnNumber" : 91
      },
      "nodeContext" : "database.execSQL(\"CREATE TABLE IF NOT EXISTS feed_group_subscription_join \" + \"(group_id INTEGER NOT NULL, subscription_id INTEGER NOT NULL, \" + \"PRIMARY KEY(group_id, subscription_id), \"+ \"FOREIGN KEY(group_id) REFERENCES feed_group(uid) \"+ \"ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED, \"+ \"FOREIGN KEY(subscription_id) REFERENCES subscriptions(uid) \"+ \"ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 570,
        "startLineNumber" : 146,
        "startColumnNumber" : 12,
        "endLineNumber" : 152,
        "endColumnNumber" : 92
      },
      "nodeContext" : "database.execSQL(\"CREATE TABLE IF NOT EXISTS feed_group_subscription_join \" + \"(group_id INTEGER NOT NULL, subscription_id INTEGER NOT NULL, \" + \"PRIMARY KEY(group_id, subscription_id), \"+ \"FOREIGN KEY(group_id) REFERENCES feed_group(uid) \"+ \"ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED, \"+ \"FOREIGN KEY(subscription_id) REFERENCES subscriptions(uid) \"+ \"ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3629,
        "startLineNumber" : 108,
        "startColumnNumber" : 75,
        "endLineNumber" : 160,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  database.execSQL(\"CREATE TABLE IF NOT EXISTS streams_new \" + \"(uid INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, \" + \"service_id INTEGER NOT NULL, url TEXT NOT NULL, title TEXT NOT NULL, \"+ \"stream_type TEXT NOT NULL, duration INTEGER NOT NULL, \"+ \"uploader TEXT NOT NULL, thumbnail_url TEXT, view_count INTEGER, \"+ \"textual_upload_date TEXT, upload_date INTEGER, \"+ \"is_upload_date_approximation INTEGER)\");\n  database.execSQL(\"INSERT INTO streams_new (uid, service_id, url, title, stream_type, \" + \"duration, uploader, thumbnail_url, view_count, textual_upload_date, \" + \"upload_date, is_upload_date_approximation) \"+ \"SELECT uid, service_id, url, ifnull(title, ''), \"+ \"ifnull(stream_type, 'VIDEO_STREAM'), ifnull(duration, 0), \"+ \"ifnull(uploader, ''), ifnull(thumbnail_url, ''), NULL, NULL, NULL, NULL \"+ \"FROM streams WHERE url IS NOT NULL\");\n  database.execSQL(\"DROP TABLE streams\");\n  database.execSQL(\"ALTER TABLE streams_new RENAME TO streams\");\n  database.execSQL(\"CREATE UNIQUE INDEX index_streams_service_id_url \" + \"ON streams (service_id, url)\");\n  database.execSQL(\"CREATE TABLE IF NOT EXISTS feed \" + \"(stream_id INTEGER NOT NULL, subscription_id INTEGER NOT NULL, \" + \"PRIMARY KEY(stream_id, subscription_id), \"+ \"FOREIGN KEY(stream_id) REFERENCES streams(uid) \"+ \"ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED, \"+ \"FOREIGN KEY(subscription_id) REFERENCES subscriptions(uid) \"+ \"ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)\");\n  database.execSQL(\"CREATE INDEX index_feed_subscription_id ON feed (subscription_id)\");\n  database.execSQL(\"CREATE TABLE IF NOT EXISTS feed_group \" + \"(uid INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, name TEXT NOT NULL, \" + \"icon_id INTEGER NOT NULL, sort_order INTEGER NOT NULL)\");\n  database.execSQL(\"CREATE INDEX index_feed_group_sort_order ON feed_group (sort_order)\");\n  database.execSQL(\"CREATE TABLE IF NOT EXISTS feed_group_subscription_join \" + \"(group_id INTEGER NOT NULL, subscription_id INTEGER NOT NULL, \" + \"PRIMARY KEY(group_id, subscription_id), \"+ \"FOREIGN KEY(group_id) REFERENCES feed_group(uid) \"+ \"ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED, \"+ \"FOREIGN KEY(subscription_id) REFERENCES subscriptions(uid) \"+ \"ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)\");\n  database.execSQL(\"CREATE INDEX index_feed_group_subscription_join_subscription_id \" + \"ON feed_group_subscription_join (subscription_id)\");\n  database.execSQL(\"CREATE TABLE IF NOT EXISTS feed_last_updated \" + \"(subscription_id INTEGER NOT NULL, last_updated INTEGER, \" + \"PRIMARY KEY(subscription_id), \"+ \"FOREIGN KEY(subscription_id) REFERENCES subscriptions(uid) \"+ \"ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3714,
        "startLineNumber" : 107,
        "startColumnNumber" : 8,
        "endLineNumber" : 160,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public void migrate(@NonNull final SupportSQLiteDatabase database){\n  database.execSQL(\"CREATE TABLE IF NOT EXISTS streams_new \" + \"(uid INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, \" + \"service_id INTEGER NOT NULL, url TEXT NOT NULL, title TEXT NOT NULL, \"+ \"stream_type TEXT NOT NULL, duration INTEGER NOT NULL, \"+ \"uploader TEXT NOT NULL, thumbnail_url TEXT, view_count INTEGER, \"+ \"textual_upload_date TEXT, upload_date INTEGER, \"+ \"is_upload_date_approximation INTEGER)\");\n  database.execSQL(\"INSERT INTO streams_new (uid, service_id, url, title, stream_type, \" + \"duration, uploader, thumbnail_url, view_count, textual_upload_date, \" + \"upload_date, is_upload_date_approximation) \"+ \"SELECT uid, service_id, url, ifnull(title, ''), \"+ \"ifnull(stream_type, 'VIDEO_STREAM'), ifnull(duration, 0), \"+ \"ifnull(uploader, ''), ifnull(thumbnail_url, ''), NULL, NULL, NULL, NULL \"+ \"FROM streams WHERE url IS NOT NULL\");\n  database.execSQL(\"DROP TABLE streams\");\n  database.execSQL(\"ALTER TABLE streams_new RENAME TO streams\");\n  database.execSQL(\"CREATE UNIQUE INDEX index_streams_service_id_url \" + \"ON streams (service_id, url)\");\n  database.execSQL(\"CREATE TABLE IF NOT EXISTS feed \" + \"(stream_id INTEGER NOT NULL, subscription_id INTEGER NOT NULL, \" + \"PRIMARY KEY(stream_id, subscription_id), \"+ \"FOREIGN KEY(stream_id) REFERENCES streams(uid) \"+ \"ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED, \"+ \"FOREIGN KEY(subscription_id) REFERENCES subscriptions(uid) \"+ \"ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)\");\n  database.execSQL(\"CREATE INDEX index_feed_subscription_id ON feed (subscription_id)\");\n  database.execSQL(\"CREATE TABLE IF NOT EXISTS feed_group \" + \"(uid INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, name TEXT NOT NULL, \" + \"icon_id INTEGER NOT NULL, sort_order INTEGER NOT NULL)\");\n  database.execSQL(\"CREATE INDEX index_feed_group_sort_order ON feed_group (sort_order)\");\n  database.execSQL(\"CREATE TABLE IF NOT EXISTS feed_group_subscription_join \" + \"(group_id INTEGER NOT NULL, subscription_id INTEGER NOT NULL, \" + \"PRIMARY KEY(group_id, subscription_id), \"+ \"FOREIGN KEY(group_id) REFERENCES feed_group(uid) \"+ \"ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED, \"+ \"FOREIGN KEY(subscription_id) REFERENCES subscriptions(uid) \"+ \"ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)\");\n  database.execSQL(\"CREATE INDEX index_feed_group_subscription_join_subscription_id \" + \"ON feed_group_subscription_join (subscription_id)\");\n  database.execSQL(\"CREATE TABLE IF NOT EXISTS feed_last_updated \" + \"(subscription_id INTEGER NOT NULL, last_updated INTEGER, \" + \"PRIMARY KEY(subscription_id), \"+ \"FOREIGN KEY(subscription_id) REFERENCES subscriptions(uid) \"+ \"ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 114,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 570,
        "startLineNumber" : 146,
        "startColumnNumber" : 12,
        "endLineNumber" : 152,
        "endColumnNumber" : 92
      },
      "nodeContext" : "database.execSQL(\"CREATE TABLE IF NOT EXISTS feed_group_subscription_join \" + \"(group_id INTEGER NOT NULL, subscription_id INTEGER NOT NULL, \" + \"PRIMARY KEY(group_id, subscription_id), \"+ \"FOREIGN KEY(group_id) REFERENCES feed_group(uid) \"+ \"ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED, \"+ \"FOREIGN KEY(subscription_id) REFERENCES subscriptions(uid) \"+ \"ON UPDATE CASCADE ON DELETE CASCADE DEFERRABLE INITIALLY DEFERRED)\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 64,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 551,
    "startLineNumber" : 146,
    "startColumnNumber" : 29,
    "endLineNumber" : 152,
    "endColumnNumber" : 90
  } ],
  "layoutRelationDataList" : [ ]
}