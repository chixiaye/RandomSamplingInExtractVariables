{
  "id" : 47,
  "expression" : "createBufferIndexAndChannelsList(subpartition1,progress1,progress1 + 2,progress1 + 4,progress1 + 6,progress1 + 8)",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-runtime/src/test/java/org/apache/flink/runtime/io/network/partition/hybrid/HsFullSpillingStrategyTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "createBufferIndexAndChannelsList(subpartition1,progress1,progress1 + 2,progress1 + 4,progress1 + 6,progress1 + 8)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 269,
      "startLineNumber" : 103,
      "startColumnNumber" : 16,
      "endLineNumber" : 109,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 16,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 309,
        "startLineNumber" : 102,
        "startColumnNumber" : 36,
        "endLineNumber" : 109,
        "endColumnNumber" : 38
      },
      "nodeContext" : "subpartitionBuffers1=createBufferIndexAndChannelsList(subpartition1,progress1,progress1 + 2,progress1 + 4,progress1 + 6,progress1 + 8)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 18,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 338,
        "startLineNumber" : 102,
        "startColumnNumber" : 8,
        "endLineNumber" : 109,
        "endColumnNumber" : 39
      },
      "nodeContext" : "List<BufferIndexAndChannel> subpartitionBuffers1=createBufferIndexAndChannelsList(subpartition1,progress1,progress1 + 2,progress1 + 4,progress1 + 6,progress1 + 8);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 24,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3412,
        "startLineNumber" : 95,
        "startColumnNumber" : 42,
        "endLineNumber" : 157,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final int subpartition1=0;\n  final int subpartition2=1;\n  final int progress1=10;\n  final int progress2=20;\n  List<BufferIndexAndChannel> subpartitionBuffers1=createBufferIndexAndChannelsList(subpartition1,progress1,progress1 + 2,progress1 + 4,progress1 + 6,progress1 + 8);\n  List<BufferIndexAndChannel> subpartitionBuffers2=createBufferIndexAndChannelsList(subpartition2,progress2 + 1,progress2 + 3,progress2 + 5,progress2 + 7,progress2 + 9);\n  TestingSpillingInfoProvider spillInfoProvider=TestingSpillingInfoProvider.builder().setGetNumSubpartitionsSupplier(() -> NUM_SUBPARTITIONS).addSubpartitionBuffers(subpartition1,subpartitionBuffers1).addSubpartitionBuffers(subpartition2,subpartitionBuffers2).addSpillBuffers(subpartition1,Arrays.asList(0,1,2,3)).addConsumedBuffers(subpartition1,Arrays.asList(0,1)).addSpillBuffers(subpartition2,Arrays.asList(1,2,3)).addConsumedBuffers(subpartition2,Arrays.asList(0,1)).setGetNumTotalUnSpillBuffersSupplier(() -> NUM_BUFFERS_TRIGGER_SPILLING).setGetNumTotalRequestedBuffersSupplier(() -> 10).setGetPoolSizeSupplier(() -> 10).setGetNextBufferIndexToConsumeSupplier(() -> Arrays.asList(progress1,progress2)).build();\n  Decision decision=spillStrategy.decideActionWithGlobalInfo(spillInfoProvider);\n  Map<Integer,List<BufferIndexAndChannel>> expectedSpillBuffers=new HashMap<>();\n  expectedSpillBuffers.put(subpartition1,subpartitionBuffers1.subList(4,5));\n  expectedSpillBuffers.put(subpartition2,new ArrayList<>(subpartitionBuffers2.subList(0,1)));\n  expectedSpillBuffers.get(subpartition2).addAll(subpartitionBuffers2.subList(4,5));\n  assertThat(decision.getBufferToSpill()).isEqualTo(expectedSpillBuffers);\n  Map<Integer,List<BufferIndexAndChannel>> expectedReleaseBuffers=new HashMap<>();\n  expectedReleaseBuffers.put(subpartition1,new ArrayList<>(subpartitionBuffers1.subList(0,2)));\n  expectedReleaseBuffers.get(subpartition1).addAll(subpartitionBuffers1.subList(3,4));\n  expectedReleaseBuffers.put(subpartition2,new ArrayList<>(subpartitionBuffers2.subList(1,2)));\n  expectedReleaseBuffers.get(subpartition2).addAll(subpartitionBuffers2.subList(2,4));\n  assertThat(decision.getBufferToRelease()).isEqualTo(expectedReleaseBuffers);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 301,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3461,
        "startLineNumber" : 94,
        "startColumnNumber" : 4,
        "endLineNumber" : 157,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test void testDecideActionWithGlobalInfo(){\n  final int subpartition1=0;\n  final int subpartition2=1;\n  final int progress1=10;\n  final int progress2=20;\n  List<BufferIndexAndChannel> subpartitionBuffers1=createBufferIndexAndChannelsList(subpartition1,progress1,progress1 + 2,progress1 + 4,progress1 + 6,progress1 + 8);\n  List<BufferIndexAndChannel> subpartitionBuffers2=createBufferIndexAndChannelsList(subpartition2,progress2 + 1,progress2 + 3,progress2 + 5,progress2 + 7,progress2 + 9);\n  TestingSpillingInfoProvider spillInfoProvider=TestingSpillingInfoProvider.builder().setGetNumSubpartitionsSupplier(() -> NUM_SUBPARTITIONS).addSubpartitionBuffers(subpartition1,subpartitionBuffers1).addSubpartitionBuffers(subpartition2,subpartitionBuffers2).addSpillBuffers(subpartition1,Arrays.asList(0,1,2,3)).addConsumedBuffers(subpartition1,Arrays.asList(0,1)).addSpillBuffers(subpartition2,Arrays.asList(1,2,3)).addConsumedBuffers(subpartition2,Arrays.asList(0,1)).setGetNumTotalUnSpillBuffersSupplier(() -> NUM_BUFFERS_TRIGGER_SPILLING).setGetNumTotalRequestedBuffersSupplier(() -> 10).setGetPoolSizeSupplier(() -> 10).setGetNextBufferIndexToConsumeSupplier(() -> Arrays.asList(progress1,progress2)).build();\n  Decision decision=spillStrategy.decideActionWithGlobalInfo(spillInfoProvider);\n  Map<Integer,List<BufferIndexAndChannel>> expectedSpillBuffers=new HashMap<>();\n  expectedSpillBuffers.put(subpartition1,subpartitionBuffers1.subList(4,5));\n  expectedSpillBuffers.put(subpartition2,new ArrayList<>(subpartitionBuffers2.subList(0,1)));\n  expectedSpillBuffers.get(subpartition2).addAll(subpartitionBuffers2.subList(4,5));\n  assertThat(decision.getBufferToSpill()).isEqualTo(expectedSpillBuffers);\n  Map<Integer,List<BufferIndexAndChannel>> expectedReleaseBuffers=new HashMap<>();\n  expectedReleaseBuffers.put(subpartition1,new ArrayList<>(subpartitionBuffers1.subList(0,2)));\n  expectedReleaseBuffers.get(subpartition1).addAll(subpartitionBuffers1.subList(3,4));\n  expectedReleaseBuffers.put(subpartition2,new ArrayList<>(subpartitionBuffers2.subList(1,2)));\n  expectedReleaseBuffers.get(subpartition2).addAll(subpartitionBuffers2.subList(2,4));\n  assertThat(decision.getBufferToRelease()).isEqualTo(expectedReleaseBuffers);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 306,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 309,
        "startLineNumber" : 102,
        "startColumnNumber" : 36,
        "endLineNumber" : 109,
        "endColumnNumber" : 38
      },
      "nodeContext" : "subpartitionBuffers1=createBufferIndexAndChannelsList(subpartition1,progress1,progress1 + 2,progress1 + 4,progress1 + 6,progress1 + 8)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 18,
      "astHeight" : 4
    },
    "tokenLength" : 15,
    "type" : "java.util.List<org.apache.flink.runtime.io.network.partition.hybrid.BufferIndexAndChannel>"
  } ],
  "positionList" : [ {
    "charLength" : 269,
    "startLineNumber" : 103,
    "startColumnNumber" : 16,
    "endLineNumber" : 109,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ ]
}