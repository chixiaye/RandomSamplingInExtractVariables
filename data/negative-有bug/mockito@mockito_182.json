{
  "id" : 182,
  "expression" : "controller.layer().findModule(\"mockito.test\")",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/subprojects/module-test/src/test/java/org/mockito/moduletest/ModuleUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "controller.layer().findModule(\"mockito.test\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 45,
      "startLineNumber" : 104,
      "startColumnNumber" : 16,
      "endLineNumber" : 104,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 104,
        "startColumnNumber" : 16,
        "endLineNumber" : 104,
        "endColumnNumber" : 101
      },
      "nodeContext" : "controller.layer().findModule(\"mockito.test\").orElseThrow(IllegalStateException::new)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 182,
        "startLineNumber" : 103,
        "startColumnNumber" : 12,
        "endLineNumber" : 106,
        "endColumnNumber" : 13
      },
      "nodeContext" : "controller.addReads(controller.layer().findModule(\"mockito.test\").orElseThrow(IllegalStateException::new),Mockito.class.getModule())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 183,
        "startLineNumber" : 103,
        "startColumnNumber" : 12,
        "endLineNumber" : 106,
        "endColumnNumber" : 14
      },
      "nodeContext" : "controller.addReads(controller.layer().findModule(\"mockito.test\").orElseThrow(IllegalStateException::new),Mockito.class.getModule());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 209,
        "startLineNumber" : 102,
        "startColumnNumber" : 21,
        "endLineNumber" : 107,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  controller.addReads(controller.layer().findModule(\"mockito.test\").orElseThrow(IllegalStateException::new),Mockito.class.getModule());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 222,
        "startLineNumber" : 102,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (canRead) {\n  controller.addReads(controller.layer().findModule(\"mockito.test\").orElseThrow(IllegalStateException::new),Mockito.class.getModule());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1838,
        "startLineNumber" : 73,
        "startColumnNumber" : 114,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Set<String> modules=new HashSet<>();\n  modules.add(\"mockito.test\");\n  ModuleFinder moduleFinder=ModuleFinder.of(jar);\n  if (namedModules) {\n    modules.add(\"org.mockito\");\n    modules.add(\"net.bytebuddy\");\n    modules.add(\"net.bytebuddy.agent\");\n    moduleFinder=ModuleFinder.compose(moduleFinder,automaticModule(\"org.mockito\",\"org.mockito\",\"org.mockito.internal.creation.bytebuddy\"),automaticModule(\"net.bytebuddy\",\"net.bytebuddy\"),automaticModule(\"net.bytebuddy.agent\",\"net.bytebuddy.agent\"));\n  }\n  Configuration configuration=Configuration.resolve(moduleFinder,Collections.singletonList(ModuleLayer.boot().configuration()),ModuleFinder.of(),modules);\n  ClassLoader classLoader=new ReplicatingClassLoader(jar);\n  ModuleLayer.Controller controller=ModuleLayer.defineModules(configuration,Collections.singletonList(ModuleLayer.boot()),module -> classLoader);\n  if (canRead) {\n    controller.addReads(controller.layer().findModule(\"mockito.test\").orElseThrow(IllegalStateException::new),Mockito.class.getModule());\n  }\n  return controller.layer();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 143,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1948,
        "startLineNumber" : 73,
        "startColumnNumber" : 4,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static ModuleLayer layer(Path jar,boolean canRead,boolean namedModules) throws MalformedURLException {\n  Set<String> modules=new HashSet<>();\n  modules.add(\"mockito.test\");\n  ModuleFinder moduleFinder=ModuleFinder.of(jar);\n  if (namedModules) {\n    modules.add(\"org.mockito\");\n    modules.add(\"net.bytebuddy\");\n    modules.add(\"net.bytebuddy.agent\");\n    moduleFinder=ModuleFinder.compose(moduleFinder,automaticModule(\"org.mockito\",\"org.mockito\",\"org.mockito.internal.creation.bytebuddy\"),automaticModule(\"net.bytebuddy\",\"net.bytebuddy\"),automaticModule(\"net.bytebuddy.agent\",\"net.bytebuddy.agent\"));\n  }\n  Configuration configuration=Configuration.resolve(moduleFinder,Collections.singletonList(ModuleLayer.boot().configuration()),ModuleFinder.of(),modules);\n  ClassLoader classLoader=new ReplicatingClassLoader(jar);\n  ModuleLayer.Controller controller=ModuleLayer.defineModules(configuration,Collections.singletonList(ModuleLayer.boot()),module -> classLoader);\n  if (canRead) {\n    controller.addReads(controller.layer().findModule(\"mockito.test\").orElseThrow(IllegalStateException::new),Mockito.class.getModule());\n  }\n  return controller.layer();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 161,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 104,
        "startColumnNumber" : 16,
        "endLineNumber" : 104,
        "endColumnNumber" : 101
      },
      "nodeContext" : "controller.layer().findModule(\"mockito.test\").orElseThrow(IllegalStateException::new)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "java.util.Optional<java.lang.Module>"
  } ],
  "positionList" : [ {
    "charLength" : 45,
    "startLineNumber" : 104,
    "startColumnNumber" : 16,
    "endLineNumber" : 104,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ ]
}