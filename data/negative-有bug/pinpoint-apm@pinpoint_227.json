{
  "id" : 227,
  "expression" : "new ArrayList<>()",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/web/src/main/java/com/navercorp/pinpoint/web/service/AdminServiceImpl.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new ArrayList<>()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 152,
      "startColumnNumber" : 40,
      "endLineNumber" : 152,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 4,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 152,
        "startColumnNumber" : 21,
        "endLineNumber" : 152,
        "endColumnNumber" : 57
      },
      "nodeContext" : "inactiveAgentIds=new ArrayList<>()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 152,
        "startColumnNumber" : 8,
        "endLineNumber" : 152,
        "endColumnNumber" : 58
      },
      "nodeContext" : "List<String> inactiveAgentIds=new ArrayList<>();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 927,
        "startLineNumber" : 148,
        "startColumnNumber" : 87,
        "endLineNumber" : 168,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (CollectionUtils.isEmpty(agentIds)) {\n    return Collections.emptyList();\n  }\n  List<String> inactiveAgentIds=new ArrayList<>();\n  final long toTimestamp=System.currentTimeMillis();\n  Calendar cal=Calendar.getInstance();\n  cal.add(Calendar.DATE,durationDays * -1);\n  final long fromTimestamp=cal.getTimeInMillis();\n  Range queryRange=new Range(fromTimestamp,toTimestamp);\n  for (  String agentId : agentIds) {\n    boolean dataExists=this.jvmGcDao.agentStatExists(agentId,queryRange);\n    if (!dataExists) {\n      inactiveAgentIds.add(agentId);\n    }\n  }\n  return inactiveAgentIds;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1010,
        "startLineNumber" : 148,
        "startColumnNumber" : 4,
        "endLineNumber" : 168,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private List<String> filterInactiveAgents(List<String> agentIds,int durationDays){\n  if (CollectionUtils.isEmpty(agentIds)) {\n    return Collections.emptyList();\n  }\n  List<String> inactiveAgentIds=new ArrayList<>();\n  final long toTimestamp=System.currentTimeMillis();\n  Calendar cal=Calendar.getInstance();\n  cal.add(Calendar.DATE,durationDays * -1);\n  final long fromTimestamp=cal.getTimeInMillis();\n  Range queryRange=new Range(fromTimestamp,toTimestamp);\n  for (  String agentId : agentIds) {\n    boolean dataExists=this.jvmGcDao.agentStatExists(agentId,queryRange);\n    if (!dataExists) {\n      inactiveAgentIds.add(agentId);\n    }\n  }\n  return inactiveAgentIds;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 115,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 152,
        "startColumnNumber" : 8,
        "endLineNumber" : 152,
        "endColumnNumber" : 58
      },
      "nodeContext" : "List<String> inactiveAgentIds=new ArrayList<>();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.ArrayList<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 152,
    "startColumnNumber" : 40,
    "endLineNumber" : 152,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ ]
}