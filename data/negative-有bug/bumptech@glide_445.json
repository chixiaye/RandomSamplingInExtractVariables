{
  "id" : 445,
  "expression" : "new IOException(\"Too many (> \" + MAXIMUM_REDIRECTS + \") redirects!\")",
  "projectName" : "bumptech@glide",
  "commitID" : "7d9c28ec2763e973775abd5c3e3c971728a48a56",
  "filePath" : "/library/src/main/java/com/bumptech/glide/load/data/HttpUrlFetcher.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new IOException(\"Too many (> \" + MAXIMUM_REDIRECTS + \") redirects!\")",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 68,
      "startLineNumber" : 72,
      "startColumnNumber" : 12,
      "endLineNumber" : 72,
      "endColumnNumber" : 80
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 72,
        "startColumnNumber" : 6,
        "endLineNumber" : 72,
        "endColumnNumber" : 81
      },
      "nodeContext" : "throw new IOException(\"Too many (> \" + MAXIMUM_REDIRECTS + \") redirects!\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 71,
        "startColumnNumber" : 40,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  throw new IOException(\"Too many (> \" + MAXIMUM_REDIRECTS + \") redirects!\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 572,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 83,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (redirects >= MAXIMUM_REDIRECTS) {\n  throw new IOException(\"Too many (> \" + MAXIMUM_REDIRECTS + \") redirects!\");\n}\n else {\n  try {\n    if (lastUrl != null && url.toURI().equals(lastUrl.toURI())) {\n      throw new IOException(\"In re-direct loop\");\n    }\n  }\n catch (  URISyntaxException e) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 41,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2050,
        "startLineNumber" : 70,
        "startColumnNumber" : 54,
        "endLineNumber" : 117,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (redirects >= MAXIMUM_REDIRECTS) {\n    throw new IOException(\"Too many (> \" + MAXIMUM_REDIRECTS + \") redirects!\");\n  }\n else {\n    try {\n      if (lastUrl != null && url.toURI().equals(lastUrl.toURI())) {\n        throw new IOException(\"In re-direct loop\");\n      }\n    }\n catch (    URISyntaxException e) {\n    }\n  }\n  urlConnection=connectionFactory.build(url);\n  for (  Map.Entry<String,String> headerEntry : headers.entrySet()) {\n    urlConnection.addRequestProperty(headerEntry.getKey(),headerEntry.getValue());\n  }\n  urlConnection.setConnectTimeout(timeout);\n  urlConnection.setReadTimeout(timeout);\n  urlConnection.setUseCaches(false);\n  urlConnection.setDoInput(true);\n  urlConnection.connect();\n  if (isCancelled) {\n    return null;\n  }\n  final int statusCode=urlConnection.getResponseCode();\n  if (statusCode / 100 == 2) {\n    String contentLength=urlConnection.getHeaderField(CONTENT_LENGTH_HEADER);\n    stream=ContentLengthInputStream.obtain(urlConnection.getInputStream(),contentLength);\n    return stream;\n  }\n else   if (statusCode / 100 == 3) {\n    String redirectUrlString=urlConnection.getHeaderField(\"Location\");\n    if (TextUtils.isEmpty(redirectUrlString)) {\n      throw new IOException(\"Received empty or null redirect url\");\n    }\n    URL redirectUrl=new URL(url,redirectUrlString);\n    return loadDataWithRedirects(redirectUrl,redirects + 1,url,headers);\n  }\n else {\n    if (statusCode == -1) {\n      throw new IOException(\"Unable to retrieve response code from HttpUrlConnection.\");\n    }\n    throw new IOException(\"Request failed \" + statusCode + \": \"+ urlConnection.getResponseMessage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 209,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2183,
        "startLineNumber" : 69,
        "startColumnNumber" : 2,
        "endLineNumber" : 117,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private InputStream loadDataWithRedirects(URL url,int redirects,URL lastUrl,Map<String,String> headers) throws IOException {\n  if (redirects >= MAXIMUM_REDIRECTS) {\n    throw new IOException(\"Too many (> \" + MAXIMUM_REDIRECTS + \") redirects!\");\n  }\n else {\n    try {\n      if (lastUrl != null && url.toURI().equals(lastUrl.toURI())) {\n        throw new IOException(\"In re-direct loop\");\n      }\n    }\n catch (    URISyntaxException e) {\n    }\n  }\n  urlConnection=connectionFactory.build(url);\n  for (  Map.Entry<String,String> headerEntry : headers.entrySet()) {\n    urlConnection.addRequestProperty(headerEntry.getKey(),headerEntry.getValue());\n  }\n  urlConnection.setConnectTimeout(timeout);\n  urlConnection.setReadTimeout(timeout);\n  urlConnection.setUseCaches(false);\n  urlConnection.setDoInput(true);\n  urlConnection.connect();\n  if (isCancelled) {\n    return null;\n  }\n  final int statusCode=urlConnection.getResponseCode();\n  if (statusCode / 100 == 2) {\n    String contentLength=urlConnection.getHeaderField(CONTENT_LENGTH_HEADER);\n    stream=ContentLengthInputStream.obtain(urlConnection.getInputStream(),contentLength);\n    return stream;\n  }\n else   if (statusCode / 100 == 3) {\n    String redirectUrlString=urlConnection.getHeaderField(\"Location\");\n    if (TextUtils.isEmpty(redirectUrlString)) {\n      throw new IOException(\"Received empty or null redirect url\");\n    }\n    URL redirectUrl=new URL(url,redirectUrlString);\n    return loadDataWithRedirects(redirectUrl,redirects + 1,url,headers);\n  }\n else {\n    if (statusCode == -1) {\n      throw new IOException(\"Unable to retrieve response code from HttpUrlConnection.\");\n    }\n    throw new IOException(\"Request failed \" + statusCode + \": \"+ urlConnection.getResponseMessage());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 236,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 72,
        "startColumnNumber" : 6,
        "endLineNumber" : 72,
        "endColumnNumber" : 81
      },
      "nodeContext" : "throw new IOException(\"Too many (> \" + MAXIMUM_REDIRECTS + \") redirects!\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 9,
    "type" : "java.io.IOException"
  } ],
  "positionList" : [ {
    "charLength" : 68,
    "startLineNumber" : 72,
    "startColumnNumber" : 12,
    "endLineNumber" : 72,
    "endColumnNumber" : 80
  } ],
  "layoutRelationDataList" : [ ]
}