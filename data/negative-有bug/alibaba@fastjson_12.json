{
  "id" : 12,
  "expression" : "Assert",
  "projectName" : "alibaba@fastjson",
  "commitID" : "d3797da65a3d9f804c9e275c25395c59e31f097d",
  "filePath" : "/src/test/java/com/alibaba/json/bvt/serializer/filters/PropertyFilter_short.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Assert",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 31,
      "startColumnNumber" : 8,
      "endLineNumber" : 31,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 31,
        "endColumnNumber" : 39
      },
      "nodeContext" : "Assert.assertEquals(\"{}\",text)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 31,
        "endColumnNumber" : 40
      },
      "nodeContext" : "Assert.assertEquals(\"{}\",text);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 513,
        "startLineNumber" : 15,
        "startColumnNumber" : 42,
        "endLineNumber" : 32,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  PropertyFilter filter=new PropertyFilter(){\n    public boolean apply(    Object source,    String name,    Object value){\n      return false;\n    }\n  }\n;\n  SerializeWriter out=new SerializeWriter();\n  JSONSerializer serializer=new JSONSerializer(out);\n  serializer.getPropertyFilters().add(filter);\n  A a=new A();\n  serializer.write(a);\n  String text=out.toString();\n  Assert.assertEquals(\"{}\",text);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 551,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 32,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void test_0() throws Exception {\n  PropertyFilter filter=new PropertyFilter(){\n    public boolean apply(    Object source,    String name,    Object value){\n      return false;\n    }\n  }\n;\n  SerializeWriter out=new SerializeWriter();\n  JSONSerializer serializer=new JSONSerializer(out);\n  serializer.getPropertyFilters().add(filter);\n  A a=new A();\n  serializer.write(a);\n  String text=out.toString();\n  Assert.assertEquals(\"{}\",text);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 86,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 31,
        "endColumnNumber" : 40
      },
      "nodeContext" : "Assert.assertEquals(\"{}\",text);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 31,
    "startColumnNumber" : 8,
    "endLineNumber" : 31,
    "endColumnNumber" : 14
  } ],
  "layoutRelationDataList" : [ ]
}