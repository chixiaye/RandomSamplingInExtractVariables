{
  "id" : 53,
  "expression" : "componentType",
  "projectName" : "alibaba@fastjson",
  "commitID" : "d3797da65a3d9f804c9e275c25395c59e31f097d",
  "filePath" : "/src/main/java/com/alibaba/fastjson/parser/JavaObjectDeserializer.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "componentType",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 20,
      "startColumnNumber" : 16,
      "endLineNumber" : 20,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 20,
        "startColumnNumber" : 16,
        "endLineNumber" : 20,
        "endColumnNumber" : 53
      },
      "nodeContext" : "componentType instanceof TypeVariable",
      "nodeType" : "InstanceofExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 199,
        "startLineNumber" : 20,
        "startColumnNumber" : 12,
        "endLineNumber" : 23,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (componentType instanceof TypeVariable) {\n  TypeVariable<?> componentVar=(TypeVariable<?>)componentType;\n  componentType=componentVar.getBounds()[0];\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 808,
        "startLineNumber" : 18,
        "startColumnNumber" : 46,
        "endLineNumber" : 38,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Type componentType=((GenericArrayType)type).getGenericComponentType();\n  if (componentType instanceof TypeVariable) {\n    TypeVariable<?> componentVar=(TypeVariable<?>)componentType;\n    componentType=componentVar.getBounds()[0];\n  }\n  List<Object> list=new ArrayList<Object>();\n  parser.parseArray(componentType,list);\n  Class<?> componentClass;\n  if (componentType instanceof Class) {\n    componentClass=(Class<?>)componentType;\n    Object[] array=(Object[])Array.newInstance(componentClass,list.size());\n    list.toArray(array);\n    return (T)array;\n  }\n else {\n    return (T)list.toArray();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 846,
        "startLineNumber" : 18,
        "startColumnNumber" : 8,
        "endLineNumber" : 38,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (type instanceof GenericArrayType) {\n  Type componentType=((GenericArrayType)type).getGenericComponentType();\n  if (componentType instanceof TypeVariable) {\n    TypeVariable<?> componentVar=(TypeVariable<?>)componentType;\n    componentType=componentVar.getBounds()[0];\n  }\n  List<Object> list=new ArrayList<Object>();\n  parser.parseArray(componentType,list);\n  Class<?> componentClass;\n  if (componentType instanceof Class) {\n    componentClass=(Class<?>)componentType;\n    Object[] array=(Object[])Array.newInstance(componentClass,list.size());\n    list.toArray(array);\n    return (T)array;\n  }\n else {\n    return (T)list.toArray();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 124,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 907,
        "startLineNumber" : 17,
        "startColumnNumber" : 83,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (type instanceof GenericArrayType) {\n    Type componentType=((GenericArrayType)type).getGenericComponentType();\n    if (componentType instanceof TypeVariable) {\n      TypeVariable<?> componentVar=(TypeVariable<?>)componentType;\n      componentType=componentVar.getBounds()[0];\n    }\n    List<Object> list=new ArrayList<Object>();\n    parser.parseArray(componentType,list);\n    Class<?> componentClass;\n    if (componentType instanceof Class) {\n      componentClass=(Class<?>)componentType;\n      Object[] array=(Object[])Array.newInstance(componentClass,list.size());\n      list.toArray(array);\n      return (T)array;\n    }\n else {\n      return (T)list.toArray();\n    }\n  }\n  return (T)parser.parse(fieldName);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1021,
        "startLineNumber" : 16,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") public <T>T deserialze(DefaultJSONParser parser,Type type,Object fieldName){\n  if (type instanceof GenericArrayType) {\n    Type componentType=((GenericArrayType)type).getGenericComponentType();\n    if (componentType instanceof TypeVariable) {\n      TypeVariable<?> componentVar=(TypeVariable<?>)componentType;\n      componentType=componentVar.getBounds()[0];\n    }\n    List<Object> list=new ArrayList<Object>();\n    parser.parseArray(componentType,list);\n    Class<?> componentClass;\n    if (componentType instanceof Class) {\n      componentClass=(Class<?>)componentType;\n      Object[] array=(Object[])Array.newInstance(componentClass,list.size());\n      list.toArray(array);\n      return (T)array;\n    }\n else {\n      return (T)list.toArray();\n    }\n  }\n  return (T)parser.parse(fieldName);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 155,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 20,
        "startColumnNumber" : 16,
        "endLineNumber" : 20,
        "endColumnNumber" : 53
      },
      "nodeContext" : "componentType instanceof TypeVariable",
      "nodeType" : "InstanceofExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.reflect.Type"
  }, {
    "nodeContext" : "componentType",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 21,
      "startColumnNumber" : 65,
      "endLineNumber" : 21,
      "endColumnNumber" : 78
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 21,
        "startColumnNumber" : 47,
        "endLineNumber" : 21,
        "endColumnNumber" : 78
      },
      "nodeContext" : "(TypeVariable<?>)componentType",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 21,
        "startColumnNumber" : 32,
        "endLineNumber" : 21,
        "endColumnNumber" : 78
      },
      "nodeContext" : "componentVar=(TypeVariable<?>)componentType",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 21,
        "startColumnNumber" : 16,
        "endLineNumber" : 21,
        "endColumnNumber" : 79
      },
      "nodeContext" : "TypeVariable<?> componentVar=(TypeVariable<?>)componentType;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 156,
        "startLineNumber" : 20,
        "startColumnNumber" : 55,
        "endLineNumber" : 23,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  TypeVariable<?> componentVar=(TypeVariable<?>)componentType;\n  componentType=componentVar.getBounds()[0];\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 199,
        "startLineNumber" : 20,
        "startColumnNumber" : 12,
        "endLineNumber" : 23,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (componentType instanceof TypeVariable) {\n  TypeVariable<?> componentVar=(TypeVariable<?>)componentType;\n  componentType=componentVar.getBounds()[0];\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 808,
        "startLineNumber" : 18,
        "startColumnNumber" : 46,
        "endLineNumber" : 38,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Type componentType=((GenericArrayType)type).getGenericComponentType();\n  if (componentType instanceof TypeVariable) {\n    TypeVariable<?> componentVar=(TypeVariable<?>)componentType;\n    componentType=componentVar.getBounds()[0];\n  }\n  List<Object> list=new ArrayList<Object>();\n  parser.parseArray(componentType,list);\n  Class<?> componentClass;\n  if (componentType instanceof Class) {\n    componentClass=(Class<?>)componentType;\n    Object[] array=(Object[])Array.newInstance(componentClass,list.size());\n    list.toArray(array);\n    return (T)array;\n  }\n else {\n    return (T)list.toArray();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 846,
        "startLineNumber" : 18,
        "startColumnNumber" : 8,
        "endLineNumber" : 38,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (type instanceof GenericArrayType) {\n  Type componentType=((GenericArrayType)type).getGenericComponentType();\n  if (componentType instanceof TypeVariable) {\n    TypeVariable<?> componentVar=(TypeVariable<?>)componentType;\n    componentType=componentVar.getBounds()[0];\n  }\n  List<Object> list=new ArrayList<Object>();\n  parser.parseArray(componentType,list);\n  Class<?> componentClass;\n  if (componentType instanceof Class) {\n    componentClass=(Class<?>)componentType;\n    Object[] array=(Object[])Array.newInstance(componentClass,list.size());\n    list.toArray(array);\n    return (T)array;\n  }\n else {\n    return (T)list.toArray();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 124,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 907,
        "startLineNumber" : 17,
        "startColumnNumber" : 83,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (type instanceof GenericArrayType) {\n    Type componentType=((GenericArrayType)type).getGenericComponentType();\n    if (componentType instanceof TypeVariable) {\n      TypeVariable<?> componentVar=(TypeVariable<?>)componentType;\n      componentType=componentVar.getBounds()[0];\n    }\n    List<Object> list=new ArrayList<Object>();\n    parser.parseArray(componentType,list);\n    Class<?> componentClass;\n    if (componentType instanceof Class) {\n      componentClass=(Class<?>)componentType;\n      Object[] array=(Object[])Array.newInstance(componentClass,list.size());\n      list.toArray(array);\n      return (T)array;\n    }\n else {\n      return (T)list.toArray();\n    }\n  }\n  return (T)parser.parse(fieldName);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1021,
        "startLineNumber" : 16,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") public <T>T deserialze(DefaultJSONParser parser,Type type,Object fieldName){\n  if (type instanceof GenericArrayType) {\n    Type componentType=((GenericArrayType)type).getGenericComponentType();\n    if (componentType instanceof TypeVariable) {\n      TypeVariable<?> componentVar=(TypeVariable<?>)componentType;\n      componentType=componentVar.getBounds()[0];\n    }\n    List<Object> list=new ArrayList<Object>();\n    parser.parseArray(componentType,list);\n    Class<?> componentClass;\n    if (componentType instanceof Class) {\n      componentClass=(Class<?>)componentType;\n      Object[] array=(Object[])Array.newInstance(componentClass,list.size());\n      list.toArray(array);\n      return (T)array;\n    }\n else {\n      return (T)list.toArray();\n    }\n  }\n  return (T)parser.parse(fieldName);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 155,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 21,
        "startColumnNumber" : 16,
        "endLineNumber" : 21,
        "endColumnNumber" : 79
      },
      "nodeContext" : "TypeVariable<?> componentVar=(TypeVariable<?>)componentType;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.reflect.Type"
  }, {
    "nodeContext" : "componentType",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 26,
      "startColumnNumber" : 30,
      "endLineNumber" : 26,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 26,
        "startColumnNumber" : 12,
        "endLineNumber" : 26,
        "endColumnNumber" : 50
      },
      "nodeContext" : "parser.parseArray(componentType,list)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 26,
        "startColumnNumber" : 12,
        "endLineNumber" : 26,
        "endColumnNumber" : 51
      },
      "nodeContext" : "parser.parseArray(componentType,list);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 808,
        "startLineNumber" : 18,
        "startColumnNumber" : 46,
        "endLineNumber" : 38,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Type componentType=((GenericArrayType)type).getGenericComponentType();\n  if (componentType instanceof TypeVariable) {\n    TypeVariable<?> componentVar=(TypeVariable<?>)componentType;\n    componentType=componentVar.getBounds()[0];\n  }\n  List<Object> list=new ArrayList<Object>();\n  parser.parseArray(componentType,list);\n  Class<?> componentClass;\n  if (componentType instanceof Class) {\n    componentClass=(Class<?>)componentType;\n    Object[] array=(Object[])Array.newInstance(componentClass,list.size());\n    list.toArray(array);\n    return (T)array;\n  }\n else {\n    return (T)list.toArray();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 846,
        "startLineNumber" : 18,
        "startColumnNumber" : 8,
        "endLineNumber" : 38,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (type instanceof GenericArrayType) {\n  Type componentType=((GenericArrayType)type).getGenericComponentType();\n  if (componentType instanceof TypeVariable) {\n    TypeVariable<?> componentVar=(TypeVariable<?>)componentType;\n    componentType=componentVar.getBounds()[0];\n  }\n  List<Object> list=new ArrayList<Object>();\n  parser.parseArray(componentType,list);\n  Class<?> componentClass;\n  if (componentType instanceof Class) {\n    componentClass=(Class<?>)componentType;\n    Object[] array=(Object[])Array.newInstance(componentClass,list.size());\n    list.toArray(array);\n    return (T)array;\n  }\n else {\n    return (T)list.toArray();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 124,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 907,
        "startLineNumber" : 17,
        "startColumnNumber" : 83,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (type instanceof GenericArrayType) {\n    Type componentType=((GenericArrayType)type).getGenericComponentType();\n    if (componentType instanceof TypeVariable) {\n      TypeVariable<?> componentVar=(TypeVariable<?>)componentType;\n      componentType=componentVar.getBounds()[0];\n    }\n    List<Object> list=new ArrayList<Object>();\n    parser.parseArray(componentType,list);\n    Class<?> componentClass;\n    if (componentType instanceof Class) {\n      componentClass=(Class<?>)componentType;\n      Object[] array=(Object[])Array.newInstance(componentClass,list.size());\n      list.toArray(array);\n      return (T)array;\n    }\n else {\n      return (T)list.toArray();\n    }\n  }\n  return (T)parser.parse(fieldName);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1021,
        "startLineNumber" : 16,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") public <T>T deserialze(DefaultJSONParser parser,Type type,Object fieldName){\n  if (type instanceof GenericArrayType) {\n    Type componentType=((GenericArrayType)type).getGenericComponentType();\n    if (componentType instanceof TypeVariable) {\n      TypeVariable<?> componentVar=(TypeVariable<?>)componentType;\n      componentType=componentVar.getBounds()[0];\n    }\n    List<Object> list=new ArrayList<Object>();\n    parser.parseArray(componentType,list);\n    Class<?> componentClass;\n    if (componentType instanceof Class) {\n      componentClass=(Class<?>)componentType;\n      Object[] array=(Object[])Array.newInstance(componentClass,list.size());\n      list.toArray(array);\n      return (T)array;\n    }\n else {\n      return (T)list.toArray();\n    }\n  }\n  return (T)parser.parse(fieldName);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 155,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 26,
        "startColumnNumber" : 12,
        "endLineNumber" : 26,
        "endColumnNumber" : 51
      },
      "nodeContext" : "parser.parseArray(componentType,list);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.reflect.Type"
  }, {
    "nodeContext" : "componentType",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 28,
      "startColumnNumber" : 16,
      "endLineNumber" : 28,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 28,
        "startColumnNumber" : 16,
        "endLineNumber" : 28,
        "endColumnNumber" : 46
      },
      "nodeContext" : "componentType instanceof Class",
      "nodeType" : "InstanceofExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 338,
        "startLineNumber" : 28,
        "startColumnNumber" : 12,
        "endLineNumber" : 36,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (componentType instanceof Class) {\n  componentClass=(Class<?>)componentType;\n  Object[] array=(Object[])Array.newInstance(componentClass,list.size());\n  list.toArray(array);\n  return (T)array;\n}\n else {\n  return (T)list.toArray();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 52,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 808,
        "startLineNumber" : 18,
        "startColumnNumber" : 46,
        "endLineNumber" : 38,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Type componentType=((GenericArrayType)type).getGenericComponentType();\n  if (componentType instanceof TypeVariable) {\n    TypeVariable<?> componentVar=(TypeVariable<?>)componentType;\n    componentType=componentVar.getBounds()[0];\n  }\n  List<Object> list=new ArrayList<Object>();\n  parser.parseArray(componentType,list);\n  Class<?> componentClass;\n  if (componentType instanceof Class) {\n    componentClass=(Class<?>)componentType;\n    Object[] array=(Object[])Array.newInstance(componentClass,list.size());\n    list.toArray(array);\n    return (T)array;\n  }\n else {\n    return (T)list.toArray();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 846,
        "startLineNumber" : 18,
        "startColumnNumber" : 8,
        "endLineNumber" : 38,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (type instanceof GenericArrayType) {\n  Type componentType=((GenericArrayType)type).getGenericComponentType();\n  if (componentType instanceof TypeVariable) {\n    TypeVariable<?> componentVar=(TypeVariable<?>)componentType;\n    componentType=componentVar.getBounds()[0];\n  }\n  List<Object> list=new ArrayList<Object>();\n  parser.parseArray(componentType,list);\n  Class<?> componentClass;\n  if (componentType instanceof Class) {\n    componentClass=(Class<?>)componentType;\n    Object[] array=(Object[])Array.newInstance(componentClass,list.size());\n    list.toArray(array);\n    return (T)array;\n  }\n else {\n    return (T)list.toArray();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 124,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 907,
        "startLineNumber" : 17,
        "startColumnNumber" : 83,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (type instanceof GenericArrayType) {\n    Type componentType=((GenericArrayType)type).getGenericComponentType();\n    if (componentType instanceof TypeVariable) {\n      TypeVariable<?> componentVar=(TypeVariable<?>)componentType;\n      componentType=componentVar.getBounds()[0];\n    }\n    List<Object> list=new ArrayList<Object>();\n    parser.parseArray(componentType,list);\n    Class<?> componentClass;\n    if (componentType instanceof Class) {\n      componentClass=(Class<?>)componentType;\n      Object[] array=(Object[])Array.newInstance(componentClass,list.size());\n      list.toArray(array);\n      return (T)array;\n    }\n else {\n      return (T)list.toArray();\n    }\n  }\n  return (T)parser.parse(fieldName);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1021,
        "startLineNumber" : 16,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") public <T>T deserialze(DefaultJSONParser parser,Type type,Object fieldName){\n  if (type instanceof GenericArrayType) {\n    Type componentType=((GenericArrayType)type).getGenericComponentType();\n    if (componentType instanceof TypeVariable) {\n      TypeVariable<?> componentVar=(TypeVariable<?>)componentType;\n      componentType=componentVar.getBounds()[0];\n    }\n    List<Object> list=new ArrayList<Object>();\n    parser.parseArray(componentType,list);\n    Class<?> componentClass;\n    if (componentType instanceof Class) {\n      componentClass=(Class<?>)componentType;\n      Object[] array=(Object[])Array.newInstance(componentClass,list.size());\n      list.toArray(array);\n      return (T)array;\n    }\n else {\n      return (T)list.toArray();\n    }\n  }\n  return (T)parser.parse(fieldName);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 155,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 28,
        "startColumnNumber" : 16,
        "endLineNumber" : 28,
        "endColumnNumber" : 46
      },
      "nodeContext" : "componentType instanceof Class",
      "nodeType" : "InstanceofExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.reflect.Type"
  }, {
    "nodeContext" : "componentType",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 29,
      "startColumnNumber" : 44,
      "endLineNumber" : 29,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 29,
        "startColumnNumber" : 33,
        "endLineNumber" : 29,
        "endColumnNumber" : 57
      },
      "nodeContext" : "(Class<?>)componentType",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 29,
        "startColumnNumber" : 16,
        "endLineNumber" : 29,
        "endColumnNumber" : 57
      },
      "nodeContext" : "componentClass=(Class<?>)componentType",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 29,
        "startColumnNumber" : 16,
        "endLineNumber" : 29,
        "endColumnNumber" : 58
      },
      "nodeContext" : "componentClass=(Class<?>)componentType;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 238,
        "startLineNumber" : 28,
        "startColumnNumber" : 48,
        "endLineNumber" : 34,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  componentClass=(Class<?>)componentType;\n  Object[] array=(Object[])Array.newInstance(componentClass,list.size());\n  list.toArray(array);\n  return (T)array;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 338,
        "startLineNumber" : 28,
        "startColumnNumber" : 12,
        "endLineNumber" : 36,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (componentType instanceof Class) {\n  componentClass=(Class<?>)componentType;\n  Object[] array=(Object[])Array.newInstance(componentClass,list.size());\n  list.toArray(array);\n  return (T)array;\n}\n else {\n  return (T)list.toArray();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 52,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 808,
        "startLineNumber" : 18,
        "startColumnNumber" : 46,
        "endLineNumber" : 38,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Type componentType=((GenericArrayType)type).getGenericComponentType();\n  if (componentType instanceof TypeVariable) {\n    TypeVariable<?> componentVar=(TypeVariable<?>)componentType;\n    componentType=componentVar.getBounds()[0];\n  }\n  List<Object> list=new ArrayList<Object>();\n  parser.parseArray(componentType,list);\n  Class<?> componentClass;\n  if (componentType instanceof Class) {\n    componentClass=(Class<?>)componentType;\n    Object[] array=(Object[])Array.newInstance(componentClass,list.size());\n    list.toArray(array);\n    return (T)array;\n  }\n else {\n    return (T)list.toArray();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 846,
        "startLineNumber" : 18,
        "startColumnNumber" : 8,
        "endLineNumber" : 38,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (type instanceof GenericArrayType) {\n  Type componentType=((GenericArrayType)type).getGenericComponentType();\n  if (componentType instanceof TypeVariable) {\n    TypeVariable<?> componentVar=(TypeVariable<?>)componentType;\n    componentType=componentVar.getBounds()[0];\n  }\n  List<Object> list=new ArrayList<Object>();\n  parser.parseArray(componentType,list);\n  Class<?> componentClass;\n  if (componentType instanceof Class) {\n    componentClass=(Class<?>)componentType;\n    Object[] array=(Object[])Array.newInstance(componentClass,list.size());\n    list.toArray(array);\n    return (T)array;\n  }\n else {\n    return (T)list.toArray();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 124,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 907,
        "startLineNumber" : 17,
        "startColumnNumber" : 83,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (type instanceof GenericArrayType) {\n    Type componentType=((GenericArrayType)type).getGenericComponentType();\n    if (componentType instanceof TypeVariable) {\n      TypeVariable<?> componentVar=(TypeVariable<?>)componentType;\n      componentType=componentVar.getBounds()[0];\n    }\n    List<Object> list=new ArrayList<Object>();\n    parser.parseArray(componentType,list);\n    Class<?> componentClass;\n    if (componentType instanceof Class) {\n      componentClass=(Class<?>)componentType;\n      Object[] array=(Object[])Array.newInstance(componentClass,list.size());\n      list.toArray(array);\n      return (T)array;\n    }\n else {\n      return (T)list.toArray();\n    }\n  }\n  return (T)parser.parse(fieldName);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1021,
        "startLineNumber" : 16,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") public <T>T deserialze(DefaultJSONParser parser,Type type,Object fieldName){\n  if (type instanceof GenericArrayType) {\n    Type componentType=((GenericArrayType)type).getGenericComponentType();\n    if (componentType instanceof TypeVariable) {\n      TypeVariable<?> componentVar=(TypeVariable<?>)componentType;\n      componentType=componentVar.getBounds()[0];\n    }\n    List<Object> list=new ArrayList<Object>();\n    parser.parseArray(componentType,list);\n    Class<?> componentClass;\n    if (componentType instanceof Class) {\n      componentClass=(Class<?>)componentType;\n      Object[] array=(Object[])Array.newInstance(componentClass,list.size());\n      list.toArray(array);\n      return (T)array;\n    }\n else {\n      return (T)list.toArray();\n    }\n  }\n  return (T)parser.parse(fieldName);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 155,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 29,
        "startColumnNumber" : 16,
        "endLineNumber" : 29,
        "endColumnNumber" : 58
      },
      "nodeContext" : "componentClass=(Class<?>)componentType;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.reflect.Type"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 20,
    "startColumnNumber" : 16,
    "endLineNumber" : 20,
    "endColumnNumber" : 29
  }, {
    "charLength" : 13,
    "startLineNumber" : 21,
    "startColumnNumber" : 65,
    "endLineNumber" : 21,
    "endColumnNumber" : 78
  }, {
    "charLength" : 13,
    "startLineNumber" : 26,
    "startColumnNumber" : 30,
    "endLineNumber" : 26,
    "endColumnNumber" : 43
  }, {
    "charLength" : 13,
    "startLineNumber" : 28,
    "startColumnNumber" : 16,
    "endLineNumber" : 28,
    "endColumnNumber" : 29
  }, {
    "charLength" : 13,
    "startLineNumber" : 29,
    "startColumnNumber" : 44,
    "endLineNumber" : 29,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 4
  } ]
}