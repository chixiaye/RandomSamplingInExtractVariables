{
  "id" : 307,
  "expression" : "null",
  "projectName" : "GoogleContainerTools@jib",
  "commitID" : "a0742fd277b5490a0965dba4443f5864f1250199",
  "filePath" : "/jib-core/src/test/java/com/google/cloud/tools/jib/registry/AuthenticationMethodRetrieverTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 100,
      "startColumnNumber" : 59,
      "endLineNumber" : 100,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 100,
        "startColumnNumber" : 4,
        "endLineNumber" : 100,
        "endColumnNumber" : 64
      },
      "nodeContext" : "Mockito.when(mockHeaders.getAuthenticate()).thenReturn(null)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 100,
        "startColumnNumber" : 4,
        "endLineNumber" : 100,
        "endColumnNumber" : 65
      },
      "nodeContext" : "Mockito.when(mockHeaders.getAuthenticate()).thenReturn(null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 672,
        "startLineNumber" : 96,
        "startColumnNumber" : 86,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Mockito.when(mockHttpResponseException.getStatusCode()).thenReturn(HttpStatusCodes.STATUS_CODE_UNAUTHORIZED);\n  Mockito.when(mockHttpResponseException.getHeaders()).thenReturn(mockHeaders);\n  Mockito.when(mockHeaders.getAuthenticate()).thenReturn(null);\n  try {\n    testAuthenticationMethodRetriever.handleHttpResponseException(mockHttpResponseException);\n    Assert.fail(\"Authentication method retriever should fail if 'WWW-Authenticate' header is not found\");\n  }\n catch (  RegistryErrorException ex) {\n    Assert.assertThat(ex.getMessage(),CoreMatchers.containsString(\"'WWW-Authenticate' header not found\"));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 764,
        "startLineNumber" : 95,
        "startColumnNumber" : 2,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void tsetHandleHttpResponseException_noHeader() throws HttpResponseException {\n  Mockito.when(mockHttpResponseException.getStatusCode()).thenReturn(HttpStatusCodes.STATUS_CODE_UNAUTHORIZED);\n  Mockito.when(mockHttpResponseException.getHeaders()).thenReturn(mockHeaders);\n  Mockito.when(mockHeaders.getAuthenticate()).thenReturn(null);\n  try {\n    testAuthenticationMethodRetriever.handleHttpResponseException(mockHttpResponseException);\n    Assert.fail(\"Authentication method retriever should fail if 'WWW-Authenticate' header is not found\");\n  }\n catch (  RegistryErrorException ex) {\n    Assert.assertThat(ex.getMessage(),CoreMatchers.containsString(\"'WWW-Authenticate' header not found\"));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 70,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 100,
        "startColumnNumber" : 4,
        "endLineNumber" : 100,
        "endColumnNumber" : 65
      },
      "nodeContext" : "Mockito.when(mockHeaders.getAuthenticate()).thenReturn(null);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "null"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 100,
    "startColumnNumber" : 59,
    "endLineNumber" : 100,
    "endColumnNumber" : 63
  } ],
  "layoutRelationDataList" : [ ]
}