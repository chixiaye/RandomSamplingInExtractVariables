{
  "id" : 6,
  "expression" : "\"testGroup\"",
  "projectName" : "redisson@redisson",
  "commitID" : "62b5e68c05b7475e1e0f98b4161aacb35d376b97",
  "filePath" : "/redisson-spring-data/redisson-spring-data-27/src/test/java/org/redisson/spring/data/connection/RedissonStreamTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"testGroup\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 18,
      "startColumnNumber" : 68,
      "endLineNumber" : 18,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 18,
        "startColumnNumber" : 8,
        "endLineNumber" : 18,
        "endColumnNumber" : 107
      },
      "nodeContext" : "connection.streamCommands().xGroupCreate(\"test\".getBytes(),\"testGroup\",ReadOffset.latest(),true)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 18,
        "startColumnNumber" : 8,
        "endLineNumber" : 18,
        "endColumnNumber" : 108
      },
      "nodeContext" : "connection.streamCommands().xGroupCreate(\"test\".getBytes(),\"testGroup\",ReadOffset.latest(),true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1035,
        "startLineNumber" : 17,
        "startColumnNumber" : 30,
        "endLineNumber" : 32,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  connection.streamCommands().xGroupCreate(\"test\".getBytes(),\"testGroup\",ReadOffset.latest(),true);\n  PendingMessages p=connection.streamCommands().xPending(\"test\".getBytes(),Consumer.from(\"testGroup\",\"test1\"));\n  assertThat(p.size()).isEqualTo(0);\n  connection.streamCommands().xAdd(\"test\".getBytes(),Collections.singletonMap(\"1\".getBytes(),\"1\".getBytes()));\n  connection.streamCommands().xAdd(\"test\".getBytes(),Collections.singletonMap(\"2\".getBytes(),\"2\".getBytes()));\n  connection.streamCommands().xAdd(\"test\".getBytes(),Collections.singletonMap(\"3\".getBytes(),\"3\".getBytes()));\n  List<ByteRecord> l=connection.streamCommands().xReadGroup(Consumer.from(\"testGroup\",\"test1\"),StreamOffset.create(\"test\".getBytes(),ReadOffset.from(\">\")));\n  assertThat(l.size()).isEqualTo(3);\n  PendingMessages p2=connection.streamCommands().xPending(\"test\".getBytes(),Consumer.from(\"testGroup\",\"test1\"));\n  assertThat(p2.size()).isEqualTo(3);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 160,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1072,
        "startLineNumber" : 16,
        "startColumnNumber" : 4,
        "endLineNumber" : 32,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testPending(){\n  connection.streamCommands().xGroupCreate(\"test\".getBytes(),\"testGroup\",ReadOffset.latest(),true);\n  PendingMessages p=connection.streamCommands().xPending(\"test\".getBytes(),Consumer.from(\"testGroup\",\"test1\"));\n  assertThat(p.size()).isEqualTo(0);\n  connection.streamCommands().xAdd(\"test\".getBytes(),Collections.singletonMap(\"1\".getBytes(),\"1\".getBytes()));\n  connection.streamCommands().xAdd(\"test\".getBytes(),Collections.singletonMap(\"2\".getBytes(),\"2\".getBytes()));\n  connection.streamCommands().xAdd(\"test\".getBytes(),Collections.singletonMap(\"3\".getBytes(),\"3\".getBytes()));\n  List<ByteRecord> l=connection.streamCommands().xReadGroup(Consumer.from(\"testGroup\",\"test1\"),StreamOffset.create(\"test\".getBytes(),ReadOffset.from(\">\")));\n  assertThat(l.size()).isEqualTo(3);\n  PendingMessages p2=connection.streamCommands().xPending(\"test\".getBytes(),Consumer.from(\"testGroup\",\"test1\"));\n  assertThat(p2.size()).isEqualTo(3);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 166,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 18,
        "startColumnNumber" : 8,
        "endLineNumber" : 18,
        "endColumnNumber" : 108
      },
      "nodeContext" : "connection.streamCommands().xGroupCreate(\"test\".getBytes(),\"testGroup\",ReadOffset.latest(),true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"testGroup\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 20,
      "startColumnNumber" : 98,
      "endLineNumber" : 20,
      "endColumnNumber" : 109
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 20,
        "startColumnNumber" : 84,
        "endLineNumber" : 20,
        "endColumnNumber" : 119
      },
      "nodeContext" : "Consumer.from(\"testGroup\",\"test1\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 20,
        "startColumnNumber" : 28,
        "endLineNumber" : 20,
        "endColumnNumber" : 120
      },
      "nodeContext" : "connection.streamCommands().xPending(\"test\".getBytes(),Consumer.from(\"testGroup\",\"test1\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 20,
        "startColumnNumber" : 24,
        "endLineNumber" : 20,
        "endColumnNumber" : 120
      },
      "nodeContext" : "p=connection.streamCommands().xPending(\"test\".getBytes(),Consumer.from(\"testGroup\",\"test1\"))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 20,
        "startColumnNumber" : 8,
        "endLineNumber" : 20,
        "endColumnNumber" : 121
      },
      "nodeContext" : "PendingMessages p=connection.streamCommands().xPending(\"test\".getBytes(),Consumer.from(\"testGroup\",\"test1\"));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1035,
        "startLineNumber" : 17,
        "startColumnNumber" : 30,
        "endLineNumber" : 32,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  connection.streamCommands().xGroupCreate(\"test\".getBytes(),\"testGroup\",ReadOffset.latest(),true);\n  PendingMessages p=connection.streamCommands().xPending(\"test\".getBytes(),Consumer.from(\"testGroup\",\"test1\"));\n  assertThat(p.size()).isEqualTo(0);\n  connection.streamCommands().xAdd(\"test\".getBytes(),Collections.singletonMap(\"1\".getBytes(),\"1\".getBytes()));\n  connection.streamCommands().xAdd(\"test\".getBytes(),Collections.singletonMap(\"2\".getBytes(),\"2\".getBytes()));\n  connection.streamCommands().xAdd(\"test\".getBytes(),Collections.singletonMap(\"3\".getBytes(),\"3\".getBytes()));\n  List<ByteRecord> l=connection.streamCommands().xReadGroup(Consumer.from(\"testGroup\",\"test1\"),StreamOffset.create(\"test\".getBytes(),ReadOffset.from(\">\")));\n  assertThat(l.size()).isEqualTo(3);\n  PendingMessages p2=connection.streamCommands().xPending(\"test\".getBytes(),Consumer.from(\"testGroup\",\"test1\"));\n  assertThat(p2.size()).isEqualTo(3);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 160,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1072,
        "startLineNumber" : 16,
        "startColumnNumber" : 4,
        "endLineNumber" : 32,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testPending(){\n  connection.streamCommands().xGroupCreate(\"test\".getBytes(),\"testGroup\",ReadOffset.latest(),true);\n  PendingMessages p=connection.streamCommands().xPending(\"test\".getBytes(),Consumer.from(\"testGroup\",\"test1\"));\n  assertThat(p.size()).isEqualTo(0);\n  connection.streamCommands().xAdd(\"test\".getBytes(),Collections.singletonMap(\"1\".getBytes(),\"1\".getBytes()));\n  connection.streamCommands().xAdd(\"test\".getBytes(),Collections.singletonMap(\"2\".getBytes(),\"2\".getBytes()));\n  connection.streamCommands().xAdd(\"test\".getBytes(),Collections.singletonMap(\"3\".getBytes(),\"3\".getBytes()));\n  List<ByteRecord> l=connection.streamCommands().xReadGroup(Consumer.from(\"testGroup\",\"test1\"),StreamOffset.create(\"test\".getBytes(),ReadOffset.from(\">\")));\n  assertThat(l.size()).isEqualTo(3);\n  PendingMessages p2=connection.streamCommands().xPending(\"test\".getBytes(),Consumer.from(\"testGroup\",\"test1\"));\n  assertThat(p2.size()).isEqualTo(3);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 166,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 20,
        "startColumnNumber" : 8,
        "endLineNumber" : 20,
        "endColumnNumber" : 121
      },
      "nodeContext" : "PendingMessages p=connection.streamCommands().xPending(\"test\".getBytes(),Consumer.from(\"testGroup\",\"test1\"));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"testGroup\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 27,
      "startColumnNumber" : 82,
      "endLineNumber" : 27,
      "endColumnNumber" : 93
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 27,
        "startColumnNumber" : 68,
        "endLineNumber" : 27,
        "endColumnNumber" : 103
      },
      "nodeContext" : "Consumer.from(\"testGroup\",\"test1\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 27,
        "startColumnNumber" : 29,
        "endLineNumber" : 27,
        "endColumnNumber" : 166
      },
      "nodeContext" : "connection.streamCommands().xReadGroup(Consumer.from(\"testGroup\",\"test1\"),StreamOffset.create(\"test\".getBytes(),ReadOffset.from(\">\")))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 27,
        "startColumnNumber" : 25,
        "endLineNumber" : 27,
        "endColumnNumber" : 166
      },
      "nodeContext" : "l=connection.streamCommands().xReadGroup(Consumer.from(\"testGroup\",\"test1\"),StreamOffset.create(\"test\".getBytes(),ReadOffset.from(\">\")))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 22,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 27,
        "startColumnNumber" : 8,
        "endLineNumber" : 27,
        "endColumnNumber" : 167
      },
      "nodeContext" : "List<ByteRecord> l=connection.streamCommands().xReadGroup(Consumer.from(\"testGroup\",\"test1\"),StreamOffset.create(\"test\".getBytes(),ReadOffset.from(\">\")));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 28,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1035,
        "startLineNumber" : 17,
        "startColumnNumber" : 30,
        "endLineNumber" : 32,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  connection.streamCommands().xGroupCreate(\"test\".getBytes(),\"testGroup\",ReadOffset.latest(),true);\n  PendingMessages p=connection.streamCommands().xPending(\"test\".getBytes(),Consumer.from(\"testGroup\",\"test1\"));\n  assertThat(p.size()).isEqualTo(0);\n  connection.streamCommands().xAdd(\"test\".getBytes(),Collections.singletonMap(\"1\".getBytes(),\"1\".getBytes()));\n  connection.streamCommands().xAdd(\"test\".getBytes(),Collections.singletonMap(\"2\".getBytes(),\"2\".getBytes()));\n  connection.streamCommands().xAdd(\"test\".getBytes(),Collections.singletonMap(\"3\".getBytes(),\"3\".getBytes()));\n  List<ByteRecord> l=connection.streamCommands().xReadGroup(Consumer.from(\"testGroup\",\"test1\"),StreamOffset.create(\"test\".getBytes(),ReadOffset.from(\">\")));\n  assertThat(l.size()).isEqualTo(3);\n  PendingMessages p2=connection.streamCommands().xPending(\"test\".getBytes(),Consumer.from(\"testGroup\",\"test1\"));\n  assertThat(p2.size()).isEqualTo(3);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 160,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1072,
        "startLineNumber" : 16,
        "startColumnNumber" : 4,
        "endLineNumber" : 32,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testPending(){\n  connection.streamCommands().xGroupCreate(\"test\".getBytes(),\"testGroup\",ReadOffset.latest(),true);\n  PendingMessages p=connection.streamCommands().xPending(\"test\".getBytes(),Consumer.from(\"testGroup\",\"test1\"));\n  assertThat(p.size()).isEqualTo(0);\n  connection.streamCommands().xAdd(\"test\".getBytes(),Collections.singletonMap(\"1\".getBytes(),\"1\".getBytes()));\n  connection.streamCommands().xAdd(\"test\".getBytes(),Collections.singletonMap(\"2\".getBytes(),\"2\".getBytes()));\n  connection.streamCommands().xAdd(\"test\".getBytes(),Collections.singletonMap(\"3\".getBytes(),\"3\".getBytes()));\n  List<ByteRecord> l=connection.streamCommands().xReadGroup(Consumer.from(\"testGroup\",\"test1\"),StreamOffset.create(\"test\".getBytes(),ReadOffset.from(\">\")));\n  assertThat(l.size()).isEqualTo(3);\n  PendingMessages p2=connection.streamCommands().xPending(\"test\".getBytes(),Consumer.from(\"testGroup\",\"test1\"));\n  assertThat(p2.size()).isEqualTo(3);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 166,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 27,
        "startColumnNumber" : 8,
        "endLineNumber" : 27,
        "endColumnNumber" : 167
      },
      "nodeContext" : "List<ByteRecord> l=connection.streamCommands().xReadGroup(Consumer.from(\"testGroup\",\"test1\"),StreamOffset.create(\"test\".getBytes(),ReadOffset.from(\">\")));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 28,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"testGroup\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 30,
      "startColumnNumber" : 99,
      "endLineNumber" : 30,
      "endColumnNumber" : 110
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 30,
        "startColumnNumber" : 85,
        "endLineNumber" : 30,
        "endColumnNumber" : 120
      },
      "nodeContext" : "Consumer.from(\"testGroup\",\"test1\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 30,
        "startColumnNumber" : 29,
        "endLineNumber" : 30,
        "endColumnNumber" : 121
      },
      "nodeContext" : "connection.streamCommands().xPending(\"test\".getBytes(),Consumer.from(\"testGroup\",\"test1\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 30,
        "startColumnNumber" : 24,
        "endLineNumber" : 30,
        "endColumnNumber" : 121
      },
      "nodeContext" : "p2=connection.streamCommands().xPending(\"test\".getBytes(),Consumer.from(\"testGroup\",\"test1\"))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 30,
        "startColumnNumber" : 8,
        "endLineNumber" : 30,
        "endColumnNumber" : 122
      },
      "nodeContext" : "PendingMessages p2=connection.streamCommands().xPending(\"test\".getBytes(),Consumer.from(\"testGroup\",\"test1\"));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1035,
        "startLineNumber" : 17,
        "startColumnNumber" : 30,
        "endLineNumber" : 32,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  connection.streamCommands().xGroupCreate(\"test\".getBytes(),\"testGroup\",ReadOffset.latest(),true);\n  PendingMessages p=connection.streamCommands().xPending(\"test\".getBytes(),Consumer.from(\"testGroup\",\"test1\"));\n  assertThat(p.size()).isEqualTo(0);\n  connection.streamCommands().xAdd(\"test\".getBytes(),Collections.singletonMap(\"1\".getBytes(),\"1\".getBytes()));\n  connection.streamCommands().xAdd(\"test\".getBytes(),Collections.singletonMap(\"2\".getBytes(),\"2\".getBytes()));\n  connection.streamCommands().xAdd(\"test\".getBytes(),Collections.singletonMap(\"3\".getBytes(),\"3\".getBytes()));\n  List<ByteRecord> l=connection.streamCommands().xReadGroup(Consumer.from(\"testGroup\",\"test1\"),StreamOffset.create(\"test\".getBytes(),ReadOffset.from(\">\")));\n  assertThat(l.size()).isEqualTo(3);\n  PendingMessages p2=connection.streamCommands().xPending(\"test\".getBytes(),Consumer.from(\"testGroup\",\"test1\"));\n  assertThat(p2.size()).isEqualTo(3);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 160,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1072,
        "startLineNumber" : 16,
        "startColumnNumber" : 4,
        "endLineNumber" : 32,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testPending(){\n  connection.streamCommands().xGroupCreate(\"test\".getBytes(),\"testGroup\",ReadOffset.latest(),true);\n  PendingMessages p=connection.streamCommands().xPending(\"test\".getBytes(),Consumer.from(\"testGroup\",\"test1\"));\n  assertThat(p.size()).isEqualTo(0);\n  connection.streamCommands().xAdd(\"test\".getBytes(),Collections.singletonMap(\"1\".getBytes(),\"1\".getBytes()));\n  connection.streamCommands().xAdd(\"test\".getBytes(),Collections.singletonMap(\"2\".getBytes(),\"2\".getBytes()));\n  connection.streamCommands().xAdd(\"test\".getBytes(),Collections.singletonMap(\"3\".getBytes(),\"3\".getBytes()));\n  List<ByteRecord> l=connection.streamCommands().xReadGroup(Consumer.from(\"testGroup\",\"test1\"),StreamOffset.create(\"test\".getBytes(),ReadOffset.from(\">\")));\n  assertThat(l.size()).isEqualTo(3);\n  PendingMessages p2=connection.streamCommands().xPending(\"test\".getBytes(),Consumer.from(\"testGroup\",\"test1\"));\n  assertThat(p2.size()).isEqualTo(3);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 166,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 30,
        "startColumnNumber" : 8,
        "endLineNumber" : 30,
        "endColumnNumber" : 122
      },
      "nodeContext" : "PendingMessages p2=connection.streamCommands().xPending(\"test\".getBytes(),Consumer.from(\"testGroup\",\"test1\"));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 18,
    "startColumnNumber" : 68,
    "endLineNumber" : 18,
    "endColumnNumber" : 79
  }, {
    "charLength" : 11,
    "startLineNumber" : 20,
    "startColumnNumber" : 98,
    "endLineNumber" : 20,
    "endColumnNumber" : 109
  }, {
    "charLength" : 11,
    "startLineNumber" : 27,
    "startColumnNumber" : 82,
    "endLineNumber" : 27,
    "endColumnNumber" : 93
  }, {
    "charLength" : 11,
    "startLineNumber" : 30,
    "startColumnNumber" : 99,
    "endLineNumber" : 30,
    "endColumnNumber" : 110
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  } ]
}