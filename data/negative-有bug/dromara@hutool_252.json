{
  "id" : 252,
  "expression" : "nameAnnotationAttribute.getAttributeName()",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-core/src/test/java/cn/hutool/core/annotation/MirroredAnnotationAttributeTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "nameAnnotationAttribute.getAttributeName()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 42,
      "startLineNumber" : 27,
      "startColumnNumber" : 44,
      "endLineNumber" : 27,
      "endColumnNumber" : 86
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 27,
        "startColumnNumber" : 2,
        "endLineNumber" : 27,
        "endColumnNumber" : 87
      },
      "nodeContext" : "Assert.assertEquals(nameMethod.getName(),nameAnnotationAttribute.getAttributeName())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 27,
        "startColumnNumber" : 2,
        "endLineNumber" : 27,
        "endColumnNumber" : 88
      },
      "nodeContext" : "Assert.assertEquals(nameMethod.getName(),nameAnnotationAttribute.getAttributeName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1021,
        "startLineNumber" : 13,
        "startColumnNumber" : 28,
        "endLineNumber" : 29,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  final Annotation annotation=ClassForTest1.class.getAnnotation(AnnotationForTest.class);\n  final Method valueMethod=ReflectUtil.getMethod(AnnotationForTest.class,\"value\");\n  final CacheableAnnotationAttribute valueAttribute=new CacheableAnnotationAttribute(annotation,valueMethod);\n  final Method nameMethod=ReflectUtil.getMethod(AnnotationForTest.class,\"name\");\n  final CacheableAnnotationAttribute nameAttribute=new CacheableAnnotationAttribute(annotation,nameMethod);\n  final MirroredAnnotationAttribute nameAnnotationAttribute=new MirroredAnnotationAttribute(nameAttribute,valueAttribute);\n  Assert.assertEquals(annotation,nameAnnotationAttribute.getAnnotation());\n  Assert.assertEquals(annotation.annotationType(),nameAnnotationAttribute.getAnnotationType());\n  Assert.assertEquals(nameMethod.getName(),nameAnnotationAttribute.getAttributeName());\n  Assert.assertEquals(nameMethod.getReturnType(),nameAnnotationAttribute.getAttributeType());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1056,
        "startLineNumber" : 12,
        "startColumnNumber" : 1,
        "endLineNumber" : 29,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void baseInfoTest(){\n  final Annotation annotation=ClassForTest1.class.getAnnotation(AnnotationForTest.class);\n  final Method valueMethod=ReflectUtil.getMethod(AnnotationForTest.class,\"value\");\n  final CacheableAnnotationAttribute valueAttribute=new CacheableAnnotationAttribute(annotation,valueMethod);\n  final Method nameMethod=ReflectUtil.getMethod(AnnotationForTest.class,\"name\");\n  final CacheableAnnotationAttribute nameAttribute=new CacheableAnnotationAttribute(annotation,nameMethod);\n  final MirroredAnnotationAttribute nameAnnotationAttribute=new MirroredAnnotationAttribute(nameAttribute,valueAttribute);\n  Assert.assertEquals(annotation,nameAnnotationAttribute.getAnnotation());\n  Assert.assertEquals(annotation.annotationType(),nameAnnotationAttribute.getAnnotationType());\n  Assert.assertEquals(nameMethod.getName(),nameAnnotationAttribute.getAttributeName());\n  Assert.assertEquals(nameMethod.getReturnType(),nameAnnotationAttribute.getAttributeType());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 118,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 27,
        "startColumnNumber" : 2,
        "endLineNumber" : 27,
        "endColumnNumber" : 88
      },
      "nodeContext" : "Assert.assertEquals(nameMethod.getName(),nameAnnotationAttribute.getAttributeName());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 42,
    "startLineNumber" : 27,
    "startColumnNumber" : 44,
    "endLineNumber" : 27,
    "endColumnNumber" : 86
  } ],
  "layoutRelationDataList" : [ ]
}