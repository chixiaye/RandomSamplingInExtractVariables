{
  "id" : 199,
  "expression" : "1",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-features/shardingsphere-readwrite-splitting/shardingsphere-readwrite-splitting-spring/shardingsphere-readwrite-splitting-spring-boot-starter/src/test/java/org/apache/shardingsphere/readwritesplitting/spring/boot/ReadwriteSplittingSpringBootStarterTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 55,
      "startColumnNumber" : 54,
      "endLineNumber" : 55,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 55,
        "startColumnNumber" : 51,
        "endLineNumber" : 55,
        "endColumnNumber" : 56
      },
      "nodeContext" : "is(1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 57
      },
      "nodeContext" : "assertThat(config.getDataSources().size(),is(1))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 58
      },
      "nodeContext" : "assertThat(config.getDataSources().size(),is(1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 802,
        "startLineNumber" : 54,
        "startColumnNumber" : 60,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertThat(config.getDataSources().size(),is(1));\n  assertTrue(config.getDataSources().stream().findFirst().isPresent());\n  ReadwriteSplittingDataSourceRuleConfiguration dataSourceRuleConfig=config.getDataSources().stream().findFirst().get();\n  assertThat(dataSourceRuleConfig.getName(),is(\"pr_ds\"));\n  assertThat(dataSourceRuleConfig.getWriteDataSourceName(),is(\"write_ds\"));\n  assertThat(dataSourceRuleConfig.getLoadBalancerName(),is(\"random\"));\n  assertThat(dataSourceRuleConfig.getReadDataSourceNames().size(),is(2));\n  assertTrue(config.getDataSources().contains(dataSourceRuleConfig));\n  assertThat(config.getLoadBalanceAlgorithms().size(),is(1));\n  assertTrue(config.getLoadBalanceAlgorithms().containsKey(\"random\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 868,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void assertReadwriteSplittingRuleConfiguration(){\n  assertThat(config.getDataSources().size(),is(1));\n  assertTrue(config.getDataSources().stream().findFirst().isPresent());\n  ReadwriteSplittingDataSourceRuleConfiguration dataSourceRuleConfig=config.getDataSources().stream().findFirst().get();\n  assertThat(dataSourceRuleConfig.getName(),is(\"pr_ds\"));\n  assertThat(dataSourceRuleConfig.getWriteDataSourceName(),is(\"write_ds\"));\n  assertThat(dataSourceRuleConfig.getLoadBalancerName(),is(\"random\"));\n  assertThat(dataSourceRuleConfig.getReadDataSourceNames().size(),is(2));\n  assertTrue(config.getDataSources().contains(dataSourceRuleConfig));\n  assertThat(config.getLoadBalanceAlgorithms().size(),is(1));\n  assertTrue(config.getLoadBalanceAlgorithms().containsKey(\"random\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 111,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 58
      },
      "nodeContext" : "assertThat(config.getDataSources().size(),is(1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 63,
      "startColumnNumber" : 64,
      "endLineNumber" : 63,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 63,
        "startColumnNumber" : 61,
        "endLineNumber" : 63,
        "endColumnNumber" : 66
      },
      "nodeContext" : "is(1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 67
      },
      "nodeContext" : "assertThat(config.getLoadBalanceAlgorithms().size(),is(1))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 68
      },
      "nodeContext" : "assertThat(config.getLoadBalanceAlgorithms().size(),is(1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 802,
        "startLineNumber" : 54,
        "startColumnNumber" : 60,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertThat(config.getDataSources().size(),is(1));\n  assertTrue(config.getDataSources().stream().findFirst().isPresent());\n  ReadwriteSplittingDataSourceRuleConfiguration dataSourceRuleConfig=config.getDataSources().stream().findFirst().get();\n  assertThat(dataSourceRuleConfig.getName(),is(\"pr_ds\"));\n  assertThat(dataSourceRuleConfig.getWriteDataSourceName(),is(\"write_ds\"));\n  assertThat(dataSourceRuleConfig.getLoadBalancerName(),is(\"random\"));\n  assertThat(dataSourceRuleConfig.getReadDataSourceNames().size(),is(2));\n  assertTrue(config.getDataSources().contains(dataSourceRuleConfig));\n  assertThat(config.getLoadBalanceAlgorithms().size(),is(1));\n  assertTrue(config.getLoadBalanceAlgorithms().containsKey(\"random\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 868,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void assertReadwriteSplittingRuleConfiguration(){\n  assertThat(config.getDataSources().size(),is(1));\n  assertTrue(config.getDataSources().stream().findFirst().isPresent());\n  ReadwriteSplittingDataSourceRuleConfiguration dataSourceRuleConfig=config.getDataSources().stream().findFirst().get();\n  assertThat(dataSourceRuleConfig.getName(),is(\"pr_ds\"));\n  assertThat(dataSourceRuleConfig.getWriteDataSourceName(),is(\"write_ds\"));\n  assertThat(dataSourceRuleConfig.getLoadBalancerName(),is(\"random\"));\n  assertThat(dataSourceRuleConfig.getReadDataSourceNames().size(),is(2));\n  assertTrue(config.getDataSources().contains(dataSourceRuleConfig));\n  assertThat(config.getLoadBalanceAlgorithms().size(),is(1));\n  assertTrue(config.getLoadBalanceAlgorithms().containsKey(\"random\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 111,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 68
      },
      "nodeContext" : "assertThat(config.getLoadBalanceAlgorithms().size(),is(1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 55,
    "startColumnNumber" : 54,
    "endLineNumber" : 55,
    "endColumnNumber" : 55
  }, {
    "charLength" : 1,
    "startLineNumber" : 63,
    "startColumnNumber" : 64,
    "endLineNumber" : 63,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}