{
  "id" : 436,
  "expression" : "new JsonPrimitive(Double.POSITIVE_INFINITY)",
  "projectName" : "google@gson",
  "commitID" : "c3d0f200b352f411b9ebe45c3bf49d4328b2c51f",
  "filePath" : "/gson/src/test/java/com/google/gson/JsonPrimitiveTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new JsonPrimitive(Double.POSITIVE_INFINITY)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 43,
      "startLineNumber" : 214,
      "startColumnNumber" : 40,
      "endLineNumber" : 214,
      "endColumnNumber" : 83
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 214,
        "startColumnNumber" : 4,
        "endLineNumber" : 215,
        "endColumnNumber" : 52
      },
      "nodeContext" : "MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(Double.POSITIVE_INFINITY),new JsonPrimitive(Double.POSITIVE_INFINITY))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 214,
        "startColumnNumber" : 4,
        "endLineNumber" : 215,
        "endColumnNumber" : 53
      },
      "nodeContext" : "MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(Double.POSITIVE_INFINITY),new JsonPrimitive(Double.POSITIVE_INFINITY));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1332,
        "startLineNumber" : 201,
        "startColumnNumber" : 27,
        "endLineNumber" : 219,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(\"A\"),new JsonPrimitive(\"A\"));\n  MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(true),new JsonPrimitive(true));\n  MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(5L),new JsonPrimitive(5L));\n  MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive('a'),new JsonPrimitive('a'));\n  MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(Float.NaN),new JsonPrimitive(Float.NaN));\n  MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(Float.NEGATIVE_INFINITY),new JsonPrimitive(Float.NEGATIVE_INFINITY));\n  MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(Float.POSITIVE_INFINITY),new JsonPrimitive(Float.POSITIVE_INFINITY));\n  MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(Double.NaN),new JsonPrimitive(Double.NaN));\n  MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(Double.NEGATIVE_INFINITY),new JsonPrimitive(Double.NEGATIVE_INFINITY));\n  MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(Double.POSITIVE_INFINITY),new JsonPrimitive(Double.POSITIVE_INFINITY));\n  assertFalse(new JsonPrimitive(\"a\").equals(new JsonPrimitive(\"b\")));\n  assertFalse(new JsonPrimitive(true).equals(new JsonPrimitive(false)));\n  assertFalse(new JsonPrimitive(0).equals(new JsonPrimitive(1)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 184,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1357,
        "startLineNumber" : 201,
        "startColumnNumber" : 2,
        "endLineNumber" : 219,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testEquals(){\n  MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(\"A\"),new JsonPrimitive(\"A\"));\n  MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(true),new JsonPrimitive(true));\n  MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(5L),new JsonPrimitive(5L));\n  MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive('a'),new JsonPrimitive('a'));\n  MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(Float.NaN),new JsonPrimitive(Float.NaN));\n  MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(Float.NEGATIVE_INFINITY),new JsonPrimitive(Float.NEGATIVE_INFINITY));\n  MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(Float.POSITIVE_INFINITY),new JsonPrimitive(Float.POSITIVE_INFINITY));\n  MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(Double.NaN),new JsonPrimitive(Double.NaN));\n  MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(Double.NEGATIVE_INFINITY),new JsonPrimitive(Double.NEGATIVE_INFINITY));\n  MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(Double.POSITIVE_INFINITY),new JsonPrimitive(Double.POSITIVE_INFINITY));\n  assertFalse(new JsonPrimitive(\"a\").equals(new JsonPrimitive(\"b\")));\n  assertFalse(new JsonPrimitive(true).equals(new JsonPrimitive(false)));\n  assertFalse(new JsonPrimitive(0).equals(new JsonPrimitive(1)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 188,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 214,
        "startColumnNumber" : 4,
        "endLineNumber" : 215,
        "endColumnNumber" : 52
      },
      "nodeContext" : "MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(Double.POSITIVE_INFINITY),new JsonPrimitive(Double.POSITIVE_INFINITY))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "com.google.gson.JsonPrimitive"
  }, {
    "nodeContext" : "new JsonPrimitive(Double.POSITIVE_INFINITY)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 43,
      "startLineNumber" : 215,
      "startColumnNumber" : 8,
      "endLineNumber" : 215,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 214,
        "startColumnNumber" : 4,
        "endLineNumber" : 215,
        "endColumnNumber" : 52
      },
      "nodeContext" : "MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(Double.POSITIVE_INFINITY),new JsonPrimitive(Double.POSITIVE_INFINITY))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 214,
        "startColumnNumber" : 4,
        "endLineNumber" : 215,
        "endColumnNumber" : 53
      },
      "nodeContext" : "MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(Double.POSITIVE_INFINITY),new JsonPrimitive(Double.POSITIVE_INFINITY));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1332,
        "startLineNumber" : 201,
        "startColumnNumber" : 27,
        "endLineNumber" : 219,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(\"A\"),new JsonPrimitive(\"A\"));\n  MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(true),new JsonPrimitive(true));\n  MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(5L),new JsonPrimitive(5L));\n  MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive('a'),new JsonPrimitive('a'));\n  MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(Float.NaN),new JsonPrimitive(Float.NaN));\n  MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(Float.NEGATIVE_INFINITY),new JsonPrimitive(Float.NEGATIVE_INFINITY));\n  MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(Float.POSITIVE_INFINITY),new JsonPrimitive(Float.POSITIVE_INFINITY));\n  MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(Double.NaN),new JsonPrimitive(Double.NaN));\n  MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(Double.NEGATIVE_INFINITY),new JsonPrimitive(Double.NEGATIVE_INFINITY));\n  MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(Double.POSITIVE_INFINITY),new JsonPrimitive(Double.POSITIVE_INFINITY));\n  assertFalse(new JsonPrimitive(\"a\").equals(new JsonPrimitive(\"b\")));\n  assertFalse(new JsonPrimitive(true).equals(new JsonPrimitive(false)));\n  assertFalse(new JsonPrimitive(0).equals(new JsonPrimitive(1)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 184,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1357,
        "startLineNumber" : 201,
        "startColumnNumber" : 2,
        "endLineNumber" : 219,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testEquals(){\n  MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(\"A\"),new JsonPrimitive(\"A\"));\n  MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(true),new JsonPrimitive(true));\n  MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(5L),new JsonPrimitive(5L));\n  MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive('a'),new JsonPrimitive('a'));\n  MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(Float.NaN),new JsonPrimitive(Float.NaN));\n  MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(Float.NEGATIVE_INFINITY),new JsonPrimitive(Float.NEGATIVE_INFINITY));\n  MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(Float.POSITIVE_INFINITY),new JsonPrimitive(Float.POSITIVE_INFINITY));\n  MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(Double.NaN),new JsonPrimitive(Double.NaN));\n  MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(Double.NEGATIVE_INFINITY),new JsonPrimitive(Double.NEGATIVE_INFINITY));\n  MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(Double.POSITIVE_INFINITY),new JsonPrimitive(Double.POSITIVE_INFINITY));\n  assertFalse(new JsonPrimitive(\"a\").equals(new JsonPrimitive(\"b\")));\n  assertFalse(new JsonPrimitive(true).equals(new JsonPrimitive(false)));\n  assertFalse(new JsonPrimitive(0).equals(new JsonPrimitive(1)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 188,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 214,
        "startColumnNumber" : 4,
        "endLineNumber" : 215,
        "endColumnNumber" : 52
      },
      "nodeContext" : "MoreAsserts.assertEqualsAndHashCode(new JsonPrimitive(Double.POSITIVE_INFINITY),new JsonPrimitive(Double.POSITIVE_INFINITY))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "com.google.gson.JsonPrimitive"
  } ],
  "positionList" : [ {
    "charLength" : 43,
    "startLineNumber" : 214,
    "startColumnNumber" : 40,
    "endLineNumber" : 214,
    "endColumnNumber" : 83
  }, {
    "charLength" : 43,
    "startLineNumber" : 215,
    "startColumnNumber" : 8,
    "endLineNumber" : 215,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 0
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 0
  } ]
}