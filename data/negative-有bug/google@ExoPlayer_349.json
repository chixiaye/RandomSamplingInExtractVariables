{
  "id" : 349,
  "expression" : "extractors[0]",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/core/src/main/java/com/google/android/exoplayer2/source/BundledExtractorsAdapter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "extractors[0]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 72,
      "startColumnNumber" : 23,
      "endLineNumber" : 72,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 72,
        "startColumnNumber" : 6,
        "endLineNumber" : 72,
        "endColumnNumber" : 36
      },
      "nodeContext" : "this.extractor=extractors[0]",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 72,
        "startColumnNumber" : 6,
        "endLineNumber" : 72,
        "endColumnNumber" : 37
      },
      "nodeContext" : "this.extractor=extractors[0];\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 71,
        "startColumnNumber" : 32,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.extractor=extractors[0];\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 810,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 94,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (extractors.length == 1) {\n  this.extractor=extractors[0];\n}\n else {\n  for (  Extractor extractor : extractors) {\n    try {\n      if (extractor.sniff(extractorInput)) {\n        this.extractor=extractor;\n        break;\n      }\n    }\n catch (    EOFException e) {\n    }\n finally {\n      Assertions.checkState(this.extractor != null || extractorInput.getPosition() == position);\n      extractorInput.resetPeekPosition();\n    }\n  }\n  if (extractor == null) {\n    throw new UnrecognizedInputFormatException(\"None of the available extractors (\" + Util.getCommaDelimitedSimpleClassNames(extractors) + \") could read the stream.\",Assertions.checkNotNull(uri));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 84,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1119,
        "startLineNumber" : 64,
        "startColumnNumber" : 25,
        "endLineNumber" : 96,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ExtractorInput extractorInput=new DefaultExtractorInput(dataReader,position,length);\n  this.extractorInput=extractorInput;\n  if (extractor != null) {\n    return;\n  }\n  Extractor[] extractors=extractorsFactory.createExtractors(uri,responseHeaders);\n  if (extractors.length == 1) {\n    this.extractor=extractors[0];\n  }\n else {\n    for (    Extractor extractor : extractors) {\n      try {\n        if (extractor.sniff(extractorInput)) {\n          this.extractor=extractor;\n          break;\n        }\n      }\n catch (      EOFException e) {\n      }\n finally {\n        Assertions.checkState(this.extractor != null || extractorInput.getPosition() == position);\n        extractorInput.resetPeekPosition();\n      }\n    }\n    if (extractor == null) {\n      throw new UnrecognizedInputFormatException(\"None of the available extractors (\" + Util.getCommaDelimitedSimpleClassNames(extractors) + \") could read the stream.\",Assertions.checkNotNull(uri));\n    }\n  }\n  extractor.init(output);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1337,
        "startLineNumber" : 56,
        "startColumnNumber" : 2,
        "endLineNumber" : 96,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void init(DataReader dataReader,Uri uri,Map<String,List<String>> responseHeaders,long position,long length,ExtractorOutput output) throws IOException {\n  ExtractorInput extractorInput=new DefaultExtractorInput(dataReader,position,length);\n  this.extractorInput=extractorInput;\n  if (extractor != null) {\n    return;\n  }\n  Extractor[] extractors=extractorsFactory.createExtractors(uri,responseHeaders);\n  if (extractors.length == 1) {\n    this.extractor=extractors[0];\n  }\n else {\n    for (    Extractor extractor : extractors) {\n      try {\n        if (extractor.sniff(extractorInput)) {\n          this.extractor=extractor;\n          break;\n        }\n      }\n catch (      EOFException e) {\n      }\n finally {\n        Assertions.checkState(this.extractor != null || extractorInput.getPosition() == position);\n        extractorInput.resetPeekPosition();\n      }\n    }\n    if (extractor == null) {\n      throw new UnrecognizedInputFormatException(\"None of the available extractors (\" + Util.getCommaDelimitedSimpleClassNames(extractors) + \") could read the stream.\",Assertions.checkNotNull(uri));\n    }\n  }\n  extractor.init(output);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 163,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 72,
        "startColumnNumber" : 6,
        "endLineNumber" : 72,
        "endColumnNumber" : 37
      },
      "nodeContext" : "this.extractor=extractors[0];\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "com.google.android.exoplayer2.extractor.Extractor"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 72,
    "startColumnNumber" : 23,
    "endLineNumber" : 72,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ ]
}