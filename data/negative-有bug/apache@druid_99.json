{
  "id" : 99,
  "expression" : "left",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/core/src/main/java/org/apache/druid/math/expr/vector/VectorStringProcessors.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "left",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 36,
      "startColumnNumber" : 10,
      "endLineNumber" : 36,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 36,
        "startColumnNumber" : 10,
        "endLineNumber" : 36,
        "endColumnNumber" : 41
      },
      "nodeContext" : "left.buildVectorized(inspector)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 476,
        "startLineNumber" : 35,
        "startColumnNumber" : 18,
        "endLineNumber" : 48,
        "endColumnNumber" : 7
      },
      "nodeContext" : "new StringOutStringsInFunctionVectorProcessor(left.buildVectorized(inspector),right.buildVectorized(inspector),inspector.getMaxVectorSize()){\n  @Nullable @Override protected String processValue(  @Nullable String leftVal,  @Nullable String rightVal){\n    return leftVal + rightVal;\n  }\n}\n",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 41,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 488,
        "startLineNumber" : 35,
        "startColumnNumber" : 6,
        "endLineNumber" : 48,
        "endColumnNumber" : 7
      },
      "nodeContext" : "processor=new StringOutStringsInFunctionVectorProcessor(left.buildVectorized(inspector),right.buildVectorized(inspector),inspector.getMaxVectorSize()){\n  @Nullable @Override protected String processValue(  @Nullable String leftVal,  @Nullable String rightVal){\n    return leftVal + rightVal;\n  }\n}\n",
      "nodeType" : "Assignment",
      "astNodeNumber" : 43,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 489,
        "startLineNumber" : 35,
        "startColumnNumber" : 6,
        "endLineNumber" : 48,
        "endColumnNumber" : 8
      },
      "nodeContext" : "processor=new StringOutStringsInFunctionVectorProcessor(left.buildVectorized(inspector),right.buildVectorized(inspector),inspector.getMaxVectorSize()){\n  @Nullable @Override protected String processValue(  @Nullable String leftVal,  @Nullable String rightVal){\n    return leftVal + rightVal;\n  }\n}\n;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 44,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 503,
        "startLineNumber" : 34,
        "startColumnNumber" : 38,
        "endLineNumber" : 49,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  processor=new StringOutStringsInFunctionVectorProcessor(left.buildVectorized(inspector),right.buildVectorized(inspector),inspector.getMaxVectorSize()){\n    @Nullable @Override protected String processValue(    @Nullable String leftVal,    @Nullable String rightVal){\n      return leftVal + rightVal;\n    }\n  }\n;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1018,
        "startLineNumber" : 34,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (NullHandling.sqlCompatible()) {\n  processor=new StringOutStringsInFunctionVectorProcessor(left.buildVectorized(inspector),right.buildVectorized(inspector),inspector.getMaxVectorSize()){\n    @Nullable @Override protected String processValue(    @Nullable String leftVal,    @Nullable String rightVal){\n      return leftVal + rightVal;\n    }\n  }\n;\n}\n else {\n  processor=new StringOutStringsInFunctionVectorProcessor(left.buildVectorized(inspector),right.buildVectorized(inspector),inspector.getMaxVectorSize()){\n    @Nullable @Override protected String processValue(    @Nullable String leftVal,    @Nullable String rightVal){\n      return NullHandling.nullToEmptyIfNeeded(leftVal) + NullHandling.nullToEmptyIfNeeded(rightVal);\n    }\n  }\n;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 100,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 32,
        "startColumnNumber" : 2,
        "endLineNumber" : 65,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final ExprVectorProcessor processor;\n  if (NullHandling.sqlCompatible()) {\n    processor=new StringOutStringsInFunctionVectorProcessor(left.buildVectorized(inspector),right.buildVectorized(inspector),inspector.getMaxVectorSize()){\n      @Nullable @Override protected String processValue(      @Nullable String leftVal,      @Nullable String rightVal){\n        return leftVal + rightVal;\n      }\n    }\n;\n  }\n else {\n    processor=new StringOutStringsInFunctionVectorProcessor(left.buildVectorized(inspector),right.buildVectorized(inspector),inspector.getMaxVectorSize()){\n      @Nullable @Override protected String processValue(      @Nullable String leftVal,      @Nullable String rightVal){\n        return NullHandling.nullToEmptyIfNeeded(leftVal) + NullHandling.nullToEmptyIfNeeded(rightVal);\n      }\n    }\n;\n  }\n  return processor;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1208,
        "startLineNumber" : 31,
        "startColumnNumber" : 2,
        "endLineNumber" : 65,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static <T>ExprVectorProcessor<T> concat(Expr.VectorInputBindingInspector inspector,Expr left,Expr right){\n  final ExprVectorProcessor processor;\n  if (NullHandling.sqlCompatible()) {\n    processor=new StringOutStringsInFunctionVectorProcessor(left.buildVectorized(inspector),right.buildVectorized(inspector),inspector.getMaxVectorSize()){\n      @Nullable @Override protected String processValue(      @Nullable String leftVal,      @Nullable String rightVal){\n        return leftVal + rightVal;\n      }\n    }\n;\n  }\n else {\n    processor=new StringOutStringsInFunctionVectorProcessor(left.buildVectorized(inspector),right.buildVectorized(inspector),inspector.getMaxVectorSize()){\n      @Nullable @Override protected String processValue(      @Nullable String leftVal,      @Nullable String rightVal){\n        return NullHandling.nullToEmptyIfNeeded(leftVal) + NullHandling.nullToEmptyIfNeeded(rightVal);\n      }\n    }\n;\n  }\n  return processor;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 134,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 36,
        "startColumnNumber" : 10,
        "endLineNumber" : 36,
        "endColumnNumber" : 41
      },
      "nodeContext" : "left.buildVectorized(inspector)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.druid.math.expr.Expr"
  }, {
    "nodeContext" : "left",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 51,
      "startColumnNumber" : 10,
      "endLineNumber" : 51,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 51,
        "startColumnNumber" : 10,
        "endLineNumber" : 51,
        "endColumnNumber" : 41
      },
      "nodeContext" : "left.buildVectorized(inspector)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 448,
        "startLineNumber" : 50,
        "startColumnNumber" : 18,
        "endLineNumber" : 62,
        "endColumnNumber" : 7
      },
      "nodeContext" : "new StringOutStringsInFunctionVectorProcessor(left.buildVectorized(inspector),right.buildVectorized(inspector),inspector.getMaxVectorSize()){\n  @Nullable @Override protected String processValue(  @Nullable String leftVal,  @Nullable String rightVal){\n    return NullHandling.nullToEmptyIfNeeded(leftVal) + NullHandling.nullToEmptyIfNeeded(rightVal);\n  }\n}\n",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 47,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 460,
        "startLineNumber" : 50,
        "startColumnNumber" : 6,
        "endLineNumber" : 62,
        "endColumnNumber" : 7
      },
      "nodeContext" : "processor=new StringOutStringsInFunctionVectorProcessor(left.buildVectorized(inspector),right.buildVectorized(inspector),inspector.getMaxVectorSize()){\n  @Nullable @Override protected String processValue(  @Nullable String leftVal,  @Nullable String rightVal){\n    return NullHandling.nullToEmptyIfNeeded(leftVal) + NullHandling.nullToEmptyIfNeeded(rightVal);\n  }\n}\n",
      "nodeType" : "Assignment",
      "astNodeNumber" : 49,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 461,
        "startLineNumber" : 50,
        "startColumnNumber" : 6,
        "endLineNumber" : 62,
        "endColumnNumber" : 8
      },
      "nodeContext" : "processor=new StringOutStringsInFunctionVectorProcessor(left.buildVectorized(inspector),right.buildVectorized(inspector),inspector.getMaxVectorSize()){\n  @Nullable @Override protected String processValue(  @Nullable String leftVal,  @Nullable String rightVal){\n    return NullHandling.nullToEmptyIfNeeded(leftVal) + NullHandling.nullToEmptyIfNeeded(rightVal);\n  }\n}\n;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 50,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 475,
        "startLineNumber" : 49,
        "startColumnNumber" : 11,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  processor=new StringOutStringsInFunctionVectorProcessor(left.buildVectorized(inspector),right.buildVectorized(inspector),inspector.getMaxVectorSize()){\n    @Nullable @Override protected String processValue(    @Nullable String leftVal,    @Nullable String rightVal){\n      return NullHandling.nullToEmptyIfNeeded(leftVal) + NullHandling.nullToEmptyIfNeeded(rightVal);\n    }\n  }\n;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1018,
        "startLineNumber" : 34,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (NullHandling.sqlCompatible()) {\n  processor=new StringOutStringsInFunctionVectorProcessor(left.buildVectorized(inspector),right.buildVectorized(inspector),inspector.getMaxVectorSize()){\n    @Nullable @Override protected String processValue(    @Nullable String leftVal,    @Nullable String rightVal){\n      return leftVal + rightVal;\n    }\n  }\n;\n}\n else {\n  processor=new StringOutStringsInFunctionVectorProcessor(left.buildVectorized(inspector),right.buildVectorized(inspector),inspector.getMaxVectorSize()){\n    @Nullable @Override protected String processValue(    @Nullable String leftVal,    @Nullable String rightVal){\n      return NullHandling.nullToEmptyIfNeeded(leftVal) + NullHandling.nullToEmptyIfNeeded(rightVal);\n    }\n  }\n;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 100,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1091,
        "startLineNumber" : 32,
        "startColumnNumber" : 2,
        "endLineNumber" : 65,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final ExprVectorProcessor processor;\n  if (NullHandling.sqlCompatible()) {\n    processor=new StringOutStringsInFunctionVectorProcessor(left.buildVectorized(inspector),right.buildVectorized(inspector),inspector.getMaxVectorSize()){\n      @Nullable @Override protected String processValue(      @Nullable String leftVal,      @Nullable String rightVal){\n        return leftVal + rightVal;\n      }\n    }\n;\n  }\n else {\n    processor=new StringOutStringsInFunctionVectorProcessor(left.buildVectorized(inspector),right.buildVectorized(inspector),inspector.getMaxVectorSize()){\n      @Nullable @Override protected String processValue(      @Nullable String leftVal,      @Nullable String rightVal){\n        return NullHandling.nullToEmptyIfNeeded(leftVal) + NullHandling.nullToEmptyIfNeeded(rightVal);\n      }\n    }\n;\n  }\n  return processor;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1208,
        "startLineNumber" : 31,
        "startColumnNumber" : 2,
        "endLineNumber" : 65,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static <T>ExprVectorProcessor<T> concat(Expr.VectorInputBindingInspector inspector,Expr left,Expr right){\n  final ExprVectorProcessor processor;\n  if (NullHandling.sqlCompatible()) {\n    processor=new StringOutStringsInFunctionVectorProcessor(left.buildVectorized(inspector),right.buildVectorized(inspector),inspector.getMaxVectorSize()){\n      @Nullable @Override protected String processValue(      @Nullable String leftVal,      @Nullable String rightVal){\n        return leftVal + rightVal;\n      }\n    }\n;\n  }\n else {\n    processor=new StringOutStringsInFunctionVectorProcessor(left.buildVectorized(inspector),right.buildVectorized(inspector),inspector.getMaxVectorSize()){\n      @Nullable @Override protected String processValue(      @Nullable String leftVal,      @Nullable String rightVal){\n        return NullHandling.nullToEmptyIfNeeded(leftVal) + NullHandling.nullToEmptyIfNeeded(rightVal);\n      }\n    }\n;\n  }\n  return processor;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 134,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 51,
        "startColumnNumber" : 10,
        "endLineNumber" : 51,
        "endColumnNumber" : 41
      },
      "nodeContext" : "left.buildVectorized(inspector)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.druid.math.expr.Expr"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 36,
    "startColumnNumber" : 10,
    "endLineNumber" : 36,
    "endColumnNumber" : 14
  }, {
    "charLength" : 4,
    "startLineNumber" : 51,
    "startColumnNumber" : 10,
    "endLineNumber" : 51,
    "endColumnNumber" : 14
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}