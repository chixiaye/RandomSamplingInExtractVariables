{
  "id" : 18,
  "expression" : "new WrappingStoreProvider(storeProviders.values(),storeQueryParameters)",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/streams/src/main/java/org/apache/kafka/streams/state/internals/QueryableStoreProvider.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new WrappingStoreProvider(storeProviders.values(),storeQueryParameters)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 72,
      "startLineNumber" : 62,
      "startColumnNumber" : 12,
      "endLineNumber" : 62,
      "endColumnNumber" : 84
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 61,
        "startColumnNumber" : 15,
        "endLineNumber" : 64,
        "endColumnNumber" : 9
      },
      "nodeContext" : "queryableStoreType.create(new WrappingStoreProvider(storeProviders.values(),storeQueryParameters),storeName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 10
      },
      "nodeContext" : "return queryableStoreType.create(new WrappingStoreProvider(storeProviders.values(),storeQueryParameters),storeName);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 556,
        "startLineNumber" : 54,
        "startColumnNumber" : 78,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String storeName=storeQueryParameters.storeName();\n  final QueryableStoreType<T> queryableStoreType=storeQueryParameters.queryableStoreType();\n  final List<T> globalStore=globalStoreProvider.stores(storeName,queryableStoreType);\n  if (!globalStore.isEmpty()) {\n    return queryableStoreType.create(globalStoreProvider,storeName);\n  }\n  return queryableStoreType.create(new WrappingStoreProvider(storeProviders.values(),storeQueryParameters),storeName);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 60,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1439,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Get a composite object wrapping the instances of the  {@link StateStore} with the providedstoreName and  {@link QueryableStoreType}\n * @param storeQueryParameters       if stateStoresEnabled is used i.e. staleStoresEnabled is true, include standbys and recovering stores;if stateStoresDisabled i.e. staleStoresEnabled is false, only include running actives; if partition is null then it fetches all local partitions on the instance; if partition is set then it fetches a specific partition.\n * @param < T >                The expected type of the returned store\n * @return A composite object that wraps the store instances.\n */\npublic <T>T getStore(final StoreQueryParameters<T> storeQueryParameters){\n  final String storeName=storeQueryParameters.storeName();\n  final QueryableStoreType<T> queryableStoreType=storeQueryParameters.queryableStoreType();\n  final List<T> globalStore=globalStoreProvider.stores(storeName,queryableStoreType);\n  if (!globalStore.isEmpty()) {\n    return queryableStoreType.create(globalStoreProvider,storeName);\n  }\n  return queryableStoreType.create(new WrappingStoreProvider(storeProviders.values(),storeQueryParameters),storeName);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 76,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 61,
        "startColumnNumber" : 15,
        "endLineNumber" : 64,
        "endColumnNumber" : 9
      },
      "nodeContext" : "queryableStoreType.create(new WrappingStoreProvider(storeProviders.values(),storeQueryParameters),storeName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "org.apache.kafka.streams.state.internals.WrappingStoreProvider"
  } ],
  "positionList" : [ {
    "charLength" : 72,
    "startLineNumber" : 62,
    "startColumnNumber" : 12,
    "endLineNumber" : 62,
    "endColumnNumber" : 84
  } ],
  "layoutRelationDataList" : [ ]
}