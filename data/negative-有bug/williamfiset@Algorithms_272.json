{
  "id" : 272,
  "expression" : "new PriorityQueue<>()",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/graphtheory/LazyPrimsAdjacencyMatrix.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new PriorityQueue<>()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 37,
      "startColumnNumber" : 29,
      "endLineNumber" : 37,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 4,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 37,
        "startColumnNumber" : 24,
        "endLineNumber" : 37,
        "endColumnNumber" : 50
      },
      "nodeContext" : "pq=new PriorityQueue<>()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 37,
        "endColumnNumber" : 51
      },
      "nodeContext" : "PriorityQueue<Edge> pq=new PriorityQueue<>();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 811,
        "startLineNumber" : 33,
        "startColumnNumber" : 46,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int n=graph.length;\n  long sum=0, visitedNodes=1;\n  PriorityQueue<Edge> pq=new PriorityQueue<>();\n  boolean[] connected=new boolean[n];\n  connected[0]=true;\n  for (int i=1; i < n; i++)   if (graph[0][i] != null)   pq.offer(new Edge(i,graph[0][i]));\n  while (visitedNodes != n && !pq.isEmpty()) {\n    Edge edge=pq.poll();\n    if (!connected[edge.to]) {\n      for (int i=0; i < n; i++)       if (!connected[i] && graph[edge.to][i] != null)       pq.offer(new Edge(i,graph[edge.to][i]));\n      connected[edge.to]=true;\n      sum+=edge.cost;\n      visitedNodes++;\n    }\n  }\n  if (visitedNodes != n)   return null;\n  return sum;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 169,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 855,
        "startLineNumber" : 33,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static Long prims(Integer[][] graph){\n  int n=graph.length;\n  long sum=0, visitedNodes=1;\n  PriorityQueue<Edge> pq=new PriorityQueue<>();\n  boolean[] connected=new boolean[n];\n  connected[0]=true;\n  for (int i=1; i < n; i++)   if (graph[0][i] != null)   pq.offer(new Edge(i,graph[0][i]));\n  while (visitedNodes != n && !pq.isEmpty()) {\n    Edge edge=pq.poll();\n    if (!connected[edge.to]) {\n      for (int i=0; i < n; i++)       if (!connected[i] && graph[edge.to][i] != null)       pq.offer(new Edge(i,graph[edge.to][i]));\n      connected[edge.to]=true;\n      sum+=edge.cost;\n      visitedNodes++;\n    }\n  }\n  if (visitedNodes != n)   return null;\n  return sum;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 182,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 37,
        "endColumnNumber" : 51
      },
      "nodeContext" : "PriorityQueue<Edge> pq=new PriorityQueue<>();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.PriorityQueue<com.williamfiset.algorithms.graphtheory.LazyPrimsAdjacencyMatrix.Edge>"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 37,
    "startColumnNumber" : 29,
    "endLineNumber" : 37,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ ]
}