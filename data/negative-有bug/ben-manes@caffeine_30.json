{
  "id" : 30,
  "expression" : "new LocalCache()",
  "projectName" : "ben-manes@caffeine",
  "commitID" : "30ca3d80d9dc7aa20adceacfc5fff1659bbadb8e",
  "filePath" : "/simulator/src/main/java/com/github/benmanes/caffeine/cache/simulator/policy/product/CoherencePolicy.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new LocalCache()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 58,
      "startColumnNumber" : 12,
      "endLineNumber" : 58,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 28
      },
      "nodeContext" : "cache=new LocalCache()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 29
      },
      "nodeContext" : "cache=new LocalCache();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 553,
        "startLineNumber" : 47,
        "startColumnNumber" : 70,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  policyStats=new PolicyStats(name() + \" (%s)\",policy);\n  int factor=1;\n  long maximum=settings.maximumSize();\n  while (maximum >= Integer.MAX_VALUE) {\n    maximum/=1024;\n    factor*=1024;\n  }\n  cache=new LocalCache();\n  cache.setUnitFactor(factor);\n  cache.setHighUnits((int)maximum);\n  cache.setEvictionType(policy.type);\n  cache.addMapListener(new CoherenceListener());\n  cache.setUnitCalculator(new AccessEventCalculator());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 78,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 621,
        "startLineNumber" : 47,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public CoherencePolicy(CoherenceSettings settings,Eviction policy){\n  policyStats=new PolicyStats(name() + \" (%s)\",policy);\n  int factor=1;\n  long maximum=settings.maximumSize();\n  while (maximum >= Integer.MAX_VALUE) {\n    maximum/=1024;\n    factor*=1024;\n  }\n  cache=new LocalCache();\n  cache.setUnitFactor(factor);\n  cache.setHighUnits((int)maximum);\n  cache.setEvictionType(policy.type);\n  cache.addMapListener(new CoherenceListener());\n  cache.setUnitCalculator(new AccessEventCalculator());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 89,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 29
      },
      "nodeContext" : "cache=new LocalCache();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.github.benmanes.caffeine.cache.simulator.policy.product.LocalCache"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 58,
    "startColumnNumber" : 12,
    "endLineNumber" : 58,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ ]
}