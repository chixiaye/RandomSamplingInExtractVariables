{
  "id" : 203,
  "expression" : "observableWithTimeout",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/flowable/FlowableTimeoutTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "observableWithTimeout",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 288,
      "startColumnNumber" : 8,
      "endLineNumber" : 288,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 288,
        "startColumnNumber" : 8,
        "endLineNumber" : 288,
        "endColumnNumber" : 43
      },
      "nodeContext" : "observableWithTimeout.subscribe(ts)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 288,
        "startColumnNumber" : 8,
        "endLineNumber" : 288,
        "endColumnNumber" : 44
      },
      "nodeContext" : "observableWithTimeout.subscribe(ts);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1014,
        "startLineNumber" : 272,
        "startColumnNumber" : 99,
        "endLineNumber" : 297,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Subscription s=mock(Subscription.class);\n  Flowable<String> never=Flowable.create(new Publisher<String>(){\n    @Override public void subscribe(    Subscriber<? super String> subscriber){\n      subscriber.onSubscribe(s);\n    }\n  }\n);\n  TestScheduler testScheduler=new TestScheduler();\n  Flowable<String> observableWithTimeout=never.timeout(1000,TimeUnit.MILLISECONDS,testScheduler);\n  Subscriber<String> observer=TestHelper.mockSubscriber();\n  TestSubscriber<String> ts=new TestSubscriber<String>(observer);\n  observableWithTimeout.subscribe(ts);\n  testScheduler.advanceTimeBy(2000,TimeUnit.MILLISECONDS);\n  InOrder inOrder=inOrder(observer);\n  inOrder.verify(observer).onError(isA(TimeoutException.class));\n  inOrder.verifyNoMoreInteractions();\n  verify(s,times(1)).cancel();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1120,
        "startLineNumber" : 271,
        "startColumnNumber" : 4,
        "endLineNumber" : 297,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldUnsubscribeFromUnderlyingSubscriptionOnTimeout() throws InterruptedException {\n  final Subscription s=mock(Subscription.class);\n  Flowable<String> never=Flowable.create(new Publisher<String>(){\n    @Override public void subscribe(    Subscriber<? super String> subscriber){\n      subscriber.onSubscribe(s);\n    }\n  }\n);\n  TestScheduler testScheduler=new TestScheduler();\n  Flowable<String> observableWithTimeout=never.timeout(1000,TimeUnit.MILLISECONDS,testScheduler);\n  Subscriber<String> observer=TestHelper.mockSubscriber();\n  TestSubscriber<String> ts=new TestSubscriber<String>(observer);\n  observableWithTimeout.subscribe(ts);\n  testScheduler.advanceTimeBy(2000,TimeUnit.MILLISECONDS);\n  InOrder inOrder=inOrder(observer);\n  inOrder.verify(observer).onError(isA(TimeoutException.class));\n  inOrder.verifyNoMoreInteractions();\n  verify(s,times(1)).cancel();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 154,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 288,
        "startColumnNumber" : 8,
        "endLineNumber" : 288,
        "endColumnNumber" : 44
      },
      "nodeContext" : "observableWithTimeout.subscribe(ts);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.Flowable<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 288,
    "startColumnNumber" : 8,
    "endLineNumber" : 288,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ ]
}