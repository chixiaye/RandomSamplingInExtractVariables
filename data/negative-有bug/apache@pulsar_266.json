{
  "id" : 266,
  "expression" : "partitions.size()",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-broker/src/test/java/org/apache/pulsar/broker/namespace/NamespaceOwnershipListenerTests.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "partitions.size()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 118,
      "startColumnNumber" : 28,
      "endLineNumber" : 118,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 118,
        "startColumnNumber" : 8,
        "endLineNumber" : 118,
        "endColumnNumber" : 49
      },
      "nodeContext" : "Assert.assertEquals(partitions.size(),6)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 118,
        "startColumnNumber" : 8,
        "endLineNumber" : 118,
        "endColumnNumber" : 50
      },
      "nodeContext" : "Assert.assertEquals(partitions.size(),6);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 806,
        "startLineNumber" : 108,
        "startColumnNumber" : 109,
        "endLineNumber" : 126,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String namespace=\"prop/\" + UUID.randomUUID().toString();\n  admin.namespaces().createNamespace(namespace,Sets.newHashSet(\"test\"));\n  assertTrue(admin.namespaces().getNamespaces(\"prop\").contains(namespace));\n  final String topicName=\"persistent://\" + namespace + \"/os\";\n  admin.topics().createPartitionedTopic(topicName,6);\n  List<String> partitions=pulsar.getNamespaceService().getAllPartitions(NamespaceName.get(namespace)).get();\n  Assert.assertEquals(partitions.size(),6);\n  for (int i=0; i < partitions.size(); i++) {\n    Assert.assertEquals(partitions.get(i),topicName + \"-partition-\" + i);\n  }\n  admin.topics().deletePartitionedTopic(topicName);\n  admin.namespaces().deleteNamespace(namespace);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 921,
        "startLineNumber" : 107,
        "startColumnNumber" : 4,
        "endLineNumber" : 126,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testGetAllPartitions() throws PulsarAdminException, ExecutionException, InterruptedException {\n  final String namespace=\"prop/\" + UUID.randomUUID().toString();\n  admin.namespaces().createNamespace(namespace,Sets.newHashSet(\"test\"));\n  assertTrue(admin.namespaces().getNamespaces(\"prop\").contains(namespace));\n  final String topicName=\"persistent://\" + namespace + \"/os\";\n  admin.topics().createPartitionedTopic(topicName,6);\n  List<String> partitions=pulsar.getNamespaceService().getAllPartitions(NamespaceName.get(namespace)).get();\n  Assert.assertEquals(partitions.size(),6);\n  for (int i=0; i < partitions.size(); i++) {\n    Assert.assertEquals(partitions.get(i),topicName + \"-partition-\" + i);\n  }\n  admin.topics().deletePartitionedTopic(topicName);\n  admin.namespaces().deleteNamespace(namespace);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 134,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 118,
        "startColumnNumber" : 8,
        "endLineNumber" : 118,
        "endColumnNumber" : 50
      },
      "nodeContext" : "Assert.assertEquals(partitions.size(),6);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  }, {
    "nodeContext" : "partitions.size()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 120,
      "startColumnNumber" : 28,
      "endLineNumber" : 120,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 120,
        "startColumnNumber" : 24,
        "endLineNumber" : 120,
        "endColumnNumber" : 45
      },
      "nodeContext" : "i < partitions.size()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 120,
        "startColumnNumber" : 8,
        "endLineNumber" : 122,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < partitions.size(); i++) {\n  Assert.assertEquals(partitions.get(i),topicName + \"-partition-\" + i);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 806,
        "startLineNumber" : 108,
        "startColumnNumber" : 109,
        "endLineNumber" : 126,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final String namespace=\"prop/\" + UUID.randomUUID().toString();\n  admin.namespaces().createNamespace(namespace,Sets.newHashSet(\"test\"));\n  assertTrue(admin.namespaces().getNamespaces(\"prop\").contains(namespace));\n  final String topicName=\"persistent://\" + namespace + \"/os\";\n  admin.topics().createPartitionedTopic(topicName,6);\n  List<String> partitions=pulsar.getNamespaceService().getAllPartitions(NamespaceName.get(namespace)).get();\n  Assert.assertEquals(partitions.size(),6);\n  for (int i=0; i < partitions.size(); i++) {\n    Assert.assertEquals(partitions.get(i),topicName + \"-partition-\" + i);\n  }\n  admin.topics().deletePartitionedTopic(topicName);\n  admin.namespaces().deleteNamespace(namespace);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 921,
        "startLineNumber" : 107,
        "startColumnNumber" : 4,
        "endLineNumber" : 126,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testGetAllPartitions() throws PulsarAdminException, ExecutionException, InterruptedException {\n  final String namespace=\"prop/\" + UUID.randomUUID().toString();\n  admin.namespaces().createNamespace(namespace,Sets.newHashSet(\"test\"));\n  assertTrue(admin.namespaces().getNamespaces(\"prop\").contains(namespace));\n  final String topicName=\"persistent://\" + namespace + \"/os\";\n  admin.topics().createPartitionedTopic(topicName,6);\n  List<String> partitions=pulsar.getNamespaceService().getAllPartitions(NamespaceName.get(namespace)).get();\n  Assert.assertEquals(partitions.size(),6);\n  for (int i=0; i < partitions.size(); i++) {\n    Assert.assertEquals(partitions.get(i),topicName + \"-partition-\" + i);\n  }\n  admin.topics().deletePartitionedTopic(topicName);\n  admin.namespaces().deleteNamespace(namespace);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 134,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 120,
        "startColumnNumber" : 24,
        "endLineNumber" : 120,
        "endColumnNumber" : 45
      },
      "nodeContext" : "i < partitions.size()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 118,
    "startColumnNumber" : 28,
    "endLineNumber" : 118,
    "endColumnNumber" : 45
  }, {
    "charLength" : 17,
    "startLineNumber" : 120,
    "startColumnNumber" : 28,
    "endLineNumber" : 120,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}