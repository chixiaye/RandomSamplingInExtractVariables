{
  "id" : 498,
  "expression" : "HystrixRequestLog",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-examples/src/main/java/com/netflix/hystrix/examples/basic/CommandCollapserGetValueForKey.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "HystrixRequestLog",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 102,
      "startColumnNumber" : 34,
      "endLineNumber" : 102,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 102,
        "startColumnNumber" : 34,
        "endLineNumber" : 102,
        "endColumnNumber" : 71
      },
      "nodeContext" : "HystrixRequestLog.getCurrentRequest()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 102,
        "startColumnNumber" : 34,
        "endLineNumber" : 102,
        "endColumnNumber" : 96
      },
      "nodeContext" : "HystrixRequestLog.getCurrentRequest().getAllExecutedCommands()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 102,
        "startColumnNumber" : 34,
        "endLineNumber" : 102,
        "endColumnNumber" : 103
      },
      "nodeContext" : "HystrixRequestLog.getCurrentRequest().getAllExecutedCommands().size()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 102,
        "startColumnNumber" : 20,
        "endLineNumber" : 102,
        "endColumnNumber" : 103
      },
      "nodeContext" : "numExecuted=HystrixRequestLog.getCurrentRequest().getAllExecutedCommands().size()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 102,
        "startColumnNumber" : 16,
        "endLineNumber" : 102,
        "endColumnNumber" : 104
      },
      "nodeContext" : "int numExecuted=HystrixRequestLog.getCurrentRequest().getAllExecutedCommands().size();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2128,
        "startLineNumber" : 91,
        "startColumnNumber" : 16,
        "endLineNumber" : 129,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Future<String> f1=new CommandCollapserGetValueForKey(1).queue();\n  Future<String> f2=new CommandCollapserGetValueForKey(2).queue();\n  Future<String> f3=new CommandCollapserGetValueForKey(3).queue();\n  Future<String> f4=new CommandCollapserGetValueForKey(4).queue();\n  assertEquals(\"ValueForKey: 1\",f1.get());\n  assertEquals(\"ValueForKey: 2\",f2.get());\n  assertEquals(\"ValueForKey: 3\",f3.get());\n  assertEquals(\"ValueForKey: 4\",f4.get());\n  int numExecuted=HystrixRequestLog.getCurrentRequest().getAllExecutedCommands().size();\n  System.err.println(\"num executed: \" + numExecuted);\n  if (numExecuted > 2) {\n    fail(\"some of the commands should have been collapsed\");\n  }\n  System.err.println(\"HystrixRequestLog.getCurrentRequest().getAllExecutedCommands(): \" + HystrixRequestLog.getCurrentRequest().getAllExecutedCommands());\n  int numLogs=0;\n  for (  HystrixInvokableInfo<?> command : HystrixRequestLog.getCurrentRequest().getAllExecutedCommands()) {\n    numLogs++;\n    assertEquals(\"GetValueForKey\",command.getCommandKey().name());\n    System.err.println(command.getCommandKey().name() + \" => command.getExecutionEvents(): \" + command.getExecutionEvents());\n    assertTrue(command.getExecutionEvents().contains(HystrixEventType.COLLAPSED));\n    assertTrue(command.getExecutionEvents().contains(HystrixEventType.SUCCESS));\n  }\n  assertEquals(numExecuted,numLogs);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 200,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2192,
        "startLineNumber" : 91,
        "startColumnNumber" : 12,
        "endLineNumber" : 131,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  Future<String> f1=new CommandCollapserGetValueForKey(1).queue();\n  Future<String> f2=new CommandCollapserGetValueForKey(2).queue();\n  Future<String> f3=new CommandCollapserGetValueForKey(3).queue();\n  Future<String> f4=new CommandCollapserGetValueForKey(4).queue();\n  assertEquals(\"ValueForKey: 1\",f1.get());\n  assertEquals(\"ValueForKey: 2\",f2.get());\n  assertEquals(\"ValueForKey: 3\",f3.get());\n  assertEquals(\"ValueForKey: 4\",f4.get());\n  int numExecuted=HystrixRequestLog.getCurrentRequest().getAllExecutedCommands().size();\n  System.err.println(\"num executed: \" + numExecuted);\n  if (numExecuted > 2) {\n    fail(\"some of the commands should have been collapsed\");\n  }\n  System.err.println(\"HystrixRequestLog.getCurrentRequest().getAllExecutedCommands(): \" + HystrixRequestLog.getCurrentRequest().getAllExecutedCommands());\n  int numLogs=0;\n  for (  HystrixInvokableInfo<?> command : HystrixRequestLog.getCurrentRequest().getAllExecutedCommands()) {\n    numLogs++;\n    assertEquals(\"GetValueForKey\",command.getCommandKey().name());\n    System.err.println(command.getCommandKey().name() + \" => command.getExecutionEvents(): \" + command.getExecutionEvents());\n    assertTrue(command.getExecutionEvents().contains(HystrixEventType.COLLAPSED));\n    assertTrue(command.getExecutionEvents().contains(HystrixEventType.SUCCESS));\n  }\n  assertEquals(numExecuted,numLogs);\n}\n  finally {\n  context.shutdown();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 206,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2303,
        "startLineNumber" : 89,
        "startColumnNumber" : 53,
        "endLineNumber" : 132,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HystrixRequestContext context=HystrixRequestContext.initializeContext();\n  try {\n    Future<String> f1=new CommandCollapserGetValueForKey(1).queue();\n    Future<String> f2=new CommandCollapserGetValueForKey(2).queue();\n    Future<String> f3=new CommandCollapserGetValueForKey(3).queue();\n    Future<String> f4=new CommandCollapserGetValueForKey(4).queue();\n    assertEquals(\"ValueForKey: 1\",f1.get());\n    assertEquals(\"ValueForKey: 2\",f2.get());\n    assertEquals(\"ValueForKey: 3\",f3.get());\n    assertEquals(\"ValueForKey: 4\",f4.get());\n    int numExecuted=HystrixRequestLog.getCurrentRequest().getAllExecutedCommands().size();\n    System.err.println(\"num executed: \" + numExecuted);\n    if (numExecuted > 2) {\n      fail(\"some of the commands should have been collapsed\");\n    }\n    System.err.println(\"HystrixRequestLog.getCurrentRequest().getAllExecutedCommands(): \" + HystrixRequestLog.getCurrentRequest().getAllExecutedCommands());\n    int numLogs=0;\n    for (    HystrixInvokableInfo<?> command : HystrixRequestLog.getCurrentRequest().getAllExecutedCommands()) {\n      numLogs++;\n      assertEquals(\"GetValueForKey\",command.getCommandKey().name());\n      System.err.println(command.getCommandKey().name() + \" => command.getExecutionEvents(): \" + command.getExecutionEvents());\n      assertTrue(command.getExecutionEvents().contains(HystrixEventType.COLLAPSED));\n      assertTrue(command.getExecutionEvents().contains(HystrixEventType.SUCCESS));\n    }\n    assertEquals(numExecuted,numLogs);\n  }\n  finally {\n    context.shutdown();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 215,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2362,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 132,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Test public void testCollapser() throws Exception {\n  HystrixRequestContext context=HystrixRequestContext.initializeContext();\n  try {\n    Future<String> f1=new CommandCollapserGetValueForKey(1).queue();\n    Future<String> f2=new CommandCollapserGetValueForKey(2).queue();\n    Future<String> f3=new CommandCollapserGetValueForKey(3).queue();\n    Future<String> f4=new CommandCollapserGetValueForKey(4).queue();\n    assertEquals(\"ValueForKey: 1\",f1.get());\n    assertEquals(\"ValueForKey: 2\",f2.get());\n    assertEquals(\"ValueForKey: 3\",f3.get());\n    assertEquals(\"ValueForKey: 4\",f4.get());\n    int numExecuted=HystrixRequestLog.getCurrentRequest().getAllExecutedCommands().size();\n    System.err.println(\"num executed: \" + numExecuted);\n    if (numExecuted > 2) {\n      fail(\"some of the commands should have been collapsed\");\n    }\n    System.err.println(\"HystrixRequestLog.getCurrentRequest().getAllExecutedCommands(): \" + HystrixRequestLog.getCurrentRequest().getAllExecutedCommands());\n    int numLogs=0;\n    for (    HystrixInvokableInfo<?> command : HystrixRequestLog.getCurrentRequest().getAllExecutedCommands()) {\n      numLogs++;\n      assertEquals(\"GetValueForKey\",command.getCommandKey().name());\n      System.err.println(command.getCommandKey().name() + \" => command.getExecutionEvents(): \" + command.getExecutionEvents());\n      assertTrue(command.getExecutionEvents().contains(HystrixEventType.COLLAPSED));\n      assertTrue(command.getExecutionEvents().contains(HystrixEventType.SUCCESS));\n    }\n    assertEquals(numExecuted,numLogs);\n  }\n  finally {\n    context.shutdown();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 223,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 102,
        "startColumnNumber" : 16,
        "endLineNumber" : 102,
        "endColumnNumber" : 104
      },
      "nodeContext" : "int numExecuted=HystrixRequestLog.getCurrentRequest().getAllExecutedCommands().size();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.HystrixRequestLog"
  }, {
    "nodeContext" : "HystrixRequestLog",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 112,
      "startColumnNumber" : 104,
      "endLineNumber" : 112,
      "endColumnNumber" : 121
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 112,
        "startColumnNumber" : 104,
        "endLineNumber" : 112,
        "endColumnNumber" : 141
      },
      "nodeContext" : "HystrixRequestLog.getCurrentRequest()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 112,
        "startColumnNumber" : 104,
        "endLineNumber" : 112,
        "endColumnNumber" : 166
      },
      "nodeContext" : "HystrixRequestLog.getCurrentRequest().getAllExecutedCommands()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 112,
        "startColumnNumber" : 35,
        "endLineNumber" : 112,
        "endColumnNumber" : 166
      },
      "nodeContext" : "\"HystrixRequestLog.getCurrentRequest().getAllExecutedCommands(): \" + HystrixRequestLog.getCurrentRequest().getAllExecutedCommands()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 112,
        "startColumnNumber" : 16,
        "endLineNumber" : 112,
        "endColumnNumber" : 167
      },
      "nodeContext" : "System.err.println(\"HystrixRequestLog.getCurrentRequest().getAllExecutedCommands(): \" + HystrixRequestLog.getCurrentRequest().getAllExecutedCommands())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 112,
        "startColumnNumber" : 16,
        "endLineNumber" : 112,
        "endColumnNumber" : 168
      },
      "nodeContext" : "System.err.println(\"HystrixRequestLog.getCurrentRequest().getAllExecutedCommands(): \" + HystrixRequestLog.getCurrentRequest().getAllExecutedCommands());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2128,
        "startLineNumber" : 91,
        "startColumnNumber" : 16,
        "endLineNumber" : 129,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Future<String> f1=new CommandCollapserGetValueForKey(1).queue();\n  Future<String> f2=new CommandCollapserGetValueForKey(2).queue();\n  Future<String> f3=new CommandCollapserGetValueForKey(3).queue();\n  Future<String> f4=new CommandCollapserGetValueForKey(4).queue();\n  assertEquals(\"ValueForKey: 1\",f1.get());\n  assertEquals(\"ValueForKey: 2\",f2.get());\n  assertEquals(\"ValueForKey: 3\",f3.get());\n  assertEquals(\"ValueForKey: 4\",f4.get());\n  int numExecuted=HystrixRequestLog.getCurrentRequest().getAllExecutedCommands().size();\n  System.err.println(\"num executed: \" + numExecuted);\n  if (numExecuted > 2) {\n    fail(\"some of the commands should have been collapsed\");\n  }\n  System.err.println(\"HystrixRequestLog.getCurrentRequest().getAllExecutedCommands(): \" + HystrixRequestLog.getCurrentRequest().getAllExecutedCommands());\n  int numLogs=0;\n  for (  HystrixInvokableInfo<?> command : HystrixRequestLog.getCurrentRequest().getAllExecutedCommands()) {\n    numLogs++;\n    assertEquals(\"GetValueForKey\",command.getCommandKey().name());\n    System.err.println(command.getCommandKey().name() + \" => command.getExecutionEvents(): \" + command.getExecutionEvents());\n    assertTrue(command.getExecutionEvents().contains(HystrixEventType.COLLAPSED));\n    assertTrue(command.getExecutionEvents().contains(HystrixEventType.SUCCESS));\n  }\n  assertEquals(numExecuted,numLogs);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 200,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2192,
        "startLineNumber" : 91,
        "startColumnNumber" : 12,
        "endLineNumber" : 131,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  Future<String> f1=new CommandCollapserGetValueForKey(1).queue();\n  Future<String> f2=new CommandCollapserGetValueForKey(2).queue();\n  Future<String> f3=new CommandCollapserGetValueForKey(3).queue();\n  Future<String> f4=new CommandCollapserGetValueForKey(4).queue();\n  assertEquals(\"ValueForKey: 1\",f1.get());\n  assertEquals(\"ValueForKey: 2\",f2.get());\n  assertEquals(\"ValueForKey: 3\",f3.get());\n  assertEquals(\"ValueForKey: 4\",f4.get());\n  int numExecuted=HystrixRequestLog.getCurrentRequest().getAllExecutedCommands().size();\n  System.err.println(\"num executed: \" + numExecuted);\n  if (numExecuted > 2) {\n    fail(\"some of the commands should have been collapsed\");\n  }\n  System.err.println(\"HystrixRequestLog.getCurrentRequest().getAllExecutedCommands(): \" + HystrixRequestLog.getCurrentRequest().getAllExecutedCommands());\n  int numLogs=0;\n  for (  HystrixInvokableInfo<?> command : HystrixRequestLog.getCurrentRequest().getAllExecutedCommands()) {\n    numLogs++;\n    assertEquals(\"GetValueForKey\",command.getCommandKey().name());\n    System.err.println(command.getCommandKey().name() + \" => command.getExecutionEvents(): \" + command.getExecutionEvents());\n    assertTrue(command.getExecutionEvents().contains(HystrixEventType.COLLAPSED));\n    assertTrue(command.getExecutionEvents().contains(HystrixEventType.SUCCESS));\n  }\n  assertEquals(numExecuted,numLogs);\n}\n  finally {\n  context.shutdown();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 206,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2303,
        "startLineNumber" : 89,
        "startColumnNumber" : 53,
        "endLineNumber" : 132,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HystrixRequestContext context=HystrixRequestContext.initializeContext();\n  try {\n    Future<String> f1=new CommandCollapserGetValueForKey(1).queue();\n    Future<String> f2=new CommandCollapserGetValueForKey(2).queue();\n    Future<String> f3=new CommandCollapserGetValueForKey(3).queue();\n    Future<String> f4=new CommandCollapserGetValueForKey(4).queue();\n    assertEquals(\"ValueForKey: 1\",f1.get());\n    assertEquals(\"ValueForKey: 2\",f2.get());\n    assertEquals(\"ValueForKey: 3\",f3.get());\n    assertEquals(\"ValueForKey: 4\",f4.get());\n    int numExecuted=HystrixRequestLog.getCurrentRequest().getAllExecutedCommands().size();\n    System.err.println(\"num executed: \" + numExecuted);\n    if (numExecuted > 2) {\n      fail(\"some of the commands should have been collapsed\");\n    }\n    System.err.println(\"HystrixRequestLog.getCurrentRequest().getAllExecutedCommands(): \" + HystrixRequestLog.getCurrentRequest().getAllExecutedCommands());\n    int numLogs=0;\n    for (    HystrixInvokableInfo<?> command : HystrixRequestLog.getCurrentRequest().getAllExecutedCommands()) {\n      numLogs++;\n      assertEquals(\"GetValueForKey\",command.getCommandKey().name());\n      System.err.println(command.getCommandKey().name() + \" => command.getExecutionEvents(): \" + command.getExecutionEvents());\n      assertTrue(command.getExecutionEvents().contains(HystrixEventType.COLLAPSED));\n      assertTrue(command.getExecutionEvents().contains(HystrixEventType.SUCCESS));\n    }\n    assertEquals(numExecuted,numLogs);\n  }\n  finally {\n    context.shutdown();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 215,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2362,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 132,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Test public void testCollapser() throws Exception {\n  HystrixRequestContext context=HystrixRequestContext.initializeContext();\n  try {\n    Future<String> f1=new CommandCollapserGetValueForKey(1).queue();\n    Future<String> f2=new CommandCollapserGetValueForKey(2).queue();\n    Future<String> f3=new CommandCollapserGetValueForKey(3).queue();\n    Future<String> f4=new CommandCollapserGetValueForKey(4).queue();\n    assertEquals(\"ValueForKey: 1\",f1.get());\n    assertEquals(\"ValueForKey: 2\",f2.get());\n    assertEquals(\"ValueForKey: 3\",f3.get());\n    assertEquals(\"ValueForKey: 4\",f4.get());\n    int numExecuted=HystrixRequestLog.getCurrentRequest().getAllExecutedCommands().size();\n    System.err.println(\"num executed: \" + numExecuted);\n    if (numExecuted > 2) {\n      fail(\"some of the commands should have been collapsed\");\n    }\n    System.err.println(\"HystrixRequestLog.getCurrentRequest().getAllExecutedCommands(): \" + HystrixRequestLog.getCurrentRequest().getAllExecutedCommands());\n    int numLogs=0;\n    for (    HystrixInvokableInfo<?> command : HystrixRequestLog.getCurrentRequest().getAllExecutedCommands()) {\n      numLogs++;\n      assertEquals(\"GetValueForKey\",command.getCommandKey().name());\n      System.err.println(command.getCommandKey().name() + \" => command.getExecutionEvents(): \" + command.getExecutionEvents());\n      assertTrue(command.getExecutionEvents().contains(HystrixEventType.COLLAPSED));\n      assertTrue(command.getExecutionEvents().contains(HystrixEventType.SUCCESS));\n    }\n    assertEquals(numExecuted,numLogs);\n  }\n  finally {\n    context.shutdown();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 223,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 112,
        "startColumnNumber" : 16,
        "endLineNumber" : 112,
        "endColumnNumber" : 168
      },
      "nodeContext" : "System.err.println(\"HystrixRequestLog.getCurrentRequest().getAllExecutedCommands(): \" + HystrixRequestLog.getCurrentRequest().getAllExecutedCommands());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.HystrixRequestLog"
  }, {
    "nodeContext" : "HystrixRequestLog",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 115,
      "startColumnNumber" : 55,
      "endLineNumber" : 115,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 115,
        "startColumnNumber" : 55,
        "endLineNumber" : 115,
        "endColumnNumber" : 92
      },
      "nodeContext" : "HystrixRequestLog.getCurrentRequest()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 115,
        "startColumnNumber" : 55,
        "endLineNumber" : 115,
        "endColumnNumber" : 117
      },
      "nodeContext" : "HystrixRequestLog.getCurrentRequest().getAllExecutedCommands()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 740,
        "startLineNumber" : 115,
        "startColumnNumber" : 16,
        "endLineNumber" : 126,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (HystrixInvokableInfo<?> command : HystrixRequestLog.getCurrentRequest().getAllExecutedCommands()) {\n  numLogs++;\n  assertEquals(\"GetValueForKey\",command.getCommandKey().name());\n  System.err.println(command.getCommandKey().name() + \" => command.getExecutionEvents(): \" + command.getExecutionEvents());\n  assertTrue(command.getExecutionEvents().contains(HystrixEventType.COLLAPSED));\n  assertTrue(command.getExecutionEvents().contains(HystrixEventType.SUCCESS));\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 63,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2128,
        "startLineNumber" : 91,
        "startColumnNumber" : 16,
        "endLineNumber" : 129,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Future<String> f1=new CommandCollapserGetValueForKey(1).queue();\n  Future<String> f2=new CommandCollapserGetValueForKey(2).queue();\n  Future<String> f3=new CommandCollapserGetValueForKey(3).queue();\n  Future<String> f4=new CommandCollapserGetValueForKey(4).queue();\n  assertEquals(\"ValueForKey: 1\",f1.get());\n  assertEquals(\"ValueForKey: 2\",f2.get());\n  assertEquals(\"ValueForKey: 3\",f3.get());\n  assertEquals(\"ValueForKey: 4\",f4.get());\n  int numExecuted=HystrixRequestLog.getCurrentRequest().getAllExecutedCommands().size();\n  System.err.println(\"num executed: \" + numExecuted);\n  if (numExecuted > 2) {\n    fail(\"some of the commands should have been collapsed\");\n  }\n  System.err.println(\"HystrixRequestLog.getCurrentRequest().getAllExecutedCommands(): \" + HystrixRequestLog.getCurrentRequest().getAllExecutedCommands());\n  int numLogs=0;\n  for (  HystrixInvokableInfo<?> command : HystrixRequestLog.getCurrentRequest().getAllExecutedCommands()) {\n    numLogs++;\n    assertEquals(\"GetValueForKey\",command.getCommandKey().name());\n    System.err.println(command.getCommandKey().name() + \" => command.getExecutionEvents(): \" + command.getExecutionEvents());\n    assertTrue(command.getExecutionEvents().contains(HystrixEventType.COLLAPSED));\n    assertTrue(command.getExecutionEvents().contains(HystrixEventType.SUCCESS));\n  }\n  assertEquals(numExecuted,numLogs);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 200,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2192,
        "startLineNumber" : 91,
        "startColumnNumber" : 12,
        "endLineNumber" : 131,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  Future<String> f1=new CommandCollapserGetValueForKey(1).queue();\n  Future<String> f2=new CommandCollapserGetValueForKey(2).queue();\n  Future<String> f3=new CommandCollapserGetValueForKey(3).queue();\n  Future<String> f4=new CommandCollapserGetValueForKey(4).queue();\n  assertEquals(\"ValueForKey: 1\",f1.get());\n  assertEquals(\"ValueForKey: 2\",f2.get());\n  assertEquals(\"ValueForKey: 3\",f3.get());\n  assertEquals(\"ValueForKey: 4\",f4.get());\n  int numExecuted=HystrixRequestLog.getCurrentRequest().getAllExecutedCommands().size();\n  System.err.println(\"num executed: \" + numExecuted);\n  if (numExecuted > 2) {\n    fail(\"some of the commands should have been collapsed\");\n  }\n  System.err.println(\"HystrixRequestLog.getCurrentRequest().getAllExecutedCommands(): \" + HystrixRequestLog.getCurrentRequest().getAllExecutedCommands());\n  int numLogs=0;\n  for (  HystrixInvokableInfo<?> command : HystrixRequestLog.getCurrentRequest().getAllExecutedCommands()) {\n    numLogs++;\n    assertEquals(\"GetValueForKey\",command.getCommandKey().name());\n    System.err.println(command.getCommandKey().name() + \" => command.getExecutionEvents(): \" + command.getExecutionEvents());\n    assertTrue(command.getExecutionEvents().contains(HystrixEventType.COLLAPSED));\n    assertTrue(command.getExecutionEvents().contains(HystrixEventType.SUCCESS));\n  }\n  assertEquals(numExecuted,numLogs);\n}\n  finally {\n  context.shutdown();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 206,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2303,
        "startLineNumber" : 89,
        "startColumnNumber" : 53,
        "endLineNumber" : 132,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HystrixRequestContext context=HystrixRequestContext.initializeContext();\n  try {\n    Future<String> f1=new CommandCollapserGetValueForKey(1).queue();\n    Future<String> f2=new CommandCollapserGetValueForKey(2).queue();\n    Future<String> f3=new CommandCollapserGetValueForKey(3).queue();\n    Future<String> f4=new CommandCollapserGetValueForKey(4).queue();\n    assertEquals(\"ValueForKey: 1\",f1.get());\n    assertEquals(\"ValueForKey: 2\",f2.get());\n    assertEquals(\"ValueForKey: 3\",f3.get());\n    assertEquals(\"ValueForKey: 4\",f4.get());\n    int numExecuted=HystrixRequestLog.getCurrentRequest().getAllExecutedCommands().size();\n    System.err.println(\"num executed: \" + numExecuted);\n    if (numExecuted > 2) {\n      fail(\"some of the commands should have been collapsed\");\n    }\n    System.err.println(\"HystrixRequestLog.getCurrentRequest().getAllExecutedCommands(): \" + HystrixRequestLog.getCurrentRequest().getAllExecutedCommands());\n    int numLogs=0;\n    for (    HystrixInvokableInfo<?> command : HystrixRequestLog.getCurrentRequest().getAllExecutedCommands()) {\n      numLogs++;\n      assertEquals(\"GetValueForKey\",command.getCommandKey().name());\n      System.err.println(command.getCommandKey().name() + \" => command.getExecutionEvents(): \" + command.getExecutionEvents());\n      assertTrue(command.getExecutionEvents().contains(HystrixEventType.COLLAPSED));\n      assertTrue(command.getExecutionEvents().contains(HystrixEventType.SUCCESS));\n    }\n    assertEquals(numExecuted,numLogs);\n  }\n  finally {\n    context.shutdown();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 215,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2362,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 132,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Test public void testCollapser() throws Exception {\n  HystrixRequestContext context=HystrixRequestContext.initializeContext();\n  try {\n    Future<String> f1=new CommandCollapserGetValueForKey(1).queue();\n    Future<String> f2=new CommandCollapserGetValueForKey(2).queue();\n    Future<String> f3=new CommandCollapserGetValueForKey(3).queue();\n    Future<String> f4=new CommandCollapserGetValueForKey(4).queue();\n    assertEquals(\"ValueForKey: 1\",f1.get());\n    assertEquals(\"ValueForKey: 2\",f2.get());\n    assertEquals(\"ValueForKey: 3\",f3.get());\n    assertEquals(\"ValueForKey: 4\",f4.get());\n    int numExecuted=HystrixRequestLog.getCurrentRequest().getAllExecutedCommands().size();\n    System.err.println(\"num executed: \" + numExecuted);\n    if (numExecuted > 2) {\n      fail(\"some of the commands should have been collapsed\");\n    }\n    System.err.println(\"HystrixRequestLog.getCurrentRequest().getAllExecutedCommands(): \" + HystrixRequestLog.getCurrentRequest().getAllExecutedCommands());\n    int numLogs=0;\n    for (    HystrixInvokableInfo<?> command : HystrixRequestLog.getCurrentRequest().getAllExecutedCommands()) {\n      numLogs++;\n      assertEquals(\"GetValueForKey\",command.getCommandKey().name());\n      System.err.println(command.getCommandKey().name() + \" => command.getExecutionEvents(): \" + command.getExecutionEvents());\n      assertTrue(command.getExecutionEvents().contains(HystrixEventType.COLLAPSED));\n      assertTrue(command.getExecutionEvents().contains(HystrixEventType.SUCCESS));\n    }\n    assertEquals(numExecuted,numLogs);\n  }\n  finally {\n    context.shutdown();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 223,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 115,
        "startColumnNumber" : 55,
        "endLineNumber" : 115,
        "endColumnNumber" : 117
      },
      "nodeContext" : "HystrixRequestLog.getCurrentRequest().getAllExecutedCommands()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.netflix.hystrix.HystrixRequestLog"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 102,
    "startColumnNumber" : 34,
    "endLineNumber" : 102,
    "endColumnNumber" : 51
  }, {
    "charLength" : 17,
    "startLineNumber" : 112,
    "startColumnNumber" : 104,
    "endLineNumber" : 112,
    "endColumnNumber" : 121
  }, {
    "charLength" : 17,
    "startLineNumber" : 115,
    "startColumnNumber" : 55,
    "endLineNumber" : 115,
    "endColumnNumber" : 72
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}