{
  "id" : 104,
  "expression" : "res",
  "projectName" : "TheAlgorithms@Java",
  "commitID" : "8b243667d736be7d0413cc77159378aa02459db0",
  "filePath" : "/src/main/java/com/thealgorithms/maths/AmicableNumber.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "res",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 47,
      "startColumnNumber" : 20,
      "endLineNumber" : 47,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 47,
        "startColumnNumber" : 20,
        "endLineNumber" : 47,
        "endColumnNumber" : 85
      },
      "nodeContext" : "res.append(\"\" + countofRes + \": = ( \"+ i+ \",\"+ j+ \")\"+ \"\\t\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 47,
        "startColumnNumber" : 20,
        "endLineNumber" : 47,
        "endColumnNumber" : 86
      },
      "nodeContext" : "res.append(\"\" + countofRes + \": = ( \"+ i+ \",\"+ j+ \")\"+ \"\\t\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 143,
        "startLineNumber" : 45,
        "startColumnNumber" : 44,
        "endLineNumber" : 48,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  countofRes++;\n  res.append(\"\" + countofRes + \": = ( \"+ i+ \",\"+ j+ \")\"+ \"\\t\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 171,
        "startLineNumber" : 45,
        "startColumnNumber" : 16,
        "endLineNumber" : 48,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (isAmicableNumber(i,j)) {\n  countofRes++;\n  res.append(\"\" + countofRes + \": = ( \"+ i+ \",\"+ j+ \")\"+ \"\\t\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 205,
        "startLineNumber" : 44,
        "startColumnNumber" : 53,
        "endLineNumber" : 49,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (isAmicableNumber(i,j)) {\n    countofRes++;\n    res.append(\"\" + countofRes + \": = ( \"+ i+ \",\"+ j+ \")\"+ \"\\t\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 246,
        "startLineNumber" : 44,
        "startColumnNumber" : 12,
        "endLineNumber" : 49,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int j=i + 1; j <= stopValue; j++) {\n  if (isAmicableNumber(i,j)) {\n    countofRes++;\n    res.append(\"\" + countofRes + \": = ( \"+ i+ \",\"+ j+ \")\"+ \"\\t\");\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 36,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 272,
        "startLineNumber" : 43,
        "startColumnNumber" : 53,
        "endLineNumber" : 50,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (int j=i + 1; j <= stopValue; j++) {\n    if (isAmicableNumber(i,j)) {\n      countofRes++;\n      res.append(\"\" + countofRes + \": = ( \"+ i+ \",\"+ j+ \")\"+ \"\\t\");\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 317,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=startValue; i < stopValue; i++) {\n  for (int j=i + 1; j <= stopValue; j++) {\n    if (isAmicableNumber(i,j)) {\n      countofRes++;\n      res.append(\"\" + countofRes + \": = ( \"+ i+ \",\"+ j+ \")\"+ \"\\t\");\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 48,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 984,
        "startLineNumber" : 35,
        "startColumnNumber" : 62,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringBuilder res=new StringBuilder();\n  int countofRes=0;\n  for (int i=startValue; i < stopValue; i++) {\n    for (int j=i + 1; j <= stopValue; j++) {\n      if (isAmicableNumber(i,j)) {\n        countofRes++;\n        res.append(\"\" + countofRes + \": = ( \"+ i+ \",\"+ j+ \")\"+ \"\\t\");\n      }\n    }\n  }\n  res.insert(0,\"Int Range of \" + startValue + \" till \"+ stopValue+ \" there are \"+ countofRes+ \" Amicable_numbers.These are \\n \");\n  System.out.println(res.toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1127,
        "startLineNumber" : 30,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * @param startValue\n * @param stopValue\n * @return\n */\nstatic void findAllInRange(int startValue,int stopValue){\n  StringBuilder res=new StringBuilder();\n  int countofRes=0;\n  for (int i=startValue; i < stopValue; i++) {\n    for (int j=i + 1; j <= stopValue; j++) {\n      if (isAmicableNumber(i,j)) {\n        countofRes++;\n        res.append(\"\" + countofRes + \": = ( \"+ i+ \",\"+ j+ \")\"+ \"\\t\");\n      }\n    }\n  }\n  res.insert(0,\"Int Range of \" + startValue + \" till \"+ stopValue+ \" there are \"+ countofRes+ \" Amicable_numbers.These are \\n \");\n  System.out.println(res.toString());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 95,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 47,
        "startColumnNumber" : 20,
        "endLineNumber" : 47,
        "endColumnNumber" : 86
      },
      "nodeContext" : "res.append(\"\" + countofRes + \": = ( \"+ i+ \",\"+ j+ \")\"+ \"\\t\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "res",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 51,
      "startColumnNumber" : 8,
      "endLineNumber" : 51,
      "endColumnNumber" : 11
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 268,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 52
      },
      "nodeContext" : "res.insert(0,\"Int Range of \" + startValue + \" till \"+ stopValue+ \" there are \"+ countofRes+ \" Amicable_numbers.These are \\n \")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 269,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 53
      },
      "nodeContext" : "res.insert(0,\"Int Range of \" + startValue + \" till \"+ stopValue+ \" there are \"+ countofRes+ \" Amicable_numbers.These are \\n \");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 984,
        "startLineNumber" : 35,
        "startColumnNumber" : 62,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringBuilder res=new StringBuilder();\n  int countofRes=0;\n  for (int i=startValue; i < stopValue; i++) {\n    for (int j=i + 1; j <= stopValue; j++) {\n      if (isAmicableNumber(i,j)) {\n        countofRes++;\n        res.append(\"\" + countofRes + \": = ( \"+ i+ \",\"+ j+ \")\"+ \"\\t\");\n      }\n    }\n  }\n  res.insert(0,\"Int Range of \" + startValue + \" till \"+ stopValue+ \" there are \"+ countofRes+ \" Amicable_numbers.These are \\n \");\n  System.out.println(res.toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1127,
        "startLineNumber" : 30,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * @param startValue\n * @param stopValue\n * @return\n */\nstatic void findAllInRange(int startValue,int stopValue){\n  StringBuilder res=new StringBuilder();\n  int countofRes=0;\n  for (int i=startValue; i < stopValue; i++) {\n    for (int j=i + 1; j <= stopValue; j++) {\n      if (isAmicableNumber(i,j)) {\n        countofRes++;\n        res.append(\"\" + countofRes + \": = ( \"+ i+ \",\"+ j+ \")\"+ \"\\t\");\n      }\n    }\n  }\n  res.insert(0,\"Int Range of \" + startValue + \" till \"+ stopValue+ \" there are \"+ countofRes+ \" Amicable_numbers.These are \\n \");\n  System.out.println(res.toString());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 95,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 268,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 52
      },
      "nodeContext" : "res.insert(0,\"Int Range of \" + startValue + \" till \"+ stopValue+ \" there are \"+ countofRes+ \" Amicable_numbers.These are \\n \")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "res",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 60,
      "startColumnNumber" : 27,
      "endLineNumber" : 60,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 60,
        "startColumnNumber" : 27,
        "endLineNumber" : 60,
        "endColumnNumber" : 41
      },
      "nodeContext" : "res.toString()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 42
      },
      "nodeContext" : "System.out.println(res.toString())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 43
      },
      "nodeContext" : "System.out.println(res.toString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 984,
        "startLineNumber" : 35,
        "startColumnNumber" : 62,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringBuilder res=new StringBuilder();\n  int countofRes=0;\n  for (int i=startValue; i < stopValue; i++) {\n    for (int j=i + 1; j <= stopValue; j++) {\n      if (isAmicableNumber(i,j)) {\n        countofRes++;\n        res.append(\"\" + countofRes + \": = ( \"+ i+ \",\"+ j+ \")\"+ \"\\t\");\n      }\n    }\n  }\n  res.insert(0,\"Int Range of \" + startValue + \" till \"+ stopValue+ \" there are \"+ countofRes+ \" Amicable_numbers.These are \\n \");\n  System.out.println(res.toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1127,
        "startLineNumber" : 30,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * @param startValue\n * @param stopValue\n * @return\n */\nstatic void findAllInRange(int startValue,int stopValue){\n  StringBuilder res=new StringBuilder();\n  int countofRes=0;\n  for (int i=startValue; i < stopValue; i++) {\n    for (int j=i + 1; j <= stopValue; j++) {\n      if (isAmicableNumber(i,j)) {\n        countofRes++;\n        res.append(\"\" + countofRes + \": = ( \"+ i+ \",\"+ j+ \")\"+ \"\\t\");\n      }\n    }\n  }\n  res.insert(0,\"Int Range of \" + startValue + \" till \"+ stopValue+ \" there are \"+ countofRes+ \" Amicable_numbers.These are \\n \");\n  System.out.println(res.toString());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 95,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 43
      },
      "nodeContext" : "System.out.println(res.toString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 47,
    "startColumnNumber" : 20,
    "endLineNumber" : 47,
    "endColumnNumber" : 23
  }, {
    "charLength" : 3,
    "startLineNumber" : 51,
    "startColumnNumber" : 8,
    "endLineNumber" : 51,
    "endColumnNumber" : 11
  }, {
    "charLength" : 3,
    "startLineNumber" : 60,
    "startColumnNumber" : 27,
    "endLineNumber" : 60,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}