{
  "id" : 419,
  "expression" : "ThrowableAssert",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockitousage/strictness/LenientMockAnnotationTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ThrowableAssert",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 39,
      "startColumnNumber" : 28,
      "endLineNumber" : 39,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SimpleType,name]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 39,
        "startColumnNumber" : 28,
        "endLineNumber" : 39,
        "endColumnNumber" : 60
      },
      "nodeContext" : "ThrowableAssert.ThrowingCallable",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,type]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 39,
        "startColumnNumber" : 28,
        "endLineNumber" : 39,
        "endColumnNumber" : 60
      },
      "nodeContext" : "ThrowableAssert.ThrowingCallable",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 228,
        "startLineNumber" : 39,
        "startColumnNumber" : 24,
        "endLineNumber" : 43,
        "endColumnNumber" : 25
      },
      "nodeContext" : "new ThrowableAssert.ThrowingCallable(){\n  public void call(){\n    ProductionCode.simpleMethod(regularMock,\"4\");\n  }\n}\n",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 285,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 26
      },
      "nodeContext" : "Assertions.assertThatThrownBy(new ThrowableAssert.ThrowingCallable(){\n  public void call(){\n    ProductionCode.simpleMethod(regularMock,\"4\");\n  }\n}\n)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 348,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 61
      },
      "nodeContext" : "Assertions.assertThatThrownBy(new ThrowableAssert.ThrowingCallable(){\n  public void call(){\n    ProductionCode.simpleMethod(regularMock,\"4\");\n  }\n}\n).isInstanceOf(PotentialStubbingProblem.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 349,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 62
      },
      "nodeContext" : "Assertions.assertThatThrownBy(new ThrowableAssert.ThrowingCallable(){\n  public void call(){\n    ProductionCode.simpleMethod(regularMock,\"4\");\n  }\n}\n).isInstanceOf(PotentialStubbingProblem.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 26,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 634,
        "startLineNumber" : 30,
        "startColumnNumber" : 34,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  when(lenientMock.simpleMethod(\"1\")).thenReturn(\"1\");\n  when(regularMock.simpleMethod(\"2\")).thenReturn(\"2\");\n  ProductionCode.simpleMethod(lenientMock,\"3\");\n  Assertions.assertThatThrownBy(new ThrowableAssert.ThrowingCallable(){\n    public void call(){\n      ProductionCode.simpleMethod(regularMock,\"4\");\n    }\n  }\n).isInstanceOf(PotentialStubbingProblem.class);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 675,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void mock_is_lenient(){\n  when(lenientMock.simpleMethod(\"1\")).thenReturn(\"1\");\n  when(regularMock.simpleMethod(\"2\")).thenReturn(\"2\");\n  ProductionCode.simpleMethod(lenientMock,\"3\");\n  Assertions.assertThatThrownBy(new ThrowableAssert.ThrowingCallable(){\n    public void call(){\n      ProductionCode.simpleMethod(regularMock,\"4\");\n    }\n  }\n).isInstanceOf(PotentialStubbingProblem.class);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 59,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,type]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 39,
        "startColumnNumber" : 28,
        "endLineNumber" : 39,
        "endColumnNumber" : 60
      },
      "nodeContext" : "ThrowableAssert.ThrowingCallable",
      "nodeType" : "SimpleType",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "ThrowableAssert"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 39,
    "startColumnNumber" : 28,
    "endLineNumber" : 39,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ ]
}