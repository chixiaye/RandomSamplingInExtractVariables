{
  "id" : 331,
  "expression" : "sticker.getPackKey()",
  "projectName" : "signalapp@Signal-Android",
  "commitID" : "7e91132e7ed62a58b5f347de252ab1eda3f43b90",
  "filePath" : "/app/src/main/java/org/thoughtcrime/securesms/database/StickerDatabase.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "sticker.getPackKey()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 94,
      "startColumnNumber" : 32,
      "endLineNumber" : 94,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 94,
        "startColumnNumber" : 4,
        "endLineNumber" : 94,
        "endColumnNumber" : 53
      },
      "nodeContext" : "contentValues.put(PACK_KEY,sticker.getPackKey())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 94,
        "startColumnNumber" : 4,
        "endLineNumber" : 94,
        "endColumnNumber" : 54
      },
      "nodeContext" : "contentValues.put(PACK_KEY,sticker.getPackKey());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1528,
        "startLineNumber" : 89,
        "startColumnNumber" : 130,
        "endLineNumber" : 125,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  FileInfo fileInfo=saveStickerImage(dataStream);\n  ContentValues contentValues=new ContentValues();\n  contentValues.put(PACK_ID,sticker.getPackId());\n  contentValues.put(PACK_KEY,sticker.getPackKey());\n  contentValues.put(PACK_TITLE,sticker.getPackTitle());\n  contentValues.put(PACK_AUTHOR,sticker.getPackAuthor());\n  contentValues.put(STICKER_ID,sticker.getStickerId());\n  contentValues.put(EMOJI,sticker.getEmoji());\n  contentValues.put(CONTENT_TYPE,sticker.getContentType());\n  contentValues.put(COVER,sticker.isCover() ? 1 : 0);\n  contentValues.put(INSTALLED,sticker.isInstalled() ? 1 : 0);\n  contentValues.put(FILE_PATH,fileInfo.getFile().getAbsolutePath());\n  contentValues.put(FILE_LENGTH,fileInfo.getLength());\n  contentValues.put(FILE_RANDOM,fileInfo.getRandom());\n  long id=databaseHelper.getSignalWritableDatabase().insert(TABLE_NAME,null,contentValues);\n  if (id == -1) {\n    String selection=PACK_ID + \" = ? AND \" + STICKER_ID+ \" = ? AND \"+ COVER+ \" = ?\";\n    String[] args=SqlUtil.buildArgs(sticker.getPackId(),sticker.getStickerId(),(sticker.isCover() ? 1 : 0));\n    id=databaseHelper.getSignalWritableDatabase().update(TABLE_NAME,contentValues,selection,args);\n  }\n  if (id > 0) {\n    notifyStickerListeners();\n    if (sticker.isCover()) {\n      notifyStickerPackListeners();\n      if (sticker.isInstalled() && notify) {\n        broadcastInstallEvent(sticker.getPackId());\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 215,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1656,
        "startLineNumber" : 89,
        "startColumnNumber" : 2,
        "endLineNumber" : 125,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void insertSticker(@NonNull IncomingSticker sticker,@NonNull InputStream dataStream,boolean notify) throws IOException {\n  FileInfo fileInfo=saveStickerImage(dataStream);\n  ContentValues contentValues=new ContentValues();\n  contentValues.put(PACK_ID,sticker.getPackId());\n  contentValues.put(PACK_KEY,sticker.getPackKey());\n  contentValues.put(PACK_TITLE,sticker.getPackTitle());\n  contentValues.put(PACK_AUTHOR,sticker.getPackAuthor());\n  contentValues.put(STICKER_ID,sticker.getStickerId());\n  contentValues.put(EMOJI,sticker.getEmoji());\n  contentValues.put(CONTENT_TYPE,sticker.getContentType());\n  contentValues.put(COVER,sticker.isCover() ? 1 : 0);\n  contentValues.put(INSTALLED,sticker.isInstalled() ? 1 : 0);\n  contentValues.put(FILE_PATH,fileInfo.getFile().getAbsolutePath());\n  contentValues.put(FILE_LENGTH,fileInfo.getLength());\n  contentValues.put(FILE_RANDOM,fileInfo.getRandom());\n  long id=databaseHelper.getSignalWritableDatabase().insert(TABLE_NAME,null,contentValues);\n  if (id == -1) {\n    String selection=PACK_ID + \" = ? AND \" + STICKER_ID+ \" = ? AND \"+ COVER+ \" = ?\";\n    String[] args=SqlUtil.buildArgs(sticker.getPackId(),sticker.getStickerId(),(sticker.isCover() ? 1 : 0));\n    id=databaseHelper.getSignalWritableDatabase().update(TABLE_NAME,contentValues,selection,args);\n  }\n  if (id > 0) {\n    notifyStickerListeners();\n    if (sticker.isCover()) {\n      notifyStickerPackListeners();\n      if (sticker.isInstalled() && notify) {\n        broadcastInstallEvent(sticker.getPackId());\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 236,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 94,
        "startColumnNumber" : 4,
        "endLineNumber" : 94,
        "endColumnNumber" : 54
      },
      "nodeContext" : "contentValues.put(PACK_KEY,sticker.getPackKey());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 94,
    "startColumnNumber" : 32,
    "endLineNumber" : 94,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}