{
  "id" : 205,
  "expression" : "validLocations == 0",
  "projectName" : "projectlombok@lombok",
  "commitID" : "25def866b50860715ee7c315c678b8c3d1ba9b56",
  "filePath" : "/src/installer/lombok/installer/Installer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "validLocations == 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 283,
      "startColumnNumber" : 6,
      "endLineNumber" : 283,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 283,
        "startColumnNumber" : 2,
        "endLineNumber" : 285,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (validLocations == 0) {\n  System.err.println(\"WARNING: Zero valid locations found; so nothing was done!\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2419,
        "startLineNumber" : 210,
        "startColumnNumber" : 73,
        "endLineNumber" : 287,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  CmdReader<CmdArgs> reader=CmdReader.of(CmdArgs.class);\n  CmdArgs args;\n  try {\n    args=reader.make(rawArgs.toArray(new String[0]));\n  }\n catch (  InvalidCommandLineException e) {\n    System.err.println(e.getMessage());\n    System.err.println(\"--------------------------\");\n    System.err.println(generateCliHelp(uninstall,reader));\n    return 1;\n  }\n  if (args.help) {\n    System.out.println(generateCliHelp(uninstall,reader));\n    return 0;\n  }\n  if (args.path.isEmpty()) {\n    System.err.println(\"ERROR: Nothing to do!\");\n    System.err.println(\"--------------------------\");\n    System.err.println(generateCliHelp(uninstall,reader));\n    return 1;\n  }\n  final List<IdeLocation> locations=new ArrayList<IdeLocation>();\n  final List<CorruptedIdeLocationException> problems=new ArrayList<CorruptedIdeLocationException>();\n  if (args.path.contains(\"auto\"))   autoDiscover(locations,problems);\n  for (  String rawPath : args.path) {\n    if (!rawPath.equals(\"auto\")) {\n      try {\n        IdeLocation loc=tryAllProviders(rawPath);\n        if (loc != null)         locations.add(loc);\n else         problems.add(new CorruptedIdeLocationException(\"Can't find any IDE at: \" + rawPath,null,null));\n      }\n catch (      CorruptedIdeLocationException e) {\n        problems.add(e);\n      }\n    }\n  }\n  int validLocations=locations.size();\n  for (  IdeLocation loc : locations) {\n    try {\n      if (uninstall) {\n        loc.uninstall();\n      }\n else {\n        loc.install();\n      }\n      System.out.printf(\"Lombok %s %s: %s\\n\",uninstall ? \"uninstalled\" : \"installed\",uninstall ? \"from\" : \"to\",loc.getName());\n    }\n catch (    InstallException e) {\n      if (e.isWarning()) {\n        System.err.printf(\"Warning while installing at %s:\\n\",loc.getName());\n      }\n else {\n        System.err.printf(\"Installation at %s failed:\\n\",loc.getName());\n        validLocations--;\n      }\n      System.err.println(e.getMessage());\n    }\ncatch (    UninstallException e) {\n      if (e.isWarning()) {\n        System.err.printf(\"Warning while uninstalling at %s:\\n\",loc.getName());\n      }\n else {\n        System.err.printf(\"Uninstall at %s failed:\\n\",loc.getName());\n        validLocations--;\n      }\n      System.err.println(e.getMessage());\n    }\n  }\n  for (  CorruptedIdeLocationException problem : problems) {\n    System.err.println(\"WARNING: \" + problem.getMessage());\n  }\n  if (validLocations == 0) {\n    System.err.println(\"WARNING: Zero valid locations found; so nothing was done!\");\n  }\n  return 0;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 387,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2491,
        "startLineNumber" : 210,
        "startColumnNumber" : 1,
        "endLineNumber" : 287,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public static int cliInstaller(boolean uninstall,List<String> rawArgs){\n  CmdReader<CmdArgs> reader=CmdReader.of(CmdArgs.class);\n  CmdArgs args;\n  try {\n    args=reader.make(rawArgs.toArray(new String[0]));\n  }\n catch (  InvalidCommandLineException e) {\n    System.err.println(e.getMessage());\n    System.err.println(\"--------------------------\");\n    System.err.println(generateCliHelp(uninstall,reader));\n    return 1;\n  }\n  if (args.help) {\n    System.out.println(generateCliHelp(uninstall,reader));\n    return 0;\n  }\n  if (args.path.isEmpty()) {\n    System.err.println(\"ERROR: Nothing to do!\");\n    System.err.println(\"--------------------------\");\n    System.err.println(generateCliHelp(uninstall,reader));\n    return 1;\n  }\n  final List<IdeLocation> locations=new ArrayList<IdeLocation>();\n  final List<CorruptedIdeLocationException> problems=new ArrayList<CorruptedIdeLocationException>();\n  if (args.path.contains(\"auto\"))   autoDiscover(locations,problems);\n  for (  String rawPath : args.path) {\n    if (!rawPath.equals(\"auto\")) {\n      try {\n        IdeLocation loc=tryAllProviders(rawPath);\n        if (loc != null)         locations.add(loc);\n else         problems.add(new CorruptedIdeLocationException(\"Can't find any IDE at: \" + rawPath,null,null));\n      }\n catch (      CorruptedIdeLocationException e) {\n        problems.add(e);\n      }\n    }\n  }\n  int validLocations=locations.size();\n  for (  IdeLocation loc : locations) {\n    try {\n      if (uninstall) {\n        loc.uninstall();\n      }\n else {\n        loc.install();\n      }\n      System.out.printf(\"Lombok %s %s: %s\\n\",uninstall ? \"uninstalled\" : \"installed\",uninstall ? \"from\" : \"to\",loc.getName());\n    }\n catch (    InstallException e) {\n      if (e.isWarning()) {\n        System.err.printf(\"Warning while installing at %s:\\n\",loc.getName());\n      }\n else {\n        System.err.printf(\"Installation at %s failed:\\n\",loc.getName());\n        validLocations--;\n      }\n      System.err.println(e.getMessage());\n    }\ncatch (    UninstallException e) {\n      if (e.isWarning()) {\n        System.err.printf(\"Warning while uninstalling at %s:\\n\",loc.getName());\n      }\n else {\n        System.err.printf(\"Uninstall at %s failed:\\n\",loc.getName());\n        validLocations--;\n      }\n      System.err.println(e.getMessage());\n    }\n  }\n  for (  CorruptedIdeLocationException problem : problems) {\n    System.err.println(\"WARNING: \" + problem.getMessage());\n  }\n  if (validLocations == 0) {\n    System.err.println(\"WARNING: Zero valid locations found; so nothing was done!\");\n  }\n  return 0;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 402,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 283,
        "startColumnNumber" : 2,
        "endLineNumber" : 285,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (validLocations == 0) {\n  System.err.println(\"WARNING: Zero valid locations found; so nothing was done!\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 283,
    "startColumnNumber" : 6,
    "endLineNumber" : 283,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ ]
}