{
  "id" : 104,
  "expression" : "TenantAndNsNameOppositeOrder[ix % NumRGs] + \"/\" + BaseTestTopicName+ ix",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-broker/src/test/java/org/apache/pulsar/broker/resourcegroup/RGUsageMTAggrWaitForAllMesgsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "TenantAndNsNameOppositeOrder[ix % NumRGs] + \"/\" + BaseTestTopicName+ ix",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 72,
      "startLineNumber" : 978,
      "startColumnNumber" : 20,
      "endLineNumber" : 978,
      "endColumnNumber" : 92
    },
    "astNodeNumber" : 9,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 977,
        "startColumnNumber" : 12,
        "endLineNumber" : 978,
        "endColumnNumber" : 92
      },
      "nodeContext" : "TopicNamesDifferentTenantAndNsRGs[ix]=TenantAndNsNameOppositeOrder[ix % NumRGs] + \"/\" + BaseTestTopicName+ ix",
      "nodeType" : "Assignment",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 977,
        "startColumnNumber" : 12,
        "endLineNumber" : 978,
        "endColumnNumber" : 93
      },
      "nodeContext" : "TopicNamesDifferentTenantAndNsRGs[ix]=TenantAndNsNameOppositeOrder[ix % NumRGs] + \"/\" + BaseTestTopicName+ ix;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 294,
        "startLineNumber" : 974,
        "startColumnNumber" : 47,
        "endLineNumber" : 979,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  TopicNamesSameTenantAndNsRGs[ix]=TenantAndNsNameSameOrder[ix % NumRGs] + \"/\" + BaseTestTopicName+ ix;\n  TopicNamesDifferentTenantAndNsRGs[ix]=TenantAndNsNameOppositeOrder[ix % NumRGs] + \"/\" + BaseTestTopicName+ ix;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 333,
        "startLineNumber" : 974,
        "startColumnNumber" : 8,
        "endLineNumber" : 979,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int ix=0; ix < NumTopics; ix++) {\n  TopicNamesSameTenantAndNsRGs[ix]=TenantAndNsNameSameOrder[ix % NumRGs] + \"/\" + BaseTestTopicName+ ix;\n  TopicNamesDifferentTenantAndNsRGs[ix]=TenantAndNsNameOppositeOrder[ix % NumRGs] + \"/\" + BaseTestTopicName+ ix;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 40,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3850,
        "startLineNumber" : 916,
        "startColumnNumber" : 47,
        "endLineNumber" : 992,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assert.assertTrue(NumConsumers >= NumProducers && NumConsumers % NumProducers == 0);\n  Assert.assertEquals(NumTotalMessages % NumTopics,0);\n  Assert.assertEquals(NumTopics % NumRGs,0);\n  final int NumConsumerMessages=NumMessagesPerConsumer * NumConsumers;\n  final int NumProducerMessages=NumMessagesPerProducer * NumProducers;\n  Assert.assertTrue(NumMessagesPerConsumer > 0 && NumConsumerMessages == NumProducerMessages);\n  rgConfig.setPublishRateInBytes(1500);\n  rgConfig.setPublishRateInMsgs(100);\n  rgConfig.setDispatchRateInBytes(4000);\n  rgConfig.setDispatchRateInMsgs(500);\n  for (int ix=0; ix < NumRGs; ix++) {\n    RGNames[ix]=BaseRGName + ix;\n  }\n  final TenantInfo configInfo=new TenantInfoImpl(Sets.newHashSet(\"fakeAdminRole\"),Sets.newHashSet(clusterName));\n  for (int ix=0; ix < NumRGs; ix++) {\n    admin.tenants().createTenant(RGNames[ix],configInfo);\n  }\n  for (int ix=0; ix < NumRGs; ix++) {\n    TenantAndNsNameSameOrder[ix]=RGNames[ix] + \"/\" + RGNames[ix];\n    TenantAndNsNameOppositeOrder[ix]=RGNames[ix] + \"/\" + RGNames[NumRGs - (ix + 1)];\n  }\n  for (int ix=0; ix < NumRGs; ix++) {\n    if (!createdNamespaces.contains(TenantAndNsNameSameOrder[ix])) {\n      admin.namespaces().createNamespace(TenantAndNsNameSameOrder[ix]);\n      admin.namespaces().setNamespaceReplicationClusters(TenantAndNsNameSameOrder[ix],Sets.newHashSet(clusterName));\n      createdNamespaces.add(TenantAndNsNameSameOrder[ix]);\n    }\n    if (!createdNamespaces.contains(TenantAndNsNameOppositeOrder[ix])) {\n      admin.namespaces().createNamespace(TenantAndNsNameOppositeOrder[ix]);\n      admin.namespaces().setNamespaceReplicationClusters(TenantAndNsNameOppositeOrder[ix],Sets.newHashSet(clusterName));\n      createdNamespaces.add(TenantAndNsNameOppositeOrder[ix]);\n    }\n  }\n  for (int ix=0; ix < NumTopics; ix++) {\n    TopicNamesSameTenantAndNsRGs[ix]=TenantAndNsNameSameOrder[ix % NumRGs] + \"/\" + BaseTestTopicName+ ix;\n    TopicNamesDifferentTenantAndNsRGs[ix]=TenantAndNsNameOppositeOrder[ix % NumRGs] + \"/\" + BaseTestTopicName+ ix;\n  }\n  for (int ix=0; ix < NumTopics; ix++) {\n    PersistentTopicNamesSameTenanatAndNsRGs[ix]=\"persistent://\" + TopicNamesSameTenantAndNsRGs[ix];\n    PersistentTopicNamesDifferentTenantAndNsRGs[ix]=\"persistent://\" + TopicNamesDifferentTenantAndNsRGs[ix];\n    NonPersistentTopicNamesSameTenantAndNsRGs[ix]=\"non-persistent://\" + TopicNamesSameTenantAndNsRGs[ix];\n    NonPersistentTopicNamesDifferentTenantAndNsRGs[ix]=\"non-persistent://\" + TopicNamesDifferentTenantAndNsRGs[ix];\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 359,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3893,
        "startLineNumber" : 916,
        "startColumnNumber" : 4,
        "endLineNumber" : 992,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void prepareRGs() throws Exception {\n  Assert.assertTrue(NumConsumers >= NumProducers && NumConsumers % NumProducers == 0);\n  Assert.assertEquals(NumTotalMessages % NumTopics,0);\n  Assert.assertEquals(NumTopics % NumRGs,0);\n  final int NumConsumerMessages=NumMessagesPerConsumer * NumConsumers;\n  final int NumProducerMessages=NumMessagesPerProducer * NumProducers;\n  Assert.assertTrue(NumMessagesPerConsumer > 0 && NumConsumerMessages == NumProducerMessages);\n  rgConfig.setPublishRateInBytes(1500);\n  rgConfig.setPublishRateInMsgs(100);\n  rgConfig.setDispatchRateInBytes(4000);\n  rgConfig.setDispatchRateInMsgs(500);\n  for (int ix=0; ix < NumRGs; ix++) {\n    RGNames[ix]=BaseRGName + ix;\n  }\n  final TenantInfo configInfo=new TenantInfoImpl(Sets.newHashSet(\"fakeAdminRole\"),Sets.newHashSet(clusterName));\n  for (int ix=0; ix < NumRGs; ix++) {\n    admin.tenants().createTenant(RGNames[ix],configInfo);\n  }\n  for (int ix=0; ix < NumRGs; ix++) {\n    TenantAndNsNameSameOrder[ix]=RGNames[ix] + \"/\" + RGNames[ix];\n    TenantAndNsNameOppositeOrder[ix]=RGNames[ix] + \"/\" + RGNames[NumRGs - (ix + 1)];\n  }\n  for (int ix=0; ix < NumRGs; ix++) {\n    if (!createdNamespaces.contains(TenantAndNsNameSameOrder[ix])) {\n      admin.namespaces().createNamespace(TenantAndNsNameSameOrder[ix]);\n      admin.namespaces().setNamespaceReplicationClusters(TenantAndNsNameSameOrder[ix],Sets.newHashSet(clusterName));\n      createdNamespaces.add(TenantAndNsNameSameOrder[ix]);\n    }\n    if (!createdNamespaces.contains(TenantAndNsNameOppositeOrder[ix])) {\n      admin.namespaces().createNamespace(TenantAndNsNameOppositeOrder[ix]);\n      admin.namespaces().setNamespaceReplicationClusters(TenantAndNsNameOppositeOrder[ix],Sets.newHashSet(clusterName));\n      createdNamespaces.add(TenantAndNsNameOppositeOrder[ix]);\n    }\n  }\n  for (int ix=0; ix < NumTopics; ix++) {\n    TopicNamesSameTenantAndNsRGs[ix]=TenantAndNsNameSameOrder[ix % NumRGs] + \"/\" + BaseTestTopicName+ ix;\n    TopicNamesDifferentTenantAndNsRGs[ix]=TenantAndNsNameOppositeOrder[ix % NumRGs] + \"/\" + BaseTestTopicName+ ix;\n  }\n  for (int ix=0; ix < NumTopics; ix++) {\n    PersistentTopicNamesSameTenanatAndNsRGs[ix]=\"persistent://\" + TopicNamesSameTenantAndNsRGs[ix];\n    PersistentTopicNamesDifferentTenantAndNsRGs[ix]=\"persistent://\" + TopicNamesDifferentTenantAndNsRGs[ix];\n    NonPersistentTopicNamesSameTenantAndNsRGs[ix]=\"non-persistent://\" + TopicNamesSameTenantAndNsRGs[ix];\n    NonPersistentTopicNamesDifferentTenantAndNsRGs[ix]=\"non-persistent://\" + TopicNamesDifferentTenantAndNsRGs[ix];\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 365,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 977,
        "startColumnNumber" : 12,
        "endLineNumber" : 978,
        "endColumnNumber" : 92
      },
      "nodeContext" : "TopicNamesDifferentTenantAndNsRGs[ix]=TenantAndNsNameOppositeOrder[ix % NumRGs] + \"/\" + BaseTestTopicName+ ix",
      "nodeType" : "Assignment",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 9,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 72,
    "startLineNumber" : 978,
    "startColumnNumber" : 20,
    "endLineNumber" : 978,
    "endColumnNumber" : 92
  } ],
  "layoutRelationDataList" : [ ]
}