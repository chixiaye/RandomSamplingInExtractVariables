{
  "id" : 400,
  "expression" : "lengthCount",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/libraries-security/src/test/java/com/baeldung/passay/PasswordValidatorUnitTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "lengthCount",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 45,
      "startColumnNumber" : 41,
      "endLineNumber" : 45,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertEquals(Integer.valueOf(4),lengthCount)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertEquals(Integer.valueOf(4),lengthCount);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 815,
        "startLineNumber" : 26,
        "startColumnNumber" : 91,
        "endLineNumber" : 46,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  PasswordData passwordData=new PasswordData(\"1234\");\n  PasswordValidator passwordValidator=new PasswordValidator(new LengthRule(5));\n  RuleResult validate=passwordValidator.validate(passwordData);\n  assertEquals(false,validate.isValid());\n  RuleResultDetail ruleResultDetail=validate.getDetails().get(0);\n  assertEquals(\"TOO_SHORT\",ruleResultDetail.getErrorCode());\n  assertEquals(5,ruleResultDetail.getParameters().get(\"minimumLength\"));\n  assertEquals(5,ruleResultDetail.getParameters().get(\"maximumLength\"));\n  Integer lengthCount=validate.getMetadata().getCounts().get(RuleResultMetadata.CountCategory.Length);\n  assertEquals(Integer.valueOf(4),lengthCount);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 912,
        "startLineNumber" : 25,
        "startColumnNumber" : 4,
        "endLineNumber" : 46,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void givenPasswordValidatorWithLengthRule_whenValidation_thenTooShortPassword(){\n  PasswordData passwordData=new PasswordData(\"1234\");\n  PasswordValidator passwordValidator=new PasswordValidator(new LengthRule(5));\n  RuleResult validate=passwordValidator.validate(passwordData);\n  assertEquals(false,validate.isValid());\n  RuleResultDetail ruleResultDetail=validate.getDetails().get(0);\n  assertEquals(\"TOO_SHORT\",ruleResultDetail.getErrorCode());\n  assertEquals(5,ruleResultDetail.getParameters().get(\"minimumLength\"));\n  assertEquals(5,ruleResultDetail.getParameters().get(\"maximumLength\"));\n  Integer lengthCount=validate.getMetadata().getCounts().get(RuleResultMetadata.CountCategory.Length);\n  assertEquals(Integer.valueOf(4),lengthCount);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 107,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertEquals(Integer.valueOf(4),lengthCount);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Integer"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 45,
    "startColumnNumber" : 41,
    "endLineNumber" : 45,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}