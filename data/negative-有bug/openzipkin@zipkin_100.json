{
  "id" : 100,
  "expression" : "Span.builder().traceId(1)",
  "projectName" : "openzipkin@zipkin",
  "commitID" : "f02a993656f506277ca83737ddf494ed45fde4b3",
  "filePath" : "/zipkin/src/test/java/zipkin/SpanTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Span.builder().traceId(1)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 64,
      "startColumnNumber" : 21,
      "endLineNumber" : 64,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 64,
        "startColumnNumber" : 21,
        "endLineNumber" : 64,
        "endColumnNumber" : 52
      },
      "nodeContext" : "Span.builder().traceId(1).id(2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 64,
        "startColumnNumber" : 21,
        "endLineNumber" : 64,
        "endColumnNumber" : 66
      },
      "nodeContext" : "Span.builder().traceId(1).id(2).name(nonName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 64,
        "startColumnNumber" : 21,
        "endLineNumber" : 64,
        "endColumnNumber" : 74
      },
      "nodeContext" : "Span.builder().traceId(1).id(2).name(nonName).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 64,
        "startColumnNumber" : 11,
        "endLineNumber" : 64,
        "endColumnNumber" : 74
      },
      "nodeContext" : "unknown=Span.builder().traceId(1).id(2).name(nonName).build()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 64,
        "startColumnNumber" : 6,
        "endLineNumber" : 64,
        "endColumnNumber" : 75
      },
      "nodeContext" : "Span unknown=Span.builder().traceId(1).id(2).name(nonName).build();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 19,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 302,
        "startLineNumber" : 63,
        "startColumnNumber" : 56,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Span unknown=Span.builder().traceId(1).id(2).name(nonName).build();\n  Span get=unknown.toBuilder().name(\"get\").build();\n  assertThat(unknown.toBuilder().merge(get).build().name).isEqualTo(\"get\");\n  assertThat(get.toBuilder().merge(unknown).build().name).isEqualTo(\"get\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 354,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (String nonName : Arrays.asList(\"\",\"unknown\")) {\n  Span unknown=Span.builder().traceId(1).id(2).name(nonName).build();\n  Span get=unknown.toBuilder().name(\"get\").build();\n  assertThat(unknown.toBuilder().merge(get).build().name).isEqualTo(\"get\");\n  assertThat(get.toBuilder().merge(unknown).build().name).isEqualTo(\"get\");\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 75,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 364,
        "startLineNumber" : 62,
        "startColumnNumber" : 45,
        "endLineNumber" : 70,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (  String nonName : Arrays.asList(\"\",\"unknown\")) {\n    Span unknown=Span.builder().traceId(1).id(2).name(nonName).build();\n    Span get=unknown.toBuilder().name(\"get\").build();\n    assertThat(unknown.toBuilder().merge(get).build().name).isEqualTo(\"get\");\n    assertThat(get.toBuilder().merge(unknown).build().name).isEqualTo(\"get\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 535,
        "startLineNumber" : 57,
        "startColumnNumber" : 2,
        "endLineNumber" : 70,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Some instrumentation set name to \"unknown\" or empty. This ensures dummy span names lose on merge.\n */\n@Test public void mergeOverridesDummySpanNames(){\n  for (  String nonName : Arrays.asList(\"\",\"unknown\")) {\n    Span unknown=Span.builder().traceId(1).id(2).name(nonName).build();\n    Span get=unknown.toBuilder().name(\"get\").build();\n    assertThat(unknown.toBuilder().merge(get).build().name).isEqualTo(\"get\");\n    assertThat(get.toBuilder().merge(unknown).build().name).isEqualTo(\"get\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 83,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 64,
        "startColumnNumber" : 6,
        "endLineNumber" : 64,
        "endColumnNumber" : 75
      },
      "nodeContext" : "Span unknown=Span.builder().traceId(1).id(2).name(nonName).build();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 19,
      "astHeight" : 8
    },
    "tokenLength" : 4,
    "type" : "zipkin.Span.Builder"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 64,
    "startColumnNumber" : 21,
    "endLineNumber" : 64,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ ]
}