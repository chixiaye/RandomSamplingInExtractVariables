{
  "id" : 304,
  "expression" : "fhdr",
  "projectName" : "apache@zookeeper",
  "commitID" : "c6639c9842973a7954c8baa412d6825cb833d51f",
  "filePath" : "/src/java/main/org/apache/zookeeper/server/persistence/FileTxnLog.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "fhdr",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 132,
      "startColumnNumber" : 15,
      "endLineNumber" : 132,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 132,
        "startColumnNumber" : 15,
        "endLineNumber" : 132,
        "endColumnNumber" : 47
      },
      "nodeContext" : "fhdr.serialize(oa,\"fileheader\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 132,
        "startColumnNumber" : 15,
        "endLineNumber" : 132,
        "endColumnNumber" : 48
      },
      "nodeContext" : "fhdr.serialize(oa,\"fileheader\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 491,
        "startLineNumber" : 126,
        "startColumnNumber" : 32,
        "endLineNumber" : 135,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  logFileWrite=new File(logDir,(\"log.\" + Long.toHexString(hdr.getZxid())));\n  logStream=new FileOutputStream(logFileWrite);\n  oa=BinaryOutputArchive.getArchive(logStream);\n  FileHeader fhdr=new FileHeader(TXNLOG_MAGIC,VERSION,dbId);\n  fhdr.serialize(oa,\"fileheader\");\n  currentSize=logStream.getChannel().position();\n  streamsToFlush.add(logStream);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 61,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 512,
        "startLineNumber" : 126,
        "startColumnNumber" : 11,
        "endLineNumber" : 135,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (logStream == null) {\n  logFileWrite=new File(logDir,(\"log.\" + Long.toHexString(hdr.getZxid())));\n  logStream=new FileOutputStream(logFileWrite);\n  oa=BinaryOutputArchive.getArchive(logStream);\n  FileHeader fhdr=new FileHeader(TXNLOG_MAGIC,VERSION,dbId);\n  fhdr.serialize(oa,\"fileheader\");\n  currentSize=logStream.getChannel().position();\n  streamsToFlush.add(logStream);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1211,
        "startLineNumber" : 120,
        "startColumnNumber" : 25,
        "endLineNumber" : 146,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (hdr.getZxid() <= lastZxidSeen) {\n    LOG.warn(\"Current zxid \" + hdr.getZxid() + \" is <= \"+ lastZxidSeen+ \" for \"+ hdr.getType());\n  }\n  if (logStream == null) {\n    logFileWrite=new File(logDir,(\"log.\" + Long.toHexString(hdr.getZxid())));\n    logStream=new FileOutputStream(logFileWrite);\n    oa=BinaryOutputArchive.getArchive(logStream);\n    FileHeader fhdr=new FileHeader(TXNLOG_MAGIC,VERSION,dbId);\n    fhdr.serialize(oa,\"fileheader\");\n    currentSize=logStream.getChannel().position();\n    streamsToFlush.add(logStream);\n  }\n  padFile(logStream);\n  byte[] buf=Util.marshallTxnEntry(hdr,txn);\n  if (buf == null || buf.length == 0) {\n    throw new IOException(\"Faulty serialization for header \" + \"and txn\");\n  }\n  Checksum crc=makeChecksumAlgorithm();\n  crc.update(buf,0,buf.length);\n  oa.writeLong(crc.getValue(),\"txnEntryCRC\");\n  Util.writeTxnBytes(oa,buf);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1228,
        "startLineNumber" : 120,
        "startColumnNumber" : 8,
        "endLineNumber" : 146,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (hdr != null) {\n  if (hdr.getZxid() <= lastZxidSeen) {\n    LOG.warn(\"Current zxid \" + hdr.getZxid() + \" is <= \"+ lastZxidSeen+ \" for \"+ hdr.getType());\n  }\n  if (logStream == null) {\n    logFileWrite=new File(logDir,(\"log.\" + Long.toHexString(hdr.getZxid())));\n    logStream=new FileOutputStream(logFileWrite);\n    oa=BinaryOutputArchive.getArchive(logStream);\n    FileHeader fhdr=new FileHeader(TXNLOG_MAGIC,VERSION,dbId);\n    fhdr.serialize(oa,\"fileheader\");\n    currentSize=logStream.getChannel().position();\n    streamsToFlush.add(logStream);\n  }\n  padFile(logStream);\n  byte[] buf=Util.marshallTxnEntry(hdr,txn);\n  if (buf == null || buf.length == 0) {\n    throw new IOException(\"Faulty serialization for header \" + \"and txn\");\n  }\n  Checksum crc=makeChecksumAlgorithm();\n  crc.update(buf,0,buf.length);\n  oa.writeLong(crc.getValue(),\"txnEntryCRC\");\n  Util.writeTxnBytes(oa,buf);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 155,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1248,
        "startLineNumber" : 119,
        "startColumnNumber" : 27,
        "endLineNumber" : 147,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (hdr != null) {\n    if (hdr.getZxid() <= lastZxidSeen) {\n      LOG.warn(\"Current zxid \" + hdr.getZxid() + \" is <= \"+ lastZxidSeen+ \" for \"+ hdr.getType());\n    }\n    if (logStream == null) {\n      logFileWrite=new File(logDir,(\"log.\" + Long.toHexString(hdr.getZxid())));\n      logStream=new FileOutputStream(logFileWrite);\n      oa=BinaryOutputArchive.getArchive(logStream);\n      FileHeader fhdr=new FileHeader(TXNLOG_MAGIC,VERSION,dbId);\n      fhdr.serialize(oa,\"fileheader\");\n      currentSize=logStream.getChannel().position();\n      streamsToFlush.add(logStream);\n    }\n    padFile(logStream);\n    byte[] buf=Util.marshallTxnEntry(hdr,txn);\n    if (buf == null || buf.length == 0) {\n      throw new IOException(\"Faulty serialization for header \" + \"and txn\");\n    }\n    Checksum crc=makeChecksumAlgorithm();\n    crc.update(buf,0,buf.length);\n    oa.writeLong(crc.getValue(),\"txnEntryCRC\");\n    Util.writeTxnBytes(oa,buf);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1497,
        "startLineNumber" : 113,
        "startColumnNumber" : 4,
        "endLineNumber" : 147,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * append an entry to the transaction log\n * @param hdr the header of the transaction\n * @param txn the transaction part of the entry\n */\npublic synchronized void append(TxnHeader hdr,Record txn) throws IOException {\n  if (hdr != null) {\n    if (hdr.getZxid() <= lastZxidSeen) {\n      LOG.warn(\"Current zxid \" + hdr.getZxid() + \" is <= \"+ lastZxidSeen+ \" for \"+ hdr.getType());\n    }\n    if (logStream == null) {\n      logFileWrite=new File(logDir,(\"log.\" + Long.toHexString(hdr.getZxid())));\n      logStream=new FileOutputStream(logFileWrite);\n      oa=BinaryOutputArchive.getArchive(logStream);\n      FileHeader fhdr=new FileHeader(TXNLOG_MAGIC,VERSION,dbId);\n      fhdr.serialize(oa,\"fileheader\");\n      currentSize=logStream.getChannel().position();\n      streamsToFlush.add(logStream);\n    }\n    padFile(logStream);\n    byte[] buf=Util.marshallTxnEntry(hdr,txn);\n    if (buf == null || buf.length == 0) {\n      throw new IOException(\"Faulty serialization for header \" + \"and txn\");\n    }\n    Checksum crc=makeChecksumAlgorithm();\n    crc.update(buf,0,buf.length);\n    oa.writeLong(crc.getValue(),\"txnEntryCRC\");\n    Util.writeTxnBytes(oa,buf);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 172,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 132,
        "startColumnNumber" : 15,
        "endLineNumber" : 132,
        "endColumnNumber" : 48
      },
      "nodeContext" : "fhdr.serialize(oa,\"fileheader\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.zookeeper.server.persistence.FileHeader"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 132,
    "startColumnNumber" : 15,
    "endLineNumber" : 132,
    "endColumnNumber" : 19
  } ],
  "layoutRelationDataList" : [ ]
}