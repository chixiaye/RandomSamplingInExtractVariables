{
  "id" : 99,
  "expression" : "0",
  "projectName" : "termux@termux-app",
  "commitID" : "6334470f81bdf003b8567af9e3531cec4dce560d",
  "filePath" : "/app/src/main/java/com/termux/terminal/ByteQueue.java",
  "occurrences" : 7,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 21,
      "startColumnNumber" : 31,
      "endLineNumber" : 21,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 21,
        "startColumnNumber" : 15,
        "endLineNumber" : 21,
        "endColumnNumber" : 32
      },
      "nodeContext" : "mStoredBytes == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 21,
        "startColumnNumber" : 15,
        "endLineNumber" : 21,
        "endColumnNumber" : 41
      },
      "nodeContext" : "mStoredBytes == 0 && mOpen",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 282,
        "startLineNumber" : 21,
        "startColumnNumber" : 8,
        "endLineNumber" : 31,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (mStoredBytes == 0 && mOpen) {\n  if (block) {\n    try {\n      wait();\n    }\n catch (    InterruptedException e) {\n    }\n  }\n else {\n    return 0;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 24,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1067,
        "startLineNumber" : 20,
        "startColumnNumber" : 63,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  while (mStoredBytes == 0 && mOpen) {\n    if (block) {\n      try {\n        wait();\n      }\n catch (      InterruptedException e) {\n      }\n    }\n else {\n      return 0;\n    }\n  }\n  if (!mOpen)   return -1;\n  int totalRead=0;\n  int bufferLength=mBuffer.length;\n  boolean wasFull=bufferLength == mStoredBytes;\n  int length=buffer.length;\n  int offset=0;\n  while (length > 0 && mStoredBytes > 0) {\n    int oneRun=Math.min(bufferLength - mHead,mStoredBytes);\n    int bytesToCopy=Math.min(length,oneRun);\n    System.arraycopy(mBuffer,mHead,buffer,offset,bytesToCopy);\n    mHead+=bytesToCopy;\n    if (mHead >= bufferLength)     mHead=0;\n    mStoredBytes-=bytesToCopy;\n    length-=bytesToCopy;\n    offset+=bytesToCopy;\n    totalRead+=bytesToCopy;\n  }\n  if (wasFull)   notify();\n  return totalRead;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1126,
        "startLineNumber" : 20,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public synchronized int read(byte[] buffer,boolean block){\n  while (mStoredBytes == 0 && mOpen) {\n    if (block) {\n      try {\n        wait();\n      }\n catch (      InterruptedException e) {\n      }\n    }\n else {\n      return 0;\n    }\n  }\n  if (!mOpen)   return -1;\n  int totalRead=0;\n  int bufferLength=mBuffer.length;\n  boolean wasFull=bufferLength == mStoredBytes;\n  int length=buffer.length;\n  int offset=0;\n  while (length > 0 && mStoredBytes > 0) {\n    int oneRun=Math.min(bufferLength - mHead,mStoredBytes);\n    int bytesToCopy=Math.min(length,oneRun);\n    System.arraycopy(mBuffer,mHead,buffer,offset,bytesToCopy);\n    mHead+=bytesToCopy;\n    if (mHead >= bufferLength)     mHead=0;\n    mStoredBytes-=bytesToCopy;\n    length-=bytesToCopy;\n    offset+=bytesToCopy;\n    totalRead+=bytesToCopy;\n  }\n  if (wasFull)   notify();\n  return totalRead;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 148,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 21,
        "startColumnNumber" : 15,
        "endLineNumber" : 21,
        "endColumnNumber" : 41
      },
      "nodeContext" : "mStoredBytes == 0 && mOpen",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 29,
      "startColumnNumber" : 23,
      "endLineNumber" : 29,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 29,
        "startColumnNumber" : 16,
        "endLineNumber" : 29,
        "endColumnNumber" : 25
      },
      "nodeContext" : "return 0;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 28,
        "startColumnNumber" : 19,
        "endLineNumber" : 30,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  return 0;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 3,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 223,
        "startLineNumber" : 22,
        "startColumnNumber" : 12,
        "endLineNumber" : 30,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (block) {\n  try {\n    wait();\n  }\n catch (  InterruptedException e) {\n  }\n}\n else {\n  return 0;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 247,
        "startLineNumber" : 21,
        "startColumnNumber" : 43,
        "endLineNumber" : 31,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (block) {\n    try {\n      wait();\n    }\n catch (    InterruptedException e) {\n    }\n  }\n else {\n    return 0;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 282,
        "startLineNumber" : 21,
        "startColumnNumber" : 8,
        "endLineNumber" : 31,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (mStoredBytes == 0 && mOpen) {\n  if (block) {\n    try {\n      wait();\n    }\n catch (    InterruptedException e) {\n    }\n  }\n else {\n    return 0;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 24,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1067,
        "startLineNumber" : 20,
        "startColumnNumber" : 63,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  while (mStoredBytes == 0 && mOpen) {\n    if (block) {\n      try {\n        wait();\n      }\n catch (      InterruptedException e) {\n      }\n    }\n else {\n      return 0;\n    }\n  }\n  if (!mOpen)   return -1;\n  int totalRead=0;\n  int bufferLength=mBuffer.length;\n  boolean wasFull=bufferLength == mStoredBytes;\n  int length=buffer.length;\n  int offset=0;\n  while (length > 0 && mStoredBytes > 0) {\n    int oneRun=Math.min(bufferLength - mHead,mStoredBytes);\n    int bytesToCopy=Math.min(length,oneRun);\n    System.arraycopy(mBuffer,mHead,buffer,offset,bytesToCopy);\n    mHead+=bytesToCopy;\n    if (mHead >= bufferLength)     mHead=0;\n    mStoredBytes-=bytesToCopy;\n    length-=bytesToCopy;\n    offset+=bytesToCopy;\n    totalRead+=bytesToCopy;\n  }\n  if (wasFull)   notify();\n  return totalRead;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1126,
        "startLineNumber" : 20,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public synchronized int read(byte[] buffer,boolean block){\n  while (mStoredBytes == 0 && mOpen) {\n    if (block) {\n      try {\n        wait();\n      }\n catch (      InterruptedException e) {\n      }\n    }\n else {\n      return 0;\n    }\n  }\n  if (!mOpen)   return -1;\n  int totalRead=0;\n  int bufferLength=mBuffer.length;\n  boolean wasFull=bufferLength == mStoredBytes;\n  int length=buffer.length;\n  int offset=0;\n  while (length > 0 && mStoredBytes > 0) {\n    int oneRun=Math.min(bufferLength - mHead,mStoredBytes);\n    int bytesToCopy=Math.min(length,oneRun);\n    System.arraycopy(mBuffer,mHead,buffer,offset,bytesToCopy);\n    mHead+=bytesToCopy;\n    if (mHead >= bufferLength)     mHead=0;\n    mStoredBytes-=bytesToCopy;\n    length-=bytesToCopy;\n    offset+=bytesToCopy;\n    totalRead+=bytesToCopy;\n  }\n  if (wasFull)   notify();\n  return totalRead;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 148,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 29,
        "startColumnNumber" : 16,
        "endLineNumber" : 29,
        "endColumnNumber" : 25
      },
      "nodeContext" : "return 0;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 34,
      "startColumnNumber" : 24,
      "endLineNumber" : 34,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 34,
        "startColumnNumber" : 12,
        "endLineNumber" : 34,
        "endColumnNumber" : 25
      },
      "nodeContext" : "totalRead=0",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 34,
        "endColumnNumber" : 26
      },
      "nodeContext" : "int totalRead=0;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1067,
        "startLineNumber" : 20,
        "startColumnNumber" : 63,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  while (mStoredBytes == 0 && mOpen) {\n    if (block) {\n      try {\n        wait();\n      }\n catch (      InterruptedException e) {\n      }\n    }\n else {\n      return 0;\n    }\n  }\n  if (!mOpen)   return -1;\n  int totalRead=0;\n  int bufferLength=mBuffer.length;\n  boolean wasFull=bufferLength == mStoredBytes;\n  int length=buffer.length;\n  int offset=0;\n  while (length > 0 && mStoredBytes > 0) {\n    int oneRun=Math.min(bufferLength - mHead,mStoredBytes);\n    int bytesToCopy=Math.min(length,oneRun);\n    System.arraycopy(mBuffer,mHead,buffer,offset,bytesToCopy);\n    mHead+=bytesToCopy;\n    if (mHead >= bufferLength)     mHead=0;\n    mStoredBytes-=bytesToCopy;\n    length-=bytesToCopy;\n    offset+=bytesToCopy;\n    totalRead+=bytesToCopy;\n  }\n  if (wasFull)   notify();\n  return totalRead;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1126,
        "startLineNumber" : 20,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public synchronized int read(byte[] buffer,boolean block){\n  while (mStoredBytes == 0 && mOpen) {\n    if (block) {\n      try {\n        wait();\n      }\n catch (      InterruptedException e) {\n      }\n    }\n else {\n      return 0;\n    }\n  }\n  if (!mOpen)   return -1;\n  int totalRead=0;\n  int bufferLength=mBuffer.length;\n  boolean wasFull=bufferLength == mStoredBytes;\n  int length=buffer.length;\n  int offset=0;\n  while (length > 0 && mStoredBytes > 0) {\n    int oneRun=Math.min(bufferLength - mHead,mStoredBytes);\n    int bytesToCopy=Math.min(length,oneRun);\n    System.arraycopy(mBuffer,mHead,buffer,offset,bytesToCopy);\n    mHead+=bytesToCopy;\n    if (mHead >= bufferLength)     mHead=0;\n    mStoredBytes-=bytesToCopy;\n    length-=bytesToCopy;\n    offset+=bytesToCopy;\n    totalRead+=bytesToCopy;\n  }\n  if (wasFull)   notify();\n  return totalRead;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 148,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 34,
        "endColumnNumber" : 26
      },
      "nodeContext" : "int totalRead=0;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 38,
      "startColumnNumber" : 21,
      "endLineNumber" : 38,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 38,
        "startColumnNumber" : 12,
        "endLineNumber" : 38,
        "endColumnNumber" : 22
      },
      "nodeContext" : "offset=0",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 38,
        "endColumnNumber" : 23
      },
      "nodeContext" : "int offset=0;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1067,
        "startLineNumber" : 20,
        "startColumnNumber" : 63,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  while (mStoredBytes == 0 && mOpen) {\n    if (block) {\n      try {\n        wait();\n      }\n catch (      InterruptedException e) {\n      }\n    }\n else {\n      return 0;\n    }\n  }\n  if (!mOpen)   return -1;\n  int totalRead=0;\n  int bufferLength=mBuffer.length;\n  boolean wasFull=bufferLength == mStoredBytes;\n  int length=buffer.length;\n  int offset=0;\n  while (length > 0 && mStoredBytes > 0) {\n    int oneRun=Math.min(bufferLength - mHead,mStoredBytes);\n    int bytesToCopy=Math.min(length,oneRun);\n    System.arraycopy(mBuffer,mHead,buffer,offset,bytesToCopy);\n    mHead+=bytesToCopy;\n    if (mHead >= bufferLength)     mHead=0;\n    mStoredBytes-=bytesToCopy;\n    length-=bytesToCopy;\n    offset+=bytesToCopy;\n    totalRead+=bytesToCopy;\n  }\n  if (wasFull)   notify();\n  return totalRead;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1126,
        "startLineNumber" : 20,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public synchronized int read(byte[] buffer,boolean block){\n  while (mStoredBytes == 0 && mOpen) {\n    if (block) {\n      try {\n        wait();\n      }\n catch (      InterruptedException e) {\n      }\n    }\n else {\n      return 0;\n    }\n  }\n  if (!mOpen)   return -1;\n  int totalRead=0;\n  int bufferLength=mBuffer.length;\n  boolean wasFull=bufferLength == mStoredBytes;\n  int length=buffer.length;\n  int offset=0;\n  while (length > 0 && mStoredBytes > 0) {\n    int oneRun=Math.min(bufferLength - mHead,mStoredBytes);\n    int bytesToCopy=Math.min(length,oneRun);\n    System.arraycopy(mBuffer,mHead,buffer,offset,bytesToCopy);\n    mHead+=bytesToCopy;\n    if (mHead >= bufferLength)     mHead=0;\n    mStoredBytes-=bytesToCopy;\n    length-=bytesToCopy;\n    offset+=bytesToCopy;\n    totalRead+=bytesToCopy;\n  }\n  if (wasFull)   notify();\n  return totalRead;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 148,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 38,
        "endColumnNumber" : 23
      },
      "nodeContext" : "int offset=0;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 39,
      "startColumnNumber" : 24,
      "endLineNumber" : 39,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 39,
        "startColumnNumber" : 15,
        "endLineNumber" : 39,
        "endColumnNumber" : 25
      },
      "nodeContext" : "length > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 39,
        "startColumnNumber" : 15,
        "endLineNumber" : 39,
        "endColumnNumber" : 45
      },
      "nodeContext" : "length > 0 && mStoredBytes > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 485,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (length > 0 && mStoredBytes > 0) {\n  int oneRun=Math.min(bufferLength - mHead,mStoredBytes);\n  int bytesToCopy=Math.min(length,oneRun);\n  System.arraycopy(mBuffer,mHead,buffer,offset,bytesToCopy);\n  mHead+=bytesToCopy;\n  if (mHead >= bufferLength)   mHead=0;\n  mStoredBytes-=bytesToCopy;\n  length-=bytesToCopy;\n  offset+=bytesToCopy;\n  totalRead+=bytesToCopy;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 66,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1067,
        "startLineNumber" : 20,
        "startColumnNumber" : 63,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  while (mStoredBytes == 0 && mOpen) {\n    if (block) {\n      try {\n        wait();\n      }\n catch (      InterruptedException e) {\n      }\n    }\n else {\n      return 0;\n    }\n  }\n  if (!mOpen)   return -1;\n  int totalRead=0;\n  int bufferLength=mBuffer.length;\n  boolean wasFull=bufferLength == mStoredBytes;\n  int length=buffer.length;\n  int offset=0;\n  while (length > 0 && mStoredBytes > 0) {\n    int oneRun=Math.min(bufferLength - mHead,mStoredBytes);\n    int bytesToCopy=Math.min(length,oneRun);\n    System.arraycopy(mBuffer,mHead,buffer,offset,bytesToCopy);\n    mHead+=bytesToCopy;\n    if (mHead >= bufferLength)     mHead=0;\n    mStoredBytes-=bytesToCopy;\n    length-=bytesToCopy;\n    offset+=bytesToCopy;\n    totalRead+=bytesToCopy;\n  }\n  if (wasFull)   notify();\n  return totalRead;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1126,
        "startLineNumber" : 20,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public synchronized int read(byte[] buffer,boolean block){\n  while (mStoredBytes == 0 && mOpen) {\n    if (block) {\n      try {\n        wait();\n      }\n catch (      InterruptedException e) {\n      }\n    }\n else {\n      return 0;\n    }\n  }\n  if (!mOpen)   return -1;\n  int totalRead=0;\n  int bufferLength=mBuffer.length;\n  boolean wasFull=bufferLength == mStoredBytes;\n  int length=buffer.length;\n  int offset=0;\n  while (length > 0 && mStoredBytes > 0) {\n    int oneRun=Math.min(bufferLength - mHead,mStoredBytes);\n    int bytesToCopy=Math.min(length,oneRun);\n    System.arraycopy(mBuffer,mHead,buffer,offset,bytesToCopy);\n    mHead+=bytesToCopy;\n    if (mHead >= bufferLength)     mHead=0;\n    mStoredBytes-=bytesToCopy;\n    length-=bytesToCopy;\n    offset+=bytesToCopy;\n    totalRead+=bytesToCopy;\n  }\n  if (wasFull)   notify();\n  return totalRead;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 148,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 39,
        "startColumnNumber" : 15,
        "endLineNumber" : 39,
        "endColumnNumber" : 45
      },
      "nodeContext" : "length > 0 && mStoredBytes > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 39,
      "startColumnNumber" : 44,
      "endLineNumber" : 39,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 39,
        "startColumnNumber" : 29,
        "endLineNumber" : 39,
        "endColumnNumber" : 45
      },
      "nodeContext" : "mStoredBytes > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 39,
        "startColumnNumber" : 15,
        "endLineNumber" : 39,
        "endColumnNumber" : 45
      },
      "nodeContext" : "length > 0 && mStoredBytes > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 485,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (length > 0 && mStoredBytes > 0) {\n  int oneRun=Math.min(bufferLength - mHead,mStoredBytes);\n  int bytesToCopy=Math.min(length,oneRun);\n  System.arraycopy(mBuffer,mHead,buffer,offset,bytesToCopy);\n  mHead+=bytesToCopy;\n  if (mHead >= bufferLength)   mHead=0;\n  mStoredBytes-=bytesToCopy;\n  length-=bytesToCopy;\n  offset+=bytesToCopy;\n  totalRead+=bytesToCopy;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 66,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1067,
        "startLineNumber" : 20,
        "startColumnNumber" : 63,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  while (mStoredBytes == 0 && mOpen) {\n    if (block) {\n      try {\n        wait();\n      }\n catch (      InterruptedException e) {\n      }\n    }\n else {\n      return 0;\n    }\n  }\n  if (!mOpen)   return -1;\n  int totalRead=0;\n  int bufferLength=mBuffer.length;\n  boolean wasFull=bufferLength == mStoredBytes;\n  int length=buffer.length;\n  int offset=0;\n  while (length > 0 && mStoredBytes > 0) {\n    int oneRun=Math.min(bufferLength - mHead,mStoredBytes);\n    int bytesToCopy=Math.min(length,oneRun);\n    System.arraycopy(mBuffer,mHead,buffer,offset,bytesToCopy);\n    mHead+=bytesToCopy;\n    if (mHead >= bufferLength)     mHead=0;\n    mStoredBytes-=bytesToCopy;\n    length-=bytesToCopy;\n    offset+=bytesToCopy;\n    totalRead+=bytesToCopy;\n  }\n  if (wasFull)   notify();\n  return totalRead;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1126,
        "startLineNumber" : 20,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public synchronized int read(byte[] buffer,boolean block){\n  while (mStoredBytes == 0 && mOpen) {\n    if (block) {\n      try {\n        wait();\n      }\n catch (      InterruptedException e) {\n      }\n    }\n else {\n      return 0;\n    }\n  }\n  if (!mOpen)   return -1;\n  int totalRead=0;\n  int bufferLength=mBuffer.length;\n  boolean wasFull=bufferLength == mStoredBytes;\n  int length=buffer.length;\n  int offset=0;\n  while (length > 0 && mStoredBytes > 0) {\n    int oneRun=Math.min(bufferLength - mHead,mStoredBytes);\n    int bytesToCopy=Math.min(length,oneRun);\n    System.arraycopy(mBuffer,mHead,buffer,offset,bytesToCopy);\n    mHead+=bytesToCopy;\n    if (mHead >= bufferLength)     mHead=0;\n    mStoredBytes-=bytesToCopy;\n    length-=bytesToCopy;\n    offset+=bytesToCopy;\n    totalRead+=bytesToCopy;\n  }\n  if (wasFull)   notify();\n  return totalRead;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 148,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 39,
        "startColumnNumber" : 15,
        "endLineNumber" : 39,
        "endColumnNumber" : 45
      },
      "nodeContext" : "length > 0 && mStoredBytes > 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 44,
      "startColumnNumber" : 47,
      "endLineNumber" : 44,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 44,
        "startColumnNumber" : 39,
        "endLineNumber" : 44,
        "endColumnNumber" : 48
      },
      "nodeContext" : "mHead=0",
      "nodeType" : "Assignment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 44,
        "startColumnNumber" : 39,
        "endLineNumber" : 44,
        "endColumnNumber" : 49
      },
      "nodeContext" : "mHead=0;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 44,
        "startColumnNumber" : 12,
        "endLineNumber" : 44,
        "endColumnNumber" : 49
      },
      "nodeContext" : "if (mHead >= bufferLength) mHead=0;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 446,
        "startLineNumber" : 39,
        "startColumnNumber" : 47,
        "endLineNumber" : 49,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int oneRun=Math.min(bufferLength - mHead,mStoredBytes);\n  int bytesToCopy=Math.min(length,oneRun);\n  System.arraycopy(mBuffer,mHead,buffer,offset,bytesToCopy);\n  mHead+=bytesToCopy;\n  if (mHead >= bufferLength)   mHead=0;\n  mStoredBytes-=bytesToCopy;\n  length-=bytesToCopy;\n  offset+=bytesToCopy;\n  totalRead+=bytesToCopy;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 485,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (length > 0 && mStoredBytes > 0) {\n  int oneRun=Math.min(bufferLength - mHead,mStoredBytes);\n  int bytesToCopy=Math.min(length,oneRun);\n  System.arraycopy(mBuffer,mHead,buffer,offset,bytesToCopy);\n  mHead+=bytesToCopy;\n  if (mHead >= bufferLength)   mHead=0;\n  mStoredBytes-=bytesToCopy;\n  length-=bytesToCopy;\n  offset+=bytesToCopy;\n  totalRead+=bytesToCopy;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 66,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1067,
        "startLineNumber" : 20,
        "startColumnNumber" : 63,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  while (mStoredBytes == 0 && mOpen) {\n    if (block) {\n      try {\n        wait();\n      }\n catch (      InterruptedException e) {\n      }\n    }\n else {\n      return 0;\n    }\n  }\n  if (!mOpen)   return -1;\n  int totalRead=0;\n  int bufferLength=mBuffer.length;\n  boolean wasFull=bufferLength == mStoredBytes;\n  int length=buffer.length;\n  int offset=0;\n  while (length > 0 && mStoredBytes > 0) {\n    int oneRun=Math.min(bufferLength - mHead,mStoredBytes);\n    int bytesToCopy=Math.min(length,oneRun);\n    System.arraycopy(mBuffer,mHead,buffer,offset,bytesToCopy);\n    mHead+=bytesToCopy;\n    if (mHead >= bufferLength)     mHead=0;\n    mStoredBytes-=bytesToCopy;\n    length-=bytesToCopy;\n    offset+=bytesToCopy;\n    totalRead+=bytesToCopy;\n  }\n  if (wasFull)   notify();\n  return totalRead;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1126,
        "startLineNumber" : 20,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public synchronized int read(byte[] buffer,boolean block){\n  while (mStoredBytes == 0 && mOpen) {\n    if (block) {\n      try {\n        wait();\n      }\n catch (      InterruptedException e) {\n      }\n    }\n else {\n      return 0;\n    }\n  }\n  if (!mOpen)   return -1;\n  int totalRead=0;\n  int bufferLength=mBuffer.length;\n  boolean wasFull=bufferLength == mStoredBytes;\n  int length=buffer.length;\n  int offset=0;\n  while (length > 0 && mStoredBytes > 0) {\n    int oneRun=Math.min(bufferLength - mHead,mStoredBytes);\n    int bytesToCopy=Math.min(length,oneRun);\n    System.arraycopy(mBuffer,mHead,buffer,offset,bytesToCopy);\n    mHead+=bytesToCopy;\n    if (mHead >= bufferLength)     mHead=0;\n    mStoredBytes-=bytesToCopy;\n    length-=bytesToCopy;\n    offset+=bytesToCopy;\n    totalRead+=bytesToCopy;\n  }\n  if (wasFull)   notify();\n  return totalRead;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 148,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 44,
        "startColumnNumber" : 12,
        "endLineNumber" : 44,
        "endColumnNumber" : 49
      },
      "nodeContext" : "if (mHead >= bufferLength) mHead=0;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 21,
    "startColumnNumber" : 31,
    "endLineNumber" : 21,
    "endColumnNumber" : 32
  }, {
    "charLength" : 1,
    "startLineNumber" : 29,
    "startColumnNumber" : 23,
    "endLineNumber" : 29,
    "endColumnNumber" : 24
  }, {
    "charLength" : 1,
    "startLineNumber" : 34,
    "startColumnNumber" : 24,
    "endLineNumber" : 34,
    "endColumnNumber" : 25
  }, {
    "charLength" : 1,
    "startLineNumber" : 38,
    "startColumnNumber" : 21,
    "endLineNumber" : 38,
    "endColumnNumber" : 22
  }, {
    "charLength" : 1,
    "startLineNumber" : 39,
    "startColumnNumber" : 24,
    "endLineNumber" : 39,
    "endColumnNumber" : 25
  }, {
    "charLength" : 1,
    "startLineNumber" : 39,
    "startColumnNumber" : 44,
    "endLineNumber" : 39,
    "endColumnNumber" : 45
  }, {
    "charLength" : 1,
    "startLineNumber" : 44,
    "startColumnNumber" : 47,
    "endLineNumber" : 44,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 4
  } ]
}