{
  "id" : 219,
  "expression" : "ScatterShape.TRIANGLE",
  "projectName" : "PhilJay@MPAndroidChart",
  "commitID" : "43046425fc2ed73d0d3f177759706116e02a9053",
  "filePath" : "/MPChartLib/src/com/github/mikephil/charting/renderer/ScatterChartRenderer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ScatterShape.TRIANGLE",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 88,
      "startColumnNumber" : 32,
      "endLineNumber" : 88,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 88,
        "startColumnNumber" : 23,
        "endLineNumber" : 88,
        "endColumnNumber" : 53
      },
      "nodeContext" : "shape == ScatterShape.TRIANGLE",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 820,
        "startLineNumber" : 88,
        "startColumnNumber" : 19,
        "endLineNumber" : 109,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (shape == ScatterShape.TRIANGLE) {\n  Path tri=new Path();\n  tri.moveTo(valuePoints[j],valuePoints[j + 1] - shapeHalf);\n  tri.lineTo(valuePoints[j] + shapeHalf,valuePoints[j + 1] + shapeHalf);\n  tri.lineTo(valuePoints[j] - shapeHalf,valuePoints[j + 1] + shapeHalf);\n  tri.close();\n  c.drawPath(tri,mRenderPaint);\n}\n else if (shape == ScatterShape.CUSTOM) {\n  Path customShape=dataSet.getCustomScatterShape();\n  if (customShape == null)   return;\n  trans.pathValueToPixel(customShape);\n  c.drawPath(customShape,mRenderPaint);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 102,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1256,
        "startLineNumber" : 79,
        "startColumnNumber" : 19,
        "endLineNumber" : 109,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (shape == ScatterShape.CROSS) {\n  c.drawLine(valuePoints[j] - shapeHalf,valuePoints[j + 1],valuePoints[j] + shapeHalf,valuePoints[j + 1],mRenderPaint);\n  c.drawLine(valuePoints[j],valuePoints[j + 1] - shapeHalf,valuePoints[j],valuePoints[j + 1] + shapeHalf,mRenderPaint);\n}\n else if (shape == ScatterShape.TRIANGLE) {\n  Path tri=new Path();\n  tri.moveTo(valuePoints[j],valuePoints[j + 1] - shapeHalf);\n  tri.lineTo(valuePoints[j] + shapeHalf,valuePoints[j + 1] + shapeHalf);\n  tri.lineTo(valuePoints[j] - shapeHalf,valuePoints[j + 1] + shapeHalf);\n  tri.close();\n  c.drawPath(tri,mRenderPaint);\n}\n else if (shape == ScatterShape.CUSTOM) {\n  Path customShape=dataSet.getCustomScatterShape();\n  if (customShape == null)   return;\n  trans.pathValueToPixel(customShape);\n  c.drawPath(customShape,mRenderPaint);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 159,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1428,
        "startLineNumber" : 74,
        "startColumnNumber" : 19,
        "endLineNumber" : 109,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (shape == ScatterShape.CIRCLE) {\n  c.drawCircle(valuePoints[j],valuePoints[j + 1],shapeHalf,mRenderPaint);\n}\n else if (shape == ScatterShape.CROSS) {\n  c.drawLine(valuePoints[j] - shapeHalf,valuePoints[j + 1],valuePoints[j] + shapeHalf,valuePoints[j + 1],mRenderPaint);\n  c.drawLine(valuePoints[j],valuePoints[j + 1] - shapeHalf,valuePoints[j],valuePoints[j + 1] + shapeHalf,mRenderPaint);\n}\n else if (shape == ScatterShape.TRIANGLE) {\n  Path tri=new Path();\n  tri.moveTo(valuePoints[j],valuePoints[j + 1] - shapeHalf);\n  tri.lineTo(valuePoints[j] + shapeHalf,valuePoints[j + 1] + shapeHalf);\n  tri.lineTo(valuePoints[j] - shapeHalf,valuePoints[j + 1] + shapeHalf);\n  tri.close();\n  c.drawPath(tri,mRenderPaint);\n}\n else if (shape == ScatterShape.CUSTOM) {\n  Path customShape=dataSet.getCustomScatterShape();\n  if (customShape == null)   return;\n  trans.pathValueToPixel(customShape);\n  c.drawPath(customShape,mRenderPaint);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 180,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1735,
        "startLineNumber" : 67,
        "startColumnNumber" : 12,
        "endLineNumber" : 109,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (shape == ScatterShape.SQUARE) {\n  c.drawRect(valuePoints[j] - shapeHalf,valuePoints[j + 1] - shapeHalf,valuePoints[j] + shapeHalf,valuePoints[j + 1] + shapeHalf,mRenderPaint);\n}\n else if (shape == ScatterShape.CIRCLE) {\n  c.drawCircle(valuePoints[j],valuePoints[j + 1],shapeHalf,mRenderPaint);\n}\n else if (shape == ScatterShape.CROSS) {\n  c.drawLine(valuePoints[j] - shapeHalf,valuePoints[j + 1],valuePoints[j] + shapeHalf,valuePoints[j + 1],mRenderPaint);\n  c.drawLine(valuePoints[j],valuePoints[j + 1] - shapeHalf,valuePoints[j],valuePoints[j + 1] + shapeHalf,mRenderPaint);\n}\n else if (shape == ScatterShape.TRIANGLE) {\n  Path tri=new Path();\n  tri.moveTo(valuePoints[j],valuePoints[j + 1] - shapeHalf);\n  tri.lineTo(valuePoints[j] + shapeHalf,valuePoints[j + 1] + shapeHalf);\n  tri.lineTo(valuePoints[j] - shapeHalf,valuePoints[j + 1] + shapeHalf);\n  tri.close();\n  c.drawPath(tri,mRenderPaint);\n}\n else if (shape == ScatterShape.CUSTOM) {\n  Path customShape=dataSet.getCustomScatterShape();\n  if (customShape == null)   return;\n  trans.pathValueToPixel(customShape);\n  c.drawPath(customShape,mRenderPaint);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 216,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 2281,
        "startLineNumber" : 53,
        "startColumnNumber" : 80,
        "endLineNumber" : 110,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))   break;\n  if (j != 0 && !mViewPortHandler.isInBoundsLeft(valuePoints[j - 1]) && !mViewPortHandler.isInBoundsY(valuePoints[j + 1]))   continue;\n  mRenderPaint.setColor(dataSet.getColor(j));\n  if (shape == ScatterShape.SQUARE) {\n    c.drawRect(valuePoints[j] - shapeHalf,valuePoints[j + 1] - shapeHalf,valuePoints[j] + shapeHalf,valuePoints[j + 1] + shapeHalf,mRenderPaint);\n  }\n else   if (shape == ScatterShape.CIRCLE) {\n    c.drawCircle(valuePoints[j],valuePoints[j + 1],shapeHalf,mRenderPaint);\n  }\n else   if (shape == ScatterShape.CROSS) {\n    c.drawLine(valuePoints[j] - shapeHalf,valuePoints[j + 1],valuePoints[j] + shapeHalf,valuePoints[j + 1],mRenderPaint);\n    c.drawLine(valuePoints[j],valuePoints[j + 1] - shapeHalf,valuePoints[j],valuePoints[j + 1] + shapeHalf,mRenderPaint);\n  }\n else   if (shape == ScatterShape.TRIANGLE) {\n    Path tri=new Path();\n    tri.moveTo(valuePoints[j],valuePoints[j + 1] - shapeHalf);\n    tri.lineTo(valuePoints[j] + shapeHalf,valuePoints[j + 1] + shapeHalf);\n    tri.lineTo(valuePoints[j] - shapeHalf,valuePoints[j + 1] + shapeHalf);\n    tri.close();\n    c.drawPath(tri,mRenderPaint);\n  }\n else   if (shape == ScatterShape.CUSTOM) {\n    Path customShape=dataSet.getCustomScatterShape();\n    if (customShape == null)     return;\n    trans.pathValueToPixel(customShape);\n    c.drawPath(customShape,mRenderPaint);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 259,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2353,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n  if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))   break;\n  if (j != 0 && !mViewPortHandler.isInBoundsLeft(valuePoints[j - 1]) && !mViewPortHandler.isInBoundsY(valuePoints[j + 1]))   continue;\n  mRenderPaint.setColor(dataSet.getColor(j));\n  if (shape == ScatterShape.SQUARE) {\n    c.drawRect(valuePoints[j] - shapeHalf,valuePoints[j + 1] - shapeHalf,valuePoints[j] + shapeHalf,valuePoints[j + 1] + shapeHalf,mRenderPaint);\n  }\n else   if (shape == ScatterShape.CIRCLE) {\n    c.drawCircle(valuePoints[j],valuePoints[j + 1],shapeHalf,mRenderPaint);\n  }\n else   if (shape == ScatterShape.CROSS) {\n    c.drawLine(valuePoints[j] - shapeHalf,valuePoints[j + 1],valuePoints[j] + shapeHalf,valuePoints[j + 1],mRenderPaint);\n    c.drawLine(valuePoints[j],valuePoints[j + 1] - shapeHalf,valuePoints[j],valuePoints[j + 1] + shapeHalf,mRenderPaint);\n  }\n else   if (shape == ScatterShape.TRIANGLE) {\n    Path tri=new Path();\n    tri.moveTo(valuePoints[j],valuePoints[j + 1] - shapeHalf);\n    tri.lineTo(valuePoints[j] + shapeHalf,valuePoints[j + 1] + shapeHalf);\n    tri.lineTo(valuePoints[j] - shapeHalf,valuePoints[j + 1] + shapeHalf);\n    tri.close();\n    c.drawPath(tri,mRenderPaint);\n  }\n else   if (shape == ScatterShape.CUSTOM) {\n    Path customShape=dataSet.getCustomScatterShape();\n    if (customShape == null)     return;\n    trans.pathValueToPixel(customShape);\n    c.drawPath(customShape,mRenderPaint);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 277,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2746,
        "startLineNumber" : 40,
        "startColumnNumber" : 65,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ArrayList<Entry> entries=dataSet.getYVals();\n  float shapeHalf=dataSet.getScatterShapeSize() / 2f;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  float[] valuePoints=trans.generateTransformedValuesScatter(entries,mAnimator.getPhaseY());\n  ScatterShape shape=dataSet.getScatterShape();\n  for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (j != 0 && !mViewPortHandler.isInBoundsLeft(valuePoints[j - 1]) && !mViewPortHandler.isInBoundsY(valuePoints[j + 1]))     continue;\n    mRenderPaint.setColor(dataSet.getColor(j));\n    if (shape == ScatterShape.SQUARE) {\n      c.drawRect(valuePoints[j] - shapeHalf,valuePoints[j + 1] - shapeHalf,valuePoints[j] + shapeHalf,valuePoints[j + 1] + shapeHalf,mRenderPaint);\n    }\n else     if (shape == ScatterShape.CIRCLE) {\n      c.drawCircle(valuePoints[j],valuePoints[j + 1],shapeHalf,mRenderPaint);\n    }\n else     if (shape == ScatterShape.CROSS) {\n      c.drawLine(valuePoints[j] - shapeHalf,valuePoints[j + 1],valuePoints[j] + shapeHalf,valuePoints[j + 1],mRenderPaint);\n      c.drawLine(valuePoints[j],valuePoints[j + 1] - shapeHalf,valuePoints[j],valuePoints[j + 1] + shapeHalf,mRenderPaint);\n    }\n else     if (shape == ScatterShape.TRIANGLE) {\n      Path tri=new Path();\n      tri.moveTo(valuePoints[j],valuePoints[j + 1] - shapeHalf);\n      tri.lineTo(valuePoints[j] + shapeHalf,valuePoints[j + 1] + shapeHalf);\n      tri.lineTo(valuePoints[j] - shapeHalf,valuePoints[j + 1] + shapeHalf);\n      tri.close();\n      c.drawPath(tri,mRenderPaint);\n    }\n else     if (shape == ScatterShape.CUSTOM) {\n      Path customShape=dataSet.getCustomScatterShape();\n      if (customShape == null)       return;\n      trans.pathValueToPixel(customShape);\n      c.drawPath(customShape,mRenderPaint);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 330,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2807,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected void drawDataSet(Canvas c,ScatterDataSet dataSet){\n  ArrayList<Entry> entries=dataSet.getYVals();\n  float shapeHalf=dataSet.getScatterShapeSize() / 2f;\n  Transformer trans=mChart.getTransformer(dataSet.getAxisDependency());\n  float[] valuePoints=trans.generateTransformedValuesScatter(entries,mAnimator.getPhaseY());\n  ScatterShape shape=dataSet.getScatterShape();\n  for (int j=0; j < valuePoints.length * mAnimator.getPhaseX(); j+=2) {\n    if (!mViewPortHandler.isInBoundsRight(valuePoints[j]))     break;\n    if (j != 0 && !mViewPortHandler.isInBoundsLeft(valuePoints[j - 1]) && !mViewPortHandler.isInBoundsY(valuePoints[j + 1]))     continue;\n    mRenderPaint.setColor(dataSet.getColor(j));\n    if (shape == ScatterShape.SQUARE) {\n      c.drawRect(valuePoints[j] - shapeHalf,valuePoints[j + 1] - shapeHalf,valuePoints[j] + shapeHalf,valuePoints[j + 1] + shapeHalf,mRenderPaint);\n    }\n else     if (shape == ScatterShape.CIRCLE) {\n      c.drawCircle(valuePoints[j],valuePoints[j + 1],shapeHalf,mRenderPaint);\n    }\n else     if (shape == ScatterShape.CROSS) {\n      c.drawLine(valuePoints[j] - shapeHalf,valuePoints[j + 1],valuePoints[j] + shapeHalf,valuePoints[j + 1],mRenderPaint);\n      c.drawLine(valuePoints[j],valuePoints[j + 1] - shapeHalf,valuePoints[j],valuePoints[j + 1] + shapeHalf,mRenderPaint);\n    }\n else     if (shape == ScatterShape.TRIANGLE) {\n      Path tri=new Path();\n      tri.moveTo(valuePoints[j],valuePoints[j + 1] - shapeHalf);\n      tri.lineTo(valuePoints[j] + shapeHalf,valuePoints[j + 1] + shapeHalf);\n      tri.lineTo(valuePoints[j] - shapeHalf,valuePoints[j + 1] + shapeHalf);\n      tri.close();\n      c.drawPath(tri,mRenderPaint);\n    }\n else     if (shape == ScatterShape.CUSTOM) {\n      Path customShape=dataSet.getCustomScatterShape();\n      if (customShape == null)       return;\n      trans.pathValueToPixel(customShape);\n      c.drawPath(customShape,mRenderPaint);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 342,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 88,
        "startColumnNumber" : 23,
        "endLineNumber" : 88,
        "endColumnNumber" : 53
      },
      "nodeContext" : "shape == ScatterShape.TRIANGLE",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "com.github.mikephil.charting.charts.ScatterChart.ScatterShape"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 88,
    "startColumnNumber" : 32,
    "endLineNumber" : 88,
    "endColumnNumber" : 53
  } ],
  "layoutRelationDataList" : [ ]
}