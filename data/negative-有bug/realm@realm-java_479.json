{
  "id" : 479,
  "expression" : "realm",
  "projectName" : "realm@realm-java",
  "commitID" : "9da3b229a46407f73e2003fb40857cadf062086b",
  "filePath" : "/realm/realm-library/src/main/java/io/realm/ProxyUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "realm",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 199,
      "startColumnNumber" : 59,
      "endLineNumber" : 199,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 199,
        "startColumnNumber" : 28,
        "endLineNumber" : 199,
        "endColumnNumber" : 107
      },
      "nodeContext" : "ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 199,
        "startColumnNumber" : 20,
        "endLineNumber" : 199,
        "endColumnNumber" : 107
      },
      "nodeContext" : "mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 199,
        "startColumnNumber" : 20,
        "endLineNumber" : 199,
        "endColumnNumber" : 108
      },
      "nodeContext" : "mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 180,
        "startLineNumber" : 197,
        "startColumnNumber" : 51,
        "endLineNumber" : 200,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  mixed=(io.realm.Mixed)value;\n  mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 29,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 367,
        "startLineNumber" : 197,
        "startColumnNumber" : 23,
        "endLineNumber" : 202,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (value instanceof Mixed) {\n  mixed=(io.realm.Mixed)value;\n  mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n}\n else {\n  throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 48,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 482,
        "startLineNumber" : 195,
        "startColumnNumber" : 23,
        "endLineNumber" : 202,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (value instanceof Boolean) {\n  mixed=Mixed.valueOf((Boolean)value);\n}\n else if (value instanceof Mixed) {\n  mixed=(io.realm.Mixed)value;\n  mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n}\n else {\n  throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 64,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 595,
        "startLineNumber" : 193,
        "startColumnNumber" : 23,
        "endLineNumber" : 202,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (value instanceof Double) {\n  mixed=Mixed.valueOf((Double)value);\n}\n else if (value instanceof Boolean) {\n  mixed=Mixed.valueOf((Boolean)value);\n}\n else if (value instanceof Mixed) {\n  mixed=(io.realm.Mixed)value;\n  mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n}\n else {\n  throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 80,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 704,
        "startLineNumber" : 191,
        "startColumnNumber" : 23,
        "endLineNumber" : 202,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (value instanceof Long) {\n  mixed=Mixed.valueOf((Long)value);\n}\n else if (value instanceof Double) {\n  mixed=Mixed.valueOf((Double)value);\n}\n else if (value instanceof Boolean) {\n  mixed=Mixed.valueOf((Boolean)value);\n}\n else if (value instanceof Mixed) {\n  mixed=(io.realm.Mixed)value;\n  mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n}\n else {\n  throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 96,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 819,
        "startLineNumber" : 189,
        "startColumnNumber" : 23,
        "endLineNumber" : 202,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (value instanceof Integer) {\n  mixed=Mixed.valueOf((Integer)value);\n}\n else if (value instanceof Long) {\n  mixed=Mixed.valueOf((Long)value);\n}\n else if (value instanceof Double) {\n  mixed=Mixed.valueOf((Double)value);\n}\n else if (value instanceof Boolean) {\n  mixed=Mixed.valueOf((Boolean)value);\n}\n else if (value instanceof Mixed) {\n  mixed=(io.realm.Mixed)value;\n  mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n}\n else {\n  throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 112,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 932,
        "startLineNumber" : 187,
        "startColumnNumber" : 16,
        "endLineNumber" : 202,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (value instanceof String) {\n  mixed=Mixed.valueOf((String)value);\n}\n else if (value instanceof Integer) {\n  mixed=Mixed.valueOf((Integer)value);\n}\n else if (value instanceof Long) {\n  mixed=Mixed.valueOf((Long)value);\n}\n else if (value instanceof Double) {\n  mixed=Mixed.valueOf((Double)value);\n}\n else if (value instanceof Boolean) {\n  mixed=Mixed.valueOf((Boolean)value);\n}\n else if (value instanceof Mixed) {\n  mixed=(io.realm.Mixed)value;\n  mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n}\n else {\n  throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 128,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1227,
        "startLineNumber" : 179,
        "startColumnNumber" : 48,
        "endLineNumber" : 204,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (jsonArray.isNull(i)) {\n    osList.addNull();\n    continue;\n  }\n  Object value=jsonArray.get(i);\n  Mixed mixed;\n  if (value instanceof String) {\n    mixed=Mixed.valueOf((String)value);\n  }\n else   if (value instanceof Integer) {\n    mixed=Mixed.valueOf((Integer)value);\n  }\n else   if (value instanceof Long) {\n    mixed=Mixed.valueOf((Long)value);\n  }\n else   if (value instanceof Double) {\n    mixed=Mixed.valueOf((Double)value);\n  }\n else   if (value instanceof Boolean) {\n    mixed=Mixed.valueOf((Boolean)value);\n  }\n else   if (value instanceof Mixed) {\n    mixed=(io.realm.Mixed)value;\n    mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n  }\n else {\n    throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n  }\n  osList.addMixed(mixed.getNativePtr());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 161,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1263,
        "startLineNumber" : 179,
        "startColumnNumber" : 12,
        "endLineNumber" : 204,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int i=0; i < arraySize; i++) {\n  if (jsonArray.isNull(i)) {\n    osList.addNull();\n    continue;\n  }\n  Object value=jsonArray.get(i);\n  Mixed mixed;\n  if (value instanceof String) {\n    mixed=Mixed.valueOf((String)value);\n  }\n else   if (value instanceof Integer) {\n    mixed=Mixed.valueOf((Integer)value);\n  }\n else   if (value instanceof Long) {\n    mixed=Mixed.valueOf((Long)value);\n  }\n else   if (value instanceof Double) {\n    mixed=Mixed.valueOf((Double)value);\n  }\n else   if (value instanceof Boolean) {\n    mixed=Mixed.valueOf((Boolean)value);\n  }\n else   if (value instanceof Mixed) {\n    mixed=(io.realm.Mixed)value;\n    mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n  }\n else {\n    throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n  }\n  osList.addMixed(mixed.getNativePtr());\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 172,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1287,
        "startLineNumber" : 178,
        "startColumnNumber" : 51,
        "endLineNumber" : 205,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 173,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1809,
        "startLineNumber" : 178,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 252,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2336,
        "startLineNumber" : 164,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 331,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3514,
        "startLineNumber" : 141,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 509,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4019,
        "startLineNumber" : 127,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == ObjectId.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object id=jsonArray.get(i);\n    if (id instanceof String) {\n      osList.addObjectId(new ObjectId((String)id));\n    }\n else {\n      osList.addObjectId((ObjectId)id);\n    }\n  }\n}\n else if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 576,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4560,
        "startLineNumber" : 113,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == Date.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object timestamp=jsonArray.get(i);\n    if (timestamp instanceof String) {\n      osList.addDate(JsonUtils.stringToDate((String)timestamp));\n    }\n else {\n      osList.addDate(new Date(jsonArray.getLong(i)));\n    }\n  }\n}\n else if (realmList.clazz == ObjectId.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object id=jsonArray.get(i);\n    if (id instanceof String) {\n      osList.addObjectId(new ObjectId((String)id));\n    }\n else {\n      osList.addObjectId((ObjectId)id);\n    }\n  }\n}\n else if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 646,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 4889,
        "startLineNumber" : 105,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == byte[].class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addBinary(JsonUtils.stringToBytes(jsonArray.getString(i)));\n    }\n  }\n}\n else if (realmList.clazz == Date.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object timestamp=jsonArray.get(i);\n    if (timestamp instanceof String) {\n      osList.addDate(JsonUtils.stringToDate((String)timestamp));\n    }\n else {\n      osList.addDate(new Date(jsonArray.getLong(i)));\n    }\n  }\n}\n else if (realmList.clazz == ObjectId.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object id=jsonArray.get(i);\n    if (id instanceof String) {\n      osList.addObjectId(new ObjectId((String)id));\n    }\n else {\n      osList.addObjectId((ObjectId)id);\n    }\n  }\n}\n else if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 690,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5193,
        "startLineNumber" : 97,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == String.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addString(jsonArray.getString(i));\n    }\n  }\n}\n else if (realmList.clazz == byte[].class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addBinary(JsonUtils.stringToBytes(jsonArray.getString(i)));\n    }\n  }\n}\n else if (realmList.clazz == Date.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object timestamp=jsonArray.get(i);\n    if (timestamp instanceof String) {\n      osList.addDate(JsonUtils.stringToDate((String)timestamp));\n    }\n else {\n      osList.addDate(new Date(jsonArray.getLong(i)));\n    }\n  }\n}\n else if (realmList.clazz == ObjectId.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object id=jsonArray.get(i);\n    if (id instanceof String) {\n      osList.addObjectId(new ObjectId((String)id));\n    }\n else {\n      osList.addObjectId((ObjectId)id);\n    }\n  }\n}\n else if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 730,
      "astHeight" : 24
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5497,
        "startLineNumber" : 89,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == Double.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addDouble(jsonArray.getDouble(i));\n    }\n  }\n}\n else if (realmList.clazz == String.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addString(jsonArray.getString(i));\n    }\n  }\n}\n else if (realmList.clazz == byte[].class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addBinary(JsonUtils.stringToBytes(jsonArray.getString(i)));\n    }\n  }\n}\n else if (realmList.clazz == Date.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object timestamp=jsonArray.get(i);\n    if (timestamp instanceof String) {\n      osList.addDate(JsonUtils.stringToDate((String)timestamp));\n    }\n else {\n      osList.addDate(new Date(jsonArray.getLong(i)));\n    }\n  }\n}\n else if (realmList.clazz == ObjectId.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object id=jsonArray.get(i);\n    if (id instanceof String) {\n      osList.addObjectId(new ObjectId((String)id));\n    }\n else {\n      osList.addObjectId((ObjectId)id);\n    }\n  }\n}\n else if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 770,
      "astHeight" : 25
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5807,
        "startLineNumber" : 81,
        "startColumnNumber" : 15,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == Float.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addFloat((float)jsonArray.getDouble(i));\n    }\n  }\n}\n else if (realmList.clazz == Double.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addDouble(jsonArray.getDouble(i));\n    }\n  }\n}\n else if (realmList.clazz == String.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addString(jsonArray.getString(i));\n    }\n  }\n}\n else if (realmList.clazz == byte[].class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addBinary(JsonUtils.stringToBytes(jsonArray.getString(i)));\n    }\n  }\n}\n else if (realmList.clazz == Date.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object timestamp=jsonArray.get(i);\n    if (timestamp instanceof String) {\n      osList.addDate(JsonUtils.stringToDate((String)timestamp));\n    }\n else {\n      osList.addDate(new Date(jsonArray.getLong(i)));\n    }\n  }\n}\n else if (realmList.clazz == ObjectId.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object id=jsonArray.get(i);\n    if (id instanceof String) {\n      osList.addObjectId(new ObjectId((String)id));\n    }\n else {\n      osList.addObjectId((ObjectId)id);\n    }\n  }\n}\n else if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 812,
      "astHeight" : 26
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 6114,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 216,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (realmList.clazz == Boolean.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addBoolean(jsonArray.getBoolean(i));\n    }\n  }\n}\n else if (realmList.clazz == Float.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addFloat((float)jsonArray.getDouble(i));\n    }\n  }\n}\n else if (realmList.clazz == Double.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addDouble(jsonArray.getDouble(i));\n    }\n  }\n}\n else if (realmList.clazz == String.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addString(jsonArray.getString(i));\n    }\n  }\n}\n else if (realmList.clazz == byte[].class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addBinary(JsonUtils.stringToBytes(jsonArray.getString(i)));\n    }\n  }\n}\n else if (realmList.clazz == Date.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object timestamp=jsonArray.get(i);\n    if (timestamp instanceof String) {\n      osList.addDate(JsonUtils.stringToDate((String)timestamp));\n    }\n else {\n      osList.addDate(new Date(jsonArray.getLong(i)));\n    }\n  }\n}\n else if (realmList.clazz == ObjectId.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object id=jsonArray.get(i);\n    if (id instanceof String) {\n      osList.addObjectId(new ObjectId((String)id));\n    }\n else {\n      osList.addObjectId((ObjectId)id);\n    }\n  }\n}\n else if (realmList.clazz == Decimal128.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object decimal=jsonArray.get(i);\n    if (decimal instanceof org.bson.types.Decimal128) {\n      osList.addDecimal128((org.bson.types.Decimal128)decimal);\n    }\n else     if (decimal instanceof String) {\n      osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n    }\n else     if (decimal instanceof Integer) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n    }\n else     if (decimal instanceof Long) {\n      osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n    }\n else     if (decimal instanceof Double) {\n      osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n    }\n else {\n      osList.addDecimal128((Decimal128)decimal);\n    }\n  }\n}\n else if (realmList.clazz == UUID.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object uuid=jsonArray.get(i);\n    if (uuid instanceof java.util.UUID) {\n      osList.addUUID((java.util.UUID)uuid);\n    }\n else {\n      osList.addUUID(java.util.UUID.fromString((String)uuid));\n    }\n  }\n}\n else if (realmList.clazz == Mixed.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n      continue;\n    }\n    Object value=jsonArray.get(i);\n    Mixed mixed;\n    if (value instanceof String) {\n      mixed=Mixed.valueOf((String)value);\n    }\n else     if (value instanceof Integer) {\n      mixed=Mixed.valueOf((Integer)value);\n    }\n else     if (value instanceof Long) {\n      mixed=Mixed.valueOf((Long)value);\n    }\n else     if (value instanceof Double) {\n      mixed=Mixed.valueOf((Double)value);\n    }\n else     if (value instanceof Boolean) {\n      mixed=Mixed.valueOf((Boolean)value);\n    }\n else     if (value instanceof Mixed) {\n      mixed=(io.realm.Mixed)value;\n      mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n    }\n else {\n      throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n    }\n    osList.addMixed(mixed.getNativePtr());\n  }\n}\n else if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n  for (int i=0; i < arraySize; i++) {\n    if (jsonArray.isNull(i)) {\n      osList.addNull();\n    }\n else {\n      osList.addLong(jsonArray.getLong(i));\n    }\n  }\n}\n else {\n  throwWrongElementType(realmList.clazz);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 852,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 6496,
        "startLineNumber" : 58,
        "startColumnNumber" : 114,
        "endLineNumber" : 217,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!jsonObject.has(fieldName)) {\n    return;\n  }\n  OsList osList=realmList.getOsList();\n  if (jsonObject.isNull(fieldName)) {\n    osList.removeAll();\n    return;\n  }\n  JSONArray jsonArray=jsonObject.getJSONArray(fieldName);\n  osList.removeAll();\n  int arraySize=jsonArray.length();\n  if (realmList.clazz == Boolean.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addBoolean(jsonArray.getBoolean(i));\n      }\n    }\n  }\n else   if (realmList.clazz == Float.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addFloat((float)jsonArray.getDouble(i));\n      }\n    }\n  }\n else   if (realmList.clazz == Double.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addDouble(jsonArray.getDouble(i));\n      }\n    }\n  }\n else   if (realmList.clazz == String.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addString(jsonArray.getString(i));\n      }\n    }\n  }\n else   if (realmList.clazz == byte[].class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addBinary(JsonUtils.stringToBytes(jsonArray.getString(i)));\n      }\n    }\n  }\n else   if (realmList.clazz == Date.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object timestamp=jsonArray.get(i);\n      if (timestamp instanceof String) {\n        osList.addDate(JsonUtils.stringToDate((String)timestamp));\n      }\n else {\n        osList.addDate(new Date(jsonArray.getLong(i)));\n      }\n    }\n  }\n else   if (realmList.clazz == ObjectId.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object id=jsonArray.get(i);\n      if (id instanceof String) {\n        osList.addObjectId(new ObjectId((String)id));\n      }\n else {\n        osList.addObjectId((ObjectId)id);\n      }\n    }\n  }\n else   if (realmList.clazz == Decimal128.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object decimal=jsonArray.get(i);\n      if (decimal instanceof org.bson.types.Decimal128) {\n        osList.addDecimal128((org.bson.types.Decimal128)decimal);\n      }\n else       if (decimal instanceof String) {\n        osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n      }\n else       if (decimal instanceof Integer) {\n        osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n      }\n else       if (decimal instanceof Long) {\n        osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n      }\n else       if (decimal instanceof Double) {\n        osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n      }\n else {\n        osList.addDecimal128((Decimal128)decimal);\n      }\n    }\n  }\n else   if (realmList.clazz == UUID.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object uuid=jsonArray.get(i);\n      if (uuid instanceof java.util.UUID) {\n        osList.addUUID((java.util.UUID)uuid);\n      }\n else {\n        osList.addUUID(java.util.UUID.fromString((String)uuid));\n      }\n    }\n  }\n else   if (realmList.clazz == Mixed.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object value=jsonArray.get(i);\n      Mixed mixed;\n      if (value instanceof String) {\n        mixed=Mixed.valueOf((String)value);\n      }\n else       if (value instanceof Integer) {\n        mixed=Mixed.valueOf((Integer)value);\n      }\n else       if (value instanceof Long) {\n        mixed=Mixed.valueOf((Long)value);\n      }\n else       if (value instanceof Double) {\n        mixed=Mixed.valueOf((Double)value);\n      }\n else       if (value instanceof Boolean) {\n        mixed=Mixed.valueOf((Boolean)value);\n      }\n else       if (value instanceof Mixed) {\n        mixed=(io.realm.Mixed)value;\n        mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n      }\n else {\n        throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n      }\n      osList.addMixed(mixed.getNativePtr());\n    }\n  }\n else   if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addLong(jsonArray.getLong(i));\n      }\n    }\n  }\n else {\n    throwWrongElementType(realmList.clazz);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 900,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7124,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 217,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Called by proxy to set the managed  {@link RealmList} according to the given {@link JSONObject}.\n * @param realmList  the managed {@link RealmList}.\n * @param jsonObject the {@link JSONObject} which may contain the data of the list to be set.\n * @param fieldName  the field name of the {@link RealmList}.\n * @param < E >        type of the {@link RealmList}.\n * @throws JSONException if it fails to parse JSON.\n */\nstatic <E>void setRealmListWithJsonObject(Realm realm,RealmList<E> realmList,JSONObject jsonObject,String fieldName,boolean update) throws JSONException {\n  if (!jsonObject.has(fieldName)) {\n    return;\n  }\n  OsList osList=realmList.getOsList();\n  if (jsonObject.isNull(fieldName)) {\n    osList.removeAll();\n    return;\n  }\n  JSONArray jsonArray=jsonObject.getJSONArray(fieldName);\n  osList.removeAll();\n  int arraySize=jsonArray.length();\n  if (realmList.clazz == Boolean.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addBoolean(jsonArray.getBoolean(i));\n      }\n    }\n  }\n else   if (realmList.clazz == Float.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addFloat((float)jsonArray.getDouble(i));\n      }\n    }\n  }\n else   if (realmList.clazz == Double.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addDouble(jsonArray.getDouble(i));\n      }\n    }\n  }\n else   if (realmList.clazz == String.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addString(jsonArray.getString(i));\n      }\n    }\n  }\n else   if (realmList.clazz == byte[].class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addBinary(JsonUtils.stringToBytes(jsonArray.getString(i)));\n      }\n    }\n  }\n else   if (realmList.clazz == Date.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object timestamp=jsonArray.get(i);\n      if (timestamp instanceof String) {\n        osList.addDate(JsonUtils.stringToDate((String)timestamp));\n      }\n else {\n        osList.addDate(new Date(jsonArray.getLong(i)));\n      }\n    }\n  }\n else   if (realmList.clazz == ObjectId.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object id=jsonArray.get(i);\n      if (id instanceof String) {\n        osList.addObjectId(new ObjectId((String)id));\n      }\n else {\n        osList.addObjectId((ObjectId)id);\n      }\n    }\n  }\n else   if (realmList.clazz == Decimal128.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object decimal=jsonArray.get(i);\n      if (decimal instanceof org.bson.types.Decimal128) {\n        osList.addDecimal128((org.bson.types.Decimal128)decimal);\n      }\n else       if (decimal instanceof String) {\n        osList.addDecimal128(org.bson.types.Decimal128.parse((String)decimal));\n      }\n else       if (decimal instanceof Integer) {\n        osList.addDecimal128(new org.bson.types.Decimal128((Integer)(decimal)));\n      }\n else       if (decimal instanceof Long) {\n        osList.addDecimal128(new org.bson.types.Decimal128((Long)(decimal)));\n      }\n else       if (decimal instanceof Double) {\n        osList.addDecimal128(new org.bson.types.Decimal128(new java.math.BigDecimal((Double)(decimal))));\n      }\n else {\n        osList.addDecimal128((Decimal128)decimal);\n      }\n    }\n  }\n else   if (realmList.clazz == UUID.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object uuid=jsonArray.get(i);\n      if (uuid instanceof java.util.UUID) {\n        osList.addUUID((java.util.UUID)uuid);\n      }\n else {\n        osList.addUUID(java.util.UUID.fromString((String)uuid));\n      }\n    }\n  }\n else   if (realmList.clazz == Mixed.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n        continue;\n      }\n      Object value=jsonArray.get(i);\n      Mixed mixed;\n      if (value instanceof String) {\n        mixed=Mixed.valueOf((String)value);\n      }\n else       if (value instanceof Integer) {\n        mixed=Mixed.valueOf((Integer)value);\n      }\n else       if (value instanceof Long) {\n        mixed=Mixed.valueOf((Long)value);\n      }\n else       if (value instanceof Double) {\n        mixed=Mixed.valueOf((Double)value);\n      }\n else       if (value instanceof Boolean) {\n        mixed=Mixed.valueOf((Boolean)value);\n      }\n else       if (value instanceof Mixed) {\n        mixed=(io.realm.Mixed)value;\n        mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n      }\n else {\n        throw new IllegalArgumentException(String.format(\"Unsupported JSON type: %s\",value.getClass().getSimpleName()));\n      }\n      osList.addMixed(mixed.getNativePtr());\n    }\n  }\n else   if (realmList.clazz == Long.class || realmList.clazz == Integer.class || realmList.clazz == Short.class || realmList.clazz == Byte.class) {\n    for (int i=0; i < arraySize; i++) {\n      if (jsonArray.isNull(i)) {\n        osList.addNull();\n      }\n else {\n        osList.addLong(jsonArray.getLong(i));\n      }\n    }\n  }\n else {\n    throwWrongElementType(realmList.clazz);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 931,
      "astHeight" : 29
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 199,
        "startColumnNumber" : 20,
        "endLineNumber" : 199,
        "endColumnNumber" : 108
      },
      "nodeContext" : "mixed=ProxyUtils.copyOrUpdate(mixed,realm,update,new HashMap<>(),new HashSet<>());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "io.realm.Realm"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 199,
    "startColumnNumber" : 59,
    "endLineNumber" : 199,
    "endColumnNumber" : 64
  } ],
  "layoutRelationDataList" : [ ]
}