{
  "id" : 414,
  "expression" : "new HttpRequest(POST,\"/v1.40/containers/create\").addHeader(\"Content-Type\",JSON_UTF_8)",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/server/src/org/openqa/selenium/docker/v1_40/CreateContainer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new HttpRequest(POST,\"/v1.40/containers/create\").addHeader(\"Content-Type\",JSON_UTF_8)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 98,
      "startLineNumber" : 57,
      "startColumnNumber" : 8,
      "endLineNumber" : 58,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 9,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 35
      },
      "nodeContext" : "new HttpRequest(POST,\"/v1.40/containers/create\").addHeader(\"Content-Type\",JSON_UTF_8).setContent(asJson(info))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 56,
        "startColumnNumber" : 6,
        "endLineNumber" : 59,
        "endColumnNumber" : 36
      },
      "nodeContext" : "client.execute(new HttpRequest(POST,\"/v1.40/containers/create\").addHeader(\"Content-Type\",JSON_UTF_8).setContent(asJson(info)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 249,
        "startLineNumber" : 55,
        "startColumnNumber" : 23,
        "endLineNumber" : 61,
        "endColumnNumber" : 11
      },
      "nodeContext" : "DockerMessages.throwIfNecessary(client.execute(new HttpRequest(POST,\"/v1.40/containers/create\").addHeader(\"Content-Type\",JSON_UTF_8).setContent(asJson(info))),\"Unable to create container: \",info)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 255,
        "startLineNumber" : 55,
        "startColumnNumber" : 17,
        "endLineNumber" : 61,
        "endColumnNumber" : 11
      },
      "nodeContext" : "res=DockerMessages.throwIfNecessary(client.execute(new HttpRequest(POST,\"/v1.40/containers/create\").addHeader(\"Content-Type\",JSON_UTF_8).setContent(asJson(info))),\"Unable to create container: \",info)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 269,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 12
      },
      "nodeContext" : "HttpResponse res=DockerMessages.throwIfNecessary(client.execute(new HttpRequest(POST,\"/v1.40/containers/create\").addHeader(\"Content-Type\",JSON_UTF_8).setContent(asJson(info))),\"Unable to create container: \",info);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 27,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1124,
        "startLineNumber" : 54,
        "startColumnNumber" : 47,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  HttpResponse res=DockerMessages.throwIfNecessary(client.execute(new HttpRequest(POST,\"/v1.40/containers/create\").addHeader(\"Content-Type\",JSON_UTF_8).setContent(asJson(info))),\"Unable to create container: \",info);\n  try {\n    Map<String,Object> rawContainer=JSON.toType(Contents.string(res),MAP_TYPE);\n    if (!(rawContainer.get(\"Id\") instanceof String)) {\n      throw new DockerException(\"Unable to read container id: \" + rawContainer);\n    }\n    ContainerId id=new ContainerId((String)rawContainer.get(\"Id\"));\n    if (rawContainer.get(\"Warnings\") instanceof Collection) {\n      String allWarnings=((Collection<?>)rawContainer.get(\"Warnings\")).stream().map(String::valueOf).collect(Collectors.joining(\"\\n\",\" * \",\"\"));\n      LOG.info(String.format(\"Warnings while creating %s from %s: %s\",id,info,allWarnings));\n    }\n    return new Container(protocol,id);\n  }\n catch (  JsonException|NullPointerException e) {\n    throw new DockerException(\"Unable to create container from \" + info);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 153,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1169,
        "startLineNumber" : 54,
        "startColumnNumber" : 2,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public Container apply(ContainerConfig info){\n  HttpResponse res=DockerMessages.throwIfNecessary(client.execute(new HttpRequest(POST,\"/v1.40/containers/create\").addHeader(\"Content-Type\",JSON_UTF_8).setContent(asJson(info))),\"Unable to create container: \",info);\n  try {\n    Map<String,Object> rawContainer=JSON.toType(Contents.string(res),MAP_TYPE);\n    if (!(rawContainer.get(\"Id\") instanceof String)) {\n      throw new DockerException(\"Unable to read container id: \" + rawContainer);\n    }\n    ContainerId id=new ContainerId((String)rawContainer.get(\"Id\"));\n    if (rawContainer.get(\"Warnings\") instanceof Collection) {\n      String allWarnings=((Collection<?>)rawContainer.get(\"Warnings\")).stream().map(String::valueOf).collect(Collectors.joining(\"\\n\",\" * \",\"\"));\n      LOG.info(String.format(\"Warnings while creating %s from %s: %s\",id,info,allWarnings));\n    }\n    return new Container(protocol,id);\n  }\n catch (  JsonException|NullPointerException e) {\n    throw new DockerException(\"Unable to create container from \" + info);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 162,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 35
      },
      "nodeContext" : "new HttpRequest(POST,\"/v1.40/containers/create\").addHeader(\"Content-Type\",JSON_UTF_8).setContent(asJson(info))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 9,
    "type" : "org.openqa.selenium.remote.http.HttpRequest"
  } ],
  "positionList" : [ {
    "charLength" : 98,
    "startLineNumber" : 57,
    "startColumnNumber" : 8,
    "endLineNumber" : 58,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ ]
}