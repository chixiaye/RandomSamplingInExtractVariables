{
  "id" : 341,
  "expression" : "new StringBuilder().append(\"Found some over- or under-assigned tasks in the final assignment with \")",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/streams/src/test/java/org/apache/kafka/streams/processor/internals/assignment/AssignmentTestUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new StringBuilder().append(\"Found some over- or under-assigned tasks in the final assignment with \")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 100,
      "startLineNumber" : 248,
      "startColumnNumber" : 16,
      "endLineNumber" : 248,
      "endColumnNumber" : 116
    },
    "astNodeNumber" : 6,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 248,
        "startColumnNumber" : 16,
        "endLineNumber" : 249,
        "endColumnNumber" : 62
      },
      "nodeContext" : "new StringBuilder().append(\"Found some over- or under-assigned tasks in the final assignment with \").append(numStandbyReplicas)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 227,
        "startLineNumber" : 248,
        "startColumnNumber" : 16,
        "endLineNumber" : 250,
        "endColumnNumber" : 63
      },
      "nodeContext" : "new StringBuilder().append(\"Found some over- or under-assigned tasks in the final assignment with \").append(numStandbyReplicas).append(\" and max warmups \")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 289,
        "startLineNumber" : 248,
        "startColumnNumber" : 16,
        "endLineNumber" : 251,
        "endColumnNumber" : 61
      },
      "nodeContext" : "new StringBuilder().append(\"Found some over- or under-assigned tasks in the final assignment with \").append(numStandbyReplicas).append(\" and max warmups \").append(maxWarmupReplicas)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 370,
        "startLineNumber" : 248,
        "startColumnNumber" : 16,
        "endLineNumber" : 252,
        "endColumnNumber" : 80
      },
      "nodeContext" : "new StringBuilder().append(\"Found some over- or under-assigned tasks in the final assignment with \").append(numStandbyReplicas).append(\" and max warmups \").append(maxWarmupReplicas).append(\" standby replicas, stateful tasks:\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 428,
        "startLineNumber" : 248,
        "startColumnNumber" : 16,
        "endLineNumber" : 253,
        "endColumnNumber" : 57
      },
      "nodeContext" : "new StringBuilder().append(\"Found some over- or under-assigned tasks in the final assignment with \").append(numStandbyReplicas).append(\" and max warmups \").append(maxWarmupReplicas).append(\" standby replicas, stateful tasks:\").append(statefulTasks)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 21,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 497,
        "startLineNumber" : 248,
        "startColumnNumber" : 16,
        "endLineNumber" : 254,
        "endColumnNumber" : 68
      },
      "nodeContext" : "new StringBuilder().append(\"Found some over- or under-assigned tasks in the final assignment with \").append(numStandbyReplicas).append(\" and max warmups \").append(maxWarmupReplicas).append(\" standby replicas, stateful tasks:\").append(statefulTasks).append(\", and stateless tasks:\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 24,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 556,
        "startLineNumber" : 248,
        "startColumnNumber" : 16,
        "endLineNumber" : 255,
        "endColumnNumber" : 58
      },
      "nodeContext" : "new StringBuilder().append(\"Found some over- or under-assigned tasks in the final assignment with \").append(numStandbyReplicas).append(\" and max warmups \").append(maxWarmupReplicas).append(\" standby replicas, stateful tasks:\").append(statefulTasks).append(\", and stateless tasks:\").append(statelessTasks)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 27,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 615,
        "startLineNumber" : 248,
        "startColumnNumber" : 16,
        "endLineNumber" : 256,
        "endColumnNumber" : 58
      },
      "nodeContext" : "new StringBuilder().append(\"Found some over- or under-assigned tasks in the final assignment with \").append(numStandbyReplicas).append(\" and max warmups \").append(maxWarmupReplicas).append(\" standby replicas, stateful tasks:\").append(statefulTasks).append(\", and stateless tasks:\").append(statelessTasks).append(failureContext)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 30,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 662,
        "startLineNumber" : 248,
        "startColumnNumber" : 16,
        "endLineNumber" : 257,
        "endColumnNumber" : 46
      },
      "nodeContext" : "new StringBuilder().append(\"Found some over- or under-assigned tasks in the final assignment with \").append(numStandbyReplicas).append(\" and max warmups \").append(maxWarmupReplicas).append(\" standby replicas, stateful tasks:\").append(statefulTasks).append(\", and stateless tasks:\").append(statelessTasks).append(failureContext).toString()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 32,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 752,
        "startLineNumber" : 247,
        "startColumnNumber" : 12,
        "endLineNumber" : 259,
        "endColumnNumber" : 31
      },
      "nodeContext" : "assertThat(new StringBuilder().append(\"Found some over- or under-assigned tasks in the final assignment with \").append(numStandbyReplicas).append(\" and max warmups \").append(maxWarmupReplicas).append(\" standby replicas, stateful tasks:\").append(statefulTasks).append(\", and stateless tasks:\").append(statelessTasks).append(failureContext).toString(),misassigned,is(emptyMap()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 39,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 753,
        "startLineNumber" : 247,
        "startColumnNumber" : 12,
        "endLineNumber" : 259,
        "endColumnNumber" : 32
      },
      "nodeContext" : "assertThat(new StringBuilder().append(\"Found some over- or under-assigned tasks in the final assignment with \").append(numStandbyReplicas).append(\" and max warmups \").append(maxWarmupReplicas).append(\" standby replicas, stateful tasks:\").append(statefulTasks).append(\", and stateless tasks:\").append(statelessTasks).append(failureContext).toString(),misassigned,is(emptyMap()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 40,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 777,
        "startLineNumber" : 246,
        "startColumnNumber" : 36,
        "endLineNumber" : 260,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  assertThat(new StringBuilder().append(\"Found some over- or under-assigned tasks in the final assignment with \").append(numStandbyReplicas).append(\" and max warmups \").append(maxWarmupReplicas).append(\" standby replicas, stateful tasks:\").append(statefulTasks).append(\", and stateless tasks:\").append(statelessTasks).append(failureContext).toString(),misassigned,is(emptyMap()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 805,
        "startLineNumber" : 246,
        "startColumnNumber" : 8,
        "endLineNumber" : 260,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!misassigned.isEmpty()) {\n  assertThat(new StringBuilder().append(\"Found some over- or under-assigned tasks in the final assignment with \").append(numStandbyReplicas).append(\" and max warmups \").append(maxWarmupReplicas).append(\" standby replicas, stateful tasks:\").append(statefulTasks).append(\", and stateless tasks:\").append(statelessTasks).append(failureContext).toString(),misassigned,is(emptyMap()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 46,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2919,
        "startLineNumber" : 204,
        "startColumnNumber" : 74,
        "endLineNumber" : 261,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Map<TaskId,Set<UUID>> assignments=new TreeMap<>();\n  for (  final TaskId taskId : statefulTasks) {\n    assignments.put(taskId,new TreeSet<>());\n  }\n  for (  final TaskId taskId : statelessTasks) {\n    assignments.put(taskId,new TreeSet<>());\n  }\n  for (  final Map.Entry<UUID,ClientState> entry : assignedStates.entrySet()) {\n    validateAndAddActiveAssignments(statefulTasks,statelessTasks,failureContext,assignments,entry);\n    validateAndAddStandbyAssignments(statefulTasks,statelessTasks,failureContext,assignments,entry);\n  }\n  final AtomicInteger remainingWarmups=new AtomicInteger(maxWarmupReplicas);\n  final TreeMap<TaskId,Set<UUID>> misassigned=assignments.entrySet().stream().filter(entry -> {\n    final int expectedActives=1;\n    final boolean isStateless=statelessTasks.contains(entry.getKey());\n    final int expectedStandbys=isStateless ? 0 : numStandbyReplicas;\n    final int expectedAssignments=Math.min(assignedStates.size(),expectedActives + expectedStandbys);\n    final int actualAssignments=entry.getValue().size();\n    if (actualAssignments == expectedAssignments) {\n      return false;\n    }\n else {\n      if (actualAssignments == expectedAssignments + 1 && remainingWarmups.get() > 0) {\n        remainingWarmups.getAndDecrement();\n        return false;\n      }\n else {\n        return true;\n      }\n    }\n  }\n).collect(entriesToMap(TreeMap::new));\n  if (!misassigned.isEmpty()) {\n    assertThat(new StringBuilder().append(\"Found some over- or under-assigned tasks in the final assignment with \").append(numStandbyReplicas).append(\" and max warmups \").append(maxWarmupReplicas).append(\" standby replicas, stateful tasks:\").append(statefulTasks).append(\", and stateless tasks:\").append(statelessTasks).append(failureContext).toString(),misassigned,is(emptyMap()));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 254,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3350,
        "startLineNumber" : 199,
        "startColumnNumber" : 4,
        "endLineNumber" : 261,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static void assertValidAssignment(final int numStandbyReplicas,final int maxWarmupReplicas,final Set<TaskId> statefulTasks,final Set<TaskId> statelessTasks,final Map<UUID,ClientState> assignedStates,final StringBuilder failureContext){\n  final Map<TaskId,Set<UUID>> assignments=new TreeMap<>();\n  for (  final TaskId taskId : statefulTasks) {\n    assignments.put(taskId,new TreeSet<>());\n  }\n  for (  final TaskId taskId : statelessTasks) {\n    assignments.put(taskId,new TreeSet<>());\n  }\n  for (  final Map.Entry<UUID,ClientState> entry : assignedStates.entrySet()) {\n    validateAndAddActiveAssignments(statefulTasks,statelessTasks,failureContext,assignments,entry);\n    validateAndAddStandbyAssignments(statefulTasks,statelessTasks,failureContext,assignments,entry);\n  }\n  final AtomicInteger remainingWarmups=new AtomicInteger(maxWarmupReplicas);\n  final TreeMap<TaskId,Set<UUID>> misassigned=assignments.entrySet().stream().filter(entry -> {\n    final int expectedActives=1;\n    final boolean isStateless=statelessTasks.contains(entry.getKey());\n    final int expectedStandbys=isStateless ? 0 : numStandbyReplicas;\n    final int expectedAssignments=Math.min(assignedStates.size(),expectedActives + expectedStandbys);\n    final int actualAssignments=entry.getValue().size();\n    if (actualAssignments == expectedAssignments) {\n      return false;\n    }\n else {\n      if (actualAssignments == expectedAssignments + 1 && remainingWarmups.get() > 0) {\n        remainingWarmups.getAndDecrement();\n        return false;\n      }\n else {\n        return true;\n      }\n    }\n  }\n).collect(entriesToMap(TreeMap::new));\n  if (!misassigned.isEmpty()) {\n    assertThat(new StringBuilder().append(\"Found some over- or under-assigned tasks in the final assignment with \").append(numStandbyReplicas).append(\" and max warmups \").append(maxWarmupReplicas).append(\" standby replicas, stateful tasks:\").append(statefulTasks).append(\", and stateless tasks:\").append(statelessTasks).append(failureContext).toString(),misassigned,is(emptyMap()));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 297,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 248,
        "startColumnNumber" : 16,
        "endLineNumber" : 249,
        "endColumnNumber" : 62
      },
      "nodeContext" : "new StringBuilder().append(\"Found some over- or under-assigned tasks in the final assignment with \").append(numStandbyReplicas)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 12,
    "type" : "java.lang.StringBuilder"
  } ],
  "positionList" : [ {
    "charLength" : 100,
    "startLineNumber" : 248,
    "startColumnNumber" : 16,
    "endLineNumber" : 248,
    "endColumnNumber" : 116
  } ],
  "layoutRelationDataList" : [ ]
}