{
  "id" : 66,
  "expression" : "privacyRules.get(a)",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/org/telegram/ui/PrivacySettingsActivity.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "privacyRules.get(a)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 587,
      "startColumnNumber" : 37,
      "endLineNumber" : 587,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 587,
        "startColumnNumber" : 30,
        "endLineNumber" : 587,
        "endColumnNumber" : 56
      },
      "nodeContext" : "rule=privacyRules.get(a)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 587,
        "startColumnNumber" : 12,
        "endLineNumber" : 587,
        "endColumnNumber" : 57
      },
      "nodeContext" : "TLRPC.PrivacyRule rule=privacyRules.get(a);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 2052,
        "startLineNumber" : 586,
        "startColumnNumber" : 54,
        "endLineNumber" : 621,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  TLRPC.PrivacyRule rule=privacyRules.get(a);\n  if (rule instanceof TLRPC.TL_privacyValueAllowChatParticipants) {\n    TLRPC.TL_privacyValueAllowChatParticipants participants=(TLRPC.TL_privacyValueAllowChatParticipants)rule;\n    for (int b=0, N=participants.chats.size(); b < N; b++) {\n      TLRPC.Chat chat=accountInstance.getMessagesController().getChat(participants.chats.get(b));\n      if (chat == null) {\n        continue;\n      }\n      plus+=chat.participants_count;\n    }\n  }\n else   if (rule instanceof TLRPC.TL_privacyValueDisallowChatParticipants) {\n    TLRPC.TL_privacyValueDisallowChatParticipants participants=(TLRPC.TL_privacyValueDisallowChatParticipants)rule;\n    for (int b=0, N=participants.chats.size(); b < N; b++) {\n      TLRPC.Chat chat=accountInstance.getMessagesController().getChat(participants.chats.get(b));\n      if (chat == null) {\n        continue;\n      }\n      minus+=chat.participants_count;\n    }\n  }\n else   if (rule instanceof TLRPC.TL_privacyValueAllowUsers) {\n    TLRPC.TL_privacyValueAllowUsers privacyValueAllowUsers=(TLRPC.TL_privacyValueAllowUsers)rule;\n    plus+=privacyValueAllowUsers.users.size();\n  }\n else   if (rule instanceof TLRPC.TL_privacyValueDisallowUsers) {\n    TLRPC.TL_privacyValueDisallowUsers privacyValueDisallowUsers=(TLRPC.TL_privacyValueDisallowUsers)rule;\n    minus+=privacyValueDisallowUsers.users.size();\n  }\n else   if (type == -1) {\n    if (rule instanceof TLRPC.TL_privacyValueAllowAll) {\n      type=0;\n    }\n else     if (rule instanceof TLRPC.TL_privacyValueDisallowAll) {\n      type=1;\n    }\n else {\n      type=2;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 245,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2098,
        "startLineNumber" : 586,
        "startColumnNumber" : 8,
        "endLineNumber" : 621,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int a=0; a < privacyRules.size(); a++) {\n  TLRPC.PrivacyRule rule=privacyRules.get(a);\n  if (rule instanceof TLRPC.TL_privacyValueAllowChatParticipants) {\n    TLRPC.TL_privacyValueAllowChatParticipants participants=(TLRPC.TL_privacyValueAllowChatParticipants)rule;\n    for (int b=0, N=participants.chats.size(); b < N; b++) {\n      TLRPC.Chat chat=accountInstance.getMessagesController().getChat(participants.chats.get(b));\n      if (chat == null) {\n        continue;\n      }\n      plus+=chat.participants_count;\n    }\n  }\n else   if (rule instanceof TLRPC.TL_privacyValueDisallowChatParticipants) {\n    TLRPC.TL_privacyValueDisallowChatParticipants participants=(TLRPC.TL_privacyValueDisallowChatParticipants)rule;\n    for (int b=0, N=participants.chats.size(); b < N; b++) {\n      TLRPC.Chat chat=accountInstance.getMessagesController().getChat(participants.chats.get(b));\n      if (chat == null) {\n        continue;\n      }\n      minus+=chat.participants_count;\n    }\n  }\n else   if (rule instanceof TLRPC.TL_privacyValueAllowUsers) {\n    TLRPC.TL_privacyValueAllowUsers privacyValueAllowUsers=(TLRPC.TL_privacyValueAllowUsers)rule;\n    plus+=privacyValueAllowUsers.users.size();\n  }\n else   if (rule instanceof TLRPC.TL_privacyValueDisallowUsers) {\n    TLRPC.TL_privacyValueDisallowUsers privacyValueDisallowUsers=(TLRPC.TL_privacyValueDisallowUsers)rule;\n    minus+=privacyValueDisallowUsers.users.size();\n  }\n else   if (type == -1) {\n    if (rule instanceof TLRPC.TL_privacyValueAllowAll) {\n      type=0;\n    }\n else     if (rule instanceof TLRPC.TL_privacyValueDisallowAll) {\n      type=1;\n    }\n else {\n      type=2;\n    }\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 258,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5573,
        "startLineNumber" : 574,
        "startColumnNumber" : 91,
        "endLineNumber" : 678,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ArrayList<TLRPC.PrivacyRule> privacyRules=accountInstance.getContactsController().getPrivacyRules(rulesType);\n  if (privacyRules.size() == 0) {\n    if (rulesType == 3) {\n      return LocaleController.getString(\"P2PNobody\",R.string.P2PNobody);\n    }\n else {\n      return LocaleController.getString(\"LastSeenNobody\",R.string.LastSeenNobody);\n    }\n  }\n  int type=-1;\n  int plus=0;\n  int minus=0;\n  for (int a=0; a < privacyRules.size(); a++) {\n    TLRPC.PrivacyRule rule=privacyRules.get(a);\n    if (rule instanceof TLRPC.TL_privacyValueAllowChatParticipants) {\n      TLRPC.TL_privacyValueAllowChatParticipants participants=(TLRPC.TL_privacyValueAllowChatParticipants)rule;\n      for (int b=0, N=participants.chats.size(); b < N; b++) {\n        TLRPC.Chat chat=accountInstance.getMessagesController().getChat(participants.chats.get(b));\n        if (chat == null) {\n          continue;\n        }\n        plus+=chat.participants_count;\n      }\n    }\n else     if (rule instanceof TLRPC.TL_privacyValueDisallowChatParticipants) {\n      TLRPC.TL_privacyValueDisallowChatParticipants participants=(TLRPC.TL_privacyValueDisallowChatParticipants)rule;\n      for (int b=0, N=participants.chats.size(); b < N; b++) {\n        TLRPC.Chat chat=accountInstance.getMessagesController().getChat(participants.chats.get(b));\n        if (chat == null) {\n          continue;\n        }\n        minus+=chat.participants_count;\n      }\n    }\n else     if (rule instanceof TLRPC.TL_privacyValueAllowUsers) {\n      TLRPC.TL_privacyValueAllowUsers privacyValueAllowUsers=(TLRPC.TL_privacyValueAllowUsers)rule;\n      plus+=privacyValueAllowUsers.users.size();\n    }\n else     if (rule instanceof TLRPC.TL_privacyValueDisallowUsers) {\n      TLRPC.TL_privacyValueDisallowUsers privacyValueDisallowUsers=(TLRPC.TL_privacyValueDisallowUsers)rule;\n      minus+=privacyValueDisallowUsers.users.size();\n    }\n else     if (type == -1) {\n      if (rule instanceof TLRPC.TL_privacyValueAllowAll) {\n        type=0;\n      }\n else       if (rule instanceof TLRPC.TL_privacyValueDisallowAll) {\n        type=1;\n      }\n else {\n        type=2;\n      }\n    }\n  }\n  if (type == 0 || type == -1 && minus > 0) {\n    if (rulesType == 3) {\n      if (minus == 0) {\n        return LocaleController.getString(\"P2PEverybody\",R.string.P2PEverybody);\n      }\n else {\n        return LocaleController.formatString(\"P2PEverybodyMinus\",R.string.P2PEverybodyMinus,minus);\n      }\n    }\n else {\n      if (minus == 0) {\n        return LocaleController.getString(\"LastSeenEverybody\",R.string.LastSeenEverybody);\n      }\n else {\n        return LocaleController.formatString(\"LastSeenEverybodyMinus\",R.string.LastSeenEverybodyMinus,minus);\n      }\n    }\n  }\n else   if (type == 2 || type == -1 && minus > 0 && plus > 0) {\n    if (rulesType == 3) {\n      if (plus == 0 && minus == 0) {\n        return LocaleController.getString(\"P2PContacts\",R.string.P2PContacts);\n      }\n else {\n        if (plus != 0 && minus != 0) {\n          return LocaleController.formatString(\"P2PContactsMinusPlus\",R.string.P2PContactsMinusPlus,minus,plus);\n        }\n else         if (minus != 0) {\n          return LocaleController.formatString(\"P2PContactsMinus\",R.string.P2PContactsMinus,minus);\n        }\n else {\n          return LocaleController.formatString(\"P2PContactsPlus\",R.string.P2PContactsPlus,plus);\n        }\n      }\n    }\n else {\n      if (plus == 0 && minus == 0) {\n        return LocaleController.getString(\"LastSeenContacts\",R.string.LastSeenContacts);\n      }\n else {\n        if (plus != 0 && minus != 0) {\n          return LocaleController.formatString(\"LastSeenContactsMinusPlus\",R.string.LastSeenContactsMinusPlus,minus,plus);\n        }\n else         if (minus != 0) {\n          return LocaleController.formatString(\"LastSeenContactsMinus\",R.string.LastSeenContactsMinus,minus);\n        }\n else {\n          return LocaleController.formatString(\"LastSeenContactsPlus\",R.string.LastSeenContactsPlus,plus);\n        }\n      }\n    }\n  }\n else   if (type == 1 || plus > 0) {\n    if (rulesType == 3) {\n      if (plus == 0) {\n        return LocaleController.getString(\"P2PNobody\",R.string.P2PNobody);\n      }\n else {\n        return LocaleController.formatString(\"P2PNobodyPlus\",R.string.P2PNobodyPlus,plus);\n      }\n    }\n else {\n      if (plus == 0) {\n        return LocaleController.getString(\"LastSeenNobody\",R.string.LastSeenNobody);\n      }\n else {\n        return LocaleController.formatString(\"LastSeenNobodyPlus\",R.string.LastSeenNobodyPlus,plus);\n      }\n    }\n  }\n  return \"unknown\";\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 631,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5660,
        "startLineNumber" : 574,
        "startColumnNumber" : 4,
        "endLineNumber" : 678,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static String formatRulesString(AccountInstance accountInstance,int rulesType){\n  ArrayList<TLRPC.PrivacyRule> privacyRules=accountInstance.getContactsController().getPrivacyRules(rulesType);\n  if (privacyRules.size() == 0) {\n    if (rulesType == 3) {\n      return LocaleController.getString(\"P2PNobody\",R.string.P2PNobody);\n    }\n else {\n      return LocaleController.getString(\"LastSeenNobody\",R.string.LastSeenNobody);\n    }\n  }\n  int type=-1;\n  int plus=0;\n  int minus=0;\n  for (int a=0; a < privacyRules.size(); a++) {\n    TLRPC.PrivacyRule rule=privacyRules.get(a);\n    if (rule instanceof TLRPC.TL_privacyValueAllowChatParticipants) {\n      TLRPC.TL_privacyValueAllowChatParticipants participants=(TLRPC.TL_privacyValueAllowChatParticipants)rule;\n      for (int b=0, N=participants.chats.size(); b < N; b++) {\n        TLRPC.Chat chat=accountInstance.getMessagesController().getChat(participants.chats.get(b));\n        if (chat == null) {\n          continue;\n        }\n        plus+=chat.participants_count;\n      }\n    }\n else     if (rule instanceof TLRPC.TL_privacyValueDisallowChatParticipants) {\n      TLRPC.TL_privacyValueDisallowChatParticipants participants=(TLRPC.TL_privacyValueDisallowChatParticipants)rule;\n      for (int b=0, N=participants.chats.size(); b < N; b++) {\n        TLRPC.Chat chat=accountInstance.getMessagesController().getChat(participants.chats.get(b));\n        if (chat == null) {\n          continue;\n        }\n        minus+=chat.participants_count;\n      }\n    }\n else     if (rule instanceof TLRPC.TL_privacyValueAllowUsers) {\n      TLRPC.TL_privacyValueAllowUsers privacyValueAllowUsers=(TLRPC.TL_privacyValueAllowUsers)rule;\n      plus+=privacyValueAllowUsers.users.size();\n    }\n else     if (rule instanceof TLRPC.TL_privacyValueDisallowUsers) {\n      TLRPC.TL_privacyValueDisallowUsers privacyValueDisallowUsers=(TLRPC.TL_privacyValueDisallowUsers)rule;\n      minus+=privacyValueDisallowUsers.users.size();\n    }\n else     if (type == -1) {\n      if (rule instanceof TLRPC.TL_privacyValueAllowAll) {\n        type=0;\n      }\n else       if (rule instanceof TLRPC.TL_privacyValueDisallowAll) {\n        type=1;\n      }\n else {\n        type=2;\n      }\n    }\n  }\n  if (type == 0 || type == -1 && minus > 0) {\n    if (rulesType == 3) {\n      if (minus == 0) {\n        return LocaleController.getString(\"P2PEverybody\",R.string.P2PEverybody);\n      }\n else {\n        return LocaleController.formatString(\"P2PEverybodyMinus\",R.string.P2PEverybodyMinus,minus);\n      }\n    }\n else {\n      if (minus == 0) {\n        return LocaleController.getString(\"LastSeenEverybody\",R.string.LastSeenEverybody);\n      }\n else {\n        return LocaleController.formatString(\"LastSeenEverybodyMinus\",R.string.LastSeenEverybodyMinus,minus);\n      }\n    }\n  }\n else   if (type == 2 || type == -1 && minus > 0 && plus > 0) {\n    if (rulesType == 3) {\n      if (plus == 0 && minus == 0) {\n        return LocaleController.getString(\"P2PContacts\",R.string.P2PContacts);\n      }\n else {\n        if (plus != 0 && minus != 0) {\n          return LocaleController.formatString(\"P2PContactsMinusPlus\",R.string.P2PContactsMinusPlus,minus,plus);\n        }\n else         if (minus != 0) {\n          return LocaleController.formatString(\"P2PContactsMinus\",R.string.P2PContactsMinus,minus);\n        }\n else {\n          return LocaleController.formatString(\"P2PContactsPlus\",R.string.P2PContactsPlus,plus);\n        }\n      }\n    }\n else {\n      if (plus == 0 && minus == 0) {\n        return LocaleController.getString(\"LastSeenContacts\",R.string.LastSeenContacts);\n      }\n else {\n        if (plus != 0 && minus != 0) {\n          return LocaleController.formatString(\"LastSeenContactsMinusPlus\",R.string.LastSeenContactsMinusPlus,minus,plus);\n        }\n else         if (minus != 0) {\n          return LocaleController.formatString(\"LastSeenContactsMinus\",R.string.LastSeenContactsMinus,minus);\n        }\n else {\n          return LocaleController.formatString(\"LastSeenContactsPlus\",R.string.LastSeenContactsPlus,plus);\n        }\n      }\n    }\n  }\n else   if (type == 1 || plus > 0) {\n    if (rulesType == 3) {\n      if (plus == 0) {\n        return LocaleController.getString(\"P2PNobody\",R.string.P2PNobody);\n      }\n else {\n        return LocaleController.formatString(\"P2PNobodyPlus\",R.string.P2PNobodyPlus,plus);\n      }\n    }\n else {\n      if (plus == 0) {\n        return LocaleController.getString(\"LastSeenNobody\",R.string.LastSeenNobody);\n      }\n else {\n        return LocaleController.formatString(\"LastSeenNobodyPlus\",R.string.LastSeenNobodyPlus,plus);\n      }\n    }\n  }\n  return \"unknown\";\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 644,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 587,
        "startColumnNumber" : 12,
        "endLineNumber" : 587,
        "endColumnNumber" : 57
      },
      "nodeContext" : "TLRPC.PrivacyRule rule=privacyRules.get(a);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "org.telegram.tgnet.TLRPC.PrivacyRule"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 587,
    "startColumnNumber" : 37,
    "endLineNumber" : 587,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}