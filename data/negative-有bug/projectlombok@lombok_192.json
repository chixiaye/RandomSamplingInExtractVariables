{
  "id" : 192,
  "expression" : "new NullPointerException(\"t\")",
  "projectName" : "projectlombok@lombok",
  "commitID" : "25def866b50860715ee7c315c678b8c3d1ba9b56",
  "filePath" : "/src/core/lombok/Lombok.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new NullPointerException(\"t\")",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 51,
      "startColumnNumber" : 23,
      "endLineNumber" : 51,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 51,
        "startColumnNumber" : 17,
        "endLineNumber" : 51,
        "endColumnNumber" : 53
      },
      "nodeContext" : "throw new NullPointerException(\"t\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 51,
        "startColumnNumber" : 2,
        "endLineNumber" : 51,
        "endColumnNumber" : 53
      },
      "nodeContext" : "if (t == null) throw new NullPointerException(\"t\");\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 50,
        "startColumnNumber" : 57,
        "endLineNumber" : 54,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (t == null)   throw new NullPointerException(\"t\");\n  Lombok.<RuntimeException>sneakyThrow0(t);\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1360,
        "startLineNumber" : 28,
        "startColumnNumber" : 1,
        "endLineNumber" : 54,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Throws any throwable 'sneakily' - you don't need to catch it, nor declare that you throw it onwards. The exception is still thrown - javac will just stop whining about it. <p> Example usage: <p> <pre>public void run() { throw sneakyThrow(new IOException(\"You don't need to catch me!\")); }</pre> <p> NB: The exception is not wrapped, ignored, swallowed, or redefined. The JVM actually does not know or care about the concept of a 'checked exception'. All this method does is hide the act of throwing a checked exception from the java compiler. <p> Note that this method has a return type of  {@code RuntimeException}; it is advised you always call this method as argument to the  {@code throw} statement to avoid compiler errors regarding no returnstatement and similar problems. This method won't of course return an actual  {@code RuntimeException} -it never returns, it always throws the provided exception.\n * @param t The throwable to throw without requiring you to catch its type.\n * @return A dummy RuntimeException; this method never returns normally, it <em>always</em> throws an exception!\n */\npublic static RuntimeException sneakyThrow(Throwable t){\n  if (t == null)   throw new NullPointerException(\"t\");\n  Lombok.<RuntimeException>sneakyThrow0(t);\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 30,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 51,
        "startColumnNumber" : 2,
        "endLineNumber" : 51,
        "endColumnNumber" : 53
      },
      "nodeContext" : "if (t == null) throw new NullPointerException(\"t\");\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.NullPointerException"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 51,
    "startColumnNumber" : 23,
    "endLineNumber" : 51,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}