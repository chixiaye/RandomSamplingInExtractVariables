{
  "id" : 102,
  "expression" : "dataSpec.subrange(nextLoadPosition)",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/core/src/main/java/com/google/android/exoplayer2/source/chunk/SingleSampleMediaChunk.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "dataSpec.subrange(nextLoadPosition)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 35,
      "startLineNumber" : 97,
      "startColumnNumber" : 30,
      "endLineNumber" : 97,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 97,
        "startColumnNumber" : 15,
        "endLineNumber" : 97,
        "endColumnNumber" : 65
      },
      "nodeContext" : "loadDataSpec=dataSpec.subrange(nextLoadPosition)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 97,
        "startColumnNumber" : 6,
        "endLineNumber" : 97,
        "endColumnNumber" : 66
      },
      "nodeContext" : "DataSpec loadDataSpec=dataSpec.subrange(nextLoadPosition);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 723,
        "startLineNumber" : 95,
        "startColumnNumber" : 8,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  DataSpec loadDataSpec=dataSpec.subrange(nextLoadPosition);\n  long length=dataSource.open(loadDataSpec);\n  if (length != C.LENGTH_UNSET) {\n    length+=nextLoadPosition;\n  }\n  ExtractorInput extractorInput=new DefaultExtractorInput(dataSource,nextLoadPosition,length);\n  int result=0;\n  while (result != C.RESULT_END_OF_INPUT) {\n    nextLoadPosition+=result;\n    result=trackOutput.sampleData(extractorInput,Integer.MAX_VALUE,true);\n  }\n  int sampleSize=(int)nextLoadPosition;\n  trackOutput.sampleMetadata(startTimeUs,C.BUFFER_FLAG_KEY_FRAME,sampleSize,0,null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 790,
        "startLineNumber" : 95,
        "startColumnNumber" : 4,
        "endLineNumber" : 114,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  DataSpec loadDataSpec=dataSpec.subrange(nextLoadPosition);\n  long length=dataSource.open(loadDataSpec);\n  if (length != C.LENGTH_UNSET) {\n    length+=nextLoadPosition;\n  }\n  ExtractorInput extractorInput=new DefaultExtractorInput(dataSource,nextLoadPosition,length);\n  int result=0;\n  while (result != C.RESULT_END_OF_INPUT) {\n    nextLoadPosition+=result;\n    result=trackOutput.sampleData(extractorInput,Integer.MAX_VALUE,true);\n  }\n  int sampleSize=(int)nextLoadPosition;\n  trackOutput.sampleMetadata(startTimeUs,C.BUFFER_FLAG_KEY_FRAME,sampleSize,0,null);\n}\n  finally {\n  DataSourceUtil.closeQuietly(dataSource);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 92,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1002,
        "startLineNumber" : 90,
        "startColumnNumber" : 40,
        "endLineNumber" : 116,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  BaseMediaChunkOutput output=getOutput();\n  output.setSampleOffsetUs(0);\n  TrackOutput trackOutput=output.track(0,trackType);\n  trackOutput.format(sampleFormat);\n  try {\n    DataSpec loadDataSpec=dataSpec.subrange(nextLoadPosition);\n    long length=dataSource.open(loadDataSpec);\n    if (length != C.LENGTH_UNSET) {\n      length+=nextLoadPosition;\n    }\n    ExtractorInput extractorInput=new DefaultExtractorInput(dataSource,nextLoadPosition,length);\n    int result=0;\n    while (result != C.RESULT_END_OF_INPUT) {\n      nextLoadPosition+=result;\n      result=trackOutput.sampleData(extractorInput,Integer.MAX_VALUE,true);\n    }\n    int sampleSize=(int)nextLoadPosition;\n    trackOutput.sampleMetadata(startTimeUs,C.BUFFER_FLAG_KEY_FRAME,sampleSize,0,null);\n  }\n  finally {\n    DataSourceUtil.closeQuietly(dataSource);\n  }\n  loadCompleted=true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1099,
        "startLineNumber" : 88,
        "startColumnNumber" : 2,
        "endLineNumber" : 116,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@SuppressWarnings(\"NonAtomicVolatileUpdate\") @Override public void load() throws IOException {\n  BaseMediaChunkOutput output=getOutput();\n  output.setSampleOffsetUs(0);\n  TrackOutput trackOutput=output.track(0,trackType);\n  trackOutput.format(sampleFormat);\n  try {\n    DataSpec loadDataSpec=dataSpec.subrange(nextLoadPosition);\n    long length=dataSource.open(loadDataSpec);\n    if (length != C.LENGTH_UNSET) {\n      length+=nextLoadPosition;\n    }\n    ExtractorInput extractorInput=new DefaultExtractorInput(dataSource,nextLoadPosition,length);\n    int result=0;\n    while (result != C.RESULT_END_OF_INPUT) {\n      nextLoadPosition+=result;\n      result=trackOutput.sampleData(extractorInput,Integer.MAX_VALUE,true);\n    }\n    int sampleSize=(int)nextLoadPosition;\n    trackOutput.sampleMetadata(startTimeUs,C.BUFFER_FLAG_KEY_FRAME,sampleSize,0,null);\n  }\n  finally {\n    DataSourceUtil.closeQuietly(dataSource);\n  }\n  loadCompleted=true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 135,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 97,
        "startColumnNumber" : 6,
        "endLineNumber" : 97,
        "endColumnNumber" : 66
      },
      "nodeContext" : "DataSpec loadDataSpec=dataSpec.subrange(nextLoadPosition);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "com.google.android.exoplayer2.upstream.DataSpec"
  } ],
  "positionList" : [ {
    "charLength" : 35,
    "startLineNumber" : 97,
    "startColumnNumber" : 30,
    "endLineNumber" : 97,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ ]
}