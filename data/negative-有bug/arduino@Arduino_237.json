{
  "id" : 237,
  "expression" : "code.getPrettyName()",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/arduino-core/src/processing/app/debug/Compiler.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "code.getPrettyName()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 859,
      "startColumnNumber" : 81,
      "endLineNumber" : 859,
      "endColumnNumber" : 101
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 859,
        "startColumnNumber" : 26,
        "endLineNumber" : 859,
        "endColumnNumber" : 122
      },
      "nodeContext" : "(code.isExtension(\"ino\") || code.isExtension(\"pde\")) ? code.getPrettyName() : code.getFileName()",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 859,
        "startColumnNumber" : 15,
        "endLineNumber" : 859,
        "endColumnNumber" : 122
      },
      "nodeContext" : "fileName=(code.isExtension(\"ino\") || code.isExtension(\"pde\")) ? code.getPrettyName() : code.getFileName()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 859,
        "startColumnNumber" : 8,
        "endLineNumber" : 859,
        "endColumnNumber" : 123
      },
      "nodeContext" : "String fileName=(code.isExtension(\"ino\") || code.isExtension(\"pde\")) ? code.getPrettyName() : code.getFileName();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 302,
        "startLineNumber" : 857,
        "startColumnNumber" : 33,
        "endLineNumber" : 862,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  SketchCode code=sketch.getCode(e.getCodeIndex());\n  String fileName=(code.isExtension(\"ino\") || code.isExtension(\"pde\")) ? code.getPrettyName() : code.getFileName();\n  int lineNum=e.getCodeLine() + 1;\n  s=fileName + \":\" + lineNum+ \": error: \"+ error+ msg;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 329,
        "startLineNumber" : 857,
        "startColumnNumber" : 6,
        "endLineNumber" : 862,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (e != null && !verbose) {\n  SketchCode code=sketch.getCode(e.getCodeIndex());\n  String fileName=(code.isExtension(\"ino\") || code.isExtension(\"pde\")) ? code.getPrettyName() : code.getFileName();\n  int lineNum=e.getCodeLine() + 1;\n  s=fileName + \":\" + lineNum+ \": error: \"+ error+ msg;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 60,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 3797,
        "startLineNumber" : 793,
        "startColumnNumber" : 24,
        "endLineNumber" : 870,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String error=pieces[pieces.length - 1], msg=\"\";\n  if (error.trim().equals(\"SPI.h: No such file or directory\")) {\n    error=_(\"Please import the SPI library from the Sketch > Import Library menu.\");\n    msg=_(\"\\nAs of Arduino 0019, the Ethernet library depends on the SPI library.\" + \"\\nYou appear to be using it or another library that depends on the SPI library.\\n\\n\");\n  }\n  if (error.trim().equals(\"'BYTE' was not declared in this scope\")) {\n    error=_(\"The 'BYTE' keyword is no longer supported.\");\n    msg=_(\"\\nAs of Arduino 1.0, the 'BYTE' keyword is no longer supported.\" + \"\\nPlease use Serial.write() instead.\\n\\n\");\n  }\n  if (error.trim().equals(\"no matching function for call to 'Server::Server(int)'\")) {\n    error=_(\"The Server class has been renamed EthernetServer.\");\n    msg=_(\"\\nAs of Arduino 1.0, the Server class in the Ethernet library \" + \"has been renamed to EthernetServer.\\n\\n\");\n  }\n  if (error.trim().equals(\"no matching function for call to 'Client::Client(byte [4], int)'\")) {\n    error=_(\"The Client class has been renamed EthernetClient.\");\n    msg=_(\"\\nAs of Arduino 1.0, the Client class in the Ethernet library \" + \"has been renamed to EthernetClient.\\n\\n\");\n  }\n  if (error.trim().equals(\"'Udp' was not declared in this scope\")) {\n    error=_(\"The Udp class has been renamed EthernetUdp.\");\n    msg=_(\"\\nAs of Arduino 1.0, the Udp class in the Ethernet library \" + \"has been renamed to EthernetUdp.\\n\\n\");\n  }\n  if (error.trim().equals(\"'class TwoWire' has no member named 'send'\")) {\n    error=_(\"Wire.send() has been renamed Wire.write().\");\n    msg=_(\"\\nAs of Arduino 1.0, the Wire.send() function was renamed \" + \"to Wire.write() for consistency with other libraries.\\n\\n\");\n  }\n  if (error.trim().equals(\"'class TwoWire' has no member named 'receive'\")) {\n    error=_(\"Wire.receive() has been renamed Wire.read().\");\n    msg=_(\"\\nAs of Arduino 1.0, the Wire.receive() function was renamed \" + \"to Wire.read() for consistency with other libraries.\\n\\n\");\n  }\n  if (error.trim().equals(\"'Mouse' was not declared in this scope\")) {\n    error=_(\"'Mouse' only supported on the Arduino Leonardo\");\n  }\n  if (error.trim().equals(\"'Keyboard' was not declared in this scope\")) {\n    error=_(\"'Keyboard' only supported on the Arduino Leonardo\");\n  }\n  RunnerException e=null;\n  if (!sketchIsCompiled) {\n    e=placeException(error,pieces[1],PApplet.parseInt(pieces[2]) - 1);\n  }\n  if (e != null && !verbose) {\n    SketchCode code=sketch.getCode(e.getCodeIndex());\n    String fileName=(code.isExtension(\"ino\") || code.isExtension(\"pde\")) ? code.getPrettyName() : code.getFileName();\n    int lineNum=e.getCodeLine() + 1;\n    s=fileName + \":\" + lineNum+ \": error: \"+ error+ msg;\n  }\n  if (e != null) {\n    if (exception == null || exception.getMessage().equals(e.getMessage())) {\n      exception=e;\n      exception.hideStackTrace();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 312,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3817,
        "startLineNumber" : 793,
        "startColumnNumber" : 4,
        "endLineNumber" : 870,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (pieces != null) {\n  String error=pieces[pieces.length - 1], msg=\"\";\n  if (error.trim().equals(\"SPI.h: No such file or directory\")) {\n    error=_(\"Please import the SPI library from the Sketch > Import Library menu.\");\n    msg=_(\"\\nAs of Arduino 0019, the Ethernet library depends on the SPI library.\" + \"\\nYou appear to be using it or another library that depends on the SPI library.\\n\\n\");\n  }\n  if (error.trim().equals(\"'BYTE' was not declared in this scope\")) {\n    error=_(\"The 'BYTE' keyword is no longer supported.\");\n    msg=_(\"\\nAs of Arduino 1.0, the 'BYTE' keyword is no longer supported.\" + \"\\nPlease use Serial.write() instead.\\n\\n\");\n  }\n  if (error.trim().equals(\"no matching function for call to 'Server::Server(int)'\")) {\n    error=_(\"The Server class has been renamed EthernetServer.\");\n    msg=_(\"\\nAs of Arduino 1.0, the Server class in the Ethernet library \" + \"has been renamed to EthernetServer.\\n\\n\");\n  }\n  if (error.trim().equals(\"no matching function for call to 'Client::Client(byte [4], int)'\")) {\n    error=_(\"The Client class has been renamed EthernetClient.\");\n    msg=_(\"\\nAs of Arduino 1.0, the Client class in the Ethernet library \" + \"has been renamed to EthernetClient.\\n\\n\");\n  }\n  if (error.trim().equals(\"'Udp' was not declared in this scope\")) {\n    error=_(\"The Udp class has been renamed EthernetUdp.\");\n    msg=_(\"\\nAs of Arduino 1.0, the Udp class in the Ethernet library \" + \"has been renamed to EthernetUdp.\\n\\n\");\n  }\n  if (error.trim().equals(\"'class TwoWire' has no member named 'send'\")) {\n    error=_(\"Wire.send() has been renamed Wire.write().\");\n    msg=_(\"\\nAs of Arduino 1.0, the Wire.send() function was renamed \" + \"to Wire.write() for consistency with other libraries.\\n\\n\");\n  }\n  if (error.trim().equals(\"'class TwoWire' has no member named 'receive'\")) {\n    error=_(\"Wire.receive() has been renamed Wire.read().\");\n    msg=_(\"\\nAs of Arduino 1.0, the Wire.receive() function was renamed \" + \"to Wire.read() for consistency with other libraries.\\n\\n\");\n  }\n  if (error.trim().equals(\"'Mouse' was not declared in this scope\")) {\n    error=_(\"'Mouse' only supported on the Arduino Leonardo\");\n  }\n  if (error.trim().equals(\"'Keyboard' was not declared in this scope\")) {\n    error=_(\"'Keyboard' only supported on the Arduino Leonardo\");\n  }\n  RunnerException e=null;\n  if (!sketchIsCompiled) {\n    e=placeException(error,pieces[1],PApplet.parseInt(pieces[2]) - 1);\n  }\n  if (e != null && !verbose) {\n    SketchCode code=sketch.getCode(e.getCodeIndex());\n    String fileName=(code.isExtension(\"ino\") || code.isExtension(\"pde\")) ? code.getPrettyName() : code.getFileName();\n    int lineNum=e.getCodeLine() + 1;\n    s=fileName + \":\" + lineNum+ \": error: \"+ error+ msg;\n  }\n  if (e != null) {\n    if (exception == null || exception.getMessage().equals(e.getMessage())) {\n      exception=e;\n      exception.hideStackTrace();\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 316,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5289,
        "startLineNumber" : 770,
        "startColumnNumber" : 32,
        "endLineNumber" : 885,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int i;\n  if (!verbose) {\n    String buildPath=prefs.get(\"build.path\");\n    while ((i=s.indexOf(buildPath + File.separator)) != -1) {\n      s=s.substring(0,i) + s.substring(i + (buildPath + File.separator).length());\n    }\n  }\n  String errorFormat=\"(.+\\\\.\\\\w+):(\\\\d+)(:\\\\d+)*:\\\\s*error:\\\\s*(.*)\\\\s*\";\n  String[] pieces=PApplet.match(s,errorFormat);\n  if (pieces != null) {\n    String error=pieces[pieces.length - 1], msg=\"\";\n    if (error.trim().equals(\"SPI.h: No such file or directory\")) {\n      error=_(\"Please import the SPI library from the Sketch > Import Library menu.\");\n      msg=_(\"\\nAs of Arduino 0019, the Ethernet library depends on the SPI library.\" + \"\\nYou appear to be using it or another library that depends on the SPI library.\\n\\n\");\n    }\n    if (error.trim().equals(\"'BYTE' was not declared in this scope\")) {\n      error=_(\"The 'BYTE' keyword is no longer supported.\");\n      msg=_(\"\\nAs of Arduino 1.0, the 'BYTE' keyword is no longer supported.\" + \"\\nPlease use Serial.write() instead.\\n\\n\");\n    }\n    if (error.trim().equals(\"no matching function for call to 'Server::Server(int)'\")) {\n      error=_(\"The Server class has been renamed EthernetServer.\");\n      msg=_(\"\\nAs of Arduino 1.0, the Server class in the Ethernet library \" + \"has been renamed to EthernetServer.\\n\\n\");\n    }\n    if (error.trim().equals(\"no matching function for call to 'Client::Client(byte [4], int)'\")) {\n      error=_(\"The Client class has been renamed EthernetClient.\");\n      msg=_(\"\\nAs of Arduino 1.0, the Client class in the Ethernet library \" + \"has been renamed to EthernetClient.\\n\\n\");\n    }\n    if (error.trim().equals(\"'Udp' was not declared in this scope\")) {\n      error=_(\"The Udp class has been renamed EthernetUdp.\");\n      msg=_(\"\\nAs of Arduino 1.0, the Udp class in the Ethernet library \" + \"has been renamed to EthernetUdp.\\n\\n\");\n    }\n    if (error.trim().equals(\"'class TwoWire' has no member named 'send'\")) {\n      error=_(\"Wire.send() has been renamed Wire.write().\");\n      msg=_(\"\\nAs of Arduino 1.0, the Wire.send() function was renamed \" + \"to Wire.write() for consistency with other libraries.\\n\\n\");\n    }\n    if (error.trim().equals(\"'class TwoWire' has no member named 'receive'\")) {\n      error=_(\"Wire.receive() has been renamed Wire.read().\");\n      msg=_(\"\\nAs of Arduino 1.0, the Wire.receive() function was renamed \" + \"to Wire.read() for consistency with other libraries.\\n\\n\");\n    }\n    if (error.trim().equals(\"'Mouse' was not declared in this scope\")) {\n      error=_(\"'Mouse' only supported on the Arduino Leonardo\");\n    }\n    if (error.trim().equals(\"'Keyboard' was not declared in this scope\")) {\n      error=_(\"'Keyboard' only supported on the Arduino Leonardo\");\n    }\n    RunnerException e=null;\n    if (!sketchIsCompiled) {\n      e=placeException(error,pieces[1],PApplet.parseInt(pieces[2]) - 1);\n    }\n    if (e != null && !verbose) {\n      SketchCode code=sketch.getCode(e.getCodeIndex());\n      String fileName=(code.isExtension(\"ino\") || code.isExtension(\"pde\")) ? code.getPrettyName() : code.getFileName();\n      int lineNum=e.getCodeLine() + 1;\n      s=fileName + \":\" + lineNum+ \": error: \"+ error+ msg;\n    }\n    if (e != null) {\n      if (exception == null || exception.getMessage().equals(e.getMessage())) {\n        exception=e;\n        exception.hideStackTrace();\n      }\n    }\n  }\n  if (s.contains(\"undefined reference to `SPIClass::begin()'\") && s.contains(\"libraries/Robot_Control\")) {\n    String error=_(\"Please import the SPI library from the Sketch > Import Library menu.\");\n    exception=new RunnerException(error);\n  }\n  if (s.contains(\"undefined reference to `Wire'\") && s.contains(\"libraries/Robot_Control\")) {\n    String error=_(\"Please import the Wire library from the Sketch > Import Library menu.\");\n    exception=new RunnerException(error);\n  }\n  System.err.print(s);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 449,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5586,
        "startLineNumber" : 764,
        "startColumnNumber" : 2,
        "endLineNumber" : 885,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Part of the MessageConsumer interface, this is called whenever a piece (usually a line) of error message is spewed out from the compiler. The errors are parsed for their contents and line number, which is then reported back to Editor.\n */\npublic void message(String s){\n  int i;\n  if (!verbose) {\n    String buildPath=prefs.get(\"build.path\");\n    while ((i=s.indexOf(buildPath + File.separator)) != -1) {\n      s=s.substring(0,i) + s.substring(i + (buildPath + File.separator).length());\n    }\n  }\n  String errorFormat=\"(.+\\\\.\\\\w+):(\\\\d+)(:\\\\d+)*:\\\\s*error:\\\\s*(.*)\\\\s*\";\n  String[] pieces=PApplet.match(s,errorFormat);\n  if (pieces != null) {\n    String error=pieces[pieces.length - 1], msg=\"\";\n    if (error.trim().equals(\"SPI.h: No such file or directory\")) {\n      error=_(\"Please import the SPI library from the Sketch > Import Library menu.\");\n      msg=_(\"\\nAs of Arduino 0019, the Ethernet library depends on the SPI library.\" + \"\\nYou appear to be using it or another library that depends on the SPI library.\\n\\n\");\n    }\n    if (error.trim().equals(\"'BYTE' was not declared in this scope\")) {\n      error=_(\"The 'BYTE' keyword is no longer supported.\");\n      msg=_(\"\\nAs of Arduino 1.0, the 'BYTE' keyword is no longer supported.\" + \"\\nPlease use Serial.write() instead.\\n\\n\");\n    }\n    if (error.trim().equals(\"no matching function for call to 'Server::Server(int)'\")) {\n      error=_(\"The Server class has been renamed EthernetServer.\");\n      msg=_(\"\\nAs of Arduino 1.0, the Server class in the Ethernet library \" + \"has been renamed to EthernetServer.\\n\\n\");\n    }\n    if (error.trim().equals(\"no matching function for call to 'Client::Client(byte [4], int)'\")) {\n      error=_(\"The Client class has been renamed EthernetClient.\");\n      msg=_(\"\\nAs of Arduino 1.0, the Client class in the Ethernet library \" + \"has been renamed to EthernetClient.\\n\\n\");\n    }\n    if (error.trim().equals(\"'Udp' was not declared in this scope\")) {\n      error=_(\"The Udp class has been renamed EthernetUdp.\");\n      msg=_(\"\\nAs of Arduino 1.0, the Udp class in the Ethernet library \" + \"has been renamed to EthernetUdp.\\n\\n\");\n    }\n    if (error.trim().equals(\"'class TwoWire' has no member named 'send'\")) {\n      error=_(\"Wire.send() has been renamed Wire.write().\");\n      msg=_(\"\\nAs of Arduino 1.0, the Wire.send() function was renamed \" + \"to Wire.write() for consistency with other libraries.\\n\\n\");\n    }\n    if (error.trim().equals(\"'class TwoWire' has no member named 'receive'\")) {\n      error=_(\"Wire.receive() has been renamed Wire.read().\");\n      msg=_(\"\\nAs of Arduino 1.0, the Wire.receive() function was renamed \" + \"to Wire.read() for consistency with other libraries.\\n\\n\");\n    }\n    if (error.trim().equals(\"'Mouse' was not declared in this scope\")) {\n      error=_(\"'Mouse' only supported on the Arduino Leonardo\");\n    }\n    if (error.trim().equals(\"'Keyboard' was not declared in this scope\")) {\n      error=_(\"'Keyboard' only supported on the Arduino Leonardo\");\n    }\n    RunnerException e=null;\n    if (!sketchIsCompiled) {\n      e=placeException(error,pieces[1],PApplet.parseInt(pieces[2]) - 1);\n    }\n    if (e != null && !verbose) {\n      SketchCode code=sketch.getCode(e.getCodeIndex());\n      String fileName=(code.isExtension(\"ino\") || code.isExtension(\"pde\")) ? code.getPrettyName() : code.getFileName();\n      int lineNum=e.getCodeLine() + 1;\n      s=fileName + \":\" + lineNum+ \": error: \"+ error+ msg;\n    }\n    if (e != null) {\n      if (exception == null || exception.getMessage().equals(e.getMessage())) {\n        exception=e;\n        exception.hideStackTrace();\n      }\n    }\n  }\n  if (s.contains(\"undefined reference to `SPIClass::begin()'\") && s.contains(\"libraries/Robot_Control\")) {\n    String error=_(\"Please import the SPI library from the Sketch > Import Library menu.\");\n    exception=new RunnerException(error);\n  }\n  if (s.contains(\"undefined reference to `Wire'\") && s.contains(\"libraries/Robot_Control\")) {\n    String error=_(\"Please import the Wire library from the Sketch > Import Library menu.\");\n    exception=new RunnerException(error);\n  }\n  System.err.print(s);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 458,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 859,
        "startColumnNumber" : 8,
        "endLineNumber" : 859,
        "endColumnNumber" : 123
      },
      "nodeContext" : "String fileName=(code.isExtension(\"ino\") || code.isExtension(\"pde\")) ? code.getPrettyName() : code.getFileName();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 859,
    "startColumnNumber" : 81,
    "endLineNumber" : 859,
    "endColumnNumber" : 101
  } ],
  "layoutRelationDataList" : [ ]
}