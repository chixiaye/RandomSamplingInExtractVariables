{
  "id" : 375,
  "expression" : "message instanceof Request",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-remoting/dubbo-remoting-api/src/main/java/org/apache/dubbo/remoting/transport/dispatcher/message/MessageOnlyChannelHandler.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "message instanceof Request",
    "nodeType" : "InstanceofExpression",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 44,
      "startColumnNumber" : 15,
      "endLineNumber" : 44,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 44,
        "startColumnNumber" : 15,
        "endLineNumber" : 44,
        "endColumnNumber" : 84
      },
      "nodeContext" : "message instanceof Request && t instanceof RejectedExecutionException",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 173,
        "startLineNumber" : 44,
        "startColumnNumber" : 12,
        "endLineNumber" : 47,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (message instanceof Request && t instanceof RejectedExecutionException) {\n  sendFeedback(channel,(Request)message,t);\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 313,
        "startLineNumber" : 43,
        "startColumnNumber" : 30,
        "endLineNumber" : 49,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (message instanceof Request && t instanceof RejectedExecutionException) {\n    sendFeedback(channel,(Request)message,t);\n    return;\n  }\n  throw new ExecutionException(message,channel,getClass() + \" error when process received event .\",t);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 333,
        "startLineNumber" : 43,
        "startColumnNumber" : 10,
        "endLineNumber" : 49,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (Throwable t) {\n  if (message instanceof Request && t instanceof RejectedExecutionException) {\n    sendFeedback(channel,(Request)message,t);\n    return;\n  }\n  throw new ExecutionException(message,channel,getClass() + \" error when process received event .\",t);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 38,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 455,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  executor.execute(new ChannelEventRunnable(channel,handler,ChannelState.RECEIVED,message));\n}\n catch (Throwable t) {\n  if (message instanceof Request && t instanceof RejectedExecutionException) {\n    sendFeedback(channel,(Request)message,t);\n    return;\n  }\n  throw new ExecutionException(message,channel,getClass() + \" error when process received event .\",t);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 53,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 544,
        "startLineNumber" : 39,
        "startColumnNumber" : 83,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ExecutorService executor=getPreferredExecutorService(message);\n  try {\n    executor.execute(new ChannelEventRunnable(channel,handler,ChannelState.RECEIVED,message));\n  }\n catch (  Throwable t) {\n    if (message instanceof Request && t instanceof RejectedExecutionException) {\n      sendFeedback(channel,(Request)message,t);\n      return;\n    }\n    throw new ExecutionException(message,channel,getClass() + \" error when process received event .\",t);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 637,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void received(Channel channel,Object message) throws RemotingException {\n  ExecutorService executor=getPreferredExecutorService(message);\n  try {\n    executor.execute(new ChannelEventRunnable(channel,handler,ChannelState.RECEIVED,message));\n  }\n catch (  Throwable t) {\n    if (message instanceof Request && t instanceof RejectedExecutionException) {\n      sendFeedback(channel,(Request)message,t);\n      return;\n    }\n    throw new ExecutionException(message,channel,getClass() + \" error when process received event .\",t);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 78,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 44,
        "startColumnNumber" : 15,
        "endLineNumber" : 44,
        "endColumnNumber" : 84
      },
      "nodeContext" : "message instanceof Request && t instanceof RejectedExecutionException",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 26,
    "startLineNumber" : 44,
    "startColumnNumber" : 15,
    "endLineNumber" : 44,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}