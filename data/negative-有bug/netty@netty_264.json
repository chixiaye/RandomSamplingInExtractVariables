{
  "id" : 264,
  "expression" : "EMPTY_BUFFER",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/buffer/src/test/java/io/netty/buffer/UnpooledTest.java",
  "occurrences" : 28,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "EMPTY_BUFFER",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 196,
      "startColumnNumber" : 29,
      "endLineNumber" : 196,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 196,
        "startColumnNumber" : 8,
        "endLineNumber" : 196,
        "endColumnNumber" : 70
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 196,
        "startColumnNumber" : 8,
        "endLineNumber" : 196,
        "endColumnNumber" : 71
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2191,
        "startLineNumber" : 195,
        "startColumnNumber" : 58,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2256,
        "startLineNumber" : 194,
        "startColumnNumber" : 4,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldReturnEmptyBufferWhenLengthIsZero(){\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 289,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 196,
        "startColumnNumber" : 8,
        "endLineNumber" : 196,
        "endColumnNumber" : 71
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "io.netty.buffer.ByteBuf"
  }, {
    "nodeContext" : "EMPTY_BUFFER",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 197,
      "startColumnNumber" : 29,
      "endLineNumber" : 197,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 197,
        "startColumnNumber" : 8,
        "endLineNumber" : 197,
        "endColumnNumber" : 76
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 197,
        "startColumnNumber" : 8,
        "endLineNumber" : 197,
        "endColumnNumber" : 77
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2191,
        "startLineNumber" : 195,
        "startColumnNumber" : 58,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2256,
        "startLineNumber" : 194,
        "startColumnNumber" : 4,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldReturnEmptyBufferWhenLengthIsZero(){\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 289,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 197,
        "startColumnNumber" : 8,
        "endLineNumber" : 197,
        "endColumnNumber" : 77
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "io.netty.buffer.ByteBuf"
  }, {
    "nodeContext" : "EMPTY_BUFFER",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 198,
      "startColumnNumber" : 29,
      "endLineNumber" : 198,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 198,
        "startColumnNumber" : 8,
        "endLineNumber" : 198,
        "endColumnNumber" : 76
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 198,
        "startColumnNumber" : 8,
        "endLineNumber" : 198,
        "endColumnNumber" : 77
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2191,
        "startLineNumber" : 195,
        "startColumnNumber" : 58,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2256,
        "startLineNumber" : 194,
        "startColumnNumber" : 4,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldReturnEmptyBufferWhenLengthIsZero(){\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 289,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 198,
        "startColumnNumber" : 8,
        "endLineNumber" : 198,
        "endColumnNumber" : 77
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "io.netty.buffer.ByteBuf"
  }, {
    "nodeContext" : "EMPTY_BUFFER",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 199,
      "startColumnNumber" : 29,
      "endLineNumber" : 199,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 199,
        "startColumnNumber" : 8,
        "endLineNumber" : 199,
        "endColumnNumber" : 87
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 199,
        "startColumnNumber" : 8,
        "endLineNumber" : 199,
        "endColumnNumber" : 88
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2191,
        "startLineNumber" : 195,
        "startColumnNumber" : 58,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2256,
        "startLineNumber" : 194,
        "startColumnNumber" : 4,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldReturnEmptyBufferWhenLengthIsZero(){\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 289,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 199,
        "startColumnNumber" : 8,
        "endLineNumber" : 199,
        "endColumnNumber" : 88
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "io.netty.buffer.ByteBuf"
  }, {
    "nodeContext" : "EMPTY_BUFFER",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 200,
      "startColumnNumber" : 29,
      "endLineNumber" : 200,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 200,
        "startColumnNumber" : 8,
        "endLineNumber" : 200,
        "endColumnNumber" : 71
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 200,
        "startColumnNumber" : 8,
        "endLineNumber" : 200,
        "endColumnNumber" : 72
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2191,
        "startLineNumber" : 195,
        "startColumnNumber" : 58,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2256,
        "startLineNumber" : 194,
        "startColumnNumber" : 4,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldReturnEmptyBufferWhenLengthIsZero(){\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 289,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 200,
        "startColumnNumber" : 8,
        "endLineNumber" : 200,
        "endColumnNumber" : 72
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "io.netty.buffer.ByteBuf"
  }, {
    "nodeContext" : "EMPTY_BUFFER",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 200,
      "startColumnNumber" : 57,
      "endLineNumber" : 200,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 200,
        "startColumnNumber" : 43,
        "endLineNumber" : 200,
        "endColumnNumber" : 70
      },
      "nodeContext" : "wrappedBuffer(EMPTY_BUFFER)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 200,
        "startColumnNumber" : 8,
        "endLineNumber" : 200,
        "endColumnNumber" : 71
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 200,
        "startColumnNumber" : 8,
        "endLineNumber" : 200,
        "endColumnNumber" : 72
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2191,
        "startLineNumber" : 195,
        "startColumnNumber" : 58,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2256,
        "startLineNumber" : 194,
        "startColumnNumber" : 4,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldReturnEmptyBufferWhenLengthIsZero(){\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 289,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 200,
        "startColumnNumber" : 8,
        "endLineNumber" : 200,
        "endColumnNumber" : 72
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "io.netty.buffer.ByteBuf"
  }, {
    "nodeContext" : "EMPTY_BUFFER",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 201,
      "startColumnNumber" : 29,
      "endLineNumber" : 201,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 201,
        "startColumnNumber" : 8,
        "endLineNumber" : 201,
        "endColumnNumber" : 73
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 201,
        "startColumnNumber" : 8,
        "endLineNumber" : 201,
        "endColumnNumber" : 74
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2191,
        "startLineNumber" : 195,
        "startColumnNumber" : 58,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2256,
        "startLineNumber" : 194,
        "startColumnNumber" : 4,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldReturnEmptyBufferWhenLengthIsZero(){\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 289,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 201,
        "startColumnNumber" : 8,
        "endLineNumber" : 201,
        "endColumnNumber" : 74
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "io.netty.buffer.ByteBuf"
  }, {
    "nodeContext" : "EMPTY_BUFFER",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 202,
      "startColumnNumber" : 29,
      "endLineNumber" : 202,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 202,
        "startColumnNumber" : 8,
        "endLineNumber" : 202,
        "endColumnNumber" : 87
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 202,
        "startColumnNumber" : 8,
        "endLineNumber" : 202,
        "endColumnNumber" : 88
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2191,
        "startLineNumber" : 195,
        "startColumnNumber" : 58,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2256,
        "startLineNumber" : 194,
        "startColumnNumber" : 4,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldReturnEmptyBufferWhenLengthIsZero(){\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 289,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 202,
        "startColumnNumber" : 8,
        "endLineNumber" : 202,
        "endColumnNumber" : 88
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "io.netty.buffer.ByteBuf"
  }, {
    "nodeContext" : "EMPTY_BUFFER",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 203,
      "startColumnNumber" : 29,
      "endLineNumber" : 203,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 203,
        "startColumnNumber" : 8,
        "endLineNumber" : 203,
        "endColumnNumber" : 77
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 203,
        "startColumnNumber" : 8,
        "endLineNumber" : 203,
        "endColumnNumber" : 78
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2191,
        "startLineNumber" : 195,
        "startColumnNumber" : 58,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2256,
        "startLineNumber" : 194,
        "startColumnNumber" : 4,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldReturnEmptyBufferWhenLengthIsZero(){\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 289,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 203,
        "startColumnNumber" : 8,
        "endLineNumber" : 203,
        "endColumnNumber" : 78
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "io.netty.buffer.ByteBuf"
  }, {
    "nodeContext" : "EMPTY_BUFFER",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 204,
      "startColumnNumber" : 29,
      "endLineNumber" : 204,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 204,
        "startColumnNumber" : 8,
        "endLineNumber" : 204,
        "endColumnNumber" : 102
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 204,
        "startColumnNumber" : 8,
        "endLineNumber" : 204,
        "endColumnNumber" : 103
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2191,
        "startLineNumber" : 195,
        "startColumnNumber" : 58,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2256,
        "startLineNumber" : 194,
        "startColumnNumber" : 4,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldReturnEmptyBufferWhenLengthIsZero(){\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 289,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 204,
        "startColumnNumber" : 8,
        "endLineNumber" : 204,
        "endColumnNumber" : 103
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    },
    "tokenLength" : 2,
    "type" : "io.netty.buffer.ByteBuf"
  }, {
    "nodeContext" : "EMPTY_BUFFER",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 205,
      "startColumnNumber" : 29,
      "endLineNumber" : 205,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 205,
        "startColumnNumber" : 8,
        "endLineNumber" : 205,
        "endColumnNumber" : 105
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 205,
        "startColumnNumber" : 8,
        "endLineNumber" : 205,
        "endColumnNumber" : 106
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2191,
        "startLineNumber" : 195,
        "startColumnNumber" : 58,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2256,
        "startLineNumber" : 194,
        "startColumnNumber" : 4,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldReturnEmptyBufferWhenLengthIsZero(){\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 289,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 205,
        "startColumnNumber" : 8,
        "endLineNumber" : 205,
        "endColumnNumber" : 106
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "io.netty.buffer.ByteBuf"
  }, {
    "nodeContext" : "EMPTY_BUFFER",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 206,
      "startColumnNumber" : 29,
      "endLineNumber" : 206,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 206,
        "startColumnNumber" : 8,
        "endLineNumber" : 206,
        "endColumnNumber" : 74
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 206,
        "startColumnNumber" : 8,
        "endLineNumber" : 206,
        "endColumnNumber" : 75
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2191,
        "startLineNumber" : 195,
        "startColumnNumber" : 58,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2256,
        "startLineNumber" : 194,
        "startColumnNumber" : 4,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldReturnEmptyBufferWhenLengthIsZero(){\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 289,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 206,
        "startColumnNumber" : 8,
        "endLineNumber" : 206,
        "endColumnNumber" : 75
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "io.netty.buffer.ByteBuf"
  }, {
    "nodeContext" : "EMPTY_BUFFER",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 207,
      "startColumnNumber" : 29,
      "endLineNumber" : 207,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 207,
        "startColumnNumber" : 8,
        "endLineNumber" : 207,
        "endColumnNumber" : 86
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 207,
        "startColumnNumber" : 8,
        "endLineNumber" : 207,
        "endColumnNumber" : 87
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2191,
        "startLineNumber" : 195,
        "startColumnNumber" : 58,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2256,
        "startLineNumber" : 194,
        "startColumnNumber" : 4,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldReturnEmptyBufferWhenLengthIsZero(){\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 289,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 207,
        "startColumnNumber" : 8,
        "endLineNumber" : 207,
        "endColumnNumber" : 87
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    },
    "tokenLength" : 2,
    "type" : "io.netty.buffer.ByteBuf"
  }, {
    "nodeContext" : "EMPTY_BUFFER",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 208,
      "startColumnNumber" : 29,
      "endLineNumber" : 208,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 208,
        "startColumnNumber" : 8,
        "endLineNumber" : 208,
        "endColumnNumber" : 79
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 208,
        "startColumnNumber" : 8,
        "endLineNumber" : 208,
        "endColumnNumber" : 80
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2191,
        "startLineNumber" : 195,
        "startColumnNumber" : 58,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2256,
        "startLineNumber" : 194,
        "startColumnNumber" : 4,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldReturnEmptyBufferWhenLengthIsZero(){\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 289,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 208,
        "startColumnNumber" : 8,
        "endLineNumber" : 208,
        "endColumnNumber" : 80
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "io.netty.buffer.ByteBuf"
  }, {
    "nodeContext" : "EMPTY_BUFFER",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 210,
      "startColumnNumber" : 29,
      "endLineNumber" : 210,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 210,
        "startColumnNumber" : 8,
        "endLineNumber" : 210,
        "endColumnNumber" : 69
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 210,
        "startColumnNumber" : 8,
        "endLineNumber" : 210,
        "endColumnNumber" : 70
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2191,
        "startLineNumber" : 195,
        "startColumnNumber" : 58,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2256,
        "startLineNumber" : 194,
        "startColumnNumber" : 4,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldReturnEmptyBufferWhenLengthIsZero(){\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 289,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 210,
        "startColumnNumber" : 8,
        "endLineNumber" : 210,
        "endColumnNumber" : 70
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "io.netty.buffer.ByteBuf"
  }, {
    "nodeContext" : "EMPTY_BUFFER",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 211,
      "startColumnNumber" : 29,
      "endLineNumber" : 211,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 211,
        "startColumnNumber" : 8,
        "endLineNumber" : 211,
        "endColumnNumber" : 75
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 211,
        "startColumnNumber" : 8,
        "endLineNumber" : 211,
        "endColumnNumber" : 76
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2191,
        "startLineNumber" : 195,
        "startColumnNumber" : 58,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2256,
        "startLineNumber" : 194,
        "startColumnNumber" : 4,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldReturnEmptyBufferWhenLengthIsZero(){\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 289,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 211,
        "startColumnNumber" : 8,
        "endLineNumber" : 211,
        "endColumnNumber" : 76
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "io.netty.buffer.ByteBuf"
  }, {
    "nodeContext" : "EMPTY_BUFFER",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 212,
      "startColumnNumber" : 29,
      "endLineNumber" : 212,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 212,
        "startColumnNumber" : 8,
        "endLineNumber" : 212,
        "endColumnNumber" : 75
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 212,
        "startColumnNumber" : 8,
        "endLineNumber" : 212,
        "endColumnNumber" : 76
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2191,
        "startLineNumber" : 195,
        "startColumnNumber" : 58,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2256,
        "startLineNumber" : 194,
        "startColumnNumber" : 4,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldReturnEmptyBufferWhenLengthIsZero(){\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 289,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 212,
        "startColumnNumber" : 8,
        "endLineNumber" : 212,
        "endColumnNumber" : 76
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "io.netty.buffer.ByteBuf"
  }, {
    "nodeContext" : "EMPTY_BUFFER",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 213,
      "startColumnNumber" : 29,
      "endLineNumber" : 213,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 213,
        "startColumnNumber" : 8,
        "endLineNumber" : 213,
        "endColumnNumber" : 86
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 213,
        "startColumnNumber" : 8,
        "endLineNumber" : 213,
        "endColumnNumber" : 87
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2191,
        "startLineNumber" : 195,
        "startColumnNumber" : 58,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2256,
        "startLineNumber" : 194,
        "startColumnNumber" : 4,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldReturnEmptyBufferWhenLengthIsZero(){\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 289,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 213,
        "startColumnNumber" : 8,
        "endLineNumber" : 213,
        "endColumnNumber" : 87
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "io.netty.buffer.ByteBuf"
  }, {
    "nodeContext" : "EMPTY_BUFFER",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 214,
      "startColumnNumber" : 29,
      "endLineNumber" : 214,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 214,
        "startColumnNumber" : 8,
        "endLineNumber" : 214,
        "endColumnNumber" : 70
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 214,
        "startColumnNumber" : 8,
        "endLineNumber" : 214,
        "endColumnNumber" : 71
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2191,
        "startLineNumber" : 195,
        "startColumnNumber" : 58,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2256,
        "startLineNumber" : 194,
        "startColumnNumber" : 4,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldReturnEmptyBufferWhenLengthIsZero(){\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 289,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 214,
        "startColumnNumber" : 8,
        "endLineNumber" : 214,
        "endColumnNumber" : 71
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "io.netty.buffer.ByteBuf"
  }, {
    "nodeContext" : "EMPTY_BUFFER",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 214,
      "startColumnNumber" : 56,
      "endLineNumber" : 214,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 214,
        "startColumnNumber" : 43,
        "endLineNumber" : 214,
        "endColumnNumber" : 69
      },
      "nodeContext" : "copiedBuffer(EMPTY_BUFFER)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 214,
        "startColumnNumber" : 8,
        "endLineNumber" : 214,
        "endColumnNumber" : 70
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 214,
        "startColumnNumber" : 8,
        "endLineNumber" : 214,
        "endColumnNumber" : 71
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2191,
        "startLineNumber" : 195,
        "startColumnNumber" : 58,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2256,
        "startLineNumber" : 194,
        "startColumnNumber" : 4,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldReturnEmptyBufferWhenLengthIsZero(){\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 289,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 214,
        "startColumnNumber" : 8,
        "endLineNumber" : 214,
        "endColumnNumber" : 71
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "io.netty.buffer.ByteBuf"
  }, {
    "nodeContext" : "EMPTY_BUFFER",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 215,
      "startColumnNumber" : 19,
      "endLineNumber" : 215,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 215,
        "startColumnNumber" : 8,
        "endLineNumber" : 215,
        "endColumnNumber" : 62
      },
      "nodeContext" : "assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 215,
        "startColumnNumber" : 8,
        "endLineNumber" : 215,
        "endColumnNumber" : 63
      },
      "nodeContext" : "assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2191,
        "startLineNumber" : 195,
        "startColumnNumber" : 58,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2256,
        "startLineNumber" : 194,
        "startColumnNumber" : 4,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldReturnEmptyBufferWhenLengthIsZero(){\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 289,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 215,
        "startColumnNumber" : 8,
        "endLineNumber" : 215,
        "endColumnNumber" : 63
      },
      "nodeContext" : "assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "io.netty.buffer.ByteBuf"
  }, {
    "nodeContext" : "EMPTY_BUFFER",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 216,
      "startColumnNumber" : 29,
      "endLineNumber" : 216,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 216,
        "startColumnNumber" : 8,
        "endLineNumber" : 216,
        "endColumnNumber" : 86
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 216,
        "startColumnNumber" : 8,
        "endLineNumber" : 216,
        "endColumnNumber" : 87
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2191,
        "startLineNumber" : 195,
        "startColumnNumber" : 58,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2256,
        "startLineNumber" : 194,
        "startColumnNumber" : 4,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldReturnEmptyBufferWhenLengthIsZero(){\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 289,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 216,
        "startColumnNumber" : 8,
        "endLineNumber" : 216,
        "endColumnNumber" : 87
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "io.netty.buffer.ByteBuf"
  }, {
    "nodeContext" : "EMPTY_BUFFER",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 217,
      "startColumnNumber" : 29,
      "endLineNumber" : 217,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 217,
        "startColumnNumber" : 8,
        "endLineNumber" : 217,
        "endColumnNumber" : 76
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 217,
        "startColumnNumber" : 8,
        "endLineNumber" : 217,
        "endColumnNumber" : 77
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2191,
        "startLineNumber" : 195,
        "startColumnNumber" : 58,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2256,
        "startLineNumber" : 194,
        "startColumnNumber" : 4,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldReturnEmptyBufferWhenLengthIsZero(){\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 289,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 217,
        "startColumnNumber" : 8,
        "endLineNumber" : 217,
        "endColumnNumber" : 77
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "io.netty.buffer.ByteBuf"
  }, {
    "nodeContext" : "EMPTY_BUFFER",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 218,
      "startColumnNumber" : 29,
      "endLineNumber" : 218,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 218,
        "startColumnNumber" : 8,
        "endLineNumber" : 218,
        "endColumnNumber" : 101
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 218,
        "startColumnNumber" : 8,
        "endLineNumber" : 218,
        "endColumnNumber" : 102
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2191,
        "startLineNumber" : 195,
        "startColumnNumber" : 58,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2256,
        "startLineNumber" : 194,
        "startColumnNumber" : 4,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldReturnEmptyBufferWhenLengthIsZero(){\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 289,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 218,
        "startColumnNumber" : 8,
        "endLineNumber" : 218,
        "endColumnNumber" : 102
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    },
    "tokenLength" : 2,
    "type" : "io.netty.buffer.ByteBuf"
  }, {
    "nodeContext" : "EMPTY_BUFFER",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 219,
      "startColumnNumber" : 29,
      "endLineNumber" : 219,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 219,
        "startColumnNumber" : 8,
        "endLineNumber" : 219,
        "endColumnNumber" : 104
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 219,
        "startColumnNumber" : 8,
        "endLineNumber" : 219,
        "endColumnNumber" : 105
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2191,
        "startLineNumber" : 195,
        "startColumnNumber" : 58,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2256,
        "startLineNumber" : 194,
        "startColumnNumber" : 4,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldReturnEmptyBufferWhenLengthIsZero(){\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 289,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 219,
        "startColumnNumber" : 8,
        "endLineNumber" : 219,
        "endColumnNumber" : 105
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "io.netty.buffer.ByteBuf"
  }, {
    "nodeContext" : "EMPTY_BUFFER",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 220,
      "startColumnNumber" : 29,
      "endLineNumber" : 220,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 220,
        "startColumnNumber" : 8,
        "endLineNumber" : 220,
        "endColumnNumber" : 73
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 220,
        "startColumnNumber" : 8,
        "endLineNumber" : 220,
        "endColumnNumber" : 74
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2191,
        "startLineNumber" : 195,
        "startColumnNumber" : 58,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2256,
        "startLineNumber" : 194,
        "startColumnNumber" : 4,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldReturnEmptyBufferWhenLengthIsZero(){\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 289,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 220,
        "startColumnNumber" : 8,
        "endLineNumber" : 220,
        "endColumnNumber" : 74
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "io.netty.buffer.ByteBuf"
  }, {
    "nodeContext" : "EMPTY_BUFFER",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 221,
      "startColumnNumber" : 29,
      "endLineNumber" : 221,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 221,
        "startColumnNumber" : 8,
        "endLineNumber" : 221,
        "endColumnNumber" : 85
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 221,
        "startColumnNumber" : 8,
        "endLineNumber" : 221,
        "endColumnNumber" : 86
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2191,
        "startLineNumber" : 195,
        "startColumnNumber" : 58,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2256,
        "startLineNumber" : 194,
        "startColumnNumber" : 4,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldReturnEmptyBufferWhenLengthIsZero(){\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 289,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 221,
        "startColumnNumber" : 8,
        "endLineNumber" : 221,
        "endColumnNumber" : 86
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    },
    "tokenLength" : 2,
    "type" : "io.netty.buffer.ByteBuf"
  }, {
    "nodeContext" : "EMPTY_BUFFER",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 222,
      "startColumnNumber" : 29,
      "endLineNumber" : 222,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 222,
        "startColumnNumber" : 8,
        "endLineNumber" : 222,
        "endColumnNumber" : 78
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 222,
        "startColumnNumber" : 8,
        "endLineNumber" : 222,
        "endColumnNumber" : 79
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2191,
        "startLineNumber" : 195,
        "startColumnNumber" : 58,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 283,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2256,
        "startLineNumber" : 194,
        "startColumnNumber" : 4,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldReturnEmptyBufferWhenLengthIsZero(){\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BUFFER));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,wrappedBuffer(buffer(0),buffer(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],0,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[8],8,0));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocateDirect(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BUFFER));\n  assertSame(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTES_2D));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new byte[][]{EMPTY_BYTES}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFFERS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuffer[]{ByteBuffer.allocate(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(ByteBuffer.allocate(0),ByteBuffer.allocate(0)));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(EMPTY_BYTE_BUFS));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(new ByteBuf[]{buffer(0)}));\n  assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 289,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 222,
        "startColumnNumber" : 8,
        "endLineNumber" : 222,
        "endColumnNumber" : 79
      },
      "nodeContext" : "assertSameAndRelease(EMPTY_BUFFER,copiedBuffer(buffer(0),buffer(0)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "io.netty.buffer.ByteBuf"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 196,
    "startColumnNumber" : 29,
    "endLineNumber" : 196,
    "endColumnNumber" : 41
  }, {
    "charLength" : 12,
    "startLineNumber" : 197,
    "startColumnNumber" : 29,
    "endLineNumber" : 197,
    "endColumnNumber" : 41
  }, {
    "charLength" : 12,
    "startLineNumber" : 198,
    "startColumnNumber" : 29,
    "endLineNumber" : 198,
    "endColumnNumber" : 41
  }, {
    "charLength" : 12,
    "startLineNumber" : 199,
    "startColumnNumber" : 29,
    "endLineNumber" : 199,
    "endColumnNumber" : 41
  }, {
    "charLength" : 12,
    "startLineNumber" : 200,
    "startColumnNumber" : 29,
    "endLineNumber" : 200,
    "endColumnNumber" : 41
  }, {
    "charLength" : 12,
    "startLineNumber" : 200,
    "startColumnNumber" : 57,
    "endLineNumber" : 200,
    "endColumnNumber" : 69
  }, {
    "charLength" : 12,
    "startLineNumber" : 201,
    "startColumnNumber" : 29,
    "endLineNumber" : 201,
    "endColumnNumber" : 41
  }, {
    "charLength" : 12,
    "startLineNumber" : 202,
    "startColumnNumber" : 29,
    "endLineNumber" : 202,
    "endColumnNumber" : 41
  }, {
    "charLength" : 12,
    "startLineNumber" : 203,
    "startColumnNumber" : 29,
    "endLineNumber" : 203,
    "endColumnNumber" : 41
  }, {
    "charLength" : 12,
    "startLineNumber" : 204,
    "startColumnNumber" : 29,
    "endLineNumber" : 204,
    "endColumnNumber" : 41
  }, {
    "charLength" : 12,
    "startLineNumber" : 205,
    "startColumnNumber" : 29,
    "endLineNumber" : 205,
    "endColumnNumber" : 41
  }, {
    "charLength" : 12,
    "startLineNumber" : 206,
    "startColumnNumber" : 29,
    "endLineNumber" : 206,
    "endColumnNumber" : 41
  }, {
    "charLength" : 12,
    "startLineNumber" : 207,
    "startColumnNumber" : 29,
    "endLineNumber" : 207,
    "endColumnNumber" : 41
  }, {
    "charLength" : 12,
    "startLineNumber" : 208,
    "startColumnNumber" : 29,
    "endLineNumber" : 208,
    "endColumnNumber" : 41
  }, {
    "charLength" : 12,
    "startLineNumber" : 210,
    "startColumnNumber" : 29,
    "endLineNumber" : 210,
    "endColumnNumber" : 41
  }, {
    "charLength" : 12,
    "startLineNumber" : 211,
    "startColumnNumber" : 29,
    "endLineNumber" : 211,
    "endColumnNumber" : 41
  }, {
    "charLength" : 12,
    "startLineNumber" : 212,
    "startColumnNumber" : 29,
    "endLineNumber" : 212,
    "endColumnNumber" : 41
  }, {
    "charLength" : 12,
    "startLineNumber" : 213,
    "startColumnNumber" : 29,
    "endLineNumber" : 213,
    "endColumnNumber" : 41
  }, {
    "charLength" : 12,
    "startLineNumber" : 214,
    "startColumnNumber" : 29,
    "endLineNumber" : 214,
    "endColumnNumber" : 41
  }, {
    "charLength" : 12,
    "startLineNumber" : 214,
    "startColumnNumber" : 56,
    "endLineNumber" : 214,
    "endColumnNumber" : 68
  }, {
    "charLength" : 12,
    "startLineNumber" : 215,
    "startColumnNumber" : 19,
    "endLineNumber" : 215,
    "endColumnNumber" : 31
  }, {
    "charLength" : 12,
    "startLineNumber" : 216,
    "startColumnNumber" : 29,
    "endLineNumber" : 216,
    "endColumnNumber" : 41
  }, {
    "charLength" : 12,
    "startLineNumber" : 217,
    "startColumnNumber" : 29,
    "endLineNumber" : 217,
    "endColumnNumber" : 41
  }, {
    "charLength" : 12,
    "startLineNumber" : 218,
    "startColumnNumber" : 29,
    "endLineNumber" : 218,
    "endColumnNumber" : 41
  }, {
    "charLength" : 12,
    "startLineNumber" : 219,
    "startColumnNumber" : 29,
    "endLineNumber" : 219,
    "endColumnNumber" : 41
  }, {
    "charLength" : 12,
    "startLineNumber" : 220,
    "startColumnNumber" : 29,
    "endLineNumber" : 220,
    "endColumnNumber" : 41
  }, {
    "charLength" : 12,
    "startLineNumber" : 221,
    "startColumnNumber" : 29,
    "endLineNumber" : 221,
    "endColumnNumber" : 41
  }, {
    "charLength" : 12,
    "startLineNumber" : 222,
    "startColumnNumber" : 29,
    "endLineNumber" : 222,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 24,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 25,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 26,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 27,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 24,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 25,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 26,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 27,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 24,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 25,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 26,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 27,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 24,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 25,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 26,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 27,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 0
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 24,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 25,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 26,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 27,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 16,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 17,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 18,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 19,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 20,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 21,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 22,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 23,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 24,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 25,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 26,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 27,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 24,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 25,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 26,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 27,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 24,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 25,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 26,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 27,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 24,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 25,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 26,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 27,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 24,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 25,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 26,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 27,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 24,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 25,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 26,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 27,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 24,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 25,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 26,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 27,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 24,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 25,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 26,
    "layout" : 2
  }, {
    "firstKey" : 12,
    "secondKey" : 27,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 24,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 25,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 26,
    "layout" : 2
  }, {
    "firstKey" : 13,
    "secondKey" : 27,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 24,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 25,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 26,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 27,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 24,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 25,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 26,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 27,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 24,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 25,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 26,
    "layout" : 2
  }, {
    "firstKey" : 16,
    "secondKey" : 27,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 24,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 25,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 26,
    "layout" : 2
  }, {
    "firstKey" : 17,
    "secondKey" : 27,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 19,
    "layout" : 0
  }, {
    "firstKey" : 18,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 24,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 25,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 26,
    "layout" : 2
  }, {
    "firstKey" : 18,
    "secondKey" : 27,
    "layout" : 2
  }, {
    "firstKey" : 19,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 19,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 19,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 19,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 19,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 19,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 19,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 19,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 19,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 19,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 19,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 19,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 19,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 19,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 19,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 19,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 19,
    "secondKey" : 16,
    "layout" : 3
  }, {
    "firstKey" : 19,
    "secondKey" : 17,
    "layout" : 3
  }, {
    "firstKey" : 19,
    "secondKey" : 18,
    "layout" : 1
  }, {
    "firstKey" : 19,
    "secondKey" : 20,
    "layout" : 3
  }, {
    "firstKey" : 19,
    "secondKey" : 21,
    "layout" : 3
  }, {
    "firstKey" : 19,
    "secondKey" : 22,
    "layout" : 3
  }, {
    "firstKey" : 19,
    "secondKey" : 23,
    "layout" : 3
  }, {
    "firstKey" : 19,
    "secondKey" : 24,
    "layout" : 3
  }, {
    "firstKey" : 19,
    "secondKey" : 25,
    "layout" : 3
  }, {
    "firstKey" : 19,
    "secondKey" : 26,
    "layout" : 3
  }, {
    "firstKey" : 19,
    "secondKey" : 27,
    "layout" : 3
  }, {
    "firstKey" : 20,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 24,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 25,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 26,
    "layout" : 2
  }, {
    "firstKey" : 20,
    "secondKey" : 27,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 24,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 25,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 26,
    "layout" : 2
  }, {
    "firstKey" : 21,
    "secondKey" : 27,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 24,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 25,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 26,
    "layout" : 2
  }, {
    "firstKey" : 22,
    "secondKey" : 27,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 24,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 25,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 26,
    "layout" : 2
  }, {
    "firstKey" : 23,
    "secondKey" : 27,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 25,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 26,
    "layout" : 2
  }, {
    "firstKey" : 24,
    "secondKey" : 27,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 24,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 26,
    "layout" : 2
  }, {
    "firstKey" : 25,
    "secondKey" : 27,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 24,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 25,
    "layout" : 2
  }, {
    "firstKey" : 26,
    "secondKey" : 27,
    "layout" : 2
  }, {
    "firstKey" : 27,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 27,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 27,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 27,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 27,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 27,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 27,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 27,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 27,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 27,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 27,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 27,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 27,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 27,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 27,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 27,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 27,
    "secondKey" : 16,
    "layout" : 2
  }, {
    "firstKey" : 27,
    "secondKey" : 17,
    "layout" : 2
  }, {
    "firstKey" : 27,
    "secondKey" : 18,
    "layout" : 2
  }, {
    "firstKey" : 27,
    "secondKey" : 19,
    "layout" : 2
  }, {
    "firstKey" : 27,
    "secondKey" : 20,
    "layout" : 2
  }, {
    "firstKey" : 27,
    "secondKey" : 21,
    "layout" : 2
  }, {
    "firstKey" : 27,
    "secondKey" : 22,
    "layout" : 2
  }, {
    "firstKey" : 27,
    "secondKey" : 23,
    "layout" : 2
  }, {
    "firstKey" : 27,
    "secondKey" : 24,
    "layout" : 2
  }, {
    "firstKey" : 27,
    "secondKey" : 25,
    "layout" : 2
  }, {
    "firstKey" : 27,
    "secondKey" : 26,
    "layout" : 2
  } ]
}