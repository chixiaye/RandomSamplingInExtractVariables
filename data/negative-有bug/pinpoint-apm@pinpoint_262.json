{
  "id" : 262,
  "expression" : "traceInText",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/test/src/main/java/com/navercorp/pinpoint/test/plugin/PinpointPluginTestStatement.java",
  "occurrences" : 7,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "traceInText",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 233,
      "startColumnNumber" : 63,
      "endLineNumber" : 233,
      "endColumnNumber" : 74
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ArrayCreation,dimensions]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 233,
        "startColumnNumber" : 63,
        "endLineNumber" : 233,
        "endColumnNumber" : 81
      },
      "nodeContext" : "traceInText.size()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 233,
        "startColumnNumber" : 41,
        "endLineNumber" : 233,
        "endColumnNumber" : 82
      },
      "nodeContext" : "new StackTraceElement[traceInText.size()]",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 233,
        "startColumnNumber" : 28,
        "endLineNumber" : 233,
        "endColumnNumber" : 82
      },
      "nodeContext" : "stackTrace=new StackTraceElement[traceInText.size()]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 233,
        "startColumnNumber" : 8,
        "endLineNumber" : 233,
        "endColumnNumber" : 83
      },
      "nodeContext" : "StackTraceElement[] stackTrace=new StackTraceElement[traceInText.size()];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1085,
        "startLineNumber" : 232,
        "startColumnNumber" : 117,
        "endLineNumber" : 255,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StackTraceElement[] stackTrace=new StackTraceElement[traceInText.size()];\n  for (int i=0; i < traceInText.size(); i++) {\n    String trace=traceInText.get(i);\n    if (trace.equals(\"$CAUSE$\")) {\n      PinpointPluginTestException cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()));\n      return new PinpointPluginTestException(exceptionClass + \": \" + message,Arrays.copyOf(stackTrace,i),cause);\n    }\n    String[] tokens=trace.split(\",\");\n    if (tokens.length != 4) {\n      System.out.println(\"Unexpected trace string: \" + trace);\n      stackTrace[i]=new StackTraceElement(trace,\"\",null,-1);\n    }\n else {\n      stackTrace[i]=new StackTraceElement(tokens[0],tokens[1],tokens[2],Integer.parseInt(tokens[3]));\n    }\n  }\n  return new PinpointPluginTestException(exceptionClass + \": \" + message,stackTrace);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 160,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1198,
        "startLineNumber" : 232,
        "startColumnNumber" : 4,
        "endLineNumber" : 255,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private PinpointPluginTestException toException(String message,String exceptionClass,List<String> traceInText){\n  StackTraceElement[] stackTrace=new StackTraceElement[traceInText.size()];\n  for (int i=0; i < traceInText.size(); i++) {\n    String trace=traceInText.get(i);\n    if (trace.equals(\"$CAUSE$\")) {\n      PinpointPluginTestException cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()));\n      return new PinpointPluginTestException(exceptionClass + \": \" + message,Arrays.copyOf(stackTrace,i),cause);\n    }\n    String[] tokens=trace.split(\",\");\n    if (tokens.length != 4) {\n      System.out.println(\"Unexpected trace string: \" + trace);\n      stackTrace[i]=new StackTraceElement(trace,\"\",null,-1);\n    }\n else {\n      stackTrace[i]=new StackTraceElement(tokens[0],tokens[1],tokens[2],Integer.parseInt(tokens[3]));\n    }\n  }\n  return new PinpointPluginTestException(exceptionClass + \": \" + message,stackTrace);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 233,
        "startColumnNumber" : 8,
        "endLineNumber" : 233,
        "endColumnNumber" : 83
      },
      "nodeContext" : "StackTraceElement[] stackTrace=new StackTraceElement[traceInText.size()];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.lang.String>"
  }, {
    "nodeContext" : "traceInText",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 235,
      "startColumnNumber" : 28,
      "endLineNumber" : 235,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 235,
        "startColumnNumber" : 28,
        "endLineNumber" : 235,
        "endColumnNumber" : 46
      },
      "nodeContext" : "traceInText.size()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 235,
        "startColumnNumber" : 24,
        "endLineNumber" : 235,
        "endColumnNumber" : 46
      },
      "nodeContext" : "i < traceInText.size()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 874,
        "startLineNumber" : 235,
        "startColumnNumber" : 8,
        "endLineNumber" : 252,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < traceInText.size(); i++) {\n  String trace=traceInText.get(i);\n  if (trace.equals(\"$CAUSE$\")) {\n    PinpointPluginTestException cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()));\n    return new PinpointPluginTestException(exceptionClass + \": \" + message,Arrays.copyOf(stackTrace,i),cause);\n  }\n  String[] tokens=trace.split(\",\");\n  if (tokens.length != 4) {\n    System.out.println(\"Unexpected trace string: \" + trace);\n    stackTrace[i]=new StackTraceElement(trace,\"\",null,-1);\n  }\n else {\n    stackTrace[i]=new StackTraceElement(tokens[0],tokens[1],tokens[2],Integer.parseInt(tokens[3]));\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 135,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1085,
        "startLineNumber" : 232,
        "startColumnNumber" : 117,
        "endLineNumber" : 255,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StackTraceElement[] stackTrace=new StackTraceElement[traceInText.size()];\n  for (int i=0; i < traceInText.size(); i++) {\n    String trace=traceInText.get(i);\n    if (trace.equals(\"$CAUSE$\")) {\n      PinpointPluginTestException cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()));\n      return new PinpointPluginTestException(exceptionClass + \": \" + message,Arrays.copyOf(stackTrace,i),cause);\n    }\n    String[] tokens=trace.split(\",\");\n    if (tokens.length != 4) {\n      System.out.println(\"Unexpected trace string: \" + trace);\n      stackTrace[i]=new StackTraceElement(trace,\"\",null,-1);\n    }\n else {\n      stackTrace[i]=new StackTraceElement(tokens[0],tokens[1],tokens[2],Integer.parseInt(tokens[3]));\n    }\n  }\n  return new PinpointPluginTestException(exceptionClass + \": \" + message,stackTrace);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 160,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1198,
        "startLineNumber" : 232,
        "startColumnNumber" : 4,
        "endLineNumber" : 255,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private PinpointPluginTestException toException(String message,String exceptionClass,List<String> traceInText){\n  StackTraceElement[] stackTrace=new StackTraceElement[traceInText.size()];\n  for (int i=0; i < traceInText.size(); i++) {\n    String trace=traceInText.get(i);\n    if (trace.equals(\"$CAUSE$\")) {\n      PinpointPluginTestException cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()));\n      return new PinpointPluginTestException(exceptionClass + \": \" + message,Arrays.copyOf(stackTrace,i),cause);\n    }\n    String[] tokens=trace.split(\",\");\n    if (tokens.length != 4) {\n      System.out.println(\"Unexpected trace string: \" + trace);\n      stackTrace[i]=new StackTraceElement(trace,\"\",null,-1);\n    }\n else {\n      stackTrace[i]=new StackTraceElement(tokens[0],tokens[1],tokens[2],Integer.parseInt(tokens[3]));\n    }\n  }\n  return new PinpointPluginTestException(exceptionClass + \": \" + message,stackTrace);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 235,
        "startColumnNumber" : 24,
        "endLineNumber" : 235,
        "endColumnNumber" : 46
      },
      "nodeContext" : "i < traceInText.size()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.lang.String>"
  }, {
    "nodeContext" : "traceInText",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 236,
      "startColumnNumber" : 27,
      "endLineNumber" : 236,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 236,
        "startColumnNumber" : 27,
        "endLineNumber" : 236,
        "endColumnNumber" : 45
      },
      "nodeContext" : "traceInText.get(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 236,
        "startColumnNumber" : 19,
        "endLineNumber" : 236,
        "endColumnNumber" : 45
      },
      "nodeContext" : "trace=traceInText.get(i)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 236,
        "startColumnNumber" : 12,
        "endLineNumber" : 236,
        "endColumnNumber" : 46
      },
      "nodeContext" : "String trace=traceInText.get(i);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 829,
        "startLineNumber" : 235,
        "startColumnNumber" : 53,
        "endLineNumber" : 252,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String trace=traceInText.get(i);\n  if (trace.equals(\"$CAUSE$\")) {\n    PinpointPluginTestException cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()));\n    return new PinpointPluginTestException(exceptionClass + \": \" + message,Arrays.copyOf(stackTrace,i),cause);\n  }\n  String[] tokens=trace.split(\",\");\n  if (tokens.length != 4) {\n    System.out.println(\"Unexpected trace string: \" + trace);\n    stackTrace[i]=new StackTraceElement(trace,\"\",null,-1);\n  }\n else {\n    stackTrace[i]=new StackTraceElement(tokens[0],tokens[1],tokens[2],Integer.parseInt(tokens[3]));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 874,
        "startLineNumber" : 235,
        "startColumnNumber" : 8,
        "endLineNumber" : 252,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < traceInText.size(); i++) {\n  String trace=traceInText.get(i);\n  if (trace.equals(\"$CAUSE$\")) {\n    PinpointPluginTestException cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()));\n    return new PinpointPluginTestException(exceptionClass + \": \" + message,Arrays.copyOf(stackTrace,i),cause);\n  }\n  String[] tokens=trace.split(\",\");\n  if (tokens.length != 4) {\n    System.out.println(\"Unexpected trace string: \" + trace);\n    stackTrace[i]=new StackTraceElement(trace,\"\",null,-1);\n  }\n else {\n    stackTrace[i]=new StackTraceElement(tokens[0],tokens[1],tokens[2],Integer.parseInt(tokens[3]));\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 135,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1085,
        "startLineNumber" : 232,
        "startColumnNumber" : 117,
        "endLineNumber" : 255,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StackTraceElement[] stackTrace=new StackTraceElement[traceInText.size()];\n  for (int i=0; i < traceInText.size(); i++) {\n    String trace=traceInText.get(i);\n    if (trace.equals(\"$CAUSE$\")) {\n      PinpointPluginTestException cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()));\n      return new PinpointPluginTestException(exceptionClass + \": \" + message,Arrays.copyOf(stackTrace,i),cause);\n    }\n    String[] tokens=trace.split(\",\");\n    if (tokens.length != 4) {\n      System.out.println(\"Unexpected trace string: \" + trace);\n      stackTrace[i]=new StackTraceElement(trace,\"\",null,-1);\n    }\n else {\n      stackTrace[i]=new StackTraceElement(tokens[0],tokens[1],tokens[2],Integer.parseInt(tokens[3]));\n    }\n  }\n  return new PinpointPluginTestException(exceptionClass + \": \" + message,stackTrace);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 160,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1198,
        "startLineNumber" : 232,
        "startColumnNumber" : 4,
        "endLineNumber" : 255,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private PinpointPluginTestException toException(String message,String exceptionClass,List<String> traceInText){\n  StackTraceElement[] stackTrace=new StackTraceElement[traceInText.size()];\n  for (int i=0; i < traceInText.size(); i++) {\n    String trace=traceInText.get(i);\n    if (trace.equals(\"$CAUSE$\")) {\n      PinpointPluginTestException cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()));\n      return new PinpointPluginTestException(exceptionClass + \": \" + message,Arrays.copyOf(stackTrace,i),cause);\n    }\n    String[] tokens=trace.split(\",\");\n    if (tokens.length != 4) {\n      System.out.println(\"Unexpected trace string: \" + trace);\n      stackTrace[i]=new StackTraceElement(trace,\"\",null,-1);\n    }\n else {\n      stackTrace[i]=new StackTraceElement(tokens[0],tokens[1],tokens[2],Integer.parseInt(tokens[3]));\n    }\n  }\n  return new PinpointPluginTestException(exceptionClass + \": \" + message,stackTrace);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 236,
        "startColumnNumber" : 12,
        "endLineNumber" : 236,
        "endColumnNumber" : 46
      },
      "nodeContext" : "String trace=traceInText.get(i);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.lang.String>"
  }, {
    "nodeContext" : "traceInText",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 239,
      "startColumnNumber" : 64,
      "endLineNumber" : 239,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 239,
        "startColumnNumber" : 64,
        "endLineNumber" : 239,
        "endColumnNumber" : 86
      },
      "nodeContext" : "traceInText.get(i + 2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 239,
        "startColumnNumber" : 52,
        "endLineNumber" : 239,
        "endColumnNumber" : 159
      },
      "nodeContext" : "toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 23,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 239,
        "startColumnNumber" : 44,
        "endLineNumber" : 239,
        "endColumnNumber" : 159
      },
      "nodeContext" : "cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 25,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 239,
        "startColumnNumber" : 16,
        "endLineNumber" : 239,
        "endColumnNumber" : 160
      },
      "nodeContext" : "PinpointPluginTestException cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 28,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 302,
        "startLineNumber" : 238,
        "startColumnNumber" : 41,
        "endLineNumber" : 241,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  PinpointPluginTestException cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()));\n  return new PinpointPluginTestException(exceptionClass + \": \" + message,Arrays.copyOf(stackTrace,i),cause);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 331,
        "startLineNumber" : 238,
        "startColumnNumber" : 12,
        "endLineNumber" : 241,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (trace.equals(\"$CAUSE$\")) {\n  PinpointPluginTestException cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()));\n  return new PinpointPluginTestException(exceptionClass + \": \" + message,Arrays.copyOf(stackTrace,i),cause);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 48,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 829,
        "startLineNumber" : 235,
        "startColumnNumber" : 53,
        "endLineNumber" : 252,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String trace=traceInText.get(i);\n  if (trace.equals(\"$CAUSE$\")) {\n    PinpointPluginTestException cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()));\n    return new PinpointPluginTestException(exceptionClass + \": \" + message,Arrays.copyOf(stackTrace,i),cause);\n  }\n  String[] tokens=trace.split(\",\");\n  if (tokens.length != 4) {\n    System.out.println(\"Unexpected trace string: \" + trace);\n    stackTrace[i]=new StackTraceElement(trace,\"\",null,-1);\n  }\n else {\n    stackTrace[i]=new StackTraceElement(tokens[0],tokens[1],tokens[2],Integer.parseInt(tokens[3]));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 874,
        "startLineNumber" : 235,
        "startColumnNumber" : 8,
        "endLineNumber" : 252,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < traceInText.size(); i++) {\n  String trace=traceInText.get(i);\n  if (trace.equals(\"$CAUSE$\")) {\n    PinpointPluginTestException cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()));\n    return new PinpointPluginTestException(exceptionClass + \": \" + message,Arrays.copyOf(stackTrace,i),cause);\n  }\n  String[] tokens=trace.split(\",\");\n  if (tokens.length != 4) {\n    System.out.println(\"Unexpected trace string: \" + trace);\n    stackTrace[i]=new StackTraceElement(trace,\"\",null,-1);\n  }\n else {\n    stackTrace[i]=new StackTraceElement(tokens[0],tokens[1],tokens[2],Integer.parseInt(tokens[3]));\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 135,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1085,
        "startLineNumber" : 232,
        "startColumnNumber" : 117,
        "endLineNumber" : 255,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StackTraceElement[] stackTrace=new StackTraceElement[traceInText.size()];\n  for (int i=0; i < traceInText.size(); i++) {\n    String trace=traceInText.get(i);\n    if (trace.equals(\"$CAUSE$\")) {\n      PinpointPluginTestException cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()));\n      return new PinpointPluginTestException(exceptionClass + \": \" + message,Arrays.copyOf(stackTrace,i),cause);\n    }\n    String[] tokens=trace.split(\",\");\n    if (tokens.length != 4) {\n      System.out.println(\"Unexpected trace string: \" + trace);\n      stackTrace[i]=new StackTraceElement(trace,\"\",null,-1);\n    }\n else {\n      stackTrace[i]=new StackTraceElement(tokens[0],tokens[1],tokens[2],Integer.parseInt(tokens[3]));\n    }\n  }\n  return new PinpointPluginTestException(exceptionClass + \": \" + message,stackTrace);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 160,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1198,
        "startLineNumber" : 232,
        "startColumnNumber" : 4,
        "endLineNumber" : 255,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private PinpointPluginTestException toException(String message,String exceptionClass,List<String> traceInText){\n  StackTraceElement[] stackTrace=new StackTraceElement[traceInText.size()];\n  for (int i=0; i < traceInText.size(); i++) {\n    String trace=traceInText.get(i);\n    if (trace.equals(\"$CAUSE$\")) {\n      PinpointPluginTestException cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()));\n      return new PinpointPluginTestException(exceptionClass + \": \" + message,Arrays.copyOf(stackTrace,i),cause);\n    }\n    String[] tokens=trace.split(\",\");\n    if (tokens.length != 4) {\n      System.out.println(\"Unexpected trace string: \" + trace);\n      stackTrace[i]=new StackTraceElement(trace,\"\",null,-1);\n    }\n else {\n      stackTrace[i]=new StackTraceElement(tokens[0],tokens[1],tokens[2],Integer.parseInt(tokens[3]));\n    }\n  }\n  return new PinpointPluginTestException(exceptionClass + \": \" + message,stackTrace);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 239,
        "startColumnNumber" : 16,
        "endLineNumber" : 239,
        "endColumnNumber" : 160
      },
      "nodeContext" : "PinpointPluginTestException cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 28,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.lang.String>"
  }, {
    "nodeContext" : "traceInText",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 239,
      "startColumnNumber" : 88,
      "endLineNumber" : 239,
      "endColumnNumber" : 99
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 239,
        "startColumnNumber" : 88,
        "endLineNumber" : 239,
        "endColumnNumber" : 110
      },
      "nodeContext" : "traceInText.get(i + 1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 239,
        "startColumnNumber" : 52,
        "endLineNumber" : 239,
        "endColumnNumber" : 159
      },
      "nodeContext" : "toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 23,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 239,
        "startColumnNumber" : 44,
        "endLineNumber" : 239,
        "endColumnNumber" : 159
      },
      "nodeContext" : "cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 25,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 239,
        "startColumnNumber" : 16,
        "endLineNumber" : 239,
        "endColumnNumber" : 160
      },
      "nodeContext" : "PinpointPluginTestException cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 28,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 302,
        "startLineNumber" : 238,
        "startColumnNumber" : 41,
        "endLineNumber" : 241,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  PinpointPluginTestException cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()));\n  return new PinpointPluginTestException(exceptionClass + \": \" + message,Arrays.copyOf(stackTrace,i),cause);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 331,
        "startLineNumber" : 238,
        "startColumnNumber" : 12,
        "endLineNumber" : 241,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (trace.equals(\"$CAUSE$\")) {\n  PinpointPluginTestException cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()));\n  return new PinpointPluginTestException(exceptionClass + \": \" + message,Arrays.copyOf(stackTrace,i),cause);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 48,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 829,
        "startLineNumber" : 235,
        "startColumnNumber" : 53,
        "endLineNumber" : 252,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String trace=traceInText.get(i);\n  if (trace.equals(\"$CAUSE$\")) {\n    PinpointPluginTestException cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()));\n    return new PinpointPluginTestException(exceptionClass + \": \" + message,Arrays.copyOf(stackTrace,i),cause);\n  }\n  String[] tokens=trace.split(\",\");\n  if (tokens.length != 4) {\n    System.out.println(\"Unexpected trace string: \" + trace);\n    stackTrace[i]=new StackTraceElement(trace,\"\",null,-1);\n  }\n else {\n    stackTrace[i]=new StackTraceElement(tokens[0],tokens[1],tokens[2],Integer.parseInt(tokens[3]));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 874,
        "startLineNumber" : 235,
        "startColumnNumber" : 8,
        "endLineNumber" : 252,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < traceInText.size(); i++) {\n  String trace=traceInText.get(i);\n  if (trace.equals(\"$CAUSE$\")) {\n    PinpointPluginTestException cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()));\n    return new PinpointPluginTestException(exceptionClass + \": \" + message,Arrays.copyOf(stackTrace,i),cause);\n  }\n  String[] tokens=trace.split(\",\");\n  if (tokens.length != 4) {\n    System.out.println(\"Unexpected trace string: \" + trace);\n    stackTrace[i]=new StackTraceElement(trace,\"\",null,-1);\n  }\n else {\n    stackTrace[i]=new StackTraceElement(tokens[0],tokens[1],tokens[2],Integer.parseInt(tokens[3]));\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 135,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1085,
        "startLineNumber" : 232,
        "startColumnNumber" : 117,
        "endLineNumber" : 255,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StackTraceElement[] stackTrace=new StackTraceElement[traceInText.size()];\n  for (int i=0; i < traceInText.size(); i++) {\n    String trace=traceInText.get(i);\n    if (trace.equals(\"$CAUSE$\")) {\n      PinpointPluginTestException cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()));\n      return new PinpointPluginTestException(exceptionClass + \": \" + message,Arrays.copyOf(stackTrace,i),cause);\n    }\n    String[] tokens=trace.split(\",\");\n    if (tokens.length != 4) {\n      System.out.println(\"Unexpected trace string: \" + trace);\n      stackTrace[i]=new StackTraceElement(trace,\"\",null,-1);\n    }\n else {\n      stackTrace[i]=new StackTraceElement(tokens[0],tokens[1],tokens[2],Integer.parseInt(tokens[3]));\n    }\n  }\n  return new PinpointPluginTestException(exceptionClass + \": \" + message,stackTrace);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 160,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1198,
        "startLineNumber" : 232,
        "startColumnNumber" : 4,
        "endLineNumber" : 255,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private PinpointPluginTestException toException(String message,String exceptionClass,List<String> traceInText){\n  StackTraceElement[] stackTrace=new StackTraceElement[traceInText.size()];\n  for (int i=0; i < traceInText.size(); i++) {\n    String trace=traceInText.get(i);\n    if (trace.equals(\"$CAUSE$\")) {\n      PinpointPluginTestException cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()));\n      return new PinpointPluginTestException(exceptionClass + \": \" + message,Arrays.copyOf(stackTrace,i),cause);\n    }\n    String[] tokens=trace.split(\",\");\n    if (tokens.length != 4) {\n      System.out.println(\"Unexpected trace string: \" + trace);\n      stackTrace[i]=new StackTraceElement(trace,\"\",null,-1);\n    }\n else {\n      stackTrace[i]=new StackTraceElement(tokens[0],tokens[1],tokens[2],Integer.parseInt(tokens[3]));\n    }\n  }\n  return new PinpointPluginTestException(exceptionClass + \": \" + message,stackTrace);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 239,
        "startColumnNumber" : 16,
        "endLineNumber" : 239,
        "endColumnNumber" : 160
      },
      "nodeContext" : "PinpointPluginTestException cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 28,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.lang.String>"
  }, {
    "nodeContext" : "traceInText",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 239,
      "startColumnNumber" : 112,
      "endLineNumber" : 239,
      "endColumnNumber" : 123
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 239,
        "startColumnNumber" : 112,
        "endLineNumber" : 239,
        "endColumnNumber" : 158
      },
      "nodeContext" : "traceInText.subList(i + 3,traceInText.size())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 239,
        "startColumnNumber" : 52,
        "endLineNumber" : 239,
        "endColumnNumber" : 159
      },
      "nodeContext" : "toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 23,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 239,
        "startColumnNumber" : 44,
        "endLineNumber" : 239,
        "endColumnNumber" : 159
      },
      "nodeContext" : "cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 25,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 239,
        "startColumnNumber" : 16,
        "endLineNumber" : 239,
        "endColumnNumber" : 160
      },
      "nodeContext" : "PinpointPluginTestException cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 28,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 302,
        "startLineNumber" : 238,
        "startColumnNumber" : 41,
        "endLineNumber" : 241,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  PinpointPluginTestException cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()));\n  return new PinpointPluginTestException(exceptionClass + \": \" + message,Arrays.copyOf(stackTrace,i),cause);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 331,
        "startLineNumber" : 238,
        "startColumnNumber" : 12,
        "endLineNumber" : 241,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (trace.equals(\"$CAUSE$\")) {\n  PinpointPluginTestException cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()));\n  return new PinpointPluginTestException(exceptionClass + \": \" + message,Arrays.copyOf(stackTrace,i),cause);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 48,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 829,
        "startLineNumber" : 235,
        "startColumnNumber" : 53,
        "endLineNumber" : 252,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String trace=traceInText.get(i);\n  if (trace.equals(\"$CAUSE$\")) {\n    PinpointPluginTestException cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()));\n    return new PinpointPluginTestException(exceptionClass + \": \" + message,Arrays.copyOf(stackTrace,i),cause);\n  }\n  String[] tokens=trace.split(\",\");\n  if (tokens.length != 4) {\n    System.out.println(\"Unexpected trace string: \" + trace);\n    stackTrace[i]=new StackTraceElement(trace,\"\",null,-1);\n  }\n else {\n    stackTrace[i]=new StackTraceElement(tokens[0],tokens[1],tokens[2],Integer.parseInt(tokens[3]));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 874,
        "startLineNumber" : 235,
        "startColumnNumber" : 8,
        "endLineNumber" : 252,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < traceInText.size(); i++) {\n  String trace=traceInText.get(i);\n  if (trace.equals(\"$CAUSE$\")) {\n    PinpointPluginTestException cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()));\n    return new PinpointPluginTestException(exceptionClass + \": \" + message,Arrays.copyOf(stackTrace,i),cause);\n  }\n  String[] tokens=trace.split(\",\");\n  if (tokens.length != 4) {\n    System.out.println(\"Unexpected trace string: \" + trace);\n    stackTrace[i]=new StackTraceElement(trace,\"\",null,-1);\n  }\n else {\n    stackTrace[i]=new StackTraceElement(tokens[0],tokens[1],tokens[2],Integer.parseInt(tokens[3]));\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 135,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1085,
        "startLineNumber" : 232,
        "startColumnNumber" : 117,
        "endLineNumber" : 255,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StackTraceElement[] stackTrace=new StackTraceElement[traceInText.size()];\n  for (int i=0; i < traceInText.size(); i++) {\n    String trace=traceInText.get(i);\n    if (trace.equals(\"$CAUSE$\")) {\n      PinpointPluginTestException cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()));\n      return new PinpointPluginTestException(exceptionClass + \": \" + message,Arrays.copyOf(stackTrace,i),cause);\n    }\n    String[] tokens=trace.split(\",\");\n    if (tokens.length != 4) {\n      System.out.println(\"Unexpected trace string: \" + trace);\n      stackTrace[i]=new StackTraceElement(trace,\"\",null,-1);\n    }\n else {\n      stackTrace[i]=new StackTraceElement(tokens[0],tokens[1],tokens[2],Integer.parseInt(tokens[3]));\n    }\n  }\n  return new PinpointPluginTestException(exceptionClass + \": \" + message,stackTrace);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 160,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1198,
        "startLineNumber" : 232,
        "startColumnNumber" : 4,
        "endLineNumber" : 255,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private PinpointPluginTestException toException(String message,String exceptionClass,List<String> traceInText){\n  StackTraceElement[] stackTrace=new StackTraceElement[traceInText.size()];\n  for (int i=0; i < traceInText.size(); i++) {\n    String trace=traceInText.get(i);\n    if (trace.equals(\"$CAUSE$\")) {\n      PinpointPluginTestException cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()));\n      return new PinpointPluginTestException(exceptionClass + \": \" + message,Arrays.copyOf(stackTrace,i),cause);\n    }\n    String[] tokens=trace.split(\",\");\n    if (tokens.length != 4) {\n      System.out.println(\"Unexpected trace string: \" + trace);\n      stackTrace[i]=new StackTraceElement(trace,\"\",null,-1);\n    }\n else {\n      stackTrace[i]=new StackTraceElement(tokens[0],tokens[1],tokens[2],Integer.parseInt(tokens[3]));\n    }\n  }\n  return new PinpointPluginTestException(exceptionClass + \": \" + message,stackTrace);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 239,
        "startColumnNumber" : 16,
        "endLineNumber" : 239,
        "endColumnNumber" : 160
      },
      "nodeContext" : "PinpointPluginTestException cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 28,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.lang.String>"
  }, {
    "nodeContext" : "traceInText",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 239,
      "startColumnNumber" : 139,
      "endLineNumber" : 239,
      "endColumnNumber" : 150
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 239,
        "startColumnNumber" : 139,
        "endLineNumber" : 239,
        "endColumnNumber" : 157
      },
      "nodeContext" : "traceInText.size()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 239,
        "startColumnNumber" : 112,
        "endLineNumber" : 239,
        "endColumnNumber" : 158
      },
      "nodeContext" : "traceInText.subList(i + 3,traceInText.size())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 239,
        "startColumnNumber" : 52,
        "endLineNumber" : 239,
        "endColumnNumber" : 159
      },
      "nodeContext" : "toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 23,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 239,
        "startColumnNumber" : 44,
        "endLineNumber" : 239,
        "endColumnNumber" : 159
      },
      "nodeContext" : "cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 25,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 239,
        "startColumnNumber" : 16,
        "endLineNumber" : 239,
        "endColumnNumber" : 160
      },
      "nodeContext" : "PinpointPluginTestException cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 28,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 302,
        "startLineNumber" : 238,
        "startColumnNumber" : 41,
        "endLineNumber" : 241,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  PinpointPluginTestException cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()));\n  return new PinpointPluginTestException(exceptionClass + \": \" + message,Arrays.copyOf(stackTrace,i),cause);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 331,
        "startLineNumber" : 238,
        "startColumnNumber" : 12,
        "endLineNumber" : 241,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (trace.equals(\"$CAUSE$\")) {\n  PinpointPluginTestException cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()));\n  return new PinpointPluginTestException(exceptionClass + \": \" + message,Arrays.copyOf(stackTrace,i),cause);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 48,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 829,
        "startLineNumber" : 235,
        "startColumnNumber" : 53,
        "endLineNumber" : 252,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String trace=traceInText.get(i);\n  if (trace.equals(\"$CAUSE$\")) {\n    PinpointPluginTestException cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()));\n    return new PinpointPluginTestException(exceptionClass + \": \" + message,Arrays.copyOf(stackTrace,i),cause);\n  }\n  String[] tokens=trace.split(\",\");\n  if (tokens.length != 4) {\n    System.out.println(\"Unexpected trace string: \" + trace);\n    stackTrace[i]=new StackTraceElement(trace,\"\",null,-1);\n  }\n else {\n    stackTrace[i]=new StackTraceElement(tokens[0],tokens[1],tokens[2],Integer.parseInt(tokens[3]));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 122,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 874,
        "startLineNumber" : 235,
        "startColumnNumber" : 8,
        "endLineNumber" : 252,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < traceInText.size(); i++) {\n  String trace=traceInText.get(i);\n  if (trace.equals(\"$CAUSE$\")) {\n    PinpointPluginTestException cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()));\n    return new PinpointPluginTestException(exceptionClass + \": \" + message,Arrays.copyOf(stackTrace,i),cause);\n  }\n  String[] tokens=trace.split(\",\");\n  if (tokens.length != 4) {\n    System.out.println(\"Unexpected trace string: \" + trace);\n    stackTrace[i]=new StackTraceElement(trace,\"\",null,-1);\n  }\n else {\n    stackTrace[i]=new StackTraceElement(tokens[0],tokens[1],tokens[2],Integer.parseInt(tokens[3]));\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 135,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1085,
        "startLineNumber" : 232,
        "startColumnNumber" : 117,
        "endLineNumber" : 255,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StackTraceElement[] stackTrace=new StackTraceElement[traceInText.size()];\n  for (int i=0; i < traceInText.size(); i++) {\n    String trace=traceInText.get(i);\n    if (trace.equals(\"$CAUSE$\")) {\n      PinpointPluginTestException cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()));\n      return new PinpointPluginTestException(exceptionClass + \": \" + message,Arrays.copyOf(stackTrace,i),cause);\n    }\n    String[] tokens=trace.split(\",\");\n    if (tokens.length != 4) {\n      System.out.println(\"Unexpected trace string: \" + trace);\n      stackTrace[i]=new StackTraceElement(trace,\"\",null,-1);\n    }\n else {\n      stackTrace[i]=new StackTraceElement(tokens[0],tokens[1],tokens[2],Integer.parseInt(tokens[3]));\n    }\n  }\n  return new PinpointPluginTestException(exceptionClass + \": \" + message,stackTrace);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 160,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1198,
        "startLineNumber" : 232,
        "startColumnNumber" : 4,
        "endLineNumber" : 255,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private PinpointPluginTestException toException(String message,String exceptionClass,List<String> traceInText){\n  StackTraceElement[] stackTrace=new StackTraceElement[traceInText.size()];\n  for (int i=0; i < traceInText.size(); i++) {\n    String trace=traceInText.get(i);\n    if (trace.equals(\"$CAUSE$\")) {\n      PinpointPluginTestException cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()));\n      return new PinpointPluginTestException(exceptionClass + \": \" + message,Arrays.copyOf(stackTrace,i),cause);\n    }\n    String[] tokens=trace.split(\",\");\n    if (tokens.length != 4) {\n      System.out.println(\"Unexpected trace string: \" + trace);\n      stackTrace[i]=new StackTraceElement(trace,\"\",null,-1);\n    }\n else {\n      stackTrace[i]=new StackTraceElement(tokens[0],tokens[1],tokens[2],Integer.parseInt(tokens[3]));\n    }\n  }\n  return new PinpointPluginTestException(exceptionClass + \": \" + message,stackTrace);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 239,
        "startColumnNumber" : 16,
        "endLineNumber" : 239,
        "endColumnNumber" : 160
      },
      "nodeContext" : "PinpointPluginTestException cause=toException(traceInText.get(i + 2),traceInText.get(i + 1),traceInText.subList(i + 3,traceInText.size()));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 28,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 233,
    "startColumnNumber" : 63,
    "endLineNumber" : 233,
    "endColumnNumber" : 74
  }, {
    "charLength" : 11,
    "startLineNumber" : 235,
    "startColumnNumber" : 28,
    "endLineNumber" : 235,
    "endColumnNumber" : 39
  }, {
    "charLength" : 11,
    "startLineNumber" : 236,
    "startColumnNumber" : 27,
    "endLineNumber" : 236,
    "endColumnNumber" : 38
  }, {
    "charLength" : 11,
    "startLineNumber" : 239,
    "startColumnNumber" : 64,
    "endLineNumber" : 239,
    "endColumnNumber" : 75
  }, {
    "charLength" : 11,
    "startLineNumber" : 239,
    "startColumnNumber" : 88,
    "endLineNumber" : 239,
    "endColumnNumber" : 99
  }, {
    "charLength" : 11,
    "startLineNumber" : 239,
    "startColumnNumber" : 112,
    "endLineNumber" : 239,
    "endColumnNumber" : 123
  }, {
    "charLength" : 11,
    "startLineNumber" : 239,
    "startColumnNumber" : 139,
    "endLineNumber" : 239,
    "endColumnNumber" : 150
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 1
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 0
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 9
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 1
  } ]
}