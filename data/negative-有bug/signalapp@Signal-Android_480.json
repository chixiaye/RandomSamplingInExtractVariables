{
  "id" : 480,
  "expression" : "(int)partition.get(j)",
  "projectName" : "signalapp@Signal-Android",
  "commitID" : "7e91132e7ed62a58b5f347de252ab1eda3f43b90",
  "filePath" : "/app/src/test/java/org/thoughtcrime/securesms/util/ListPartitionTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(int)partition.get(j)",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 31,
      "startColumnNumber" : 21,
      "endLineNumber" : 31,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 31,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertEquals((int)partition.get(j),counter++)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 31,
        "endColumnNumber" : 55
      },
      "nodeContext" : "assertEquals((int)partition.get(j),counter++);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 30,
        "startColumnNumber" : 43,
        "endLineNumber" : 32,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  assertEquals((int)partition.get(j),counter++);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 30,
        "startColumnNumber" : 6,
        "endLineNumber" : 32,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int j=0; j < partition.size(); j++) {\n  assertEquals((int)partition.get(j),counter++);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 210,
        "startLineNumber" : 26,
        "startColumnNumber" : 42,
        "endLineNumber" : 33,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<Integer> partition=partitions.get(i);\n  assertEquals(partition.size(),10);\n  for (int j=0; j < partition.size(); j++) {\n    assertEquals((int)partition.get(j),counter++);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 248,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 33,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < partitions.size(); i++) {\n  List<Integer> partition=partitions.get(i);\n  assertEquals(partition.size(),10);\n  for (int j=0; j < partition.size(); j++) {\n    assertEquals((int)partition.get(j),counter++);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 58,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 488,
        "startLineNumber" : 13,
        "startColumnNumber" : 40,
        "endLineNumber" : 34,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<Integer> list=new LinkedList<>();\n  for (int i=0; i < 100; i++) {\n    list.add(i);\n  }\n  List<List<Integer>> partitions=Util.partition(list,10);\n  assertEquals(partitions.size(),10);\n  int counter=0;\n  for (int i=0; i < partitions.size(); i++) {\n    List<Integer> partition=partitions.get(i);\n    assertEquals(partition.size(),10);\n    for (int j=0; j < partition.size(); j++) {\n      assertEquals((int)partition.get(j),counter++);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 116,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 526,
        "startLineNumber" : 13,
        "startColumnNumber" : 2,
        "endLineNumber" : 34,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testPartitionEven(){\n  List<Integer> list=new LinkedList<>();\n  for (int i=0; i < 100; i++) {\n    list.add(i);\n  }\n  List<List<Integer>> partitions=Util.partition(list,10);\n  assertEquals(partitions.size(),10);\n  int counter=0;\n  for (int i=0; i < partitions.size(); i++) {\n    List<Integer> partition=partitions.get(i);\n    assertEquals(partition.size(),10);\n    for (int j=0; j < partition.size(); j++) {\n      assertEquals((int)partition.get(j),counter++);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 31,
        "startColumnNumber" : 8,
        "endLineNumber" : 31,
        "endColumnNumber" : 55
      },
      "nodeContext" : "assertEquals((int)partition.get(j),counter++);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 31,
    "startColumnNumber" : 21,
    "endLineNumber" : 31,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ ]
}