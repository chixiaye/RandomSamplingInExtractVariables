{
  "id" : 452,
  "expression" : "!mMission.running",
  "projectName" : "TeamNewPipe@NewPipe",
  "commitID" : "d7574973e97fa7a3a21aa59967311f6091941830",
  "filePath" : "/app/src/main/java/us/shandian/giga/get/DownloadRunnableFallback.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "!mMission.running",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 113,
      "startColumnNumber" : 16,
      "endLineNumber" : 113,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 113,
        "startColumnNumber" : 16,
        "endLineNumber" : 113,
        "endColumnNumber" : 76
      },
      "nodeContext" : "!mMission.running || e instanceof ClosedByInterruptException",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 113,
        "startColumnNumber" : 12,
        "endLineNumber" : 113,
        "endColumnNumber" : 85
      },
      "nodeContext" : "if (!mMission.running || e instanceof ClosedByInterruptException) return;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 749,
        "startLineNumber" : 108,
        "startColumnNumber" : 30,
        "endLineNumber" : 133,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  dispose();\n  mMission.fallbackResumeOffset=start;\n  if (!mMission.running || e instanceof ClosedByInterruptException)   return;\n  if (e instanceof HttpError && ((HttpError)e).statusCode == ERROR_HTTP_FORBIDDEN) {\n    dispose();\n    mMission.doRecover(ERROR_HTTP_FORBIDDEN);\n    return;\n  }\n  if (mRetryCount++ >= mMission.maxRetry) {\n    mMission.notifyError(e);\n    return;\n  }\n  if (DEBUG) {\n    Log.e(TAG,\"got exception, retrying...\",e);\n  }\n  run();\n  return;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 769,
        "startLineNumber" : 108,
        "startColumnNumber" : 10,
        "endLineNumber" : 133,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (Exception e) {\n  dispose();\n  mMission.fallbackResumeOffset=start;\n  if (!mMission.running || e instanceof ClosedByInterruptException)   return;\n  if (e instanceof HttpError && ((HttpError)e).statusCode == ERROR_HTTP_FORBIDDEN) {\n    dispose();\n    mMission.doRecover(ERROR_HTTP_FORBIDDEN);\n    return;\n  }\n  if (mRetryCount++ >= mMission.maxRetry) {\n    mMission.notifyError(e);\n    return;\n  }\n  if (DEBUG) {\n    Log.e(TAG,\"got exception, retrying...\",e);\n  }\n  run();\n  return;\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 79,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2546,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 133,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  long rangeStart=(mMission.unknownLength || start < 1) ? -1 : start;\n  int mId=1;\n  mConn=mMission.openConnection(false,rangeStart,-1);\n  if (mRetryCount == 0 && rangeStart == -1) {\n    mConn.setRequestProperty(\"Range\",\"bytes=0-\");\n  }\n  mMission.establishConnection(mId,mConn);\n  if (mConn.getResponseCode() == 416 && start > 0) {\n    mMission.notifyProgress(-start);\n    start=0;\n    mRetryCount--;\n    throw new DownloadMission.HttpError(416);\n  }\n  if (!mMission.unknownLength)   mMission.unknownLength=Utility.getContentLength(mConn) == -1;\n  if (mMission.unknownLength || mConn.getResponseCode() == 200) {\n    mMission.done=mMission.offsets[mMission.current] - mMission.offsets[0];\n  }\n  mF=mMission.storage.getStream();\n  mF.seek(mMission.offsets[mMission.current] + start);\n  mIs=mConn.getInputStream();\n  byte[] buf=new byte[DownloadMission.BUFFER_SIZE];\n  int len=0;\n  while (mMission.running && (len=mIs.read(buf,0,buf.length)) != -1) {\n    mF.write(buf,0,len);\n    start+=len;\n    mMission.notifyProgress(len);\n  }\n  dispose();\n  done=len == -1;\n}\n catch (Exception e) {\n  dispose();\n  mMission.fallbackResumeOffset=start;\n  if (!mMission.running || e instanceof ClosedByInterruptException)   return;\n  if (e instanceof HttpError && ((HttpError)e).statusCode == ERROR_HTTP_FORBIDDEN) {\n    dispose();\n    mMission.doRecover(ERROR_HTTP_FORBIDDEN);\n    return;\n  }\n  if (mRetryCount++ >= mMission.maxRetry) {\n    mMission.notifyError(e);\n    return;\n  }\n  if (DEBUG) {\n    Log.e(TAG,\"got exception, retrying...\",e);\n  }\n  run();\n  return;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 302,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2920,
        "startLineNumber" : 52,
        "startColumnNumber" : 22,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  boolean done;\n  long start=mMission.fallbackResumeOffset;\n  if (DEBUG && !mMission.unknownLength && start > 0) {\n    Log.i(TAG,\"Resuming a single-thread download at \" + start);\n  }\n  try {\n    long rangeStart=(mMission.unknownLength || start < 1) ? -1 : start;\n    int mId=1;\n    mConn=mMission.openConnection(false,rangeStart,-1);\n    if (mRetryCount == 0 && rangeStart == -1) {\n      mConn.setRequestProperty(\"Range\",\"bytes=0-\");\n    }\n    mMission.establishConnection(mId,mConn);\n    if (mConn.getResponseCode() == 416 && start > 0) {\n      mMission.notifyProgress(-start);\n      start=0;\n      mRetryCount--;\n      throw new DownloadMission.HttpError(416);\n    }\n    if (!mMission.unknownLength)     mMission.unknownLength=Utility.getContentLength(mConn) == -1;\n    if (mMission.unknownLength || mConn.getResponseCode() == 200) {\n      mMission.done=mMission.offsets[mMission.current] - mMission.offsets[0];\n    }\n    mF=mMission.storage.getStream();\n    mF.seek(mMission.offsets[mMission.current] + start);\n    mIs=mConn.getInputStream();\n    byte[] buf=new byte[DownloadMission.BUFFER_SIZE];\n    int len=0;\n    while (mMission.running && (len=mIs.read(buf,0,buf.length)) != -1) {\n      mF.write(buf,0,len);\n      start+=len;\n      mMission.notifyProgress(len);\n    }\n    dispose();\n    done=len == -1;\n  }\n catch (  Exception e) {\n    dispose();\n    mMission.fallbackResumeOffset=start;\n    if (!mMission.running || e instanceof ClosedByInterruptException)     return;\n    if (e instanceof HttpError && ((HttpError)e).statusCode == ERROR_HTTP_FORBIDDEN) {\n      dispose();\n      mMission.doRecover(ERROR_HTTP_FORBIDDEN);\n      return;\n    }\n    if (mRetryCount++ >= mMission.maxRetry) {\n      mMission.notifyError(e);\n      return;\n    }\n    if (DEBUG) {\n      Log.e(TAG,\"got exception, retrying...\",e);\n    }\n    run();\n    return;\n  }\n  if (done) {\n    mMission.notifyFinished();\n  }\n else {\n    mMission.fallbackResumeOffset=start;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 347,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2952,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void run(){\n  boolean done;\n  long start=mMission.fallbackResumeOffset;\n  if (DEBUG && !mMission.unknownLength && start > 0) {\n    Log.i(TAG,\"Resuming a single-thread download at \" + start);\n  }\n  try {\n    long rangeStart=(mMission.unknownLength || start < 1) ? -1 : start;\n    int mId=1;\n    mConn=mMission.openConnection(false,rangeStart,-1);\n    if (mRetryCount == 0 && rangeStart == -1) {\n      mConn.setRequestProperty(\"Range\",\"bytes=0-\");\n    }\n    mMission.establishConnection(mId,mConn);\n    if (mConn.getResponseCode() == 416 && start > 0) {\n      mMission.notifyProgress(-start);\n      start=0;\n      mRetryCount--;\n      throw new DownloadMission.HttpError(416);\n    }\n    if (!mMission.unknownLength)     mMission.unknownLength=Utility.getContentLength(mConn) == -1;\n    if (mMission.unknownLength || mConn.getResponseCode() == 200) {\n      mMission.done=mMission.offsets[mMission.current] - mMission.offsets[0];\n    }\n    mF=mMission.storage.getStream();\n    mF.seek(mMission.offsets[mMission.current] + start);\n    mIs=mConn.getInputStream();\n    byte[] buf=new byte[DownloadMission.BUFFER_SIZE];\n    int len=0;\n    while (mMission.running && (len=mIs.read(buf,0,buf.length)) != -1) {\n      mF.write(buf,0,len);\n      start+=len;\n      mMission.notifyProgress(len);\n    }\n    dispose();\n    done=len == -1;\n  }\n catch (  Exception e) {\n    dispose();\n    mMission.fallbackResumeOffset=start;\n    if (!mMission.running || e instanceof ClosedByInterruptException)     return;\n    if (e instanceof HttpError && ((HttpError)e).statusCode == ERROR_HTTP_FORBIDDEN) {\n      dispose();\n      mMission.doRecover(ERROR_HTTP_FORBIDDEN);\n      return;\n    }\n    if (mRetryCount++ >= mMission.maxRetry) {\n      mMission.notifyError(e);\n      return;\n    }\n    if (DEBUG) {\n      Log.e(TAG,\"got exception, retrying...\",e);\n    }\n    run();\n    return;\n  }\n  if (done) {\n    mMission.notifyFinished();\n  }\n else {\n    mMission.fallbackResumeOffset=start;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 353,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 113,
        "startColumnNumber" : 12,
        "endLineNumber" : 113,
        "endColumnNumber" : 85
      },
      "nodeContext" : "if (!mMission.running || e instanceof ClosedByInterruptException) return;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 113,
    "startColumnNumber" : 16,
    "endLineNumber" : 113,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ ]
}