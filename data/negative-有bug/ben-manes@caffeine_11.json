{
  "id" : 11,
  "expression" : "context.isUnbounded()",
  "projectName" : "ben-manes@caffeine",
  "commitID" : "30ca3d80d9dc7aa20adceacfc5fff1659bbadb8e",
  "filePath" : "/src/test/java/com/github/benmanes/caffeine/cache/testing/CacheSpec.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "context.isUnbounded()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 275,
      "startColumnNumber" : 20,
      "endLineNumber" : 275,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 275,
        "startColumnNumber" : 20,
        "endLineNumber" : 277,
        "endColumnNumber" : 39
      },
      "nodeContext" : "context.isUnbounded() ? (int)size() : (int)context.maximumSize()",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 275,
        "startColumnNumber" : 10,
        "endLineNumber" : 277,
        "endColumnNumber" : 39
      },
      "nodeContext" : "maximum=context.isUnbounded() ? (int)size() : (int)context.maximumSize()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 275,
        "startColumnNumber" : 6,
        "endLineNumber" : 277,
        "endColumnNumber" : 40
      },
      "nodeContext" : "int maximum=context.isUnbounded() ? (int)size() : (int)context.maximumSize();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 369,
        "startLineNumber" : 274,
        "startColumnNumber" : 78,
        "endLineNumber" : 285,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int maximum=context.isUnbounded() ? (int)size() : (int)context.maximumSize();\n  context.firstKey=1;\n  context.lastKey=maximum;\n  context.middleKey=(context.lastKey - context.firstKey) / 2;\n  for (int i=1; i <= maximum; i++) {\n    context.original.put(i,-i);\n    cache.put(i,-i);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.EnumDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 443,
        "startLineNumber" : 274,
        "startColumnNumber" : 4,
        "endLineNumber" : 285,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void populate(CacheContext context,Cache<Integer,Integer> cache){\n  int maximum=context.isUnbounded() ? (int)size() : (int)context.maximumSize();\n  context.firstKey=1;\n  context.lastKey=maximum;\n  context.middleKey=(context.lastKey - context.firstKey) / 2;\n  for (int i=1; i <= maximum; i++) {\n    context.original.put(i,-i);\n    cache.put(i,-i);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 90,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 275,
        "startColumnNumber" : 20,
        "endLineNumber" : 277,
        "endColumnNumber" : 39
      },
      "nodeContext" : "context.isUnbounded() ? (int)size() : (int)context.maximumSize()",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 275,
    "startColumnNumber" : 20,
    "endLineNumber" : 275,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}