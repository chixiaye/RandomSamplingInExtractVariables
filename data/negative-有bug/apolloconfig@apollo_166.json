{
  "id" : 166,
  "expression" : "file.isFile()",
  "projectName" : "apolloconfig@apollo",
  "commitID" : "7b7d753f78e444f9cf97b0f238f7e33f585cb277",
  "filePath" : "/apollo-client/src/main/java/com/ctrip/framework/apollo/internals/LocalFileConfigRepository.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "file.isFile()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 190,
      "startColumnNumber" : 8,
      "endLineNumber" : 190,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 190,
        "startColumnNumber" : 8,
        "endLineNumber" : 190,
        "endColumnNumber" : 39
      },
      "nodeContext" : "file.isFile() && file.canRead()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 804,
        "startLineNumber" : 190,
        "startColumnNumber" : 4,
        "endLineNumber" : 215,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (file.isFile() && file.canRead()) {\n  InputStream in=null;\n  try {\n    in=new FileInputStream(file);\n    properties=new Properties();\n    properties.load(in);\n    logger.debug(\"Loading local config file {} successfully!\",file.getAbsolutePath());\n  }\n catch (  IOException ex) {\n    Cat.logError(ex);\n    throw new ApolloConfigException(String.format(\"Loading config from local cache file %s failed\",file.getAbsolutePath()),ex);\n  }\n finally {\n    try {\n      if (in != null) {\n        in.close();\n      }\n    }\n catch (    IOException ex) {\n    }\n  }\n}\n else {\n  throw new ApolloConfigException(String.format(\"Cannot read from local cache file %s\",file.getAbsolutePath()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 96,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1001,
        "startLineNumber" : 184,
        "startColumnNumber" : 95,
        "endLineNumber" : 218,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Preconditions.checkNotNull(baseDir,\"Basedir cannot be null\");\n  File file=assembleLocalCacheFile(baseDir,namespace);\n  Properties properties=null;\n  if (file.isFile() && file.canRead()) {\n    InputStream in=null;\n    try {\n      in=new FileInputStream(file);\n      properties=new Properties();\n      properties.load(in);\n      logger.debug(\"Loading local config file {} successfully!\",file.getAbsolutePath());\n    }\n catch (    IOException ex) {\n      Cat.logError(ex);\n      throw new ApolloConfigException(String.format(\"Loading config from local cache file %s failed\",file.getAbsolutePath()),ex);\n    }\n finally {\n      try {\n        if (in != null) {\n          in.close();\n        }\n      }\n catch (      IOException ex) {\n      }\n    }\n  }\n else {\n    throw new ApolloConfigException(String.format(\"Cannot read from local cache file %s\",file.getAbsolutePath()));\n  }\n  return properties;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1094,
        "startLineNumber" : 184,
        "startColumnNumber" : 2,
        "endLineNumber" : 218,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private Properties loadFromLocalCacheFile(File baseDir,String namespace) throws IOException {\n  Preconditions.checkNotNull(baseDir,\"Basedir cannot be null\");\n  File file=assembleLocalCacheFile(baseDir,namespace);\n  Properties properties=null;\n  if (file.isFile() && file.canRead()) {\n    InputStream in=null;\n    try {\n      in=new FileInputStream(file);\n      properties=new Properties();\n      properties.load(in);\n      logger.debug(\"Loading local config file {} successfully!\",file.getAbsolutePath());\n    }\n catch (    IOException ex) {\n      Cat.logError(ex);\n      throw new ApolloConfigException(String.format(\"Loading config from local cache file %s failed\",file.getAbsolutePath()),ex);\n    }\n finally {\n      try {\n        if (in != null) {\n          in.close();\n        }\n      }\n catch (      IOException ex) {\n      }\n    }\n  }\n else {\n    throw new ApolloConfigException(String.format(\"Cannot read from local cache file %s\",file.getAbsolutePath()));\n  }\n  return properties;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 135,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 190,
        "startColumnNumber" : 8,
        "endLineNumber" : 190,
        "endColumnNumber" : 39
      },
      "nodeContext" : "file.isFile() && file.canRead()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 190,
    "startColumnNumber" : 8,
    "endLineNumber" : 190,
    "endColumnNumber" : 21
  } ],
  "layoutRelationDataList" : [ ]
}