{
  "id" : 122,
  "expression" : "null",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-cluster/src/main/java/org/apache/dubbo/rpc/cluster/merger/MergerFactory.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 42,
      "startColumnNumber" : 26,
      "endLineNumber" : 42,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 42,
        "endColumnNumber" : 30
      },
      "nodeContext" : "returnType == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 42,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (returnType == null) {\n  throw new IllegalArgumentException(\"returnType is null\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 763,
        "startLineNumber" : 41,
        "startColumnNumber" : 63,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (returnType == null) {\n    throw new IllegalArgumentException(\"returnType is null\");\n  }\n  Merger result;\n  if (returnType.isArray()) {\n    Class type=returnType.getComponentType();\n    result=MERGER_CACHE.get(type);\n    if (result == null) {\n      loadMergers();\n      result=MERGER_CACHE.get(type);\n    }\n    if (result == null && !type.isPrimitive()) {\n      result=ArrayMerger.INSTANCE;\n    }\n  }\n else {\n    result=MERGER_CACHE.get(returnType);\n    if (result == null) {\n      loadMergers();\n      result=MERGER_CACHE.get(returnType);\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 92,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1181,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Find the merger according to the returnType class, the merger will merge an array of returnType into one\n * @param returnType the merger will return this type\n * @return the merger which merges an array of returnType into one, return null if not exist\n * @throws IllegalArgumentException if returnType is null\n */\npublic static <T>Merger<T> getMerger(Class<T> returnType){\n  if (returnType == null) {\n    throw new IllegalArgumentException(\"returnType is null\");\n  }\n  Merger result;\n  if (returnType.isArray()) {\n    Class type=returnType.getComponentType();\n    result=MERGER_CACHE.get(type);\n    if (result == null) {\n      loadMergers();\n      result=MERGER_CACHE.get(type);\n    }\n    if (result == null && !type.isPrimitive()) {\n      result=ArrayMerger.INSTANCE;\n    }\n  }\n else {\n    result=MERGER_CACHE.get(returnType);\n    if (result == null) {\n      loadMergers();\n      result=MERGER_CACHE.get(returnType);\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 111,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 42,
        "startColumnNumber" : 12,
        "endLineNumber" : 42,
        "endColumnNumber" : 30
      },
      "nodeContext" : "returnType == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 50,
      "startColumnNumber" : 26,
      "endLineNumber" : 50,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 50,
        "startColumnNumber" : 16,
        "endLineNumber" : 50,
        "endColumnNumber" : 30
      },
      "nodeContext" : "result == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 50,
        "startColumnNumber" : 12,
        "endLineNumber" : 53,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (result == null) {\n  loadMergers();\n  result=MERGER_CACHE.get(type);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 358,
        "startLineNumber" : 47,
        "startColumnNumber" : 34,
        "endLineNumber" : 57,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Class type=returnType.getComponentType();\n  result=MERGER_CACHE.get(type);\n  if (result == null) {\n    loadMergers();\n    result=MERGER_CACHE.get(type);\n  }\n  if (result == null && !type.isPrimitive()) {\n    result=ArrayMerger.INSTANCE;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 586,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (returnType.isArray()) {\n  Class type=returnType.getComponentType();\n  result=MERGER_CACHE.get(type);\n  if (result == null) {\n    loadMergers();\n    result=MERGER_CACHE.get(type);\n  }\n  if (result == null && !type.isPrimitive()) {\n    result=ArrayMerger.INSTANCE;\n  }\n}\n else {\n  result=MERGER_CACHE.get(returnType);\n  if (result == null) {\n    loadMergers();\n    result=MERGER_CACHE.get(returnType);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 74,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 763,
        "startLineNumber" : 41,
        "startColumnNumber" : 63,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (returnType == null) {\n    throw new IllegalArgumentException(\"returnType is null\");\n  }\n  Merger result;\n  if (returnType.isArray()) {\n    Class type=returnType.getComponentType();\n    result=MERGER_CACHE.get(type);\n    if (result == null) {\n      loadMergers();\n      result=MERGER_CACHE.get(type);\n    }\n    if (result == null && !type.isPrimitive()) {\n      result=ArrayMerger.INSTANCE;\n    }\n  }\n else {\n    result=MERGER_CACHE.get(returnType);\n    if (result == null) {\n      loadMergers();\n      result=MERGER_CACHE.get(returnType);\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 92,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1181,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Find the merger according to the returnType class, the merger will merge an array of returnType into one\n * @param returnType the merger will return this type\n * @return the merger which merges an array of returnType into one, return null if not exist\n * @throws IllegalArgumentException if returnType is null\n */\npublic static <T>Merger<T> getMerger(Class<T> returnType){\n  if (returnType == null) {\n    throw new IllegalArgumentException(\"returnType is null\");\n  }\n  Merger result;\n  if (returnType.isArray()) {\n    Class type=returnType.getComponentType();\n    result=MERGER_CACHE.get(type);\n    if (result == null) {\n      loadMergers();\n      result=MERGER_CACHE.get(type);\n    }\n    if (result == null && !type.isPrimitive()) {\n      result=ArrayMerger.INSTANCE;\n    }\n  }\n else {\n    result=MERGER_CACHE.get(returnType);\n    if (result == null) {\n      loadMergers();\n      result=MERGER_CACHE.get(returnType);\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 111,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 50,
        "startColumnNumber" : 16,
        "endLineNumber" : 50,
        "endColumnNumber" : 30
      },
      "nodeContext" : "result == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 54,
      "startColumnNumber" : 26,
      "endLineNumber" : 54,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 54,
        "startColumnNumber" : 16,
        "endLineNumber" : 54,
        "endColumnNumber" : 30
      },
      "nodeContext" : "result == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 54,
        "startColumnNumber" : 16,
        "endLineNumber" : 54,
        "endColumnNumber" : 53
      },
      "nodeContext" : "result == null && !type.isPrimitive()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 54,
        "startColumnNumber" : 12,
        "endLineNumber" : 56,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (result == null && !type.isPrimitive()) {\n  result=ArrayMerger.INSTANCE;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 358,
        "startLineNumber" : 47,
        "startColumnNumber" : 34,
        "endLineNumber" : 57,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Class type=returnType.getComponentType();\n  result=MERGER_CACHE.get(type);\n  if (result == null) {\n    loadMergers();\n    result=MERGER_CACHE.get(type);\n  }\n  if (result == null && !type.isPrimitive()) {\n    result=ArrayMerger.INSTANCE;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 586,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (returnType.isArray()) {\n  Class type=returnType.getComponentType();\n  result=MERGER_CACHE.get(type);\n  if (result == null) {\n    loadMergers();\n    result=MERGER_CACHE.get(type);\n  }\n  if (result == null && !type.isPrimitive()) {\n    result=ArrayMerger.INSTANCE;\n  }\n}\n else {\n  result=MERGER_CACHE.get(returnType);\n  if (result == null) {\n    loadMergers();\n    result=MERGER_CACHE.get(returnType);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 74,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 763,
        "startLineNumber" : 41,
        "startColumnNumber" : 63,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (returnType == null) {\n    throw new IllegalArgumentException(\"returnType is null\");\n  }\n  Merger result;\n  if (returnType.isArray()) {\n    Class type=returnType.getComponentType();\n    result=MERGER_CACHE.get(type);\n    if (result == null) {\n      loadMergers();\n      result=MERGER_CACHE.get(type);\n    }\n    if (result == null && !type.isPrimitive()) {\n      result=ArrayMerger.INSTANCE;\n    }\n  }\n else {\n    result=MERGER_CACHE.get(returnType);\n    if (result == null) {\n      loadMergers();\n      result=MERGER_CACHE.get(returnType);\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 92,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1181,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Find the merger according to the returnType class, the merger will merge an array of returnType into one\n * @param returnType the merger will return this type\n * @return the merger which merges an array of returnType into one, return null if not exist\n * @throws IllegalArgumentException if returnType is null\n */\npublic static <T>Merger<T> getMerger(Class<T> returnType){\n  if (returnType == null) {\n    throw new IllegalArgumentException(\"returnType is null\");\n  }\n  Merger result;\n  if (returnType.isArray()) {\n    Class type=returnType.getComponentType();\n    result=MERGER_CACHE.get(type);\n    if (result == null) {\n      loadMergers();\n      result=MERGER_CACHE.get(type);\n    }\n    if (result == null && !type.isPrimitive()) {\n      result=ArrayMerger.INSTANCE;\n    }\n  }\n else {\n    result=MERGER_CACHE.get(returnType);\n    if (result == null) {\n      loadMergers();\n      result=MERGER_CACHE.get(returnType);\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 111,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 54,
        "startColumnNumber" : 16,
        "endLineNumber" : 54,
        "endColumnNumber" : 53
      },
      "nodeContext" : "result == null && !type.isPrimitive()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "null"
  }, {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 59,
      "startColumnNumber" : 26,
      "endLineNumber" : 59,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 59,
        "startColumnNumber" : 16,
        "endLineNumber" : 59,
        "endColumnNumber" : 30
      },
      "nodeContext" : "result == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 59,
        "startColumnNumber" : 12,
        "endLineNumber" : 62,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (result == null) {\n  loadMergers();\n  result=MERGER_CACHE.get(returnType);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 196,
        "startLineNumber" : 57,
        "startColumnNumber" : 15,
        "endLineNumber" : 63,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  result=MERGER_CACHE.get(returnType);\n  if (result == null) {\n    loadMergers();\n    result=MERGER_CACHE.get(returnType);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 586,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (returnType.isArray()) {\n  Class type=returnType.getComponentType();\n  result=MERGER_CACHE.get(type);\n  if (result == null) {\n    loadMergers();\n    result=MERGER_CACHE.get(type);\n  }\n  if (result == null && !type.isPrimitive()) {\n    result=ArrayMerger.INSTANCE;\n  }\n}\n else {\n  result=MERGER_CACHE.get(returnType);\n  if (result == null) {\n    loadMergers();\n    result=MERGER_CACHE.get(returnType);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 74,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 763,
        "startLineNumber" : 41,
        "startColumnNumber" : 63,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (returnType == null) {\n    throw new IllegalArgumentException(\"returnType is null\");\n  }\n  Merger result;\n  if (returnType.isArray()) {\n    Class type=returnType.getComponentType();\n    result=MERGER_CACHE.get(type);\n    if (result == null) {\n      loadMergers();\n      result=MERGER_CACHE.get(type);\n    }\n    if (result == null && !type.isPrimitive()) {\n      result=ArrayMerger.INSTANCE;\n    }\n  }\n else {\n    result=MERGER_CACHE.get(returnType);\n    if (result == null) {\n      loadMergers();\n      result=MERGER_CACHE.get(returnType);\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 92,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1181,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Find the merger according to the returnType class, the merger will merge an array of returnType into one\n * @param returnType the merger will return this type\n * @return the merger which merges an array of returnType into one, return null if not exist\n * @throws IllegalArgumentException if returnType is null\n */\npublic static <T>Merger<T> getMerger(Class<T> returnType){\n  if (returnType == null) {\n    throw new IllegalArgumentException(\"returnType is null\");\n  }\n  Merger result;\n  if (returnType.isArray()) {\n    Class type=returnType.getComponentType();\n    result=MERGER_CACHE.get(type);\n    if (result == null) {\n      loadMergers();\n      result=MERGER_CACHE.get(type);\n    }\n    if (result == null && !type.isPrimitive()) {\n      result=ArrayMerger.INSTANCE;\n    }\n  }\n else {\n    result=MERGER_CACHE.get(returnType);\n    if (result == null) {\n      loadMergers();\n      result=MERGER_CACHE.get(returnType);\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 111,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 59,
        "startColumnNumber" : 16,
        "endLineNumber" : 59,
        "endColumnNumber" : 30
      },
      "nodeContext" : "result == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "null"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 42,
    "startColumnNumber" : 26,
    "endLineNumber" : 42,
    "endColumnNumber" : 30
  }, {
    "charLength" : 4,
    "startLineNumber" : 50,
    "startColumnNumber" : 26,
    "endLineNumber" : 50,
    "endColumnNumber" : 30
  }, {
    "charLength" : 4,
    "startLineNumber" : 54,
    "startColumnNumber" : 26,
    "endLineNumber" : 54,
    "endColumnNumber" : 30
  }, {
    "charLength" : 4,
    "startLineNumber" : 59,
    "startColumnNumber" : 26,
    "endLineNumber" : 59,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  } ]
}