{
  "id" : 342,
  "expression" : "readerIndex",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Features/Base/src/main/java/ghidra/app/util/bin/format/pe/BoundImportForwarderRef.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "readerIndex",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 65,
      "startColumnNumber" : 68,
      "endLineNumber" : 65,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 91
      },
      "nodeContext" : "boundImportForwarderRef.initBoundImportForwarderRef(reader,readerIndex,biddIndex)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 92
      },
      "nodeContext" : "boundImportForwarderRef.initBoundImportForwarderRef(reader,readerIndex,biddIndex);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 287,
        "startLineNumber" : 63,
        "startColumnNumber" : 46,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  BoundImportForwarderRef boundImportForwarderRef=(BoundImportForwarderRef)reader.getFactory().create(BoundImportForwarderRef.class);\n  boundImportForwarderRef.initBoundImportForwarderRef(reader,readerIndex,biddIndex);\n  return boundImportForwarderRef;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 664,
        "startLineNumber" : 55,
        "startColumnNumber" : 1,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * @param reader      the binary reader\n * @param readerIndex the index into the binary reader\n * @param biddIndex   the index where the bound import data directory begins\n */\nstatic BoundImportForwarderRef createBoundImportForwarderRef(FactoryBundledWithBinaryReader reader,int readerIndex,int biddIndex) throws IOException {\n  BoundImportForwarderRef boundImportForwarderRef=(BoundImportForwarderRef)reader.getFactory().create(BoundImportForwarderRef.class);\n  boundImportForwarderRef.initBoundImportForwarderRef(reader,readerIndex,biddIndex);\n  return boundImportForwarderRef;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 44,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 65,
        "startColumnNumber" : 8,
        "endLineNumber" : 65,
        "endColumnNumber" : 92
      },
      "nodeContext" : "boundImportForwarderRef.initBoundImportForwarderRef(reader,readerIndex,biddIndex);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 65,
    "startColumnNumber" : 68,
    "endLineNumber" : 65,
    "endColumnNumber" : 79
  } ],
  "layoutRelationDataList" : [ ]
}