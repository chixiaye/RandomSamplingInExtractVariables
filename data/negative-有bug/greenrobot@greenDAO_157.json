{
  "id" : 157,
  "expression" : "latch.await(10,TimeUnit.SECONDS)",
  "projectName" : "greenrobot@greenDAO",
  "commitID" : "bdaad7806db3e4db0ec5cc73835576e0aa9067a0",
  "filePath" : "/tests/DaoTest/src/androidTest/java/org/greenrobot/greendao/daotest/entity/AnActiveEntityMultithreadingTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "latch.await(10,TimeUnit.SECONDS)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 70,
      "startColumnNumber" : 23,
      "endLineNumber" : 70,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 70,
        "startColumnNumber" : 12,
        "endLineNumber" : 70,
        "endColumnNumber" : 57
      },
      "nodeContext" : "assertTrue(latch.await(10,TimeUnit.SECONDS))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 70,
        "startColumnNumber" : 12,
        "endLineNumber" : 70,
        "endColumnNumber" : 58
      },
      "nodeContext" : "assertTrue(latch.await(10,TimeUnit.SECONDS));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 731,
        "startLineNumber" : 69,
        "startColumnNumber" : 12,
        "endLineNumber" : 87,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  assertTrue(latch.await(10,TimeUnit.SECONDS));\n  for (int i=0; ; i++) {\n    AnActiveEntity entity=dao.load(1l);\n    if (entity != null) {\n      countEntity++;\n      assertNotNull(daoSessionField.get(entity));\n    }\n    if (i == 1000000 && countEntity == 0) {\n      fail(\"No entity available\");\n    }\n    if (countEntity % 10000 == 0) {\n      DaoLog.d(\"Checked entities \" + countEntity + \" in \"+ i+ \" iterations\");\n    }\n    if (countEntity == ENTITIES_TO_CHECK) {\n      break;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 814,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  assertTrue(latch.await(10,TimeUnit.SECONDS));\n  for (int i=0; ; i++) {\n    AnActiveEntity entity=dao.load(1l);\n    if (entity != null) {\n      countEntity++;\n      assertNotNull(daoSessionField.get(entity));\n    }\n    if (i == 1000000 && countEntity == 0) {\n      fail(\"No entity available\");\n    }\n    if (countEntity % 10000 == 0) {\n      DaoLog.d(\"Checked entities \" + countEntity + \" in \"+ i+ \" iterations\");\n    }\n    if (countEntity == ENTITIES_TO_CHECK) {\n      break;\n    }\n  }\n}\n  finally {\n  running=false;\n  thread.join();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 90,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1060,
        "startLineNumber" : 60,
        "startColumnNumber" : 70,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  thread.start();\n  Field daoSessionField=AnActiveEntity.class.getDeclaredField(\"daoSession\");\n  daoSessionField.setAccessible(true);\n  int countEntity=0;\n  countDownAndAwaitLatch();\n  try {\n    assertTrue(latch.await(10,TimeUnit.SECONDS));\n    for (int i=0; ; i++) {\n      AnActiveEntity entity=dao.load(1l);\n      if (entity != null) {\n        countEntity++;\n        assertNotNull(daoSessionField.get(entity));\n      }\n      if (i == 1000000 && countEntity == 0) {\n        fail(\"No entity available\");\n      }\n      if (countEntity % 10000 == 0) {\n        DaoLog.d(\"Checked entities \" + countEntity + \" in \"+ i+ \" iterations\");\n      }\n      if (countEntity == ENTITIES_TO_CHECK) {\n        break;\n      }\n    }\n  }\n  finally {\n    running=false;\n    thread.join();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1126,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void doTestAlwaysAttached(Thread thread) throws Exception {\n  thread.start();\n  Field daoSessionField=AnActiveEntity.class.getDeclaredField(\"daoSession\");\n  daoSessionField.setAccessible(true);\n  int countEntity=0;\n  countDownAndAwaitLatch();\n  try {\n    assertTrue(latch.await(10,TimeUnit.SECONDS));\n    for (int i=0; ; i++) {\n      AnActiveEntity entity=dao.load(1l);\n      if (entity != null) {\n        countEntity++;\n        assertNotNull(daoSessionField.get(entity));\n      }\n      if (i == 1000000 && countEntity == 0) {\n        fail(\"No entity available\");\n      }\n      if (countEntity % 10000 == 0) {\n        DaoLog.d(\"Checked entities \" + countEntity + \" in \"+ i+ \" iterations\");\n      }\n      if (countEntity == ENTITIES_TO_CHECK) {\n        break;\n      }\n    }\n  }\n  finally {\n    running=false;\n    thread.join();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 129,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 70,
        "startColumnNumber" : 12,
        "endLineNumber" : 70,
        "endColumnNumber" : 58
      },
      "nodeContext" : "assertTrue(latch.await(10,TimeUnit.SECONDS));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 33,
    "startLineNumber" : 70,
    "startColumnNumber" : 23,
    "endLineNumber" : 70,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}