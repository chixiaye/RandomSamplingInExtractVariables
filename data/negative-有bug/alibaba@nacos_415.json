{
  "id" : 415,
  "expression" : "Loggers",
  "projectName" : "alibaba@nacos",
  "commitID" : "4e7346db1d6657ffe07c96bebd2d348229c2812f",
  "filePath" : "/core/src/main/java/com/alibaba/nacos/core/remote/RpcPushService.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Loggers",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 80,
      "startColumnNumber" : 16,
      "endLineNumber" : 80,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 80,
        "startColumnNumber" : 16,
        "endLineNumber" : 80,
        "endColumnNumber" : 37
      },
      "nodeContext" : "Loggers.REMOTE_DIGEST",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 178,
        "startLineNumber" : 80,
        "startColumnNumber" : 16,
        "endLineNumber" : 82,
        "endColumnNumber" : 43
      },
      "nodeContext" : "Loggers.REMOTE_DIGEST.error(\"error to send push response to connectionId ={},push response={}\",connectionId,request,e)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 179,
        "startLineNumber" : 80,
        "startColumnNumber" : 16,
        "endLineNumber" : 82,
        "endColumnNumber" : 44
      },
      "nodeContext" : "Loggers.REMOTE_DIGEST.error(\"error to send push response to connectionId ={},push response={}\",connectionId,request,e);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 254,
        "startLineNumber" : 79,
        "startColumnNumber" : 34,
        "endLineNumber" : 84,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Loggers.REMOTE_DIGEST.error(\"error to send push response to connectionId ={},push response={}\",connectionId,request,e);\n  requestCallBack.onFail(e);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 274,
        "startLineNumber" : 79,
        "startColumnNumber" : 14,
        "endLineNumber" : 84,
        "endColumnNumber" : 13
      },
      "nodeContext" : "catch (Exception e) {\n  Loggers.REMOTE_DIGEST.error(\"error to send push response to connectionId ={},push response={}\",connectionId,request,e);\n  requestCallBack.onFail(e);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1361,
        "startLineNumber" : 54,
        "startColumnNumber" : 12,
        "endLineNumber" : 84,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  connection.asyncRequest(request,new AbstractRequestCallBack(requestCallBack.getTimeout()){\n    @Override public Executor getExecutor(){\n      return executor;\n    }\n    @Override public void onResponse(    Response response){\n      if (response.isSuccess()) {\n        requestCallBack.onSuccess();\n      }\n else {\n        requestCallBack.onFail(new NacosException(response.getErrorCode(),response.getMessage()));\n      }\n    }\n    @Override public void onException(    Throwable e){\n      requestCallBack.onFail(e);\n    }\n  }\n);\n}\n catch (ConnectionAlreadyClosedException e) {\n  connectionManager.unregister(connectionId);\n  requestCallBack.onSuccess();\n}\ncatch (Exception e) {\n  Loggers.REMOTE_DIGEST.error(\"error to send push response to connectionId ={},push response={}\",connectionId,request,e);\n  requestCallBack.onFail(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 110,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1385,
        "startLineNumber" : 53,
        "startColumnNumber" : 32,
        "endLineNumber" : 85,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    connection.asyncRequest(request,new AbstractRequestCallBack(requestCallBack.getTimeout()){\n      @Override public Executor getExecutor(){\n        return executor;\n      }\n      @Override public void onResponse(      Response response){\n        if (response.isSuccess()) {\n          requestCallBack.onSuccess();\n        }\n else {\n          requestCallBack.onFail(new NacosException(response.getErrorCode(),response.getMessage()));\n        }\n      }\n      @Override public void onException(      Throwable e){\n        requestCallBack.onFail(e);\n      }\n    }\n);\n  }\n catch (  ConnectionAlreadyClosedException e) {\n    connectionManager.unregister(connectionId);\n    requestCallBack.onSuccess();\n  }\ncatch (  Exception e) {\n    Loggers.REMOTE_DIGEST.error(\"error to send push response to connectionId ={},push response={}\",connectionId,request,e);\n    requestCallBack.onFail(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1467,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (connection != null) {\n  try {\n    connection.asyncRequest(request,new AbstractRequestCallBack(requestCallBack.getTimeout()){\n      @Override public Executor getExecutor(){\n        return executor;\n      }\n      @Override public void onResponse(      Response response){\n        if (response.isSuccess()) {\n          requestCallBack.onSuccess();\n        }\n else {\n          requestCallBack.onFail(new NacosException(response.getErrorCode(),response.getMessage()));\n        }\n      }\n      @Override public void onException(      Throwable e){\n        requestCallBack.onFail(e);\n      }\n    }\n);\n  }\n catch (  ConnectionAlreadyClosedException e) {\n    connectionManager.unregister(connectionId);\n    requestCallBack.onSuccess();\n  }\ncatch (  Exception e) {\n    Loggers.REMOTE_DIGEST.error(\"error to send push response to connectionId ={},push response={}\",connectionId,request,e);\n    requestCallBack.onFail(e);\n  }\n}\n else {\n  requestCallBack.onSuccess();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 120,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1562,
        "startLineNumber" : 51,
        "startColumnNumber" : 31,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Connection connection=connectionManager.getConnection(connectionId);\n  if (connection != null) {\n    try {\n      connection.asyncRequest(request,new AbstractRequestCallBack(requestCallBack.getTimeout()){\n        @Override public Executor getExecutor(){\n          return executor;\n        }\n        @Override public void onResponse(        Response response){\n          if (response.isSuccess()) {\n            requestCallBack.onSuccess();\n          }\n else {\n            requestCallBack.onFail(new NacosException(response.getErrorCode(),response.getMessage()));\n          }\n        }\n        @Override public void onException(        Throwable e){\n          requestCallBack.onFail(e);\n        }\n      }\n);\n    }\n catch (    ConnectionAlreadyClosedException e) {\n      connectionManager.unregister(connectionId);\n      requestCallBack.onSuccess();\n    }\ncatch (    Exception e) {\n      Loggers.REMOTE_DIGEST.error(\"error to send push response to connectionId ={},push response={}\",connectionId,request,e);\n      requestCallBack.onFail(e);\n    }\n  }\n else {\n    requestCallBack.onSuccess();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 130,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1883,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * push response with no ack.\n * @param connectionId    connectionId.\n * @param request         request.\n * @param requestCallBack requestCallBack.\n */\npublic void pushWithCallback(String connectionId,ServerRequest request,PushCallBack requestCallBack,Executor executor){\n  Connection connection=connectionManager.getConnection(connectionId);\n  if (connection != null) {\n    try {\n      connection.asyncRequest(request,new AbstractRequestCallBack(requestCallBack.getTimeout()){\n        @Override public Executor getExecutor(){\n          return executor;\n        }\n        @Override public void onResponse(        Response response){\n          if (response.isSuccess()) {\n            requestCallBack.onSuccess();\n          }\n else {\n            requestCallBack.onFail(new NacosException(response.getErrorCode(),response.getMessage()));\n          }\n        }\n        @Override public void onException(        Throwable e){\n          requestCallBack.onFail(e);\n        }\n      }\n);\n    }\n catch (    ConnectionAlreadyClosedException e) {\n      connectionManager.unregister(connectionId);\n      requestCallBack.onSuccess();\n    }\ncatch (    Exception e) {\n      Loggers.REMOTE_DIGEST.error(\"error to send push response to connectionId ={},push response={}\",connectionId,request,e);\n      requestCallBack.onFail(e);\n    }\n  }\n else {\n    requestCallBack.onSuccess();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 151,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 80,
        "startColumnNumber" : 16,
        "endLineNumber" : 80,
        "endColumnNumber" : 37
      },
      "nodeContext" : "Loggers.REMOTE_DIGEST",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.alibaba.nacos.core.utils.Loggers"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 80,
    "startColumnNumber" : 16,
    "endLineNumber" : 80,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ ]
}