{
  "id" : 295,
  "expression" : "new File(reader.getText().trim())",
  "projectName" : "java-decompiler@jd-gui",
  "commitID" : "fbc5b14d66b37b88bf1dc18386b530e874550240",
  "filePath" : "/app/src/main/java/org/jd/gui/service/configuration/ConfigurationXmlPersisterProvider.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new File(reader.getText().trim())",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 116,
      "startColumnNumber" : 48,
      "endLineNumber" : 116,
      "endColumnNumber" : 81
    },
    "astNodeNumber" : 8,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 116,
        "startColumnNumber" : 41,
        "endLineNumber" : 116,
        "endColumnNumber" : 81
      },
      "nodeContext" : "file=new File(reader.getText().trim())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 116,
        "startColumnNumber" : 36,
        "endLineNumber" : 116,
        "endColumnNumber" : 82
      },
      "nodeContext" : "File file=new File(reader.getText().trim());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 2012,
        "startLineNumber" : 114,
        "startColumnNumber" : 28,
        "endLineNumber" : 145,
        "endColumnNumber" : 29
      },
      "nodeContext" : "switch (name) {\ncase \"/configuration/recentFilePaths/filePath\":  File file=new File(reader.getText().trim());\nif (file.exists()) {\n  recentFiles.add(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/loadPath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentLoadDirectory(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/savePath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentSaveDirectory(file);\n}\nbreak;\ncase \"/configuration/gui/lookAndFeel\":config.setLookAndFeel(reader.getText().trim());\nbreak;\ncase \"/configuration/gui/mainWindow/maximize\":maximize=Boolean.parseBoolean(reader.getText().trim());\nbreak;\ndefault:if (name.startsWith(\"/configuration/preferences/\")) {\nString key=name.substring(\"/configuration/preferences/\".length());\npreferences.put(key,reader.getText().trim());\n}\nbreak;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 131,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3250,
        "startLineNumber" : 95,
        "startColumnNumber" : 20,
        "endLineNumber" : 147,
        "endColumnNumber" : 21
      },
      "nodeContext" : "switch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:  names.push(name);\nname+='/' + reader.getLocalName();\nswitch (name) {\ncase \"/configuration/gui/mainWindow/location\":x=Integer.parseInt(reader.getAttributeValue(null,\"x\"));\ny=Integer.parseInt(reader.getAttributeValue(null,\"y\"));\nbreak;\ncase \"/configuration/gui/mainWindow/size\":w=Integer.parseInt(reader.getAttributeValue(null,\"w\"));\nh=Integer.parseInt(reader.getAttributeValue(null,\"h\"));\nbreak;\n}\nbreak;\ncase XMLStreamConstants.END_ELEMENT:name=names.pop();\nbreak;\ncase XMLStreamConstants.CHARACTERS:switch (name) {\ncase \"/configuration/recentFilePaths/filePath\":File file=new File(reader.getText().trim());\nif (file.exists()) {\nrecentFiles.add(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/loadPath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentLoadDirectory(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/savePath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentSaveDirectory(file);\n}\nbreak;\ncase \"/configuration/gui/lookAndFeel\":config.setLookAndFeel(reader.getText().trim());\nbreak;\ncase \"/configuration/gui/mainWindow/maximize\":maximize=Boolean.parseBoolean(reader.getText().trim());\nbreak;\ndefault:if (name.startsWith(\"/configuration/preferences/\")) {\nString key=name.substring(\"/configuration/preferences/\".length());\npreferences.put(key,reader.getText().trim());\n}\nbreak;\n}\nbreak;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 221,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 3292,
        "startLineNumber" : 94,
        "startColumnNumber" : 41,
        "endLineNumber" : 148,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:    names.push(name);\n  name+='/' + reader.getLocalName();\nswitch (name) {\ncase \"/configuration/gui/mainWindow/location\":  x=Integer.parseInt(reader.getAttributeValue(null,\"x\"));\ny=Integer.parseInt(reader.getAttributeValue(null,\"y\"));\nbreak;\ncase \"/configuration/gui/mainWindow/size\":w=Integer.parseInt(reader.getAttributeValue(null,\"w\"));\nh=Integer.parseInt(reader.getAttributeValue(null,\"h\"));\nbreak;\n}\nbreak;\ncase XMLStreamConstants.END_ELEMENT:name=names.pop();\nbreak;\ncase XMLStreamConstants.CHARACTERS:switch (name) {\ncase \"/configuration/recentFilePaths/filePath\":File file=new File(reader.getText().trim());\nif (file.exists()) {\nrecentFiles.add(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/loadPath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentLoadDirectory(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/savePath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentSaveDirectory(file);\n}\nbreak;\ncase \"/configuration/gui/lookAndFeel\":config.setLookAndFeel(reader.getText().trim());\nbreak;\ncase \"/configuration/gui/mainWindow/maximize\":maximize=Boolean.parseBoolean(reader.getText().trim());\nbreak;\ndefault:if (name.startsWith(\"/configuration/preferences/\")) {\nString key=name.substring(\"/configuration/preferences/\".length());\npreferences.put(key,reader.getText().trim());\n}\nbreak;\n}\nbreak;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 222,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3317,
        "startLineNumber" : 94,
        "startColumnNumber" : 16,
        "endLineNumber" : 148,
        "endColumnNumber" : 17
      },
      "nodeContext" : "while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:    names.push(name);\n  name+='/' + reader.getLocalName();\nswitch (name) {\ncase \"/configuration/gui/mainWindow/location\":  x=Integer.parseInt(reader.getAttributeValue(null,\"x\"));\ny=Integer.parseInt(reader.getAttributeValue(null,\"y\"));\nbreak;\ncase \"/configuration/gui/mainWindow/size\":w=Integer.parseInt(reader.getAttributeValue(null,\"w\"));\nh=Integer.parseInt(reader.getAttributeValue(null,\"h\"));\nbreak;\n}\nbreak;\ncase XMLStreamConstants.END_ELEMENT:name=names.pop();\nbreak;\ncase XMLStreamConstants.CHARACTERS:switch (name) {\ncase \"/configuration/recentFilePaths/filePath\":File file=new File(reader.getText().trim());\nif (file.exists()) {\nrecentFiles.add(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/loadPath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentLoadDirectory(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/savePath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentSaveDirectory(file);\n}\nbreak;\ncase \"/configuration/gui/lookAndFeel\":config.setLookAndFeel(reader.getText().trim());\nbreak;\ncase \"/configuration/gui/mainWindow/maximize\":maximize=Boolean.parseBoolean(reader.getText().trim());\nbreak;\ndefault:if (name.startsWith(\"/configuration/preferences/\")) {\nString key=name.substring(\"/configuration/preferences/\".length());\npreferences.put(key,reader.getText().trim());\n}\nbreak;\n}\nbreak;\n}\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 226,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 4424,
        "startLineNumber" : 84,
        "startColumnNumber" : 66,
        "endLineNumber" : 164,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  XMLStreamReader reader=XMLInputFactory.newInstance().createXMLStreamReader(fis);\n  String name=\"\";\n  Stack<String> names=new Stack<>();\n  List<File> recentFiles=new ArrayList<>();\n  boolean maximize=false;\n  Map<String,String> preferences=config.getPreferences();\n  while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:      names.push(name);\n    name+='/' + reader.getLocalName();\nswitch (name) {\ncase \"/configuration/gui/mainWindow/location\":    x=Integer.parseInt(reader.getAttributeValue(null,\"x\"));\n  y=Integer.parseInt(reader.getAttributeValue(null,\"y\"));\nbreak;\ncase \"/configuration/gui/mainWindow/size\":w=Integer.parseInt(reader.getAttributeValue(null,\"w\"));\nh=Integer.parseInt(reader.getAttributeValue(null,\"h\"));\nbreak;\n}\nbreak;\ncase XMLStreamConstants.END_ELEMENT:name=names.pop();\nbreak;\ncase XMLStreamConstants.CHARACTERS:switch (name) {\ncase \"/configuration/recentFilePaths/filePath\":File file=new File(reader.getText().trim());\nif (file.exists()) {\nrecentFiles.add(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/loadPath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentLoadDirectory(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/savePath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentSaveDirectory(file);\n}\nbreak;\ncase \"/configuration/gui/lookAndFeel\":config.setLookAndFeel(reader.getText().trim());\nbreak;\ncase \"/configuration/gui/mainWindow/maximize\":maximize=Boolean.parseBoolean(reader.getText().trim());\nbreak;\ndefault:if (name.startsWith(\"/configuration/preferences/\")) {\nString key=name.substring(\"/configuration/preferences/\".length());\npreferences.put(key,reader.getText().trim());\n}\nbreak;\n}\nbreak;\n}\n}\nif (recentFiles.size() > Constants.MAX_RECENT_FILES) {\nrecentFiles=recentFiles.subList(0,Constants.MAX_RECENT_FILES);\n}\nconfig.setRecentFiles(recentFiles);\nif ((x >= 0) && (y >= 0) && (x + w < screenSize.width)&& (y + h < screenSize.height)) {\nconfig.setMainWindowLocation(new Point(x,y));\nconfig.setMainWindowSize(new Dimension(w,h));\nconfig.setMainWindowMaximize(maximize);\n}\nreader.close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 364,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4573,
        "startLineNumber" : 84,
        "startColumnNumber" : 12,
        "endLineNumber" : 166,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try (FileInputStream fis=new FileInputStream(FILE)){\n  XMLStreamReader reader=XMLInputFactory.newInstance().createXMLStreamReader(fis);\n  String name=\"\";\n  Stack<String> names=new Stack<>();\n  List<File> recentFiles=new ArrayList<>();\n  boolean maximize=false;\n  Map<String,String> preferences=config.getPreferences();\n  while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:      names.push(name);\n    name+='/' + reader.getLocalName();\nswitch (name) {\ncase \"/configuration/gui/mainWindow/location\":    x=Integer.parseInt(reader.getAttributeValue(null,\"x\"));\n  y=Integer.parseInt(reader.getAttributeValue(null,\"y\"));\nbreak;\ncase \"/configuration/gui/mainWindow/size\":w=Integer.parseInt(reader.getAttributeValue(null,\"w\"));\nh=Integer.parseInt(reader.getAttributeValue(null,\"h\"));\nbreak;\n}\nbreak;\ncase XMLStreamConstants.END_ELEMENT:name=names.pop();\nbreak;\ncase XMLStreamConstants.CHARACTERS:switch (name) {\ncase \"/configuration/recentFilePaths/filePath\":File file=new File(reader.getText().trim());\nif (file.exists()) {\nrecentFiles.add(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/loadPath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentLoadDirectory(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/savePath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentSaveDirectory(file);\n}\nbreak;\ncase \"/configuration/gui/lookAndFeel\":config.setLookAndFeel(reader.getText().trim());\nbreak;\ncase \"/configuration/gui/mainWindow/maximize\":maximize=Boolean.parseBoolean(reader.getText().trim());\nbreak;\ndefault:if (name.startsWith(\"/configuration/preferences/\")) {\nString key=name.substring(\"/configuration/preferences/\".length());\npreferences.put(key,reader.getText().trim());\n}\nbreak;\n}\nbreak;\n}\n}\nif (recentFiles.size() > Constants.MAX_RECENT_FILES) {\nrecentFiles=recentFiles.subList(0,Constants.MAX_RECENT_FILES);\n}\nconfig.setRecentFiles(recentFiles);\nif ((x >= 0) && (y >= 0) && (x + w < screenSize.width)&& (y + h < screenSize.height)) {\nconfig.setMainWindowLocation(new Point(x,y));\nconfig.setMainWindowSize(new Dimension(w,h));\nconfig.setMainWindowMaximize(maximize);\n}\nreader.close();\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 385,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 4599,
        "startLineNumber" : 83,
        "startColumnNumber" : 27,
        "endLineNumber" : 167,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try (FileInputStream fis=new FileInputStream(FILE)){\n    XMLStreamReader reader=XMLInputFactory.newInstance().createXMLStreamReader(fis);\n    String name=\"\";\n    Stack<String> names=new Stack<>();\n    List<File> recentFiles=new ArrayList<>();\n    boolean maximize=false;\n    Map<String,String> preferences=config.getPreferences();\n    while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:        names.push(name);\n      name+='/' + reader.getLocalName();\nswitch (name) {\ncase \"/configuration/gui/mainWindow/location\":      x=Integer.parseInt(reader.getAttributeValue(null,\"x\"));\n    y=Integer.parseInt(reader.getAttributeValue(null,\"y\"));\n  break;\ncase \"/configuration/gui/mainWindow/size\":w=Integer.parseInt(reader.getAttributeValue(null,\"w\"));\nh=Integer.parseInt(reader.getAttributeValue(null,\"h\"));\nbreak;\n}\nbreak;\ncase XMLStreamConstants.END_ELEMENT:name=names.pop();\nbreak;\ncase XMLStreamConstants.CHARACTERS:switch (name) {\ncase \"/configuration/recentFilePaths/filePath\":File file=new File(reader.getText().trim());\nif (file.exists()) {\nrecentFiles.add(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/loadPath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentLoadDirectory(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/savePath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentSaveDirectory(file);\n}\nbreak;\ncase \"/configuration/gui/lookAndFeel\":config.setLookAndFeel(reader.getText().trim());\nbreak;\ncase \"/configuration/gui/mainWindow/maximize\":maximize=Boolean.parseBoolean(reader.getText().trim());\nbreak;\ndefault:if (name.startsWith(\"/configuration/preferences/\")) {\nString key=name.substring(\"/configuration/preferences/\".length());\npreferences.put(key,reader.getText().trim());\n}\nbreak;\n}\nbreak;\n}\n}\nif (recentFiles.size() > Constants.MAX_RECENT_FILES) {\nrecentFiles=recentFiles.subList(0,Constants.MAX_RECENT_FILES);\n}\nconfig.setRecentFiles(recentFiles);\nif ((x >= 0) && (y >= 0) && (x + w < screenSize.width)&& (y + h < screenSize.height)) {\nconfig.setMainWindowLocation(new Point(x,y));\nconfig.setMainWindowSize(new Dimension(w,h));\nconfig.setMainWindowMaximize(maximize);\n}\nreader.close();\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 386,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4618,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 167,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (FILE.exists()) {\n  try (FileInputStream fis=new FileInputStream(FILE)){\n    XMLStreamReader reader=XMLInputFactory.newInstance().createXMLStreamReader(fis);\n    String name=\"\";\n    Stack<String> names=new Stack<>();\n    List<File> recentFiles=new ArrayList<>();\n    boolean maximize=false;\n    Map<String,String> preferences=config.getPreferences();\n    while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:        names.push(name);\n      name+='/' + reader.getLocalName();\nswitch (name) {\ncase \"/configuration/gui/mainWindow/location\":      x=Integer.parseInt(reader.getAttributeValue(null,\"x\"));\n    y=Integer.parseInt(reader.getAttributeValue(null,\"y\"));\n  break;\ncase \"/configuration/gui/mainWindow/size\":w=Integer.parseInt(reader.getAttributeValue(null,\"w\"));\nh=Integer.parseInt(reader.getAttributeValue(null,\"h\"));\nbreak;\n}\nbreak;\ncase XMLStreamConstants.END_ELEMENT:name=names.pop();\nbreak;\ncase XMLStreamConstants.CHARACTERS:switch (name) {\ncase \"/configuration/recentFilePaths/filePath\":File file=new File(reader.getText().trim());\nif (file.exists()) {\nrecentFiles.add(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/loadPath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentLoadDirectory(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/savePath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentSaveDirectory(file);\n}\nbreak;\ncase \"/configuration/gui/lookAndFeel\":config.setLookAndFeel(reader.getText().trim());\nbreak;\ncase \"/configuration/gui/mainWindow/maximize\":maximize=Boolean.parseBoolean(reader.getText().trim());\nbreak;\ndefault:if (name.startsWith(\"/configuration/preferences/\")) {\nString key=name.substring(\"/configuration/preferences/\".length());\npreferences.put(key,reader.getText().trim());\n}\nbreak;\n}\nbreak;\n}\n}\nif (recentFiles.size() > Constants.MAX_RECENT_FILES) {\nrecentFiles=recentFiles.subList(0,Constants.MAX_RECENT_FILES);\n}\nconfig.setRecentFiles(recentFiles);\nif ((x >= 0) && (y >= 0) && (x + w < screenSize.width)&& (y + h < screenSize.height)) {\nconfig.setMainWindowLocation(new Point(x,y));\nconfig.setMainWindowSize(new Dimension(w,h));\nconfig.setMainWindowMaximize(maximize);\n}\nreader.close();\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 390,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5839,
        "startLineNumber" : 60,
        "startColumnNumber" : 32,
        "endLineNumber" : 174,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Dimension screenSize=Toolkit.getDefaultToolkit().getScreenSize();\n  int w=(screenSize.width > Constants.DEFAULT_WIDTH) ? Constants.DEFAULT_WIDTH : screenSize.width;\n  int h=(screenSize.height > Constants.DEFAULT_HEIGHT) ? Constants.DEFAULT_HEIGHT : screenSize.height;\n  int x=(screenSize.width - w) / 2;\n  int y=(screenSize.height - h) / 2;\n  Configuration config=new Configuration();\n  config.setMainWindowLocation(new Point(x,y));\n  config.setMainWindowSize(new Dimension(w,h));\n  config.setMainWindowMaximize(false);\n  String defaultLaf=System.getProperty(\"swing.defaultlaf\");\n  config.setLookAndFeel((defaultLaf != null) ? defaultLaf : UIManager.getSystemLookAndFeelClassName());\n  File recentSaveDirectory=new File(System.getProperty(\"user.dir\"));\n  config.setRecentLoadDirectory(recentSaveDirectory);\n  config.setRecentSaveDirectory(recentSaveDirectory);\n  if (FILE.exists()) {\n    try (FileInputStream fis=new FileInputStream(FILE)){\n      XMLStreamReader reader=XMLInputFactory.newInstance().createXMLStreamReader(fis);\n      String name=\"\";\n      Stack<String> names=new Stack<>();\n      List<File> recentFiles=new ArrayList<>();\n      boolean maximize=false;\n      Map<String,String> preferences=config.getPreferences();\n      while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:          names.push(name);\n        name+='/' + reader.getLocalName();\nswitch (name) {\ncase \"/configuration/gui/mainWindow/location\":        x=Integer.parseInt(reader.getAttributeValue(null,\"x\"));\n      y=Integer.parseInt(reader.getAttributeValue(null,\"y\"));\n    break;\ncase \"/configuration/gui/mainWindow/size\":  w=Integer.parseInt(reader.getAttributeValue(null,\"w\"));\nh=Integer.parseInt(reader.getAttributeValue(null,\"h\"));\nbreak;\n}\nbreak;\ncase XMLStreamConstants.END_ELEMENT:name=names.pop();\nbreak;\ncase XMLStreamConstants.CHARACTERS:switch (name) {\ncase \"/configuration/recentFilePaths/filePath\":File file=new File(reader.getText().trim());\nif (file.exists()) {\nrecentFiles.add(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/loadPath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentLoadDirectory(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/savePath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentSaveDirectory(file);\n}\nbreak;\ncase \"/configuration/gui/lookAndFeel\":config.setLookAndFeel(reader.getText().trim());\nbreak;\ncase \"/configuration/gui/mainWindow/maximize\":maximize=Boolean.parseBoolean(reader.getText().trim());\nbreak;\ndefault:if (name.startsWith(\"/configuration/preferences/\")) {\nString key=name.substring(\"/configuration/preferences/\".length());\npreferences.put(key,reader.getText().trim());\n}\nbreak;\n}\nbreak;\n}\n}\nif (recentFiles.size() > Constants.MAX_RECENT_FILES) {\nrecentFiles=recentFiles.subList(0,Constants.MAX_RECENT_FILES);\n}\nconfig.setRecentFiles(recentFiles);\nif ((x >= 0) && (y >= 0) && (x + w < screenSize.width)&& (y + h < screenSize.height)) {\nconfig.setMainWindowLocation(new Point(x,y));\nconfig.setMainWindowSize(new Dimension(w,h));\nconfig.setMainWindowMaximize(maximize);\n}\nreader.close();\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\nif (!config.getPreferences().containsKey(ERROR_BACKGROUND_COLOR)) {\nconfig.getPreferences().put(ERROR_BACKGROUND_COLOR,\"0xFF6666\");\n}\nreturn config;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 557,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5867,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 174,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public Configuration load(){\n  Dimension screenSize=Toolkit.getDefaultToolkit().getScreenSize();\n  int w=(screenSize.width > Constants.DEFAULT_WIDTH) ? Constants.DEFAULT_WIDTH : screenSize.width;\n  int h=(screenSize.height > Constants.DEFAULT_HEIGHT) ? Constants.DEFAULT_HEIGHT : screenSize.height;\n  int x=(screenSize.width - w) / 2;\n  int y=(screenSize.height - h) / 2;\n  Configuration config=new Configuration();\n  config.setMainWindowLocation(new Point(x,y));\n  config.setMainWindowSize(new Dimension(w,h));\n  config.setMainWindowMaximize(false);\n  String defaultLaf=System.getProperty(\"swing.defaultlaf\");\n  config.setLookAndFeel((defaultLaf != null) ? defaultLaf : UIManager.getSystemLookAndFeelClassName());\n  File recentSaveDirectory=new File(System.getProperty(\"user.dir\"));\n  config.setRecentLoadDirectory(recentSaveDirectory);\n  config.setRecentSaveDirectory(recentSaveDirectory);\n  if (FILE.exists()) {\n    try (FileInputStream fis=new FileInputStream(FILE)){\n      XMLStreamReader reader=XMLInputFactory.newInstance().createXMLStreamReader(fis);\n      String name=\"\";\n      Stack<String> names=new Stack<>();\n      List<File> recentFiles=new ArrayList<>();\n      boolean maximize=false;\n      Map<String,String> preferences=config.getPreferences();\n      while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:          names.push(name);\n        name+='/' + reader.getLocalName();\nswitch (name) {\ncase \"/configuration/gui/mainWindow/location\":        x=Integer.parseInt(reader.getAttributeValue(null,\"x\"));\n      y=Integer.parseInt(reader.getAttributeValue(null,\"y\"));\n    break;\ncase \"/configuration/gui/mainWindow/size\":  w=Integer.parseInt(reader.getAttributeValue(null,\"w\"));\nh=Integer.parseInt(reader.getAttributeValue(null,\"h\"));\nbreak;\n}\nbreak;\ncase XMLStreamConstants.END_ELEMENT:name=names.pop();\nbreak;\ncase XMLStreamConstants.CHARACTERS:switch (name) {\ncase \"/configuration/recentFilePaths/filePath\":File file=new File(reader.getText().trim());\nif (file.exists()) {\nrecentFiles.add(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/loadPath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentLoadDirectory(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/savePath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentSaveDirectory(file);\n}\nbreak;\ncase \"/configuration/gui/lookAndFeel\":config.setLookAndFeel(reader.getText().trim());\nbreak;\ncase \"/configuration/gui/mainWindow/maximize\":maximize=Boolean.parseBoolean(reader.getText().trim());\nbreak;\ndefault:if (name.startsWith(\"/configuration/preferences/\")) {\nString key=name.substring(\"/configuration/preferences/\".length());\npreferences.put(key,reader.getText().trim());\n}\nbreak;\n}\nbreak;\n}\n}\nif (recentFiles.size() > Constants.MAX_RECENT_FILES) {\nrecentFiles=recentFiles.subList(0,Constants.MAX_RECENT_FILES);\n}\nconfig.setRecentFiles(recentFiles);\nif ((x >= 0) && (y >= 0) && (x + w < screenSize.width)&& (y + h < screenSize.height)) {\nconfig.setMainWindowLocation(new Point(x,y));\nconfig.setMainWindowSize(new Dimension(w,h));\nconfig.setMainWindowMaximize(maximize);\n}\nreader.close();\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\nif (!config.getPreferences().containsKey(ERROR_BACKGROUND_COLOR)) {\nconfig.getPreferences().put(ERROR_BACKGROUND_COLOR,\"0xFF6666\");\n}\nreturn config;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 562,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 116,
        "startColumnNumber" : 36,
        "endLineNumber" : 116,
        "endColumnNumber" : 82
      },
      "nodeContext" : "File file=new File(reader.getText().trim());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "java.io.File"
  }, {
    "nodeContext" : "new File(reader.getText().trim())",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 122,
      "startColumnNumber" : 43,
      "endLineNumber" : 122,
      "endColumnNumber" : 76
    },
    "astNodeNumber" : 8,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 122,
        "startColumnNumber" : 36,
        "endLineNumber" : 122,
        "endColumnNumber" : 76
      },
      "nodeContext" : "file=new File(reader.getText().trim())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 122,
        "startColumnNumber" : 36,
        "endLineNumber" : 122,
        "endColumnNumber" : 77
      },
      "nodeContext" : "file=new File(reader.getText().trim());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 2012,
        "startLineNumber" : 114,
        "startColumnNumber" : 28,
        "endLineNumber" : 145,
        "endColumnNumber" : 29
      },
      "nodeContext" : "switch (name) {\ncase \"/configuration/recentFilePaths/filePath\":  File file=new File(reader.getText().trim());\nif (file.exists()) {\n  recentFiles.add(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/loadPath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentLoadDirectory(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/savePath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentSaveDirectory(file);\n}\nbreak;\ncase \"/configuration/gui/lookAndFeel\":config.setLookAndFeel(reader.getText().trim());\nbreak;\ncase \"/configuration/gui/mainWindow/maximize\":maximize=Boolean.parseBoolean(reader.getText().trim());\nbreak;\ndefault:if (name.startsWith(\"/configuration/preferences/\")) {\nString key=name.substring(\"/configuration/preferences/\".length());\npreferences.put(key,reader.getText().trim());\n}\nbreak;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 131,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3250,
        "startLineNumber" : 95,
        "startColumnNumber" : 20,
        "endLineNumber" : 147,
        "endColumnNumber" : 21
      },
      "nodeContext" : "switch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:  names.push(name);\nname+='/' + reader.getLocalName();\nswitch (name) {\ncase \"/configuration/gui/mainWindow/location\":x=Integer.parseInt(reader.getAttributeValue(null,\"x\"));\ny=Integer.parseInt(reader.getAttributeValue(null,\"y\"));\nbreak;\ncase \"/configuration/gui/mainWindow/size\":w=Integer.parseInt(reader.getAttributeValue(null,\"w\"));\nh=Integer.parseInt(reader.getAttributeValue(null,\"h\"));\nbreak;\n}\nbreak;\ncase XMLStreamConstants.END_ELEMENT:name=names.pop();\nbreak;\ncase XMLStreamConstants.CHARACTERS:switch (name) {\ncase \"/configuration/recentFilePaths/filePath\":File file=new File(reader.getText().trim());\nif (file.exists()) {\nrecentFiles.add(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/loadPath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentLoadDirectory(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/savePath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentSaveDirectory(file);\n}\nbreak;\ncase \"/configuration/gui/lookAndFeel\":config.setLookAndFeel(reader.getText().trim());\nbreak;\ncase \"/configuration/gui/mainWindow/maximize\":maximize=Boolean.parseBoolean(reader.getText().trim());\nbreak;\ndefault:if (name.startsWith(\"/configuration/preferences/\")) {\nString key=name.substring(\"/configuration/preferences/\".length());\npreferences.put(key,reader.getText().trim());\n}\nbreak;\n}\nbreak;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 221,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 3292,
        "startLineNumber" : 94,
        "startColumnNumber" : 41,
        "endLineNumber" : 148,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:    names.push(name);\n  name+='/' + reader.getLocalName();\nswitch (name) {\ncase \"/configuration/gui/mainWindow/location\":  x=Integer.parseInt(reader.getAttributeValue(null,\"x\"));\ny=Integer.parseInt(reader.getAttributeValue(null,\"y\"));\nbreak;\ncase \"/configuration/gui/mainWindow/size\":w=Integer.parseInt(reader.getAttributeValue(null,\"w\"));\nh=Integer.parseInt(reader.getAttributeValue(null,\"h\"));\nbreak;\n}\nbreak;\ncase XMLStreamConstants.END_ELEMENT:name=names.pop();\nbreak;\ncase XMLStreamConstants.CHARACTERS:switch (name) {\ncase \"/configuration/recentFilePaths/filePath\":File file=new File(reader.getText().trim());\nif (file.exists()) {\nrecentFiles.add(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/loadPath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentLoadDirectory(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/savePath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentSaveDirectory(file);\n}\nbreak;\ncase \"/configuration/gui/lookAndFeel\":config.setLookAndFeel(reader.getText().trim());\nbreak;\ncase \"/configuration/gui/mainWindow/maximize\":maximize=Boolean.parseBoolean(reader.getText().trim());\nbreak;\ndefault:if (name.startsWith(\"/configuration/preferences/\")) {\nString key=name.substring(\"/configuration/preferences/\".length());\npreferences.put(key,reader.getText().trim());\n}\nbreak;\n}\nbreak;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 222,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3317,
        "startLineNumber" : 94,
        "startColumnNumber" : 16,
        "endLineNumber" : 148,
        "endColumnNumber" : 17
      },
      "nodeContext" : "while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:    names.push(name);\n  name+='/' + reader.getLocalName();\nswitch (name) {\ncase \"/configuration/gui/mainWindow/location\":  x=Integer.parseInt(reader.getAttributeValue(null,\"x\"));\ny=Integer.parseInt(reader.getAttributeValue(null,\"y\"));\nbreak;\ncase \"/configuration/gui/mainWindow/size\":w=Integer.parseInt(reader.getAttributeValue(null,\"w\"));\nh=Integer.parseInt(reader.getAttributeValue(null,\"h\"));\nbreak;\n}\nbreak;\ncase XMLStreamConstants.END_ELEMENT:name=names.pop();\nbreak;\ncase XMLStreamConstants.CHARACTERS:switch (name) {\ncase \"/configuration/recentFilePaths/filePath\":File file=new File(reader.getText().trim());\nif (file.exists()) {\nrecentFiles.add(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/loadPath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentLoadDirectory(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/savePath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentSaveDirectory(file);\n}\nbreak;\ncase \"/configuration/gui/lookAndFeel\":config.setLookAndFeel(reader.getText().trim());\nbreak;\ncase \"/configuration/gui/mainWindow/maximize\":maximize=Boolean.parseBoolean(reader.getText().trim());\nbreak;\ndefault:if (name.startsWith(\"/configuration/preferences/\")) {\nString key=name.substring(\"/configuration/preferences/\".length());\npreferences.put(key,reader.getText().trim());\n}\nbreak;\n}\nbreak;\n}\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 226,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 4424,
        "startLineNumber" : 84,
        "startColumnNumber" : 66,
        "endLineNumber" : 164,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  XMLStreamReader reader=XMLInputFactory.newInstance().createXMLStreamReader(fis);\n  String name=\"\";\n  Stack<String> names=new Stack<>();\n  List<File> recentFiles=new ArrayList<>();\n  boolean maximize=false;\n  Map<String,String> preferences=config.getPreferences();\n  while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:      names.push(name);\n    name+='/' + reader.getLocalName();\nswitch (name) {\ncase \"/configuration/gui/mainWindow/location\":    x=Integer.parseInt(reader.getAttributeValue(null,\"x\"));\n  y=Integer.parseInt(reader.getAttributeValue(null,\"y\"));\nbreak;\ncase \"/configuration/gui/mainWindow/size\":w=Integer.parseInt(reader.getAttributeValue(null,\"w\"));\nh=Integer.parseInt(reader.getAttributeValue(null,\"h\"));\nbreak;\n}\nbreak;\ncase XMLStreamConstants.END_ELEMENT:name=names.pop();\nbreak;\ncase XMLStreamConstants.CHARACTERS:switch (name) {\ncase \"/configuration/recentFilePaths/filePath\":File file=new File(reader.getText().trim());\nif (file.exists()) {\nrecentFiles.add(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/loadPath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentLoadDirectory(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/savePath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentSaveDirectory(file);\n}\nbreak;\ncase \"/configuration/gui/lookAndFeel\":config.setLookAndFeel(reader.getText().trim());\nbreak;\ncase \"/configuration/gui/mainWindow/maximize\":maximize=Boolean.parseBoolean(reader.getText().trim());\nbreak;\ndefault:if (name.startsWith(\"/configuration/preferences/\")) {\nString key=name.substring(\"/configuration/preferences/\".length());\npreferences.put(key,reader.getText().trim());\n}\nbreak;\n}\nbreak;\n}\n}\nif (recentFiles.size() > Constants.MAX_RECENT_FILES) {\nrecentFiles=recentFiles.subList(0,Constants.MAX_RECENT_FILES);\n}\nconfig.setRecentFiles(recentFiles);\nif ((x >= 0) && (y >= 0) && (x + w < screenSize.width)&& (y + h < screenSize.height)) {\nconfig.setMainWindowLocation(new Point(x,y));\nconfig.setMainWindowSize(new Dimension(w,h));\nconfig.setMainWindowMaximize(maximize);\n}\nreader.close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 364,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4573,
        "startLineNumber" : 84,
        "startColumnNumber" : 12,
        "endLineNumber" : 166,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try (FileInputStream fis=new FileInputStream(FILE)){\n  XMLStreamReader reader=XMLInputFactory.newInstance().createXMLStreamReader(fis);\n  String name=\"\";\n  Stack<String> names=new Stack<>();\n  List<File> recentFiles=new ArrayList<>();\n  boolean maximize=false;\n  Map<String,String> preferences=config.getPreferences();\n  while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:      names.push(name);\n    name+='/' + reader.getLocalName();\nswitch (name) {\ncase \"/configuration/gui/mainWindow/location\":    x=Integer.parseInt(reader.getAttributeValue(null,\"x\"));\n  y=Integer.parseInt(reader.getAttributeValue(null,\"y\"));\nbreak;\ncase \"/configuration/gui/mainWindow/size\":w=Integer.parseInt(reader.getAttributeValue(null,\"w\"));\nh=Integer.parseInt(reader.getAttributeValue(null,\"h\"));\nbreak;\n}\nbreak;\ncase XMLStreamConstants.END_ELEMENT:name=names.pop();\nbreak;\ncase XMLStreamConstants.CHARACTERS:switch (name) {\ncase \"/configuration/recentFilePaths/filePath\":File file=new File(reader.getText().trim());\nif (file.exists()) {\nrecentFiles.add(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/loadPath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentLoadDirectory(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/savePath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentSaveDirectory(file);\n}\nbreak;\ncase \"/configuration/gui/lookAndFeel\":config.setLookAndFeel(reader.getText().trim());\nbreak;\ncase \"/configuration/gui/mainWindow/maximize\":maximize=Boolean.parseBoolean(reader.getText().trim());\nbreak;\ndefault:if (name.startsWith(\"/configuration/preferences/\")) {\nString key=name.substring(\"/configuration/preferences/\".length());\npreferences.put(key,reader.getText().trim());\n}\nbreak;\n}\nbreak;\n}\n}\nif (recentFiles.size() > Constants.MAX_RECENT_FILES) {\nrecentFiles=recentFiles.subList(0,Constants.MAX_RECENT_FILES);\n}\nconfig.setRecentFiles(recentFiles);\nif ((x >= 0) && (y >= 0) && (x + w < screenSize.width)&& (y + h < screenSize.height)) {\nconfig.setMainWindowLocation(new Point(x,y));\nconfig.setMainWindowSize(new Dimension(w,h));\nconfig.setMainWindowMaximize(maximize);\n}\nreader.close();\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 385,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 4599,
        "startLineNumber" : 83,
        "startColumnNumber" : 27,
        "endLineNumber" : 167,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try (FileInputStream fis=new FileInputStream(FILE)){\n    XMLStreamReader reader=XMLInputFactory.newInstance().createXMLStreamReader(fis);\n    String name=\"\";\n    Stack<String> names=new Stack<>();\n    List<File> recentFiles=new ArrayList<>();\n    boolean maximize=false;\n    Map<String,String> preferences=config.getPreferences();\n    while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:        names.push(name);\n      name+='/' + reader.getLocalName();\nswitch (name) {\ncase \"/configuration/gui/mainWindow/location\":      x=Integer.parseInt(reader.getAttributeValue(null,\"x\"));\n    y=Integer.parseInt(reader.getAttributeValue(null,\"y\"));\n  break;\ncase \"/configuration/gui/mainWindow/size\":w=Integer.parseInt(reader.getAttributeValue(null,\"w\"));\nh=Integer.parseInt(reader.getAttributeValue(null,\"h\"));\nbreak;\n}\nbreak;\ncase XMLStreamConstants.END_ELEMENT:name=names.pop();\nbreak;\ncase XMLStreamConstants.CHARACTERS:switch (name) {\ncase \"/configuration/recentFilePaths/filePath\":File file=new File(reader.getText().trim());\nif (file.exists()) {\nrecentFiles.add(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/loadPath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentLoadDirectory(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/savePath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentSaveDirectory(file);\n}\nbreak;\ncase \"/configuration/gui/lookAndFeel\":config.setLookAndFeel(reader.getText().trim());\nbreak;\ncase \"/configuration/gui/mainWindow/maximize\":maximize=Boolean.parseBoolean(reader.getText().trim());\nbreak;\ndefault:if (name.startsWith(\"/configuration/preferences/\")) {\nString key=name.substring(\"/configuration/preferences/\".length());\npreferences.put(key,reader.getText().trim());\n}\nbreak;\n}\nbreak;\n}\n}\nif (recentFiles.size() > Constants.MAX_RECENT_FILES) {\nrecentFiles=recentFiles.subList(0,Constants.MAX_RECENT_FILES);\n}\nconfig.setRecentFiles(recentFiles);\nif ((x >= 0) && (y >= 0) && (x + w < screenSize.width)&& (y + h < screenSize.height)) {\nconfig.setMainWindowLocation(new Point(x,y));\nconfig.setMainWindowSize(new Dimension(w,h));\nconfig.setMainWindowMaximize(maximize);\n}\nreader.close();\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 386,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4618,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 167,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (FILE.exists()) {\n  try (FileInputStream fis=new FileInputStream(FILE)){\n    XMLStreamReader reader=XMLInputFactory.newInstance().createXMLStreamReader(fis);\n    String name=\"\";\n    Stack<String> names=new Stack<>();\n    List<File> recentFiles=new ArrayList<>();\n    boolean maximize=false;\n    Map<String,String> preferences=config.getPreferences();\n    while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:        names.push(name);\n      name+='/' + reader.getLocalName();\nswitch (name) {\ncase \"/configuration/gui/mainWindow/location\":      x=Integer.parseInt(reader.getAttributeValue(null,\"x\"));\n    y=Integer.parseInt(reader.getAttributeValue(null,\"y\"));\n  break;\ncase \"/configuration/gui/mainWindow/size\":w=Integer.parseInt(reader.getAttributeValue(null,\"w\"));\nh=Integer.parseInt(reader.getAttributeValue(null,\"h\"));\nbreak;\n}\nbreak;\ncase XMLStreamConstants.END_ELEMENT:name=names.pop();\nbreak;\ncase XMLStreamConstants.CHARACTERS:switch (name) {\ncase \"/configuration/recentFilePaths/filePath\":File file=new File(reader.getText().trim());\nif (file.exists()) {\nrecentFiles.add(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/loadPath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentLoadDirectory(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/savePath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentSaveDirectory(file);\n}\nbreak;\ncase \"/configuration/gui/lookAndFeel\":config.setLookAndFeel(reader.getText().trim());\nbreak;\ncase \"/configuration/gui/mainWindow/maximize\":maximize=Boolean.parseBoolean(reader.getText().trim());\nbreak;\ndefault:if (name.startsWith(\"/configuration/preferences/\")) {\nString key=name.substring(\"/configuration/preferences/\".length());\npreferences.put(key,reader.getText().trim());\n}\nbreak;\n}\nbreak;\n}\n}\nif (recentFiles.size() > Constants.MAX_RECENT_FILES) {\nrecentFiles=recentFiles.subList(0,Constants.MAX_RECENT_FILES);\n}\nconfig.setRecentFiles(recentFiles);\nif ((x >= 0) && (y >= 0) && (x + w < screenSize.width)&& (y + h < screenSize.height)) {\nconfig.setMainWindowLocation(new Point(x,y));\nconfig.setMainWindowSize(new Dimension(w,h));\nconfig.setMainWindowMaximize(maximize);\n}\nreader.close();\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 390,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5839,
        "startLineNumber" : 60,
        "startColumnNumber" : 32,
        "endLineNumber" : 174,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Dimension screenSize=Toolkit.getDefaultToolkit().getScreenSize();\n  int w=(screenSize.width > Constants.DEFAULT_WIDTH) ? Constants.DEFAULT_WIDTH : screenSize.width;\n  int h=(screenSize.height > Constants.DEFAULT_HEIGHT) ? Constants.DEFAULT_HEIGHT : screenSize.height;\n  int x=(screenSize.width - w) / 2;\n  int y=(screenSize.height - h) / 2;\n  Configuration config=new Configuration();\n  config.setMainWindowLocation(new Point(x,y));\n  config.setMainWindowSize(new Dimension(w,h));\n  config.setMainWindowMaximize(false);\n  String defaultLaf=System.getProperty(\"swing.defaultlaf\");\n  config.setLookAndFeel((defaultLaf != null) ? defaultLaf : UIManager.getSystemLookAndFeelClassName());\n  File recentSaveDirectory=new File(System.getProperty(\"user.dir\"));\n  config.setRecentLoadDirectory(recentSaveDirectory);\n  config.setRecentSaveDirectory(recentSaveDirectory);\n  if (FILE.exists()) {\n    try (FileInputStream fis=new FileInputStream(FILE)){\n      XMLStreamReader reader=XMLInputFactory.newInstance().createXMLStreamReader(fis);\n      String name=\"\";\n      Stack<String> names=new Stack<>();\n      List<File> recentFiles=new ArrayList<>();\n      boolean maximize=false;\n      Map<String,String> preferences=config.getPreferences();\n      while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:          names.push(name);\n        name+='/' + reader.getLocalName();\nswitch (name) {\ncase \"/configuration/gui/mainWindow/location\":        x=Integer.parseInt(reader.getAttributeValue(null,\"x\"));\n      y=Integer.parseInt(reader.getAttributeValue(null,\"y\"));\n    break;\ncase \"/configuration/gui/mainWindow/size\":  w=Integer.parseInt(reader.getAttributeValue(null,\"w\"));\nh=Integer.parseInt(reader.getAttributeValue(null,\"h\"));\nbreak;\n}\nbreak;\ncase XMLStreamConstants.END_ELEMENT:name=names.pop();\nbreak;\ncase XMLStreamConstants.CHARACTERS:switch (name) {\ncase \"/configuration/recentFilePaths/filePath\":File file=new File(reader.getText().trim());\nif (file.exists()) {\nrecentFiles.add(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/loadPath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentLoadDirectory(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/savePath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentSaveDirectory(file);\n}\nbreak;\ncase \"/configuration/gui/lookAndFeel\":config.setLookAndFeel(reader.getText().trim());\nbreak;\ncase \"/configuration/gui/mainWindow/maximize\":maximize=Boolean.parseBoolean(reader.getText().trim());\nbreak;\ndefault:if (name.startsWith(\"/configuration/preferences/\")) {\nString key=name.substring(\"/configuration/preferences/\".length());\npreferences.put(key,reader.getText().trim());\n}\nbreak;\n}\nbreak;\n}\n}\nif (recentFiles.size() > Constants.MAX_RECENT_FILES) {\nrecentFiles=recentFiles.subList(0,Constants.MAX_RECENT_FILES);\n}\nconfig.setRecentFiles(recentFiles);\nif ((x >= 0) && (y >= 0) && (x + w < screenSize.width)&& (y + h < screenSize.height)) {\nconfig.setMainWindowLocation(new Point(x,y));\nconfig.setMainWindowSize(new Dimension(w,h));\nconfig.setMainWindowMaximize(maximize);\n}\nreader.close();\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\nif (!config.getPreferences().containsKey(ERROR_BACKGROUND_COLOR)) {\nconfig.getPreferences().put(ERROR_BACKGROUND_COLOR,\"0xFF6666\");\n}\nreturn config;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 557,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5867,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 174,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public Configuration load(){\n  Dimension screenSize=Toolkit.getDefaultToolkit().getScreenSize();\n  int w=(screenSize.width > Constants.DEFAULT_WIDTH) ? Constants.DEFAULT_WIDTH : screenSize.width;\n  int h=(screenSize.height > Constants.DEFAULT_HEIGHT) ? Constants.DEFAULT_HEIGHT : screenSize.height;\n  int x=(screenSize.width - w) / 2;\n  int y=(screenSize.height - h) / 2;\n  Configuration config=new Configuration();\n  config.setMainWindowLocation(new Point(x,y));\n  config.setMainWindowSize(new Dimension(w,h));\n  config.setMainWindowMaximize(false);\n  String defaultLaf=System.getProperty(\"swing.defaultlaf\");\n  config.setLookAndFeel((defaultLaf != null) ? defaultLaf : UIManager.getSystemLookAndFeelClassName());\n  File recentSaveDirectory=new File(System.getProperty(\"user.dir\"));\n  config.setRecentLoadDirectory(recentSaveDirectory);\n  config.setRecentSaveDirectory(recentSaveDirectory);\n  if (FILE.exists()) {\n    try (FileInputStream fis=new FileInputStream(FILE)){\n      XMLStreamReader reader=XMLInputFactory.newInstance().createXMLStreamReader(fis);\n      String name=\"\";\n      Stack<String> names=new Stack<>();\n      List<File> recentFiles=new ArrayList<>();\n      boolean maximize=false;\n      Map<String,String> preferences=config.getPreferences();\n      while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:          names.push(name);\n        name+='/' + reader.getLocalName();\nswitch (name) {\ncase \"/configuration/gui/mainWindow/location\":        x=Integer.parseInt(reader.getAttributeValue(null,\"x\"));\n      y=Integer.parseInt(reader.getAttributeValue(null,\"y\"));\n    break;\ncase \"/configuration/gui/mainWindow/size\":  w=Integer.parseInt(reader.getAttributeValue(null,\"w\"));\nh=Integer.parseInt(reader.getAttributeValue(null,\"h\"));\nbreak;\n}\nbreak;\ncase XMLStreamConstants.END_ELEMENT:name=names.pop();\nbreak;\ncase XMLStreamConstants.CHARACTERS:switch (name) {\ncase \"/configuration/recentFilePaths/filePath\":File file=new File(reader.getText().trim());\nif (file.exists()) {\nrecentFiles.add(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/loadPath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentLoadDirectory(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/savePath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentSaveDirectory(file);\n}\nbreak;\ncase \"/configuration/gui/lookAndFeel\":config.setLookAndFeel(reader.getText().trim());\nbreak;\ncase \"/configuration/gui/mainWindow/maximize\":maximize=Boolean.parseBoolean(reader.getText().trim());\nbreak;\ndefault:if (name.startsWith(\"/configuration/preferences/\")) {\nString key=name.substring(\"/configuration/preferences/\".length());\npreferences.put(key,reader.getText().trim());\n}\nbreak;\n}\nbreak;\n}\n}\nif (recentFiles.size() > Constants.MAX_RECENT_FILES) {\nrecentFiles=recentFiles.subList(0,Constants.MAX_RECENT_FILES);\n}\nconfig.setRecentFiles(recentFiles);\nif ((x >= 0) && (y >= 0) && (x + w < screenSize.width)&& (y + h < screenSize.height)) {\nconfig.setMainWindowLocation(new Point(x,y));\nconfig.setMainWindowSize(new Dimension(w,h));\nconfig.setMainWindowMaximize(maximize);\n}\nreader.close();\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\nif (!config.getPreferences().containsKey(ERROR_BACKGROUND_COLOR)) {\nconfig.getPreferences().put(ERROR_BACKGROUND_COLOR,\"0xFF6666\");\n}\nreturn config;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 562,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 122,
        "startColumnNumber" : 36,
        "endLineNumber" : 122,
        "endColumnNumber" : 77
      },
      "nodeContext" : "file=new File(reader.getText().trim());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "java.io.File"
  }, {
    "nodeContext" : "new File(reader.getText().trim())",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 128,
      "startColumnNumber" : 43,
      "endLineNumber" : 128,
      "endColumnNumber" : 76
    },
    "astNodeNumber" : 8,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 128,
        "startColumnNumber" : 36,
        "endLineNumber" : 128,
        "endColumnNumber" : 76
      },
      "nodeContext" : "file=new File(reader.getText().trim())",
      "nodeType" : "Assignment",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 128,
        "startColumnNumber" : 36,
        "endLineNumber" : 128,
        "endColumnNumber" : 77
      },
      "nodeContext" : "file=new File(reader.getText().trim());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 2012,
        "startLineNumber" : 114,
        "startColumnNumber" : 28,
        "endLineNumber" : 145,
        "endColumnNumber" : 29
      },
      "nodeContext" : "switch (name) {\ncase \"/configuration/recentFilePaths/filePath\":  File file=new File(reader.getText().trim());\nif (file.exists()) {\n  recentFiles.add(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/loadPath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentLoadDirectory(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/savePath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentSaveDirectory(file);\n}\nbreak;\ncase \"/configuration/gui/lookAndFeel\":config.setLookAndFeel(reader.getText().trim());\nbreak;\ncase \"/configuration/gui/mainWindow/maximize\":maximize=Boolean.parseBoolean(reader.getText().trim());\nbreak;\ndefault:if (name.startsWith(\"/configuration/preferences/\")) {\nString key=name.substring(\"/configuration/preferences/\".length());\npreferences.put(key,reader.getText().trim());\n}\nbreak;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 131,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3250,
        "startLineNumber" : 95,
        "startColumnNumber" : 20,
        "endLineNumber" : 147,
        "endColumnNumber" : 21
      },
      "nodeContext" : "switch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:  names.push(name);\nname+='/' + reader.getLocalName();\nswitch (name) {\ncase \"/configuration/gui/mainWindow/location\":x=Integer.parseInt(reader.getAttributeValue(null,\"x\"));\ny=Integer.parseInt(reader.getAttributeValue(null,\"y\"));\nbreak;\ncase \"/configuration/gui/mainWindow/size\":w=Integer.parseInt(reader.getAttributeValue(null,\"w\"));\nh=Integer.parseInt(reader.getAttributeValue(null,\"h\"));\nbreak;\n}\nbreak;\ncase XMLStreamConstants.END_ELEMENT:name=names.pop();\nbreak;\ncase XMLStreamConstants.CHARACTERS:switch (name) {\ncase \"/configuration/recentFilePaths/filePath\":File file=new File(reader.getText().trim());\nif (file.exists()) {\nrecentFiles.add(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/loadPath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentLoadDirectory(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/savePath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentSaveDirectory(file);\n}\nbreak;\ncase \"/configuration/gui/lookAndFeel\":config.setLookAndFeel(reader.getText().trim());\nbreak;\ncase \"/configuration/gui/mainWindow/maximize\":maximize=Boolean.parseBoolean(reader.getText().trim());\nbreak;\ndefault:if (name.startsWith(\"/configuration/preferences/\")) {\nString key=name.substring(\"/configuration/preferences/\".length());\npreferences.put(key,reader.getText().trim());\n}\nbreak;\n}\nbreak;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 221,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 3292,
        "startLineNumber" : 94,
        "startColumnNumber" : 41,
        "endLineNumber" : 148,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:    names.push(name);\n  name+='/' + reader.getLocalName();\nswitch (name) {\ncase \"/configuration/gui/mainWindow/location\":  x=Integer.parseInt(reader.getAttributeValue(null,\"x\"));\ny=Integer.parseInt(reader.getAttributeValue(null,\"y\"));\nbreak;\ncase \"/configuration/gui/mainWindow/size\":w=Integer.parseInt(reader.getAttributeValue(null,\"w\"));\nh=Integer.parseInt(reader.getAttributeValue(null,\"h\"));\nbreak;\n}\nbreak;\ncase XMLStreamConstants.END_ELEMENT:name=names.pop();\nbreak;\ncase XMLStreamConstants.CHARACTERS:switch (name) {\ncase \"/configuration/recentFilePaths/filePath\":File file=new File(reader.getText().trim());\nif (file.exists()) {\nrecentFiles.add(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/loadPath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentLoadDirectory(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/savePath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentSaveDirectory(file);\n}\nbreak;\ncase \"/configuration/gui/lookAndFeel\":config.setLookAndFeel(reader.getText().trim());\nbreak;\ncase \"/configuration/gui/mainWindow/maximize\":maximize=Boolean.parseBoolean(reader.getText().trim());\nbreak;\ndefault:if (name.startsWith(\"/configuration/preferences/\")) {\nString key=name.substring(\"/configuration/preferences/\".length());\npreferences.put(key,reader.getText().trim());\n}\nbreak;\n}\nbreak;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 222,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3317,
        "startLineNumber" : 94,
        "startColumnNumber" : 16,
        "endLineNumber" : 148,
        "endColumnNumber" : 17
      },
      "nodeContext" : "while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:    names.push(name);\n  name+='/' + reader.getLocalName();\nswitch (name) {\ncase \"/configuration/gui/mainWindow/location\":  x=Integer.parseInt(reader.getAttributeValue(null,\"x\"));\ny=Integer.parseInt(reader.getAttributeValue(null,\"y\"));\nbreak;\ncase \"/configuration/gui/mainWindow/size\":w=Integer.parseInt(reader.getAttributeValue(null,\"w\"));\nh=Integer.parseInt(reader.getAttributeValue(null,\"h\"));\nbreak;\n}\nbreak;\ncase XMLStreamConstants.END_ELEMENT:name=names.pop();\nbreak;\ncase XMLStreamConstants.CHARACTERS:switch (name) {\ncase \"/configuration/recentFilePaths/filePath\":File file=new File(reader.getText().trim());\nif (file.exists()) {\nrecentFiles.add(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/loadPath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentLoadDirectory(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/savePath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentSaveDirectory(file);\n}\nbreak;\ncase \"/configuration/gui/lookAndFeel\":config.setLookAndFeel(reader.getText().trim());\nbreak;\ncase \"/configuration/gui/mainWindow/maximize\":maximize=Boolean.parseBoolean(reader.getText().trim());\nbreak;\ndefault:if (name.startsWith(\"/configuration/preferences/\")) {\nString key=name.substring(\"/configuration/preferences/\".length());\npreferences.put(key,reader.getText().trim());\n}\nbreak;\n}\nbreak;\n}\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 226,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 4424,
        "startLineNumber" : 84,
        "startColumnNumber" : 66,
        "endLineNumber" : 164,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  XMLStreamReader reader=XMLInputFactory.newInstance().createXMLStreamReader(fis);\n  String name=\"\";\n  Stack<String> names=new Stack<>();\n  List<File> recentFiles=new ArrayList<>();\n  boolean maximize=false;\n  Map<String,String> preferences=config.getPreferences();\n  while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:      names.push(name);\n    name+='/' + reader.getLocalName();\nswitch (name) {\ncase \"/configuration/gui/mainWindow/location\":    x=Integer.parseInt(reader.getAttributeValue(null,\"x\"));\n  y=Integer.parseInt(reader.getAttributeValue(null,\"y\"));\nbreak;\ncase \"/configuration/gui/mainWindow/size\":w=Integer.parseInt(reader.getAttributeValue(null,\"w\"));\nh=Integer.parseInt(reader.getAttributeValue(null,\"h\"));\nbreak;\n}\nbreak;\ncase XMLStreamConstants.END_ELEMENT:name=names.pop();\nbreak;\ncase XMLStreamConstants.CHARACTERS:switch (name) {\ncase \"/configuration/recentFilePaths/filePath\":File file=new File(reader.getText().trim());\nif (file.exists()) {\nrecentFiles.add(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/loadPath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentLoadDirectory(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/savePath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentSaveDirectory(file);\n}\nbreak;\ncase \"/configuration/gui/lookAndFeel\":config.setLookAndFeel(reader.getText().trim());\nbreak;\ncase \"/configuration/gui/mainWindow/maximize\":maximize=Boolean.parseBoolean(reader.getText().trim());\nbreak;\ndefault:if (name.startsWith(\"/configuration/preferences/\")) {\nString key=name.substring(\"/configuration/preferences/\".length());\npreferences.put(key,reader.getText().trim());\n}\nbreak;\n}\nbreak;\n}\n}\nif (recentFiles.size() > Constants.MAX_RECENT_FILES) {\nrecentFiles=recentFiles.subList(0,Constants.MAX_RECENT_FILES);\n}\nconfig.setRecentFiles(recentFiles);\nif ((x >= 0) && (y >= 0) && (x + w < screenSize.width)&& (y + h < screenSize.height)) {\nconfig.setMainWindowLocation(new Point(x,y));\nconfig.setMainWindowSize(new Dimension(w,h));\nconfig.setMainWindowMaximize(maximize);\n}\nreader.close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 364,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4573,
        "startLineNumber" : 84,
        "startColumnNumber" : 12,
        "endLineNumber" : 166,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try (FileInputStream fis=new FileInputStream(FILE)){\n  XMLStreamReader reader=XMLInputFactory.newInstance().createXMLStreamReader(fis);\n  String name=\"\";\n  Stack<String> names=new Stack<>();\n  List<File> recentFiles=new ArrayList<>();\n  boolean maximize=false;\n  Map<String,String> preferences=config.getPreferences();\n  while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:      names.push(name);\n    name+='/' + reader.getLocalName();\nswitch (name) {\ncase \"/configuration/gui/mainWindow/location\":    x=Integer.parseInt(reader.getAttributeValue(null,\"x\"));\n  y=Integer.parseInt(reader.getAttributeValue(null,\"y\"));\nbreak;\ncase \"/configuration/gui/mainWindow/size\":w=Integer.parseInt(reader.getAttributeValue(null,\"w\"));\nh=Integer.parseInt(reader.getAttributeValue(null,\"h\"));\nbreak;\n}\nbreak;\ncase XMLStreamConstants.END_ELEMENT:name=names.pop();\nbreak;\ncase XMLStreamConstants.CHARACTERS:switch (name) {\ncase \"/configuration/recentFilePaths/filePath\":File file=new File(reader.getText().trim());\nif (file.exists()) {\nrecentFiles.add(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/loadPath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentLoadDirectory(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/savePath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentSaveDirectory(file);\n}\nbreak;\ncase \"/configuration/gui/lookAndFeel\":config.setLookAndFeel(reader.getText().trim());\nbreak;\ncase \"/configuration/gui/mainWindow/maximize\":maximize=Boolean.parseBoolean(reader.getText().trim());\nbreak;\ndefault:if (name.startsWith(\"/configuration/preferences/\")) {\nString key=name.substring(\"/configuration/preferences/\".length());\npreferences.put(key,reader.getText().trim());\n}\nbreak;\n}\nbreak;\n}\n}\nif (recentFiles.size() > Constants.MAX_RECENT_FILES) {\nrecentFiles=recentFiles.subList(0,Constants.MAX_RECENT_FILES);\n}\nconfig.setRecentFiles(recentFiles);\nif ((x >= 0) && (y >= 0) && (x + w < screenSize.width)&& (y + h < screenSize.height)) {\nconfig.setMainWindowLocation(new Point(x,y));\nconfig.setMainWindowSize(new Dimension(w,h));\nconfig.setMainWindowMaximize(maximize);\n}\nreader.close();\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 385,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 4599,
        "startLineNumber" : 83,
        "startColumnNumber" : 27,
        "endLineNumber" : 167,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try (FileInputStream fis=new FileInputStream(FILE)){\n    XMLStreamReader reader=XMLInputFactory.newInstance().createXMLStreamReader(fis);\n    String name=\"\";\n    Stack<String> names=new Stack<>();\n    List<File> recentFiles=new ArrayList<>();\n    boolean maximize=false;\n    Map<String,String> preferences=config.getPreferences();\n    while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:        names.push(name);\n      name+='/' + reader.getLocalName();\nswitch (name) {\ncase \"/configuration/gui/mainWindow/location\":      x=Integer.parseInt(reader.getAttributeValue(null,\"x\"));\n    y=Integer.parseInt(reader.getAttributeValue(null,\"y\"));\n  break;\ncase \"/configuration/gui/mainWindow/size\":w=Integer.parseInt(reader.getAttributeValue(null,\"w\"));\nh=Integer.parseInt(reader.getAttributeValue(null,\"h\"));\nbreak;\n}\nbreak;\ncase XMLStreamConstants.END_ELEMENT:name=names.pop();\nbreak;\ncase XMLStreamConstants.CHARACTERS:switch (name) {\ncase \"/configuration/recentFilePaths/filePath\":File file=new File(reader.getText().trim());\nif (file.exists()) {\nrecentFiles.add(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/loadPath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentLoadDirectory(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/savePath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentSaveDirectory(file);\n}\nbreak;\ncase \"/configuration/gui/lookAndFeel\":config.setLookAndFeel(reader.getText().trim());\nbreak;\ncase \"/configuration/gui/mainWindow/maximize\":maximize=Boolean.parseBoolean(reader.getText().trim());\nbreak;\ndefault:if (name.startsWith(\"/configuration/preferences/\")) {\nString key=name.substring(\"/configuration/preferences/\".length());\npreferences.put(key,reader.getText().trim());\n}\nbreak;\n}\nbreak;\n}\n}\nif (recentFiles.size() > Constants.MAX_RECENT_FILES) {\nrecentFiles=recentFiles.subList(0,Constants.MAX_RECENT_FILES);\n}\nconfig.setRecentFiles(recentFiles);\nif ((x >= 0) && (y >= 0) && (x + w < screenSize.width)&& (y + h < screenSize.height)) {\nconfig.setMainWindowLocation(new Point(x,y));\nconfig.setMainWindowSize(new Dimension(w,h));\nconfig.setMainWindowMaximize(maximize);\n}\nreader.close();\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 386,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4618,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 167,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (FILE.exists()) {\n  try (FileInputStream fis=new FileInputStream(FILE)){\n    XMLStreamReader reader=XMLInputFactory.newInstance().createXMLStreamReader(fis);\n    String name=\"\";\n    Stack<String> names=new Stack<>();\n    List<File> recentFiles=new ArrayList<>();\n    boolean maximize=false;\n    Map<String,String> preferences=config.getPreferences();\n    while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:        names.push(name);\n      name+='/' + reader.getLocalName();\nswitch (name) {\ncase \"/configuration/gui/mainWindow/location\":      x=Integer.parseInt(reader.getAttributeValue(null,\"x\"));\n    y=Integer.parseInt(reader.getAttributeValue(null,\"y\"));\n  break;\ncase \"/configuration/gui/mainWindow/size\":w=Integer.parseInt(reader.getAttributeValue(null,\"w\"));\nh=Integer.parseInt(reader.getAttributeValue(null,\"h\"));\nbreak;\n}\nbreak;\ncase XMLStreamConstants.END_ELEMENT:name=names.pop();\nbreak;\ncase XMLStreamConstants.CHARACTERS:switch (name) {\ncase \"/configuration/recentFilePaths/filePath\":File file=new File(reader.getText().trim());\nif (file.exists()) {\nrecentFiles.add(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/loadPath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentLoadDirectory(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/savePath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentSaveDirectory(file);\n}\nbreak;\ncase \"/configuration/gui/lookAndFeel\":config.setLookAndFeel(reader.getText().trim());\nbreak;\ncase \"/configuration/gui/mainWindow/maximize\":maximize=Boolean.parseBoolean(reader.getText().trim());\nbreak;\ndefault:if (name.startsWith(\"/configuration/preferences/\")) {\nString key=name.substring(\"/configuration/preferences/\".length());\npreferences.put(key,reader.getText().trim());\n}\nbreak;\n}\nbreak;\n}\n}\nif (recentFiles.size() > Constants.MAX_RECENT_FILES) {\nrecentFiles=recentFiles.subList(0,Constants.MAX_RECENT_FILES);\n}\nconfig.setRecentFiles(recentFiles);\nif ((x >= 0) && (y >= 0) && (x + w < screenSize.width)&& (y + h < screenSize.height)) {\nconfig.setMainWindowLocation(new Point(x,y));\nconfig.setMainWindowSize(new Dimension(w,h));\nconfig.setMainWindowMaximize(maximize);\n}\nreader.close();\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 390,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5839,
        "startLineNumber" : 60,
        "startColumnNumber" : 32,
        "endLineNumber" : 174,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Dimension screenSize=Toolkit.getDefaultToolkit().getScreenSize();\n  int w=(screenSize.width > Constants.DEFAULT_WIDTH) ? Constants.DEFAULT_WIDTH : screenSize.width;\n  int h=(screenSize.height > Constants.DEFAULT_HEIGHT) ? Constants.DEFAULT_HEIGHT : screenSize.height;\n  int x=(screenSize.width - w) / 2;\n  int y=(screenSize.height - h) / 2;\n  Configuration config=new Configuration();\n  config.setMainWindowLocation(new Point(x,y));\n  config.setMainWindowSize(new Dimension(w,h));\n  config.setMainWindowMaximize(false);\n  String defaultLaf=System.getProperty(\"swing.defaultlaf\");\n  config.setLookAndFeel((defaultLaf != null) ? defaultLaf : UIManager.getSystemLookAndFeelClassName());\n  File recentSaveDirectory=new File(System.getProperty(\"user.dir\"));\n  config.setRecentLoadDirectory(recentSaveDirectory);\n  config.setRecentSaveDirectory(recentSaveDirectory);\n  if (FILE.exists()) {\n    try (FileInputStream fis=new FileInputStream(FILE)){\n      XMLStreamReader reader=XMLInputFactory.newInstance().createXMLStreamReader(fis);\n      String name=\"\";\n      Stack<String> names=new Stack<>();\n      List<File> recentFiles=new ArrayList<>();\n      boolean maximize=false;\n      Map<String,String> preferences=config.getPreferences();\n      while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:          names.push(name);\n        name+='/' + reader.getLocalName();\nswitch (name) {\ncase \"/configuration/gui/mainWindow/location\":        x=Integer.parseInt(reader.getAttributeValue(null,\"x\"));\n      y=Integer.parseInt(reader.getAttributeValue(null,\"y\"));\n    break;\ncase \"/configuration/gui/mainWindow/size\":  w=Integer.parseInt(reader.getAttributeValue(null,\"w\"));\nh=Integer.parseInt(reader.getAttributeValue(null,\"h\"));\nbreak;\n}\nbreak;\ncase XMLStreamConstants.END_ELEMENT:name=names.pop();\nbreak;\ncase XMLStreamConstants.CHARACTERS:switch (name) {\ncase \"/configuration/recentFilePaths/filePath\":File file=new File(reader.getText().trim());\nif (file.exists()) {\nrecentFiles.add(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/loadPath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentLoadDirectory(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/savePath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentSaveDirectory(file);\n}\nbreak;\ncase \"/configuration/gui/lookAndFeel\":config.setLookAndFeel(reader.getText().trim());\nbreak;\ncase \"/configuration/gui/mainWindow/maximize\":maximize=Boolean.parseBoolean(reader.getText().trim());\nbreak;\ndefault:if (name.startsWith(\"/configuration/preferences/\")) {\nString key=name.substring(\"/configuration/preferences/\".length());\npreferences.put(key,reader.getText().trim());\n}\nbreak;\n}\nbreak;\n}\n}\nif (recentFiles.size() > Constants.MAX_RECENT_FILES) {\nrecentFiles=recentFiles.subList(0,Constants.MAX_RECENT_FILES);\n}\nconfig.setRecentFiles(recentFiles);\nif ((x >= 0) && (y >= 0) && (x + w < screenSize.width)&& (y + h < screenSize.height)) {\nconfig.setMainWindowLocation(new Point(x,y));\nconfig.setMainWindowSize(new Dimension(w,h));\nconfig.setMainWindowMaximize(maximize);\n}\nreader.close();\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\nif (!config.getPreferences().containsKey(ERROR_BACKGROUND_COLOR)) {\nconfig.getPreferences().put(ERROR_BACKGROUND_COLOR,\"0xFF6666\");\n}\nreturn config;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 557,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5867,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 174,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public Configuration load(){\n  Dimension screenSize=Toolkit.getDefaultToolkit().getScreenSize();\n  int w=(screenSize.width > Constants.DEFAULT_WIDTH) ? Constants.DEFAULT_WIDTH : screenSize.width;\n  int h=(screenSize.height > Constants.DEFAULT_HEIGHT) ? Constants.DEFAULT_HEIGHT : screenSize.height;\n  int x=(screenSize.width - w) / 2;\n  int y=(screenSize.height - h) / 2;\n  Configuration config=new Configuration();\n  config.setMainWindowLocation(new Point(x,y));\n  config.setMainWindowSize(new Dimension(w,h));\n  config.setMainWindowMaximize(false);\n  String defaultLaf=System.getProperty(\"swing.defaultlaf\");\n  config.setLookAndFeel((defaultLaf != null) ? defaultLaf : UIManager.getSystemLookAndFeelClassName());\n  File recentSaveDirectory=new File(System.getProperty(\"user.dir\"));\n  config.setRecentLoadDirectory(recentSaveDirectory);\n  config.setRecentSaveDirectory(recentSaveDirectory);\n  if (FILE.exists()) {\n    try (FileInputStream fis=new FileInputStream(FILE)){\n      XMLStreamReader reader=XMLInputFactory.newInstance().createXMLStreamReader(fis);\n      String name=\"\";\n      Stack<String> names=new Stack<>();\n      List<File> recentFiles=new ArrayList<>();\n      boolean maximize=false;\n      Map<String,String> preferences=config.getPreferences();\n      while (reader.hasNext()) {\nswitch (reader.next()) {\ncase XMLStreamConstants.START_ELEMENT:          names.push(name);\n        name+='/' + reader.getLocalName();\nswitch (name) {\ncase \"/configuration/gui/mainWindow/location\":        x=Integer.parseInt(reader.getAttributeValue(null,\"x\"));\n      y=Integer.parseInt(reader.getAttributeValue(null,\"y\"));\n    break;\ncase \"/configuration/gui/mainWindow/size\":  w=Integer.parseInt(reader.getAttributeValue(null,\"w\"));\nh=Integer.parseInt(reader.getAttributeValue(null,\"h\"));\nbreak;\n}\nbreak;\ncase XMLStreamConstants.END_ELEMENT:name=names.pop();\nbreak;\ncase XMLStreamConstants.CHARACTERS:switch (name) {\ncase \"/configuration/recentFilePaths/filePath\":File file=new File(reader.getText().trim());\nif (file.exists()) {\nrecentFiles.add(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/loadPath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentLoadDirectory(file);\n}\nbreak;\ncase \"/configuration/recentDirectories/savePath\":file=new File(reader.getText().trim());\nif (file.exists()) {\nconfig.setRecentSaveDirectory(file);\n}\nbreak;\ncase \"/configuration/gui/lookAndFeel\":config.setLookAndFeel(reader.getText().trim());\nbreak;\ncase \"/configuration/gui/mainWindow/maximize\":maximize=Boolean.parseBoolean(reader.getText().trim());\nbreak;\ndefault:if (name.startsWith(\"/configuration/preferences/\")) {\nString key=name.substring(\"/configuration/preferences/\".length());\npreferences.put(key,reader.getText().trim());\n}\nbreak;\n}\nbreak;\n}\n}\nif (recentFiles.size() > Constants.MAX_RECENT_FILES) {\nrecentFiles=recentFiles.subList(0,Constants.MAX_RECENT_FILES);\n}\nconfig.setRecentFiles(recentFiles);\nif ((x >= 0) && (y >= 0) && (x + w < screenSize.width)&& (y + h < screenSize.height)) {\nconfig.setMainWindowLocation(new Point(x,y));\nconfig.setMainWindowSize(new Dimension(w,h));\nconfig.setMainWindowMaximize(maximize);\n}\nreader.close();\n}\n catch (Exception e) {\nassert ExceptionUtil.printStackTrace(e);\n}\n}\nif (!config.getPreferences().containsKey(ERROR_BACKGROUND_COLOR)) {\nconfig.getPreferences().put(ERROR_BACKGROUND_COLOR,\"0xFF6666\");\n}\nreturn config;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 562,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 128,
        "startColumnNumber" : 36,
        "endLineNumber" : 128,
        "endColumnNumber" : 77
      },
      "nodeContext" : "file=new File(reader.getText().trim());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "java.io.File"
  } ],
  "positionList" : [ {
    "charLength" : 33,
    "startLineNumber" : 116,
    "startColumnNumber" : 48,
    "endLineNumber" : 116,
    "endColumnNumber" : 81
  }, {
    "charLength" : 33,
    "startLineNumber" : 122,
    "startColumnNumber" : 43,
    "endLineNumber" : 122,
    "endColumnNumber" : 76
  }, {
    "charLength" : 33,
    "startLineNumber" : 128,
    "startColumnNumber" : 43,
    "endLineNumber" : 128,
    "endColumnNumber" : 76
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}