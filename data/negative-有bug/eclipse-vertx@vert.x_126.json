{
  "id" : 126,
  "expression" : "buf.length() < max",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/main/java/io/vertx/core/cli/UsageMessageFormatter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "buf.length() < max",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 399,
      "startColumnNumber" : 10,
      "endLineNumber" : 399,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 399,
        "startColumnNumber" : 6,
        "endLineNumber" : 401,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (buf.length() < max) {\n  buf.append(createPadding(max - buf.length()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 516,
        "startLineNumber" : 391,
        "startColumnNumber" : 65,
        "endLineNumber" : 412,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  CLI command=it.next();\n  if (command.isHidden()) {\n    continue;\n  }\n  StringBuilder buf=new StringBuilder(prefixList.get(x++).toString());\n  if (buf.length() < max) {\n    buf.append(createPadding(max - buf.length()));\n  }\n  buf.append(dpad);\n  int nextLineTabStop=max + descPad;\n  buf.append(command.getSummary());\n  renderWrappedText(sb,width,nextLineTabStop,buf.toString());\n  if (it.hasNext()) {\n    sb.append(getNewLine());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 577,
        "startLineNumber" : 391,
        "startColumnNumber" : 4,
        "endLineNumber" : 412,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (Iterator<CLI> it=commands.iterator(); it.hasNext(); ) {\n  CLI command=it.next();\n  if (command.isHidden()) {\n    continue;\n  }\n  StringBuilder buf=new StringBuilder(prefixList.get(x++).toString());\n  if (buf.length() < max) {\n    buf.append(createPadding(max - buf.length()));\n  }\n  buf.append(dpad);\n  int nextLineTabStop=max + descPad;\n  buf.append(command.getSummary());\n  renderWrappedText(sb,width,nextLineTabStop,buf.toString());\n  if (it.hasNext()) {\n    sb.append(getNewLine());\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 102,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1186,
        "startLineNumber" : 371,
        "startColumnNumber" : 85,
        "endLineNumber" : 416,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final String lpad=createPadding(leftPad);\n  final String dpad=createPadding(descPad);\n  int max=0;\n  List<StringBuilder> prefixList=new ArrayList<>();\n  for (  CLI command : commands) {\n    if (!command.isHidden()) {\n      StringBuilder buf=new StringBuilder();\n      buf.append(lpad).append(\"   \").append(command.getName());\n      prefixList.add(buf);\n      max=buf.length() > max ? buf.length() : max;\n    }\n  }\n  int x=0;\n  for (Iterator<CLI> it=commands.iterator(); it.hasNext(); ) {\n    CLI command=it.next();\n    if (command.isHidden()) {\n      continue;\n    }\n    StringBuilder buf=new StringBuilder(prefixList.get(x++).toString());\n    if (buf.length() < max) {\n      buf.append(createPadding(max - buf.length()));\n    }\n    buf.append(dpad);\n    int nextLineTabStop=max + descPad;\n    buf.append(command.getSummary());\n    renderWrappedText(sb,width,nextLineTabStop,buf.toString());\n    if (it.hasNext()) {\n      sb.append(getNewLine());\n    }\n  }\n  return sb;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 197,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1269,
        "startLineNumber" : 371,
        "startColumnNumber" : 2,
        "endLineNumber" : 416,
        "endColumnNumber" : 3
      },
      "nodeContext" : "protected StringBuilder renderCommands(StringBuilder sb,Collection<CLI> commands){\n  final String lpad=createPadding(leftPad);\n  final String dpad=createPadding(descPad);\n  int max=0;\n  List<StringBuilder> prefixList=new ArrayList<>();\n  for (  CLI command : commands) {\n    if (!command.isHidden()) {\n      StringBuilder buf=new StringBuilder();\n      buf.append(lpad).append(\"   \").append(command.getName());\n      prefixList.add(buf);\n      max=buf.length() > max ? buf.length() : max;\n    }\n  }\n  int x=0;\n  for (Iterator<CLI> it=commands.iterator(); it.hasNext(); ) {\n    CLI command=it.next();\n    if (command.isHidden()) {\n      continue;\n    }\n    StringBuilder buf=new StringBuilder(prefixList.get(x++).toString());\n    if (buf.length() < max) {\n      buf.append(createPadding(max - buf.length()));\n    }\n    buf.append(dpad);\n    int nextLineTabStop=max + descPad;\n    buf.append(command.getSummary());\n    renderWrappedText(sb,width,nextLineTabStop,buf.toString());\n    if (it.hasNext()) {\n      sb.append(getNewLine());\n    }\n  }\n  return sb;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 213,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 399,
        "startColumnNumber" : 6,
        "endLineNumber" : 401,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (buf.length() < max) {\n  buf.append(createPadding(max - buf.length()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 8
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 399,
    "startColumnNumber" : 10,
    "endLineNumber" : 399,
    "endColumnNumber" : 28
  } ],
  "layoutRelationDataList" : [ ]
}