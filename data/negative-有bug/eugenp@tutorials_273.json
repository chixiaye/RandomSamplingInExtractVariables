{
  "id" : 273,
  "expression" : "\"one\"",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/core-java-modules/core-java-collections-maps-5/src/test/java/com/baeldung/map/keysetValuesEntrySet/EntrySetExampleUnitTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"one\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 19,
      "startColumnNumber" : 16,
      "endLineNumber" : 19,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 19,
        "startColumnNumber" : 8,
        "endLineNumber" : 19,
        "endColumnNumber" : 25
      },
      "nodeContext" : "map.put(\"one\",1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 19,
        "startColumnNumber" : 8,
        "endLineNumber" : 19,
        "endColumnNumber" : 26
      },
      "nodeContext" : "map.put(\"one\",1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 390,
        "startLineNumber" : 16,
        "startColumnNumber" : 80,
        "endLineNumber" : 28,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<String,Integer> map=new HashMap<>();\n  map.put(\"one\",1);\n  map.put(\"two\",2);\n  Set<Map.Entry<String,Integer>> actualValues=map.entrySet();\n  assertEquals(2,actualValues.size());\n  assertTrue(actualValues.contains(new SimpleEntry<>(\"one\",1)));\n  assertTrue(actualValues.contains(new SimpleEntry<>(\"two\",2)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 477,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 28,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void givenHashMap_whenEntrySetApplied_thenShouldReturnSetOfEntries(){\n  Map<String,Integer> map=new HashMap<>();\n  map.put(\"one\",1);\n  map.put(\"two\",2);\n  Set<Map.Entry<String,Integer>> actualValues=map.entrySet();\n  assertEquals(2,actualValues.size());\n  assertTrue(actualValues.contains(new SimpleEntry<>(\"one\",1)));\n  assertTrue(actualValues.contains(new SimpleEntry<>(\"two\",2)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 82,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 19,
        "startColumnNumber" : 8,
        "endLineNumber" : 19,
        "endColumnNumber" : 26
      },
      "nodeContext" : "map.put(\"one\",1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"one\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 25,
      "startColumnNumber" : 59,
      "endLineNumber" : 25,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 25,
        "startColumnNumber" : 41,
        "endLineNumber" : 25,
        "endColumnNumber" : 68
      },
      "nodeContext" : "new SimpleEntry<>(\"one\",1)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 25,
        "startColumnNumber" : 19,
        "endLineNumber" : 25,
        "endColumnNumber" : 69
      },
      "nodeContext" : "actualValues.contains(new SimpleEntry<>(\"one\",1))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 25,
        "startColumnNumber" : 8,
        "endLineNumber" : 25,
        "endColumnNumber" : 70
      },
      "nodeContext" : "assertTrue(actualValues.contains(new SimpleEntry<>(\"one\",1)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 25,
        "startColumnNumber" : 8,
        "endLineNumber" : 25,
        "endColumnNumber" : 71
      },
      "nodeContext" : "assertTrue(actualValues.contains(new SimpleEntry<>(\"one\",1)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 390,
        "startLineNumber" : 16,
        "startColumnNumber" : 80,
        "endLineNumber" : 28,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Map<String,Integer> map=new HashMap<>();\n  map.put(\"one\",1);\n  map.put(\"two\",2);\n  Set<Map.Entry<String,Integer>> actualValues=map.entrySet();\n  assertEquals(2,actualValues.size());\n  assertTrue(actualValues.contains(new SimpleEntry<>(\"one\",1)));\n  assertTrue(actualValues.contains(new SimpleEntry<>(\"two\",2)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 477,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 28,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void givenHashMap_whenEntrySetApplied_thenShouldReturnSetOfEntries(){\n  Map<String,Integer> map=new HashMap<>();\n  map.put(\"one\",1);\n  map.put(\"two\",2);\n  Set<Map.Entry<String,Integer>> actualValues=map.entrySet();\n  assertEquals(2,actualValues.size());\n  assertTrue(actualValues.contains(new SimpleEntry<>(\"one\",1)));\n  assertTrue(actualValues.contains(new SimpleEntry<>(\"two\",2)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 82,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 25,
        "startColumnNumber" : 8,
        "endLineNumber" : 25,
        "endColumnNumber" : 71
      },
      "nodeContext" : "assertTrue(actualValues.contains(new SimpleEntry<>(\"one\",1)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 19,
    "startColumnNumber" : 16,
    "endLineNumber" : 19,
    "endColumnNumber" : 21
  }, {
    "charLength" : 5,
    "startLineNumber" : 25,
    "startColumnNumber" : 59,
    "endLineNumber" : 25,
    "endColumnNumber" : 64
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}