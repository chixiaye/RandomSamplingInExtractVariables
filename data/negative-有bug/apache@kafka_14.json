{
  "id" : 14,
  "expression" : "\"test\"",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/clients/src/test/java/org/apache/kafka/clients/producer/internals/DefaultPartitionerTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"test\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 48,
      "startColumnNumber" : 46,
      "endLineNumber" : 48,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 48,
        "startColumnNumber" : 24,
        "endLineNumber" : 48,
        "endColumnNumber" : 92
      },
      "nodeContext" : "partitioner.partition(\"test\",null,KEY_BYTES,null,null,cluster)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 48,
        "startColumnNumber" : 12,
        "endLineNumber" : 48,
        "endColumnNumber" : 92
      },
      "nodeContext" : "partition=partitioner.partition(\"test\",null,KEY_BYTES,null,null,cluster)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 93
      },
      "nodeContext" : "int partition=partitioner.partition(\"test\",null,KEY_BYTES,null,null,cluster);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 470,
        "startLineNumber" : 44,
        "startColumnNumber" : 43,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Partitioner partitioner=new DefaultPartitioner();\n  final Cluster cluster=new Cluster(\"clusterId\",asList(NODES),PARTITIONS,Collections.<String>emptySet(),Collections.<String>emptySet());\n  int partition=partitioner.partition(\"test\",null,KEY_BYTES,null,null,cluster);\n  assertEquals(partition,partitioner.partition(\"test\",null,KEY_BYTES,null,null,cluster),\"Same key should yield same partition\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 61,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 519,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testKeyPartitionIsStable(){\n  final Partitioner partitioner=new DefaultPartitioner();\n  final Cluster cluster=new Cluster(\"clusterId\",asList(NODES),PARTITIONS,Collections.<String>emptySet(),Collections.<String>emptySet());\n  int partition=partitioner.partition(\"test\",null,KEY_BYTES,null,null,cluster);\n  assertEquals(partition,partitioner.partition(\"test\",null,KEY_BYTES,null,null,cluster),\"Same key should yield same partition\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 67,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 93
      },
      "nodeContext" : "int partition=partitioner.partition(\"test\",null,KEY_BYTES,null,null,cluster);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"test\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 49,
      "startColumnNumber" : 54,
      "endLineNumber" : 49,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 49,
        "startColumnNumber" : 32,
        "endLineNumber" : 49,
        "endColumnNumber" : 99
      },
      "nodeContext" : "partitioner.partition(\"test\",null,KEY_BYTES,null,null,cluster)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 140
      },
      "nodeContext" : "assertEquals(partition,partitioner.partition(\"test\",null,KEY_BYTES,null,null,cluster),\"Same key should yield same partition\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 141
      },
      "nodeContext" : "assertEquals(partition,partitioner.partition(\"test\",null,KEY_BYTES,null,null,cluster),\"Same key should yield same partition\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 470,
        "startLineNumber" : 44,
        "startColumnNumber" : 43,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Partitioner partitioner=new DefaultPartitioner();\n  final Cluster cluster=new Cluster(\"clusterId\",asList(NODES),PARTITIONS,Collections.<String>emptySet(),Collections.<String>emptySet());\n  int partition=partitioner.partition(\"test\",null,KEY_BYTES,null,null,cluster);\n  assertEquals(partition,partitioner.partition(\"test\",null,KEY_BYTES,null,null,cluster),\"Same key should yield same partition\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 61,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 519,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testKeyPartitionIsStable(){\n  final Partitioner partitioner=new DefaultPartitioner();\n  final Cluster cluster=new Cluster(\"clusterId\",asList(NODES),PARTITIONS,Collections.<String>emptySet(),Collections.<String>emptySet());\n  int partition=partitioner.partition(\"test\",null,KEY_BYTES,null,null,cluster);\n  assertEquals(partition,partitioner.partition(\"test\",null,KEY_BYTES,null,null,cluster),\"Same key should yield same partition\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 67,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 141
      },
      "nodeContext" : "assertEquals(partition,partitioner.partition(\"test\",null,KEY_BYTES,null,null,cluster),\"Same key should yield same partition\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 48,
    "startColumnNumber" : 46,
    "endLineNumber" : 48,
    "endColumnNumber" : 52
  }, {
    "charLength" : 6,
    "startLineNumber" : 49,
    "startColumnNumber" : 54,
    "endLineNumber" : 49,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}