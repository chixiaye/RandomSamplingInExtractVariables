{
  "id" : 177,
  "expression" : "reader",
  "projectName" : "Blankj@AndroidUtilCode",
  "commitID" : "b0f09e2df62a8b5e40c07016bf0588e3d1eb4151",
  "filePath" : "/utilcode/src/main/java/com/blankj/utilcode/util/FileIOUtils.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "reader",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 447,
      "startColumnNumber" : 27,
      "endLineNumber" : 447,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 447,
        "startColumnNumber" : 27,
        "endLineNumber" : 447,
        "endColumnNumber" : 44
      },
      "nodeContext" : "reader.readLine()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 447,
        "startColumnNumber" : 20,
        "endLineNumber" : 447,
        "endColumnNumber" : 44
      },
      "nodeContext" : "line=reader.readLine()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 447,
        "startColumnNumber" : 19,
        "endLineNumber" : 447,
        "endColumnNumber" : 45
      },
      "nodeContext" : "(line=reader.readLine())",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 447,
        "startColumnNumber" : 19,
        "endLineNumber" : 447,
        "endColumnNumber" : 53
      },
      "nodeContext" : "(line=reader.readLine()) != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 196,
        "startLineNumber" : 447,
        "startColumnNumber" : 12,
        "endLineNumber" : 451,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while ((line=reader.readLine()) != null) {\n  if (curLine > end)   break;\n  if (st <= curLine && curLine <= end)   list.add(line);\n  ++curLine;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 31,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 628,
        "startLineNumber" : 438,
        "startColumnNumber" : 12,
        "endLineNumber" : 453,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String line;\n  int curLine=1;\n  List<String> list=new ArrayList<>();\n  if (isSpace(charsetName)) {\n    reader=new BufferedReader(new InputStreamReader(new FileInputStream(file)));\n  }\n else {\n    reader=new BufferedReader(new InputStreamReader(new FileInputStream(file),charsetName));\n  }\n  while ((line=reader.readLine()) != null) {\n    if (curLine > end)     break;\n    if (st <= curLine && curLine <= end)     list.add(line);\n    ++curLine;\n  }\n  return list;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 89,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 784,
        "startLineNumber" : 438,
        "startColumnNumber" : 8,
        "endLineNumber" : 458,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  String line;\n  int curLine=1;\n  List<String> list=new ArrayList<>();\n  if (isSpace(charsetName)) {\n    reader=new BufferedReader(new InputStreamReader(new FileInputStream(file)));\n  }\n else {\n    reader=new BufferedReader(new InputStreamReader(new FileInputStream(file),charsetName));\n  }\n  while ((line=reader.readLine()) != null) {\n    if (curLine > end)     break;\n    if (st <= curLine && curLine <= end)     list.add(line);\n    ++curLine;\n  }\n  return list;\n}\n catch (IOException e) {\n  e.printStackTrace();\n  return null;\n}\n finally {\n  CloseUtils.closeIO(reader);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 108,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 919,
        "startLineNumber" : 434,
        "startColumnNumber" : 117,
        "endLineNumber" : 459,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!isFileExists(file))   return null;\n  if (st > end)   return null;\n  BufferedReader reader=null;\n  try {\n    String line;\n    int curLine=1;\n    List<String> list=new ArrayList<>();\n    if (isSpace(charsetName)) {\n      reader=new BufferedReader(new InputStreamReader(new FileInputStream(file)));\n    }\n else {\n      reader=new BufferedReader(new InputStreamReader(new FileInputStream(file),charsetName));\n    }\n    while ((line=reader.readLine()) != null) {\n      if (curLine > end)       break;\n      if (st <= curLine && curLine <= end)       list.add(line);\n      ++curLine;\n    }\n    return list;\n  }\n catch (  IOException e) {\n    e.printStackTrace();\n    return null;\n  }\n finally {\n    CloseUtils.closeIO(reader);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1228,
        "startLineNumber" : 425,
        "startColumnNumber" : 4,
        "endLineNumber" : 459,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * 读取文件到字符串链表中\n * @param file        文件\n * @param st          需要读取的开始行数\n * @param end         需要读取的结束行数\n * @param charsetName 编码格式\n * @return 字符串链表中\n */\npublic static List<String> readFile2List(final File file,final int st,final int end,final String charsetName){\n  if (!isFileExists(file))   return null;\n  if (st > end)   return null;\n  BufferedReader reader=null;\n  try {\n    String line;\n    int curLine=1;\n    List<String> list=new ArrayList<>();\n    if (isSpace(charsetName)) {\n      reader=new BufferedReader(new InputStreamReader(new FileInputStream(file)));\n    }\n else {\n      reader=new BufferedReader(new InputStreamReader(new FileInputStream(file),charsetName));\n    }\n    while ((line=reader.readLine()) != null) {\n      if (curLine > end)       break;\n      if (st <= curLine && curLine <= end)       list.add(line);\n      ++curLine;\n    }\n    return list;\n  }\n catch (  IOException e) {\n    e.printStackTrace();\n    return null;\n  }\n finally {\n    CloseUtils.closeIO(reader);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 156,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 447,
        "startColumnNumber" : 19,
        "endLineNumber" : 447,
        "endColumnNumber" : 53
      },
      "nodeContext" : "(line=reader.readLine()) != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.io.BufferedReader"
  }, {
    "nodeContext" : "reader",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 457,
      "startColumnNumber" : 31,
      "endLineNumber" : 457,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 457,
        "startColumnNumber" : 12,
        "endLineNumber" : 457,
        "endColumnNumber" : 38
      },
      "nodeContext" : "CloseUtils.closeIO(reader)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 457,
        "startColumnNumber" : 12,
        "endLineNumber" : 457,
        "endColumnNumber" : 39
      },
      "nodeContext" : "CloseUtils.closeIO(reader);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,finally]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 456,
        "startColumnNumber" : 18,
        "endLineNumber" : 458,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  CloseUtils.closeIO(reader);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 784,
        "startLineNumber" : 438,
        "startColumnNumber" : 8,
        "endLineNumber" : 458,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  String line;\n  int curLine=1;\n  List<String> list=new ArrayList<>();\n  if (isSpace(charsetName)) {\n    reader=new BufferedReader(new InputStreamReader(new FileInputStream(file)));\n  }\n else {\n    reader=new BufferedReader(new InputStreamReader(new FileInputStream(file),charsetName));\n  }\n  while ((line=reader.readLine()) != null) {\n    if (curLine > end)     break;\n    if (st <= curLine && curLine <= end)     list.add(line);\n    ++curLine;\n  }\n  return list;\n}\n catch (IOException e) {\n  e.printStackTrace();\n  return null;\n}\n finally {\n  CloseUtils.closeIO(reader);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 108,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 919,
        "startLineNumber" : 434,
        "startColumnNumber" : 117,
        "endLineNumber" : 459,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!isFileExists(file))   return null;\n  if (st > end)   return null;\n  BufferedReader reader=null;\n  try {\n    String line;\n    int curLine=1;\n    List<String> list=new ArrayList<>();\n    if (isSpace(charsetName)) {\n      reader=new BufferedReader(new InputStreamReader(new FileInputStream(file)));\n    }\n else {\n      reader=new BufferedReader(new InputStreamReader(new FileInputStream(file),charsetName));\n    }\n    while ((line=reader.readLine()) != null) {\n      if (curLine > end)       break;\n      if (st <= curLine && curLine <= end)       list.add(line);\n      ++curLine;\n    }\n    return list;\n  }\n catch (  IOException e) {\n    e.printStackTrace();\n    return null;\n  }\n finally {\n    CloseUtils.closeIO(reader);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1228,
        "startLineNumber" : 425,
        "startColumnNumber" : 4,
        "endLineNumber" : 459,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * 读取文件到字符串链表中\n * @param file        文件\n * @param st          需要读取的开始行数\n * @param end         需要读取的结束行数\n * @param charsetName 编码格式\n * @return 字符串链表中\n */\npublic static List<String> readFile2List(final File file,final int st,final int end,final String charsetName){\n  if (!isFileExists(file))   return null;\n  if (st > end)   return null;\n  BufferedReader reader=null;\n  try {\n    String line;\n    int curLine=1;\n    List<String> list=new ArrayList<>();\n    if (isSpace(charsetName)) {\n      reader=new BufferedReader(new InputStreamReader(new FileInputStream(file)));\n    }\n else {\n      reader=new BufferedReader(new InputStreamReader(new FileInputStream(file),charsetName));\n    }\n    while ((line=reader.readLine()) != null) {\n      if (curLine > end)       break;\n      if (st <= curLine && curLine <= end)       list.add(line);\n      ++curLine;\n    }\n    return list;\n  }\n catch (  IOException e) {\n    e.printStackTrace();\n    return null;\n  }\n finally {\n    CloseUtils.closeIO(reader);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 156,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 457,
        "startColumnNumber" : 12,
        "endLineNumber" : 457,
        "endColumnNumber" : 39
      },
      "nodeContext" : "CloseUtils.closeIO(reader);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.io.BufferedReader"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 447,
    "startColumnNumber" : 27,
    "endLineNumber" : 447,
    "endColumnNumber" : 33
  }, {
    "charLength" : 6,
    "startLineNumber" : 457,
    "startColumnNumber" : 31,
    "endLineNumber" : 457,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}