{
  "id" : 92,
  "expression" : "getFullActivityMills() * Math.sqrt(rate)",
  "projectName" : "android-hacker@VirtualXposed",
  "commitID" : "8e98dd20e6a751089d4eb2642fa6bf088a3e7a79",
  "filePath" : "/VirtualApp/app/src/main/java/io/virtualapp/widgets/CircularAnim.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "getFullActivityMills() * Math.sqrt(rate)",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 40,
      "startLineNumber" : 276,
      "startColumnNumber" : 45,
      "endLineNumber" : 276,
      "endColumnNumber" : 85
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 276,
        "startColumnNumber" : 44,
        "endLineNumber" : 276,
        "endColumnNumber" : 86
      },
      "nodeContext" : "(getFullActivityMills() * Math.sqrt(rate))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 276,
        "startColumnNumber" : 37,
        "endLineNumber" : 276,
        "endColumnNumber" : 86
      },
      "nodeContext" : "(long)(getFullActivityMills() * Math.sqrt(rate))",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 276,
        "startColumnNumber" : 20,
        "endLineNumber" : 276,
        "endColumnNumber" : 86
      },
      "nodeContext" : "mDurationMills=(long)(getFullActivityMills() * Math.sqrt(rate))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 276,
        "startColumnNumber" : 20,
        "endLineNumber" : 276,
        "endColumnNumber" : 87
      },
      "nodeContext" : "mDurationMills=(long)(getFullActivityMills() * Math.sqrt(rate));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 171,
        "startLineNumber" : 274,
        "startColumnNumber" : 44,
        "endLineNumber" : 277,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  double rate=1d * finalRadius / maxRadius;\n  mDurationMills=(long)(getFullActivityMills() * Math.sqrt(rate));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 199,
        "startLineNumber" : 274,
        "startColumnNumber" : 16,
        "endLineNumber" : 277,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (mDurationMills == null) {\n  double rate=1d * finalRadius / maxRadius;\n  mDurationMills=(long)(getFullActivityMills() * Math.sqrt(rate));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2683,
        "startLineNumber" : 270,
        "startColumnNumber" : 16,
        "endLineNumber" : 323,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Animator anim=ViewAnimationUtils.createCircularReveal(view,cx,cy,mStartRadius,finalRadius);\n  int maxRadius=(int)Math.sqrt(w * w + h * h) + 1;\n  if (mDurationMills == null) {\n    double rate=1d * finalRadius / maxRadius;\n    mDurationMills=(long)(getFullActivityMills() * Math.sqrt(rate));\n  }\n  final long finalDuration=mDurationMills;\n  anim.setDuration((long)(finalDuration * 0.9));\n  anim.addListener(new AnimatorListenerAdapter(){\n    @Override public void onAnimationEnd(    Animator animation){\n      super.onAnimationEnd(animation);\n      doOnEnd();\n      mActivity.overridePendingTransition(mEnterAnim,mExitAnim);\n      mTriggerView.postDelayed(new Runnable(){\n        @Override public void run(){\n          if (mActivity.isFinishing())           return;\n          try {\n            Animator anim=ViewAnimationUtils.createCircularReveal(view,cx,cy,finalRadius,mStartRadius);\n            anim.setDuration(finalDuration);\n            anim.addListener(new AnimatorListenerAdapter(){\n              @Override public void onAnimationEnd(              Animator animation){\n                super.onAnimationEnd(animation);\n                try {\n                  decorView.removeView(view);\n                }\n catch (                Exception e) {\n                  e.printStackTrace();\n                }\n              }\n            }\n);\n            anim.start();\n          }\n catch (          Exception e) {\n            e.printStackTrace();\n            try {\n              decorView.removeView(view);\n            }\n catch (            Exception e1) {\n              e1.printStackTrace();\n            }\n          }\n        }\n      }\n,1000);\n    }\n  }\n);\n  anim.start();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 223,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2787,
        "startLineNumber" : 270,
        "startColumnNumber" : 12,
        "endLineNumber" : 326,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  Animator anim=ViewAnimationUtils.createCircularReveal(view,cx,cy,mStartRadius,finalRadius);\n  int maxRadius=(int)Math.sqrt(w * w + h * h) + 1;\n  if (mDurationMills == null) {\n    double rate=1d * finalRadius / maxRadius;\n    mDurationMills=(long)(getFullActivityMills() * Math.sqrt(rate));\n  }\n  final long finalDuration=mDurationMills;\n  anim.setDuration((long)(finalDuration * 0.9));\n  anim.addListener(new AnimatorListenerAdapter(){\n    @Override public void onAnimationEnd(    Animator animation){\n      super.onAnimationEnd(animation);\n      doOnEnd();\n      mActivity.overridePendingTransition(mEnterAnim,mExitAnim);\n      mTriggerView.postDelayed(new Runnable(){\n        @Override public void run(){\n          if (mActivity.isFinishing())           return;\n          try {\n            Animator anim=ViewAnimationUtils.createCircularReveal(view,cx,cy,finalRadius,mStartRadius);\n            anim.setDuration(finalDuration);\n            anim.addListener(new AnimatorListenerAdapter(){\n              @Override public void onAnimationEnd(              Animator animation){\n                super.onAnimationEnd(animation);\n                try {\n                  decorView.removeView(view);\n                }\n catch (                Exception e) {\n                  e.printStackTrace();\n                }\n              }\n            }\n);\n            anim.start();\n          }\n catch (          Exception e) {\n            e.printStackTrace();\n            try {\n              decorView.removeView(view);\n            }\n catch (            Exception e1) {\n              e1.printStackTrace();\n            }\n          }\n        }\n      }\n,1000);\n    }\n  }\n);\n  anim.start();\n}\n catch (Exception e) {\n  e.printStackTrace();\n  doOnEnd();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 237,
      "astHeight" : 28
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3875,
        "startLineNumber" : 245,
        "startColumnNumber" : 70,
        "endLineNumber" : 327,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  mOnAnimationEndListener=onAnimationEndListener;\n  if (android.os.Build.VERSION.SDK_INT < android.os.Build.VERSION_CODES.LOLLIPOP) {\n    doOnEnd();\n    return;\n  }\n  int[] location=new int[2];\n  mTriggerView.getLocationInWindow(location);\n  final int cx=location[0] + mTriggerView.getWidth() / 2;\n  final int cy=location[1] + mTriggerView.getHeight() / 2;\n  final ImageView view=new ImageView(mActivity);\n  view.setScaleType(ImageView.ScaleType.CENTER_CROP);\n  view.setImageResource(mColorOrImageRes);\n  final ViewGroup decorView=(ViewGroup)mActivity.getWindow().getDecorView();\n  int w=decorView.getWidth();\n  int h=decorView.getHeight();\n  decorView.addView(view,w,h);\n  int maxW=Math.max(cx,w - cx);\n  int maxH=Math.max(cy,h - cy);\n  final int finalRadius=(int)Math.sqrt(maxW * maxW + maxH * maxH) + 1;\n  try {\n    Animator anim=ViewAnimationUtils.createCircularReveal(view,cx,cy,mStartRadius,finalRadius);\n    int maxRadius=(int)Math.sqrt(w * w + h * h) + 1;\n    if (mDurationMills == null) {\n      double rate=1d * finalRadius / maxRadius;\n      mDurationMills=(long)(getFullActivityMills() * Math.sqrt(rate));\n    }\n    final long finalDuration=mDurationMills;\n    anim.setDuration((long)(finalDuration * 0.9));\n    anim.addListener(new AnimatorListenerAdapter(){\n      @Override public void onAnimationEnd(      Animator animation){\n        super.onAnimationEnd(animation);\n        doOnEnd();\n        mActivity.overridePendingTransition(mEnterAnim,mExitAnim);\n        mTriggerView.postDelayed(new Runnable(){\n          @Override public void run(){\n            if (mActivity.isFinishing())             return;\n            try {\n              Animator anim=ViewAnimationUtils.createCircularReveal(view,cx,cy,finalRadius,mStartRadius);\n              anim.setDuration(finalDuration);\n              anim.addListener(new AnimatorListenerAdapter(){\n                @Override public void onAnimationEnd(                Animator animation){\n                  super.onAnimationEnd(animation);\n                  try {\n                    decorView.removeView(view);\n                  }\n catch (                  Exception e) {\n                    e.printStackTrace();\n                  }\n                }\n              }\n);\n              anim.start();\n            }\n catch (            Exception e) {\n              e.printStackTrace();\n              try {\n                decorView.removeView(view);\n              }\n catch (              Exception e1) {\n                e1.printStackTrace();\n              }\n            }\n          }\n        }\n,1000);\n      }\n    }\n);\n    anim.start();\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    doOnEnd();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 411,
      "astHeight" : 29
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3937,
        "startLineNumber" : 245,
        "startColumnNumber" : 8,
        "endLineNumber" : 327,
        "endColumnNumber" : 9
      },
      "nodeContext" : "public void go(OnAnimationEndListener onAnimationEndListener){\n  mOnAnimationEndListener=onAnimationEndListener;\n  if (android.os.Build.VERSION.SDK_INT < android.os.Build.VERSION_CODES.LOLLIPOP) {\n    doOnEnd();\n    return;\n  }\n  int[] location=new int[2];\n  mTriggerView.getLocationInWindow(location);\n  final int cx=location[0] + mTriggerView.getWidth() / 2;\n  final int cy=location[1] + mTriggerView.getHeight() / 2;\n  final ImageView view=new ImageView(mActivity);\n  view.setScaleType(ImageView.ScaleType.CENTER_CROP);\n  view.setImageResource(mColorOrImageRes);\n  final ViewGroup decorView=(ViewGroup)mActivity.getWindow().getDecorView();\n  int w=decorView.getWidth();\n  int h=decorView.getHeight();\n  decorView.addView(view,w,h);\n  int maxW=Math.max(cx,w - cx);\n  int maxH=Math.max(cy,h - cy);\n  final int finalRadius=(int)Math.sqrt(maxW * maxW + maxH * maxH) + 1;\n  try {\n    Animator anim=ViewAnimationUtils.createCircularReveal(view,cx,cy,mStartRadius,finalRadius);\n    int maxRadius=(int)Math.sqrt(w * w + h * h) + 1;\n    if (mDurationMills == null) {\n      double rate=1d * finalRadius / maxRadius;\n      mDurationMills=(long)(getFullActivityMills() * Math.sqrt(rate));\n    }\n    final long finalDuration=mDurationMills;\n    anim.setDuration((long)(finalDuration * 0.9));\n    anim.addListener(new AnimatorListenerAdapter(){\n      @Override public void onAnimationEnd(      Animator animation){\n        super.onAnimationEnd(animation);\n        doOnEnd();\n        mActivity.overridePendingTransition(mEnterAnim,mExitAnim);\n        mTriggerView.postDelayed(new Runnable(){\n          @Override public void run(){\n            if (mActivity.isFinishing())             return;\n            try {\n              Animator anim=ViewAnimationUtils.createCircularReveal(view,cx,cy,finalRadius,mStartRadius);\n              anim.setDuration(finalDuration);\n              anim.addListener(new AnimatorListenerAdapter(){\n                @Override public void onAnimationEnd(                Animator animation){\n                  super.onAnimationEnd(animation);\n                  try {\n                    decorView.removeView(view);\n                  }\n catch (                  Exception e) {\n                    e.printStackTrace();\n                  }\n                }\n              }\n);\n              anim.start();\n            }\n catch (            Exception e) {\n              e.printStackTrace();\n              try {\n                decorView.removeView(view);\n              }\n catch (              Exception e1) {\n                e1.printStackTrace();\n              }\n            }\n          }\n        }\n,1000);\n      }\n    }\n);\n    anim.start();\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n    doOnEnd();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 419,
      "astHeight" : 30
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 276,
        "startColumnNumber" : 20,
        "endLineNumber" : 276,
        "endColumnNumber" : 87
      },
      "nodeContext" : "mDurationMills=(long)(getFullActivityMills() * Math.sqrt(rate));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    },
    "tokenLength" : 5,
    "type" : "double"
  } ],
  "positionList" : [ {
    "charLength" : 40,
    "startLineNumber" : 276,
    "startColumnNumber" : 45,
    "endLineNumber" : 276,
    "endColumnNumber" : 85
  } ],
  "layoutRelationDataList" : [ ]
}