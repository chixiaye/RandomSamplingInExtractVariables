{
  "id" : 199,
  "expression" : "Float.class",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-python/src/main/java/org/apache/flink/python/util/HashMapWrapper.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Float.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 70,
      "startColumnNumber" : 26,
      "endLineNumber" : 70,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 70,
        "startColumnNumber" : 19,
        "endLineNumber" : 70,
        "endColumnNumber" : 37
      },
      "nodeContext" : "cls == Float.class",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 430,
        "startLineNumber" : 70,
        "startColumnNumber" : 15,
        "endLineNumber" : 80,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (cls == Float.class) {\n  return typedData.floatValue();\n}\n else if (cls == Double.class) {\n  return typedData.doubleValue();\n}\n else if (cls == Byte.class) {\n  return typedData.byteValue();\n}\n else if (cls == Short.class) {\n  return typedData.shortValue();\n}\n else {\n  throw new RuntimeException(\"Unexpected class type: \" + cls);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 52,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 514,
        "startLineNumber" : 68,
        "startColumnNumber" : 15,
        "endLineNumber" : 80,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (cls == Long.class) {\n  return typedData.longValue();\n}\n else if (cls == Float.class) {\n  return typedData.floatValue();\n}\n else if (cls == Double.class) {\n  return typedData.doubleValue();\n}\n else if (cls == Byte.class) {\n  return typedData.byteValue();\n}\n else if (cls == Short.class) {\n  return typedData.shortValue();\n}\n else {\n  throw new RuntimeException(\"Unexpected class type: \" + cls);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 63,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 600,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 80,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (cls == Integer.class) {\n  return typedData.intValue();\n}\n else if (cls == Long.class) {\n  return typedData.longValue();\n}\n else if (cls == Float.class) {\n  return typedData.floatValue();\n}\n else if (cls == Double.class) {\n  return typedData.doubleValue();\n}\n else if (cls == Byte.class) {\n  return typedData.byteValue();\n}\n else if (cls == Short.class) {\n  return typedData.shortValue();\n}\n else {\n  throw new RuntimeException(\"Unexpected class type: \" + cls);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 74,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 667,
        "startLineNumber" : 64,
        "startColumnNumber" : 61,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Number typedData=(Number)data;\n  if (cls == Integer.class) {\n    return typedData.intValue();\n  }\n else   if (cls == Long.class) {\n    return typedData.longValue();\n  }\n else   if (cls == Float.class) {\n    return typedData.floatValue();\n  }\n else   if (cls == Double.class) {\n    return typedData.doubleValue();\n  }\n else   if (cls == Byte.class) {\n    return typedData.byteValue();\n  }\n else   if (cls == Short.class) {\n    return typedData.shortValue();\n  }\n else {\n    throw new RuntimeException(\"Unexpected class type: \" + cls);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 724,
        "startLineNumber" : 64,
        "startColumnNumber" : 4,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static Object convert(Class<?> cls,Object data){\n  final Number typedData=(Number)data;\n  if (cls == Integer.class) {\n    return typedData.intValue();\n  }\n else   if (cls == Long.class) {\n    return typedData.longValue();\n  }\n else   if (cls == Float.class) {\n    return typedData.floatValue();\n  }\n else   if (cls == Double.class) {\n    return typedData.doubleValue();\n  }\n else   if (cls == Byte.class) {\n    return typedData.byteValue();\n  }\n else   if (cls == Short.class) {\n    return typedData.shortValue();\n  }\n else {\n    throw new RuntimeException(\"Unexpected class type: \" + cls);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 101,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 70,
        "startColumnNumber" : 19,
        "endLineNumber" : 70,
        "endColumnNumber" : 37
      },
      "nodeContext" : "cls == Float.class",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<java.lang.Float>"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 70,
    "startColumnNumber" : 26,
    "endLineNumber" : 70,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ ]
}