{
  "id" : 432,
  "expression" : "context.getSession().getProvider(LoginFormsProvider.class).setAuthenticationSession(context.getAuthenticationSession())",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/services/src/main/java/org/keycloak/services/resources/LoginActionsServiceChecks.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "context.getSession().getProvider(LoginFormsProvider.class).setAuthenticationSession(context.getAuthenticationSession())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 119,
      "startLineNumber" : 131,
      "startColumnNumber" : 43,
      "endLineNumber" : 131,
      "endColumnNumber" : 162
    },
    "astNodeNumber" : 13,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 173,
        "startLineNumber" : 131,
        "startColumnNumber" : 43,
        "endLineNumber" : 132,
        "endColumnNumber" : 53
      },
      "nodeContext" : "context.getSession().getProvider(LoginFormsProvider.class).setAuthenticationSession(context.getAuthenticationSession()).setSuccess(Messages.ALREADY_LOGGED_IN)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 185,
        "startLineNumber" : 131,
        "startColumnNumber" : 31,
        "endLineNumber" : 132,
        "endColumnNumber" : 53
      },
      "nodeContext" : "loginForm=context.getSession().getProvider(LoginFormsProvider.class).setAuthenticationSession(context.getAuthenticationSession()).setSuccess(Messages.ALREADY_LOGGED_IN)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 205,
        "startLineNumber" : 131,
        "startColumnNumber" : 12,
        "endLineNumber" : 132,
        "endColumnNumber" : 54
      },
      "nodeContext" : "LoginFormsProvider loginForm=context.getSession().getProvider(LoginFormsProvider.class).setAuthenticationSession(context.getAuthenticationSession()).setSuccess(Messages.ALREADY_LOGGED_IN);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 23,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 465,
        "startLineNumber" : 130,
        "startColumnNumber" : 57,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  LoginFormsProvider loginForm=context.getSession().getProvider(LoginFormsProvider.class).setAuthenticationSession(context.getAuthenticationSession()).setSuccess(Messages.ALREADY_LOGGED_IN);\n  if (context.getSession().getContext().getClient() == null) {\n    loginForm.setAttribute(Constants.SKIP_LINK,true);\n  }\n  throw new LoginActionsServiceException(loginForm.createInfoPage());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 514,
        "startLineNumber" : 130,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (userSession != null && hasNoRequiredActions) {\n  LoginFormsProvider loginForm=context.getSession().getProvider(LoginFormsProvider.class).setAuthenticationSession(context.getAuthenticationSession()).setSuccess(Messages.ALREADY_LOGGED_IN);\n  if (context.getSession().getContext().getClient() == null) {\n    loginForm.setAttribute(Constants.SKIP_LINK,true);\n  }\n  throw new LoginActionsServiceException(loginForm.createInfoPage());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 56,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1023,
        "startLineNumber" : 119,
        "startColumnNumber" : 200,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (authSessionId == null) {\n    return;\n  }\n  UserSessionModel userSession=context.getSession().sessions().getUserSession(context.getRealm(),authSessionId);\n  boolean hasNoRequiredActions=(userSession == null || userSession.getUser().getRequiredActionsStream().count() == 0) && (authSessionFromCookie == null || authSessionFromCookie.getRequiredActions() == null || authSessionFromCookie.getRequiredActions().isEmpty());\n  if (userSession != null && hasNoRequiredActions) {\n    LoginFormsProvider loginForm=context.getSession().getProvider(LoginFormsProvider.class).setAuthenticationSession(context.getAuthenticationSession()).setSuccess(Messages.ALREADY_LOGGED_IN);\n    if (context.getSession().getContext().getClient() == null) {\n      loginForm.setAttribute(Constants.SKIP_LINK,true);\n    }\n    throw new LoginActionsServiceException(loginForm.createInfoPage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1415,
        "startLineNumber" : 115,
        "startColumnNumber" : 4,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Verifies that the authentication session has not yet been converted to user session, in other words that the user has not yet completed authentication and logged in.\n */\npublic static <T extends JsonWebToken>void checkNotLoggedInYet(ActionTokenContext<T> context,AuthenticationSessionModel authSessionFromCookie,String authSessionId) throws VerificationException {\n  if (authSessionId == null) {\n    return;\n  }\n  UserSessionModel userSession=context.getSession().sessions().getUserSession(context.getRealm(),authSessionId);\n  boolean hasNoRequiredActions=(userSession == null || userSession.getUser().getRequiredActionsStream().count() == 0) && (authSessionFromCookie == null || authSessionFromCookie.getRequiredActions() == null || authSessionFromCookie.getRequiredActions().isEmpty());\n  if (userSession != null && hasNoRequiredActions) {\n    LoginFormsProvider loginForm=context.getSession().getProvider(LoginFormsProvider.class).setAuthenticationSession(context.getAuthenticationSession()).setSuccess(Messages.ALREADY_LOGGED_IN);\n    if (context.getSession().getContext().getClient() == null) {\n      loginForm.setAttribute(Constants.SKIP_LINK,true);\n    }\n    throw new LoginActionsServiceException(loginForm.createInfoPage());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 141,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 173,
        "startLineNumber" : 131,
        "startColumnNumber" : 43,
        "endLineNumber" : 132,
        "endColumnNumber" : 53
      },
      "nodeContext" : "context.getSession().getProvider(LoginFormsProvider.class).setAuthenticationSession(context.getAuthenticationSession()).setSuccess(Messages.ALREADY_LOGGED_IN)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 6
    },
    "tokenLength" : 7,
    "type" : "org.keycloak.forms.login.LoginFormsProvider"
  } ],
  "positionList" : [ {
    "charLength" : 119,
    "startLineNumber" : 131,
    "startColumnNumber" : 43,
    "endLineNumber" : 131,
    "endColumnNumber" : 162
  } ],
  "layoutRelationDataList" : [ ]
}