{
  "id" : 184,
  "expression" : "mapBlock.getRawValueBlock().getRegion(entriesStartOffset,entriesEndOffset - entriesStartOffset)",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-common/src/main/java/com/facebook/presto/common/block/MapBlockEncoding.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "mapBlock.getRawValueBlock().getRegion(entriesStartOffset,entriesEndOffset - entriesStartOffset)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 96,
      "startLineNumber" : 54,
      "startColumnNumber" : 51,
      "endLineNumber" : 54,
      "endColumnNumber" : 147
    },
    "astNodeNumber" : 9,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 140,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 148
      },
      "nodeContext" : "blockEncodingSerde.writeBlock(sliceOutput,mapBlock.getRawValueBlock().getRegion(entriesStartOffset,entriesEndOffset - entriesStartOffset))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 149
      },
      "nodeContext" : "blockEncodingSerde.writeBlock(sliceOutput,mapBlock.getRawValueBlock().getRegion(entriesStartOffset,entriesEndOffset - entriesStartOffset));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1461,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  AbstractMapBlock mapBlock=(AbstractMapBlock)block;\n  int positionCount=mapBlock.getPositionCount();\n  int offsetBase=mapBlock.getOffsetBase();\n  int[] offsets=mapBlock.getOffsets();\n  int[] hashTable=mapBlock.getHashTables().get();\n  int entriesStartOffset=offsets[offsetBase];\n  int entriesEndOffset=offsets[offsetBase + positionCount];\n  blockEncodingSerde.writeBlock(sliceOutput,mapBlock.getRawKeyBlock().getRegion(entriesStartOffset,entriesEndOffset - entriesStartOffset));\n  blockEncodingSerde.writeBlock(sliceOutput,mapBlock.getRawValueBlock().getRegion(entriesStartOffset,entriesEndOffset - entriesStartOffset));\n  if (hashTable != null) {\n    int hashTableLength=(entriesEndOffset - entriesStartOffset) * HASH_MULTIPLIER;\n    sliceOutput.appendInt(hashTableLength);\n    sliceOutput.writeBytes(wrappedIntArray(hashTable,entriesStartOffset * HASH_MULTIPLIER,hashTableLength));\n  }\n else {\n    sliceOutput.appendInt(-1);\n  }\n  sliceOutput.appendInt(positionCount);\n  for (int position=0; position < positionCount + 1; position++) {\n    sliceOutput.writeInt(offsets[offsetBase + position] - entriesStartOffset);\n  }\n  EncoderUtil.encodeNullsAsBits(sliceOutput,block);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1579,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void writeBlock(BlockEncodingSerde blockEncodingSerde,SliceOutput sliceOutput,Block block){\n  AbstractMapBlock mapBlock=(AbstractMapBlock)block;\n  int positionCount=mapBlock.getPositionCount();\n  int offsetBase=mapBlock.getOffsetBase();\n  int[] offsets=mapBlock.getOffsets();\n  int[] hashTable=mapBlock.getHashTables().get();\n  int entriesStartOffset=offsets[offsetBase];\n  int entriesEndOffset=offsets[offsetBase + positionCount];\n  blockEncodingSerde.writeBlock(sliceOutput,mapBlock.getRawKeyBlock().getRegion(entriesStartOffset,entriesEndOffset - entriesStartOffset));\n  blockEncodingSerde.writeBlock(sliceOutput,mapBlock.getRawValueBlock().getRegion(entriesStartOffset,entriesEndOffset - entriesStartOffset));\n  if (hashTable != null) {\n    int hashTableLength=(entriesEndOffset - entriesStartOffset) * HASH_MULTIPLIER;\n    sliceOutput.appendInt(hashTableLength);\n    sliceOutput.writeBytes(wrappedIntArray(hashTable,entriesStartOffset * HASH_MULTIPLIER,hashTableLength));\n  }\n else {\n    sliceOutput.appendInt(-1);\n  }\n  sliceOutput.appendInt(positionCount);\n  for (int position=0; position < positionCount + 1; position++) {\n    sliceOutput.writeInt(offsets[offsetBase + position] - entriesStartOffset);\n  }\n  EncoderUtil.encodeNullsAsBits(sliceOutput,block);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 149
      },
      "nodeContext" : "blockEncodingSerde.writeBlock(sliceOutput,mapBlock.getRawValueBlock().getRegion(entriesStartOffset,entriesEndOffset - entriesStartOffset));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 7,
    "type" : "com.facebook.presto.common.block.Block"
  } ],
  "positionList" : [ {
    "charLength" : 96,
    "startLineNumber" : 54,
    "startColumnNumber" : 51,
    "endLineNumber" : 54,
    "endColumnNumber" : 147
  } ],
  "layoutRelationDataList" : [ ]
}