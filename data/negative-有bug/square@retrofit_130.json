{
  "id" : 130,
  "expression" : "\"name\"",
  "projectName" : "square@retrofit",
  "commitID" : "757278c7ab7f6c8e5a40d16a5707c35e0f61c5ab",
  "filePath" : "/retrofit/android-test/src/androidTest/java/retrofit2/DefaultMethodsAndroidTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"name\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 75,
      "startColumnNumber" : 67,
      "endLineNumber" : 75,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 75,
        "startColumnNumber" : 15,
        "endLineNumber" : 75,
        "endColumnNumber" : 74
      },
      "nodeContext" : "server.takeRequest().getRequestUrl().queryParameter(\"name\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 75,
        "endColumnNumber" : 75
      },
      "nodeContext" : "assertThat(server.takeRequest().getRequestUrl().queryParameter(\"name\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 75,
        "endColumnNumber" : 92
      },
      "nodeContext" : "assertThat(server.takeRequest().getRequestUrl().queryParameter(\"name\")).isEqualTo(\"hey\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 75,
        "endColumnNumber" : 93
      },
      "nodeContext" : "assertThat(server.takeRequest().getRequestUrl().queryParameter(\"name\")).isEqualTo(\"hey\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 573,
        "startLineNumber" : 63,
        "startColumnNumber" : 76,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  server.enqueue(new MockResponse());\n  server.enqueue(new MockResponse());\n  Retrofit retrofit=new Retrofit.Builder().baseUrl(server.url(\"/\")).addConverterFactory(new ToStringConverterFactory()).build();\n  Example example=retrofit.create(Example.class);\n  example.user().execute();\n  assertThat(server.takeRequest().getRequestUrl().queryParameter(\"name\")).isEqualTo(\"hey\");\n  example.user(\"hi\").execute();\n  assertThat(server.takeRequest().getRequestUrl().queryParameter(\"name\")).isEqualTo(\"hi\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 690,
        "startLineNumber" : 61,
        "startColumnNumber" : 2,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test @SdkSuppress(minSdkVersion=26) public void doesNotFailOnApi26() throws IOException, InterruptedException {\n  server.enqueue(new MockResponse());\n  server.enqueue(new MockResponse());\n  Retrofit retrofit=new Retrofit.Builder().baseUrl(server.url(\"/\")).addConverterFactory(new ToStringConverterFactory()).build();\n  Example example=retrofit.create(Example.class);\n  example.user().execute();\n  assertThat(server.takeRequest().getRequestUrl().queryParameter(\"name\")).isEqualTo(\"hey\");\n  example.user(\"hi\").execute();\n  assertThat(server.takeRequest().getRequestUrl().queryParameter(\"name\")).isEqualTo(\"hi\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 75,
        "startColumnNumber" : 4,
        "endLineNumber" : 75,
        "endColumnNumber" : 93
      },
      "nodeContext" : "assertThat(server.takeRequest().getRequestUrl().queryParameter(\"name\")).isEqualTo(\"hey\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"name\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 78,
      "startColumnNumber" : 67,
      "endLineNumber" : 78,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 78,
        "startColumnNumber" : 15,
        "endLineNumber" : 78,
        "endColumnNumber" : 74
      },
      "nodeContext" : "server.takeRequest().getRequestUrl().queryParameter(\"name\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 75
      },
      "nodeContext" : "assertThat(server.takeRequest().getRequestUrl().queryParameter(\"name\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 91
      },
      "nodeContext" : "assertThat(server.takeRequest().getRequestUrl().queryParameter(\"name\")).isEqualTo(\"hi\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 92
      },
      "nodeContext" : "assertThat(server.takeRequest().getRequestUrl().queryParameter(\"name\")).isEqualTo(\"hi\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 573,
        "startLineNumber" : 63,
        "startColumnNumber" : 76,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  server.enqueue(new MockResponse());\n  server.enqueue(new MockResponse());\n  Retrofit retrofit=new Retrofit.Builder().baseUrl(server.url(\"/\")).addConverterFactory(new ToStringConverterFactory()).build();\n  Example example=retrofit.create(Example.class);\n  example.user().execute();\n  assertThat(server.takeRequest().getRequestUrl().queryParameter(\"name\")).isEqualTo(\"hey\");\n  example.user(\"hi\").execute();\n  assertThat(server.takeRequest().getRequestUrl().queryParameter(\"name\")).isEqualTo(\"hi\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 690,
        "startLineNumber" : 61,
        "startColumnNumber" : 2,
        "endLineNumber" : 79,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test @SdkSuppress(minSdkVersion=26) public void doesNotFailOnApi26() throws IOException, InterruptedException {\n  server.enqueue(new MockResponse());\n  server.enqueue(new MockResponse());\n  Retrofit retrofit=new Retrofit.Builder().baseUrl(server.url(\"/\")).addConverterFactory(new ToStringConverterFactory()).build();\n  Example example=retrofit.create(Example.class);\n  example.user().execute();\n  assertThat(server.takeRequest().getRequestUrl().queryParameter(\"name\")).isEqualTo(\"hey\");\n  example.user(\"hi\").execute();\n  assertThat(server.takeRequest().getRequestUrl().queryParameter(\"name\")).isEqualTo(\"hi\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 92
      },
      "nodeContext" : "assertThat(server.takeRequest().getRequestUrl().queryParameter(\"name\")).isEqualTo(\"hi\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 75,
    "startColumnNumber" : 67,
    "endLineNumber" : 75,
    "endColumnNumber" : 73
  }, {
    "charLength" : 6,
    "startLineNumber" : 78,
    "startColumnNumber" : 67,
    "endLineNumber" : 78,
    "endColumnNumber" : 73
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}