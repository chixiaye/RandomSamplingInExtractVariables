{
  "id" : 426,
  "expression" : "comparator.compare(getLowerEndpoint(),other.getLowerEndpoint())",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/thirdparty/google-guava/src/main/java/com/google/common/collect/GeneralRange.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "comparator.compare(getLowerEndpoint(),other.getLowerEndpoint())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 64,
      "startLineNumber" : 193,
      "startColumnNumber" : 16,
      "endLineNumber" : 193,
      "endColumnNumber" : 80
    },
    "astNodeNumber" : 8,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 193,
        "startColumnNumber" : 10,
        "endLineNumber" : 193,
        "endColumnNumber" : 80
      },
      "nodeContext" : "cmp=comparator.compare(getLowerEndpoint(),other.getLowerEndpoint())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 193,
        "startColumnNumber" : 6,
        "endLineNumber" : 193,
        "endColumnNumber" : 81
      },
      "nodeContext" : "int cmp=comparator.compare(getLowerEndpoint(),other.getLowerEndpoint());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 257,
        "startLineNumber" : 192,
        "startColumnNumber" : 38,
        "endLineNumber" : 198,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int cmp=comparator.compare(getLowerEndpoint(),other.getLowerEndpoint());\n  if (cmp < 0 || (cmp == 0 && other.getLowerBoundType() == OPEN)) {\n    lowEnd=other.getLowerEndpoint();\n    lowType=other.getLowerBoundType();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 284,
        "startLineNumber" : 192,
        "startColumnNumber" : 11,
        "endLineNumber" : 198,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (other.hasLowerBound()) {\n  int cmp=comparator.compare(getLowerEndpoint(),other.getLowerEndpoint());\n  if (cmp < 0 || (cmp == 0 && other.getLowerBoundType() == OPEN)) {\n    lowEnd=other.getLowerEndpoint();\n    lowType=other.getLowerBoundType();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 45,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 444,
        "startLineNumber" : 188,
        "startColumnNumber" : 4,
        "endLineNumber" : 198,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!hasLowerBound()) {\n  hasLowBound=other.hasLowerBound;\n  lowEnd=other.getLowerEndpoint();\n  lowType=other.getLowerBoundType();\n}\n else if (other.hasLowerBound()) {\n  int cmp=comparator.compare(getLowerEndpoint(),other.getLowerEndpoint());\n  if (cmp < 0 || (cmp == 0 && other.getLowerBoundType() == OPEN)) {\n    lowEnd=other.getLowerEndpoint();\n    lowType=other.getLowerBoundType();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 68,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1637,
        "startLineNumber" : 181,
        "startColumnNumber" : 51,
        "endLineNumber" : 226,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  checkNotNull(other);\n  checkArgument(comparator.equals(other.comparator));\n  boolean hasLowBound=this.hasLowerBound;\n  @Nullable T lowEnd=getLowerEndpoint();\n  BoundType lowType=getLowerBoundType();\n  if (!hasLowerBound()) {\n    hasLowBound=other.hasLowerBound;\n    lowEnd=other.getLowerEndpoint();\n    lowType=other.getLowerBoundType();\n  }\n else   if (other.hasLowerBound()) {\n    int cmp=comparator.compare(getLowerEndpoint(),other.getLowerEndpoint());\n    if (cmp < 0 || (cmp == 0 && other.getLowerBoundType() == OPEN)) {\n      lowEnd=other.getLowerEndpoint();\n      lowType=other.getLowerBoundType();\n    }\n  }\n  boolean hasUpBound=this.hasUpperBound;\n  @Nullable T upEnd=getUpperEndpoint();\n  BoundType upType=getUpperBoundType();\n  if (!hasUpperBound()) {\n    hasUpBound=other.hasUpperBound;\n    upEnd=other.getUpperEndpoint();\n    upType=other.getUpperBoundType();\n  }\n else   if (other.hasUpperBound()) {\n    int cmp=comparator.compare(getUpperEndpoint(),other.getUpperEndpoint());\n    if (cmp > 0 || (cmp == 0 && other.getUpperBoundType() == OPEN)) {\n      upEnd=other.getUpperEndpoint();\n      upType=other.getUpperBoundType();\n    }\n  }\n  if (hasLowBound && hasUpBound) {\n    int cmp=comparator.compare(lowEnd,upEnd);\n    if (cmp > 0 || (cmp == 0 && lowType == OPEN && upType == OPEN)) {\n      lowEnd=upEnd;\n      lowType=OPEN;\n      upType=CLOSED;\n    }\n  }\n  return new GeneralRange<T>(comparator,hasLowBound,lowEnd,lowType,hasUpBound,upEnd,upType);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 254,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1797,
        "startLineNumber" : 178,
        "startColumnNumber" : 2,
        "endLineNumber" : 226,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns the intersection of the two ranges, or an empty range if their intersection is empty.\n */\nGeneralRange<T> intersect(GeneralRange<T> other){\n  checkNotNull(other);\n  checkArgument(comparator.equals(other.comparator));\n  boolean hasLowBound=this.hasLowerBound;\n  @Nullable T lowEnd=getLowerEndpoint();\n  BoundType lowType=getLowerBoundType();\n  if (!hasLowerBound()) {\n    hasLowBound=other.hasLowerBound;\n    lowEnd=other.getLowerEndpoint();\n    lowType=other.getLowerBoundType();\n  }\n else   if (other.hasLowerBound()) {\n    int cmp=comparator.compare(getLowerEndpoint(),other.getLowerEndpoint());\n    if (cmp < 0 || (cmp == 0 && other.getLowerBoundType() == OPEN)) {\n      lowEnd=other.getLowerEndpoint();\n      lowType=other.getLowerBoundType();\n    }\n  }\n  boolean hasUpBound=this.hasUpperBound;\n  @Nullable T upEnd=getUpperEndpoint();\n  BoundType upType=getUpperBoundType();\n  if (!hasUpperBound()) {\n    hasUpBound=other.hasUpperBound;\n    upEnd=other.getUpperEndpoint();\n    upType=other.getUpperBoundType();\n  }\n else   if (other.hasUpperBound()) {\n    int cmp=comparator.compare(getUpperEndpoint(),other.getUpperEndpoint());\n    if (cmp > 0 || (cmp == 0 && other.getUpperBoundType() == OPEN)) {\n      upEnd=other.getUpperEndpoint();\n      upType=other.getUpperBoundType();\n    }\n  }\n  if (hasLowBound && hasUpBound) {\n    int cmp=comparator.compare(lowEnd,upEnd);\n    if (cmp > 0 || (cmp == 0 && lowType == OPEN && upType == OPEN)) {\n      lowEnd=upEnd;\n      lowType=OPEN;\n      upType=CLOSED;\n    }\n  }\n  return new GeneralRange<T>(comparator,hasLowBound,lowEnd,lowType,hasUpBound,upEnd,upType);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 269,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 193,
        "startColumnNumber" : 6,
        "endLineNumber" : 193,
        "endColumnNumber" : 81
      },
      "nodeContext" : "int cmp=comparator.compare(getLowerEndpoint(),other.getLowerEndpoint());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 64,
    "startLineNumber" : 193,
    "startColumnNumber" : 16,
    "endLineNumber" : 193,
    "endColumnNumber" : 80
  } ],
  "layoutRelationDataList" : [ ]
}