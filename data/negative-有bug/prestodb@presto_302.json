{
  "id" : 302,
  "expression" : "\"POLYGON ((0 0, 0 10, 10 10, 0 0))\"",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-main/src/test/java/com/facebook/presto/geospatial/TestBingTile.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"POLYGON ((0 0, 0 10, 10 10, 0 0))\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 35,
      "startLineNumber" : 199,
      "startColumnNumber" : 27,
      "endLineNumber" : 199,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 199,
        "startColumnNumber" : 8,
        "endLineNumber" : 199,
        "endColumnNumber" : 124
      },
      "nodeContext" : "assertTileCovering(\"POLYGON ((0 0, 0 10, 10 10, 0 0))\",6,ImmutableList.of(\"122220\",\"122222\",\"122221\",\"300000\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 199,
        "startColumnNumber" : 8,
        "endLineNumber" : 199,
        "endColumnNumber" : 125
      },
      "nodeContext" : "assertTileCovering(\"POLYGON ((0 0, 0 10, 10 10, 0 0))\",6,ImmutableList.of(\"122220\",\"122222\",\"122221\",\"300000\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4511,
        "startLineNumber" : 157,
        "startColumnNumber" : 4,
        "endLineNumber" : 210,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertTileCovering(\"POINT EMPTY\",0,ImmutableList.of());\n  assertTileCovering(\"POINT EMPTY\",10,ImmutableList.of());\n  assertTileCovering(\"POINT EMPTY\",20,ImmutableList.of());\n  assertSmallSquareCovering(2);\n  assertSmallSquareCovering(5);\n  assertSmallSquareCovering(11);\n  assertSmallSquareCovering(MAX_ZOOM_LEVEL);\n  assertTileCovering(\"POINT (0 0)\",0,ImmutableList.of(\"\"));\n  assertTileCovering(format(\"POINT (%s 0)\",MIN_LONGITUDE),0,ImmutableList.of(\"\"));\n  assertTileCovering(format(\"POINT (%s 0)\",MAX_LONGITUDE),0,ImmutableList.of(\"\"));\n  assertTileCovering(format(\"POINT (0 %s)\",MIN_LATITUDE),0,ImmutableList.of(\"\"));\n  assertTileCovering(format(\"POINT (0 %s)\",MAX_LATITUDE),0,ImmutableList.of(\"\"));\n  assertTileCovering(format(\"POINT (%s %s)\",MIN_LONGITUDE,MIN_LATITUDE),0,ImmutableList.of(\"\"));\n  assertTileCovering(format(\"POINT (%s %s)\",MIN_LONGITUDE,MAX_LATITUDE),0,ImmutableList.of(\"\"));\n  assertTileCovering(format(\"POINT (%s %s)\",MAX_LONGITUDE,MAX_LATITUDE),0,ImmutableList.of(\"\"));\n  assertTileCovering(format(\"POINT (%s %s)\",MAX_LONGITUDE,MIN_LATITUDE),0,ImmutableList.of(\"\"));\n  assertTileCovering(\"POINT (0 0)\",1,ImmutableList.of(\"3\"));\n  assertTileCovering(format(\"POINT (%s 0)\",MIN_LONGITUDE),1,ImmutableList.of(\"2\"));\n  assertTileCovering(format(\"POINT (%s 0)\",MAX_LONGITUDE),1,ImmutableList.of(\"3\"));\n  assertTileCovering(format(\"POINT (0 %s)\",MIN_LATITUDE),1,ImmutableList.of(\"3\"));\n  assertTileCovering(format(\"POINT (0 %s)\",MAX_LATITUDE),1,ImmutableList.of(\"1\"));\n  assertTileCovering(format(\"POINT (%s %s)\",MIN_LONGITUDE,MIN_LATITUDE),1,ImmutableList.of(\"2\"));\n  assertTileCovering(format(\"POINT (%s %s)\",MIN_LONGITUDE,MAX_LATITUDE),1,ImmutableList.of(\"0\"));\n  assertTileCovering(format(\"POINT (%s %s)\",MAX_LONGITUDE,MAX_LATITUDE),1,ImmutableList.of(\"1\"));\n  assertTileCovering(format(\"POINT (%s %s)\",MAX_LONGITUDE,MIN_LATITUDE),1,ImmutableList.of(\"3\"));\n  assertTileCovering(\"LINESTRING (-1 0, -2 0)\",1,ImmutableList.of(\"2\"));\n  assertTileCovering(\"LINESTRING (1 0, 2 0)\",1,ImmutableList.of(\"3\"));\n  assertTileCovering(\"LINESTRING (0 -1, 0 -2)\",1,ImmutableList.of(\"3\"));\n  assertTileCovering(\"LINESTRING (0 1, 0 2)\",1,ImmutableList.of(\"1\"));\n  assertTileCovering(format(\"LINESTRING (%s 1, %s 2)\",MIN_LONGITUDE,MIN_LONGITUDE),1,ImmutableList.of(\"0\"));\n  assertTileCovering(format(\"LINESTRING (%s -1, %s -2)\",MIN_LONGITUDE,MIN_LONGITUDE),1,ImmutableList.of(\"2\"));\n  assertTileCovering(format(\"LINESTRING (%s 1, %s 2)\",MAX_LONGITUDE,MAX_LONGITUDE),1,ImmutableList.of(\"1\"));\n  assertTileCovering(format(\"LINESTRING (%s -1, %s -2)\",MAX_LONGITUDE,MAX_LONGITUDE),1,ImmutableList.of(\"3\"));\n  assertTileCovering(\"POLYGON ((0 0, 0 10, 10 10, 10 0, 0 0))\",6,ImmutableList.of(\"12222\",\"300000\",\"300001\"));\n  assertTileCovering(\"POLYGON ((0 0, 0 10, 10 10, 0 0))\",6,ImmutableList.of(\"122220\",\"122222\",\"122221\",\"300000\"));\n  assertTileCovering(\"POLYGON ((10 10, -10 10, -20 -15, 10 10))\",3,ImmutableList.of(\"033\",\"211\",\"122\"));\n  assertTileCovering(\"POLYGON ((10 10, -10 10, -20 -15, 10 10))\",6,ImmutableList.of(\"211102\",\"211120\",\"033321\",\"033323\",\"211101\",\"211103\",\"211121\",\"03333\",\"211110\",\"211112\",\"211111\",\"122220\",\"122222\",\"122221\"));\n  assertTileCovering(\"GEOMETRYCOLLECTION (POINT (60 30.12))\",10,ImmutableList.of(\"1230301230\"));\n  assertTileCovering(\"GEOMETRYCOLLECTION (POINT (60 30.12))\",15,ImmutableList.of(\"123030123010121\"));\n  assertTileCovering(\"GEOMETRYCOLLECTION (POLYGON ((10 10, -10 10, -20 -15, 10 10)))\",3,ImmutableList.of(\"033\",\"211\",\"122\"));\n  assertTileCovering(\"GEOMETRYCOLLECTION (POINT (60 30.12), POLYGON ((10 10, -10 10, -20 -15, 10 10)))\",3,ImmutableList.of(\"033\",\"211\",\"122\",\"123\"));\n  assertTileCovering(\"GEOMETRYCOLLECTION (POINT (60 30.12), LINESTRING (61 31, 61.01 31.01), POLYGON EMPTY)\",15,ImmutableList.of(\"123030123010121\",\"123030112310200\",\"123030112310202\",\"123030112310201\"));\n  assertTileCovering(\"GEOMETRYCOLLECTION (POINT (0.1 0.1), POINT(0.1 -0.1), POINT(-0.1 -0.1), POINT(-0.1 0.1))\",3,ImmutableList.of(\"033\",\"122\",\"211\",\"300\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 468,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4571,
        "startLineNumber" : 155,
        "startColumnNumber" : 4,
        "endLineNumber" : 210,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testFindDissolvedTileCovering(){\n  assertTileCovering(\"POINT EMPTY\",0,ImmutableList.of());\n  assertTileCovering(\"POINT EMPTY\",10,ImmutableList.of());\n  assertTileCovering(\"POINT EMPTY\",20,ImmutableList.of());\n  assertSmallSquareCovering(2);\n  assertSmallSquareCovering(5);\n  assertSmallSquareCovering(11);\n  assertSmallSquareCovering(MAX_ZOOM_LEVEL);\n  assertTileCovering(\"POINT (0 0)\",0,ImmutableList.of(\"\"));\n  assertTileCovering(format(\"POINT (%s 0)\",MIN_LONGITUDE),0,ImmutableList.of(\"\"));\n  assertTileCovering(format(\"POINT (%s 0)\",MAX_LONGITUDE),0,ImmutableList.of(\"\"));\n  assertTileCovering(format(\"POINT (0 %s)\",MIN_LATITUDE),0,ImmutableList.of(\"\"));\n  assertTileCovering(format(\"POINT (0 %s)\",MAX_LATITUDE),0,ImmutableList.of(\"\"));\n  assertTileCovering(format(\"POINT (%s %s)\",MIN_LONGITUDE,MIN_LATITUDE),0,ImmutableList.of(\"\"));\n  assertTileCovering(format(\"POINT (%s %s)\",MIN_LONGITUDE,MAX_LATITUDE),0,ImmutableList.of(\"\"));\n  assertTileCovering(format(\"POINT (%s %s)\",MAX_LONGITUDE,MAX_LATITUDE),0,ImmutableList.of(\"\"));\n  assertTileCovering(format(\"POINT (%s %s)\",MAX_LONGITUDE,MIN_LATITUDE),0,ImmutableList.of(\"\"));\n  assertTileCovering(\"POINT (0 0)\",1,ImmutableList.of(\"3\"));\n  assertTileCovering(format(\"POINT (%s 0)\",MIN_LONGITUDE),1,ImmutableList.of(\"2\"));\n  assertTileCovering(format(\"POINT (%s 0)\",MAX_LONGITUDE),1,ImmutableList.of(\"3\"));\n  assertTileCovering(format(\"POINT (0 %s)\",MIN_LATITUDE),1,ImmutableList.of(\"3\"));\n  assertTileCovering(format(\"POINT (0 %s)\",MAX_LATITUDE),1,ImmutableList.of(\"1\"));\n  assertTileCovering(format(\"POINT (%s %s)\",MIN_LONGITUDE,MIN_LATITUDE),1,ImmutableList.of(\"2\"));\n  assertTileCovering(format(\"POINT (%s %s)\",MIN_LONGITUDE,MAX_LATITUDE),1,ImmutableList.of(\"0\"));\n  assertTileCovering(format(\"POINT (%s %s)\",MAX_LONGITUDE,MAX_LATITUDE),1,ImmutableList.of(\"1\"));\n  assertTileCovering(format(\"POINT (%s %s)\",MAX_LONGITUDE,MIN_LATITUDE),1,ImmutableList.of(\"3\"));\n  assertTileCovering(\"LINESTRING (-1 0, -2 0)\",1,ImmutableList.of(\"2\"));\n  assertTileCovering(\"LINESTRING (1 0, 2 0)\",1,ImmutableList.of(\"3\"));\n  assertTileCovering(\"LINESTRING (0 -1, 0 -2)\",1,ImmutableList.of(\"3\"));\n  assertTileCovering(\"LINESTRING (0 1, 0 2)\",1,ImmutableList.of(\"1\"));\n  assertTileCovering(format(\"LINESTRING (%s 1, %s 2)\",MIN_LONGITUDE,MIN_LONGITUDE),1,ImmutableList.of(\"0\"));\n  assertTileCovering(format(\"LINESTRING (%s -1, %s -2)\",MIN_LONGITUDE,MIN_LONGITUDE),1,ImmutableList.of(\"2\"));\n  assertTileCovering(format(\"LINESTRING (%s 1, %s 2)\",MAX_LONGITUDE,MAX_LONGITUDE),1,ImmutableList.of(\"1\"));\n  assertTileCovering(format(\"LINESTRING (%s -1, %s -2)\",MAX_LONGITUDE,MAX_LONGITUDE),1,ImmutableList.of(\"3\"));\n  assertTileCovering(\"POLYGON ((0 0, 0 10, 10 10, 10 0, 0 0))\",6,ImmutableList.of(\"12222\",\"300000\",\"300001\"));\n  assertTileCovering(\"POLYGON ((0 0, 0 10, 10 10, 0 0))\",6,ImmutableList.of(\"122220\",\"122222\",\"122221\",\"300000\"));\n  assertTileCovering(\"POLYGON ((10 10, -10 10, -20 -15, 10 10))\",3,ImmutableList.of(\"033\",\"211\",\"122\"));\n  assertTileCovering(\"POLYGON ((10 10, -10 10, -20 -15, 10 10))\",6,ImmutableList.of(\"211102\",\"211120\",\"033321\",\"033323\",\"211101\",\"211103\",\"211121\",\"03333\",\"211110\",\"211112\",\"211111\",\"122220\",\"122222\",\"122221\"));\n  assertTileCovering(\"GEOMETRYCOLLECTION (POINT (60 30.12))\",10,ImmutableList.of(\"1230301230\"));\n  assertTileCovering(\"GEOMETRYCOLLECTION (POINT (60 30.12))\",15,ImmutableList.of(\"123030123010121\"));\n  assertTileCovering(\"GEOMETRYCOLLECTION (POLYGON ((10 10, -10 10, -20 -15, 10 10)))\",3,ImmutableList.of(\"033\",\"211\",\"122\"));\n  assertTileCovering(\"GEOMETRYCOLLECTION (POINT (60 30.12), POLYGON ((10 10, -10 10, -20 -15, 10 10)))\",3,ImmutableList.of(\"033\",\"211\",\"122\",\"123\"));\n  assertTileCovering(\"GEOMETRYCOLLECTION (POINT (60 30.12), LINESTRING (61 31, 61.01 31.01), POLYGON EMPTY)\",15,ImmutableList.of(\"123030123010121\",\"123030112310200\",\"123030112310202\",\"123030112310201\"));\n  assertTileCovering(\"GEOMETRYCOLLECTION (POINT (0.1 0.1), POINT(0.1 -0.1), POINT(-0.1 -0.1), POINT(-0.1 0.1))\",3,ImmutableList.of(\"033\",\"122\",\"211\",\"300\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 474,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 199,
        "startColumnNumber" : 8,
        "endLineNumber" : 199,
        "endColumnNumber" : 125
      },
      "nodeContext" : "assertTileCovering(\"POLYGON ((0 0, 0 10, 10 10, 0 0))\",6,ImmutableList.of(\"122220\",\"122222\",\"122221\",\"300000\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 9,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 35,
    "startLineNumber" : 199,
    "startColumnNumber" : 27,
    "endLineNumber" : 199,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ ]
}