{
  "id" : 146,
  "expression" : "deflateEncoding",
  "projectName" : "facebook@stetho",
  "commitID" : "fee68519d93899dc5cfe6b992f56916a03b279f2",
  "filePath" : "/stetho/src/main/java/com/facebook/stetho/inspector/network/DecompressionHelper.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "deflateEncoding",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 40,
      "startColumnNumber" : 26,
      "endLineNumber" : 40,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 40,
        "startColumnNumber" : 10,
        "endLineNumber" : 40,
        "endColumnNumber" : 41
      },
      "nodeContext" : "gzipEncoding || deflateEncoding",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 613,
        "startLineNumber" : 40,
        "startColumnNumber" : 6,
        "endLineNumber" : 54,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (gzipEncoding || deflateEncoding) {\n  decompressedCounter=new CountingOutputStream(decompressedOutput);\n  if (gzipEncoding) {\n    output=GunzippingOutputStream.create(decompressedCounter);\n  }\n else   if (deflateEncoding) {\n    output=new InflaterOutputStream(decompressedCounter);\n  }\n}\n else {\n  CLog.writeToConsole(peerManager,Console.MessageLevel.WARNING,Console.MessageSource.NETWORK,\"Unsupported Content-Encoding in response for request #\" + requestId + \": \"+ contentEncoding);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 53,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 770,
        "startLineNumber" : 36,
        "startColumnNumber" : 33,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  boolean gzipEncoding=GZIP_ENCODING.equals(contentEncoding);\n  boolean deflateEncoding=DEFLATE_ENCODING.equals(contentEncoding);\n  if (gzipEncoding || deflateEncoding) {\n    decompressedCounter=new CountingOutputStream(decompressedOutput);\n    if (gzipEncoding) {\n      output=GunzippingOutputStream.create(decompressedCounter);\n    }\n else     if (deflateEncoding) {\n      output=new InflaterOutputStream(decompressedCounter);\n    }\n  }\n else {\n    CLog.writeToConsole(peerManager,Console.MessageLevel.WARNING,Console.MessageSource.NETWORK,\"Unsupported Content-Encoding in response for request #\" + requestId + \": \"+ contentEncoding);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 799,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (contentEncoding != null) {\n  boolean gzipEncoding=GZIP_ENCODING.equals(contentEncoding);\n  boolean deflateEncoding=DEFLATE_ENCODING.equals(contentEncoding);\n  if (gzipEncoding || deflateEncoding) {\n    decompressedCounter=new CountingOutputStream(decompressedOutput);\n    if (gzipEncoding) {\n      output=GunzippingOutputStream.create(decompressedCounter);\n    }\n else     if (deflateEncoding) {\n      output=new InflaterOutputStream(decompressedCounter);\n    }\n  }\n else {\n    CLog.writeToConsole(peerManager,Console.MessageLevel.WARNING,Console.MessageSource.NETWORK,\"Unsupported Content-Encoding in response for request #\" + requestId + \": \"+ contentEncoding);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 74,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1095,
        "startLineNumber" : 32,
        "startColumnNumber" : 58,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  OutputStream output=decompressedOutput;\n  CountingOutputStream decompressedCounter=null;\n  if (contentEncoding != null) {\n    boolean gzipEncoding=GZIP_ENCODING.equals(contentEncoding);\n    boolean deflateEncoding=DEFLATE_ENCODING.equals(contentEncoding);\n    if (gzipEncoding || deflateEncoding) {\n      decompressedCounter=new CountingOutputStream(decompressedOutput);\n      if (gzipEncoding) {\n        output=GunzippingOutputStream.create(decompressedCounter);\n      }\n else       if (deflateEncoding) {\n        output=new InflaterOutputStream(decompressedCounter);\n      }\n    }\n else {\n      CLog.writeToConsole(peerManager,Console.MessageLevel.WARNING,Console.MessageSource.NETWORK,\"Unsupported Content-Encoding in response for request #\" + requestId + \": \"+ contentEncoding);\n    }\n  }\n  return new ResponseHandlingInputStream(availableInputStream,requestId,output,decompressedCounter,peerManager,responseHandler);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1387,
        "startLineNumber" : 26,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static InputStream teeInputWithDecompression(NetworkPeerManager peerManager,String requestId,InputStream availableInputStream,OutputStream decompressedOutput,@Nullable String contentEncoding,ResponseHandler responseHandler) throws IOException {\n  OutputStream output=decompressedOutput;\n  CountingOutputStream decompressedCounter=null;\n  if (contentEncoding != null) {\n    boolean gzipEncoding=GZIP_ENCODING.equals(contentEncoding);\n    boolean deflateEncoding=DEFLATE_ENCODING.equals(contentEncoding);\n    if (gzipEncoding || deflateEncoding) {\n      decompressedCounter=new CountingOutputStream(decompressedOutput);\n      if (gzipEncoding) {\n        output=GunzippingOutputStream.create(decompressedCounter);\n      }\n else       if (deflateEncoding) {\n        output=new InflaterOutputStream(decompressedCounter);\n      }\n    }\n else {\n      CLog.writeToConsole(peerManager,Console.MessageLevel.WARNING,Console.MessageSource.NETWORK,\"Unsupported Content-Encoding in response for request #\" + requestId + \": \"+ contentEncoding);\n    }\n  }\n  return new ResponseHandlingInputStream(availableInputStream,requestId,output,decompressedCounter,peerManager,responseHandler);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 131,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 40,
        "startColumnNumber" : 10,
        "endLineNumber" : 40,
        "endColumnNumber" : 41
      },
      "nodeContext" : "gzipEncoding || deflateEncoding",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "boolean"
  }, {
    "nodeContext" : "deflateEncoding",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 44,
      "startColumnNumber" : 19,
      "endLineNumber" : 44,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 44,
        "startColumnNumber" : 15,
        "endLineNumber" : 46,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (deflateEncoding) {\n  output=new InflaterOutputStream(decompressedCounter);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 204,
        "startLineNumber" : 42,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (gzipEncoding) {\n  output=GunzippingOutputStream.create(decompressedCounter);\n}\n else if (deflateEncoding) {\n  output=new InflaterOutputStream(decompressedCounter);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 298,
        "startLineNumber" : 40,
        "startColumnNumber" : 43,
        "endLineNumber" : 47,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  decompressedCounter=new CountingOutputStream(decompressedOutput);\n  if (gzipEncoding) {\n    output=GunzippingOutputStream.create(decompressedCounter);\n  }\n else   if (deflateEncoding) {\n    output=new InflaterOutputStream(decompressedCounter);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 613,
        "startLineNumber" : 40,
        "startColumnNumber" : 6,
        "endLineNumber" : 54,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (gzipEncoding || deflateEncoding) {\n  decompressedCounter=new CountingOutputStream(decompressedOutput);\n  if (gzipEncoding) {\n    output=GunzippingOutputStream.create(decompressedCounter);\n  }\n else   if (deflateEncoding) {\n    output=new InflaterOutputStream(decompressedCounter);\n  }\n}\n else {\n  CLog.writeToConsole(peerManager,Console.MessageLevel.WARNING,Console.MessageSource.NETWORK,\"Unsupported Content-Encoding in response for request #\" + requestId + \": \"+ contentEncoding);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 53,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 770,
        "startLineNumber" : 36,
        "startColumnNumber" : 33,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  boolean gzipEncoding=GZIP_ENCODING.equals(contentEncoding);\n  boolean deflateEncoding=DEFLATE_ENCODING.equals(contentEncoding);\n  if (gzipEncoding || deflateEncoding) {\n    decompressedCounter=new CountingOutputStream(decompressedOutput);\n    if (gzipEncoding) {\n      output=GunzippingOutputStream.create(decompressedCounter);\n    }\n else     if (deflateEncoding) {\n      output=new InflaterOutputStream(decompressedCounter);\n    }\n  }\n else {\n    CLog.writeToConsole(peerManager,Console.MessageLevel.WARNING,Console.MessageSource.NETWORK,\"Unsupported Content-Encoding in response for request #\" + requestId + \": \"+ contentEncoding);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 799,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 55,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (contentEncoding != null) {\n  boolean gzipEncoding=GZIP_ENCODING.equals(contentEncoding);\n  boolean deflateEncoding=DEFLATE_ENCODING.equals(contentEncoding);\n  if (gzipEncoding || deflateEncoding) {\n    decompressedCounter=new CountingOutputStream(decompressedOutput);\n    if (gzipEncoding) {\n      output=GunzippingOutputStream.create(decompressedCounter);\n    }\n else     if (deflateEncoding) {\n      output=new InflaterOutputStream(decompressedCounter);\n    }\n  }\n else {\n    CLog.writeToConsole(peerManager,Console.MessageLevel.WARNING,Console.MessageSource.NETWORK,\"Unsupported Content-Encoding in response for request #\" + requestId + \": \"+ contentEncoding);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 74,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1095,
        "startLineNumber" : 32,
        "startColumnNumber" : 58,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  OutputStream output=decompressedOutput;\n  CountingOutputStream decompressedCounter=null;\n  if (contentEncoding != null) {\n    boolean gzipEncoding=GZIP_ENCODING.equals(contentEncoding);\n    boolean deflateEncoding=DEFLATE_ENCODING.equals(contentEncoding);\n    if (gzipEncoding || deflateEncoding) {\n      decompressedCounter=new CountingOutputStream(decompressedOutput);\n      if (gzipEncoding) {\n        output=GunzippingOutputStream.create(decompressedCounter);\n      }\n else       if (deflateEncoding) {\n        output=new InflaterOutputStream(decompressedCounter);\n      }\n    }\n else {\n      CLog.writeToConsole(peerManager,Console.MessageLevel.WARNING,Console.MessageSource.NETWORK,\"Unsupported Content-Encoding in response for request #\" + requestId + \": \"+ contentEncoding);\n    }\n  }\n  return new ResponseHandlingInputStream(availableInputStream,requestId,output,decompressedCounter,peerManager,responseHandler);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1387,
        "startLineNumber" : 26,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static InputStream teeInputWithDecompression(NetworkPeerManager peerManager,String requestId,InputStream availableInputStream,OutputStream decompressedOutput,@Nullable String contentEncoding,ResponseHandler responseHandler) throws IOException {\n  OutputStream output=decompressedOutput;\n  CountingOutputStream decompressedCounter=null;\n  if (contentEncoding != null) {\n    boolean gzipEncoding=GZIP_ENCODING.equals(contentEncoding);\n    boolean deflateEncoding=DEFLATE_ENCODING.equals(contentEncoding);\n    if (gzipEncoding || deflateEncoding) {\n      decompressedCounter=new CountingOutputStream(decompressedOutput);\n      if (gzipEncoding) {\n        output=GunzippingOutputStream.create(decompressedCounter);\n      }\n else       if (deflateEncoding) {\n        output=new InflaterOutputStream(decompressedCounter);\n      }\n    }\n else {\n      CLog.writeToConsole(peerManager,Console.MessageLevel.WARNING,Console.MessageSource.NETWORK,\"Unsupported Content-Encoding in response for request #\" + requestId + \": \"+ contentEncoding);\n    }\n  }\n  return new ResponseHandlingInputStream(availableInputStream,requestId,output,decompressedCounter,peerManager,responseHandler);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 131,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 44,
        "startColumnNumber" : 15,
        "endLineNumber" : 46,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (deflateEncoding) {\n  output=new InflaterOutputStream(decompressedCounter);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 40,
    "startColumnNumber" : 26,
    "endLineNumber" : 40,
    "endColumnNumber" : 41
  }, {
    "charLength" : 15,
    "startLineNumber" : 44,
    "startColumnNumber" : 19,
    "endLineNumber" : 44,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}