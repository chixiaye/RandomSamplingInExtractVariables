{
  "id" : 63,
  "expression" : "outFile == null",
  "projectName" : "termux@termux-app",
  "commitID" : "6334470f81bdf003b8567af9e3531cec4dce560d",
  "filePath" : "/app/src/main/java/com/termux/filepicker/TermuxFileReceiverActivity.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "outFile == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 126,
      "startColumnNumber" : 24,
      "endLineNumber" : 126,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 126,
        "startColumnNumber" : 20,
        "endLineNumber" : 126,
        "endColumnNumber" : 48
      },
      "nodeContext" : "if (outFile == null) return;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1250,
        "startLineNumber" : 124,
        "startColumnNumber" : 51,
        "endLineNumber" : 146,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  File outFile=saveStreamWithName(in,text);\n  if (outFile == null)   return;\n  final File editorProgramFile=new File(EDITOR_PROGRAM);\n  if (!editorProgramFile.isFile()) {\n    showErrorDialogAndQuit(\"The following file does not exist:\\n$HOME/bin/termux-file-editor\\n\\n\" + \"Create this file as a script or a symlink - it will be called with the received file as only argument.\");\n    return;\n  }\n  editorProgramFile.setExecutable(true);\n  final Uri scriptUri=new Uri.Builder().scheme(\"file\").path(EDITOR_PROGRAM).build();\n  Intent executeIntent=new Intent(TermuxService.ACTION_EXECUTE,scriptUri);\n  executeIntent.setClass(TermuxFileReceiverActivity.this,TermuxService.class);\n  executeIntent.putExtra(TermuxService.EXTRA_ARGUMENTS,new String[]{outFile.getAbsolutePath()});\n  startService(executeIntent);\n  finish();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1311,
        "startLineNumber" : 123,
        "startColumnNumber" : 16,
        "endLineNumber" : 146,
        "endColumnNumber" : 17
      },
      "nodeContext" : "@Override public void onTextSet(String text){\n  File outFile=saveStreamWithName(in,text);\n  if (outFile == null)   return;\n  final File editorProgramFile=new File(EDITOR_PROGRAM);\n  if (!editorProgramFile.isFile()) {\n    showErrorDialogAndQuit(\"The following file does not exist:\\n$HOME/bin/termux-file-editor\\n\\n\" + \"Create this file as a script or a symlink - it will be called with the received file as only argument.\");\n    return;\n  }\n  editorProgramFile.setExecutable(true);\n  final Uri scriptUri=new Uri.Builder().scheme(\"file\").path(EDITOR_PROGRAM).build();\n  Intent executeIntent=new Intent(TermuxService.ACTION_EXECUTE,scriptUri);\n  executeIntent.setClass(TermuxFileReceiverActivity.this,TermuxService.class);\n  executeIntent.putExtra(TermuxService.EXTRA_ARGUMENTS,new String[]{outFile.getAbsolutePath()});\n  startService(executeIntent);\n  finish();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 116,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 126,
        "startColumnNumber" : 20,
        "endLineNumber" : 126,
        "endColumnNumber" : 48
      },
      "nodeContext" : "if (outFile == null) return;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 126,
    "startColumnNumber" : 24,
    "endLineNumber" : 126,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ ]
}