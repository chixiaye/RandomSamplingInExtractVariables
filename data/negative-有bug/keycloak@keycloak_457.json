{
  "id" : 457,
  "expression" : "CibaConfig.CIBA_PING_MODE.equals(cibaMode)",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/services/src/main/java/org/keycloak/protocol/oidc/grants/ciba/endpoints/BackchannelAuthenticationEndpoint.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "CibaConfig.CIBA_PING_MODE.equals(cibaMode)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 42,
      "startLineNumber" : 136,
      "startColumnNumber" : 13,
      "endLineNumber" : 136,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 136,
        "startColumnNumber" : 12,
        "endLineNumber" : 136,
        "endColumnNumber" : 55
      },
      "nodeContext" : "!CibaConfig.CIBA_PING_MODE.equals(cibaMode)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 136,
        "startColumnNumber" : 8,
        "endLineNumber" : 138,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!CibaConfig.CIBA_PING_MODE.equals(cibaMode)) {\n  authReqId=null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1312,
        "startLineNumber" : 129,
        "startColumnNumber" : 120,
        "endLineNumber" : 153,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ClientModel client=request.getClient();\n  int expiresIn=cibaConfig.getExpiresIn();\n  int poolingInterval=cibaConfig.getPoolingInterval();\n  String cibaMode=cibaConfig.getBackchannelTokenDeliveryMode(client);\n  if (!CibaConfig.CIBA_PING_MODE.equals(cibaMode)) {\n    authReqId=null;\n  }\n  OAuth2DeviceCodeModel deviceCode=OAuth2DeviceCodeModel.create(realm,client,request.getId(),request.getScope(),null,expiresIn,poolingInterval,request.getClientNotificationToken(),authReqId,Collections.emptyMap(),null,null);\n  String authResultId=request.getAuthResultId();\n  OAuth2DeviceUserCodeModel userCode=new OAuth2DeviceUserCodeModel(realm,deviceCode.getDeviceCode(),authResultId);\n  int lifespanSeconds=expiresIn + poolingInterval + 10;\n  OAuth2DeviceTokenStoreProvider store=session.getProvider(OAuth2DeviceTokenStoreProvider.class);\n  store.put(deviceCode,userCode,lifespanSeconds);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1787,
        "startLineNumber" : 124,
        "startColumnNumber" : 4,
        "endLineNumber" : 153,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * TODO: Leverage the device code storage for tracking authentication requests. Not sure if we need a specific storage, but probably make the  {@link OAuth2DeviceTokenStoreProvider} more generic for ciba, device, or any other use casethat relies on cross-references for unsolicited user authentication requests from devices.\n */\nprivate void storeAuthenticationRequest(CIBAAuthenticationRequest request,CibaConfig cibaConfig,String authReqId){\n  ClientModel client=request.getClient();\n  int expiresIn=cibaConfig.getExpiresIn();\n  int poolingInterval=cibaConfig.getPoolingInterval();\n  String cibaMode=cibaConfig.getBackchannelTokenDeliveryMode(client);\n  if (!CibaConfig.CIBA_PING_MODE.equals(cibaMode)) {\n    authReqId=null;\n  }\n  OAuth2DeviceCodeModel deviceCode=OAuth2DeviceCodeModel.create(realm,client,request.getId(),request.getScope(),null,expiresIn,poolingInterval,request.getClientNotificationToken(),authReqId,Collections.emptyMap(),null,null);\n  String authResultId=request.getAuthResultId();\n  OAuth2DeviceUserCodeModel userCode=new OAuth2DeviceUserCodeModel(realm,deviceCode.getDeviceCode(),authResultId);\n  int lifespanSeconds=expiresIn + poolingInterval + 10;\n  OAuth2DeviceTokenStoreProvider store=session.getProvider(OAuth2DeviceTokenStoreProvider.class);\n  store.put(deviceCode,userCode,lifespanSeconds);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 137,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 136,
        "startColumnNumber" : 12,
        "endLineNumber" : 136,
        "endColumnNumber" : 55
      },
      "nodeContext" : "!CibaConfig.CIBA_PING_MODE.equals(cibaMode)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 6,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 42,
    "startLineNumber" : 136,
    "startColumnNumber" : 13,
    "endLineNumber" : 136,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ ]
}