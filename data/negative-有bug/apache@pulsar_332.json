{
  "id" : 332,
  "expression" : "new RuntimeException(e)",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-package-management/bookkeeper-storage/src/test/java/org/apache/pulsar/packages/management/storage/bookkeeper/bookkeeper/test/PortManager.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new RuntimeException(e)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 88,
      "startColumnNumber" : 18,
      "endLineNumber" : 88,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 88,
        "startColumnNumber" : 12,
        "endLineNumber" : 88,
        "endColumnNumber" : 42
      },
      "nodeContext" : "throw new RuntimeException(e);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 87,
        "startColumnNumber" : 32,
        "endLineNumber" : 89,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  throw new RuntimeException(e);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 87,
        "startColumnNumber" : 10,
        "endLineNumber" : 89,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (IOException e) {\n  throw new RuntimeException(e);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1168,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 89,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  @Cleanup FileChannel fileChannel=FileChannel.open(path,StandardOpenOption.CREATE,StandardOpenOption.WRITE,StandardOpenOption.READ);\n  @Cleanup FileLock lock=fileChannel.lock();\n  ByteBuffer buffer=ByteBuffer.allocate(32);\n  int len=fileChannel.read(buffer,0L);\n  buffer.flip();\n  int lastUsedPort=basePort;\n  if (len > 0) {\n    byte[] bytes=new byte[buffer.remaining()];\n    buffer.get(bytes);\n    String lastUsedPortStr=new String(bytes);\n    lastUsedPort=Integer.parseInt(lastUsedPortStr);\n  }\n  int freePort=probeFreePort(lastUsedPort + 1);\n  buffer.clear();\n  buffer.put(Integer.toString(freePort).getBytes());\n  buffer.flip();\n  fileChannel.write(buffer,0L);\n  fileChannel.truncate(buffer.position());\n  fileChannel.force(true);\n  return freePort;\n}\n catch (IOException e) {\n  throw new RuntimeException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 156,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1230,
        "startLineNumber" : 52,
        "startColumnNumber" : 50,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Path path=Paths.get(lockFilename);\n  try {\n    @Cleanup FileChannel fileChannel=FileChannel.open(path,StandardOpenOption.CREATE,StandardOpenOption.WRITE,StandardOpenOption.READ);\n    @Cleanup FileLock lock=fileChannel.lock();\n    ByteBuffer buffer=ByteBuffer.allocate(32);\n    int len=fileChannel.read(buffer,0L);\n    buffer.flip();\n    int lastUsedPort=basePort;\n    if (len > 0) {\n      byte[] bytes=new byte[buffer.remaining()];\n      buffer.get(bytes);\n      String lastUsedPortStr=new String(bytes);\n      lastUsedPort=Integer.parseInt(lastUsedPortStr);\n    }\n    int freePort=probeFreePort(lastUsedPort + 1);\n    buffer.clear();\n    buffer.put(Integer.toString(freePort).getBytes());\n    buffer.flip();\n    fileChannel.write(buffer,0L);\n    fileChannel.truncate(buffer.position());\n    fileChannel.force(true);\n    return freePort;\n  }\n catch (  IOException e) {\n    throw new RuntimeException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 166,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1440,
        "startLineNumber" : 47,
        "startColumnNumber" : 4,
        "endLineNumber" : 90,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Return a TCP port that is currently unused. Keeps track of assigned ports and avoid race condition between different processes\n */\npublic synchronized static int nextFreePort(){\n  Path path=Paths.get(lockFilename);\n  try {\n    @Cleanup FileChannel fileChannel=FileChannel.open(path,StandardOpenOption.CREATE,StandardOpenOption.WRITE,StandardOpenOption.READ);\n    @Cleanup FileLock lock=fileChannel.lock();\n    ByteBuffer buffer=ByteBuffer.allocate(32);\n    int len=fileChannel.read(buffer,0L);\n    buffer.flip();\n    int lastUsedPort=basePort;\n    if (len > 0) {\n      byte[] bytes=new byte[buffer.remaining()];\n      buffer.get(bytes);\n      String lastUsedPortStr=new String(bytes);\n      lastUsedPort=Integer.parseInt(lastUsedPortStr);\n    }\n    int freePort=probeFreePort(lastUsedPort + 1);\n    buffer.clear();\n    buffer.put(Integer.toString(freePort).getBytes());\n    buffer.flip();\n    fileChannel.write(buffer,0L);\n    fileChannel.truncate(buffer.position());\n    fileChannel.force(true);\n    return freePort;\n  }\n catch (  IOException e) {\n    throw new RuntimeException(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 173,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 88,
        "startColumnNumber" : 12,
        "endLineNumber" : 88,
        "endColumnNumber" : 42
      },
      "nodeContext" : "throw new RuntimeException(e);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.RuntimeException"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 88,
    "startColumnNumber" : 18,
    "endLineNumber" : 88,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}