{
  "id" : 323,
  "expression" : "new MetricNameTemplate(\"records-per-request-avg\",groupName,\"The average number of records in each request\",tags)",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/clients/src/main/java/org/apache/kafka/clients/consumer/internals/FetcherMetricsRegistry.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new MetricNameTemplate(\"records-per-request-avg\",groupName,\"The average number of records in each request\",tags)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 131,
      "startLineNumber" : 82,
      "startColumnNumber" : 36,
      "endLineNumber" : 83,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 83,
        "endColumnNumber" : 70
      },
      "nodeContext" : "this.recordsPerRequestAvg=new MetricNameTemplate(\"records-per-request-avg\",groupName,\"The average number of records in each request\",tags)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 160,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 83,
        "endColumnNumber" : 71
      },
      "nodeContext" : "this.recordsPerRequestAvg=new MetricNameTemplate(\"records-per-request-avg\",groupName,\"The average number of records in each request\",tags);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 5269,
        "startLineNumber" : 67,
        "startColumnNumber" : 76,
        "endLineNumber" : 146,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String groupName=metricGrpPrefix + \"-fetch-manager-metrics\";\n  this.fetchSizeAvg=new MetricNameTemplate(\"fetch-size-avg\",groupName,\"The average number of bytes fetched per request\",tags);\n  this.fetchSizeMax=new MetricNameTemplate(\"fetch-size-max\",groupName,\"The maximum number of bytes fetched per request\",tags);\n  this.bytesConsumedRate=new MetricNameTemplate(\"bytes-consumed-rate\",groupName,\"The average number of bytes consumed per second\",tags);\n  this.bytesConsumedTotal=new MetricNameTemplate(\"bytes-consumed-total\",groupName,\"The total number of bytes consumed\",tags);\n  this.recordsPerRequestAvg=new MetricNameTemplate(\"records-per-request-avg\",groupName,\"The average number of records in each request\",tags);\n  this.recordsConsumedRate=new MetricNameTemplate(\"records-consumed-rate\",groupName,\"The average number of records consumed per second\",tags);\n  this.recordsConsumedTotal=new MetricNameTemplate(\"records-consumed-total\",groupName,\"The total number of records consumed\",tags);\n  this.fetchLatencyAvg=new MetricNameTemplate(\"fetch-latency-avg\",groupName,\"The average time taken for a fetch request.\",tags);\n  this.fetchLatencyMax=new MetricNameTemplate(\"fetch-latency-max\",groupName,\"The max time taken for any fetch request.\",tags);\n  this.fetchRequestRate=new MetricNameTemplate(\"fetch-rate\",groupName,\"The number of fetch requests per second.\",tags);\n  this.fetchRequestTotal=new MetricNameTemplate(\"fetch-total\",groupName,\"The total number of fetch requests.\",tags);\n  this.recordsLagMax=new MetricNameTemplate(\"records-lag-max\",groupName,\"The maximum lag in terms of number of records for any partition in this window\",tags);\n  this.recordsLeadMin=new MetricNameTemplate(\"records-lead-min\",groupName,\"The minimum lead in terms of number of records for any partition in this window\",tags);\n  this.fetchThrottleTimeAvg=new MetricNameTemplate(\"fetch-throttle-time-avg\",groupName,\"The average throttle time in ms\",tags);\n  this.fetchThrottleTimeMax=new MetricNameTemplate(\"fetch-throttle-time-max\",groupName,\"The maximum throttle time in ms\",tags);\n  Set<String> topicTags=new LinkedHashSet<>(tags);\n  topicTags.add(\"topic\");\n  this.topicFetchSizeAvg=new MetricNameTemplate(\"fetch-size-avg\",groupName,\"The average number of bytes fetched per request for a topic\",topicTags);\n  this.topicFetchSizeMax=new MetricNameTemplate(\"fetch-size-max\",groupName,\"The maximum number of bytes fetched per request for a topic\",topicTags);\n  this.topicBytesConsumedRate=new MetricNameTemplate(\"bytes-consumed-rate\",groupName,\"The average number of bytes consumed per second for a topic\",topicTags);\n  this.topicBytesConsumedTotal=new MetricNameTemplate(\"bytes-consumed-total\",groupName,\"The total number of bytes consumed for a topic\",topicTags);\n  this.topicRecordsPerRequestAvg=new MetricNameTemplate(\"records-per-request-avg\",groupName,\"The average number of records in each request for a topic\",topicTags);\n  this.topicRecordsConsumedRate=new MetricNameTemplate(\"records-consumed-rate\",groupName,\"The average number of records consumed per second for a topic\",topicTags);\n  this.topicRecordsConsumedTotal=new MetricNameTemplate(\"records-consumed-total\",groupName,\"The total number of records consumed for a topic\",topicTags);\n  Set<String> partitionTags=new HashSet<>(topicTags);\n  partitionTags.add(\"partition\");\n  this.partitionRecordsLag=new MetricNameTemplate(\"records-lag\",groupName,\"The latest lag of the partition\",partitionTags);\n  this.partitionRecordsLagMax=new MetricNameTemplate(\"records-lag-max\",groupName,\"The max lag of the partition\",partitionTags);\n  this.partitionRecordsLagAvg=new MetricNameTemplate(\"records-lag-avg\",groupName,\"The average lag of the partition\",partitionTags);\n  this.partitionRecordsLead=new MetricNameTemplate(\"records-lead\",groupName,\"The latest lead of the partition\",partitionTags);\n  this.partitionRecordsLeadMin=new MetricNameTemplate(\"records-lead-min\",groupName,\"The min lead of the partition\",partitionTags);\n  this.partitionRecordsLeadAvg=new MetricNameTemplate(\"records-lead-avg\",groupName,\"The average lead of the partition\",partitionTags);\n  this.partitionPreferredReadReplica=new MetricNameTemplate(\"preferred-read-replica\",\"consumer-fetch-manager-metrics\",\"The current read replica for the partition, or -1 if reading from leader\",partitionTags);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 393,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5341,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 146,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public FetcherMetricsRegistry(Set<String> tags,String metricGrpPrefix){\n  String groupName=metricGrpPrefix + \"-fetch-manager-metrics\";\n  this.fetchSizeAvg=new MetricNameTemplate(\"fetch-size-avg\",groupName,\"The average number of bytes fetched per request\",tags);\n  this.fetchSizeMax=new MetricNameTemplate(\"fetch-size-max\",groupName,\"The maximum number of bytes fetched per request\",tags);\n  this.bytesConsumedRate=new MetricNameTemplate(\"bytes-consumed-rate\",groupName,\"The average number of bytes consumed per second\",tags);\n  this.bytesConsumedTotal=new MetricNameTemplate(\"bytes-consumed-total\",groupName,\"The total number of bytes consumed\",tags);\n  this.recordsPerRequestAvg=new MetricNameTemplate(\"records-per-request-avg\",groupName,\"The average number of records in each request\",tags);\n  this.recordsConsumedRate=new MetricNameTemplate(\"records-consumed-rate\",groupName,\"The average number of records consumed per second\",tags);\n  this.recordsConsumedTotal=new MetricNameTemplate(\"records-consumed-total\",groupName,\"The total number of records consumed\",tags);\n  this.fetchLatencyAvg=new MetricNameTemplate(\"fetch-latency-avg\",groupName,\"The average time taken for a fetch request.\",tags);\n  this.fetchLatencyMax=new MetricNameTemplate(\"fetch-latency-max\",groupName,\"The max time taken for any fetch request.\",tags);\n  this.fetchRequestRate=new MetricNameTemplate(\"fetch-rate\",groupName,\"The number of fetch requests per second.\",tags);\n  this.fetchRequestTotal=new MetricNameTemplate(\"fetch-total\",groupName,\"The total number of fetch requests.\",tags);\n  this.recordsLagMax=new MetricNameTemplate(\"records-lag-max\",groupName,\"The maximum lag in terms of number of records for any partition in this window\",tags);\n  this.recordsLeadMin=new MetricNameTemplate(\"records-lead-min\",groupName,\"The minimum lead in terms of number of records for any partition in this window\",tags);\n  this.fetchThrottleTimeAvg=new MetricNameTemplate(\"fetch-throttle-time-avg\",groupName,\"The average throttle time in ms\",tags);\n  this.fetchThrottleTimeMax=new MetricNameTemplate(\"fetch-throttle-time-max\",groupName,\"The maximum throttle time in ms\",tags);\n  Set<String> topicTags=new LinkedHashSet<>(tags);\n  topicTags.add(\"topic\");\n  this.topicFetchSizeAvg=new MetricNameTemplate(\"fetch-size-avg\",groupName,\"The average number of bytes fetched per request for a topic\",topicTags);\n  this.topicFetchSizeMax=new MetricNameTemplate(\"fetch-size-max\",groupName,\"The maximum number of bytes fetched per request for a topic\",topicTags);\n  this.topicBytesConsumedRate=new MetricNameTemplate(\"bytes-consumed-rate\",groupName,\"The average number of bytes consumed per second for a topic\",topicTags);\n  this.topicBytesConsumedTotal=new MetricNameTemplate(\"bytes-consumed-total\",groupName,\"The total number of bytes consumed for a topic\",topicTags);\n  this.topicRecordsPerRequestAvg=new MetricNameTemplate(\"records-per-request-avg\",groupName,\"The average number of records in each request for a topic\",topicTags);\n  this.topicRecordsConsumedRate=new MetricNameTemplate(\"records-consumed-rate\",groupName,\"The average number of records consumed per second for a topic\",topicTags);\n  this.topicRecordsConsumedTotal=new MetricNameTemplate(\"records-consumed-total\",groupName,\"The total number of records consumed for a topic\",topicTags);\n  Set<String> partitionTags=new HashSet<>(topicTags);\n  partitionTags.add(\"partition\");\n  this.partitionRecordsLag=new MetricNameTemplate(\"records-lag\",groupName,\"The latest lag of the partition\",partitionTags);\n  this.partitionRecordsLagMax=new MetricNameTemplate(\"records-lag-max\",groupName,\"The max lag of the partition\",partitionTags);\n  this.partitionRecordsLagAvg=new MetricNameTemplate(\"records-lag-avg\",groupName,\"The average lag of the partition\",partitionTags);\n  this.partitionRecordsLead=new MetricNameTemplate(\"records-lead\",groupName,\"The latest lead of the partition\",partitionTags);\n  this.partitionRecordsLeadMin=new MetricNameTemplate(\"records-lead-min\",groupName,\"The min lead of the partition\",partitionTags);\n  this.partitionRecordsLeadAvg=new MetricNameTemplate(\"records-lead-avg\",groupName,\"The average lead of the partition\",partitionTags);\n  this.partitionPreferredReadReplica=new MetricNameTemplate(\"preferred-read-replica\",\"consumer-fetch-manager-metrics\",\"The current read replica for the partition, or -1 if reading from leader\",partitionTags);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 407,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 160,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 83,
        "endColumnNumber" : 71
      },
      "nodeContext" : "this.recordsPerRequestAvg=new MetricNameTemplate(\"records-per-request-avg\",groupName,\"The average number of records in each request\",tags);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 12,
    "type" : "org.apache.kafka.common.MetricNameTemplate"
  } ],
  "positionList" : [ {
    "charLength" : 131,
    "startLineNumber" : 82,
    "startColumnNumber" : 36,
    "endLineNumber" : 83,
    "endColumnNumber" : 70
  } ],
  "layoutRelationDataList" : [ ]
}