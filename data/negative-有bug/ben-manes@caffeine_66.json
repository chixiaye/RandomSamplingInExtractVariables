{
  "id" : 66,
  "expression" : "itemcount > countforzeta",
  "projectName" : "ben-manes@caffeine",
  "commitID" : "30ca3d80d9dc7aa20adceacfc5fff1659bbadb8e",
  "filePath" : "/src/jmh/java/com/github/benmanes/caffeine/generator/ZipfianGenerator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "itemcount > countforzeta",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 246,
      "startColumnNumber" : 8,
      "endLineNumber" : 246,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1129,
        "startLineNumber" : 246,
        "startColumnNumber" : 4,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (itemcount > countforzeta) {\n  zetan=zeta(countforzeta,itemcount,theta,zetan);\n  eta=(1 - Math.pow(2.0 / items,1 - theta)) / (1 - zeta2theta / zetan);\n}\n else if ((itemcount < countforzeta) && (allowitemcountdecrease)) {\n  System.err.println(\"WARNING: Recomputing Zipfian distribtion. This is slow and should be avoided. (itemcount=\" + itemcount + \" countforzeta=\"+ countforzeta+ \")\");\n  zetan=zeta(itemcount,theta);\n  eta=(1 - Math.pow(2.0 / items,1 - theta)) / (1 - zeta2theta / zetan);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 86,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SynchronizedStatement,body]",
      "nodePosition" : {
        "charLength" : 1142,
        "startLineNumber" : 245,
        "startColumnNumber" : 3,
        "endLineNumber" : 268,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  if (itemcount > countforzeta) {\n    zetan=zeta(countforzeta,itemcount,theta,zetan);\n    eta=(1 - Math.pow(2.0 / items,1 - theta)) / (1 - zeta2theta / zetan);\n  }\n else   if ((itemcount < countforzeta) && (allowitemcountdecrease)) {\n    System.err.println(\"WARNING: Recomputing Zipfian distribtion. This is slow and should be avoided. (itemcount=\" + itemcount + \" countforzeta=\"+ countforzeta+ \")\");\n    zetan=zeta(itemcount,theta);\n    eta=(1 - Math.pow(2.0 / items,1 - theta)) / (1 - zeta2theta / zetan);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1165,
        "startLineNumber" : 244,
        "startColumnNumber" : 3,
        "endLineNumber" : 268,
        "endColumnNumber" : 4
      },
      "nodeContext" : "synchronized (this) {\n  if (itemcount > countforzeta) {\n    zetan=zeta(countforzeta,itemcount,theta,zetan);\n    eta=(1 - Math.pow(2.0 / items,1 - theta)) / (1 - zeta2theta / zetan);\n  }\n else   if ((itemcount < countforzeta) && (allowitemcountdecrease)) {\n    System.err.println(\"WARNING: Recomputing Zipfian distribtion. This is slow and should be avoided. (itemcount=\" + itemcount + \" countforzeta=\"+ countforzeta+ \")\");\n    zetan=zeta(itemcount,theta);\n    eta=(1 - Math.pow(2.0 / items,1 - theta)) / (1 - zeta2theta / zetan);\n  }\n}\n",
      "nodeType" : "SynchronizedStatement",
      "astNodeNumber" : 89,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1248,
        "startLineNumber" : 241,
        "startColumnNumber" : 2,
        "endLineNumber" : 269,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\nsynchronized (this) {\n    if (itemcount > countforzeta) {\n      zetan=zeta(countforzeta,itemcount,theta,zetan);\n      eta=(1 - Math.pow(2.0 / items,1 - theta)) / (1 - zeta2theta / zetan);\n    }\n else     if ((itemcount < countforzeta) && (allowitemcountdecrease)) {\n      System.err.println(\"WARNING: Recomputing Zipfian distribtion. This is slow and should be avoided. (itemcount=\" + itemcount + \" countforzeta=\"+ countforzeta+ \")\");\n      zetan=zeta(itemcount,theta);\n      eta=(1 - Math.pow(2.0 / items,1 - theta)) / (1 - zeta2theta / zetan);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1280,
        "startLineNumber" : 240,
        "startColumnNumber" : 2,
        "endLineNumber" : 269,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (itemcount != countforzeta) {\nsynchronized (this) {\n    if (itemcount > countforzeta) {\n      zetan=zeta(countforzeta,itemcount,theta,zetan);\n      eta=(1 - Math.pow(2.0 / items,1 - theta)) / (1 - zeta2theta / zetan);\n    }\n else     if ((itemcount < countforzeta) && (allowitemcountdecrease)) {\n      System.err.println(\"WARNING: Recomputing Zipfian distribtion. This is slow and should be avoided. (itemcount=\" + itemcount + \" countforzeta=\"+ countforzeta+ \")\");\n      zetan=zeta(itemcount,theta);\n      eta=(1 - Math.pow(2.0 / items,1 - theta)) / (1 - zeta2theta / zetan);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 94,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1668,
        "startLineNumber" : 237,
        "startColumnNumber" : 1,
        "endLineNumber" : 287,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (itemcount != countforzeta) {\nsynchronized (this) {\n      if (itemcount > countforzeta) {\n        zetan=zeta(countforzeta,itemcount,theta,zetan);\n        eta=(1 - Math.pow(2.0 / items,1 - theta)) / (1 - zeta2theta / zetan);\n      }\n else       if ((itemcount < countforzeta) && (allowitemcountdecrease)) {\n        System.err.println(\"WARNING: Recomputing Zipfian distribtion. This is slow and should be avoided. (itemcount=\" + itemcount + \" countforzeta=\"+ countforzeta+ \")\");\n        zetan=zeta(itemcount,theta);\n        eta=(1 - Math.pow(2.0 / items,1 - theta)) / (1 - zeta2theta / zetan);\n      }\n    }\n  }\n  double u=Utils.random().nextDouble();\n  double uz=u * zetan;\n  if (uz < 1.0) {\n    return 0;\n  }\n  if (uz < 1.0 + Math.pow(0.5,theta)) {\n    return 1;\n  }\n  long ret=base + (long)((itemcount) * Math.pow(eta * u - eta + 1,alpha));\n  setLastInt((int)ret);\n  return ret;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1870,
        "startLineNumber" : 230,
        "startColumnNumber" : 1,
        "endLineNumber" : 287,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Generate the next item as a long.\n * @param itemcount The number of items in the distribution.\n * @return The next item in the sequence.\n */\npublic long nextLong(long itemcount){\n  if (itemcount != countforzeta) {\nsynchronized (this) {\n      if (itemcount > countforzeta) {\n        zetan=zeta(countforzeta,itemcount,theta,zetan);\n        eta=(1 - Math.pow(2.0 / items,1 - theta)) / (1 - zeta2theta / zetan);\n      }\n else       if ((itemcount < countforzeta) && (allowitemcountdecrease)) {\n        System.err.println(\"WARNING: Recomputing Zipfian distribtion. This is slow and should be avoided. (itemcount=\" + itemcount + \" countforzeta=\"+ countforzeta+ \")\");\n        zetan=zeta(itemcount,theta);\n        eta=(1 - Math.pow(2.0 / items,1 - theta)) / (1 - zeta2theta / zetan);\n      }\n    }\n  }\n  double u=Utils.random().nextDouble();\n  double uz=u * zetan;\n  if (uz < 1.0) {\n    return 0;\n  }\n  if (uz < 1.0 + Math.pow(0.5,theta)) {\n    return 1;\n  }\n  long ret=base + (long)((itemcount) * Math.pow(eta * u - eta + 1,alpha));\n  setLastInt((int)ret);\n  return ret;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 170,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1129,
        "startLineNumber" : 246,
        "startColumnNumber" : 4,
        "endLineNumber" : 267,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (itemcount > countforzeta) {\n  zetan=zeta(countforzeta,itemcount,theta,zetan);\n  eta=(1 - Math.pow(2.0 / items,1 - theta)) / (1 - zeta2theta / zetan);\n}\n else if ((itemcount < countforzeta) && (allowitemcountdecrease)) {\n  System.err.println(\"WARNING: Recomputing Zipfian distribtion. This is slow and should be avoided. (itemcount=\" + itemcount + \" countforzeta=\"+ countforzeta+ \")\");\n  zetan=zeta(itemcount,theta);\n  eta=(1 - Math.pow(2.0 / items,1 - theta)) / (1 - zeta2theta / zetan);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 86,
      "astHeight" : 11
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 246,
    "startColumnNumber" : 8,
    "endLineNumber" : 246,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}