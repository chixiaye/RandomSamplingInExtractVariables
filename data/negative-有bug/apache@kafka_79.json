{
  "id" : 79,
  "expression" : "new NoOpTaskSpec(5,7)",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/trogdor/src/test/java/org/apache/kafka/trogdor/coordinator/CoordinatorTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new NoOpTaskSpec(5,7)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 171,
      "startColumnNumber" : 35,
      "endLineNumber" : 171,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 171,
        "startColumnNumber" : 25,
        "endLineNumber" : 171,
        "endColumnNumber" : 57
      },
      "nodeContext" : "fooSpec=new NoOpTaskSpec(5,7)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 171,
        "startColumnNumber" : 12,
        "endLineNumber" : 171,
        "endColumnNumber" : 58
      },
      "nodeContext" : "NoOpTaskSpec fooSpec=new NoOpTaskSpec(5,7);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2097,
        "startLineNumber" : 161,
        "startColumnNumber" : 25,
        "endLineNumber" : 206,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  CoordinatorClient coordinatorClient=cluster.coordinatorClient();\n  AgentClient agentClient1=cluster.agentClient(\"node01\");\n  AgentClient agentClient2=cluster.agentClient(\"node02\");\n  new ExpectedTasks().waitFor(coordinatorClient).waitFor(agentClient1).waitFor(agentClient2);\n  NoOpTaskSpec fooSpec=new NoOpTaskSpec(5,7);\n  coordinatorClient.createTask(new CreateTaskRequest(\"foo\",fooSpec));\n  new ExpectedTasks().addTask(new ExpectedTaskBuilder(\"foo\").taskState(new TaskPending(fooSpec)).build()).waitFor(coordinatorClient).waitFor(agentClient1).waitFor(agentClient2);\n  time.sleep(11);\n  ObjectNode status1=new ObjectNode(JsonNodeFactory.instance);\n  status1.set(\"node01\",new TextNode(\"active\"));\n  status1.set(\"node02\",new TextNode(\"active\"));\n  new ExpectedTasks().addTask(new ExpectedTaskBuilder(\"foo\").taskState(new TaskRunning(fooSpec,11,status1)).workerState(new WorkerRunning(\"foo\",fooSpec,11,new TextNode(\"active\"))).build()).waitFor(coordinatorClient).waitFor(agentClient1).waitFor(agentClient2);\n  time.sleep(7);\n  ObjectNode status2=new ObjectNode(JsonNodeFactory.instance);\n  status2.set(\"node01\",new TextNode(\"done\"));\n  status2.set(\"node02\",new TextNode(\"done\"));\n  new ExpectedTasks().addTask(new ExpectedTaskBuilder(\"foo\").taskState(new TaskDone(fooSpec,11,18,\"\",false,status2)).workerState(new WorkerDone(\"foo\",fooSpec,11,18,new TextNode(\"done\"),\"\")).build()).waitFor(coordinatorClient).waitFor(agentClient1).waitFor(agentClient2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 241,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2342,
        "startLineNumber" : 156,
        "startColumnNumber" : 8,
        "endLineNumber" : 206,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (MiniTrogdorCluster cluster=new MiniTrogdorCluster.Builder().addCoordinator(\"node01\").addAgent(\"node01\").addAgent(\"node02\").scheduler(scheduler).build()){\n  CoordinatorClient coordinatorClient=cluster.coordinatorClient();\n  AgentClient agentClient1=cluster.agentClient(\"node01\");\n  AgentClient agentClient2=cluster.agentClient(\"node02\");\n  new ExpectedTasks().waitFor(coordinatorClient).waitFor(agentClient1).waitFor(agentClient2);\n  NoOpTaskSpec fooSpec=new NoOpTaskSpec(5,7);\n  coordinatorClient.createTask(new CreateTaskRequest(\"foo\",fooSpec));\n  new ExpectedTasks().addTask(new ExpectedTaskBuilder(\"foo\").taskState(new TaskPending(fooSpec)).build()).waitFor(coordinatorClient).waitFor(agentClient1).waitFor(agentClient2);\n  time.sleep(11);\n  ObjectNode status1=new ObjectNode(JsonNodeFactory.instance);\n  status1.set(\"node01\",new TextNode(\"active\"));\n  status1.set(\"node02\",new TextNode(\"active\"));\n  new ExpectedTasks().addTask(new ExpectedTaskBuilder(\"foo\").taskState(new TaskRunning(fooSpec,11,status1)).workerState(new WorkerRunning(\"foo\",fooSpec,11,new TextNode(\"active\"))).build()).waitFor(coordinatorClient).waitFor(agentClient1).waitFor(agentClient2);\n  time.sleep(7);\n  ObjectNode status2=new ObjectNode(JsonNodeFactory.instance);\n  status2.set(\"node01\",new TextNode(\"done\"));\n  status2.set(\"node02\",new TextNode(\"done\"));\n  new ExpectedTasks().addTask(new ExpectedTaskBuilder(\"foo\").taskState(new TaskDone(fooSpec,11,18,\"\",false,status2)).workerState(new WorkerDone(\"foo\",fooSpec,11,18,new TextNode(\"done\"),\"\")).build()).waitFor(coordinatorClient).waitFor(agentClient1).waitFor(agentClient2);\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 266,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2460,
        "startLineNumber" : 153,
        "startColumnNumber" : 56,
        "endLineNumber" : 207,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MockTime time=new MockTime(0,0,0);\n  Scheduler scheduler=new MockScheduler(time);\n  try (MiniTrogdorCluster cluster=new MiniTrogdorCluster.Builder().addCoordinator(\"node01\").addAgent(\"node01\").addAgent(\"node02\").scheduler(scheduler).build()){\n    CoordinatorClient coordinatorClient=cluster.coordinatorClient();\n    AgentClient agentClient1=cluster.agentClient(\"node01\");\n    AgentClient agentClient2=cluster.agentClient(\"node02\");\n    new ExpectedTasks().waitFor(coordinatorClient).waitFor(agentClient1).waitFor(agentClient2);\n    NoOpTaskSpec fooSpec=new NoOpTaskSpec(5,7);\n    coordinatorClient.createTask(new CreateTaskRequest(\"foo\",fooSpec));\n    new ExpectedTasks().addTask(new ExpectedTaskBuilder(\"foo\").taskState(new TaskPending(fooSpec)).build()).waitFor(coordinatorClient).waitFor(agentClient1).waitFor(agentClient2);\n    time.sleep(11);\n    ObjectNode status1=new ObjectNode(JsonNodeFactory.instance);\n    status1.set(\"node01\",new TextNode(\"active\"));\n    status1.set(\"node02\",new TextNode(\"active\"));\n    new ExpectedTasks().addTask(new ExpectedTaskBuilder(\"foo\").taskState(new TaskRunning(fooSpec,11,status1)).workerState(new WorkerRunning(\"foo\",fooSpec,11,new TextNode(\"active\"))).build()).waitFor(coordinatorClient).waitFor(agentClient1).waitFor(agentClient2);\n    time.sleep(7);\n    ObjectNode status2=new ObjectNode(JsonNodeFactory.instance);\n    status2.set(\"node01\",new TextNode(\"done\"));\n    status2.set(\"node02\",new TextNode(\"done\"));\n    new ExpectedTasks().addTask(new ExpectedTaskBuilder(\"foo\").taskState(new TaskDone(fooSpec,11,18,\"\",false,status2)).workerState(new WorkerDone(\"foo\",fooSpec,11,18,new TextNode(\"done\"),\"\")).build()).waitFor(coordinatorClient).waitFor(agentClient1).waitFor(agentClient2);\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 287,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2522,
        "startLineNumber" : 152,
        "startColumnNumber" : 4,
        "endLineNumber" : 207,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testTaskDistribution() throws Exception {\n  MockTime time=new MockTime(0,0,0);\n  Scheduler scheduler=new MockScheduler(time);\n  try (MiniTrogdorCluster cluster=new MiniTrogdorCluster.Builder().addCoordinator(\"node01\").addAgent(\"node01\").addAgent(\"node02\").scheduler(scheduler).build()){\n    CoordinatorClient coordinatorClient=cluster.coordinatorClient();\n    AgentClient agentClient1=cluster.agentClient(\"node01\");\n    AgentClient agentClient2=cluster.agentClient(\"node02\");\n    new ExpectedTasks().waitFor(coordinatorClient).waitFor(agentClient1).waitFor(agentClient2);\n    NoOpTaskSpec fooSpec=new NoOpTaskSpec(5,7);\n    coordinatorClient.createTask(new CreateTaskRequest(\"foo\",fooSpec));\n    new ExpectedTasks().addTask(new ExpectedTaskBuilder(\"foo\").taskState(new TaskPending(fooSpec)).build()).waitFor(coordinatorClient).waitFor(agentClient1).waitFor(agentClient2);\n    time.sleep(11);\n    ObjectNode status1=new ObjectNode(JsonNodeFactory.instance);\n    status1.set(\"node01\",new TextNode(\"active\"));\n    status1.set(\"node02\",new TextNode(\"active\"));\n    new ExpectedTasks().addTask(new ExpectedTaskBuilder(\"foo\").taskState(new TaskRunning(fooSpec,11,status1)).workerState(new WorkerRunning(\"foo\",fooSpec,11,new TextNode(\"active\"))).build()).waitFor(coordinatorClient).waitFor(agentClient1).waitFor(agentClient2);\n    time.sleep(7);\n    ObjectNode status2=new ObjectNode(JsonNodeFactory.instance);\n    status2.set(\"node01\",new TextNode(\"done\"));\n    status2.set(\"node02\",new TextNode(\"done\"));\n    new ExpectedTasks().addTask(new ExpectedTaskBuilder(\"foo\").taskState(new TaskDone(fooSpec,11,18,\"\",false,status2)).workerState(new WorkerDone(\"foo\",fooSpec,11,18,new TextNode(\"done\"),\"\")).build()).waitFor(coordinatorClient).waitFor(agentClient1).waitFor(agentClient2);\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 295,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 171,
        "startColumnNumber" : 12,
        "endLineNumber" : 171,
        "endColumnNumber" : 58
      },
      "nodeContext" : "NoOpTaskSpec fooSpec=new NoOpTaskSpec(5,7);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "org.apache.kafka.trogdor.task.NoOpTaskSpec"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 171,
    "startColumnNumber" : 35,
    "endLineNumber" : 171,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ ]
}