{
  "id" : 346,
  "expression" : "\"Can get message from consumer\"",
  "projectName" : "apache@skywalking",
  "commitID" : "16b51d55baec4f779f312e07081d1397addbcfe9",
  "filePath" : "/test/plugin/scenarios/pulsar-scenario/src/main/java/test/apache/skywalking/apm/testcase/pulsar/controller/CaseController.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Can get message from consumer\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 89,
      "startColumnNumber" : 25,
      "endLineNumber" : 89,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 89,
        "startColumnNumber" : 12,
        "endLineNumber" : 89,
        "endColumnNumber" : 60
      },
      "nodeContext" : "LOGGER.error(\"Can get message from consumer\",e)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 89,
        "startColumnNumber" : 12,
        "endLineNumber" : 89,
        "endColumnNumber" : 61
      },
      "nodeContext" : "LOGGER.error(\"Can get message from consumer\",e);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 88,
        "startColumnNumber" : 41,
        "endLineNumber" : 92,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  LOGGER.error(\"Can get message from consumer\",e);\n  t.interrupt();\n  throw e;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 88,
        "startColumnNumber" : 10,
        "endLineNumber" : 92,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (InterruptedException e) {\n  LOGGER.error(\"Can get message from consumer\",e);\n  t.interrupt();\n  throw e;\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 214,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 92,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  latch.await(3,TimeUnit.SECONDS);\n}\n catch (InterruptedException e) {\n  LOGGER.error(\"Can get message from consumer\",e);\n  t.interrupt();\n  throw e;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 28,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1772,
        "startLineNumber" : 50,
        "startColumnNumber" : 82,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String topic=\"test\";\n  PulsarClient pulsarClient=PulsarClient.builder().serviceUrl(PULSAR_DOMAIN + serviceUrl).build();\n  Producer<byte[]> producer=pulsarClient.newProducer().topic(topic).create();\n  Consumer<byte[]> consumer=pulsarClient.newConsumer().topic(topic).subscriptionName(\"test\").subscribe();\n  producer.newMessage().key(\"testKey\").value(Integer.toString(1).getBytes()).property(\"TEST\",\"TEST\").send();\n  CountDownLatch latch=new CountDownLatch(1);\n  Thread t=new Thread(() -> {\n    try {\n      Message<byte[]> msg=consumer.receive(3,TimeUnit.SECONDS);\n      if (msg != null) {\n        String propertiesFormat=\"key = %s, value = %s\";\n        StringBuilder builder=new StringBuilder();\n        msg.getProperties().forEach((k,v) -> builder.append(String.format(propertiesFormat,k,v)).append(\", \"));\n        LOGGER.info(\"Received message with messageId = {}, key = {}, value = {}, properties = {}\",msg.getMessageId(),msg.getKey(),new String(msg.getValue()),builder.toString());\n      }\n      consumer.acknowledge(msg);\n    }\n catch (    PulsarClientException e) {\n      LOGGER.error(\"Receive message error\",e);\n    }\n finally {\n      latch.countDown();\n    }\n  }\n);\n  t.start();\n  try {\n    latch.await(3,TimeUnit.SECONDS);\n  }\n catch (  InterruptedException e) {\n    LOGGER.error(\"Can get message from consumer\",e);\n    t.interrupt();\n    throw e;\n  }\n  producer.close();\n  consumer.close();\n  return \"Success\";\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 243,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1904,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@RequestMapping(\"/pulsar-case\") @ResponseBody public String pulsarCase() throws PulsarClientException, InterruptedException {\n  String topic=\"test\";\n  PulsarClient pulsarClient=PulsarClient.builder().serviceUrl(PULSAR_DOMAIN + serviceUrl).build();\n  Producer<byte[]> producer=pulsarClient.newProducer().topic(topic).create();\n  Consumer<byte[]> consumer=pulsarClient.newConsumer().topic(topic).subscriptionName(\"test\").subscribe();\n  producer.newMessage().key(\"testKey\").value(Integer.toString(1).getBytes()).property(\"TEST\",\"TEST\").send();\n  CountDownLatch latch=new CountDownLatch(1);\n  Thread t=new Thread(() -> {\n    try {\n      Message<byte[]> msg=consumer.receive(3,TimeUnit.SECONDS);\n      if (msg != null) {\n        String propertiesFormat=\"key = %s, value = %s\";\n        StringBuilder builder=new StringBuilder();\n        msg.getProperties().forEach((k,v) -> builder.append(String.format(propertiesFormat,k,v)).append(\", \"));\n        LOGGER.info(\"Received message with messageId = {}, key = {}, value = {}, properties = {}\",msg.getMessageId(),msg.getKey(),new String(msg.getValue()),builder.toString());\n      }\n      consumer.acknowledge(msg);\n    }\n catch (    PulsarClientException e) {\n      LOGGER.error(\"Receive message error\",e);\n    }\n finally {\n      latch.countDown();\n    }\n  }\n);\n  t.start();\n  try {\n    latch.await(3,TimeUnit.SECONDS);\n  }\n catch (  InterruptedException e) {\n    LOGGER.error(\"Can get message from consumer\",e);\n    t.interrupt();\n    throw e;\n  }\n  producer.close();\n  consumer.close();\n  return \"Success\";\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 257,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 89,
        "startColumnNumber" : 12,
        "endLineNumber" : 89,
        "endColumnNumber" : 61
      },
      "nodeContext" : "LOGGER.error(\"Can get message from consumer\",e);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 89,
    "startColumnNumber" : 25,
    "endLineNumber" : 89,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}