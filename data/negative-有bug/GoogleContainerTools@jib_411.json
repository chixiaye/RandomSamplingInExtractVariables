{
  "id" : 411,
  "expression" : "environment",
  "projectName" : "GoogleContainerTools@jib",
  "commitID" : "a0742fd277b5490a0965dba4443f5864f1250199",
  "filePath" : "/jib-core/src/main/java/com/google/cloud/tools/jib/filesystem/UserCacheHome.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "environment",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 63,
      "startColumnNumber" : 26,
      "endLineNumber" : 63,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 63,
        "startColumnNumber" : 26,
        "endLineNumber" : 63,
        "endColumnNumber" : 59
      },
      "nodeContext" : "environment.get(\"XDG_CACHE_HOME\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 63,
        "startColumnNumber" : 11,
        "endLineNumber" : 63,
        "endColumnNumber" : 59
      },
      "nodeContext" : "xdgCacheHome=environment.get(\"XDG_CACHE_HOME\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 60
      },
      "nodeContext" : "String xdgCacheHome=environment.get(\"XDG_CACHE_HOME\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1609,
        "startLineNumber" : 61,
        "startColumnNumber" : 83,
        "endLineNumber" : 104,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String xdgCacheHome=environment.get(\"XDG_CACHE_HOME\");\n  if (xdgCacheHome != null && !xdgCacheHome.trim().isEmpty()) {\n    return Paths.get(xdgCacheHome);\n  }\n  String userHome=properties.getProperty(\"user.home\");\n  Path userHomeDirectory=Paths.get(userHome);\n  Path xdgPath=userHomeDirectory.resolve(\".cache\");\n  String rawOsName=properties.getProperty(\"os.name\");\n  String osName=rawOsName.toLowerCase(Locale.ENGLISH);\n  if (osName.contains(\"linux\")) {\n    return xdgPath;\n  }\n else   if (osName.contains(\"windows\")) {\n    String localAppDataEnv=environment.get(\"LOCALAPPDATA\");\n    if (localAppDataEnv == null || localAppDataEnv.trim().isEmpty()) {\n      logger.warning(\"LOCALAPPDATA environment is invalid or missing\");\n      return xdgPath;\n    }\n    Path localAppData=Paths.get(localAppDataEnv);\n    if (!Files.exists(localAppData)) {\n      logger.warning(localAppData + \" does not exist\");\n      return xdgPath;\n    }\n    return localAppData;\n  }\n else   if (osName.contains(\"mac\") || osName.contains(\"darwin\")) {\n    Path applicationSupport=userHomeDirectory.resolve(\"Library\").resolve(\"Application Support\");\n    if (!Files.exists(applicationSupport)) {\n      logger.warning(applicationSupport + \" does not exist\");\n      return xdgPath;\n    }\n    return applicationSupport;\n  }\n  throw new IllegalStateException(\"Unknown OS: \" + rawOsName);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 190,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2020,
        "startLineNumber" : 50,
        "startColumnNumber" : 2,
        "endLineNumber" : 104,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns  {@code $XDG_CACHE_HOME}, if available, or resolves the OS-specific user cache home based. <p>For Linus, this is  {@code $HOME/.cache/}. <p>For Windows, this is  {@code %LOCALAPPDATA%}. <p>For macOS, this is  {@code $HOME/Library/Application Support/}.\n */\n@VisibleForTesting static Path getCacheHome(Properties properties,Map<String,String> environment){\n  String xdgCacheHome=environment.get(\"XDG_CACHE_HOME\");\n  if (xdgCacheHome != null && !xdgCacheHome.trim().isEmpty()) {\n    return Paths.get(xdgCacheHome);\n  }\n  String userHome=properties.getProperty(\"user.home\");\n  Path userHomeDirectory=Paths.get(userHome);\n  Path xdgPath=userHomeDirectory.resolve(\".cache\");\n  String rawOsName=properties.getProperty(\"os.name\");\n  String osName=rawOsName.toLowerCase(Locale.ENGLISH);\n  if (osName.contains(\"linux\")) {\n    return xdgPath;\n  }\n else   if (osName.contains(\"windows\")) {\n    String localAppDataEnv=environment.get(\"LOCALAPPDATA\");\n    if (localAppDataEnv == null || localAppDataEnv.trim().isEmpty()) {\n      logger.warning(\"LOCALAPPDATA environment is invalid or missing\");\n      return xdgPath;\n    }\n    Path localAppData=Paths.get(localAppDataEnv);\n    if (!Files.exists(localAppData)) {\n      logger.warning(localAppData + \" does not exist\");\n      return xdgPath;\n    }\n    return localAppData;\n  }\n else   if (osName.contains(\"mac\") || osName.contains(\"darwin\")) {\n    Path applicationSupport=userHomeDirectory.resolve(\"Library\").resolve(\"Application Support\");\n    if (!Files.exists(applicationSupport)) {\n      logger.warning(applicationSupport + \" does not exist\");\n      return xdgPath;\n    }\n    return applicationSupport;\n  }\n  throw new IllegalStateException(\"Unknown OS: \" + rawOsName);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 211,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 60
      },
      "nodeContext" : "String xdgCacheHome=environment.get(\"XDG_CACHE_HOME\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.String>"
  }, {
    "nodeContext" : "environment",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 81,
      "startColumnNumber" : 31,
      "endLineNumber" : 81,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 81,
        "startColumnNumber" : 31,
        "endLineNumber" : 81,
        "endColumnNumber" : 62
      },
      "nodeContext" : "environment.get(\"LOCALAPPDATA\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 81,
        "startColumnNumber" : 13,
        "endLineNumber" : 81,
        "endColumnNumber" : 62
      },
      "nodeContext" : "localAppDataEnv=environment.get(\"LOCALAPPDATA\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 81,
        "startColumnNumber" : 6,
        "endLineNumber" : 81,
        "endColumnNumber" : 63
      },
      "nodeContext" : "String localAppDataEnv=environment.get(\"LOCALAPPDATA\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 504,
        "startLineNumber" : 79,
        "startColumnNumber" : 43,
        "endLineNumber" : 93,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String localAppDataEnv=environment.get(\"LOCALAPPDATA\");\n  if (localAppDataEnv == null || localAppDataEnv.trim().isEmpty()) {\n    logger.warning(\"LOCALAPPDATA environment is invalid or missing\");\n    return xdgPath;\n  }\n  Path localAppData=Paths.get(localAppDataEnv);\n  if (!Files.exists(localAppData)) {\n    logger.warning(localAppData + \" does not exist\");\n    return xdgPath;\n  }\n  return localAppData;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 940,
        "startLineNumber" : 79,
        "startColumnNumber" : 11,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (osName.contains(\"windows\")) {\n  String localAppDataEnv=environment.get(\"LOCALAPPDATA\");\n  if (localAppDataEnv == null || localAppDataEnv.trim().isEmpty()) {\n    logger.warning(\"LOCALAPPDATA environment is invalid or missing\");\n    return xdgPath;\n  }\n  Path localAppData=Paths.get(localAppDataEnv);\n  if (!Files.exists(localAppData)) {\n    logger.warning(localAppData + \" does not exist\");\n    return xdgPath;\n  }\n  return localAppData;\n}\n else if (osName.contains(\"mac\") || osName.contains(\"darwin\")) {\n  Path applicationSupport=userHomeDirectory.resolve(\"Library\").resolve(\"Application Support\");\n  if (!Files.exists(applicationSupport)) {\n    logger.warning(applicationSupport + \" does not exist\");\n    return xdgPath;\n  }\n  return applicationSupport;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 101,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1006,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (osName.contains(\"linux\")) {\n  return xdgPath;\n}\n else if (osName.contains(\"windows\")) {\n  String localAppDataEnv=environment.get(\"LOCALAPPDATA\");\n  if (localAppDataEnv == null || localAppDataEnv.trim().isEmpty()) {\n    logger.warning(\"LOCALAPPDATA environment is invalid or missing\");\n    return xdgPath;\n  }\n  Path localAppData=Paths.get(localAppDataEnv);\n  if (!Files.exists(localAppData)) {\n    logger.warning(localAppData + \" does not exist\");\n    return xdgPath;\n  }\n  return localAppData;\n}\n else if (osName.contains(\"mac\") || osName.contains(\"darwin\")) {\n  Path applicationSupport=userHomeDirectory.resolve(\"Library\").resolve(\"Application Support\");\n  if (!Files.exists(applicationSupport)) {\n    logger.warning(applicationSupport + \" does not exist\");\n    return xdgPath;\n  }\n  return applicationSupport;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 109,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1609,
        "startLineNumber" : 61,
        "startColumnNumber" : 83,
        "endLineNumber" : 104,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String xdgCacheHome=environment.get(\"XDG_CACHE_HOME\");\n  if (xdgCacheHome != null && !xdgCacheHome.trim().isEmpty()) {\n    return Paths.get(xdgCacheHome);\n  }\n  String userHome=properties.getProperty(\"user.home\");\n  Path userHomeDirectory=Paths.get(userHome);\n  Path xdgPath=userHomeDirectory.resolve(\".cache\");\n  String rawOsName=properties.getProperty(\"os.name\");\n  String osName=rawOsName.toLowerCase(Locale.ENGLISH);\n  if (osName.contains(\"linux\")) {\n    return xdgPath;\n  }\n else   if (osName.contains(\"windows\")) {\n    String localAppDataEnv=environment.get(\"LOCALAPPDATA\");\n    if (localAppDataEnv == null || localAppDataEnv.trim().isEmpty()) {\n      logger.warning(\"LOCALAPPDATA environment is invalid or missing\");\n      return xdgPath;\n    }\n    Path localAppData=Paths.get(localAppDataEnv);\n    if (!Files.exists(localAppData)) {\n      logger.warning(localAppData + \" does not exist\");\n      return xdgPath;\n    }\n    return localAppData;\n  }\n else   if (osName.contains(\"mac\") || osName.contains(\"darwin\")) {\n    Path applicationSupport=userHomeDirectory.resolve(\"Library\").resolve(\"Application Support\");\n    if (!Files.exists(applicationSupport)) {\n      logger.warning(applicationSupport + \" does not exist\");\n      return xdgPath;\n    }\n    return applicationSupport;\n  }\n  throw new IllegalStateException(\"Unknown OS: \" + rawOsName);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 190,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2020,
        "startLineNumber" : 50,
        "startColumnNumber" : 2,
        "endLineNumber" : 104,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns  {@code $XDG_CACHE_HOME}, if available, or resolves the OS-specific user cache home based. <p>For Linus, this is  {@code $HOME/.cache/}. <p>For Windows, this is  {@code %LOCALAPPDATA%}. <p>For macOS, this is  {@code $HOME/Library/Application Support/}.\n */\n@VisibleForTesting static Path getCacheHome(Properties properties,Map<String,String> environment){\n  String xdgCacheHome=environment.get(\"XDG_CACHE_HOME\");\n  if (xdgCacheHome != null && !xdgCacheHome.trim().isEmpty()) {\n    return Paths.get(xdgCacheHome);\n  }\n  String userHome=properties.getProperty(\"user.home\");\n  Path userHomeDirectory=Paths.get(userHome);\n  Path xdgPath=userHomeDirectory.resolve(\".cache\");\n  String rawOsName=properties.getProperty(\"os.name\");\n  String osName=rawOsName.toLowerCase(Locale.ENGLISH);\n  if (osName.contains(\"linux\")) {\n    return xdgPath;\n  }\n else   if (osName.contains(\"windows\")) {\n    String localAppDataEnv=environment.get(\"LOCALAPPDATA\");\n    if (localAppDataEnv == null || localAppDataEnv.trim().isEmpty()) {\n      logger.warning(\"LOCALAPPDATA environment is invalid or missing\");\n      return xdgPath;\n    }\n    Path localAppData=Paths.get(localAppDataEnv);\n    if (!Files.exists(localAppData)) {\n      logger.warning(localAppData + \" does not exist\");\n      return xdgPath;\n    }\n    return localAppData;\n  }\n else   if (osName.contains(\"mac\") || osName.contains(\"darwin\")) {\n    Path applicationSupport=userHomeDirectory.resolve(\"Library\").resolve(\"Application Support\");\n    if (!Files.exists(applicationSupport)) {\n      logger.warning(applicationSupport + \" does not exist\");\n      return xdgPath;\n    }\n    return applicationSupport;\n  }\n  throw new IllegalStateException(\"Unknown OS: \" + rawOsName);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 211,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 81,
        "startColumnNumber" : 6,
        "endLineNumber" : 81,
        "endColumnNumber" : 63
      },
      "nodeContext" : "String localAppDataEnv=environment.get(\"LOCALAPPDATA\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 63,
    "startColumnNumber" : 26,
    "endLineNumber" : 63,
    "endColumnNumber" : 37
  }, {
    "charLength" : 11,
    "startLineNumber" : 81,
    "startColumnNumber" : 31,
    "endLineNumber" : 81,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  } ]
}