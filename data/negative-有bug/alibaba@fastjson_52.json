{
  "id" : 52,
  "expression" : "serializer",
  "projectName" : "alibaba@fastjson",
  "commitID" : "d3797da65a3d9f804c9e275c25395c59e31f097d",
  "filePath" : "/src/test/java/com/alibaba/json/bvt/serializer/filters/NameFilterTest_byte.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "serializer",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 34,
      "startColumnNumber" : 8,
      "endLineNumber" : 34,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 34,
        "endColumnNumber" : 35
      },
      "nodeContext" : "serializer.getNameFilters()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 34,
        "endColumnNumber" : 47
      },
      "nodeContext" : "serializer.getNameFilters().add(filter)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 34,
        "endColumnNumber" : 48
      },
      "nodeContext" : "serializer.getNameFilters().add(filter);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 726,
        "startLineNumber" : 15,
        "startColumnNumber" : 51,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  NameFilter filter=new NameFilter(){\n    public String process(    Object source,    String name,    Object value){\n      if (value != null) {\n        Assert.assertTrue(value instanceof Byte);\n      }\n      if (name.equals(\"id\")) {\n        return \"ID\";\n      }\n      return name;\n    }\n  }\n;\n  SerializeWriter out=new SerializeWriter();\n  JSONSerializer serializer=new JSONSerializer(out);\n  serializer.getNameFilters().add(filter);\n  Bean a=new Bean();\n  serializer.write(a);\n  String text=out.toString();\n  Assert.assertEquals(\"{\\\"ID\\\":0}\",text);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 773,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void test_namefilter() throws Exception {\n  NameFilter filter=new NameFilter(){\n    public String process(    Object source,    String name,    Object value){\n      if (value != null) {\n        Assert.assertTrue(value instanceof Byte);\n      }\n      if (name.equals(\"id\")) {\n        return \"ID\";\n      }\n      return name;\n    }\n  }\n;\n  SerializeWriter out=new SerializeWriter();\n  JSONSerializer serializer=new JSONSerializer(out);\n  serializer.getNameFilters().add(filter);\n  Bean a=new Bean();\n  serializer.write(a);\n  String text=out.toString();\n  Assert.assertEquals(\"{\\\"ID\\\":0}\",text);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 34,
        "startColumnNumber" : 8,
        "endLineNumber" : 34,
        "endColumnNumber" : 48
      },
      "nodeContext" : "serializer.getNameFilters().add(filter);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.alibaba.fastjson.serializer.JSONSerializer"
  }, {
    "nodeContext" : "serializer",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 37,
      "startColumnNumber" : 8,
      "endLineNumber" : 37,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 37,
        "startColumnNumber" : 8,
        "endLineNumber" : 37,
        "endColumnNumber" : 27
      },
      "nodeContext" : "serializer.write(a)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 37,
        "startColumnNumber" : 8,
        "endLineNumber" : 37,
        "endColumnNumber" : 28
      },
      "nodeContext" : "serializer.write(a);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 726,
        "startLineNumber" : 15,
        "startColumnNumber" : 51,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  NameFilter filter=new NameFilter(){\n    public String process(    Object source,    String name,    Object value){\n      if (value != null) {\n        Assert.assertTrue(value instanceof Byte);\n      }\n      if (name.equals(\"id\")) {\n        return \"ID\";\n      }\n      return name;\n    }\n  }\n;\n  SerializeWriter out=new SerializeWriter();\n  JSONSerializer serializer=new JSONSerializer(out);\n  serializer.getNameFilters().add(filter);\n  Bean a=new Bean();\n  serializer.write(a);\n  String text=out.toString();\n  Assert.assertEquals(\"{\\\"ID\\\":0}\",text);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 773,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 41,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void test_namefilter() throws Exception {\n  NameFilter filter=new NameFilter(){\n    public String process(    Object source,    String name,    Object value){\n      if (value != null) {\n        Assert.assertTrue(value instanceof Byte);\n      }\n      if (name.equals(\"id\")) {\n        return \"ID\";\n      }\n      return name;\n    }\n  }\n;\n  SerializeWriter out=new SerializeWriter();\n  JSONSerializer serializer=new JSONSerializer(out);\n  serializer.getNameFilters().add(filter);\n  Bean a=new Bean();\n  serializer.write(a);\n  String text=out.toString();\n  Assert.assertEquals(\"{\\\"ID\\\":0}\",text);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 37,
        "startColumnNumber" : 8,
        "endLineNumber" : 37,
        "endColumnNumber" : 28
      },
      "nodeContext" : "serializer.write(a);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.alibaba.fastjson.serializer.JSONSerializer"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 34,
    "startColumnNumber" : 8,
    "endLineNumber" : 34,
    "endColumnNumber" : 18
  }, {
    "charLength" : 10,
    "startLineNumber" : 37,
    "startColumnNumber" : 8,
    "endLineNumber" : 37,
    "endColumnNumber" : 18
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}