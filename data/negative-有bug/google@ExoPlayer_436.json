{
  "id" : 436,
  "expression" : "values[index]",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/common/src/main/java/com/google/android/exoplayer2/util/LongArray.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "values[index]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 61,
      "startColumnNumber" : 11,
      "endLineNumber" : 61,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 25
      },
      "nodeContext" : "return values[index];\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 166,
        "startLineNumber" : 57,
        "startColumnNumber" : 29,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (index < 0 || index >= size) {\n    throw new IndexOutOfBoundsException(\"Invalid index \" + index + \", size is \"+ size);\n  }\n  return values[index];\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 447,
        "startLineNumber" : 49,
        "startColumnNumber" : 2,
        "endLineNumber" : 62,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns the value at a specified index.\n * @param index The index.\n * @return The corresponding value.\n * @throws IndexOutOfBoundsException If the index is less than zero, or greater than or equal to{@link #size()}.\n */\npublic long get(int index){\n  if (index < 0 || index >= size) {\n    throw new IndexOutOfBoundsException(\"Invalid index \" + index + \", size is \"+ size);\n  }\n  return values[index];\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 31,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 25
      },
      "nodeContext" : "return values[index];\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 61,
    "startColumnNumber" : 11,
    "endLineNumber" : 61,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ ]
}