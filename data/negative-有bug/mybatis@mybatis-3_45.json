{
  "id" : 45,
  "expression" : "(byte[])TYPE_HANDLER.getResult(cs,1)",
  "projectName" : "mybatis@mybatis-3",
  "commitID" : "a84ece4f08bb04fa6a5babd800113fe7338a9880",
  "filePath" : "/src/test/java/org/apache/ibatis/type/BlobTypeHandlerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(byte[])TYPE_HANDLER.getResult(cs,1)",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 38,
      "startLineNumber" : 62,
      "startColumnNumber" : 43,
      "endLineNumber" : 62,
      "endColumnNumber" : 81
    },
    "astNodeNumber" : 9,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 62,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 82
      },
      "nodeContext" : "assertArrayEquals(new byte[]{1,2,3},(byte[])TYPE_HANDLER.getResult(cs,1))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 62,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 83
      },
      "nodeContext" : "assertArrayEquals(new byte[]{1,2,3},(byte[])TYPE_HANDLER.getResult(cs,1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 524,
        "startLineNumber" : 49,
        "startColumnNumber" : 23,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  mockery.checking(new Expectations(){\n{\n      one(cs).getBlob(with(any(int.class)));\n      will(returnValue(blob));\n      one(cs).wasNull();\n      will(returnValue(false));\n      one(blob).length();\n      will(returnValue(3l));\n      one(blob).getBytes(with(any(long.class)),with(any(int.class)));\n      will(returnValue(new byte[]{1,2,3}));\n    }\n  }\n);\n  assertArrayEquals(new byte[]{1,2,3},(byte[])TYPE_HANDLER.getResult(cs,1));\n  mockery.assertIsSatisfied();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 108,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 608,
        "startLineNumber" : 47,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void shouldGetResultFromCallableStatement() throws Exception {\n  mockery.checking(new Expectations(){\n{\n      one(cs).getBlob(with(any(int.class)));\n      will(returnValue(blob));\n      one(cs).wasNull();\n      will(returnValue(false));\n      one(blob).length();\n      will(returnValue(3l));\n      one(blob).getBytes(with(any(long.class)),with(any(int.class)));\n      will(returnValue(new byte[]{1,2,3}));\n    }\n  }\n);\n  assertArrayEquals(new byte[]{1,2,3},(byte[])TYPE_HANDLER.getResult(cs,1));\n  mockery.assertIsSatisfied();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 116,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 62,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 83
      },
      "nodeContext" : "assertArrayEquals(new byte[]{1,2,3},(byte[])TYPE_HANDLER.getResult(cs,1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "byte[]"
  } ],
  "positionList" : [ {
    "charLength" : 38,
    "startLineNumber" : 62,
    "startColumnNumber" : 43,
    "endLineNumber" : 62,
    "endColumnNumber" : 81
  } ],
  "layoutRelationDataList" : [ ]
}