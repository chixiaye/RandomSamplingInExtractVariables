{
  "id" : 350,
  "expression" : "plainNode.getId()",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.ext.mysql/src/org/jkiss/dbeaver/ext/mysql/model/plan/MySQLPlanAnalyser.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "plainNode.getId()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 102,
      "startColumnNumber" : 59,
      "endLineNumber" : 102,
      "endColumnNumber" : 76
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 102,
        "startColumnNumber" : 41,
        "endLineNumber" : 102,
        "endColumnNumber" : 77
      },
      "nodeContext" : "new JsonPrimitive(plainNode.getId())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 102,
        "startColumnNumber" : 20,
        "endLineNumber" : 102,
        "endColumnNumber" : 78
      },
      "nodeContext" : "attributes.add(\"id\",new JsonPrimitive(plainNode.getId()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 102,
        "startColumnNumber" : 20,
        "endLineNumber" : 102,
        "endColumnNumber" : 79
      },
      "nodeContext" : "attributes.add(\"id\",new JsonPrimitive(plainNode.getId()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1084,
        "startLineNumber" : 100,
        "startColumnNumber" : 56,
        "endLineNumber" : 113,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  MySQLPlanNodePlain plainNode=(MySQLPlanNodePlain)node;\n  attributes.add(\"id\",new JsonPrimitive(plainNode.getId()));\n  attributes.add(\"select_type\",new JsonPrimitive(plainNode.getSelectType()));\n  attributes.add(\"table\",new JsonPrimitive(plainNode.getTable()));\n  attributes.add(\"type\",new JsonPrimitive(plainNode.getNodeType()));\n  attributes.add(\"possible_keys\",new JsonPrimitive(plainNode.getPossibleKeys()));\n  attributes.add(\"key\",new JsonPrimitive(plainNode.getKey()));\n  attributes.add(\"key_len\",new JsonPrimitive(plainNode.getKeyLength()));\n  attributes.add(\"ref\",new JsonPrimitive(plainNode.getRef()));\n  attributes.add(\"rows\",new JsonPrimitive(plainNode.getRowCount()));\n  attributes.add(\"filtered\",new JsonPrimitive(plainNode.getFiltered()));\n  attributes.add(\"extra\",new JsonPrimitive(plainNode.getExtra()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 131,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1486,
        "startLineNumber" : 100,
        "startColumnNumber" : 16,
        "endLineNumber" : 118,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (node instanceof MySQLPlanNodePlain) {\n  MySQLPlanNodePlain plainNode=(MySQLPlanNodePlain)node;\n  attributes.add(\"id\",new JsonPrimitive(plainNode.getId()));\n  attributes.add(\"select_type\",new JsonPrimitive(plainNode.getSelectType()));\n  attributes.add(\"table\",new JsonPrimitive(plainNode.getTable()));\n  attributes.add(\"type\",new JsonPrimitive(plainNode.getNodeType()));\n  attributes.add(\"possible_keys\",new JsonPrimitive(plainNode.getPossibleKeys()));\n  attributes.add(\"key\",new JsonPrimitive(plainNode.getKey()));\n  attributes.add(\"key_len\",new JsonPrimitive(plainNode.getKeyLength()));\n  attributes.add(\"ref\",new JsonPrimitive(plainNode.getRef()));\n  attributes.add(\"rows\",new JsonPrimitive(plainNode.getRowCount()));\n  attributes.add(\"filtered\",new JsonPrimitive(plainNode.getFiltered()));\n  attributes.add(\"extra\",new JsonPrimitive(plainNode.getExtra()));\n}\n else if (node instanceof MySQLPlanNodeJSON) {\n  MySQLPlanNodeJSON jsNode=(MySQLPlanNodeJSON)node;\n  for (  Map.Entry<String,String> e : jsNode.getNodeProps().entrySet()) {\n    attributes.add(e.getKey(),new JsonPrimitive(CommonUtils.notEmpty(e.getValue())));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 185,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1641,
        "startLineNumber" : 97,
        "startColumnNumber" : 81,
        "endLineNumber" : 120,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  JsonObject attributes=new JsonObject();\n  if (node instanceof MySQLPlanNodePlain) {\n    MySQLPlanNodePlain plainNode=(MySQLPlanNodePlain)node;\n    attributes.add(\"id\",new JsonPrimitive(plainNode.getId()));\n    attributes.add(\"select_type\",new JsonPrimitive(plainNode.getSelectType()));\n    attributes.add(\"table\",new JsonPrimitive(plainNode.getTable()));\n    attributes.add(\"type\",new JsonPrimitive(plainNode.getNodeType()));\n    attributes.add(\"possible_keys\",new JsonPrimitive(plainNode.getPossibleKeys()));\n    attributes.add(\"key\",new JsonPrimitive(plainNode.getKey()));\n    attributes.add(\"key_len\",new JsonPrimitive(plainNode.getKeyLength()));\n    attributes.add(\"ref\",new JsonPrimitive(plainNode.getRef()));\n    attributes.add(\"rows\",new JsonPrimitive(plainNode.getRowCount()));\n    attributes.add(\"filtered\",new JsonPrimitive(plainNode.getFiltered()));\n    attributes.add(\"extra\",new JsonPrimitive(plainNode.getExtra()));\n  }\n else   if (node instanceof MySQLPlanNodeJSON) {\n    MySQLPlanNodeJSON jsNode=(MySQLPlanNodeJSON)node;\n    for (    Map.Entry<String,String> e : jsNode.getNodeProps().entrySet()) {\n      attributes.add(e.getKey(),new JsonPrimitive(CommonUtils.notEmpty(e.getValue())));\n    }\n  }\n  nodeJson.add(PROP_ATTRIBUTES,attributes);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 200,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1733,
        "startLineNumber" : 96,
        "startColumnNumber" : 12,
        "endLineNumber" : 120,
        "endColumnNumber" : 13
      },
      "nodeContext" : "@Override public void addNodeProperties(DBCPlanNode node,JsonObject nodeJson){\n  JsonObject attributes=new JsonObject();\n  if (node instanceof MySQLPlanNodePlain) {\n    MySQLPlanNodePlain plainNode=(MySQLPlanNodePlain)node;\n    attributes.add(\"id\",new JsonPrimitive(plainNode.getId()));\n    attributes.add(\"select_type\",new JsonPrimitive(plainNode.getSelectType()));\n    attributes.add(\"table\",new JsonPrimitive(plainNode.getTable()));\n    attributes.add(\"type\",new JsonPrimitive(plainNode.getNodeType()));\n    attributes.add(\"possible_keys\",new JsonPrimitive(plainNode.getPossibleKeys()));\n    attributes.add(\"key\",new JsonPrimitive(plainNode.getKey()));\n    attributes.add(\"key_len\",new JsonPrimitive(plainNode.getKeyLength()));\n    attributes.add(\"ref\",new JsonPrimitive(plainNode.getRef()));\n    attributes.add(\"rows\",new JsonPrimitive(plainNode.getRowCount()));\n    attributes.add(\"filtered\",new JsonPrimitive(plainNode.getFiltered()));\n    attributes.add(\"extra\",new JsonPrimitive(plainNode.getExtra()));\n  }\n else   if (node instanceof MySQLPlanNodeJSON) {\n    MySQLPlanNodeJSON jsNode=(MySQLPlanNodeJSON)node;\n    for (    Map.Entry<String,String> e : jsNode.getNodeProps().entrySet()) {\n      attributes.add(e.getKey(),new JsonPrimitive(CommonUtils.notEmpty(e.getValue())));\n    }\n  }\n  nodeJson.add(PROP_ATTRIBUTES,attributes);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 214,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 102,
        "startColumnNumber" : 20,
        "endLineNumber" : 102,
        "endColumnNumber" : 79
      },
      "nodeContext" : "attributes.add(\"id\",new JsonPrimitive(plainNode.getId()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.Integer"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 102,
    "startColumnNumber" : 59,
    "endLineNumber" : 102,
    "endColumnNumber" : 76
  } ],
  "layoutRelationDataList" : [ ]
}