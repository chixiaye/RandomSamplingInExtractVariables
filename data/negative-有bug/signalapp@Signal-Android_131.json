{
  "id" : 131,
  "expression" : "\" without APN name\"",
  "projectName" : "signalapp@Signal-Android",
  "commitID" : "7e91132e7ed62a58b5f347de252ab1eda3f43b90",
  "filePath" : "/app/src/main/java/org/thoughtcrime/securesms/database/ApnDatabase.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\" without APN name\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 135,
      "startColumnNumber" : 60,
      "endLineNumber" : 135,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 135,
        "startColumnNumber" : 19,
        "endLineNumber" : 135,
        "endColumnNumber" : 79
      },
      "nodeContext" : "\"Querying table for MCC+MNC \" + mccmnc + \" without APN name\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 135,
        "startColumnNumber" : 8,
        "endLineNumber" : 135,
        "endColumnNumber" : 80
      },
      "nodeContext" : "Log.d(TAG,\"Querying table for MCC+MNC \" + mccmnc + \" without APN name\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 135,
        "startColumnNumber" : 8,
        "endLineNumber" : 135,
        "endColumnNumber" : 81
      },
      "nodeContext" : "Log.d(TAG,\"Querying table for MCC+MNC \" + mccmnc + \" without APN name\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 315,
        "startLineNumber" : 133,
        "startColumnNumber" : 51,
        "endLineNumber" : 140,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (cursor != null)   cursor.close();\n  Log.d(TAG,\"Querying table for MCC+MNC \" + mccmnc + \" without APN name\");\n  cursor=db.query(TABLE_NAME,null,BASE_SELECTION,new String[]{mccmnc},null,null,null);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 360,
        "startLineNumber" : 133,
        "startColumnNumber" : 6,
        "endLineNumber" : 140,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (cursor == null || !cursor.moveToFirst()) {\n  if (cursor != null)   cursor.close();\n  Log.d(TAG,\"Querying table for MCC+MNC \" + mccmnc + \" without APN name\");\n  cursor=db.query(TABLE_NAME,null,BASE_SELECTION,new String[]{mccmnc},null,null,null);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 46,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1401,
        "startLineNumber" : 124,
        "startColumnNumber" : 8,
        "endLineNumber" : 155,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (apn != null) {\n    Log.d(TAG,\"Querying table for MCC+MNC \" + mccmnc + \" and APN name \"+ apn);\n    cursor=db.query(TABLE_NAME,null,BASE_SELECTION + \" AND \" + APN_COLUMN+ \" = ?\",new String[]{mccmnc,apn},null,null,null);\n  }\n  if (cursor == null || !cursor.moveToFirst()) {\n    if (cursor != null)     cursor.close();\n    Log.d(TAG,\"Querying table for MCC+MNC \" + mccmnc + \" without APN name\");\n    cursor=db.query(TABLE_NAME,null,BASE_SELECTION,new String[]{mccmnc},null,null,null);\n  }\n  if (cursor != null && cursor.moveToFirst()) {\n    Apn params=new Apn(cursor.getString(cursor.getColumnIndexOrThrow(MMSC_COLUMN)),cursor.getString(cursor.getColumnIndexOrThrow(MMS_PROXY_COLUMN)),cursor.getString(cursor.getColumnIndexOrThrow(MMS_PORT_COLUMN)),cursor.getString(cursor.getColumnIndexOrThrow(USER_COLUMN)),cursor.getString(cursor.getColumnIndexOrThrow(PASSWORD_COLUMN)));\n    Log.d(TAG,\"Returning preferred APN \" + params);\n    return params;\n  }\n  Log.w(TAG,\"No matching APNs found, returning null\");\n  return Apn.EMPTY;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 158,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1463,
        "startLineNumber" : 124,
        "startColumnNumber" : 4,
        "endLineNumber" : 157,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  if (apn != null) {\n    Log.d(TAG,\"Querying table for MCC+MNC \" + mccmnc + \" and APN name \"+ apn);\n    cursor=db.query(TABLE_NAME,null,BASE_SELECTION + \" AND \" + APN_COLUMN+ \" = ?\",new String[]{mccmnc,apn},null,null,null);\n  }\n  if (cursor == null || !cursor.moveToFirst()) {\n    if (cursor != null)     cursor.close();\n    Log.d(TAG,\"Querying table for MCC+MNC \" + mccmnc + \" without APN name\");\n    cursor=db.query(TABLE_NAME,null,BASE_SELECTION,new String[]{mccmnc},null,null,null);\n  }\n  if (cursor != null && cursor.moveToFirst()) {\n    Apn params=new Apn(cursor.getString(cursor.getColumnIndexOrThrow(MMSC_COLUMN)),cursor.getString(cursor.getColumnIndexOrThrow(MMS_PROXY_COLUMN)),cursor.getString(cursor.getColumnIndexOrThrow(MMS_PORT_COLUMN)),cursor.getString(cursor.getColumnIndexOrThrow(USER_COLUMN)),cursor.getString(cursor.getColumnIndexOrThrow(PASSWORD_COLUMN)));\n    Log.d(TAG,\"Returning preferred APN \" + params);\n    return params;\n  }\n  Log.w(TAG,\"No matching APNs found, returning null\");\n  return Apn.EMPTY;\n}\n  finally {\n  if (cursor != null)   cursor.close();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 168,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1611,
        "startLineNumber" : 116,
        "startColumnNumber" : 64,
        "endLineNumber" : 159,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (mccmnc == null) {\n    Log.w(TAG,\"mccmnc was null, returning null\");\n    return Apn.EMPTY;\n  }\n  Cursor cursor=null;\n  try {\n    if (apn != null) {\n      Log.d(TAG,\"Querying table for MCC+MNC \" + mccmnc + \" and APN name \"+ apn);\n      cursor=db.query(TABLE_NAME,null,BASE_SELECTION + \" AND \" + APN_COLUMN+ \" = ?\",new String[]{mccmnc,apn},null,null,null);\n    }\n    if (cursor == null || !cursor.moveToFirst()) {\n      if (cursor != null)       cursor.close();\n      Log.d(TAG,\"Querying table for MCC+MNC \" + mccmnc + \" without APN name\");\n      cursor=db.query(TABLE_NAME,null,BASE_SELECTION,new String[]{mccmnc},null,null,null);\n    }\n    if (cursor != null && cursor.moveToFirst()) {\n      Apn params=new Apn(cursor.getString(cursor.getColumnIndexOrThrow(MMSC_COLUMN)),cursor.getString(cursor.getColumnIndexOrThrow(MMS_PROXY_COLUMN)),cursor.getString(cursor.getColumnIndexOrThrow(MMS_PORT_COLUMN)),cursor.getString(cursor.getColumnIndexOrThrow(USER_COLUMN)),cursor.getString(cursor.getColumnIndexOrThrow(PASSWORD_COLUMN)));\n      Log.d(TAG,\"Returning preferred APN \" + params);\n      return params;\n    }\n    Log.w(TAG,\"No matching APNs found, returning null\");\n    return Apn.EMPTY;\n  }\n  finally {\n    if (cursor != null)     cursor.close();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 190,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1673,
        "startLineNumber" : 116,
        "startColumnNumber" : 2,
        "endLineNumber" : 159,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public Apn getDefaultApnParameters(String mccmnc,String apn){\n  if (mccmnc == null) {\n    Log.w(TAG,\"mccmnc was null, returning null\");\n    return Apn.EMPTY;\n  }\n  Cursor cursor=null;\n  try {\n    if (apn != null) {\n      Log.d(TAG,\"Querying table for MCC+MNC \" + mccmnc + \" and APN name \"+ apn);\n      cursor=db.query(TABLE_NAME,null,BASE_SELECTION + \" AND \" + APN_COLUMN+ \" = ?\",new String[]{mccmnc,apn},null,null,null);\n    }\n    if (cursor == null || !cursor.moveToFirst()) {\n      if (cursor != null)       cursor.close();\n      Log.d(TAG,\"Querying table for MCC+MNC \" + mccmnc + \" without APN name\");\n      cursor=db.query(TABLE_NAME,null,BASE_SELECTION,new String[]{mccmnc},null,null,null);\n    }\n    if (cursor != null && cursor.moveToFirst()) {\n      Apn params=new Apn(cursor.getString(cursor.getColumnIndexOrThrow(MMSC_COLUMN)),cursor.getString(cursor.getColumnIndexOrThrow(MMS_PROXY_COLUMN)),cursor.getString(cursor.getColumnIndexOrThrow(MMS_PORT_COLUMN)),cursor.getString(cursor.getColumnIndexOrThrow(USER_COLUMN)),cursor.getString(cursor.getColumnIndexOrThrow(PASSWORD_COLUMN)));\n      Log.d(TAG,\"Returning preferred APN \" + params);\n      return params;\n    }\n    Log.w(TAG,\"No matching APNs found, returning null\");\n    return Apn.EMPTY;\n  }\n  finally {\n    if (cursor != null)     cursor.close();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 203,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 135,
        "startColumnNumber" : 8,
        "endLineNumber" : 135,
        "endColumnNumber" : 81
      },
      "nodeContext" : "Log.d(TAG,\"Querying table for MCC+MNC \" + mccmnc + \" without APN name\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 135,
    "startColumnNumber" : 60,
    "endLineNumber" : 135,
    "endColumnNumber" : 79
  } ],
  "layoutRelationDataList" : [ ]
}