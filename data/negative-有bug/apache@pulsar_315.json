{
  "id" : 315,
  "expression" : "log",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-common/src/main/java/org/apache/pulsar/common/nar/NarUnpacker.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "log",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 73,
      "startColumnNumber" : 16,
      "endLineNumber" : 73,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 73,
        "startColumnNumber" : 16,
        "endLineNumber" : 73,
        "endColumnNumber" : 65
      },
      "nodeContext" : "log.info(\"Created directory {}\",parentDirectory)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 73,
        "startColumnNumber" : 16,
        "endLineNumber" : 73,
        "endColumnNumber" : 66
      },
      "nodeContext" : "log.info(\"Created directory {}\",parentDirectory);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 72,
        "startColumnNumber" : 42,
        "endLineNumber" : 74,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  log.info(\"Created directory {}\",parentDirectory);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 239,
        "startLineNumber" : 72,
        "startColumnNumber" : 12,
        "endLineNumber" : 76,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (parentDirectory.mkdirs()) {\n  log.info(\"Created directory {}\",parentDirectory);\n}\n else if (!parentDirectory.exists()) {\n  throw new IOException(\"Cannot create \" + parentDirectory);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 263,
        "startLineNumber" : 71,
        "startColumnNumber" : 39,
        "endLineNumber" : 77,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (parentDirectory.mkdirs()) {\n    log.info(\"Created directory {}\",parentDirectory);\n  }\n else   if (!parentDirectory.exists()) {\n    throw new IOException(\"Cannot create \" + parentDirectory);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 294,
        "startLineNumber" : 71,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!parentDirectory.exists()) {\n  if (parentDirectory.mkdirs()) {\n    log.info(\"Created directory {}\",parentDirectory);\n  }\n else   if (!parentDirectory.exists()) {\n    throw new IOException(\"Cannot create \" + parentDirectory);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 30,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2030,
        "startLineNumber" : 69,
        "startColumnNumber" : 31,
        "endLineNumber" : 106,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  File parentDirectory=new File(baseWorkingDirectory,nar.getName() + \"-unpacked\");\n  if (!parentDirectory.exists()) {\n    if (parentDirectory.mkdirs()) {\n      log.info(\"Created directory {}\",parentDirectory);\n    }\n else     if (!parentDirectory.exists()) {\n      throw new IOException(\"Cannot create \" + parentDirectory);\n    }\n  }\n  String md5Sum=Base64.getUrlEncoder().withoutPadding().encodeToString(calculateMd5sum(nar));\n  File lockFile=new File(parentDirectory,\".\" + md5Sum + \".lock\");\n  Object localLock=CURRENT_JVM_FILE_LOCKS.computeIfAbsent(lockFile.getAbsolutePath(),key -> new Object());\nsynchronized (localLock) {\n    try (FileChannel channel=new RandomAccessFile(lockFile,\"rw\").getChannel();FileLock lock=channel.lock()){\n      File narWorkingDirectory=new File(parentDirectory,md5Sum);\n      if (narWorkingDirectory.mkdir()) {\n        try {\n          log.info(\"Extracting {} to {}\",nar,narWorkingDirectory);\n          if (extractCallback != null) {\n            extractCallback.run();\n          }\n          unpack(nar,narWorkingDirectory);\n        }\n catch (        IOException e) {\n          log.error(\"There was a problem extracting the nar file. Deleting {} to clean up state.\",narWorkingDirectory,e);\n          FileUtils.deleteFile(narWorkingDirectory,true);\n          throw e;\n        }\n      }\n      return narWorkingDirectory;\n    }\n   }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 176,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2183,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 106,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@VisibleForTesting static File doUnpackNar(final File nar,final File baseWorkingDirectory,Runnable extractCallback) throws IOException {\n  File parentDirectory=new File(baseWorkingDirectory,nar.getName() + \"-unpacked\");\n  if (!parentDirectory.exists()) {\n    if (parentDirectory.mkdirs()) {\n      log.info(\"Created directory {}\",parentDirectory);\n    }\n else     if (!parentDirectory.exists()) {\n      throw new IOException(\"Cannot create \" + parentDirectory);\n    }\n  }\n  String md5Sum=Base64.getUrlEncoder().withoutPadding().encodeToString(calculateMd5sum(nar));\n  File lockFile=new File(parentDirectory,\".\" + md5Sum + \".lock\");\n  Object localLock=CURRENT_JVM_FILE_LOCKS.computeIfAbsent(lockFile.getAbsolutePath(),key -> new Object());\nsynchronized (localLock) {\n    try (FileChannel channel=new RandomAccessFile(lockFile,\"rw\").getChannel();FileLock lock=channel.lock()){\n      File narWorkingDirectory=new File(parentDirectory,md5Sum);\n      if (narWorkingDirectory.mkdir()) {\n        try {\n          log.info(\"Extracting {} to {}\",nar,narWorkingDirectory);\n          if (extractCallback != null) {\n            extractCallback.run();\n          }\n          unpack(nar,narWorkingDirectory);\n        }\n catch (        IOException e) {\n          log.error(\"There was a problem extracting the nar file. Deleting {} to clean up state.\",narWorkingDirectory,e);\n          FileUtils.deleteFile(narWorkingDirectory,true);\n          throw e;\n        }\n      }\n      return narWorkingDirectory;\n    }\n   }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 199,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 73,
        "startColumnNumber" : 16,
        "endLineNumber" : 73,
        "endColumnNumber" : 66
      },
      "nodeContext" : "log.info(\"Created directory {}\",parentDirectory);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "log",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 91,
      "startColumnNumber" : 24,
      "endLineNumber" : 91,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 91,
        "startColumnNumber" : 24,
        "endLineNumber" : 91,
        "endColumnNumber" : 81
      },
      "nodeContext" : "log.info(\"Extracting {} to {}\",nar,narWorkingDirectory)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 91,
        "startColumnNumber" : 24,
        "endLineNumber" : 91,
        "endColumnNumber" : 82
      },
      "nodeContext" : "log.info(\"Extracting {} to {}\",nar,narWorkingDirectory);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 296,
        "startLineNumber" : 90,
        "startColumnNumber" : 24,
        "endLineNumber" : 96,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  log.info(\"Extracting {} to {}\",nar,narWorkingDirectory);\n  if (extractCallback != null) {\n    extractCallback.run();\n  }\n  unpack(nar,narWorkingDirectory);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 622,
        "startLineNumber" : 90,
        "startColumnNumber" : 20,
        "endLineNumber" : 101,
        "endColumnNumber" : 21
      },
      "nodeContext" : "try {\n  log.info(\"Extracting {} to {}\",nar,narWorkingDirectory);\n  if (extractCallback != null) {\n    extractCallback.run();\n  }\n  unpack(nar,narWorkingDirectory);\n}\n catch (IOException e) {\n  log.error(\"There was a problem extracting the nar file. Deleting {} to clean up state.\",narWorkingDirectory,e);\n  FileUtils.deleteFile(narWorkingDirectory,true);\n  throw e;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 44,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 662,
        "startLineNumber" : 89,
        "startColumnNumber" : 49,
        "endLineNumber" : 102,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  try {\n    log.info(\"Extracting {} to {}\",nar,narWorkingDirectory);\n    if (extractCallback != null) {\n      extractCallback.run();\n    }\n    unpack(nar,narWorkingDirectory);\n  }\n catch (  IOException e) {\n    log.error(\"There was a problem extracting the nar file. Deleting {} to clean up state.\",narWorkingDirectory,e);\n    FileUtils.deleteFile(narWorkingDirectory,true);\n    throw e;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 695,
        "startLineNumber" : 89,
        "startColumnNumber" : 16,
        "endLineNumber" : 102,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (narWorkingDirectory.mkdir()) {\n  try {\n    log.info(\"Extracting {} to {}\",nar,narWorkingDirectory);\n    if (extractCallback != null) {\n      extractCallback.run();\n    }\n    unpack(nar,narWorkingDirectory);\n  }\n catch (  IOException e) {\n    log.error(\"There was a problem extracting the nar file. Deleting {} to clean up state.\",narWorkingDirectory,e);\n    FileUtils.deleteFile(narWorkingDirectory,true);\n    throw e;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 49,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 849,
        "startLineNumber" : 87,
        "startColumnNumber" : 49,
        "endLineNumber" : 104,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  File narWorkingDirectory=new File(parentDirectory,md5Sum);\n  if (narWorkingDirectory.mkdir()) {\n    try {\n      log.info(\"Extracting {} to {}\",nar,narWorkingDirectory);\n      if (extractCallback != null) {\n        extractCallback.run();\n      }\n      unpack(nar,narWorkingDirectory);\n    }\n catch (    IOException e) {\n      log.error(\"There was a problem extracting the nar file. Deleting {} to clean up state.\",narWorkingDirectory,e);\n      FileUtils.deleteFile(narWorkingDirectory,true);\n      throw e;\n    }\n  }\n  return narWorkingDirectory;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 976,
        "startLineNumber" : 86,
        "startColumnNumber" : 12,
        "endLineNumber" : 104,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try (FileChannel channel=new RandomAccessFile(lockFile,\"rw\").getChannel();FileLock lock=channel.lock()){\n  File narWorkingDirectory=new File(parentDirectory,md5Sum);\n  if (narWorkingDirectory.mkdir()) {\n    try {\n      log.info(\"Extracting {} to {}\",nar,narWorkingDirectory);\n      if (extractCallback != null) {\n        extractCallback.run();\n      }\n      unpack(nar,narWorkingDirectory);\n    }\n catch (    IOException e) {\n      log.error(\"There was a problem extracting the nar file. Deleting {} to clean up state.\",narWorkingDirectory,e);\n      FileUtils.deleteFile(narWorkingDirectory,true);\n      throw e;\n    }\n  }\n  return narWorkingDirectory;\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 83,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SynchronizedStatement,body]",
      "nodePosition" : {
        "charLength" : 1133,
        "startLineNumber" : 83,
        "startColumnNumber" : 33,
        "endLineNumber" : 105,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try (FileChannel channel=new RandomAccessFile(lockFile,\"rw\").getChannel();FileLock lock=channel.lock()){\n    File narWorkingDirectory=new File(parentDirectory,md5Sum);\n    if (narWorkingDirectory.mkdir()) {\n      try {\n        log.info(\"Extracting {} to {}\",nar,narWorkingDirectory);\n        if (extractCallback != null) {\n          extractCallback.run();\n        }\n        unpack(nar,narWorkingDirectory);\n      }\n catch (      IOException e) {\n        log.error(\"There was a problem extracting the nar file. Deleting {} to clean up state.\",narWorkingDirectory,e);\n        FileUtils.deleteFile(narWorkingDirectory,true);\n        throw e;\n      }\n    }\n    return narWorkingDirectory;\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1158,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 105,
        "endColumnNumber" : 9
      },
      "nodeContext" : "synchronized (localLock) {\n  try (FileChannel channel=new RandomAccessFile(lockFile,\"rw\").getChannel();FileLock lock=channel.lock()){\n    File narWorkingDirectory=new File(parentDirectory,md5Sum);\n    if (narWorkingDirectory.mkdir()) {\n      try {\n        log.info(\"Extracting {} to {}\",nar,narWorkingDirectory);\n        if (extractCallback != null) {\n          extractCallback.run();\n        }\n        unpack(nar,narWorkingDirectory);\n      }\n catch (      IOException e) {\n        log.error(\"There was a problem extracting the nar file. Deleting {} to clean up state.\",narWorkingDirectory,e);\n        FileUtils.deleteFile(narWorkingDirectory,true);\n        throw e;\n      }\n    }\n    return narWorkingDirectory;\n  }\n }\n",
      "nodeType" : "SynchronizedStatement",
      "astNodeNumber" : 86,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2030,
        "startLineNumber" : 69,
        "startColumnNumber" : 31,
        "endLineNumber" : 106,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  File parentDirectory=new File(baseWorkingDirectory,nar.getName() + \"-unpacked\");\n  if (!parentDirectory.exists()) {\n    if (parentDirectory.mkdirs()) {\n      log.info(\"Created directory {}\",parentDirectory);\n    }\n else     if (!parentDirectory.exists()) {\n      throw new IOException(\"Cannot create \" + parentDirectory);\n    }\n  }\n  String md5Sum=Base64.getUrlEncoder().withoutPadding().encodeToString(calculateMd5sum(nar));\n  File lockFile=new File(parentDirectory,\".\" + md5Sum + \".lock\");\n  Object localLock=CURRENT_JVM_FILE_LOCKS.computeIfAbsent(lockFile.getAbsolutePath(),key -> new Object());\nsynchronized (localLock) {\n    try (FileChannel channel=new RandomAccessFile(lockFile,\"rw\").getChannel();FileLock lock=channel.lock()){\n      File narWorkingDirectory=new File(parentDirectory,md5Sum);\n      if (narWorkingDirectory.mkdir()) {\n        try {\n          log.info(\"Extracting {} to {}\",nar,narWorkingDirectory);\n          if (extractCallback != null) {\n            extractCallback.run();\n          }\n          unpack(nar,narWorkingDirectory);\n        }\n catch (        IOException e) {\n          log.error(\"There was a problem extracting the nar file. Deleting {} to clean up state.\",narWorkingDirectory,e);\n          FileUtils.deleteFile(narWorkingDirectory,true);\n          throw e;\n        }\n      }\n      return narWorkingDirectory;\n    }\n   }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 176,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2183,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 106,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@VisibleForTesting static File doUnpackNar(final File nar,final File baseWorkingDirectory,Runnable extractCallback) throws IOException {\n  File parentDirectory=new File(baseWorkingDirectory,nar.getName() + \"-unpacked\");\n  if (!parentDirectory.exists()) {\n    if (parentDirectory.mkdirs()) {\n      log.info(\"Created directory {}\",parentDirectory);\n    }\n else     if (!parentDirectory.exists()) {\n      throw new IOException(\"Cannot create \" + parentDirectory);\n    }\n  }\n  String md5Sum=Base64.getUrlEncoder().withoutPadding().encodeToString(calculateMd5sum(nar));\n  File lockFile=new File(parentDirectory,\".\" + md5Sum + \".lock\");\n  Object localLock=CURRENT_JVM_FILE_LOCKS.computeIfAbsent(lockFile.getAbsolutePath(),key -> new Object());\nsynchronized (localLock) {\n    try (FileChannel channel=new RandomAccessFile(lockFile,\"rw\").getChannel();FileLock lock=channel.lock()){\n      File narWorkingDirectory=new File(parentDirectory,md5Sum);\n      if (narWorkingDirectory.mkdir()) {\n        try {\n          log.info(\"Extracting {} to {}\",nar,narWorkingDirectory);\n          if (extractCallback != null) {\n            extractCallback.run();\n          }\n          unpack(nar,narWorkingDirectory);\n        }\n catch (        IOException e) {\n          log.error(\"There was a problem extracting the nar file. Deleting {} to clean up state.\",narWorkingDirectory,e);\n          FileUtils.deleteFile(narWorkingDirectory,true);\n          throw e;\n        }\n      }\n      return narWorkingDirectory;\n    }\n   }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 199,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 91,
        "startColumnNumber" : 24,
        "endLineNumber" : 91,
        "endColumnNumber" : 82
      },
      "nodeContext" : "log.info(\"Extracting {} to {}\",nar,narWorkingDirectory);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "log",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 97,
      "startColumnNumber" : 24,
      "endLineNumber" : 97,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 97,
        "startColumnNumber" : 24,
        "endLineNumber" : 98,
        "endColumnNumber" : 55
      },
      "nodeContext" : "log.error(\"There was a problem extracting the nar file. Deleting {} to clean up state.\",narWorkingDirectory,e)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 97,
        "startColumnNumber" : 24,
        "endLineNumber" : 98,
        "endColumnNumber" : 56
      },
      "nodeContext" : "log.error(\"There was a problem extracting the nar file. Deleting {} to clean up state.\",narWorkingDirectory,e);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 299,
        "startLineNumber" : 96,
        "startColumnNumber" : 44,
        "endLineNumber" : 101,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  log.error(\"There was a problem extracting the nar file. Deleting {} to clean up state.\",narWorkingDirectory,e);\n  FileUtils.deleteFile(narWorkingDirectory,true);\n  throw e;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 321,
        "startLineNumber" : 96,
        "startColumnNumber" : 22,
        "endLineNumber" : 101,
        "endColumnNumber" : 21
      },
      "nodeContext" : "catch (IOException e) {\n  log.error(\"There was a problem extracting the nar file. Deleting {} to clean up state.\",narWorkingDirectory,e);\n  FileUtils.deleteFile(narWorkingDirectory,true);\n  throw e;\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 21,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 622,
        "startLineNumber" : 90,
        "startColumnNumber" : 20,
        "endLineNumber" : 101,
        "endColumnNumber" : 21
      },
      "nodeContext" : "try {\n  log.info(\"Extracting {} to {}\",nar,narWorkingDirectory);\n  if (extractCallback != null) {\n    extractCallback.run();\n  }\n  unpack(nar,narWorkingDirectory);\n}\n catch (IOException e) {\n  log.error(\"There was a problem extracting the nar file. Deleting {} to clean up state.\",narWorkingDirectory,e);\n  FileUtils.deleteFile(narWorkingDirectory,true);\n  throw e;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 44,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 662,
        "startLineNumber" : 89,
        "startColumnNumber" : 49,
        "endLineNumber" : 102,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  try {\n    log.info(\"Extracting {} to {}\",nar,narWorkingDirectory);\n    if (extractCallback != null) {\n      extractCallback.run();\n    }\n    unpack(nar,narWorkingDirectory);\n  }\n catch (  IOException e) {\n    log.error(\"There was a problem extracting the nar file. Deleting {} to clean up state.\",narWorkingDirectory,e);\n    FileUtils.deleteFile(narWorkingDirectory,true);\n    throw e;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 695,
        "startLineNumber" : 89,
        "startColumnNumber" : 16,
        "endLineNumber" : 102,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (narWorkingDirectory.mkdir()) {\n  try {\n    log.info(\"Extracting {} to {}\",nar,narWorkingDirectory);\n    if (extractCallback != null) {\n      extractCallback.run();\n    }\n    unpack(nar,narWorkingDirectory);\n  }\n catch (  IOException e) {\n    log.error(\"There was a problem extracting the nar file. Deleting {} to clean up state.\",narWorkingDirectory,e);\n    FileUtils.deleteFile(narWorkingDirectory,true);\n    throw e;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 49,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 849,
        "startLineNumber" : 87,
        "startColumnNumber" : 49,
        "endLineNumber" : 104,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  File narWorkingDirectory=new File(parentDirectory,md5Sum);\n  if (narWorkingDirectory.mkdir()) {\n    try {\n      log.info(\"Extracting {} to {}\",nar,narWorkingDirectory);\n      if (extractCallback != null) {\n        extractCallback.run();\n      }\n      unpack(nar,narWorkingDirectory);\n    }\n catch (    IOException e) {\n      log.error(\"There was a problem extracting the nar file. Deleting {} to clean up state.\",narWorkingDirectory,e);\n      FileUtils.deleteFile(narWorkingDirectory,true);\n      throw e;\n    }\n  }\n  return narWorkingDirectory;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 976,
        "startLineNumber" : 86,
        "startColumnNumber" : 12,
        "endLineNumber" : 104,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try (FileChannel channel=new RandomAccessFile(lockFile,\"rw\").getChannel();FileLock lock=channel.lock()){\n  File narWorkingDirectory=new File(parentDirectory,md5Sum);\n  if (narWorkingDirectory.mkdir()) {\n    try {\n      log.info(\"Extracting {} to {}\",nar,narWorkingDirectory);\n      if (extractCallback != null) {\n        extractCallback.run();\n      }\n      unpack(nar,narWorkingDirectory);\n    }\n catch (    IOException e) {\n      log.error(\"There was a problem extracting the nar file. Deleting {} to clean up state.\",narWorkingDirectory,e);\n      FileUtils.deleteFile(narWorkingDirectory,true);\n      throw e;\n    }\n  }\n  return narWorkingDirectory;\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 83,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.SynchronizedStatement,body]",
      "nodePosition" : {
        "charLength" : 1133,
        "startLineNumber" : 83,
        "startColumnNumber" : 33,
        "endLineNumber" : 105,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try (FileChannel channel=new RandomAccessFile(lockFile,\"rw\").getChannel();FileLock lock=channel.lock()){\n    File narWorkingDirectory=new File(parentDirectory,md5Sum);\n    if (narWorkingDirectory.mkdir()) {\n      try {\n        log.info(\"Extracting {} to {}\",nar,narWorkingDirectory);\n        if (extractCallback != null) {\n          extractCallback.run();\n        }\n        unpack(nar,narWorkingDirectory);\n      }\n catch (      IOException e) {\n        log.error(\"There was a problem extracting the nar file. Deleting {} to clean up state.\",narWorkingDirectory,e);\n        FileUtils.deleteFile(narWorkingDirectory,true);\n        throw e;\n      }\n    }\n    return narWorkingDirectory;\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1158,
        "startLineNumber" : 83,
        "startColumnNumber" : 8,
        "endLineNumber" : 105,
        "endColumnNumber" : 9
      },
      "nodeContext" : "synchronized (localLock) {\n  try (FileChannel channel=new RandomAccessFile(lockFile,\"rw\").getChannel();FileLock lock=channel.lock()){\n    File narWorkingDirectory=new File(parentDirectory,md5Sum);\n    if (narWorkingDirectory.mkdir()) {\n      try {\n        log.info(\"Extracting {} to {}\",nar,narWorkingDirectory);\n        if (extractCallback != null) {\n          extractCallback.run();\n        }\n        unpack(nar,narWorkingDirectory);\n      }\n catch (      IOException e) {\n        log.error(\"There was a problem extracting the nar file. Deleting {} to clean up state.\",narWorkingDirectory,e);\n        FileUtils.deleteFile(narWorkingDirectory,true);\n        throw e;\n      }\n    }\n    return narWorkingDirectory;\n  }\n }\n",
      "nodeType" : "SynchronizedStatement",
      "astNodeNumber" : 86,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2030,
        "startLineNumber" : 69,
        "startColumnNumber" : 31,
        "endLineNumber" : 106,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  File parentDirectory=new File(baseWorkingDirectory,nar.getName() + \"-unpacked\");\n  if (!parentDirectory.exists()) {\n    if (parentDirectory.mkdirs()) {\n      log.info(\"Created directory {}\",parentDirectory);\n    }\n else     if (!parentDirectory.exists()) {\n      throw new IOException(\"Cannot create \" + parentDirectory);\n    }\n  }\n  String md5Sum=Base64.getUrlEncoder().withoutPadding().encodeToString(calculateMd5sum(nar));\n  File lockFile=new File(parentDirectory,\".\" + md5Sum + \".lock\");\n  Object localLock=CURRENT_JVM_FILE_LOCKS.computeIfAbsent(lockFile.getAbsolutePath(),key -> new Object());\nsynchronized (localLock) {\n    try (FileChannel channel=new RandomAccessFile(lockFile,\"rw\").getChannel();FileLock lock=channel.lock()){\n      File narWorkingDirectory=new File(parentDirectory,md5Sum);\n      if (narWorkingDirectory.mkdir()) {\n        try {\n          log.info(\"Extracting {} to {}\",nar,narWorkingDirectory);\n          if (extractCallback != null) {\n            extractCallback.run();\n          }\n          unpack(nar,narWorkingDirectory);\n        }\n catch (        IOException e) {\n          log.error(\"There was a problem extracting the nar file. Deleting {} to clean up state.\",narWorkingDirectory,e);\n          FileUtils.deleteFile(narWorkingDirectory,true);\n          throw e;\n        }\n      }\n      return narWorkingDirectory;\n    }\n   }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 176,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2183,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 106,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@VisibleForTesting static File doUnpackNar(final File nar,final File baseWorkingDirectory,Runnable extractCallback) throws IOException {\n  File parentDirectory=new File(baseWorkingDirectory,nar.getName() + \"-unpacked\");\n  if (!parentDirectory.exists()) {\n    if (parentDirectory.mkdirs()) {\n      log.info(\"Created directory {}\",parentDirectory);\n    }\n else     if (!parentDirectory.exists()) {\n      throw new IOException(\"Cannot create \" + parentDirectory);\n    }\n  }\n  String md5Sum=Base64.getUrlEncoder().withoutPadding().encodeToString(calculateMd5sum(nar));\n  File lockFile=new File(parentDirectory,\".\" + md5Sum + \".lock\");\n  Object localLock=CURRENT_JVM_FILE_LOCKS.computeIfAbsent(lockFile.getAbsolutePath(),key -> new Object());\nsynchronized (localLock) {\n    try (FileChannel channel=new RandomAccessFile(lockFile,\"rw\").getChannel();FileLock lock=channel.lock()){\n      File narWorkingDirectory=new File(parentDirectory,md5Sum);\n      if (narWorkingDirectory.mkdir()) {\n        try {\n          log.info(\"Extracting {} to {}\",nar,narWorkingDirectory);\n          if (extractCallback != null) {\n            extractCallback.run();\n          }\n          unpack(nar,narWorkingDirectory);\n        }\n catch (        IOException e) {\n          log.error(\"There was a problem extracting the nar file. Deleting {} to clean up state.\",narWorkingDirectory,e);\n          FileUtils.deleteFile(narWorkingDirectory,true);\n          throw e;\n        }\n      }\n      return narWorkingDirectory;\n    }\n   }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 199,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 97,
        "startColumnNumber" : 24,
        "endLineNumber" : 98,
        "endColumnNumber" : 55
      },
      "nodeContext" : "log.error(\"There was a problem extracting the nar file. Deleting {} to clean up state.\",narWorkingDirectory,e)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 73,
    "startColumnNumber" : 16,
    "endLineNumber" : 73,
    "endColumnNumber" : 19
  }, {
    "charLength" : 3,
    "startLineNumber" : 91,
    "startColumnNumber" : 24,
    "endLineNumber" : 91,
    "endColumnNumber" : 27
  }, {
    "charLength" : 3,
    "startLineNumber" : 97,
    "startColumnNumber" : 24,
    "endLineNumber" : 97,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 10
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 11
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  } ]
}