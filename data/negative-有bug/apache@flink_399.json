{
  "id" : 399,
  "expression" : "new KafkaRecordSerializationSchemaBuilder<>()",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-connectors/flink-connector-kafka/src/main/java/org/apache/flink/connector/kafka/sink/KafkaRecordSerializationSchema.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new KafkaRecordSerializationSchemaBuilder<>()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 45,
      "startLineNumber" : 97,
      "startColumnNumber" : 15,
      "endLineNumber" : 97,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 4,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 97,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 61
      },
      "nodeContext" : "return new KafkaRecordSerializationSchemaBuilder<>();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 5,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 96,
        "startColumnNumber" : 66,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return new KafkaRecordSerializationSchemaBuilder<>();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 399,
        "startLineNumber" : 89,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Creates a default schema builder to provide common building blocks i.e. key serialization, value serialization, partitioning.\n * @param < T > type of incoming elements\n * @return {@link KafkaRecordSerializationSchemaBuilder}\n */\nstatic <T>KafkaRecordSerializationSchemaBuilder<T> builder(){\n  return new KafkaRecordSerializationSchemaBuilder<>();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 17,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 97,
        "startColumnNumber" : 8,
        "endLineNumber" : 97,
        "endColumnNumber" : 61
      },
      "nodeContext" : "return new KafkaRecordSerializationSchemaBuilder<>();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 5,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.flink.connector.kafka.sink.KafkaRecordSerializationSchemaBuilder<T>"
  } ],
  "positionList" : [ {
    "charLength" : 45,
    "startLineNumber" : 97,
    "startColumnNumber" : 15,
    "endLineNumber" : 97,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ ]
}