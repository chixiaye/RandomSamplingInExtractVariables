{
  "id" : 361,
  "expression" : "timeoutFuture == null",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/android/guava/src/com/google/common/util/concurrent/TimeoutFuture.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "timeoutFuture == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 96,
      "startColumnNumber" : 10,
      "endLineNumber" : 96,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 96,
        "startColumnNumber" : 6,
        "endLineNumber" : 98,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (timeoutFuture == null) {\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2315,
        "startLineNumber" : 92,
        "startColumnNumber" : 22,
        "endLineNumber" : 141,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TimeoutFuture<V> timeoutFuture=timeoutFutureRef;\n  if (timeoutFuture == null) {\n    return;\n  }\n  ListenableFuture<V> delegate=timeoutFuture.delegateRef;\n  if (delegate == null) {\n    return;\n  }\n  timeoutFutureRef=null;\n  if (delegate.isDone()) {\n    timeoutFuture.setFuture(delegate);\n  }\n else {\n    try {\n      ScheduledFuture<?> timer=timeoutFuture.timer;\n      timeoutFuture.timer=null;\n      String message=\"Timed out\";\n      try {\n        if (timer != null) {\n          long overDelayMs=Math.abs(timer.getDelay(TimeUnit.MILLISECONDS));\n          if (overDelayMs > 10) {\n            message+=\" (timeout delayed by \" + overDelayMs + \" ms after scheduled time)\";\n          }\n        }\n        message+=\": \" + delegate;\n      }\n  finally {\n        timeoutFuture.setException(new TimeoutFutureException(message));\n      }\n    }\n  finally {\n      delegate.cancel(true);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 125,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2348,
        "startLineNumber" : 91,
        "startColumnNumber" : 4,
        "endLineNumber" : 141,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void run(){\n  TimeoutFuture<V> timeoutFuture=timeoutFutureRef;\n  if (timeoutFuture == null) {\n    return;\n  }\n  ListenableFuture<V> delegate=timeoutFuture.delegateRef;\n  if (delegate == null) {\n    return;\n  }\n  timeoutFutureRef=null;\n  if (delegate.isDone()) {\n    timeoutFuture.setFuture(delegate);\n  }\n else {\n    try {\n      ScheduledFuture<?> timer=timeoutFuture.timer;\n      timeoutFuture.timer=null;\n      String message=\"Timed out\";\n      try {\n        if (timer != null) {\n          long overDelayMs=Math.abs(timer.getDelay(TimeUnit.MILLISECONDS));\n          if (overDelayMs > 10) {\n            message+=\" (timeout delayed by \" + overDelayMs + \" ms after scheduled time)\";\n          }\n        }\n        message+=\": \" + delegate;\n      }\n  finally {\n        timeoutFuture.setException(new TimeoutFutureException(message));\n      }\n    }\n  finally {\n      delegate.cancel(true);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 131,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 96,
        "startColumnNumber" : 6,
        "endLineNumber" : 98,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (timeoutFuture == null) {\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 96,
    "startColumnNumber" : 10,
    "endLineNumber" : 96,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ ]
}