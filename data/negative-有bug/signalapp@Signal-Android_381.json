{
  "id" : 381,
  "expression" : "result",
  "projectName" : "signalapp@Signal-Android",
  "commitID" : "7e91132e7ed62a58b5f347de252ab1eda3f43b90",
  "filePath" : "/app/src/main/java/org/thoughtcrime/securesms/keyvalue/GroupsV2AuthorizationSignalStoreCache.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "result",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 55,
      "startColumnNumber" : 8,
      "endLineNumber" : 55,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 122
      },
      "nodeContext" : "result.put(credential.getDate(),new AuthCredentialResponse(credential.getAuthCredentialResponse().toByteArray()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 123
      },
      "nodeContext" : "result.put(credential.getDate(),new AuthCredentialResponse(credential.getAuthCredentialResponse().toByteArray()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 54,
        "startColumnNumber" : 104,
        "endLineNumber" : 56,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  result.put(credential.getDate(),new AuthCredentialResponse(credential.getAuthCredentialResponse().toByteArray()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 231,
        "startLineNumber" : 54,
        "startColumnNumber" : 6,
        "endLineNumber" : 56,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (TemporalAuthCredentialResponse credential : temporalCredentials.getCredentialResponseList()) {\n  result.put(credential.getDate(),new AuthCredentialResponse(credential.getAuthCredentialResponse().toByteArray()));\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 634,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TemporalAuthCredentialResponses temporalCredentials=TemporalAuthCredentialResponses.parseFrom(credentialBlob);\n  HashMap<Integer,AuthCredentialResponse> result=new HashMap<>(temporalCredentials.getCredentialResponseCount());\n  for (  TemporalAuthCredentialResponse credential : temporalCredentials.getCredentialResponseList()) {\n    result.put(credential.getDate(),new AuthCredentialResponse(credential.getAuthCredentialResponse().toByteArray()));\n  }\n  Log.i(TAG,String.format(Locale.US,\"Loaded %d credentials from local storage\",result.size()));\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 746,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  TemporalAuthCredentialResponses temporalCredentials=TemporalAuthCredentialResponses.parseFrom(credentialBlob);\n  HashMap<Integer,AuthCredentialResponse> result=new HashMap<>(temporalCredentials.getCredentialResponseCount());\n  for (  TemporalAuthCredentialResponse credential : temporalCredentials.getCredentialResponseList()) {\n    result.put(credential.getDate(),new AuthCredentialResponse(credential.getAuthCredentialResponse().toByteArray()));\n  }\n  Log.i(TAG,String.format(Locale.US,\"Loaded %d credentials from local storage\",result.size()));\n  return result;\n}\n catch (InvalidProtocolBufferException|InvalidInputException e) {\n  throw new AssertionError(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 83,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 954,
        "startLineNumber" : 42,
        "startColumnNumber" : 62,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  byte[] credentialBlob=store.getBlob(KEY,null);\n  if (credentialBlob == null) {\n    Log.i(TAG,\"No credentials responses are cached locally\");\n    return Collections.emptyMap();\n  }\n  try {\n    TemporalAuthCredentialResponses temporalCredentials=TemporalAuthCredentialResponses.parseFrom(credentialBlob);\n    HashMap<Integer,AuthCredentialResponse> result=new HashMap<>(temporalCredentials.getCredentialResponseCount());\n    for (    TemporalAuthCredentialResponse credential : temporalCredentials.getCredentialResponseList()) {\n      result.put(credential.getDate(),new AuthCredentialResponse(credential.getAuthCredentialResponse().toByteArray()));\n    }\n    Log.i(TAG,String.format(Locale.US,\"Loaded %d credentials from local storage\",result.size()));\n    return result;\n  }\n catch (  InvalidProtocolBufferException|InvalidInputException e) {\n    throw new AssertionError(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1026,
        "startLineNumber" : 41,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public @NonNull Map<Integer,AuthCredentialResponse> read(){\n  byte[] credentialBlob=store.getBlob(KEY,null);\n  if (credentialBlob == null) {\n    Log.i(TAG,\"No credentials responses are cached locally\");\n    return Collections.emptyMap();\n  }\n  try {\n    TemporalAuthCredentialResponses temporalCredentials=TemporalAuthCredentialResponses.parseFrom(credentialBlob);\n    HashMap<Integer,AuthCredentialResponse> result=new HashMap<>(temporalCredentials.getCredentialResponseCount());\n    for (    TemporalAuthCredentialResponse credential : temporalCredentials.getCredentialResponseList()) {\n      result.put(credential.getDate(),new AuthCredentialResponse(credential.getAuthCredentialResponse().toByteArray()));\n    }\n    Log.i(TAG,String.format(Locale.US,\"Loaded %d credentials from local storage\",result.size()));\n    return result;\n  }\n catch (  InvalidProtocolBufferException|InvalidInputException e) {\n    throw new AssertionError(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 123
      },
      "nodeContext" : "result.put(credential.getDate(),new AuthCredentialResponse(credential.getAuthCredentialResponse().toByteArray()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.HashMap<java.lang.Integer,org.thoughtcrime.securesms.keyvalue.AuthCredentialResponse>"
  }, {
    "nodeContext" : "result",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 58,
      "startColumnNumber" : 86,
      "endLineNumber" : 58,
      "endColumnNumber" : 92
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 58,
        "startColumnNumber" : 86,
        "endLineNumber" : 58,
        "endColumnNumber" : 99
      },
      "nodeContext" : "result.size()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 58,
        "startColumnNumber" : 17,
        "endLineNumber" : 58,
        "endColumnNumber" : 100
      },
      "nodeContext" : "String.format(Locale.US,\"Loaded %d credentials from local storage\",result.size())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 58,
        "startColumnNumber" : 6,
        "endLineNumber" : 58,
        "endColumnNumber" : 101
      },
      "nodeContext" : "Log.i(TAG,String.format(Locale.US,\"Loaded %d credentials from local storage\",result.size()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 58,
        "startColumnNumber" : 6,
        "endLineNumber" : 58,
        "endColumnNumber" : 102
      },
      "nodeContext" : "Log.i(TAG,String.format(Locale.US,\"Loaded %d credentials from local storage\",result.size()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 634,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TemporalAuthCredentialResponses temporalCredentials=TemporalAuthCredentialResponses.parseFrom(credentialBlob);\n  HashMap<Integer,AuthCredentialResponse> result=new HashMap<>(temporalCredentials.getCredentialResponseCount());\n  for (  TemporalAuthCredentialResponse credential : temporalCredentials.getCredentialResponseList()) {\n    result.put(credential.getDate(),new AuthCredentialResponse(credential.getAuthCredentialResponse().toByteArray()));\n  }\n  Log.i(TAG,String.format(Locale.US,\"Loaded %d credentials from local storage\",result.size()));\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 746,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  TemporalAuthCredentialResponses temporalCredentials=TemporalAuthCredentialResponses.parseFrom(credentialBlob);\n  HashMap<Integer,AuthCredentialResponse> result=new HashMap<>(temporalCredentials.getCredentialResponseCount());\n  for (  TemporalAuthCredentialResponse credential : temporalCredentials.getCredentialResponseList()) {\n    result.put(credential.getDate(),new AuthCredentialResponse(credential.getAuthCredentialResponse().toByteArray()));\n  }\n  Log.i(TAG,String.format(Locale.US,\"Loaded %d credentials from local storage\",result.size()));\n  return result;\n}\n catch (InvalidProtocolBufferException|InvalidInputException e) {\n  throw new AssertionError(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 83,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 954,
        "startLineNumber" : 42,
        "startColumnNumber" : 62,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  byte[] credentialBlob=store.getBlob(KEY,null);\n  if (credentialBlob == null) {\n    Log.i(TAG,\"No credentials responses are cached locally\");\n    return Collections.emptyMap();\n  }\n  try {\n    TemporalAuthCredentialResponses temporalCredentials=TemporalAuthCredentialResponses.parseFrom(credentialBlob);\n    HashMap<Integer,AuthCredentialResponse> result=new HashMap<>(temporalCredentials.getCredentialResponseCount());\n    for (    TemporalAuthCredentialResponse credential : temporalCredentials.getCredentialResponseList()) {\n      result.put(credential.getDate(),new AuthCredentialResponse(credential.getAuthCredentialResponse().toByteArray()));\n    }\n    Log.i(TAG,String.format(Locale.US,\"Loaded %d credentials from local storage\",result.size()));\n    return result;\n  }\n catch (  InvalidProtocolBufferException|InvalidInputException e) {\n    throw new AssertionError(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1026,
        "startLineNumber" : 41,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public @NonNull Map<Integer,AuthCredentialResponse> read(){\n  byte[] credentialBlob=store.getBlob(KEY,null);\n  if (credentialBlob == null) {\n    Log.i(TAG,\"No credentials responses are cached locally\");\n    return Collections.emptyMap();\n  }\n  try {\n    TemporalAuthCredentialResponses temporalCredentials=TemporalAuthCredentialResponses.parseFrom(credentialBlob);\n    HashMap<Integer,AuthCredentialResponse> result=new HashMap<>(temporalCredentials.getCredentialResponseCount());\n    for (    TemporalAuthCredentialResponse credential : temporalCredentials.getCredentialResponseList()) {\n      result.put(credential.getDate(),new AuthCredentialResponse(credential.getAuthCredentialResponse().toByteArray()));\n    }\n    Log.i(TAG,String.format(Locale.US,\"Loaded %d credentials from local storage\",result.size()));\n    return result;\n  }\n catch (  InvalidProtocolBufferException|InvalidInputException e) {\n    throw new AssertionError(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 58,
        "startColumnNumber" : 6,
        "endLineNumber" : 58,
        "endColumnNumber" : 102
      },
      "nodeContext" : "Log.i(TAG,String.format(Locale.US,\"Loaded %d credentials from local storage\",result.size()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.HashMap<java.lang.Integer,org.thoughtcrime.securesms.keyvalue.AuthCredentialResponse>"
  }, {
    "nodeContext" : "result",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 60,
      "startColumnNumber" : 13,
      "endLineNumber" : 60,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 60,
        "startColumnNumber" : 6,
        "endLineNumber" : 60,
        "endColumnNumber" : 20
      },
      "nodeContext" : "return result;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 634,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TemporalAuthCredentialResponses temporalCredentials=TemporalAuthCredentialResponses.parseFrom(credentialBlob);\n  HashMap<Integer,AuthCredentialResponse> result=new HashMap<>(temporalCredentials.getCredentialResponseCount());\n  for (  TemporalAuthCredentialResponse credential : temporalCredentials.getCredentialResponseList()) {\n    result.put(credential.getDate(),new AuthCredentialResponse(credential.getAuthCredentialResponse().toByteArray()));\n  }\n  Log.i(TAG,String.format(Locale.US,\"Loaded %d credentials from local storage\",result.size()));\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 746,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  TemporalAuthCredentialResponses temporalCredentials=TemporalAuthCredentialResponses.parseFrom(credentialBlob);\n  HashMap<Integer,AuthCredentialResponse> result=new HashMap<>(temporalCredentials.getCredentialResponseCount());\n  for (  TemporalAuthCredentialResponse credential : temporalCredentials.getCredentialResponseList()) {\n    result.put(credential.getDate(),new AuthCredentialResponse(credential.getAuthCredentialResponse().toByteArray()));\n  }\n  Log.i(TAG,String.format(Locale.US,\"Loaded %d credentials from local storage\",result.size()));\n  return result;\n}\n catch (InvalidProtocolBufferException|InvalidInputException e) {\n  throw new AssertionError(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 83,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 954,
        "startLineNumber" : 42,
        "startColumnNumber" : 62,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  byte[] credentialBlob=store.getBlob(KEY,null);\n  if (credentialBlob == null) {\n    Log.i(TAG,\"No credentials responses are cached locally\");\n    return Collections.emptyMap();\n  }\n  try {\n    TemporalAuthCredentialResponses temporalCredentials=TemporalAuthCredentialResponses.parseFrom(credentialBlob);\n    HashMap<Integer,AuthCredentialResponse> result=new HashMap<>(temporalCredentials.getCredentialResponseCount());\n    for (    TemporalAuthCredentialResponse credential : temporalCredentials.getCredentialResponseList()) {\n      result.put(credential.getDate(),new AuthCredentialResponse(credential.getAuthCredentialResponse().toByteArray()));\n    }\n    Log.i(TAG,String.format(Locale.US,\"Loaded %d credentials from local storage\",result.size()));\n    return result;\n  }\n catch (  InvalidProtocolBufferException|InvalidInputException e) {\n    throw new AssertionError(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 110,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1026,
        "startLineNumber" : 41,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public @NonNull Map<Integer,AuthCredentialResponse> read(){\n  byte[] credentialBlob=store.getBlob(KEY,null);\n  if (credentialBlob == null) {\n    Log.i(TAG,\"No credentials responses are cached locally\");\n    return Collections.emptyMap();\n  }\n  try {\n    TemporalAuthCredentialResponses temporalCredentials=TemporalAuthCredentialResponses.parseFrom(credentialBlob);\n    HashMap<Integer,AuthCredentialResponse> result=new HashMap<>(temporalCredentials.getCredentialResponseCount());\n    for (    TemporalAuthCredentialResponse credential : temporalCredentials.getCredentialResponseList()) {\n      result.put(credential.getDate(),new AuthCredentialResponse(credential.getAuthCredentialResponse().toByteArray()));\n    }\n    Log.i(TAG,String.format(Locale.US,\"Loaded %d credentials from local storage\",result.size()));\n    return result;\n  }\n catch (  InvalidProtocolBufferException|InvalidInputException e) {\n    throw new AssertionError(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 60,
        "startColumnNumber" : 6,
        "endLineNumber" : 60,
        "endColumnNumber" : 20
      },
      "nodeContext" : "return result;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.util.HashMap<java.lang.Integer,org.thoughtcrime.securesms.keyvalue.AuthCredentialResponse>"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 55,
    "startColumnNumber" : 8,
    "endLineNumber" : 55,
    "endColumnNumber" : 14
  }, {
    "charLength" : 6,
    "startLineNumber" : 58,
    "startColumnNumber" : 86,
    "endLineNumber" : 58,
    "endColumnNumber" : 92
  }, {
    "charLength" : 6,
    "startLineNumber" : 60,
    "startColumnNumber" : 13,
    "endLineNumber" : 60,
    "endColumnNumber" : 19
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 1
  } ]
}