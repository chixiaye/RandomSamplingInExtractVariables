{
  "id" : 122,
  "expression" : "context.getIdAllocator()",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-main/src/main/java/com/facebook/presto/sql/planner/iterative/rule/RemoveTrivialFilters.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "context.getIdAllocator()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 50,
      "startColumnNumber" : 84,
      "endLineNumber" : 50,
      "endColumnNumber" : 108
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 50,
        "startColumnNumber" : 84,
        "endLineNumber" : 50,
        "endColumnNumber" : 120
      },
      "nodeContext" : "context.getIdAllocator().getNextId()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 50,
        "startColumnNumber" : 37,
        "endLineNumber" : 50,
        "endColumnNumber" : 174
      },
      "nodeContext" : "new ValuesNode(filterNode.getSourceLocation(),context.getIdAllocator().getNextId(),filterNode.getOutputVariables(),ImmutableList.of())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 17,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 156,
        "startLineNumber" : 50,
        "startColumnNumber" : 19,
        "endLineNumber" : 50,
        "endColumnNumber" : 175
      },
      "nodeContext" : "Result.ofPlanNode(new ValuesNode(filterNode.getSourceLocation(),context.getIdAllocator().getNextId(),filterNode.getOutputVariables(),ImmutableList.of()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 50,
        "startColumnNumber" : 12,
        "endLineNumber" : 50,
        "endColumnNumber" : 176
      },
      "nodeContext" : "return Result.ofPlanNode(new ValuesNode(filterNode.getSourceLocation(),context.getIdAllocator().getNextId(),filterNode.getOutputVariables(),ImmutableList.of()));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 188,
        "startLineNumber" : 49,
        "startColumnNumber" : 45,
        "endLineNumber" : 51,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  return Result.ofPlanNode(new ValuesNode(filterNode.getSourceLocation(),context.getIdAllocator().getNextId(),filterNode.getOutputVariables(),ImmutableList.of()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 225,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (predicate.equals(FALSE_LITERAL)) {\n  return Result.ofPlanNode(new ValuesNode(filterNode.getSourceLocation(),context.getIdAllocator().getNextId(),filterNode.getOutputVariables(),ImmutableList.of()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 469,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 54,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Expression predicate=castToExpression(filterNode.getPredicate());\n  if (predicate.equals(TRUE_LITERAL)) {\n    return Result.ofPlanNode(filterNode.getSource());\n  }\n  if (predicate.equals(FALSE_LITERAL)) {\n    return Result.ofPlanNode(new ValuesNode(filterNode.getSourceLocation(),context.getIdAllocator().getNextId(),filterNode.getOutputVariables(),ImmutableList.of()));\n  }\n  return Result.empty();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 566,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 54,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Result apply(FilterNode filterNode,Captures captures,Context context){\n  Expression predicate=castToExpression(filterNode.getPredicate());\n  if (predicate.equals(TRUE_LITERAL)) {\n    return Result.ofPlanNode(filterNode.getSource());\n  }\n  if (predicate.equals(FALSE_LITERAL)) {\n    return Result.ofPlanNode(new ValuesNode(filterNode.getSourceLocation(),context.getIdAllocator().getNextId(),filterNode.getOutputVariables(),ImmutableList.of()));\n  }\n  return Result.empty();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 74,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 164,
        "startLineNumber" : 50,
        "startColumnNumber" : 12,
        "endLineNumber" : 50,
        "endColumnNumber" : 176
      },
      "nodeContext" : "return Result.ofPlanNode(new ValuesNode(filterNode.getSourceLocation(),context.getIdAllocator().getNextId(),filterNode.getOutputVariables(),ImmutableList.of()));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "com.facebook.presto.spi.plan.PlanNodeIdAllocator"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 50,
    "startColumnNumber" : 84,
    "endLineNumber" : 50,
    "endColumnNumber" : 108
  } ],
  "layoutRelationDataList" : [ ]
}