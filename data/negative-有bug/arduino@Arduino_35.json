{
  "id" : 35,
  "expression" : "'K'",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/app/src/processing/app/syntax/PdeKeywords.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "'K'",
    "nodeType" : "CharacterLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 106,
      "startColumnNumber" : 49,
      "endLineNumber" : 106,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 106,
        "startColumnNumber" : 27,
        "endLineNumber" : 106,
        "endColumnNumber" : 52
      },
      "nodeContext" : "coloring.charAt(0) == 'K'",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 106,
        "startColumnNumber" : 26,
        "endLineNumber" : 106,
        "endColumnNumber" : 53
      },
      "nodeContext" : "(coloring.charAt(0) == 'K')",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 106,
        "startColumnNumber" : 18,
        "endLineNumber" : 106,
        "endColumnNumber" : 53
      },
      "nodeContext" : "isKey=(coloring.charAt(0) == 'K')",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 106,
        "startColumnNumber" : 10,
        "endLineNumber" : 106,
        "endColumnNumber" : 54
      },
      "nodeContext" : "boolean isKey=(coloring.charAt(0) == 'K');\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 491,
        "startLineNumber" : 104,
        "startColumnNumber" : 96,
        "endLineNumber" : 114,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  boolean isKey=(coloring.charAt(0) == 'K');\n  int num=coloring.charAt(coloring.length() - 1) - '1';\n  byte id=(byte)((isKey ? Token.KEYWORD1 : Token.LITERAL1) + num);\n  keywordColoring.add(keyword,id);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 579,
        "startLineNumber" : 104,
        "startColumnNumber" : 8,
        "endLineNumber" : 114,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (coloring.length() > 0 && Character.isDigit(coloring.charAt(coloring.length() - 1))) {\n  boolean isKey=(coloring.charAt(0) == 'K');\n  int num=coloring.charAt(coloring.length() - 1) - '1';\n  byte id=(byte)((isKey ? Token.KEYWORD1 : Token.LITERAL1) + num);\n  keywordColoring.add(keyword,id);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 68,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1346,
        "startLineNumber" : 90,
        "startColumnNumber" : 30,
        "endLineNumber" : 121,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  String keyword=pieces[0].trim();\n  String coloring=pieces[1].trim();\n  if (coloring.length() > 0 && Character.isDigit(coloring.charAt(coloring.length() - 1))) {\n    boolean isKey=(coloring.charAt(0) == 'K');\n    int num=coloring.charAt(coloring.length() - 1) - '1';\n    byte id=(byte)((isKey ? Token.KEYWORD1 : Token.LITERAL1) + num);\n    keywordColoring.add(keyword,id);\n  }\n  if (pieces.length >= 3) {\n    String htmlFilename=pieces[2].trim();\n    if (htmlFilename.length() > 0) {\n      keywordToReference.put(keyword,htmlFilename);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1370,
        "startLineNumber" : 90,
        "startColumnNumber" : 6,
        "endLineNumber" : 121,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (pieces.length >= 2) {\n  String keyword=pieces[0].trim();\n  String coloring=pieces[1].trim();\n  if (coloring.length() > 0 && Character.isDigit(coloring.charAt(coloring.length() - 1))) {\n    boolean isKey=(coloring.charAt(0) == 'K');\n    int num=coloring.charAt(coloring.length() - 1) - '1';\n    byte id=(byte)((isKey ? Token.KEYWORD1 : Token.LITERAL1) + num);\n    keywordColoring.add(keyword,id);\n  }\n  if (pieces.length >= 3) {\n    String htmlFilename=pieces[2].trim();\n    if (htmlFilename.length() > 0) {\n      keywordToReference.put(keyword,htmlFilename);\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 125,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1581,
        "startLineNumber" : 84,
        "startColumnNumber" : 47,
        "endLineNumber" : 122,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String pieces[]=PApplet.split(line,'\\t');\n  if (pieces.length >= 2) {\n    String keyword=pieces[0].trim();\n    String coloring=pieces[1].trim();\n    if (coloring.length() > 0 && Character.isDigit(coloring.charAt(coloring.length() - 1))) {\n      boolean isKey=(coloring.charAt(0) == 'K');\n      int num=coloring.charAt(coloring.length() - 1) - '1';\n      byte id=(byte)((isKey ? Token.KEYWORD1 : Token.LITERAL1) + num);\n      keywordColoring.add(keyword,id);\n    }\n    if (pieces.length >= 3) {\n      String htmlFilename=pieces[2].trim();\n      if (htmlFilename.length() > 0) {\n        keywordToReference.put(keyword,htmlFilename);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 137,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1624,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 122,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while ((line=reader.readLine()) != null) {\n  String pieces[]=PApplet.split(line,'\\t');\n  if (pieces.length >= 2) {\n    String keyword=pieces[0].trim();\n    String coloring=pieces[1].trim();\n    if (coloring.length() > 0 && Character.isDigit(coloring.charAt(coloring.length() - 1))) {\n      boolean isKey=(coloring.charAt(0) == 'K');\n      int num=coloring.charAt(coloring.length() - 1) - '1';\n      byte id=(byte)((isKey ? Token.KEYWORD1 : Token.LITERAL1) + num);\n      keywordColoring.add(keyword,id);\n    }\n    if (pieces.length >= 3) {\n      String htmlFilename=pieces[2].trim();\n      if (htmlFilename.length() > 0) {\n        keywordToReference.put(keyword,htmlFilename);\n      }\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 146,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1790,
        "startLineNumber" : 79,
        "startColumnNumber" : 70,
        "endLineNumber" : 124,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  InputStreamReader isr=new InputStreamReader(input);\n  BufferedReader reader=new BufferedReader(isr);\n  String line=null;\n  while ((line=reader.readLine()) != null) {\n    String pieces[]=PApplet.split(line,'\\t');\n    if (pieces.length >= 2) {\n      String keyword=pieces[0].trim();\n      String coloring=pieces[1].trim();\n      if (coloring.length() > 0 && Character.isDigit(coloring.charAt(coloring.length() - 1))) {\n        boolean isKey=(coloring.charAt(0) == 'K');\n        int num=coloring.charAt(coloring.length() - 1) - '1';\n        byte id=(byte)((isKey ? Token.KEYWORD1 : Token.LITERAL1) + num);\n        keywordColoring.add(keyword,id);\n      }\n      if (pieces.length >= 3) {\n        String htmlFilename=pieces[2].trim();\n        if (htmlFilename.length() > 0) {\n          keywordToReference.put(keyword,htmlFilename);\n        }\n      }\n    }\n  }\n  reader.close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 175,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1858,
        "startLineNumber" : 79,
        "startColumnNumber" : 2,
        "endLineNumber" : 124,
        "endColumnNumber" : 3
      },
      "nodeContext" : "static private void getKeywords(InputStream input) throws Exception {\n  InputStreamReader isr=new InputStreamReader(input);\n  BufferedReader reader=new BufferedReader(isr);\n  String line=null;\n  while ((line=reader.readLine()) != null) {\n    String pieces[]=PApplet.split(line,'\\t');\n    if (pieces.length >= 2) {\n      String keyword=pieces[0].trim();\n      String coloring=pieces[1].trim();\n      if (coloring.length() > 0 && Character.isDigit(coloring.charAt(coloring.length() - 1))) {\n        boolean isKey=(coloring.charAt(0) == 'K');\n        int num=coloring.charAt(coloring.length() - 1) - '1';\n        byte id=(byte)((isKey ? Token.KEYWORD1 : Token.LITERAL1) + num);\n        keywordColoring.add(keyword,id);\n      }\n      if (pieces.length >= 3) {\n        String htmlFilename=pieces[2].trim();\n        if (htmlFilename.length() > 0) {\n          keywordToReference.put(keyword,htmlFilename);\n        }\n      }\n    }\n  }\n  reader.close();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 186,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 106,
        "startColumnNumber" : 10,
        "endLineNumber" : 106,
        "endColumnNumber" : 54
      },
      "nodeContext" : "boolean isKey=(coloring.charAt(0) == 'K');\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "char"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 106,
    "startColumnNumber" : 49,
    "endLineNumber" : 106,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}