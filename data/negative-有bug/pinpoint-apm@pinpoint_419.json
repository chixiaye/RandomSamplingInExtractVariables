{
  "id" : 419,
  "expression" : "interceptor",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/profiler/src/test/java/com/navercorp/pinpoint/profiler/instrument/interceptor/InterceptorDefinitionFactoryTest.java",
  "occurrences" : 6,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "interceptor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 100,
      "startColumnNumber" : 48,
      "endLineNumber" : 100,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 100,
        "startColumnNumber" : 48,
        "endLineNumber" : 100,
        "endColumnNumber" : 77
      },
      "nodeContext" : "interceptor.getBeforeMethod()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 100,
        "startColumnNumber" : 12,
        "endLineNumber" : 100,
        "endColumnNumber" : 78
      },
      "nodeContext" : "Assert.assertNull(\"before is null\",interceptor.getBeforeMethod())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 100,
        "startColumnNumber" : 12,
        "endLineNumber" : 100,
        "endColumnNumber" : 79
      },
      "nodeContext" : "Assert.assertNull(\"before is null\",interceptor.getBeforeMethod());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 99,
        "startColumnNumber" : 32,
        "endLineNumber" : 101,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Assert.assertNull(\"before is null\",interceptor.getBeforeMethod());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 324,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 104,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (beforeName == null) {\n  Assert.assertNull(\"before is null\",interceptor.getBeforeMethod());\n}\n else {\n  Assert.assertNotNull(\"after is not null\",interceptor.getBeforeMethod());\n  Assert.assertEquals(\"check beforeName\",interceptor.getBeforeMethod().getName(),beforeName);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 727,
        "startLineNumber" : 96,
        "startColumnNumber" : 135,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assert.assertSame(\"Type\",aroundType,aroundType);\n  if (beforeName == null) {\n    Assert.assertNull(\"before is null\",interceptor.getBeforeMethod());\n  }\n else {\n    Assert.assertNotNull(\"after is not null\",interceptor.getBeforeMethod());\n    Assert.assertEquals(\"check beforeName\",interceptor.getBeforeMethod().getName(),beforeName);\n  }\n  if (afterName == null) {\n    Assert.assertNull(\"after is null\",interceptor.getAfterMethod());\n  }\n else {\n    Assert.assertNotNull(\"after is not null\",interceptor.getAfterMethod());\n    Assert.assertEquals(\"check afterName\",interceptor.getAfterMethod().getName(),afterName);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 858,
        "startLineNumber" : 96,
        "startColumnNumber" : 4,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void assertInterceptorType(InterceptorDefinition interceptor,CaptureType aroundType,String beforeName,String afterName){\n  Assert.assertSame(\"Type\",aroundType,aroundType);\n  if (beforeName == null) {\n    Assert.assertNull(\"before is null\",interceptor.getBeforeMethod());\n  }\n else {\n    Assert.assertNotNull(\"after is not null\",interceptor.getBeforeMethod());\n    Assert.assertEquals(\"check beforeName\",interceptor.getBeforeMethod().getName(),beforeName);\n  }\n  if (afterName == null) {\n    Assert.assertNull(\"after is null\",interceptor.getAfterMethod());\n  }\n else {\n    Assert.assertNotNull(\"after is not null\",interceptor.getAfterMethod());\n    Assert.assertEquals(\"check afterName\",interceptor.getAfterMethod().getName(),afterName);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 94,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 100,
        "startColumnNumber" : 12,
        "endLineNumber" : 100,
        "endColumnNumber" : 79
      },
      "nodeContext" : "Assert.assertNull(\"before is null\",interceptor.getBeforeMethod());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.navercorp.pinpoint.profiler.instrument.interceptor.InterceptorDefinition"
  }, {
    "nodeContext" : "interceptor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 102,
      "startColumnNumber" : 54,
      "endLineNumber" : 102,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 102,
        "startColumnNumber" : 54,
        "endLineNumber" : 102,
        "endColumnNumber" : 83
      },
      "nodeContext" : "interceptor.getBeforeMethod()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 102,
        "startColumnNumber" : 12,
        "endLineNumber" : 102,
        "endColumnNumber" : 84
      },
      "nodeContext" : "Assert.assertNotNull(\"after is not null\",interceptor.getBeforeMethod())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 102,
        "startColumnNumber" : 12,
        "endLineNumber" : 102,
        "endColumnNumber" : 85
      },
      "nodeContext" : "Assert.assertNotNull(\"after is not null\",interceptor.getBeforeMethod());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 203,
        "startLineNumber" : 101,
        "startColumnNumber" : 15,
        "endLineNumber" : 104,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Assert.assertNotNull(\"after is not null\",interceptor.getBeforeMethod());\n  Assert.assertEquals(\"check beforeName\",interceptor.getBeforeMethod().getName(),beforeName);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 324,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 104,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (beforeName == null) {\n  Assert.assertNull(\"before is null\",interceptor.getBeforeMethod());\n}\n else {\n  Assert.assertNotNull(\"after is not null\",interceptor.getBeforeMethod());\n  Assert.assertEquals(\"check beforeName\",interceptor.getBeforeMethod().getName(),beforeName);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 727,
        "startLineNumber" : 96,
        "startColumnNumber" : 135,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assert.assertSame(\"Type\",aroundType,aroundType);\n  if (beforeName == null) {\n    Assert.assertNull(\"before is null\",interceptor.getBeforeMethod());\n  }\n else {\n    Assert.assertNotNull(\"after is not null\",interceptor.getBeforeMethod());\n    Assert.assertEquals(\"check beforeName\",interceptor.getBeforeMethod().getName(),beforeName);\n  }\n  if (afterName == null) {\n    Assert.assertNull(\"after is null\",interceptor.getAfterMethod());\n  }\n else {\n    Assert.assertNotNull(\"after is not null\",interceptor.getAfterMethod());\n    Assert.assertEquals(\"check afterName\",interceptor.getAfterMethod().getName(),afterName);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 858,
        "startLineNumber" : 96,
        "startColumnNumber" : 4,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void assertInterceptorType(InterceptorDefinition interceptor,CaptureType aroundType,String beforeName,String afterName){\n  Assert.assertSame(\"Type\",aroundType,aroundType);\n  if (beforeName == null) {\n    Assert.assertNull(\"before is null\",interceptor.getBeforeMethod());\n  }\n else {\n    Assert.assertNotNull(\"after is not null\",interceptor.getBeforeMethod());\n    Assert.assertEquals(\"check beforeName\",interceptor.getBeforeMethod().getName(),beforeName);\n  }\n  if (afterName == null) {\n    Assert.assertNull(\"after is null\",interceptor.getAfterMethod());\n  }\n else {\n    Assert.assertNotNull(\"after is not null\",interceptor.getAfterMethod());\n    Assert.assertEquals(\"check afterName\",interceptor.getAfterMethod().getName(),afterName);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 94,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 102,
        "startColumnNumber" : 12,
        "endLineNumber" : 102,
        "endColumnNumber" : 85
      },
      "nodeContext" : "Assert.assertNotNull(\"after is not null\",interceptor.getBeforeMethod());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.navercorp.pinpoint.profiler.instrument.interceptor.InterceptorDefinition"
  }, {
    "nodeContext" : "interceptor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 103,
      "startColumnNumber" : 52,
      "endLineNumber" : 103,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 103,
        "startColumnNumber" : 52,
        "endLineNumber" : 103,
        "endColumnNumber" : 81
      },
      "nodeContext" : "interceptor.getBeforeMethod()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 103,
        "startColumnNumber" : 52,
        "endLineNumber" : 103,
        "endColumnNumber" : 91
      },
      "nodeContext" : "interceptor.getBeforeMethod().getName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 103,
        "startColumnNumber" : 12,
        "endLineNumber" : 103,
        "endColumnNumber" : 104
      },
      "nodeContext" : "Assert.assertEquals(\"check beforeName\",interceptor.getBeforeMethod().getName(),beforeName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 103,
        "startColumnNumber" : 12,
        "endLineNumber" : 103,
        "endColumnNumber" : 105
      },
      "nodeContext" : "Assert.assertEquals(\"check beforeName\",interceptor.getBeforeMethod().getName(),beforeName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 203,
        "startLineNumber" : 101,
        "startColumnNumber" : 15,
        "endLineNumber" : 104,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Assert.assertNotNull(\"after is not null\",interceptor.getBeforeMethod());\n  Assert.assertEquals(\"check beforeName\",interceptor.getBeforeMethod().getName(),beforeName);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 324,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 104,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (beforeName == null) {\n  Assert.assertNull(\"before is null\",interceptor.getBeforeMethod());\n}\n else {\n  Assert.assertNotNull(\"after is not null\",interceptor.getBeforeMethod());\n  Assert.assertEquals(\"check beforeName\",interceptor.getBeforeMethod().getName(),beforeName);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 727,
        "startLineNumber" : 96,
        "startColumnNumber" : 135,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assert.assertSame(\"Type\",aroundType,aroundType);\n  if (beforeName == null) {\n    Assert.assertNull(\"before is null\",interceptor.getBeforeMethod());\n  }\n else {\n    Assert.assertNotNull(\"after is not null\",interceptor.getBeforeMethod());\n    Assert.assertEquals(\"check beforeName\",interceptor.getBeforeMethod().getName(),beforeName);\n  }\n  if (afterName == null) {\n    Assert.assertNull(\"after is null\",interceptor.getAfterMethod());\n  }\n else {\n    Assert.assertNotNull(\"after is not null\",interceptor.getAfterMethod());\n    Assert.assertEquals(\"check afterName\",interceptor.getAfterMethod().getName(),afterName);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 858,
        "startLineNumber" : 96,
        "startColumnNumber" : 4,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void assertInterceptorType(InterceptorDefinition interceptor,CaptureType aroundType,String beforeName,String afterName){\n  Assert.assertSame(\"Type\",aroundType,aroundType);\n  if (beforeName == null) {\n    Assert.assertNull(\"before is null\",interceptor.getBeforeMethod());\n  }\n else {\n    Assert.assertNotNull(\"after is not null\",interceptor.getBeforeMethod());\n    Assert.assertEquals(\"check beforeName\",interceptor.getBeforeMethod().getName(),beforeName);\n  }\n  if (afterName == null) {\n    Assert.assertNull(\"after is null\",interceptor.getAfterMethod());\n  }\n else {\n    Assert.assertNotNull(\"after is not null\",interceptor.getAfterMethod());\n    Assert.assertEquals(\"check afterName\",interceptor.getAfterMethod().getName(),afterName);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 94,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 103,
        "startColumnNumber" : 12,
        "endLineNumber" : 103,
        "endColumnNumber" : 105
      },
      "nodeContext" : "Assert.assertEquals(\"check beforeName\",interceptor.getBeforeMethod().getName(),beforeName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.navercorp.pinpoint.profiler.instrument.interceptor.InterceptorDefinition"
  }, {
    "nodeContext" : "interceptor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 107,
      "startColumnNumber" : 47,
      "endLineNumber" : 107,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 107,
        "startColumnNumber" : 47,
        "endLineNumber" : 107,
        "endColumnNumber" : 75
      },
      "nodeContext" : "interceptor.getAfterMethod()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 107,
        "startColumnNumber" : 12,
        "endLineNumber" : 107,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Assert.assertNull(\"after is null\",interceptor.getAfterMethod())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 107,
        "startColumnNumber" : 12,
        "endLineNumber" : 107,
        "endColumnNumber" : 77
      },
      "nodeContext" : "Assert.assertNull(\"after is null\",interceptor.getAfterMethod());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 106,
        "startColumnNumber" : 31,
        "endLineNumber" : 108,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Assert.assertNull(\"after is null\",interceptor.getAfterMethod());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 317,
        "startLineNumber" : 106,
        "startColumnNumber" : 8,
        "endLineNumber" : 111,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (afterName == null) {\n  Assert.assertNull(\"after is null\",interceptor.getAfterMethod());\n}\n else {\n  Assert.assertNotNull(\"after is not null\",interceptor.getAfterMethod());\n  Assert.assertEquals(\"check afterName\",interceptor.getAfterMethod().getName(),afterName);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 727,
        "startLineNumber" : 96,
        "startColumnNumber" : 135,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assert.assertSame(\"Type\",aroundType,aroundType);\n  if (beforeName == null) {\n    Assert.assertNull(\"before is null\",interceptor.getBeforeMethod());\n  }\n else {\n    Assert.assertNotNull(\"after is not null\",interceptor.getBeforeMethod());\n    Assert.assertEquals(\"check beforeName\",interceptor.getBeforeMethod().getName(),beforeName);\n  }\n  if (afterName == null) {\n    Assert.assertNull(\"after is null\",interceptor.getAfterMethod());\n  }\n else {\n    Assert.assertNotNull(\"after is not null\",interceptor.getAfterMethod());\n    Assert.assertEquals(\"check afterName\",interceptor.getAfterMethod().getName(),afterName);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 858,
        "startLineNumber" : 96,
        "startColumnNumber" : 4,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void assertInterceptorType(InterceptorDefinition interceptor,CaptureType aroundType,String beforeName,String afterName){\n  Assert.assertSame(\"Type\",aroundType,aroundType);\n  if (beforeName == null) {\n    Assert.assertNull(\"before is null\",interceptor.getBeforeMethod());\n  }\n else {\n    Assert.assertNotNull(\"after is not null\",interceptor.getBeforeMethod());\n    Assert.assertEquals(\"check beforeName\",interceptor.getBeforeMethod().getName(),beforeName);\n  }\n  if (afterName == null) {\n    Assert.assertNull(\"after is null\",interceptor.getAfterMethod());\n  }\n else {\n    Assert.assertNotNull(\"after is not null\",interceptor.getAfterMethod());\n    Assert.assertEquals(\"check afterName\",interceptor.getAfterMethod().getName(),afterName);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 94,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 107,
        "startColumnNumber" : 12,
        "endLineNumber" : 107,
        "endColumnNumber" : 77
      },
      "nodeContext" : "Assert.assertNull(\"after is null\",interceptor.getAfterMethod());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.navercorp.pinpoint.profiler.instrument.interceptor.InterceptorDefinition"
  }, {
    "nodeContext" : "interceptor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 109,
      "startColumnNumber" : 54,
      "endLineNumber" : 109,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 109,
        "startColumnNumber" : 54,
        "endLineNumber" : 109,
        "endColumnNumber" : 82
      },
      "nodeContext" : "interceptor.getAfterMethod()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 109,
        "startColumnNumber" : 12,
        "endLineNumber" : 109,
        "endColumnNumber" : 83
      },
      "nodeContext" : "Assert.assertNotNull(\"after is not null\",interceptor.getAfterMethod())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 109,
        "startColumnNumber" : 12,
        "endLineNumber" : 109,
        "endColumnNumber" : 84
      },
      "nodeContext" : "Assert.assertNotNull(\"after is not null\",interceptor.getAfterMethod());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 199,
        "startLineNumber" : 108,
        "startColumnNumber" : 15,
        "endLineNumber" : 111,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Assert.assertNotNull(\"after is not null\",interceptor.getAfterMethod());\n  Assert.assertEquals(\"check afterName\",interceptor.getAfterMethod().getName(),afterName);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 317,
        "startLineNumber" : 106,
        "startColumnNumber" : 8,
        "endLineNumber" : 111,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (afterName == null) {\n  Assert.assertNull(\"after is null\",interceptor.getAfterMethod());\n}\n else {\n  Assert.assertNotNull(\"after is not null\",interceptor.getAfterMethod());\n  Assert.assertEquals(\"check afterName\",interceptor.getAfterMethod().getName(),afterName);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 727,
        "startLineNumber" : 96,
        "startColumnNumber" : 135,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assert.assertSame(\"Type\",aroundType,aroundType);\n  if (beforeName == null) {\n    Assert.assertNull(\"before is null\",interceptor.getBeforeMethod());\n  }\n else {\n    Assert.assertNotNull(\"after is not null\",interceptor.getBeforeMethod());\n    Assert.assertEquals(\"check beforeName\",interceptor.getBeforeMethod().getName(),beforeName);\n  }\n  if (afterName == null) {\n    Assert.assertNull(\"after is null\",interceptor.getAfterMethod());\n  }\n else {\n    Assert.assertNotNull(\"after is not null\",interceptor.getAfterMethod());\n    Assert.assertEquals(\"check afterName\",interceptor.getAfterMethod().getName(),afterName);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 858,
        "startLineNumber" : 96,
        "startColumnNumber" : 4,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void assertInterceptorType(InterceptorDefinition interceptor,CaptureType aroundType,String beforeName,String afterName){\n  Assert.assertSame(\"Type\",aroundType,aroundType);\n  if (beforeName == null) {\n    Assert.assertNull(\"before is null\",interceptor.getBeforeMethod());\n  }\n else {\n    Assert.assertNotNull(\"after is not null\",interceptor.getBeforeMethod());\n    Assert.assertEquals(\"check beforeName\",interceptor.getBeforeMethod().getName(),beforeName);\n  }\n  if (afterName == null) {\n    Assert.assertNull(\"after is null\",interceptor.getAfterMethod());\n  }\n else {\n    Assert.assertNotNull(\"after is not null\",interceptor.getAfterMethod());\n    Assert.assertEquals(\"check afterName\",interceptor.getAfterMethod().getName(),afterName);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 94,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 109,
        "startColumnNumber" : 12,
        "endLineNumber" : 109,
        "endColumnNumber" : 84
      },
      "nodeContext" : "Assert.assertNotNull(\"after is not null\",interceptor.getAfterMethod());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.navercorp.pinpoint.profiler.instrument.interceptor.InterceptorDefinition"
  }, {
    "nodeContext" : "interceptor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 110,
      "startColumnNumber" : 51,
      "endLineNumber" : 110,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 110,
        "startColumnNumber" : 51,
        "endLineNumber" : 110,
        "endColumnNumber" : 79
      },
      "nodeContext" : "interceptor.getAfterMethod()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 110,
        "startColumnNumber" : 51,
        "endLineNumber" : 110,
        "endColumnNumber" : 89
      },
      "nodeContext" : "interceptor.getAfterMethod().getName()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 110,
        "startColumnNumber" : 12,
        "endLineNumber" : 110,
        "endColumnNumber" : 101
      },
      "nodeContext" : "Assert.assertEquals(\"check afterName\",interceptor.getAfterMethod().getName(),afterName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 110,
        "startColumnNumber" : 12,
        "endLineNumber" : 110,
        "endColumnNumber" : 102
      },
      "nodeContext" : "Assert.assertEquals(\"check afterName\",interceptor.getAfterMethod().getName(),afterName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 199,
        "startLineNumber" : 108,
        "startColumnNumber" : 15,
        "endLineNumber" : 111,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Assert.assertNotNull(\"after is not null\",interceptor.getAfterMethod());\n  Assert.assertEquals(\"check afterName\",interceptor.getAfterMethod().getName(),afterName);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 317,
        "startLineNumber" : 106,
        "startColumnNumber" : 8,
        "endLineNumber" : 111,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (afterName == null) {\n  Assert.assertNull(\"after is null\",interceptor.getAfterMethod());\n}\n else {\n  Assert.assertNotNull(\"after is not null\",interceptor.getAfterMethod());\n  Assert.assertEquals(\"check afterName\",interceptor.getAfterMethod().getName(),afterName);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 727,
        "startLineNumber" : 96,
        "startColumnNumber" : 135,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assert.assertSame(\"Type\",aroundType,aroundType);\n  if (beforeName == null) {\n    Assert.assertNull(\"before is null\",interceptor.getBeforeMethod());\n  }\n else {\n    Assert.assertNotNull(\"after is not null\",interceptor.getBeforeMethod());\n    Assert.assertEquals(\"check beforeName\",interceptor.getBeforeMethod().getName(),beforeName);\n  }\n  if (afterName == null) {\n    Assert.assertNull(\"after is null\",interceptor.getAfterMethod());\n  }\n else {\n    Assert.assertNotNull(\"after is not null\",interceptor.getAfterMethod());\n    Assert.assertEquals(\"check afterName\",interceptor.getAfterMethod().getName(),afterName);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 858,
        "startLineNumber" : 96,
        "startColumnNumber" : 4,
        "endLineNumber" : 112,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void assertInterceptorType(InterceptorDefinition interceptor,CaptureType aroundType,String beforeName,String afterName){\n  Assert.assertSame(\"Type\",aroundType,aroundType);\n  if (beforeName == null) {\n    Assert.assertNull(\"before is null\",interceptor.getBeforeMethod());\n  }\n else {\n    Assert.assertNotNull(\"after is not null\",interceptor.getBeforeMethod());\n    Assert.assertEquals(\"check beforeName\",interceptor.getBeforeMethod().getName(),beforeName);\n  }\n  if (afterName == null) {\n    Assert.assertNull(\"after is null\",interceptor.getAfterMethod());\n  }\n else {\n    Assert.assertNotNull(\"after is not null\",interceptor.getAfterMethod());\n    Assert.assertEquals(\"check afterName\",interceptor.getAfterMethod().getName(),afterName);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 94,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 110,
        "startColumnNumber" : 12,
        "endLineNumber" : 110,
        "endColumnNumber" : 102
      },
      "nodeContext" : "Assert.assertEquals(\"check afterName\",interceptor.getAfterMethod().getName(),afterName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.navercorp.pinpoint.profiler.instrument.interceptor.InterceptorDefinition"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 100,
    "startColumnNumber" : 48,
    "endLineNumber" : 100,
    "endColumnNumber" : 59
  }, {
    "charLength" : 11,
    "startLineNumber" : 102,
    "startColumnNumber" : 54,
    "endLineNumber" : 102,
    "endColumnNumber" : 65
  }, {
    "charLength" : 11,
    "startLineNumber" : 103,
    "startColumnNumber" : 52,
    "endLineNumber" : 103,
    "endColumnNumber" : 63
  }, {
    "charLength" : 11,
    "startLineNumber" : 107,
    "startColumnNumber" : 47,
    "endLineNumber" : 107,
    "endColumnNumber" : 58
  }, {
    "charLength" : 11,
    "startLineNumber" : 109,
    "startColumnNumber" : 54,
    "endLineNumber" : 109,
    "endColumnNumber" : 65
  }, {
    "charLength" : 11,
    "startLineNumber" : 110,
    "startColumnNumber" : 51,
    "endLineNumber" : 110,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 4
  } ]
}