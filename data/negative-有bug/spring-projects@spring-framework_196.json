{
  "id" : 196,
  "expression" : "this.content instanceof Reader",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-jdbc/src/main/java/org/springframework/jdbc/core/support/SqlLobValue.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "this.content instanceof Reader",
    "nodeType" : "InstanceofExpression",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 199,
      "startColumnNumber" : 12,
      "endLineNumber" : 199,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 293,
        "startLineNumber" : 199,
        "startColumnNumber" : 8,
        "endLineNumber" : 205,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (this.content instanceof Reader) {\n  this.lobCreator.setClobAsCharacterStream(ps,paramIndex,(Reader)this.content,this.length);\n}\n else {\n  throw new IllegalArgumentException(\"Content type [\" + this.content.getClass().getName() + \"] not supported for CLOB columns\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 40,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 448,
        "startLineNumber" : 196,
        "startColumnNumber" : 8,
        "endLineNumber" : 205,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (this.content instanceof InputStream) {\n  this.lobCreator.setClobAsAsciiStream(ps,paramIndex,(InputStream)this.content,this.length);\n}\n else if (this.content instanceof Reader) {\n  this.lobCreator.setClobAsCharacterStream(ps,paramIndex,(Reader)this.content,this.length);\n}\n else {\n  throw new IllegalArgumentException(\"Content type [\" + this.content.getClass().getName() + \"] not supported for CLOB columns\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 599,
        "startLineNumber" : 193,
        "startColumnNumber" : 3,
        "endLineNumber" : 205,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (this.content instanceof String || this.content == null) {\n  this.lobCreator.setClobAsString(ps,paramIndex,(String)this.content);\n}\n else if (this.content instanceof InputStream) {\n  this.lobCreator.setClobAsAsciiStream(ps,paramIndex,(InputStream)this.content,this.length);\n}\n else if (this.content instanceof Reader) {\n  this.lobCreator.setClobAsCharacterStream(ps,paramIndex,(Reader)this.content,this.length);\n}\n else {\n  throw new IllegalArgumentException(\"Content type [\" + this.content.getClass().getName() + \"] not supported for CLOB columns\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 93,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 608,
        "startLineNumber" : 192,
        "startColumnNumber" : 34,
        "endLineNumber" : 206,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (this.content instanceof String || this.content == null) {\n    this.lobCreator.setClobAsString(ps,paramIndex,(String)this.content);\n  }\n else   if (this.content instanceof InputStream) {\n    this.lobCreator.setClobAsAsciiStream(ps,paramIndex,(InputStream)this.content,this.length);\n  }\n else   if (this.content instanceof Reader) {\n    this.lobCreator.setClobAsCharacterStream(ps,paramIndex,(Reader)this.content,this.length);\n  }\n else {\n    throw new IllegalArgumentException(\"Content type [\" + this.content.getClass().getName() + \"] not supported for CLOB columns\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 94,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 740,
        "startLineNumber" : 192,
        "startColumnNumber" : 7,
        "endLineNumber" : 209,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (sqlType == Types.CLOB) {\n  if (this.content instanceof String || this.content == null) {\n    this.lobCreator.setClobAsString(ps,paramIndex,(String)this.content);\n  }\n else   if (this.content instanceof InputStream) {\n    this.lobCreator.setClobAsAsciiStream(ps,paramIndex,(InputStream)this.content,this.length);\n  }\n else   if (this.content instanceof Reader) {\n    this.lobCreator.setClobAsCharacterStream(ps,paramIndex,(Reader)this.content,this.length);\n  }\n else {\n    throw new IllegalArgumentException(\"Content type [\" + this.content.getClass().getName() + \"] not supported for CLOB columns\");\n  }\n}\n else {\n  throw new IllegalArgumentException(\"SqlLobValue only supports SQL types BLOB and CLOB\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 106,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1373,
        "startLineNumber" : 177,
        "startColumnNumber" : 2,
        "endLineNumber" : 209,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (sqlType == Types.BLOB) {\n  if (this.content instanceof byte[] || this.content == null) {\n    this.lobCreator.setBlobAsBytes(ps,paramIndex,(byte[])this.content);\n  }\n else   if (this.content instanceof String) {\n    this.lobCreator.setBlobAsBytes(ps,paramIndex,((String)this.content).getBytes());\n  }\n else   if (this.content instanceof InputStream) {\n    this.lobCreator.setBlobAsBinaryStream(ps,paramIndex,(InputStream)this.content,this.length);\n  }\n else {\n    throw new IllegalArgumentException(\"Content type [\" + this.content.getClass().getName() + \"] not supported for BLOB columns\");\n  }\n}\n else if (sqlType == Types.CLOB) {\n  if (this.content instanceof String || this.content == null) {\n    this.lobCreator.setClobAsString(ps,paramIndex,(String)this.content);\n  }\n else   if (this.content instanceof InputStream) {\n    this.lobCreator.setClobAsAsciiStream(ps,paramIndex,(InputStream)this.content,this.length);\n  }\n else   if (this.content instanceof Reader) {\n    this.lobCreator.setClobAsCharacterStream(ps,paramIndex,(Reader)this.content,this.length);\n  }\n else {\n    throw new IllegalArgumentException(\"Content type [\" + this.content.getClass().getName() + \"] not supported for CLOB columns\");\n  }\n}\n else {\n  throw new IllegalArgumentException(\"SqlLobValue only supports SQL types BLOB and CLOB\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 208,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1381,
        "startLineNumber" : 175,
        "startColumnNumber" : 23,
        "endLineNumber" : 210,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (sqlType == Types.BLOB) {\n    if (this.content instanceof byte[] || this.content == null) {\n      this.lobCreator.setBlobAsBytes(ps,paramIndex,(byte[])this.content);\n    }\n else     if (this.content instanceof String) {\n      this.lobCreator.setBlobAsBytes(ps,paramIndex,((String)this.content).getBytes());\n    }\n else     if (this.content instanceof InputStream) {\n      this.lobCreator.setBlobAsBinaryStream(ps,paramIndex,(InputStream)this.content,this.length);\n    }\n else {\n      throw new IllegalArgumentException(\"Content type [\" + this.content.getClass().getName() + \"] not supported for BLOB columns\");\n    }\n  }\n else   if (sqlType == Types.CLOB) {\n    if (this.content instanceof String || this.content == null) {\n      this.lobCreator.setClobAsString(ps,paramIndex,(String)this.content);\n    }\n else     if (this.content instanceof InputStream) {\n      this.lobCreator.setClobAsAsciiStream(ps,paramIndex,(InputStream)this.content,this.length);\n    }\n else     if (this.content instanceof Reader) {\n      this.lobCreator.setClobAsCharacterStream(ps,paramIndex,(Reader)this.content,this.length);\n    }\n else {\n      throw new IllegalArgumentException(\"Content type [\" + this.content.getClass().getName() + \"] not supported for CLOB columns\");\n    }\n  }\n else {\n    throw new IllegalArgumentException(\"SqlLobValue only supports SQL types BLOB and CLOB\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 209,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1578,
        "startLineNumber" : 170,
        "startColumnNumber" : 1,
        "endLineNumber" : 210,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Set the specified content via the LobCreator.\n */\n@Override public void setTypeValue(PreparedStatement ps,int paramIndex,int sqlType,@Nullable String typeName) throws SQLException {\n  if (sqlType == Types.BLOB) {\n    if (this.content instanceof byte[] || this.content == null) {\n      this.lobCreator.setBlobAsBytes(ps,paramIndex,(byte[])this.content);\n    }\n else     if (this.content instanceof String) {\n      this.lobCreator.setBlobAsBytes(ps,paramIndex,((String)this.content).getBytes());\n    }\n else     if (this.content instanceof InputStream) {\n      this.lobCreator.setBlobAsBinaryStream(ps,paramIndex,(InputStream)this.content,this.length);\n    }\n else {\n      throw new IllegalArgumentException(\"Content type [\" + this.content.getClass().getName() + \"] not supported for BLOB columns\");\n    }\n  }\n else   if (sqlType == Types.CLOB) {\n    if (this.content instanceof String || this.content == null) {\n      this.lobCreator.setClobAsString(ps,paramIndex,(String)this.content);\n    }\n else     if (this.content instanceof InputStream) {\n      this.lobCreator.setClobAsAsciiStream(ps,paramIndex,(InputStream)this.content,this.length);\n    }\n else     if (this.content instanceof Reader) {\n      this.lobCreator.setClobAsCharacterStream(ps,paramIndex,(Reader)this.content,this.length);\n    }\n else {\n      throw new IllegalArgumentException(\"Content type [\" + this.content.getClass().getName() + \"] not supported for CLOB columns\");\n    }\n  }\n else {\n    throw new IllegalArgumentException(\"SqlLobValue only supports SQL types BLOB and CLOB\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 234,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 293,
        "startLineNumber" : 199,
        "startColumnNumber" : 8,
        "endLineNumber" : 205,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (this.content instanceof Reader) {\n  this.lobCreator.setClobAsCharacterStream(ps,paramIndex,(Reader)this.content,this.length);\n}\n else {\n  throw new IllegalArgumentException(\"Content type [\" + this.content.getClass().getName() + \"] not supported for CLOB columns\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 40,
      "astHeight" : 9
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 30,
    "startLineNumber" : 199,
    "startColumnNumber" : 12,
    "endLineNumber" : 199,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ ]
}