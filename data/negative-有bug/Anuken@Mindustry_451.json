{
  "id" : 451,
  "expression" : "control.saves",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/ui/dialogs/LoadDialog.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "control.saves",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 53,
      "startColumnNumber" : 30,
      "endLineNumber" : 53,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 53,
        "startColumnNumber" : 30,
        "endLineNumber" : 53,
        "endColumnNumber" : 58
      },
      "nodeContext" : "control.saves.getSaveSlots()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 53,
        "startColumnNumber" : 22,
        "endLineNumber" : 53,
        "endColumnNumber" : 58
      },
      "nodeContext" : "array=control.saves.getSaveSlots()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Seq<SaveSlot> array=control.saves.getSaveSlots();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4135,
        "startLineNumber" : 41,
        "startColumnNumber" : 26,
        "endLineNumber" : 148,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  cont.clear();\n  slots=new Table();\n  pane=new ScrollPane(slots);\n  pane.setFadeScrollBars(false);\n  pane.setScrollingDisabled(true,false);\n  slots.marginRight(24).marginLeft(20f);\n  Time.runTask(2f,() -> Core.scene.setScrollFocus(pane));\n  Seq<SaveSlot> array=control.saves.getSaveSlots();\n  array.sort((slot,other) -> -Long.compare(slot.getTimestamp(),other.getTimestamp()));\n  int maxwidth=Math.max((int)(Core.graphics.getWidth() / Scl.scl(470)),1);\n  int i=0;\n  boolean any=false;\n  for (  SaveSlot slot : array) {\n    if (slot.isHidden())     continue;\n    any=true;\n    TextButton button=new TextButton(\"\",Styles.cleart);\n    button.getLabel().remove();\n    button.clearChildren();\n    button.defaults().left();\n    button.table(title -> {\n      title.add(\"[accent]\" + slot.getName()).left().growX().width(230f).wrap();\n      title.table(t -> {\n        t.right();\n        t.defaults().size(40f);\n        t.button(Icon.save,Styles.emptytogglei,() -> {\n          slot.setAutosave(!slot.isAutosave());\n        }\n).checked(slot.isAutosave()).right();\n        t.button(Icon.trash,Styles.emptyi,() -> {\n          ui.showConfirm(\"@confirm\",\"@save.delete.confirm\",() -> {\n            slot.delete();\n            setup();\n          }\n);\n        }\n).right();\n        t.button(Icon.pencil,Styles.emptyi,() -> {\n          ui.showTextInput(\"@save.rename\",\"@save.rename.text\",slot.getName(),text -> {\n            slot.setName(text);\n            setup();\n          }\n);\n        }\n).right();\n        t.button(Icon.export,Styles.emptyi,() -> platform.export(\"save-\" + slot.getName(),saveExtension,slot::exportFile)).right();\n      }\n).padRight(-10).growX();\n    }\n).growX().colspan(2);\n    button.row();\n    String color=\"[lightgray]\";\n    TextureRegion def=Core.atlas.find(\"nomap\");\n    button.left().add(new BorderImage(def,4f)).update(im -> {\n      TextureRegionDrawable draw=(TextureRegionDrawable)im.getDrawable();\n      if (draw.getRegion().texture.isDisposed()) {\n        draw.setRegion(def);\n      }\n      Texture text=slot.previewTexture();\n      if (draw.getRegion() == def && text != null) {\n        draw.setRegion(new TextureRegion(text));\n      }\n      im.setScaling(Scaling.fit);\n    }\n).left().size(160f).padRight(6);\n    button.table(meta -> {\n      meta.left().top();\n      meta.defaults().padBottom(-2).left().width(290f);\n      meta.row();\n      meta.labelWrap(Core.bundle.format(\"save.map\",color + (slot.getMap() == null ? Core.bundle.get(\"unknown\") : slot.getMap().name())));\n      meta.row();\n      meta.labelWrap(slot.mode().toString() + \" /\" + color+ \" \"+ Core.bundle.format(\"save.wave\",color + slot.getWave()));\n      meta.row();\n      meta.labelWrap(() -> Core.bundle.format(\"save.autosave\",color + Core.bundle.get(slot.isAutosave() ? \"on\" : \"off\")));\n      meta.row();\n      meta.labelWrap(() -> Core.bundle.format(\"save.playtime\",color + slot.getPlayTime()));\n      meta.row();\n      meta.labelWrap(color + slot.getDate());\n      meta.row();\n    }\n).left().growX().width(250f);\n    modifyButton(button,slot);\n    slots.add(button).uniformX().fillX().pad(4).padRight(8f).margin(10f);\n    if (++i % maxwidth == 0) {\n      slots.row();\n    }\n  }\n  if (!any) {\n    slots.button(\"@save.none\",() -> {\n    }\n).disabled(true).fillX().margin(20f).minWidth(340f).height(80f).pad(4f);\n  }\n  cont.add(pane);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 662,
      "astHeight" : 27
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4157,
        "startLineNumber" : 41,
        "startColumnNumber" : 4,
        "endLineNumber" : 148,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected void setup(){\n  cont.clear();\n  slots=new Table();\n  pane=new ScrollPane(slots);\n  pane.setFadeScrollBars(false);\n  pane.setScrollingDisabled(true,false);\n  slots.marginRight(24).marginLeft(20f);\n  Time.runTask(2f,() -> Core.scene.setScrollFocus(pane));\n  Seq<SaveSlot> array=control.saves.getSaveSlots();\n  array.sort((slot,other) -> -Long.compare(slot.getTimestamp(),other.getTimestamp()));\n  int maxwidth=Math.max((int)(Core.graphics.getWidth() / Scl.scl(470)),1);\n  int i=0;\n  boolean any=false;\n  for (  SaveSlot slot : array) {\n    if (slot.isHidden())     continue;\n    any=true;\n    TextButton button=new TextButton(\"\",Styles.cleart);\n    button.getLabel().remove();\n    button.clearChildren();\n    button.defaults().left();\n    button.table(title -> {\n      title.add(\"[accent]\" + slot.getName()).left().growX().width(230f).wrap();\n      title.table(t -> {\n        t.right();\n        t.defaults().size(40f);\n        t.button(Icon.save,Styles.emptytogglei,() -> {\n          slot.setAutosave(!slot.isAutosave());\n        }\n).checked(slot.isAutosave()).right();\n        t.button(Icon.trash,Styles.emptyi,() -> {\n          ui.showConfirm(\"@confirm\",\"@save.delete.confirm\",() -> {\n            slot.delete();\n            setup();\n          }\n);\n        }\n).right();\n        t.button(Icon.pencil,Styles.emptyi,() -> {\n          ui.showTextInput(\"@save.rename\",\"@save.rename.text\",slot.getName(),text -> {\n            slot.setName(text);\n            setup();\n          }\n);\n        }\n).right();\n        t.button(Icon.export,Styles.emptyi,() -> platform.export(\"save-\" + slot.getName(),saveExtension,slot::exportFile)).right();\n      }\n).padRight(-10).growX();\n    }\n).growX().colspan(2);\n    button.row();\n    String color=\"[lightgray]\";\n    TextureRegion def=Core.atlas.find(\"nomap\");\n    button.left().add(new BorderImage(def,4f)).update(im -> {\n      TextureRegionDrawable draw=(TextureRegionDrawable)im.getDrawable();\n      if (draw.getRegion().texture.isDisposed()) {\n        draw.setRegion(def);\n      }\n      Texture text=slot.previewTexture();\n      if (draw.getRegion() == def && text != null) {\n        draw.setRegion(new TextureRegion(text));\n      }\n      im.setScaling(Scaling.fit);\n    }\n).left().size(160f).padRight(6);\n    button.table(meta -> {\n      meta.left().top();\n      meta.defaults().padBottom(-2).left().width(290f);\n      meta.row();\n      meta.labelWrap(Core.bundle.format(\"save.map\",color + (slot.getMap() == null ? Core.bundle.get(\"unknown\") : slot.getMap().name())));\n      meta.row();\n      meta.labelWrap(slot.mode().toString() + \" /\" + color+ \" \"+ Core.bundle.format(\"save.wave\",color + slot.getWave()));\n      meta.row();\n      meta.labelWrap(() -> Core.bundle.format(\"save.autosave\",color + Core.bundle.get(slot.isAutosave() ? \"on\" : \"off\")));\n      meta.row();\n      meta.labelWrap(() -> Core.bundle.format(\"save.playtime\",color + slot.getPlayTime()));\n      meta.row();\n      meta.labelWrap(color + slot.getDate());\n      meta.row();\n    }\n).left().growX().width(250f);\n    modifyButton(button,slot);\n    slots.add(button).uniformX().fillX().pad(4).padRight(8f).margin(10f);\n    if (++i % maxwidth == 0) {\n      slots.row();\n    }\n  }\n  if (!any) {\n    slots.button(\"@save.none\",() -> {\n    }\n).disabled(true).fillX().margin(20f).minWidth(340f).height(80f).pad(4f);\n  }\n  cont.add(pane);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 666,
      "astHeight" : 28
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Seq<SaveSlot> array=control.saves.getSaveSlots();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "mindustry.game.Saves"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 53,
    "startColumnNumber" : 30,
    "endLineNumber" : 53,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ ]
}