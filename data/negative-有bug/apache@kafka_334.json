{
  "id" : 334,
  "expression" : "actual",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/clients/src/test/java/org/apache/kafka/common/security/oauthbearer/secured/OAuthBearerTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "actual",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 84,
      "startColumnNumber" : 19,
      "endLineNumber" : 84,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 84,
        "startColumnNumber" : 19,
        "endLineNumber" : 84,
        "endColumnNumber" : 53
      },
      "nodeContext" : "actual.contains(expectedSubstring)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 201,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 35
      },
      "nodeContext" : "assertTrue(actual.contains(expectedSubstring),String.format(\"Expected exception message (\\\"%s\\\") to contain substring (\\\"%s\\\")\",actual,expectedSubstring))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 202,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 36
      },
      "nodeContext" : "assertTrue(actual.contains(expectedSubstring),String.format(\"Expected exception message (\\\"%s\\\") to contain substring (\\\"%s\\\")\",actual,expectedSubstring));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 218,
        "startLineNumber" : 83,
        "startColumnNumber" : 87,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertTrue(actual.contains(expectedSubstring),String.format(\"Expected exception message (\\\"%s\\\") to contain substring (\\\"%s\\\")\",actual,expectedSubstring));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 301,
        "startLineNumber" : 83,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected void assertErrorMessageContains(String actual,String expectedSubstring){\n  assertTrue(actual.contains(expectedSubstring),String.format(\"Expected exception message (\\\"%s\\\") to contain substring (\\\"%s\\\")\",actual,expectedSubstring));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 26,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 84,
        "startColumnNumber" : 19,
        "endLineNumber" : 84,
        "endColumnNumber" : 53
      },
      "nodeContext" : "actual.contains(expectedSubstring)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "actual",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 86,
      "startColumnNumber" : 16,
      "endLineNumber" : 86,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 85,
        "startColumnNumber" : 12,
        "endLineNumber" : 87,
        "endColumnNumber" : 34
      },
      "nodeContext" : "String.format(\"Expected exception message (\\\"%s\\\") to contain substring (\\\"%s\\\")\",actual,expectedSubstring)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 201,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 35
      },
      "nodeContext" : "assertTrue(actual.contains(expectedSubstring),String.format(\"Expected exception message (\\\"%s\\\") to contain substring (\\\"%s\\\")\",actual,expectedSubstring))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 202,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 36
      },
      "nodeContext" : "assertTrue(actual.contains(expectedSubstring),String.format(\"Expected exception message (\\\"%s\\\") to contain substring (\\\"%s\\\")\",actual,expectedSubstring));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 218,
        "startLineNumber" : 83,
        "startColumnNumber" : 87,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertTrue(actual.contains(expectedSubstring),String.format(\"Expected exception message (\\\"%s\\\") to contain substring (\\\"%s\\\")\",actual,expectedSubstring));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 301,
        "startLineNumber" : 83,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected void assertErrorMessageContains(String actual,String expectedSubstring){\n  assertTrue(actual.contains(expectedSubstring),String.format(\"Expected exception message (\\\"%s\\\") to contain substring (\\\"%s\\\")\",actual,expectedSubstring));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 26,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 85,
        "startColumnNumber" : 12,
        "endLineNumber" : 87,
        "endColumnNumber" : 34
      },
      "nodeContext" : "String.format(\"Expected exception message (\\\"%s\\\") to contain substring (\\\"%s\\\")\",actual,expectedSubstring)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 84,
    "startColumnNumber" : 19,
    "endLineNumber" : 84,
    "endColumnNumber" : 25
  }, {
    "charLength" : 6,
    "startLineNumber" : 86,
    "startColumnNumber" : 16,
    "endLineNumber" : 86,
    "endColumnNumber" : 22
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}