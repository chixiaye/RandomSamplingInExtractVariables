{
  "id" : 256,
  "expression" : "((oldArtifact.equals(linkedLibrary)) ? \" (the library compiled for this target)\" : \"\")",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/main/java/com/google/devtools/build/lib/rules/android/NativeLibs.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "((oldArtifact.equals(linkedLibrary)) ? \" (the library compiled for this target)\" : \"\")",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 126,
      "startLineNumber" : 218,
      "startColumnNumber" : 18,
      "endLineNumber" : 220,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 9,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 486,
        "startLineNumber" : 211,
        "startColumnNumber" : 12,
        "endLineNumber" : 220,
        "endColumnNumber" : 25
      },
      "nodeContext" : "\"Each library in the transitive closure must have a unique basename to avoid \" + \"name collisions when packaged into an apk, but two libraries have the basename '\" + basename + \"': \"+ artifact.prettyPrint()+ \" and \"+ oldArtifact.prettyPrint()+ ((oldArtifact.equals(linkedLibrary)) ? \" (the library compiled for this target)\" : \"\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 522,
        "startLineNumber" : 210,
        "startColumnNumber" : 8,
        "endLineNumber" : 220,
        "endColumnNumber" : 26
      },
      "nodeContext" : "ruleContext.ruleError(\"Each library in the transitive closure must have a unique basename to avoid \" + \"name collisions when packaged into an apk, but two libraries have the basename '\" + basename + \"': \"+ artifact.prettyPrint()+ \" and \"+ oldArtifact.prettyPrint()+ ((oldArtifact.equals(linkedLibrary)) ? \" (the library compiled for this target)\" : \"\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 523,
        "startLineNumber" : 210,
        "startColumnNumber" : 8,
        "endLineNumber" : 220,
        "endColumnNumber" : 27
      },
      "nodeContext" : "ruleContext.ruleError(\"Each library in the transitive closure must have a unique basename to avoid \" + \"name collisions when packaged into an apk, but two libraries have the basename '\" + basename + \"': \"+ artifact.prettyPrint()+ \" and \"+ oldArtifact.prettyPrint()+ ((oldArtifact.equals(linkedLibrary)) ? \" (the library compiled for this target)\" : \"\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 26,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 662,
        "startLineNumber" : 207,
        "startColumnNumber" : 31,
        "endLineNumber" : 221,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  ruleContext.ruleError(\"Each library in the transitive closure must have a unique basename to avoid \" + \"name collisions when packaged into an apk, but two libraries have the basename '\" + basename + \"': \"+ artifact.prettyPrint()+ \" and \"+ oldArtifact.prettyPrint()+ ((oldArtifact.equals(linkedLibrary)) ? \" (the library compiled for this target)\" : \"\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 27,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 687,
        "startLineNumber" : 207,
        "startColumnNumber" : 6,
        "endLineNumber" : 221,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (oldArtifact != null) {\n  ruleContext.ruleError(\"Each library in the transitive closure must have a unique basename to avoid \" + \"name collisions when packaged into an apk, but two libraries have the basename '\" + basename + \"': \"+ artifact.prettyPrint()+ \" and \"+ oldArtifact.prettyPrint()+ ((oldArtifact.equals(linkedLibrary)) ? \" (the library compiled for this target)\" : \"\"));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 31,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1792,
        "startLineNumber" : 180,
        "startColumnNumber" : 57,
        "endLineNumber" : 222,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (linkerInput.getPicStaticLibrary() != null || linkerInput.getStaticLibrary() != null) {\n    continue;\n  }\n  Artifact artifact=null;\n  if (linkerInput.getInterfaceLibrary() != null) {\n    if (linkerInput.getResolvedSymlinkInterfaceLibrary() != null) {\n      artifact=linkerInput.getResolvedSymlinkInterfaceLibrary();\n    }\n else {\n      artifact=linkerInput.getInterfaceLibrary();\n    }\n  }\n else {\n    if (linkerInput.getResolvedSymlinkDynamicLibrary() != null) {\n      artifact=linkerInput.getResolvedSymlinkDynamicLibrary();\n    }\n else {\n      artifact=linkerInput.getDynamicLibrary();\n    }\n  }\n  Preconditions.checkNotNull(artifact);\n  if (!artifacts.add(artifact)) {\n    continue;\n  }\n  String basename=artifact.getExecPath().getBaseName();\n  Artifact oldArtifact=basenames.put(basename,artifact);\n  if (oldArtifact != null) {\n    ruleContext.ruleError(\"Each library in the transitive closure must have a unique basename to avoid \" + \"name collisions when packaged into an apk, but two libraries have the basename '\" + basename + \"': \"+ artifact.prettyPrint()+ \" and \"+ oldArtifact.prettyPrint()+ ((oldArtifact.equals(linkedLibrary)) ? \" (the library compiled for this target)\" : \"\"));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1845,
        "startLineNumber" : 180,
        "startColumnNumber" : 4,
        "endLineNumber" : 222,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (LibraryToLink linkerInput : libraries.toList()) {\n  if (linkerInput.getPicStaticLibrary() != null || linkerInput.getStaticLibrary() != null) {\n    continue;\n  }\n  Artifact artifact=null;\n  if (linkerInput.getInterfaceLibrary() != null) {\n    if (linkerInput.getResolvedSymlinkInterfaceLibrary() != null) {\n      artifact=linkerInput.getResolvedSymlinkInterfaceLibrary();\n    }\n else {\n      artifact=linkerInput.getInterfaceLibrary();\n    }\n  }\n else {\n    if (linkerInput.getResolvedSymlinkDynamicLibrary() != null) {\n      artifact=linkerInput.getResolvedSymlinkDynamicLibrary();\n    }\n else {\n      artifact=linkerInput.getDynamicLibrary();\n    }\n  }\n  Preconditions.checkNotNull(artifact);\n  if (!artifacts.add(artifact)) {\n    continue;\n  }\n  String basename=artifact.getExecPath().getBaseName();\n  Artifact oldArtifact=basenames.put(basename,artifact);\n  if (oldArtifact != null) {\n    ruleContext.ruleError(\"Each library in the transitive closure must have a unique basename to avoid \" + \"name collisions when packaged into an apk, but two libraries have the basename '\" + basename + \"': \"+ artifact.prettyPrint()+ \" and \"+ oldArtifact.prettyPrint()+ ((oldArtifact.equals(linkedLibrary)) ? \" (the library compiled for this target)\" : \"\"));\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 141,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2097,
        "startLineNumber" : 174,
        "startColumnNumber" : 91,
        "endLineNumber" : 224,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Map<String,Artifact> basenames=new HashMap<>();\n  Set<Artifact> artifacts=new HashSet<>();\n  if (linkedLibrary != null) {\n    basenames.put(linkedLibrary.getExecPath().getBaseName(),linkedLibrary);\n  }\n  for (  LibraryToLink linkerInput : libraries.toList()) {\n    if (linkerInput.getPicStaticLibrary() != null || linkerInput.getStaticLibrary() != null) {\n      continue;\n    }\n    Artifact artifact=null;\n    if (linkerInput.getInterfaceLibrary() != null) {\n      if (linkerInput.getResolvedSymlinkInterfaceLibrary() != null) {\n        artifact=linkerInput.getResolvedSymlinkInterfaceLibrary();\n      }\n else {\n        artifact=linkerInput.getInterfaceLibrary();\n      }\n    }\n else {\n      if (linkerInput.getResolvedSymlinkDynamicLibrary() != null) {\n        artifact=linkerInput.getResolvedSymlinkDynamicLibrary();\n      }\n else {\n        artifact=linkerInput.getDynamicLibrary();\n      }\n    }\n    Preconditions.checkNotNull(artifact);\n    if (!artifacts.add(artifact)) {\n      continue;\n    }\n    String basename=artifact.getExecPath().getBaseName();\n    Artifact oldArtifact=basenames.put(basename,artifact);\n    if (oldArtifact != null) {\n      ruleContext.ruleError(\"Each library in the transitive closure must have a unique basename to avoid \" + \"name collisions when packaged into an apk, but two libraries have the basename '\" + basename + \"': \"+ artifact.prettyPrint()+ \" and \"+ oldArtifact.prettyPrint()+ ((oldArtifact.equals(linkedLibrary)) ? \" (the library compiled for this target)\" : \"\"));\n    }\n  }\n  return artifacts;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 185,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2251,
        "startLineNumber" : 173,
        "startColumnNumber" : 2,
        "endLineNumber" : 224,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static Iterable<Artifact> filterUniqueSharedLibraries(RuleContext ruleContext,Artifact linkedLibrary,NestedSet<LibraryToLink> libraries){\n  Map<String,Artifact> basenames=new HashMap<>();\n  Set<Artifact> artifacts=new HashSet<>();\n  if (linkedLibrary != null) {\n    basenames.put(linkedLibrary.getExecPath().getBaseName(),linkedLibrary);\n  }\n  for (  LibraryToLink linkerInput : libraries.toList()) {\n    if (linkerInput.getPicStaticLibrary() != null || linkerInput.getStaticLibrary() != null) {\n      continue;\n    }\n    Artifact artifact=null;\n    if (linkerInput.getInterfaceLibrary() != null) {\n      if (linkerInput.getResolvedSymlinkInterfaceLibrary() != null) {\n        artifact=linkerInput.getResolvedSymlinkInterfaceLibrary();\n      }\n else {\n        artifact=linkerInput.getInterfaceLibrary();\n      }\n    }\n else {\n      if (linkerInput.getResolvedSymlinkDynamicLibrary() != null) {\n        artifact=linkerInput.getResolvedSymlinkDynamicLibrary();\n      }\n else {\n        artifact=linkerInput.getDynamicLibrary();\n      }\n    }\n    Preconditions.checkNotNull(artifact);\n    if (!artifacts.add(artifact)) {\n      continue;\n    }\n    String basename=artifact.getExecPath().getBaseName();\n    Artifact oldArtifact=basenames.put(basename,artifact);\n    if (oldArtifact != null) {\n      ruleContext.ruleError(\"Each library in the transitive closure must have a unique basename to avoid \" + \"name collisions when packaged into an apk, but two libraries have the basename '\" + basename + \"': \"+ artifact.prettyPrint()+ \" and \"+ oldArtifact.prettyPrint()+ ((oldArtifact.equals(linkedLibrary)) ? \" (the library compiled for this target)\" : \"\"));\n    }\n  }\n  return artifacts;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 209,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 486,
        "startLineNumber" : 211,
        "startColumnNumber" : 12,
        "endLineNumber" : 220,
        "endColumnNumber" : 25
      },
      "nodeContext" : "\"Each library in the transitive closure must have a unique basename to avoid \" + \"name collisions when packaged into an apk, but two libraries have the basename '\" + basename + \"': \"+ artifact.prettyPrint()+ \" and \"+ oldArtifact.prettyPrint()+ ((oldArtifact.equals(linkedLibrary)) ? \" (the library compiled for this target)\" : \"\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 22,
      "astHeight" : 6
    },
    "tokenLength" : 7,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 126,
    "startLineNumber" : 218,
    "startColumnNumber" : 18,
    "endLineNumber" : 220,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ ]
}