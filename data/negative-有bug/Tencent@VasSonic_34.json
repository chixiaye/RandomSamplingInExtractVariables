{
  "id" : 34,
  "expression" : "\") separateAndSaveCache: finish separate, cost \"",
  "projectName" : "Tencent@VasSonic",
  "commitID" : "a3e09c156adb93b4ebe6139def465c519069aa9e",
  "filePath" : "/sonic-android/sdk/src/main/java/com/tencent/sonic/sdk/SonicSession.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\") separateAndSaveCache: finish separate, cost \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 48,
      "startLineNumber" : 832,
      "startColumnNumber" : 57,
      "endLineNumber" : 832,
      "endColumnNumber" : 105
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 118,
        "startLineNumber" : 832,
        "startColumnNumber" : 38,
        "endLineNumber" : 832,
        "endColumnNumber" : 156
      },
      "nodeContext" : "\"session(\" + sId + \") separateAndSaveCache: finish separate, cost \"+ (System.currentTimeMillis() - startTime)+ \"ms.\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 832,
        "startColumnNumber" : 8,
        "endLineNumber" : 832,
        "endColumnNumber" : 157
      },
      "nodeContext" : "SonicUtils.log(TAG,Log.INFO,\"session(\" + sId + \") separateAndSaveCache: finish separate, cost \"+ (System.currentTimeMillis() - startTime)+ \"ms.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 150,
        "startLineNumber" : 832,
        "startColumnNumber" : 8,
        "endLineNumber" : 832,
        "endColumnNumber" : 158
      },
      "nodeContext" : "SonicUtils.log(TAG,Log.INFO,\"session(\" + sId + \") separateAndSaveCache: finish separate, cost \"+ (System.currentTimeMillis() - startTime)+ \"ms.\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4575,
        "startLineNumber" : 766,
        "startColumnNumber" : 59,
        "endLineNumber" : 833,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (TextUtils.isEmpty(htmlString) || null == sessionConnection) {\n    SonicUtils.log(TAG,Log.ERROR,\"session(\" + sId + \") separateAndSaveCache error:htmlString is null or sessionConnection is null.\");\n    return;\n  }\n  long startTime=System.currentTimeMillis();\n  final String strictMode=sessionConnection.getResponseHeaderField(SonicSessionConnection.CUSTOM_HEAD_FILED_STRICT_MODE);\n  final String eTag=sessionConnection.getResponseHeaderField(SonicSessionConnection.CUSTOM_HEAD_FILED_ETAG);\n  String cspContent=sessionConnection.getResponseHeaderField(SonicSessionConnection.HTTP_HEAD_CSP);\n  String cspReportOnlyContent=sessionConnection.getResponseHeaderField(SonicSessionConnection.HTTP_HEAD_CSP_REPORT_ONLY);\n  if (\"false\".equalsIgnoreCase(strictMode)) {\n    SonicDataHelper.SessionData sessionData=SonicDataHelper.getSessionData(id);\n    String templateChange=sessionConnection.getResponseHeaderField(SonicSessionConnection.CUSTOM_HEAD_FILED_TEMPLATE_CHANGE);\n    if (SonicUtils.shouldLog(Log.INFO)) {\n      SonicUtils.log(TAG,Log.INFO,\"session(\" + sId + \") handleFlow_Connection:templateChange = \"+ templateChange+ \", strict mode: \"+ strictMode);\n    }\n    boolean error=false;\n    if (\"false\".equalsIgnoreCase(templateChange) || \"0\".equals(templateChange)) {\n      SonicUtils.log(TAG,Log.ERROR,\"session(\" + sId + \") handleFlow_Connection: data update without strict mode!\");\n      error=true;\n    }\n else {\n      if (!TextUtils.isEmpty(eTag)) {\n        if (!eTag.equalsIgnoreCase(sessionData.etag)) {\n          if (SonicUtils.saveSessionFiles(id,htmlString,\"\",\"\")) {\n            long htmlSize=new File(SonicFileUtils.getSonicHtmlPath(id)).length();\n            SonicUtils.saveSonicData(id,eTag,\"\",SonicUtils.getSHA1(htmlString),htmlSize,cspContent,cspReportOnlyContent);\n          }\n        }\n else {\n          SonicUtils.log(TAG,Log.INFO,\"session(\" + sId + \") handleFlow_Connection: eTag is the same as last eTag!\");\n        }\n      }\n else {\n        SonicUtils.log(TAG,Log.ERROR,\"session(\" + sId + \") handleFlow_Connection:no eTag field and eTag is \"+ eTag+ \".\");\n        error=true;\n      }\n    }\n    if (error) {\n      SonicUtils.log(TAG,Log.ERROR,\"session(\" + sId + \") separateAndSaveCache without strict mode: save session files fail, \"+ \"last eTag: (\"+ sessionData.etag+ \")\");\n      SonicEngine.getInstance().getRuntime().notifyError(sessionClient,srcUrl,SonicConstants.ERROR_CODE_WRITE_FILE_FAIL);\n    }\n  }\n else {\n    final String templateTag=sessionConnection.getResponseHeaderField(SonicSessionConnection.CUSTOM_HEAD_FILED_TEMPLATE_TAG);\n    SonicUtils.log(TAG,Log.INFO,\"session(\" + sId + \") separateAndSaveCache: start separate, eTag = \"+ eTag+ \", templateTag = \"+ templateTag);\n    StringBuilder templateStringBuilder=new StringBuilder();\n    StringBuilder dataStringBuilder=new StringBuilder();\n    if (SonicUtils.separateTemplateAndData(id,htmlString,templateStringBuilder,dataStringBuilder)) {\n      if (SonicUtils.saveSessionFiles(id,htmlString,templateStringBuilder.toString(),dataStringBuilder.toString())) {\n        long htmlSize=new File(SonicFileUtils.getSonicHtmlPath(id)).length();\n        SonicUtils.saveSonicData(id,eTag,templateTag,SonicUtils.getSHA1(htmlString),htmlSize,cspContent,cspReportOnlyContent);\n      }\n else {\n        SonicUtils.log(TAG,Log.ERROR,\"session(\" + sId + \") separateAndSaveCache: save session files fail.\");\n        SonicEngine.getInstance().getRuntime().notifyError(sessionClient,srcUrl,SonicConstants.ERROR_CODE_WRITE_FILE_FAIL);\n      }\n    }\n else {\n      SonicUtils.log(TAG,Log.ERROR,\"session(\" + sId + \") separateAndSaveCache: save separate template and data files fail.\");\n      SonicEngine.getInstance().getRuntime().notifyError(sessionClient,srcUrl,SonicConstants.ERROR_CODE_SPLIT_HTML_FAIL);\n    }\n  }\n  SonicUtils.log(TAG,Log.INFO,\"session(\" + sId + \") separateAndSaveCache: finish separate, cost \"+ (System.currentTimeMillis() - startTime)+ \"ms.\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 442,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4630,
        "startLineNumber" : 766,
        "startColumnNumber" : 4,
        "endLineNumber" : 833,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected void separateAndSaveCache(String htmlString){\n  if (TextUtils.isEmpty(htmlString) || null == sessionConnection) {\n    SonicUtils.log(TAG,Log.ERROR,\"session(\" + sId + \") separateAndSaveCache error:htmlString is null or sessionConnection is null.\");\n    return;\n  }\n  long startTime=System.currentTimeMillis();\n  final String strictMode=sessionConnection.getResponseHeaderField(SonicSessionConnection.CUSTOM_HEAD_FILED_STRICT_MODE);\n  final String eTag=sessionConnection.getResponseHeaderField(SonicSessionConnection.CUSTOM_HEAD_FILED_ETAG);\n  String cspContent=sessionConnection.getResponseHeaderField(SonicSessionConnection.HTTP_HEAD_CSP);\n  String cspReportOnlyContent=sessionConnection.getResponseHeaderField(SonicSessionConnection.HTTP_HEAD_CSP_REPORT_ONLY);\n  if (\"false\".equalsIgnoreCase(strictMode)) {\n    SonicDataHelper.SessionData sessionData=SonicDataHelper.getSessionData(id);\n    String templateChange=sessionConnection.getResponseHeaderField(SonicSessionConnection.CUSTOM_HEAD_FILED_TEMPLATE_CHANGE);\n    if (SonicUtils.shouldLog(Log.INFO)) {\n      SonicUtils.log(TAG,Log.INFO,\"session(\" + sId + \") handleFlow_Connection:templateChange = \"+ templateChange+ \", strict mode: \"+ strictMode);\n    }\n    boolean error=false;\n    if (\"false\".equalsIgnoreCase(templateChange) || \"0\".equals(templateChange)) {\n      SonicUtils.log(TAG,Log.ERROR,\"session(\" + sId + \") handleFlow_Connection: data update without strict mode!\");\n      error=true;\n    }\n else {\n      if (!TextUtils.isEmpty(eTag)) {\n        if (!eTag.equalsIgnoreCase(sessionData.etag)) {\n          if (SonicUtils.saveSessionFiles(id,htmlString,\"\",\"\")) {\n            long htmlSize=new File(SonicFileUtils.getSonicHtmlPath(id)).length();\n            SonicUtils.saveSonicData(id,eTag,\"\",SonicUtils.getSHA1(htmlString),htmlSize,cspContent,cspReportOnlyContent);\n          }\n        }\n else {\n          SonicUtils.log(TAG,Log.INFO,\"session(\" + sId + \") handleFlow_Connection: eTag is the same as last eTag!\");\n        }\n      }\n else {\n        SonicUtils.log(TAG,Log.ERROR,\"session(\" + sId + \") handleFlow_Connection:no eTag field and eTag is \"+ eTag+ \".\");\n        error=true;\n      }\n    }\n    if (error) {\n      SonicUtils.log(TAG,Log.ERROR,\"session(\" + sId + \") separateAndSaveCache without strict mode: save session files fail, \"+ \"last eTag: (\"+ sessionData.etag+ \")\");\n      SonicEngine.getInstance().getRuntime().notifyError(sessionClient,srcUrl,SonicConstants.ERROR_CODE_WRITE_FILE_FAIL);\n    }\n  }\n else {\n    final String templateTag=sessionConnection.getResponseHeaderField(SonicSessionConnection.CUSTOM_HEAD_FILED_TEMPLATE_TAG);\n    SonicUtils.log(TAG,Log.INFO,\"session(\" + sId + \") separateAndSaveCache: start separate, eTag = \"+ eTag+ \", templateTag = \"+ templateTag);\n    StringBuilder templateStringBuilder=new StringBuilder();\n    StringBuilder dataStringBuilder=new StringBuilder();\n    if (SonicUtils.separateTemplateAndData(id,htmlString,templateStringBuilder,dataStringBuilder)) {\n      if (SonicUtils.saveSessionFiles(id,htmlString,templateStringBuilder.toString(),dataStringBuilder.toString())) {\n        long htmlSize=new File(SonicFileUtils.getSonicHtmlPath(id)).length();\n        SonicUtils.saveSonicData(id,eTag,templateTag,SonicUtils.getSHA1(htmlString),htmlSize,cspContent,cspReportOnlyContent);\n      }\n else {\n        SonicUtils.log(TAG,Log.ERROR,\"session(\" + sId + \") separateAndSaveCache: save session files fail.\");\n        SonicEngine.getInstance().getRuntime().notifyError(sessionClient,srcUrl,SonicConstants.ERROR_CODE_WRITE_FILE_FAIL);\n      }\n    }\n else {\n      SonicUtils.log(TAG,Log.ERROR,\"session(\" + sId + \") separateAndSaveCache: save separate template and data files fail.\");\n      SonicEngine.getInstance().getRuntime().notifyError(sessionClient,srcUrl,SonicConstants.ERROR_CODE_SPLIT_HTML_FAIL);\n    }\n  }\n  SonicUtils.log(TAG,Log.INFO,\"session(\" + sId + \") separateAndSaveCache: finish separate, cost \"+ (System.currentTimeMillis() - startTime)+ \"ms.\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 450,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 150,
        "startLineNumber" : 832,
        "startColumnNumber" : 8,
        "endLineNumber" : 832,
        "endColumnNumber" : 158
      },
      "nodeContext" : "SonicUtils.log(TAG,Log.INFO,\"session(\" + sId + \") separateAndSaveCache: finish separate, cost \"+ (System.currentTimeMillis() - startTime)+ \"ms.\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 48,
    "startLineNumber" : 832,
    "startColumnNumber" : 57,
    "endLineNumber" : 832,
    "endColumnNumber" : 105
  } ],
  "layoutRelationDataList" : [ ]
}