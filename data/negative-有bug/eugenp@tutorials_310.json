{
  "id" : 310,
  "expression" : "10000",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/java-numbers-2/src/test/java/com/baeldung/binarynumbers/BinaryNumbersUnitTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "10000",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 47,
      "startColumnNumber" : 87,
      "endLineNumber" : 47,
      "endColumnNumber" : 92
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 47,
        "startColumnNumber" : 44,
        "endLineNumber" : 47,
        "endColumnNumber" : 93
      },
      "nodeContext" : "binaryNumbers.substractBinaryNumber(11001,10000)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 94
      },
      "nodeContext" : "assertEquals(Integer.valueOf(1001),binaryNumbers.substractBinaryNumber(11001,10000))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 95
      },
      "nodeContext" : "assertEquals(Integer.valueOf(1001),binaryNumbers.substractBinaryNumber(11001,10000));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 303,
        "startLineNumber" : 45,
        "startColumnNumber" : 63,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertEquals(Integer.valueOf(1001),binaryNumbers.substractBinaryNumber(11001,10000));\n  assertEquals(Integer.valueOf(1101),binaryNumbers.substractBinaryNumber(10000,11101));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 373,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void given_twoBinaryNumber_then_returnSubtraction(){\n  assertEquals(Integer.valueOf(1001),binaryNumbers.substractBinaryNumber(11001,10000));\n  assertEquals(Integer.valueOf(1101),binaryNumbers.substractBinaryNumber(10000,11101));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 31,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 95
      },
      "nodeContext" : "assertEquals(Integer.valueOf(1001),binaryNumbers.substractBinaryNumber(11001,10000));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "10000",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 50,
      "startColumnNumber" : 80,
      "endLineNumber" : 50,
      "endColumnNumber" : 85
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 50,
        "startColumnNumber" : 44,
        "endLineNumber" : 50,
        "endColumnNumber" : 93
      },
      "nodeContext" : "binaryNumbers.substractBinaryNumber(10000,11101)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 94
      },
      "nodeContext" : "assertEquals(Integer.valueOf(1101),binaryNumbers.substractBinaryNumber(10000,11101))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 95
      },
      "nodeContext" : "assertEquals(Integer.valueOf(1101),binaryNumbers.substractBinaryNumber(10000,11101));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 303,
        "startLineNumber" : 45,
        "startColumnNumber" : 63,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertEquals(Integer.valueOf(1001),binaryNumbers.substractBinaryNumber(11001,10000));\n  assertEquals(Integer.valueOf(1101),binaryNumbers.substractBinaryNumber(10000,11101));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 373,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void given_twoBinaryNumber_then_returnSubtraction(){\n  assertEquals(Integer.valueOf(1001),binaryNumbers.substractBinaryNumber(11001,10000));\n  assertEquals(Integer.valueOf(1101),binaryNumbers.substractBinaryNumber(10000,11101));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 31,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 95
      },
      "nodeContext" : "assertEquals(Integer.valueOf(1101),binaryNumbers.substractBinaryNumber(10000,11101));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 47,
    "startColumnNumber" : 87,
    "endLineNumber" : 47,
    "endColumnNumber" : 92
  }, {
    "charLength" : 5,
    "startLineNumber" : 50,
    "startColumnNumber" : 80,
    "endLineNumber" : 50,
    "endColumnNumber" : 85
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}