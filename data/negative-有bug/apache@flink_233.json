{
  "id" : 233,
  "expression" : "\"Leader node has changed.\"",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-runtime/src/main/java/org/apache/flink/runtime/leaderretrieval/ZooKeeperLeaderRetrievalDriver.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Leader node has changed.\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 124,
      "startColumnNumber" : 22,
      "endLineNumber" : 124,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 124,
        "startColumnNumber" : 12,
        "endLineNumber" : 124,
        "endColumnNumber" : 49
      },
      "nodeContext" : "LOG.debug(\"Leader node has changed.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 124,
        "startColumnNumber" : 12,
        "endLineNumber" : 124,
        "endColumnNumber" : 50
      },
      "nodeContext" : "LOG.debug(\"Leader node has changed.\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 839,
        "startLineNumber" : 123,
        "startColumnNumber" : 12,
        "endLineNumber" : 142,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  LOG.debug(\"Leader node has changed.\");\n  final ChildData childData=cache.getCurrentData(connectionInformationPath);\n  if (childData != null) {\n    final byte[] data=childData.getData();\n    if (data != null && data.length > 0) {\n      ByteArrayInputStream bais=new ByteArrayInputStream(data);\n      ObjectInputStream ois=new ObjectInputStream(bais);\n      final String leaderAddress=ois.readUTF();\n      final UUID leaderSessionID=(UUID)ois.readObject();\n      leaderRetrievalEventHandler.notifyLeaderAddress(LeaderInformation.known(leaderSessionID,leaderAddress));\n      return;\n    }\n  }\n  notifyNoLeader();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 94,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1061,
        "startLineNumber" : 123,
        "startColumnNumber" : 8,
        "endLineNumber" : 146,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  LOG.debug(\"Leader node has changed.\");\n  final ChildData childData=cache.getCurrentData(connectionInformationPath);\n  if (childData != null) {\n    final byte[] data=childData.getData();\n    if (data != null && data.length > 0) {\n      ByteArrayInputStream bais=new ByteArrayInputStream(data);\n      ObjectInputStream ois=new ObjectInputStream(bais);\n      final String leaderAddress=ois.readUTF();\n      final UUID leaderSessionID=(UUID)ois.readObject();\n      leaderRetrievalEventHandler.notifyLeaderAddress(LeaderInformation.known(leaderSessionID,leaderAddress));\n      return;\n    }\n  }\n  notifyNoLeader();\n}\n catch (Exception e) {\n  fatalErrorHandler.onFatalError(new LeaderRetrievalException(\"Could not handle node changed event.\",e));\n  ExceptionUtils.checkInterrupted(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 115,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1077,
        "startLineNumber" : 122,
        "startColumnNumber" : 58,
        "endLineNumber" : 147,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    LOG.debug(\"Leader node has changed.\");\n    final ChildData childData=cache.getCurrentData(connectionInformationPath);\n    if (childData != null) {\n      final byte[] data=childData.getData();\n      if (data != null && data.length > 0) {\n        ByteArrayInputStream bais=new ByteArrayInputStream(data);\n        ObjectInputStream ois=new ObjectInputStream(bais);\n        final String leaderAddress=ois.readUTF();\n        final UUID leaderSessionID=(UUID)ois.readObject();\n        leaderRetrievalEventHandler.notifyLeaderAddress(LeaderInformation.known(leaderSessionID,leaderAddress));\n        return;\n      }\n    }\n    notifyNoLeader();\n  }\n catch (  Exception e) {\n    fatalErrorHandler.onFatalError(new LeaderRetrievalException(\"Could not handle node changed event.\",e));\n    ExceptionUtils.checkInterrupted(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 116,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1131,
        "startLineNumber" : 122,
        "startColumnNumber" : 4,
        "endLineNumber" : 147,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void retrieveLeaderInformationFromZooKeeper(){\n  try {\n    LOG.debug(\"Leader node has changed.\");\n    final ChildData childData=cache.getCurrentData(connectionInformationPath);\n    if (childData != null) {\n      final byte[] data=childData.getData();\n      if (data != null && data.length > 0) {\n        ByteArrayInputStream bais=new ByteArrayInputStream(data);\n        ObjectInputStream ois=new ObjectInputStream(bais);\n        final String leaderAddress=ois.readUTF();\n        final UUID leaderSessionID=(UUID)ois.readObject();\n        leaderRetrievalEventHandler.notifyLeaderAddress(LeaderInformation.known(leaderSessionID,leaderAddress));\n        return;\n      }\n    }\n    notifyNoLeader();\n  }\n catch (  Exception e) {\n    fatalErrorHandler.onFatalError(new LeaderRetrievalException(\"Could not handle node changed event.\",e));\n    ExceptionUtils.checkInterrupted(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 120,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 124,
        "startColumnNumber" : 12,
        "endLineNumber" : 124,
        "endColumnNumber" : 50
      },
      "nodeContext" : "LOG.debug(\"Leader node has changed.\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 26,
    "startLineNumber" : 124,
    "startColumnNumber" : 22,
    "endLineNumber" : 124,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ ]
}