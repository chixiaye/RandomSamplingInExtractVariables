{
  "id" : 130,
  "expression" : "ZooDefs.OpCode.setACL",
  "projectName" : "apache@zookeeper",
  "commitID" : "c6639c9842973a7954c8baa412d6825cb833d51f",
  "filePath" : "/src/java/main/org/apache/zookeeper/ZooKeeper.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ZooDefs.OpCode.setACL",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 902,
      "startColumnNumber" : 18,
      "endLineNumber" : 902,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 902,
        "startColumnNumber" : 8,
        "endLineNumber" : 902,
        "endColumnNumber" : 40
      },
      "nodeContext" : "h.setType(ZooDefs.OpCode.setACL)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 902,
        "startColumnNumber" : 8,
        "endLineNumber" : 902,
        "endColumnNumber" : 41
      },
      "nodeContext" : "h.setType(ZooDefs.OpCode.setACL);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 647,
        "startLineNumber" : 900,
        "startColumnNumber" : 57,
        "endLineNumber" : 916,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  RequestHeader h=new RequestHeader();\n  h.setType(ZooDefs.OpCode.setACL);\n  SetACLRequest request=new SetACLRequest();\n  request.setPath(path);\n  if (acl != null && acl.size() == 0) {\n    throw new KeeperException.InvalidACLException();\n  }\n  request.setAcl(acl);\n  request.setVersion(version);\n  SetACLResponse response=new SetACLResponse();\n  ReplyHeader r=cnxn.submitRequest(h,request,response,null);\n  if (r.getErr() != 0) {\n    throw KeeperException.create(KeeperException.Code.get(r.getErr()));\n  }\n  return response.getStat();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1610,
        "startLineNumber" : 880,
        "startColumnNumber" : 4,
        "endLineNumber" : 916,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Set the ACL for the node of the given path if such a node exists and the given version matches the version of the node. Return the stat of the node. <p> A KeeperException with error code KeeperException.NoNode will be thrown if no node with the given path exists. <p> A KeeperException with error code KeeperException.BadVersion will be thrown if the given version does not match the node's version.\n * @param path\n * @param acl\n * @param version\n * @return the stat of the node.\n * @throws InterruptedException If the server transaction is interrupted.\n * @throws KeeperException If the server signals an error with a non-zero error code.\n * @throws org.apache.zookeeper.KeeperException.InvalidACLException If the acl is invalide.\n */\npublic Stat setACL(String path,List<ACL> acl,int version) throws KeeperException, InterruptedException {\n  RequestHeader h=new RequestHeader();\n  h.setType(ZooDefs.OpCode.setACL);\n  SetACLRequest request=new SetACLRequest();\n  request.setPath(path);\n  if (acl != null && acl.size() == 0) {\n    throw new KeeperException.InvalidACLException();\n  }\n  request.setAcl(acl);\n  request.setVersion(version);\n  SetACLResponse response=new SetACLResponse();\n  ReplyHeader r=cnxn.submitRequest(h,request,response,null);\n  if (r.getErr() != 0) {\n    throw KeeperException.create(KeeperException.Code.get(r.getErr()));\n  }\n  return response.getStat();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 125,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 902,
        "startColumnNumber" : 8,
        "endLineNumber" : 902,
        "endColumnNumber" : 41
      },
      "nodeContext" : "h.setType(ZooDefs.OpCode.setACL);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 902,
    "startColumnNumber" : 18,
    "endLineNumber" : 902,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ ]
}