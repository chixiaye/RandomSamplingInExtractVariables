{
  "id" : 385,
  "expression" : "serviceName",
  "projectName" : "alibaba@nacos",
  "commitID" : "4e7346db1d6657ffe07c96bebd2d348229c2812f",
  "filePath" : "/naming/src/main/java/com/alibaba/nacos/naming/healthcheck/v2/processor/HealthCheckCommonV2.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "serviceName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 98,
      "startColumnNumber" : 58,
      "endLineNumber" : 98,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 98,
        "startColumnNumber" : 24,
        "endLineNumber" : 98,
        "endColumnNumber" : 70
      },
      "nodeContext" : "switchDomain.isHealthCheckEnabled(serviceName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 98,
        "startColumnNumber" : 24,
        "endLineNumber" : 99,
        "endColumnNumber" : 53
      },
      "nodeContext" : "switchDomain.isHealthCheckEnabled(serviceName) && !task.isCancelled() && distroMapper.responsible(serviceName)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 574,
        "startLineNumber" : 98,
        "startColumnNumber" : 20,
        "endLineNumber" : 104,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (switchDomain.isHealthCheckEnabled(serviceName) && !task.isCancelled() && distroMapper.responsible(serviceName)) {\n  healthStatusSynchronizer.instanceHealthStatusChange(true,task.getClient(),service,instance);\n  Loggers.EVT_LOG.info(\"serviceName: {} {POS} {IP-ENABLED} valid: {}:{}@{}, region: {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,UtilsAndCommons.LOCALHOST_SITE,msg);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 44,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 614,
        "startLineNumber" : 97,
        "startColumnNumber" : 93,
        "endLineNumber" : 105,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (switchDomain.isHealthCheckEnabled(serviceName) && !task.isCancelled() && distroMapper.responsible(serviceName)) {\n    healthStatusSynchronizer.instanceHealthStatusChange(true,task.getClient(),service,instance);\n    Loggers.EVT_LOG.info(\"serviceName: {} {POS} {IP-ENABLED} valid: {}:{}@{}, region: {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,UtilsAndCommons.LOCALHOST_SITE,msg);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 953,
        "startLineNumber" : 97,
        "startColumnNumber" : 16,
        "endLineNumber" : 108,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (instance.getOkCount().incrementAndGet() >= switchDomain.getCheckTimes()) {\n  if (switchDomain.isHealthCheckEnabled(serviceName) && !task.isCancelled() && distroMapper.responsible(serviceName)) {\n    healthStatusSynchronizer.instanceHealthStatusChange(true,task.getClient(),service,instance);\n    Loggers.EVT_LOG.info(\"serviceName: {} {POS} {IP-ENABLED} valid: {}:{}@{}, region: {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,UtilsAndCommons.LOCALHOST_SITE,msg);\n  }\n}\n else {\n  Loggers.EVT_LOG.info(\"serviceName: {} {OTHER} {IP-ENABLED} pre-valid: {}:{}@{} in {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,instance.getOkCount(),msg);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 75,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1244,
        "startLineNumber" : 94,
        "startColumnNumber" : 59,
        "endLineNumber" : 111,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String serviceName=service.getGroupedServiceName();\n  String clusterName=instance.getExtendDatum().get(CommonParams.CLUSTER_NAME).toString();\n  if (instance.getOkCount().incrementAndGet() >= switchDomain.getCheckTimes()) {\n    if (switchDomain.isHealthCheckEnabled(serviceName) && !task.isCancelled() && distroMapper.responsible(serviceName)) {\n      healthStatusSynchronizer.instanceHealthStatusChange(true,task.getClient(),service,instance);\n      Loggers.EVT_LOG.info(\"serviceName: {} {POS} {IP-ENABLED} valid: {}:{}@{}, region: {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,UtilsAndCommons.LOCALHOST_SITE,msg);\n    }\n  }\n else {\n    Loggers.EVT_LOG.info(\"serviceName: {} {OTHER} {IP-ENABLED} pre-valid: {}:{}@{} in {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,instance.getOkCount(),msg);\n  }\n  instance.resetFailCount();\n  instance.finishCheck();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1291,
        "startLineNumber" : 94,
        "startColumnNumber" : 12,
        "endLineNumber" : 111,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (null != instance && !instance.isHealthy()) {\n  String serviceName=service.getGroupedServiceName();\n  String clusterName=instance.getExtendDatum().get(CommonParams.CLUSTER_NAME).toString();\n  if (instance.getOkCount().incrementAndGet() >= switchDomain.getCheckTimes()) {\n    if (switchDomain.isHealthCheckEnabled(serviceName) && !task.isCancelled() && distroMapper.responsible(serviceName)) {\n      healthStatusSynchronizer.instanceHealthStatusChange(true,task.getClient(),service,instance);\n      Loggers.EVT_LOG.info(\"serviceName: {} {POS} {IP-ENABLED} valid: {}:{}@{}, region: {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,UtilsAndCommons.LOCALHOST_SITE,msg);\n    }\n  }\n else {\n    Loggers.EVT_LOG.info(\"serviceName: {} {OTHER} {IP-ENABLED} pre-valid: {}:{}@{} in {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,instance.getOkCount(),msg);\n  }\n  instance.resetFailCount();\n  instance.finishCheck();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 116,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1473,
        "startLineNumber" : 91,
        "startColumnNumber" : 12,
        "endLineNumber" : 112,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HealthCheckInstancePublishInfo instance=(HealthCheckInstancePublishInfo)task.getClient().getInstancePublishInfo(service);\n  if (null != instance && !instance.isHealthy()) {\n    String serviceName=service.getGroupedServiceName();\n    String clusterName=instance.getExtendDatum().get(CommonParams.CLUSTER_NAME).toString();\n    if (instance.getOkCount().incrementAndGet() >= switchDomain.getCheckTimes()) {\n      if (switchDomain.isHealthCheckEnabled(serviceName) && !task.isCancelled() && distroMapper.responsible(serviceName)) {\n        healthStatusSynchronizer.instanceHealthStatusChange(true,task.getClient(),service,instance);\n        Loggers.EVT_LOG.info(\"serviceName: {} {POS} {IP-ENABLED} valid: {}:{}@{}, region: {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,UtilsAndCommons.LOCALHOST_SITE,msg);\n      }\n    }\n else {\n      Loggers.EVT_LOG.info(\"serviceName: {} {OTHER} {IP-ENABLED} pre-valid: {}:{}@{} in {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,instance.getOkCount(),msg);\n    }\n    instance.resetFailCount();\n    instance.finishCheck();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 131,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1590,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 114,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  HealthCheckInstancePublishInfo instance=(HealthCheckInstancePublishInfo)task.getClient().getInstancePublishInfo(service);\n  if (null != instance && !instance.isHealthy()) {\n    String serviceName=service.getGroupedServiceName();\n    String clusterName=instance.getExtendDatum().get(CommonParams.CLUSTER_NAME).toString();\n    if (instance.getOkCount().incrementAndGet() >= switchDomain.getCheckTimes()) {\n      if (switchDomain.isHealthCheckEnabled(serviceName) && !task.isCancelled() && distroMapper.responsible(serviceName)) {\n        healthStatusSynchronizer.instanceHealthStatusChange(true,task.getClient(),service,instance);\n        Loggers.EVT_LOG.info(\"serviceName: {} {POS} {IP-ENABLED} valid: {}:{}@{}, region: {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,UtilsAndCommons.LOCALHOST_SITE,msg);\n      }\n    }\n else {\n      Loggers.EVT_LOG.info(\"serviceName: {} {OTHER} {IP-ENABLED} pre-valid: {}:{}@{} in {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,instance.getOkCount(),msg);\n    }\n    instance.resetFailCount();\n    instance.finishCheck();\n  }\n}\n catch (Throwable t) {\n  Loggers.SRV_LOG.error(\"[CHECK-OK] error when close check task.\",t);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 146,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1606,
        "startLineNumber" : 90,
        "startColumnNumber" : 77,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    HealthCheckInstancePublishInfo instance=(HealthCheckInstancePublishInfo)task.getClient().getInstancePublishInfo(service);\n    if (null != instance && !instance.isHealthy()) {\n      String serviceName=service.getGroupedServiceName();\n      String clusterName=instance.getExtendDatum().get(CommonParams.CLUSTER_NAME).toString();\n      if (instance.getOkCount().incrementAndGet() >= switchDomain.getCheckTimes()) {\n        if (switchDomain.isHealthCheckEnabled(serviceName) && !task.isCancelled() && distroMapper.responsible(serviceName)) {\n          healthStatusSynchronizer.instanceHealthStatusChange(true,task.getClient(),service,instance);\n          Loggers.EVT_LOG.info(\"serviceName: {} {POS} {IP-ENABLED} valid: {}:{}@{}, region: {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,UtilsAndCommons.LOCALHOST_SITE,msg);\n        }\n      }\n else {\n        Loggers.EVT_LOG.info(\"serviceName: {} {OTHER} {IP-ENABLED} pre-valid: {}:{}@{} in {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,instance.getOkCount(),msg);\n      }\n      instance.resetFailCount();\n      instance.finishCheck();\n    }\n  }\n catch (  Throwable t) {\n    Loggers.SRV_LOG.error(\"[CHECK-OK] error when close check task.\",t);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 147,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1828,
        "startLineNumber" : 83,
        "startColumnNumber" : 4,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Health check pass.\n * @param task    health check task\n * @param service service\n * @param msg     message\n */\npublic void checkOk(HealthCheckTaskV2 task,Service service,String msg){\n  try {\n    HealthCheckInstancePublishInfo instance=(HealthCheckInstancePublishInfo)task.getClient().getInstancePublishInfo(service);\n    if (null != instance && !instance.isHealthy()) {\n      String serviceName=service.getGroupedServiceName();\n      String clusterName=instance.getExtendDatum().get(CommonParams.CLUSTER_NAME).toString();\n      if (instance.getOkCount().incrementAndGet() >= switchDomain.getCheckTimes()) {\n        if (switchDomain.isHealthCheckEnabled(serviceName) && !task.isCancelled() && distroMapper.responsible(serviceName)) {\n          healthStatusSynchronizer.instanceHealthStatusChange(true,task.getClient(),service,instance);\n          Loggers.EVT_LOG.info(\"serviceName: {} {POS} {IP-ENABLED} valid: {}:{}@{}, region: {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,UtilsAndCommons.LOCALHOST_SITE,msg);\n        }\n      }\n else {\n        Loggers.EVT_LOG.info(\"serviceName: {} {OTHER} {IP-ENABLED} pre-valid: {}:{}@{} in {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,instance.getOkCount(),msg);\n      }\n      instance.resetFailCount();\n      instance.finishCheck();\n    }\n  }\n catch (  Throwable t) {\n    Loggers.SRV_LOG.error(\"[CHECK-OK] error when close check task.\",t);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 164,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 98,
        "startColumnNumber" : 24,
        "endLineNumber" : 98,
        "endColumnNumber" : 70
      },
      "nodeContext" : "switchDomain.isHealthCheckEnabled(serviceName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "serviceName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 99,
      "startColumnNumber" : 41,
      "endLineNumber" : 99,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 98,
        "startColumnNumber" : 97,
        "endLineNumber" : 99,
        "endColumnNumber" : 53
      },
      "nodeContext" : "distroMapper.responsible(serviceName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 98,
        "startColumnNumber" : 24,
        "endLineNumber" : 99,
        "endColumnNumber" : 53
      },
      "nodeContext" : "switchDomain.isHealthCheckEnabled(serviceName) && !task.isCancelled() && distroMapper.responsible(serviceName)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 574,
        "startLineNumber" : 98,
        "startColumnNumber" : 20,
        "endLineNumber" : 104,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (switchDomain.isHealthCheckEnabled(serviceName) && !task.isCancelled() && distroMapper.responsible(serviceName)) {\n  healthStatusSynchronizer.instanceHealthStatusChange(true,task.getClient(),service,instance);\n  Loggers.EVT_LOG.info(\"serviceName: {} {POS} {IP-ENABLED} valid: {}:{}@{}, region: {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,UtilsAndCommons.LOCALHOST_SITE,msg);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 44,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 614,
        "startLineNumber" : 97,
        "startColumnNumber" : 93,
        "endLineNumber" : 105,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (switchDomain.isHealthCheckEnabled(serviceName) && !task.isCancelled() && distroMapper.responsible(serviceName)) {\n    healthStatusSynchronizer.instanceHealthStatusChange(true,task.getClient(),service,instance);\n    Loggers.EVT_LOG.info(\"serviceName: {} {POS} {IP-ENABLED} valid: {}:{}@{}, region: {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,UtilsAndCommons.LOCALHOST_SITE,msg);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 953,
        "startLineNumber" : 97,
        "startColumnNumber" : 16,
        "endLineNumber" : 108,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (instance.getOkCount().incrementAndGet() >= switchDomain.getCheckTimes()) {\n  if (switchDomain.isHealthCheckEnabled(serviceName) && !task.isCancelled() && distroMapper.responsible(serviceName)) {\n    healthStatusSynchronizer.instanceHealthStatusChange(true,task.getClient(),service,instance);\n    Loggers.EVT_LOG.info(\"serviceName: {} {POS} {IP-ENABLED} valid: {}:{}@{}, region: {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,UtilsAndCommons.LOCALHOST_SITE,msg);\n  }\n}\n else {\n  Loggers.EVT_LOG.info(\"serviceName: {} {OTHER} {IP-ENABLED} pre-valid: {}:{}@{} in {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,instance.getOkCount(),msg);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 75,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1244,
        "startLineNumber" : 94,
        "startColumnNumber" : 59,
        "endLineNumber" : 111,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String serviceName=service.getGroupedServiceName();\n  String clusterName=instance.getExtendDatum().get(CommonParams.CLUSTER_NAME).toString();\n  if (instance.getOkCount().incrementAndGet() >= switchDomain.getCheckTimes()) {\n    if (switchDomain.isHealthCheckEnabled(serviceName) && !task.isCancelled() && distroMapper.responsible(serviceName)) {\n      healthStatusSynchronizer.instanceHealthStatusChange(true,task.getClient(),service,instance);\n      Loggers.EVT_LOG.info(\"serviceName: {} {POS} {IP-ENABLED} valid: {}:{}@{}, region: {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,UtilsAndCommons.LOCALHOST_SITE,msg);\n    }\n  }\n else {\n    Loggers.EVT_LOG.info(\"serviceName: {} {OTHER} {IP-ENABLED} pre-valid: {}:{}@{} in {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,instance.getOkCount(),msg);\n  }\n  instance.resetFailCount();\n  instance.finishCheck();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1291,
        "startLineNumber" : 94,
        "startColumnNumber" : 12,
        "endLineNumber" : 111,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (null != instance && !instance.isHealthy()) {\n  String serviceName=service.getGroupedServiceName();\n  String clusterName=instance.getExtendDatum().get(CommonParams.CLUSTER_NAME).toString();\n  if (instance.getOkCount().incrementAndGet() >= switchDomain.getCheckTimes()) {\n    if (switchDomain.isHealthCheckEnabled(serviceName) && !task.isCancelled() && distroMapper.responsible(serviceName)) {\n      healthStatusSynchronizer.instanceHealthStatusChange(true,task.getClient(),service,instance);\n      Loggers.EVT_LOG.info(\"serviceName: {} {POS} {IP-ENABLED} valid: {}:{}@{}, region: {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,UtilsAndCommons.LOCALHOST_SITE,msg);\n    }\n  }\n else {\n    Loggers.EVT_LOG.info(\"serviceName: {} {OTHER} {IP-ENABLED} pre-valid: {}:{}@{} in {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,instance.getOkCount(),msg);\n  }\n  instance.resetFailCount();\n  instance.finishCheck();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 116,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1473,
        "startLineNumber" : 91,
        "startColumnNumber" : 12,
        "endLineNumber" : 112,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HealthCheckInstancePublishInfo instance=(HealthCheckInstancePublishInfo)task.getClient().getInstancePublishInfo(service);\n  if (null != instance && !instance.isHealthy()) {\n    String serviceName=service.getGroupedServiceName();\n    String clusterName=instance.getExtendDatum().get(CommonParams.CLUSTER_NAME).toString();\n    if (instance.getOkCount().incrementAndGet() >= switchDomain.getCheckTimes()) {\n      if (switchDomain.isHealthCheckEnabled(serviceName) && !task.isCancelled() && distroMapper.responsible(serviceName)) {\n        healthStatusSynchronizer.instanceHealthStatusChange(true,task.getClient(),service,instance);\n        Loggers.EVT_LOG.info(\"serviceName: {} {POS} {IP-ENABLED} valid: {}:{}@{}, region: {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,UtilsAndCommons.LOCALHOST_SITE,msg);\n      }\n    }\n else {\n      Loggers.EVT_LOG.info(\"serviceName: {} {OTHER} {IP-ENABLED} pre-valid: {}:{}@{} in {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,instance.getOkCount(),msg);\n    }\n    instance.resetFailCount();\n    instance.finishCheck();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 131,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1590,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 114,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  HealthCheckInstancePublishInfo instance=(HealthCheckInstancePublishInfo)task.getClient().getInstancePublishInfo(service);\n  if (null != instance && !instance.isHealthy()) {\n    String serviceName=service.getGroupedServiceName();\n    String clusterName=instance.getExtendDatum().get(CommonParams.CLUSTER_NAME).toString();\n    if (instance.getOkCount().incrementAndGet() >= switchDomain.getCheckTimes()) {\n      if (switchDomain.isHealthCheckEnabled(serviceName) && !task.isCancelled() && distroMapper.responsible(serviceName)) {\n        healthStatusSynchronizer.instanceHealthStatusChange(true,task.getClient(),service,instance);\n        Loggers.EVT_LOG.info(\"serviceName: {} {POS} {IP-ENABLED} valid: {}:{}@{}, region: {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,UtilsAndCommons.LOCALHOST_SITE,msg);\n      }\n    }\n else {\n      Loggers.EVT_LOG.info(\"serviceName: {} {OTHER} {IP-ENABLED} pre-valid: {}:{}@{} in {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,instance.getOkCount(),msg);\n    }\n    instance.resetFailCount();\n    instance.finishCheck();\n  }\n}\n catch (Throwable t) {\n  Loggers.SRV_LOG.error(\"[CHECK-OK] error when close check task.\",t);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 146,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1606,
        "startLineNumber" : 90,
        "startColumnNumber" : 77,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    HealthCheckInstancePublishInfo instance=(HealthCheckInstancePublishInfo)task.getClient().getInstancePublishInfo(service);\n    if (null != instance && !instance.isHealthy()) {\n      String serviceName=service.getGroupedServiceName();\n      String clusterName=instance.getExtendDatum().get(CommonParams.CLUSTER_NAME).toString();\n      if (instance.getOkCount().incrementAndGet() >= switchDomain.getCheckTimes()) {\n        if (switchDomain.isHealthCheckEnabled(serviceName) && !task.isCancelled() && distroMapper.responsible(serviceName)) {\n          healthStatusSynchronizer.instanceHealthStatusChange(true,task.getClient(),service,instance);\n          Loggers.EVT_LOG.info(\"serviceName: {} {POS} {IP-ENABLED} valid: {}:{}@{}, region: {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,UtilsAndCommons.LOCALHOST_SITE,msg);\n        }\n      }\n else {\n        Loggers.EVT_LOG.info(\"serviceName: {} {OTHER} {IP-ENABLED} pre-valid: {}:{}@{} in {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,instance.getOkCount(),msg);\n      }\n      instance.resetFailCount();\n      instance.finishCheck();\n    }\n  }\n catch (  Throwable t) {\n    Loggers.SRV_LOG.error(\"[CHECK-OK] error when close check task.\",t);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 147,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1828,
        "startLineNumber" : 83,
        "startColumnNumber" : 4,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Health check pass.\n * @param task    health check task\n * @param service service\n * @param msg     message\n */\npublic void checkOk(HealthCheckTaskV2 task,Service service,String msg){\n  try {\n    HealthCheckInstancePublishInfo instance=(HealthCheckInstancePublishInfo)task.getClient().getInstancePublishInfo(service);\n    if (null != instance && !instance.isHealthy()) {\n      String serviceName=service.getGroupedServiceName();\n      String clusterName=instance.getExtendDatum().get(CommonParams.CLUSTER_NAME).toString();\n      if (instance.getOkCount().incrementAndGet() >= switchDomain.getCheckTimes()) {\n        if (switchDomain.isHealthCheckEnabled(serviceName) && !task.isCancelled() && distroMapper.responsible(serviceName)) {\n          healthStatusSynchronizer.instanceHealthStatusChange(true,task.getClient(),service,instance);\n          Loggers.EVT_LOG.info(\"serviceName: {} {POS} {IP-ENABLED} valid: {}:{}@{}, region: {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,UtilsAndCommons.LOCALHOST_SITE,msg);\n        }\n      }\n else {\n        Loggers.EVT_LOG.info(\"serviceName: {} {OTHER} {IP-ENABLED} pre-valid: {}:{}@{} in {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,instance.getOkCount(),msg);\n      }\n      instance.resetFailCount();\n      instance.finishCheck();\n    }\n  }\n catch (  Throwable t) {\n    Loggers.SRV_LOG.error(\"[CHECK-OK] error when close check task.\",t);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 164,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.InfixExpression,extendedOperands]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 98,
        "startColumnNumber" : 97,
        "endLineNumber" : 99,
        "endColumnNumber" : 53
      },
      "nodeContext" : "distroMapper.responsible(serviceName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "serviceName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 102,
      "startColumnNumber" : 32,
      "endLineNumber" : 102,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 260,
        "startLineNumber" : 101,
        "startColumnNumber" : 24,
        "endLineNumber" : 103,
        "endColumnNumber" : 68
      },
      "nodeContext" : "Loggers.EVT_LOG.info(\"serviceName: {} {POS} {IP-ENABLED} valid: {}:{}@{}, region: {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,UtilsAndCommons.LOCALHOST_SITE,msg)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 261,
        "startLineNumber" : 101,
        "startColumnNumber" : 24,
        "endLineNumber" : 103,
        "endColumnNumber" : 69
      },
      "nodeContext" : "Loggers.EVT_LOG.info(\"serviceName: {} {POS} {IP-ENABLED} valid: {}:{}@{}, region: {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,UtilsAndCommons.LOCALHOST_SITE,msg);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 429,
        "startLineNumber" : 99,
        "startColumnNumber" : 55,
        "endLineNumber" : 104,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  healthStatusSynchronizer.instanceHealthStatusChange(true,task.getClient(),service,instance);\n  Loggers.EVT_LOG.info(\"serviceName: {} {POS} {IP-ENABLED} valid: {}:{}@{}, region: {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,UtilsAndCommons.LOCALHOST_SITE,msg);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 30,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 574,
        "startLineNumber" : 98,
        "startColumnNumber" : 20,
        "endLineNumber" : 104,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (switchDomain.isHealthCheckEnabled(serviceName) && !task.isCancelled() && distroMapper.responsible(serviceName)) {\n  healthStatusSynchronizer.instanceHealthStatusChange(true,task.getClient(),service,instance);\n  Loggers.EVT_LOG.info(\"serviceName: {} {POS} {IP-ENABLED} valid: {}:{}@{}, region: {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,UtilsAndCommons.LOCALHOST_SITE,msg);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 44,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 614,
        "startLineNumber" : 97,
        "startColumnNumber" : 93,
        "endLineNumber" : 105,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (switchDomain.isHealthCheckEnabled(serviceName) && !task.isCancelled() && distroMapper.responsible(serviceName)) {\n    healthStatusSynchronizer.instanceHealthStatusChange(true,task.getClient(),service,instance);\n    Loggers.EVT_LOG.info(\"serviceName: {} {POS} {IP-ENABLED} valid: {}:{}@{}, region: {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,UtilsAndCommons.LOCALHOST_SITE,msg);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 953,
        "startLineNumber" : 97,
        "startColumnNumber" : 16,
        "endLineNumber" : 108,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (instance.getOkCount().incrementAndGet() >= switchDomain.getCheckTimes()) {\n  if (switchDomain.isHealthCheckEnabled(serviceName) && !task.isCancelled() && distroMapper.responsible(serviceName)) {\n    healthStatusSynchronizer.instanceHealthStatusChange(true,task.getClient(),service,instance);\n    Loggers.EVT_LOG.info(\"serviceName: {} {POS} {IP-ENABLED} valid: {}:{}@{}, region: {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,UtilsAndCommons.LOCALHOST_SITE,msg);\n  }\n}\n else {\n  Loggers.EVT_LOG.info(\"serviceName: {} {OTHER} {IP-ENABLED} pre-valid: {}:{}@{} in {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,instance.getOkCount(),msg);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 75,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1244,
        "startLineNumber" : 94,
        "startColumnNumber" : 59,
        "endLineNumber" : 111,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String serviceName=service.getGroupedServiceName();\n  String clusterName=instance.getExtendDatum().get(CommonParams.CLUSTER_NAME).toString();\n  if (instance.getOkCount().incrementAndGet() >= switchDomain.getCheckTimes()) {\n    if (switchDomain.isHealthCheckEnabled(serviceName) && !task.isCancelled() && distroMapper.responsible(serviceName)) {\n      healthStatusSynchronizer.instanceHealthStatusChange(true,task.getClient(),service,instance);\n      Loggers.EVT_LOG.info(\"serviceName: {} {POS} {IP-ENABLED} valid: {}:{}@{}, region: {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,UtilsAndCommons.LOCALHOST_SITE,msg);\n    }\n  }\n else {\n    Loggers.EVT_LOG.info(\"serviceName: {} {OTHER} {IP-ENABLED} pre-valid: {}:{}@{} in {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,instance.getOkCount(),msg);\n  }\n  instance.resetFailCount();\n  instance.finishCheck();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1291,
        "startLineNumber" : 94,
        "startColumnNumber" : 12,
        "endLineNumber" : 111,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (null != instance && !instance.isHealthy()) {\n  String serviceName=service.getGroupedServiceName();\n  String clusterName=instance.getExtendDatum().get(CommonParams.CLUSTER_NAME).toString();\n  if (instance.getOkCount().incrementAndGet() >= switchDomain.getCheckTimes()) {\n    if (switchDomain.isHealthCheckEnabled(serviceName) && !task.isCancelled() && distroMapper.responsible(serviceName)) {\n      healthStatusSynchronizer.instanceHealthStatusChange(true,task.getClient(),service,instance);\n      Loggers.EVT_LOG.info(\"serviceName: {} {POS} {IP-ENABLED} valid: {}:{}@{}, region: {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,UtilsAndCommons.LOCALHOST_SITE,msg);\n    }\n  }\n else {\n    Loggers.EVT_LOG.info(\"serviceName: {} {OTHER} {IP-ENABLED} pre-valid: {}:{}@{} in {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,instance.getOkCount(),msg);\n  }\n  instance.resetFailCount();\n  instance.finishCheck();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 116,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1473,
        "startLineNumber" : 91,
        "startColumnNumber" : 12,
        "endLineNumber" : 112,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HealthCheckInstancePublishInfo instance=(HealthCheckInstancePublishInfo)task.getClient().getInstancePublishInfo(service);\n  if (null != instance && !instance.isHealthy()) {\n    String serviceName=service.getGroupedServiceName();\n    String clusterName=instance.getExtendDatum().get(CommonParams.CLUSTER_NAME).toString();\n    if (instance.getOkCount().incrementAndGet() >= switchDomain.getCheckTimes()) {\n      if (switchDomain.isHealthCheckEnabled(serviceName) && !task.isCancelled() && distroMapper.responsible(serviceName)) {\n        healthStatusSynchronizer.instanceHealthStatusChange(true,task.getClient(),service,instance);\n        Loggers.EVT_LOG.info(\"serviceName: {} {POS} {IP-ENABLED} valid: {}:{}@{}, region: {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,UtilsAndCommons.LOCALHOST_SITE,msg);\n      }\n    }\n else {\n      Loggers.EVT_LOG.info(\"serviceName: {} {OTHER} {IP-ENABLED} pre-valid: {}:{}@{} in {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,instance.getOkCount(),msg);\n    }\n    instance.resetFailCount();\n    instance.finishCheck();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 131,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1590,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 114,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  HealthCheckInstancePublishInfo instance=(HealthCheckInstancePublishInfo)task.getClient().getInstancePublishInfo(service);\n  if (null != instance && !instance.isHealthy()) {\n    String serviceName=service.getGroupedServiceName();\n    String clusterName=instance.getExtendDatum().get(CommonParams.CLUSTER_NAME).toString();\n    if (instance.getOkCount().incrementAndGet() >= switchDomain.getCheckTimes()) {\n      if (switchDomain.isHealthCheckEnabled(serviceName) && !task.isCancelled() && distroMapper.responsible(serviceName)) {\n        healthStatusSynchronizer.instanceHealthStatusChange(true,task.getClient(),service,instance);\n        Loggers.EVT_LOG.info(\"serviceName: {} {POS} {IP-ENABLED} valid: {}:{}@{}, region: {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,UtilsAndCommons.LOCALHOST_SITE,msg);\n      }\n    }\n else {\n      Loggers.EVT_LOG.info(\"serviceName: {} {OTHER} {IP-ENABLED} pre-valid: {}:{}@{} in {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,instance.getOkCount(),msg);\n    }\n    instance.resetFailCount();\n    instance.finishCheck();\n  }\n}\n catch (Throwable t) {\n  Loggers.SRV_LOG.error(\"[CHECK-OK] error when close check task.\",t);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 146,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1606,
        "startLineNumber" : 90,
        "startColumnNumber" : 77,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    HealthCheckInstancePublishInfo instance=(HealthCheckInstancePublishInfo)task.getClient().getInstancePublishInfo(service);\n    if (null != instance && !instance.isHealthy()) {\n      String serviceName=service.getGroupedServiceName();\n      String clusterName=instance.getExtendDatum().get(CommonParams.CLUSTER_NAME).toString();\n      if (instance.getOkCount().incrementAndGet() >= switchDomain.getCheckTimes()) {\n        if (switchDomain.isHealthCheckEnabled(serviceName) && !task.isCancelled() && distroMapper.responsible(serviceName)) {\n          healthStatusSynchronizer.instanceHealthStatusChange(true,task.getClient(),service,instance);\n          Loggers.EVT_LOG.info(\"serviceName: {} {POS} {IP-ENABLED} valid: {}:{}@{}, region: {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,UtilsAndCommons.LOCALHOST_SITE,msg);\n        }\n      }\n else {\n        Loggers.EVT_LOG.info(\"serviceName: {} {OTHER} {IP-ENABLED} pre-valid: {}:{}@{} in {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,instance.getOkCount(),msg);\n      }\n      instance.resetFailCount();\n      instance.finishCheck();\n    }\n  }\n catch (  Throwable t) {\n    Loggers.SRV_LOG.error(\"[CHECK-OK] error when close check task.\",t);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 147,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1828,
        "startLineNumber" : 83,
        "startColumnNumber" : 4,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Health check pass.\n * @param task    health check task\n * @param service service\n * @param msg     message\n */\npublic void checkOk(HealthCheckTaskV2 task,Service service,String msg){\n  try {\n    HealthCheckInstancePublishInfo instance=(HealthCheckInstancePublishInfo)task.getClient().getInstancePublishInfo(service);\n    if (null != instance && !instance.isHealthy()) {\n      String serviceName=service.getGroupedServiceName();\n      String clusterName=instance.getExtendDatum().get(CommonParams.CLUSTER_NAME).toString();\n      if (instance.getOkCount().incrementAndGet() >= switchDomain.getCheckTimes()) {\n        if (switchDomain.isHealthCheckEnabled(serviceName) && !task.isCancelled() && distroMapper.responsible(serviceName)) {\n          healthStatusSynchronizer.instanceHealthStatusChange(true,task.getClient(),service,instance);\n          Loggers.EVT_LOG.info(\"serviceName: {} {POS} {IP-ENABLED} valid: {}:{}@{}, region: {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,UtilsAndCommons.LOCALHOST_SITE,msg);\n        }\n      }\n else {\n        Loggers.EVT_LOG.info(\"serviceName: {} {OTHER} {IP-ENABLED} pre-valid: {}:{}@{} in {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,instance.getOkCount(),msg);\n      }\n      instance.resetFailCount();\n      instance.finishCheck();\n    }\n  }\n catch (  Throwable t) {\n    Loggers.SRV_LOG.error(\"[CHECK-OK] error when close check task.\",t);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 164,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 260,
        "startLineNumber" : 101,
        "startColumnNumber" : 24,
        "endLineNumber" : 103,
        "endColumnNumber" : 68
      },
      "nodeContext" : "Loggers.EVT_LOG.info(\"serviceName: {} {POS} {IP-ENABLED} valid: {}:{}@{}, region: {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,UtilsAndCommons.LOCALHOST_SITE,msg)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "serviceName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 107,
      "startColumnNumber" : 28,
      "endLineNumber" : 107,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 215,
        "startLineNumber" : 106,
        "startColumnNumber" : 20,
        "endLineNumber" : 107,
        "endColumnNumber" : 119
      },
      "nodeContext" : "Loggers.EVT_LOG.info(\"serviceName: {} {OTHER} {IP-ENABLED} pre-valid: {}:{}@{} in {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,instance.getOkCount(),msg)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 216,
        "startLineNumber" : 106,
        "startColumnNumber" : 20,
        "endLineNumber" : 107,
        "endColumnNumber" : 120
      },
      "nodeContext" : "Loggers.EVT_LOG.info(\"serviceName: {} {OTHER} {IP-ENABLED} pre-valid: {}:{}@{} in {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,instance.getOkCount(),msg);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 256,
        "startLineNumber" : 105,
        "startColumnNumber" : 23,
        "endLineNumber" : 108,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  Loggers.EVT_LOG.info(\"serviceName: {} {OTHER} {IP-ENABLED} pre-valid: {}:{}@{} in {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,instance.getOkCount(),msg);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 953,
        "startLineNumber" : 97,
        "startColumnNumber" : 16,
        "endLineNumber" : 108,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (instance.getOkCount().incrementAndGet() >= switchDomain.getCheckTimes()) {\n  if (switchDomain.isHealthCheckEnabled(serviceName) && !task.isCancelled() && distroMapper.responsible(serviceName)) {\n    healthStatusSynchronizer.instanceHealthStatusChange(true,task.getClient(),service,instance);\n    Loggers.EVT_LOG.info(\"serviceName: {} {POS} {IP-ENABLED} valid: {}:{}@{}, region: {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,UtilsAndCommons.LOCALHOST_SITE,msg);\n  }\n}\n else {\n  Loggers.EVT_LOG.info(\"serviceName: {} {OTHER} {IP-ENABLED} pre-valid: {}:{}@{} in {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,instance.getOkCount(),msg);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 75,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1244,
        "startLineNumber" : 94,
        "startColumnNumber" : 59,
        "endLineNumber" : 111,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String serviceName=service.getGroupedServiceName();\n  String clusterName=instance.getExtendDatum().get(CommonParams.CLUSTER_NAME).toString();\n  if (instance.getOkCount().incrementAndGet() >= switchDomain.getCheckTimes()) {\n    if (switchDomain.isHealthCheckEnabled(serviceName) && !task.isCancelled() && distroMapper.responsible(serviceName)) {\n      healthStatusSynchronizer.instanceHealthStatusChange(true,task.getClient(),service,instance);\n      Loggers.EVT_LOG.info(\"serviceName: {} {POS} {IP-ENABLED} valid: {}:{}@{}, region: {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,UtilsAndCommons.LOCALHOST_SITE,msg);\n    }\n  }\n else {\n    Loggers.EVT_LOG.info(\"serviceName: {} {OTHER} {IP-ENABLED} pre-valid: {}:{}@{} in {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,instance.getOkCount(),msg);\n  }\n  instance.resetFailCount();\n  instance.finishCheck();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1291,
        "startLineNumber" : 94,
        "startColumnNumber" : 12,
        "endLineNumber" : 111,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (null != instance && !instance.isHealthy()) {\n  String serviceName=service.getGroupedServiceName();\n  String clusterName=instance.getExtendDatum().get(CommonParams.CLUSTER_NAME).toString();\n  if (instance.getOkCount().incrementAndGet() >= switchDomain.getCheckTimes()) {\n    if (switchDomain.isHealthCheckEnabled(serviceName) && !task.isCancelled() && distroMapper.responsible(serviceName)) {\n      healthStatusSynchronizer.instanceHealthStatusChange(true,task.getClient(),service,instance);\n      Loggers.EVT_LOG.info(\"serviceName: {} {POS} {IP-ENABLED} valid: {}:{}@{}, region: {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,UtilsAndCommons.LOCALHOST_SITE,msg);\n    }\n  }\n else {\n    Loggers.EVT_LOG.info(\"serviceName: {} {OTHER} {IP-ENABLED} pre-valid: {}:{}@{} in {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,instance.getOkCount(),msg);\n  }\n  instance.resetFailCount();\n  instance.finishCheck();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 116,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1473,
        "startLineNumber" : 91,
        "startColumnNumber" : 12,
        "endLineNumber" : 112,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  HealthCheckInstancePublishInfo instance=(HealthCheckInstancePublishInfo)task.getClient().getInstancePublishInfo(service);\n  if (null != instance && !instance.isHealthy()) {\n    String serviceName=service.getGroupedServiceName();\n    String clusterName=instance.getExtendDatum().get(CommonParams.CLUSTER_NAME).toString();\n    if (instance.getOkCount().incrementAndGet() >= switchDomain.getCheckTimes()) {\n      if (switchDomain.isHealthCheckEnabled(serviceName) && !task.isCancelled() && distroMapper.responsible(serviceName)) {\n        healthStatusSynchronizer.instanceHealthStatusChange(true,task.getClient(),service,instance);\n        Loggers.EVT_LOG.info(\"serviceName: {} {POS} {IP-ENABLED} valid: {}:{}@{}, region: {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,UtilsAndCommons.LOCALHOST_SITE,msg);\n      }\n    }\n else {\n      Loggers.EVT_LOG.info(\"serviceName: {} {OTHER} {IP-ENABLED} pre-valid: {}:{}@{} in {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,instance.getOkCount(),msg);\n    }\n    instance.resetFailCount();\n    instance.finishCheck();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 131,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1590,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 114,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  HealthCheckInstancePublishInfo instance=(HealthCheckInstancePublishInfo)task.getClient().getInstancePublishInfo(service);\n  if (null != instance && !instance.isHealthy()) {\n    String serviceName=service.getGroupedServiceName();\n    String clusterName=instance.getExtendDatum().get(CommonParams.CLUSTER_NAME).toString();\n    if (instance.getOkCount().incrementAndGet() >= switchDomain.getCheckTimes()) {\n      if (switchDomain.isHealthCheckEnabled(serviceName) && !task.isCancelled() && distroMapper.responsible(serviceName)) {\n        healthStatusSynchronizer.instanceHealthStatusChange(true,task.getClient(),service,instance);\n        Loggers.EVT_LOG.info(\"serviceName: {} {POS} {IP-ENABLED} valid: {}:{}@{}, region: {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,UtilsAndCommons.LOCALHOST_SITE,msg);\n      }\n    }\n else {\n      Loggers.EVT_LOG.info(\"serviceName: {} {OTHER} {IP-ENABLED} pre-valid: {}:{}@{} in {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,instance.getOkCount(),msg);\n    }\n    instance.resetFailCount();\n    instance.finishCheck();\n  }\n}\n catch (Throwable t) {\n  Loggers.SRV_LOG.error(\"[CHECK-OK] error when close check task.\",t);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 146,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1606,
        "startLineNumber" : 90,
        "startColumnNumber" : 77,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    HealthCheckInstancePublishInfo instance=(HealthCheckInstancePublishInfo)task.getClient().getInstancePublishInfo(service);\n    if (null != instance && !instance.isHealthy()) {\n      String serviceName=service.getGroupedServiceName();\n      String clusterName=instance.getExtendDatum().get(CommonParams.CLUSTER_NAME).toString();\n      if (instance.getOkCount().incrementAndGet() >= switchDomain.getCheckTimes()) {\n        if (switchDomain.isHealthCheckEnabled(serviceName) && !task.isCancelled() && distroMapper.responsible(serviceName)) {\n          healthStatusSynchronizer.instanceHealthStatusChange(true,task.getClient(),service,instance);\n          Loggers.EVT_LOG.info(\"serviceName: {} {POS} {IP-ENABLED} valid: {}:{}@{}, region: {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,UtilsAndCommons.LOCALHOST_SITE,msg);\n        }\n      }\n else {\n        Loggers.EVT_LOG.info(\"serviceName: {} {OTHER} {IP-ENABLED} pre-valid: {}:{}@{} in {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,instance.getOkCount(),msg);\n      }\n      instance.resetFailCount();\n      instance.finishCheck();\n    }\n  }\n catch (  Throwable t) {\n    Loggers.SRV_LOG.error(\"[CHECK-OK] error when close check task.\",t);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 147,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1828,
        "startLineNumber" : 83,
        "startColumnNumber" : 4,
        "endLineNumber" : 115,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Health check pass.\n * @param task    health check task\n * @param service service\n * @param msg     message\n */\npublic void checkOk(HealthCheckTaskV2 task,Service service,String msg){\n  try {\n    HealthCheckInstancePublishInfo instance=(HealthCheckInstancePublishInfo)task.getClient().getInstancePublishInfo(service);\n    if (null != instance && !instance.isHealthy()) {\n      String serviceName=service.getGroupedServiceName();\n      String clusterName=instance.getExtendDatum().get(CommonParams.CLUSTER_NAME).toString();\n      if (instance.getOkCount().incrementAndGet() >= switchDomain.getCheckTimes()) {\n        if (switchDomain.isHealthCheckEnabled(serviceName) && !task.isCancelled() && distroMapper.responsible(serviceName)) {\n          healthStatusSynchronizer.instanceHealthStatusChange(true,task.getClient(),service,instance);\n          Loggers.EVT_LOG.info(\"serviceName: {} {POS} {IP-ENABLED} valid: {}:{}@{}, region: {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,UtilsAndCommons.LOCALHOST_SITE,msg);\n        }\n      }\n else {\n        Loggers.EVT_LOG.info(\"serviceName: {} {OTHER} {IP-ENABLED} pre-valid: {}:{}@{} in {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,instance.getOkCount(),msg);\n      }\n      instance.resetFailCount();\n      instance.finishCheck();\n    }\n  }\n catch (  Throwable t) {\n    Loggers.SRV_LOG.error(\"[CHECK-OK] error when close check task.\",t);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 164,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 215,
        "startLineNumber" : 106,
        "startColumnNumber" : 20,
        "endLineNumber" : 107,
        "endColumnNumber" : 119
      },
      "nodeContext" : "Loggers.EVT_LOG.info(\"serviceName: {} {OTHER} {IP-ENABLED} pre-valid: {}:{}@{} in {}, msg: {}\",serviceName,instance.getIp(),instance.getPort(),clusterName,instance.getOkCount(),msg)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 98,
    "startColumnNumber" : 58,
    "endLineNumber" : 98,
    "endColumnNumber" : 69
  }, {
    "charLength" : 11,
    "startLineNumber" : 99,
    "startColumnNumber" : 41,
    "endLineNumber" : 99,
    "endColumnNumber" : 52
  }, {
    "charLength" : 11,
    "startLineNumber" : 102,
    "startColumnNumber" : 32,
    "endLineNumber" : 102,
    "endColumnNumber" : 43
  }, {
    "charLength" : 11,
    "startLineNumber" : 107,
    "startColumnNumber" : 28,
    "endLineNumber" : 107,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  } ]
}