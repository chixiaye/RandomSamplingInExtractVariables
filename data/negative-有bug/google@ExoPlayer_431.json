{
  "id" : 431,
  "expression" : "MeasureSpec",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/ui/src/main/java/com/google/android/exoplayer2/ui/AspectRatioFrameLayout.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "MeasureSpec",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 202,
      "startColumnNumber" : 8,
      "endLineNumber" : 202,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SuperMethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 202,
        "startColumnNumber" : 8,
        "endLineNumber" : 202,
        "endColumnNumber" : 63
      },
      "nodeContext" : "MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 201,
        "startColumnNumber" : 4,
        "endLineNumber" : 203,
        "endColumnNumber" : 65
      },
      "nodeContext" : "super.onMeasure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(height,MeasureSpec.EXACTLY))",
      "nodeType" : "SuperMethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 148,
        "startLineNumber" : 201,
        "startColumnNumber" : 4,
        "endLineNumber" : 203,
        "endColumnNumber" : 66
      },
      "nodeContext" : "super.onMeasure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(height,MeasureSpec.EXACTLY));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1585,
        "startLineNumber" : 157,
        "startColumnNumber" : 72,
        "endLineNumber" : 204,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  super.onMeasure(widthMeasureSpec,heightMeasureSpec);\n  if (videoAspectRatio <= 0) {\n    return;\n  }\n  int width=getMeasuredWidth();\n  int height=getMeasuredHeight();\n  float viewAspectRatio=(float)width / height;\n  float aspectDeformation=videoAspectRatio / viewAspectRatio - 1;\n  if (Math.abs(aspectDeformation) <= MAX_ASPECT_RATIO_DEFORMATION_FRACTION) {\n    aspectRatioUpdateDispatcher.scheduleUpdate(videoAspectRatio,viewAspectRatio,false);\n    return;\n  }\nswitch (resizeMode) {\ncase RESIZE_MODE_FIXED_WIDTH:    height=(int)(width / videoAspectRatio);\n  break;\ncase RESIZE_MODE_FIXED_HEIGHT:width=(int)(height * videoAspectRatio);\nbreak;\ncase RESIZE_MODE_ZOOM:if (aspectDeformation > 0) {\nwidth=(int)(height * videoAspectRatio);\n}\n else {\nheight=(int)(width / videoAspectRatio);\n}\nbreak;\ncase RESIZE_MODE_FIT:if (aspectDeformation > 0) {\nheight=(int)(width / videoAspectRatio);\n}\n else {\nwidth=(int)(height * videoAspectRatio);\n}\nbreak;\ncase RESIZE_MODE_FILL:default:break;\n}\naspectRatioUpdateDispatcher.scheduleUpdate(videoAspectRatio,viewAspectRatio,true);\nsuper.onMeasure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(height,MeasureSpec.EXACTLY));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 166,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1667,
        "startLineNumber" : 156,
        "startColumnNumber" : 2,
        "endLineNumber" : 204,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override protected void onMeasure(int widthMeasureSpec,int heightMeasureSpec){\n  super.onMeasure(widthMeasureSpec,heightMeasureSpec);\n  if (videoAspectRatio <= 0) {\n    return;\n  }\n  int width=getMeasuredWidth();\n  int height=getMeasuredHeight();\n  float viewAspectRatio=(float)width / height;\n  float aspectDeformation=videoAspectRatio / viewAspectRatio - 1;\n  if (Math.abs(aspectDeformation) <= MAX_ASPECT_RATIO_DEFORMATION_FRACTION) {\n    aspectRatioUpdateDispatcher.scheduleUpdate(videoAspectRatio,viewAspectRatio,false);\n    return;\n  }\nswitch (resizeMode) {\ncase RESIZE_MODE_FIXED_WIDTH:    height=(int)(width / videoAspectRatio);\n  break;\ncase RESIZE_MODE_FIXED_HEIGHT:width=(int)(height * videoAspectRatio);\nbreak;\ncase RESIZE_MODE_ZOOM:if (aspectDeformation > 0) {\nwidth=(int)(height * videoAspectRatio);\n}\n else {\nheight=(int)(width / videoAspectRatio);\n}\nbreak;\ncase RESIZE_MODE_FIT:if (aspectDeformation > 0) {\nheight=(int)(width / videoAspectRatio);\n}\n else {\nwidth=(int)(height * videoAspectRatio);\n}\nbreak;\ncase RESIZE_MODE_FILL:default:break;\n}\naspectRatioUpdateDispatcher.scheduleUpdate(videoAspectRatio,viewAspectRatio,true);\nsuper.onMeasure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(height,MeasureSpec.EXACTLY));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 178,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SuperMethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 202,
        "startColumnNumber" : 8,
        "endLineNumber" : 202,
        "endColumnNumber" : 63
      },
      "nodeContext" : "MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "MeasureSpec",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 202,
      "startColumnNumber" : 43,
      "endLineNumber" : 202,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 202,
        "startColumnNumber" : 43,
        "endLineNumber" : 202,
        "endColumnNumber" : 62
      },
      "nodeContext" : "MeasureSpec.EXACTLY",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SuperMethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 202,
        "startColumnNumber" : 8,
        "endLineNumber" : 202,
        "endColumnNumber" : 63
      },
      "nodeContext" : "MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 201,
        "startColumnNumber" : 4,
        "endLineNumber" : 203,
        "endColumnNumber" : 65
      },
      "nodeContext" : "super.onMeasure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(height,MeasureSpec.EXACTLY))",
      "nodeType" : "SuperMethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 148,
        "startLineNumber" : 201,
        "startColumnNumber" : 4,
        "endLineNumber" : 203,
        "endColumnNumber" : 66
      },
      "nodeContext" : "super.onMeasure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(height,MeasureSpec.EXACTLY));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1585,
        "startLineNumber" : 157,
        "startColumnNumber" : 72,
        "endLineNumber" : 204,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  super.onMeasure(widthMeasureSpec,heightMeasureSpec);\n  if (videoAspectRatio <= 0) {\n    return;\n  }\n  int width=getMeasuredWidth();\n  int height=getMeasuredHeight();\n  float viewAspectRatio=(float)width / height;\n  float aspectDeformation=videoAspectRatio / viewAspectRatio - 1;\n  if (Math.abs(aspectDeformation) <= MAX_ASPECT_RATIO_DEFORMATION_FRACTION) {\n    aspectRatioUpdateDispatcher.scheduleUpdate(videoAspectRatio,viewAspectRatio,false);\n    return;\n  }\nswitch (resizeMode) {\ncase RESIZE_MODE_FIXED_WIDTH:    height=(int)(width / videoAspectRatio);\n  break;\ncase RESIZE_MODE_FIXED_HEIGHT:width=(int)(height * videoAspectRatio);\nbreak;\ncase RESIZE_MODE_ZOOM:if (aspectDeformation > 0) {\nwidth=(int)(height * videoAspectRatio);\n}\n else {\nheight=(int)(width / videoAspectRatio);\n}\nbreak;\ncase RESIZE_MODE_FIT:if (aspectDeformation > 0) {\nheight=(int)(width / videoAspectRatio);\n}\n else {\nwidth=(int)(height * videoAspectRatio);\n}\nbreak;\ncase RESIZE_MODE_FILL:default:break;\n}\naspectRatioUpdateDispatcher.scheduleUpdate(videoAspectRatio,viewAspectRatio,true);\nsuper.onMeasure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(height,MeasureSpec.EXACTLY));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 166,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1667,
        "startLineNumber" : 156,
        "startColumnNumber" : 2,
        "endLineNumber" : 204,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override protected void onMeasure(int widthMeasureSpec,int heightMeasureSpec){\n  super.onMeasure(widthMeasureSpec,heightMeasureSpec);\n  if (videoAspectRatio <= 0) {\n    return;\n  }\n  int width=getMeasuredWidth();\n  int height=getMeasuredHeight();\n  float viewAspectRatio=(float)width / height;\n  float aspectDeformation=videoAspectRatio / viewAspectRatio - 1;\n  if (Math.abs(aspectDeformation) <= MAX_ASPECT_RATIO_DEFORMATION_FRACTION) {\n    aspectRatioUpdateDispatcher.scheduleUpdate(videoAspectRatio,viewAspectRatio,false);\n    return;\n  }\nswitch (resizeMode) {\ncase RESIZE_MODE_FIXED_WIDTH:    height=(int)(width / videoAspectRatio);\n  break;\ncase RESIZE_MODE_FIXED_HEIGHT:width=(int)(height * videoAspectRatio);\nbreak;\ncase RESIZE_MODE_ZOOM:if (aspectDeformation > 0) {\nwidth=(int)(height * videoAspectRatio);\n}\n else {\nheight=(int)(width / videoAspectRatio);\n}\nbreak;\ncase RESIZE_MODE_FIT:if (aspectDeformation > 0) {\nheight=(int)(width / videoAspectRatio);\n}\n else {\nwidth=(int)(height * videoAspectRatio);\n}\nbreak;\ncase RESIZE_MODE_FILL:default:break;\n}\naspectRatioUpdateDispatcher.scheduleUpdate(videoAspectRatio,viewAspectRatio,true);\nsuper.onMeasure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(height,MeasureSpec.EXACTLY));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 178,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SuperMethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 202,
        "startColumnNumber" : 8,
        "endLineNumber" : 202,
        "endColumnNumber" : 63
      },
      "nodeContext" : "MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "MeasureSpec",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 203,
      "startColumnNumber" : 8,
      "endLineNumber" : 203,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SuperMethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 203,
        "startColumnNumber" : 8,
        "endLineNumber" : 203,
        "endColumnNumber" : 64
      },
      "nodeContext" : "MeasureSpec.makeMeasureSpec(height,MeasureSpec.EXACTLY)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 201,
        "startColumnNumber" : 4,
        "endLineNumber" : 203,
        "endColumnNumber" : 65
      },
      "nodeContext" : "super.onMeasure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(height,MeasureSpec.EXACTLY))",
      "nodeType" : "SuperMethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 148,
        "startLineNumber" : 201,
        "startColumnNumber" : 4,
        "endLineNumber" : 203,
        "endColumnNumber" : 66
      },
      "nodeContext" : "super.onMeasure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(height,MeasureSpec.EXACTLY));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1585,
        "startLineNumber" : 157,
        "startColumnNumber" : 72,
        "endLineNumber" : 204,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  super.onMeasure(widthMeasureSpec,heightMeasureSpec);\n  if (videoAspectRatio <= 0) {\n    return;\n  }\n  int width=getMeasuredWidth();\n  int height=getMeasuredHeight();\n  float viewAspectRatio=(float)width / height;\n  float aspectDeformation=videoAspectRatio / viewAspectRatio - 1;\n  if (Math.abs(aspectDeformation) <= MAX_ASPECT_RATIO_DEFORMATION_FRACTION) {\n    aspectRatioUpdateDispatcher.scheduleUpdate(videoAspectRatio,viewAspectRatio,false);\n    return;\n  }\nswitch (resizeMode) {\ncase RESIZE_MODE_FIXED_WIDTH:    height=(int)(width / videoAspectRatio);\n  break;\ncase RESIZE_MODE_FIXED_HEIGHT:width=(int)(height * videoAspectRatio);\nbreak;\ncase RESIZE_MODE_ZOOM:if (aspectDeformation > 0) {\nwidth=(int)(height * videoAspectRatio);\n}\n else {\nheight=(int)(width / videoAspectRatio);\n}\nbreak;\ncase RESIZE_MODE_FIT:if (aspectDeformation > 0) {\nheight=(int)(width / videoAspectRatio);\n}\n else {\nwidth=(int)(height * videoAspectRatio);\n}\nbreak;\ncase RESIZE_MODE_FILL:default:break;\n}\naspectRatioUpdateDispatcher.scheduleUpdate(videoAspectRatio,viewAspectRatio,true);\nsuper.onMeasure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(height,MeasureSpec.EXACTLY));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 166,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1667,
        "startLineNumber" : 156,
        "startColumnNumber" : 2,
        "endLineNumber" : 204,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override protected void onMeasure(int widthMeasureSpec,int heightMeasureSpec){\n  super.onMeasure(widthMeasureSpec,heightMeasureSpec);\n  if (videoAspectRatio <= 0) {\n    return;\n  }\n  int width=getMeasuredWidth();\n  int height=getMeasuredHeight();\n  float viewAspectRatio=(float)width / height;\n  float aspectDeformation=videoAspectRatio / viewAspectRatio - 1;\n  if (Math.abs(aspectDeformation) <= MAX_ASPECT_RATIO_DEFORMATION_FRACTION) {\n    aspectRatioUpdateDispatcher.scheduleUpdate(videoAspectRatio,viewAspectRatio,false);\n    return;\n  }\nswitch (resizeMode) {\ncase RESIZE_MODE_FIXED_WIDTH:    height=(int)(width / videoAspectRatio);\n  break;\ncase RESIZE_MODE_FIXED_HEIGHT:width=(int)(height * videoAspectRatio);\nbreak;\ncase RESIZE_MODE_ZOOM:if (aspectDeformation > 0) {\nwidth=(int)(height * videoAspectRatio);\n}\n else {\nheight=(int)(width / videoAspectRatio);\n}\nbreak;\ncase RESIZE_MODE_FIT:if (aspectDeformation > 0) {\nheight=(int)(width / videoAspectRatio);\n}\n else {\nwidth=(int)(height * videoAspectRatio);\n}\nbreak;\ncase RESIZE_MODE_FILL:default:break;\n}\naspectRatioUpdateDispatcher.scheduleUpdate(videoAspectRatio,viewAspectRatio,true);\nsuper.onMeasure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(height,MeasureSpec.EXACTLY));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 178,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SuperMethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 203,
        "startColumnNumber" : 8,
        "endLineNumber" : 203,
        "endColumnNumber" : 64
      },
      "nodeContext" : "MeasureSpec.makeMeasureSpec(height,MeasureSpec.EXACTLY)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "MeasureSpec",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 203,
      "startColumnNumber" : 44,
      "endLineNumber" : 203,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 203,
        "startColumnNumber" : 44,
        "endLineNumber" : 203,
        "endColumnNumber" : 63
      },
      "nodeContext" : "MeasureSpec.EXACTLY",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SuperMethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 203,
        "startColumnNumber" : 8,
        "endLineNumber" : 203,
        "endColumnNumber" : 64
      },
      "nodeContext" : "MeasureSpec.makeMeasureSpec(height,MeasureSpec.EXACTLY)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 201,
        "startColumnNumber" : 4,
        "endLineNumber" : 203,
        "endColumnNumber" : 65
      },
      "nodeContext" : "super.onMeasure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(height,MeasureSpec.EXACTLY))",
      "nodeType" : "SuperMethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 148,
        "startLineNumber" : 201,
        "startColumnNumber" : 4,
        "endLineNumber" : 203,
        "endColumnNumber" : 66
      },
      "nodeContext" : "super.onMeasure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(height,MeasureSpec.EXACTLY));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1585,
        "startLineNumber" : 157,
        "startColumnNumber" : 72,
        "endLineNumber" : 204,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  super.onMeasure(widthMeasureSpec,heightMeasureSpec);\n  if (videoAspectRatio <= 0) {\n    return;\n  }\n  int width=getMeasuredWidth();\n  int height=getMeasuredHeight();\n  float viewAspectRatio=(float)width / height;\n  float aspectDeformation=videoAspectRatio / viewAspectRatio - 1;\n  if (Math.abs(aspectDeformation) <= MAX_ASPECT_RATIO_DEFORMATION_FRACTION) {\n    aspectRatioUpdateDispatcher.scheduleUpdate(videoAspectRatio,viewAspectRatio,false);\n    return;\n  }\nswitch (resizeMode) {\ncase RESIZE_MODE_FIXED_WIDTH:    height=(int)(width / videoAspectRatio);\n  break;\ncase RESIZE_MODE_FIXED_HEIGHT:width=(int)(height * videoAspectRatio);\nbreak;\ncase RESIZE_MODE_ZOOM:if (aspectDeformation > 0) {\nwidth=(int)(height * videoAspectRatio);\n}\n else {\nheight=(int)(width / videoAspectRatio);\n}\nbreak;\ncase RESIZE_MODE_FIT:if (aspectDeformation > 0) {\nheight=(int)(width / videoAspectRatio);\n}\n else {\nwidth=(int)(height * videoAspectRatio);\n}\nbreak;\ncase RESIZE_MODE_FILL:default:break;\n}\naspectRatioUpdateDispatcher.scheduleUpdate(videoAspectRatio,viewAspectRatio,true);\nsuper.onMeasure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(height,MeasureSpec.EXACTLY));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 166,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1667,
        "startLineNumber" : 156,
        "startColumnNumber" : 2,
        "endLineNumber" : 204,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override protected void onMeasure(int widthMeasureSpec,int heightMeasureSpec){\n  super.onMeasure(widthMeasureSpec,heightMeasureSpec);\n  if (videoAspectRatio <= 0) {\n    return;\n  }\n  int width=getMeasuredWidth();\n  int height=getMeasuredHeight();\n  float viewAspectRatio=(float)width / height;\n  float aspectDeformation=videoAspectRatio / viewAspectRatio - 1;\n  if (Math.abs(aspectDeformation) <= MAX_ASPECT_RATIO_DEFORMATION_FRACTION) {\n    aspectRatioUpdateDispatcher.scheduleUpdate(videoAspectRatio,viewAspectRatio,false);\n    return;\n  }\nswitch (resizeMode) {\ncase RESIZE_MODE_FIXED_WIDTH:    height=(int)(width / videoAspectRatio);\n  break;\ncase RESIZE_MODE_FIXED_HEIGHT:width=(int)(height * videoAspectRatio);\nbreak;\ncase RESIZE_MODE_ZOOM:if (aspectDeformation > 0) {\nwidth=(int)(height * videoAspectRatio);\n}\n else {\nheight=(int)(width / videoAspectRatio);\n}\nbreak;\ncase RESIZE_MODE_FIT:if (aspectDeformation > 0) {\nheight=(int)(width / videoAspectRatio);\n}\n else {\nwidth=(int)(height * videoAspectRatio);\n}\nbreak;\ncase RESIZE_MODE_FILL:default:break;\n}\naspectRatioUpdateDispatcher.scheduleUpdate(videoAspectRatio,viewAspectRatio,true);\nsuper.onMeasure(MeasureSpec.makeMeasureSpec(width,MeasureSpec.EXACTLY),MeasureSpec.makeMeasureSpec(height,MeasureSpec.EXACTLY));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 178,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SuperMethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 203,
        "startColumnNumber" : 8,
        "endLineNumber" : 203,
        "endColumnNumber" : 64
      },
      "nodeContext" : "MeasureSpec.makeMeasureSpec(height,MeasureSpec.EXACTLY)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 202,
    "startColumnNumber" : 8,
    "endLineNumber" : 202,
    "endColumnNumber" : 19
  }, {
    "charLength" : 11,
    "startLineNumber" : 202,
    "startColumnNumber" : 43,
    "endLineNumber" : 202,
    "endColumnNumber" : 54
  }, {
    "charLength" : 11,
    "startLineNumber" : 203,
    "startColumnNumber" : 8,
    "endLineNumber" : 203,
    "endColumnNumber" : 19
  }, {
    "charLength" : 11,
    "startLineNumber" : 203,
    "startColumnNumber" : 44,
    "endLineNumber" : 203,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 0
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 0
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 1
  } ]
}