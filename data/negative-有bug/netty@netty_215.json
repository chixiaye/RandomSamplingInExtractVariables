{
  "id" : 215,
  "expression" : "newattribute.getName().length()",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/codec-http/src/main/java/io/netty/handler/codec/http/multipart/HttpPostRequestEncoder.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "newattribute.getName().length()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 459,
      "startColumnNumber" : 38,
      "endLineNumber" : 459,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 459,
        "startColumnNumber" : 38,
        "endLineNumber" : 459,
        "endColumnNumber" : 101
      },
      "nodeContext" : "newattribute.getName().length() + 1 + newattribute.length()+ 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 459,
        "startColumnNumber" : 20,
        "endLineNumber" : 459,
        "endColumnNumber" : 101
      },
      "nodeContext" : "globalBodySize+=newattribute.getName().length() + 1 + newattribute.length()+ 1",
      "nodeType" : "Assignment",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 459,
        "startColumnNumber" : 20,
        "endLineNumber" : 459,
        "endColumnNumber" : 102
      },
      "nodeContext" : "globalBodySize+=newattribute.getName().length() + 1 + newattribute.length()+ 1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 508,
        "startLineNumber" : 453,
        "startColumnNumber" : 20,
        "endLineNumber" : 460,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  String key=encodeAttribute(attribute.getName(),charset);\n  String value=encodeAttribute(attribute.getValue(),charset);\n  Attribute newattribute=factory.createAttribute(request,key,value);\n  multipartHttpDatas.add(newattribute);\n  globalBodySize+=newattribute.getName().length() + 1 + newattribute.length()+ 1;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 53,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 616,
        "startLineNumber" : 453,
        "startColumnNumber" : 16,
        "endLineNumber" : 462,
        "endColumnNumber" : 17
      },
      "nodeContext" : "try {\n  String key=encodeAttribute(attribute.getName(),charset);\n  String value=encodeAttribute(attribute.getValue(),charset);\n  Attribute newattribute=factory.createAttribute(request,key,value);\n  multipartHttpDatas.add(newattribute);\n  globalBodySize+=newattribute.getName().length() + 1 + newattribute.length()+ 1;\n}\n catch (IOException e) {\n  throw new ErrorDataEncoderException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 65,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 707,
        "startLineNumber" : 451,
        "startColumnNumber" : 43,
        "endLineNumber" : 463,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Attribute attribute=(Attribute)data;\n  try {\n    String key=encodeAttribute(attribute.getName(),charset);\n    String value=encodeAttribute(attribute.getValue(),charset);\n    Attribute newattribute=factory.createAttribute(request,key,value);\n    multipartHttpDatas.add(newattribute);\n    globalBodySize+=newattribute.getName().length() + 1 + newattribute.length()+ 1;\n  }\n catch (  IOException e) {\n    throw new ErrorDataEncoderException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 75,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1396,
        "startLineNumber" : 451,
        "startColumnNumber" : 12,
        "endLineNumber" : 472,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (data instanceof Attribute) {\n  Attribute attribute=(Attribute)data;\n  try {\n    String key=encodeAttribute(attribute.getName(),charset);\n    String value=encodeAttribute(attribute.getValue(),charset);\n    Attribute newattribute=factory.createAttribute(request,key,value);\n    multipartHttpDatas.add(newattribute);\n    globalBodySize+=newattribute.getName().length() + 1 + newattribute.length()+ 1;\n  }\n catch (  IOException e) {\n    throw new ErrorDataEncoderException(e);\n  }\n}\n else if (data instanceof FileUpload) {\n  FileUpload fileUpload=(FileUpload)data;\n  String key=encodeAttribute(fileUpload.getName(),charset);\n  String value=encodeAttribute(fileUpload.getFilename(),charset);\n  Attribute newattribute=factory.createAttribute(request,key,value);\n  multipartHttpDatas.add(newattribute);\n  globalBodySize+=newattribute.getName().length() + 1 + newattribute.length()+ 1;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 147,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1443,
        "startLineNumber" : 450,
        "startColumnNumber" : 26,
        "endLineNumber" : 474,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (data instanceof Attribute) {\n    Attribute attribute=(Attribute)data;\n    try {\n      String key=encodeAttribute(attribute.getName(),charset);\n      String value=encodeAttribute(attribute.getValue(),charset);\n      Attribute newattribute=factory.createAttribute(request,key,value);\n      multipartHttpDatas.add(newattribute);\n      globalBodySize+=newattribute.getName().length() + 1 + newattribute.length()+ 1;\n    }\n catch (    IOException e) {\n      throw new ErrorDataEncoderException(e);\n    }\n  }\n else   if (data instanceof FileUpload) {\n    FileUpload fileUpload=(FileUpload)data;\n    String key=encodeAttribute(fileUpload.getName(),charset);\n    String value=encodeAttribute(fileUpload.getFilename(),charset);\n    Attribute newattribute=factory.createAttribute(request,key,value);\n    multipartHttpDatas.add(newattribute);\n    globalBodySize+=newattribute.getName().length() + 1 + newattribute.length()+ 1;\n  }\n  return;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 149,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1461,
        "startLineNumber" : 450,
        "startColumnNumber" : 8,
        "endLineNumber" : 474,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!isMultipart) {\n  if (data instanceof Attribute) {\n    Attribute attribute=(Attribute)data;\n    try {\n      String key=encodeAttribute(attribute.getName(),charset);\n      String value=encodeAttribute(attribute.getValue(),charset);\n      Attribute newattribute=factory.createAttribute(request,key,value);\n      multipartHttpDatas.add(newattribute);\n      globalBodySize+=newattribute.getName().length() + 1 + newattribute.length()+ 1;\n    }\n catch (    IOException e) {\n      throw new ErrorDataEncoderException(e);\n    }\n  }\n else   if (data instanceof FileUpload) {\n    FileUpload fileUpload=(FileUpload)data;\n    String key=encodeAttribute(fileUpload.getName(),charset);\n    String value=encodeAttribute(fileUpload.getFilename(),charset);\n    Attribute newattribute=factory.createAttribute(request,key,value);\n    multipartHttpDatas.add(newattribute);\n    globalBodySize+=newattribute.getName().length() + 1 + newattribute.length()+ 1;\n  }\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 152,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 14284,
        "startLineNumber" : 445,
        "startColumnNumber" : 89,
        "endLineNumber" : 718,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (headerFinalized) {\n    throw new ErrorDataEncoderException(\"Cannot add value once finalized\");\n  }\n  bodyListDatas.add(requireNonNull(data,\"data\"));\n  if (!isMultipart) {\n    if (data instanceof Attribute) {\n      Attribute attribute=(Attribute)data;\n      try {\n        String key=encodeAttribute(attribute.getName(),charset);\n        String value=encodeAttribute(attribute.getValue(),charset);\n        Attribute newattribute=factory.createAttribute(request,key,value);\n        multipartHttpDatas.add(newattribute);\n        globalBodySize+=newattribute.getName().length() + 1 + newattribute.length()+ 1;\n      }\n catch (      IOException e) {\n        throw new ErrorDataEncoderException(e);\n      }\n    }\n else     if (data instanceof FileUpload) {\n      FileUpload fileUpload=(FileUpload)data;\n      String key=encodeAttribute(fileUpload.getName(),charset);\n      String value=encodeAttribute(fileUpload.getFilename(),charset);\n      Attribute newattribute=factory.createAttribute(request,key,value);\n      multipartHttpDatas.add(newattribute);\n      globalBodySize+=newattribute.getName().length() + 1 + newattribute.length()+ 1;\n    }\n    return;\n  }\n  if (data instanceof Attribute) {\n    if (duringMixedMode) {\n      InternalAttribute internal=new InternalAttribute(charset);\n      internal.addValue(\"\\r\\n--\" + multipartMixedBoundary + \"--\");\n      multipartHttpDatas.add(internal);\n      multipartMixedBoundary=null;\n      currentFileUpload=null;\n      duringMixedMode=false;\n    }\n    InternalAttribute internal=new InternalAttribute(charset);\n    if (!multipartHttpDatas.isEmpty()) {\n      internal.addValue(\"\\r\\n\");\n    }\n    internal.addValue(\"--\" + multipartDataBoundary + \"\\r\\n\");\n    Attribute attribute=(Attribute)data;\n    internal.addValue(HttpHeaderNames.CONTENT_DISPOSITION + \": \" + HttpHeaderValues.FORM_DATA+ \"; \"+ HttpHeaderValues.NAME+ \"=\\\"\"+ attribute.getName()+ \"\\\"\\r\\n\");\n    internal.addValue(HttpHeaderNames.CONTENT_LENGTH + \": \" + attribute.length()+ \"\\r\\n\");\n    Charset localcharset=attribute.getCharset();\n    if (localcharset != null) {\n      internal.addValue(HttpHeaderNames.CONTENT_TYPE + \": \" + HttpPostBodyUtil.DEFAULT_TEXT_CONTENT_TYPE+ \"; \"+ HttpHeaderValues.CHARSET+ '='+ localcharset.name()+ \"\\r\\n\");\n    }\n    internal.addValue(\"\\r\\n\");\n    multipartHttpDatas.add(internal);\n    multipartHttpDatas.add(data);\n    globalBodySize+=attribute.length() + internal.size();\n  }\n else   if (data instanceof FileUpload) {\n    FileUpload fileUpload=(FileUpload)data;\n    InternalAttribute internal=new InternalAttribute(charset);\n    if (!multipartHttpDatas.isEmpty()) {\n      internal.addValue(\"\\r\\n\");\n    }\n    boolean localMixed;\n    if (duringMixedMode) {\n      if (currentFileUpload != null && currentFileUpload.getName().equals(fileUpload.getName())) {\n        localMixed=true;\n      }\n else {\n        internal.addValue(\"--\" + multipartMixedBoundary + \"--\");\n        multipartHttpDatas.add(internal);\n        multipartMixedBoundary=null;\n        internal=new InternalAttribute(charset);\n        internal.addValue(\"\\r\\n\");\n        localMixed=false;\n        currentFileUpload=fileUpload;\n        duringMixedMode=false;\n      }\n    }\n else {\n      if (encoderMode != EncoderMode.HTML5 && currentFileUpload != null && currentFileUpload.getName().equals(fileUpload.getName())) {\n        initMixedMultipart();\n        InternalAttribute pastAttribute=(InternalAttribute)multipartHttpDatas.get(multipartHttpDatas.size() - 2);\n        globalBodySize-=pastAttribute.size();\n        StringBuilder replacement=new StringBuilder(139 + multipartDataBoundary.length() + multipartMixedBoundary.length() * 2 + fileUpload.getFilename().length() + fileUpload.getName().length()).append(\"--\").append(multipartDataBoundary).append(\"\\r\\n\").append(HttpHeaderNames.CONTENT_DISPOSITION).append(\": \").append(HttpHeaderValues.FORM_DATA).append(\"; \").append(HttpHeaderValues.NAME).append(\"=\\\"\").append(fileUpload.getName()).append(\"\\\"\\r\\n\").append(HttpHeaderNames.CONTENT_TYPE).append(\": \").append(HttpHeaderValues.MULTIPART_MIXED).append(\"; \").append(HttpHeaderValues.BOUNDARY).append('=').append(multipartMixedBoundary).append(\"\\r\\n\\r\\n\").append(\"--\").append(multipartMixedBoundary).append(\"\\r\\n\").append(HttpHeaderNames.CONTENT_DISPOSITION).append(\": \").append(HttpHeaderValues.ATTACHMENT);\n        if (!fileUpload.getFilename().isEmpty()) {\n          replacement.append(\"; \").append(HttpHeaderValues.FILENAME).append(\"=\\\"\").append(currentFileUpload.getFilename()).append('\"');\n        }\n        replacement.append(\"\\r\\n\");\n        pastAttribute.setValue(replacement.toString(),1);\n        pastAttribute.setValue(\"\",2);\n        globalBodySize+=pastAttribute.size();\n        localMixed=true;\n        duringMixedMode=true;\n      }\n else {\n        localMixed=false;\n        currentFileUpload=fileUpload;\n        duringMixedMode=false;\n      }\n    }\n    if (localMixed) {\n      internal.addValue(\"--\" + multipartMixedBoundary + \"\\r\\n\");\n      if (fileUpload.getFilename().isEmpty()) {\n        internal.addValue(HttpHeaderNames.CONTENT_DISPOSITION + \": \" + HttpHeaderValues.ATTACHMENT+ \"\\r\\n\");\n      }\n else {\n        internal.addValue(HttpHeaderNames.CONTENT_DISPOSITION + \": \" + HttpHeaderValues.ATTACHMENT+ \"; \"+ HttpHeaderValues.FILENAME+ \"=\\\"\"+ fileUpload.getFilename()+ \"\\\"\\r\\n\");\n      }\n    }\n else {\n      internal.addValue(\"--\" + multipartDataBoundary + \"\\r\\n\");\n      if (fileUpload.getFilename().isEmpty()) {\n        internal.addValue(HttpHeaderNames.CONTENT_DISPOSITION + \": \" + HttpHeaderValues.FORM_DATA+ \"; \"+ HttpHeaderValues.NAME+ \"=\\\"\"+ fileUpload.getName()+ \"\\\"\\r\\n\");\n      }\n else {\n        internal.addValue(HttpHeaderNames.CONTENT_DISPOSITION + \": \" + HttpHeaderValues.FORM_DATA+ \"; \"+ HttpHeaderValues.NAME+ \"=\\\"\"+ fileUpload.getName()+ \"\\\"; \"+ HttpHeaderValues.FILENAME+ \"=\\\"\"+ fileUpload.getFilename()+ \"\\\"\\r\\n\");\n      }\n    }\n    internal.addValue(HttpHeaderNames.CONTENT_LENGTH + \": \" + fileUpload.length()+ \"\\r\\n\");\n    internal.addValue(HttpHeaderNames.CONTENT_TYPE + \": \" + fileUpload.getContentType());\n    String contentTransferEncoding=fileUpload.getContentTransferEncoding();\n    if (contentTransferEncoding != null && contentTransferEncoding.equals(HttpPostBodyUtil.TransferEncodingMechanism.BINARY.value())) {\n      internal.addValue(\"\\r\\n\" + HttpHeaderNames.CONTENT_TRANSFER_ENCODING + \": \"+ HttpPostBodyUtil.TransferEncodingMechanism.BINARY.value()+ \"\\r\\n\\r\\n\");\n    }\n else     if (fileUpload.getCharset() != null) {\n      internal.addValue(\"; \" + HttpHeaderValues.CHARSET + '='+ fileUpload.getCharset().name()+ \"\\r\\n\\r\\n\");\n    }\n else {\n      internal.addValue(\"\\r\\n\\r\\n\");\n    }\n    multipartHttpDatas.add(internal);\n    multipartHttpDatas.add(data);\n    globalBodySize+=fileUpload.length() + internal.size();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 924,
      "astHeight" : 42
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 14639,
        "startLineNumber" : 437,
        "startColumnNumber" : 4,
        "endLineNumber" : 718,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Add the InterfaceHttpData to the Body list\n * @throws NullPointerException for data\n * @throws ErrorDataEncoderException if the encoding is in error or if the finalize were already done\n */\npublic void addBodyHttpData(InterfaceHttpData data) throws ErrorDataEncoderException {\n  if (headerFinalized) {\n    throw new ErrorDataEncoderException(\"Cannot add value once finalized\");\n  }\n  bodyListDatas.add(requireNonNull(data,\"data\"));\n  if (!isMultipart) {\n    if (data instanceof Attribute) {\n      Attribute attribute=(Attribute)data;\n      try {\n        String key=encodeAttribute(attribute.getName(),charset);\n        String value=encodeAttribute(attribute.getValue(),charset);\n        Attribute newattribute=factory.createAttribute(request,key,value);\n        multipartHttpDatas.add(newattribute);\n        globalBodySize+=newattribute.getName().length() + 1 + newattribute.length()+ 1;\n      }\n catch (      IOException e) {\n        throw new ErrorDataEncoderException(e);\n      }\n    }\n else     if (data instanceof FileUpload) {\n      FileUpload fileUpload=(FileUpload)data;\n      String key=encodeAttribute(fileUpload.getName(),charset);\n      String value=encodeAttribute(fileUpload.getFilename(),charset);\n      Attribute newattribute=factory.createAttribute(request,key,value);\n      multipartHttpDatas.add(newattribute);\n      globalBodySize+=newattribute.getName().length() + 1 + newattribute.length()+ 1;\n    }\n    return;\n  }\n  if (data instanceof Attribute) {\n    if (duringMixedMode) {\n      InternalAttribute internal=new InternalAttribute(charset);\n      internal.addValue(\"\\r\\n--\" + multipartMixedBoundary + \"--\");\n      multipartHttpDatas.add(internal);\n      multipartMixedBoundary=null;\n      currentFileUpload=null;\n      duringMixedMode=false;\n    }\n    InternalAttribute internal=new InternalAttribute(charset);\n    if (!multipartHttpDatas.isEmpty()) {\n      internal.addValue(\"\\r\\n\");\n    }\n    internal.addValue(\"--\" + multipartDataBoundary + \"\\r\\n\");\n    Attribute attribute=(Attribute)data;\n    internal.addValue(HttpHeaderNames.CONTENT_DISPOSITION + \": \" + HttpHeaderValues.FORM_DATA+ \"; \"+ HttpHeaderValues.NAME+ \"=\\\"\"+ attribute.getName()+ \"\\\"\\r\\n\");\n    internal.addValue(HttpHeaderNames.CONTENT_LENGTH + \": \" + attribute.length()+ \"\\r\\n\");\n    Charset localcharset=attribute.getCharset();\n    if (localcharset != null) {\n      internal.addValue(HttpHeaderNames.CONTENT_TYPE + \": \" + HttpPostBodyUtil.DEFAULT_TEXT_CONTENT_TYPE+ \"; \"+ HttpHeaderValues.CHARSET+ '='+ localcharset.name()+ \"\\r\\n\");\n    }\n    internal.addValue(\"\\r\\n\");\n    multipartHttpDatas.add(internal);\n    multipartHttpDatas.add(data);\n    globalBodySize+=attribute.length() + internal.size();\n  }\n else   if (data instanceof FileUpload) {\n    FileUpload fileUpload=(FileUpload)data;\n    InternalAttribute internal=new InternalAttribute(charset);\n    if (!multipartHttpDatas.isEmpty()) {\n      internal.addValue(\"\\r\\n\");\n    }\n    boolean localMixed;\n    if (duringMixedMode) {\n      if (currentFileUpload != null && currentFileUpload.getName().equals(fileUpload.getName())) {\n        localMixed=true;\n      }\n else {\n        internal.addValue(\"--\" + multipartMixedBoundary + \"--\");\n        multipartHttpDatas.add(internal);\n        multipartMixedBoundary=null;\n        internal=new InternalAttribute(charset);\n        internal.addValue(\"\\r\\n\");\n        localMixed=false;\n        currentFileUpload=fileUpload;\n        duringMixedMode=false;\n      }\n    }\n else {\n      if (encoderMode != EncoderMode.HTML5 && currentFileUpload != null && currentFileUpload.getName().equals(fileUpload.getName())) {\n        initMixedMultipart();\n        InternalAttribute pastAttribute=(InternalAttribute)multipartHttpDatas.get(multipartHttpDatas.size() - 2);\n        globalBodySize-=pastAttribute.size();\n        StringBuilder replacement=new StringBuilder(139 + multipartDataBoundary.length() + multipartMixedBoundary.length() * 2 + fileUpload.getFilename().length() + fileUpload.getName().length()).append(\"--\").append(multipartDataBoundary).append(\"\\r\\n\").append(HttpHeaderNames.CONTENT_DISPOSITION).append(\": \").append(HttpHeaderValues.FORM_DATA).append(\"; \").append(HttpHeaderValues.NAME).append(\"=\\\"\").append(fileUpload.getName()).append(\"\\\"\\r\\n\").append(HttpHeaderNames.CONTENT_TYPE).append(\": \").append(HttpHeaderValues.MULTIPART_MIXED).append(\"; \").append(HttpHeaderValues.BOUNDARY).append('=').append(multipartMixedBoundary).append(\"\\r\\n\\r\\n\").append(\"--\").append(multipartMixedBoundary).append(\"\\r\\n\").append(HttpHeaderNames.CONTENT_DISPOSITION).append(\": \").append(HttpHeaderValues.ATTACHMENT);\n        if (!fileUpload.getFilename().isEmpty()) {\n          replacement.append(\"; \").append(HttpHeaderValues.FILENAME).append(\"=\\\"\").append(currentFileUpload.getFilename()).append('\"');\n        }\n        replacement.append(\"\\r\\n\");\n        pastAttribute.setValue(replacement.toString(),1);\n        pastAttribute.setValue(\"\",2);\n        globalBodySize+=pastAttribute.size();\n        localMixed=true;\n        duringMixedMode=true;\n      }\n else {\n        localMixed=false;\n        currentFileUpload=fileUpload;\n        duringMixedMode=false;\n      }\n    }\n    if (localMixed) {\n      internal.addValue(\"--\" + multipartMixedBoundary + \"\\r\\n\");\n      if (fileUpload.getFilename().isEmpty()) {\n        internal.addValue(HttpHeaderNames.CONTENT_DISPOSITION + \": \" + HttpHeaderValues.ATTACHMENT+ \"\\r\\n\");\n      }\n else {\n        internal.addValue(HttpHeaderNames.CONTENT_DISPOSITION + \": \" + HttpHeaderValues.ATTACHMENT+ \"; \"+ HttpHeaderValues.FILENAME+ \"=\\\"\"+ fileUpload.getFilename()+ \"\\\"\\r\\n\");\n      }\n    }\n else {\n      internal.addValue(\"--\" + multipartDataBoundary + \"\\r\\n\");\n      if (fileUpload.getFilename().isEmpty()) {\n        internal.addValue(HttpHeaderNames.CONTENT_DISPOSITION + \": \" + HttpHeaderValues.FORM_DATA+ \"; \"+ HttpHeaderValues.NAME+ \"=\\\"\"+ fileUpload.getName()+ \"\\\"\\r\\n\");\n      }\n else {\n        internal.addValue(HttpHeaderNames.CONTENT_DISPOSITION + \": \" + HttpHeaderValues.FORM_DATA+ \"; \"+ HttpHeaderValues.NAME+ \"=\\\"\"+ fileUpload.getName()+ \"\\\"; \"+ HttpHeaderValues.FILENAME+ \"=\\\"\"+ fileUpload.getFilename()+ \"\\\"\\r\\n\");\n      }\n    }\n    internal.addValue(HttpHeaderNames.CONTENT_LENGTH + \": \" + fileUpload.length()+ \"\\r\\n\");\n    internal.addValue(HttpHeaderNames.CONTENT_TYPE + \": \" + fileUpload.getContentType());\n    String contentTransferEncoding=fileUpload.getContentTransferEncoding();\n    if (contentTransferEncoding != null && contentTransferEncoding.equals(HttpPostBodyUtil.TransferEncodingMechanism.BINARY.value())) {\n      internal.addValue(\"\\r\\n\" + HttpHeaderNames.CONTENT_TRANSFER_ENCODING + \": \"+ HttpPostBodyUtil.TransferEncodingMechanism.BINARY.value()+ \"\\r\\n\\r\\n\");\n    }\n else     if (fileUpload.getCharset() != null) {\n      internal.addValue(\"; \" + HttpHeaderValues.CHARSET + '='+ fileUpload.getCharset().name()+ \"\\r\\n\\r\\n\");\n    }\n else {\n      internal.addValue(\"\\r\\n\\r\\n\");\n    }\n    multipartHttpDatas.add(internal);\n    multipartHttpDatas.add(data);\n    globalBodySize+=fileUpload.length() + internal.size();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 935,
      "astHeight" : 43
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 459,
        "startColumnNumber" : 20,
        "endLineNumber" : 459,
        "endColumnNumber" : 102
      },
      "nodeContext" : "globalBodySize+=newattribute.getName().length() + 1 + newattribute.length()+ 1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "int"
  }, {
    "nodeContext" : "newattribute.getName().length()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 471,
      "startColumnNumber" : 34,
      "endLineNumber" : 471,
      "endColumnNumber" : 65
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 471,
        "startColumnNumber" : 34,
        "endLineNumber" : 471,
        "endColumnNumber" : 97
      },
      "nodeContext" : "newattribute.getName().length() + 1 + newattribute.length()+ 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 471,
        "startColumnNumber" : 16,
        "endLineNumber" : 471,
        "endColumnNumber" : 97
      },
      "nodeContext" : "globalBodySize+=newattribute.getName().length() + 1 + newattribute.length()+ 1",
      "nodeType" : "Assignment",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 471,
        "startColumnNumber" : 16,
        "endLineNumber" : 471,
        "endColumnNumber" : 98
      },
      "nodeContext" : "globalBodySize+=newattribute.getName().length() + 1 + newattribute.length()+ 1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 620,
        "startLineNumber" : 463,
        "startColumnNumber" : 51,
        "endLineNumber" : 472,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  FileUpload fileUpload=(FileUpload)data;\n  String key=encodeAttribute(fileUpload.getName(),charset);\n  String value=encodeAttribute(fileUpload.getFilename(),charset);\n  Attribute newattribute=factory.createAttribute(request,key,value);\n  multipartHttpDatas.add(newattribute);\n  globalBodySize+=newattribute.getName().length() + 1 + newattribute.length()+ 1;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 652,
        "startLineNumber" : 463,
        "startColumnNumber" : 19,
        "endLineNumber" : 472,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (data instanceof FileUpload) {\n  FileUpload fileUpload=(FileUpload)data;\n  String key=encodeAttribute(fileUpload.getName(),charset);\n  String value=encodeAttribute(fileUpload.getFilename(),charset);\n  Attribute newattribute=factory.createAttribute(request,key,value);\n  multipartHttpDatas.add(newattribute);\n  globalBodySize+=newattribute.getName().length() + 1 + newattribute.length()+ 1;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 67,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1396,
        "startLineNumber" : 451,
        "startColumnNumber" : 12,
        "endLineNumber" : 472,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (data instanceof Attribute) {\n  Attribute attribute=(Attribute)data;\n  try {\n    String key=encodeAttribute(attribute.getName(),charset);\n    String value=encodeAttribute(attribute.getValue(),charset);\n    Attribute newattribute=factory.createAttribute(request,key,value);\n    multipartHttpDatas.add(newattribute);\n    globalBodySize+=newattribute.getName().length() + 1 + newattribute.length()+ 1;\n  }\n catch (  IOException e) {\n    throw new ErrorDataEncoderException(e);\n  }\n}\n else if (data instanceof FileUpload) {\n  FileUpload fileUpload=(FileUpload)data;\n  String key=encodeAttribute(fileUpload.getName(),charset);\n  String value=encodeAttribute(fileUpload.getFilename(),charset);\n  Attribute newattribute=factory.createAttribute(request,key,value);\n  multipartHttpDatas.add(newattribute);\n  globalBodySize+=newattribute.getName().length() + 1 + newattribute.length()+ 1;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 147,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1443,
        "startLineNumber" : 450,
        "startColumnNumber" : 26,
        "endLineNumber" : 474,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (data instanceof Attribute) {\n    Attribute attribute=(Attribute)data;\n    try {\n      String key=encodeAttribute(attribute.getName(),charset);\n      String value=encodeAttribute(attribute.getValue(),charset);\n      Attribute newattribute=factory.createAttribute(request,key,value);\n      multipartHttpDatas.add(newattribute);\n      globalBodySize+=newattribute.getName().length() + 1 + newattribute.length()+ 1;\n    }\n catch (    IOException e) {\n      throw new ErrorDataEncoderException(e);\n    }\n  }\n else   if (data instanceof FileUpload) {\n    FileUpload fileUpload=(FileUpload)data;\n    String key=encodeAttribute(fileUpload.getName(),charset);\n    String value=encodeAttribute(fileUpload.getFilename(),charset);\n    Attribute newattribute=factory.createAttribute(request,key,value);\n    multipartHttpDatas.add(newattribute);\n    globalBodySize+=newattribute.getName().length() + 1 + newattribute.length()+ 1;\n  }\n  return;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 149,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1461,
        "startLineNumber" : 450,
        "startColumnNumber" : 8,
        "endLineNumber" : 474,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!isMultipart) {\n  if (data instanceof Attribute) {\n    Attribute attribute=(Attribute)data;\n    try {\n      String key=encodeAttribute(attribute.getName(),charset);\n      String value=encodeAttribute(attribute.getValue(),charset);\n      Attribute newattribute=factory.createAttribute(request,key,value);\n      multipartHttpDatas.add(newattribute);\n      globalBodySize+=newattribute.getName().length() + 1 + newattribute.length()+ 1;\n    }\n catch (    IOException e) {\n      throw new ErrorDataEncoderException(e);\n    }\n  }\n else   if (data instanceof FileUpload) {\n    FileUpload fileUpload=(FileUpload)data;\n    String key=encodeAttribute(fileUpload.getName(),charset);\n    String value=encodeAttribute(fileUpload.getFilename(),charset);\n    Attribute newattribute=factory.createAttribute(request,key,value);\n    multipartHttpDatas.add(newattribute);\n    globalBodySize+=newattribute.getName().length() + 1 + newattribute.length()+ 1;\n  }\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 152,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 14284,
        "startLineNumber" : 445,
        "startColumnNumber" : 89,
        "endLineNumber" : 718,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (headerFinalized) {\n    throw new ErrorDataEncoderException(\"Cannot add value once finalized\");\n  }\n  bodyListDatas.add(requireNonNull(data,\"data\"));\n  if (!isMultipart) {\n    if (data instanceof Attribute) {\n      Attribute attribute=(Attribute)data;\n      try {\n        String key=encodeAttribute(attribute.getName(),charset);\n        String value=encodeAttribute(attribute.getValue(),charset);\n        Attribute newattribute=factory.createAttribute(request,key,value);\n        multipartHttpDatas.add(newattribute);\n        globalBodySize+=newattribute.getName().length() + 1 + newattribute.length()+ 1;\n      }\n catch (      IOException e) {\n        throw new ErrorDataEncoderException(e);\n      }\n    }\n else     if (data instanceof FileUpload) {\n      FileUpload fileUpload=(FileUpload)data;\n      String key=encodeAttribute(fileUpload.getName(),charset);\n      String value=encodeAttribute(fileUpload.getFilename(),charset);\n      Attribute newattribute=factory.createAttribute(request,key,value);\n      multipartHttpDatas.add(newattribute);\n      globalBodySize+=newattribute.getName().length() + 1 + newattribute.length()+ 1;\n    }\n    return;\n  }\n  if (data instanceof Attribute) {\n    if (duringMixedMode) {\n      InternalAttribute internal=new InternalAttribute(charset);\n      internal.addValue(\"\\r\\n--\" + multipartMixedBoundary + \"--\");\n      multipartHttpDatas.add(internal);\n      multipartMixedBoundary=null;\n      currentFileUpload=null;\n      duringMixedMode=false;\n    }\n    InternalAttribute internal=new InternalAttribute(charset);\n    if (!multipartHttpDatas.isEmpty()) {\n      internal.addValue(\"\\r\\n\");\n    }\n    internal.addValue(\"--\" + multipartDataBoundary + \"\\r\\n\");\n    Attribute attribute=(Attribute)data;\n    internal.addValue(HttpHeaderNames.CONTENT_DISPOSITION + \": \" + HttpHeaderValues.FORM_DATA+ \"; \"+ HttpHeaderValues.NAME+ \"=\\\"\"+ attribute.getName()+ \"\\\"\\r\\n\");\n    internal.addValue(HttpHeaderNames.CONTENT_LENGTH + \": \" + attribute.length()+ \"\\r\\n\");\n    Charset localcharset=attribute.getCharset();\n    if (localcharset != null) {\n      internal.addValue(HttpHeaderNames.CONTENT_TYPE + \": \" + HttpPostBodyUtil.DEFAULT_TEXT_CONTENT_TYPE+ \"; \"+ HttpHeaderValues.CHARSET+ '='+ localcharset.name()+ \"\\r\\n\");\n    }\n    internal.addValue(\"\\r\\n\");\n    multipartHttpDatas.add(internal);\n    multipartHttpDatas.add(data);\n    globalBodySize+=attribute.length() + internal.size();\n  }\n else   if (data instanceof FileUpload) {\n    FileUpload fileUpload=(FileUpload)data;\n    InternalAttribute internal=new InternalAttribute(charset);\n    if (!multipartHttpDatas.isEmpty()) {\n      internal.addValue(\"\\r\\n\");\n    }\n    boolean localMixed;\n    if (duringMixedMode) {\n      if (currentFileUpload != null && currentFileUpload.getName().equals(fileUpload.getName())) {\n        localMixed=true;\n      }\n else {\n        internal.addValue(\"--\" + multipartMixedBoundary + \"--\");\n        multipartHttpDatas.add(internal);\n        multipartMixedBoundary=null;\n        internal=new InternalAttribute(charset);\n        internal.addValue(\"\\r\\n\");\n        localMixed=false;\n        currentFileUpload=fileUpload;\n        duringMixedMode=false;\n      }\n    }\n else {\n      if (encoderMode != EncoderMode.HTML5 && currentFileUpload != null && currentFileUpload.getName().equals(fileUpload.getName())) {\n        initMixedMultipart();\n        InternalAttribute pastAttribute=(InternalAttribute)multipartHttpDatas.get(multipartHttpDatas.size() - 2);\n        globalBodySize-=pastAttribute.size();\n        StringBuilder replacement=new StringBuilder(139 + multipartDataBoundary.length() + multipartMixedBoundary.length() * 2 + fileUpload.getFilename().length() + fileUpload.getName().length()).append(\"--\").append(multipartDataBoundary).append(\"\\r\\n\").append(HttpHeaderNames.CONTENT_DISPOSITION).append(\": \").append(HttpHeaderValues.FORM_DATA).append(\"; \").append(HttpHeaderValues.NAME).append(\"=\\\"\").append(fileUpload.getName()).append(\"\\\"\\r\\n\").append(HttpHeaderNames.CONTENT_TYPE).append(\": \").append(HttpHeaderValues.MULTIPART_MIXED).append(\"; \").append(HttpHeaderValues.BOUNDARY).append('=').append(multipartMixedBoundary).append(\"\\r\\n\\r\\n\").append(\"--\").append(multipartMixedBoundary).append(\"\\r\\n\").append(HttpHeaderNames.CONTENT_DISPOSITION).append(\": \").append(HttpHeaderValues.ATTACHMENT);\n        if (!fileUpload.getFilename().isEmpty()) {\n          replacement.append(\"; \").append(HttpHeaderValues.FILENAME).append(\"=\\\"\").append(currentFileUpload.getFilename()).append('\"');\n        }\n        replacement.append(\"\\r\\n\");\n        pastAttribute.setValue(replacement.toString(),1);\n        pastAttribute.setValue(\"\",2);\n        globalBodySize+=pastAttribute.size();\n        localMixed=true;\n        duringMixedMode=true;\n      }\n else {\n        localMixed=false;\n        currentFileUpload=fileUpload;\n        duringMixedMode=false;\n      }\n    }\n    if (localMixed) {\n      internal.addValue(\"--\" + multipartMixedBoundary + \"\\r\\n\");\n      if (fileUpload.getFilename().isEmpty()) {\n        internal.addValue(HttpHeaderNames.CONTENT_DISPOSITION + \": \" + HttpHeaderValues.ATTACHMENT+ \"\\r\\n\");\n      }\n else {\n        internal.addValue(HttpHeaderNames.CONTENT_DISPOSITION + \": \" + HttpHeaderValues.ATTACHMENT+ \"; \"+ HttpHeaderValues.FILENAME+ \"=\\\"\"+ fileUpload.getFilename()+ \"\\\"\\r\\n\");\n      }\n    }\n else {\n      internal.addValue(\"--\" + multipartDataBoundary + \"\\r\\n\");\n      if (fileUpload.getFilename().isEmpty()) {\n        internal.addValue(HttpHeaderNames.CONTENT_DISPOSITION + \": \" + HttpHeaderValues.FORM_DATA+ \"; \"+ HttpHeaderValues.NAME+ \"=\\\"\"+ fileUpload.getName()+ \"\\\"\\r\\n\");\n      }\n else {\n        internal.addValue(HttpHeaderNames.CONTENT_DISPOSITION + \": \" + HttpHeaderValues.FORM_DATA+ \"; \"+ HttpHeaderValues.NAME+ \"=\\\"\"+ fileUpload.getName()+ \"\\\"; \"+ HttpHeaderValues.FILENAME+ \"=\\\"\"+ fileUpload.getFilename()+ \"\\\"\\r\\n\");\n      }\n    }\n    internal.addValue(HttpHeaderNames.CONTENT_LENGTH + \": \" + fileUpload.length()+ \"\\r\\n\");\n    internal.addValue(HttpHeaderNames.CONTENT_TYPE + \": \" + fileUpload.getContentType());\n    String contentTransferEncoding=fileUpload.getContentTransferEncoding();\n    if (contentTransferEncoding != null && contentTransferEncoding.equals(HttpPostBodyUtil.TransferEncodingMechanism.BINARY.value())) {\n      internal.addValue(\"\\r\\n\" + HttpHeaderNames.CONTENT_TRANSFER_ENCODING + \": \"+ HttpPostBodyUtil.TransferEncodingMechanism.BINARY.value()+ \"\\r\\n\\r\\n\");\n    }\n else     if (fileUpload.getCharset() != null) {\n      internal.addValue(\"; \" + HttpHeaderValues.CHARSET + '='+ fileUpload.getCharset().name()+ \"\\r\\n\\r\\n\");\n    }\n else {\n      internal.addValue(\"\\r\\n\\r\\n\");\n    }\n    multipartHttpDatas.add(internal);\n    multipartHttpDatas.add(data);\n    globalBodySize+=fileUpload.length() + internal.size();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 924,
      "astHeight" : 42
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 14639,
        "startLineNumber" : 437,
        "startColumnNumber" : 4,
        "endLineNumber" : 718,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Add the InterfaceHttpData to the Body list\n * @throws NullPointerException for data\n * @throws ErrorDataEncoderException if the encoding is in error or if the finalize were already done\n */\npublic void addBodyHttpData(InterfaceHttpData data) throws ErrorDataEncoderException {\n  if (headerFinalized) {\n    throw new ErrorDataEncoderException(\"Cannot add value once finalized\");\n  }\n  bodyListDatas.add(requireNonNull(data,\"data\"));\n  if (!isMultipart) {\n    if (data instanceof Attribute) {\n      Attribute attribute=(Attribute)data;\n      try {\n        String key=encodeAttribute(attribute.getName(),charset);\n        String value=encodeAttribute(attribute.getValue(),charset);\n        Attribute newattribute=factory.createAttribute(request,key,value);\n        multipartHttpDatas.add(newattribute);\n        globalBodySize+=newattribute.getName().length() + 1 + newattribute.length()+ 1;\n      }\n catch (      IOException e) {\n        throw new ErrorDataEncoderException(e);\n      }\n    }\n else     if (data instanceof FileUpload) {\n      FileUpload fileUpload=(FileUpload)data;\n      String key=encodeAttribute(fileUpload.getName(),charset);\n      String value=encodeAttribute(fileUpload.getFilename(),charset);\n      Attribute newattribute=factory.createAttribute(request,key,value);\n      multipartHttpDatas.add(newattribute);\n      globalBodySize+=newattribute.getName().length() + 1 + newattribute.length()+ 1;\n    }\n    return;\n  }\n  if (data instanceof Attribute) {\n    if (duringMixedMode) {\n      InternalAttribute internal=new InternalAttribute(charset);\n      internal.addValue(\"\\r\\n--\" + multipartMixedBoundary + \"--\");\n      multipartHttpDatas.add(internal);\n      multipartMixedBoundary=null;\n      currentFileUpload=null;\n      duringMixedMode=false;\n    }\n    InternalAttribute internal=new InternalAttribute(charset);\n    if (!multipartHttpDatas.isEmpty()) {\n      internal.addValue(\"\\r\\n\");\n    }\n    internal.addValue(\"--\" + multipartDataBoundary + \"\\r\\n\");\n    Attribute attribute=(Attribute)data;\n    internal.addValue(HttpHeaderNames.CONTENT_DISPOSITION + \": \" + HttpHeaderValues.FORM_DATA+ \"; \"+ HttpHeaderValues.NAME+ \"=\\\"\"+ attribute.getName()+ \"\\\"\\r\\n\");\n    internal.addValue(HttpHeaderNames.CONTENT_LENGTH + \": \" + attribute.length()+ \"\\r\\n\");\n    Charset localcharset=attribute.getCharset();\n    if (localcharset != null) {\n      internal.addValue(HttpHeaderNames.CONTENT_TYPE + \": \" + HttpPostBodyUtil.DEFAULT_TEXT_CONTENT_TYPE+ \"; \"+ HttpHeaderValues.CHARSET+ '='+ localcharset.name()+ \"\\r\\n\");\n    }\n    internal.addValue(\"\\r\\n\");\n    multipartHttpDatas.add(internal);\n    multipartHttpDatas.add(data);\n    globalBodySize+=attribute.length() + internal.size();\n  }\n else   if (data instanceof FileUpload) {\n    FileUpload fileUpload=(FileUpload)data;\n    InternalAttribute internal=new InternalAttribute(charset);\n    if (!multipartHttpDatas.isEmpty()) {\n      internal.addValue(\"\\r\\n\");\n    }\n    boolean localMixed;\n    if (duringMixedMode) {\n      if (currentFileUpload != null && currentFileUpload.getName().equals(fileUpload.getName())) {\n        localMixed=true;\n      }\n else {\n        internal.addValue(\"--\" + multipartMixedBoundary + \"--\");\n        multipartHttpDatas.add(internal);\n        multipartMixedBoundary=null;\n        internal=new InternalAttribute(charset);\n        internal.addValue(\"\\r\\n\");\n        localMixed=false;\n        currentFileUpload=fileUpload;\n        duringMixedMode=false;\n      }\n    }\n else {\n      if (encoderMode != EncoderMode.HTML5 && currentFileUpload != null && currentFileUpload.getName().equals(fileUpload.getName())) {\n        initMixedMultipart();\n        InternalAttribute pastAttribute=(InternalAttribute)multipartHttpDatas.get(multipartHttpDatas.size() - 2);\n        globalBodySize-=pastAttribute.size();\n        StringBuilder replacement=new StringBuilder(139 + multipartDataBoundary.length() + multipartMixedBoundary.length() * 2 + fileUpload.getFilename().length() + fileUpload.getName().length()).append(\"--\").append(multipartDataBoundary).append(\"\\r\\n\").append(HttpHeaderNames.CONTENT_DISPOSITION).append(\": \").append(HttpHeaderValues.FORM_DATA).append(\"; \").append(HttpHeaderValues.NAME).append(\"=\\\"\").append(fileUpload.getName()).append(\"\\\"\\r\\n\").append(HttpHeaderNames.CONTENT_TYPE).append(\": \").append(HttpHeaderValues.MULTIPART_MIXED).append(\"; \").append(HttpHeaderValues.BOUNDARY).append('=').append(multipartMixedBoundary).append(\"\\r\\n\\r\\n\").append(\"--\").append(multipartMixedBoundary).append(\"\\r\\n\").append(HttpHeaderNames.CONTENT_DISPOSITION).append(\": \").append(HttpHeaderValues.ATTACHMENT);\n        if (!fileUpload.getFilename().isEmpty()) {\n          replacement.append(\"; \").append(HttpHeaderValues.FILENAME).append(\"=\\\"\").append(currentFileUpload.getFilename()).append('\"');\n        }\n        replacement.append(\"\\r\\n\");\n        pastAttribute.setValue(replacement.toString(),1);\n        pastAttribute.setValue(\"\",2);\n        globalBodySize+=pastAttribute.size();\n        localMixed=true;\n        duringMixedMode=true;\n      }\n else {\n        localMixed=false;\n        currentFileUpload=fileUpload;\n        duringMixedMode=false;\n      }\n    }\n    if (localMixed) {\n      internal.addValue(\"--\" + multipartMixedBoundary + \"\\r\\n\");\n      if (fileUpload.getFilename().isEmpty()) {\n        internal.addValue(HttpHeaderNames.CONTENT_DISPOSITION + \": \" + HttpHeaderValues.ATTACHMENT+ \"\\r\\n\");\n      }\n else {\n        internal.addValue(HttpHeaderNames.CONTENT_DISPOSITION + \": \" + HttpHeaderValues.ATTACHMENT+ \"; \"+ HttpHeaderValues.FILENAME+ \"=\\\"\"+ fileUpload.getFilename()+ \"\\\"\\r\\n\");\n      }\n    }\n else {\n      internal.addValue(\"--\" + multipartDataBoundary + \"\\r\\n\");\n      if (fileUpload.getFilename().isEmpty()) {\n        internal.addValue(HttpHeaderNames.CONTENT_DISPOSITION + \": \" + HttpHeaderValues.FORM_DATA+ \"; \"+ HttpHeaderValues.NAME+ \"=\\\"\"+ fileUpload.getName()+ \"\\\"\\r\\n\");\n      }\n else {\n        internal.addValue(HttpHeaderNames.CONTENT_DISPOSITION + \": \" + HttpHeaderValues.FORM_DATA+ \"; \"+ HttpHeaderValues.NAME+ \"=\\\"\"+ fileUpload.getName()+ \"\\\"; \"+ HttpHeaderValues.FILENAME+ \"=\\\"\"+ fileUpload.getFilename()+ \"\\\"\\r\\n\");\n      }\n    }\n    internal.addValue(HttpHeaderNames.CONTENT_LENGTH + \": \" + fileUpload.length()+ \"\\r\\n\");\n    internal.addValue(HttpHeaderNames.CONTENT_TYPE + \": \" + fileUpload.getContentType());\n    String contentTransferEncoding=fileUpload.getContentTransferEncoding();\n    if (contentTransferEncoding != null && contentTransferEncoding.equals(HttpPostBodyUtil.TransferEncodingMechanism.BINARY.value())) {\n      internal.addValue(\"\\r\\n\" + HttpHeaderNames.CONTENT_TRANSFER_ENCODING + \": \"+ HttpPostBodyUtil.TransferEncodingMechanism.BINARY.value()+ \"\\r\\n\\r\\n\");\n    }\n else     if (fileUpload.getCharset() != null) {\n      internal.addValue(\"; \" + HttpHeaderValues.CHARSET + '='+ fileUpload.getCharset().name()+ \"\\r\\n\\r\\n\");\n    }\n else {\n      internal.addValue(\"\\r\\n\\r\\n\");\n    }\n    multipartHttpDatas.add(internal);\n    multipartHttpDatas.add(data);\n    globalBodySize+=fileUpload.length() + internal.size();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 935,
      "astHeight" : 43
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 471,
        "startColumnNumber" : 16,
        "endLineNumber" : 471,
        "endColumnNumber" : 98
      },
      "nodeContext" : "globalBodySize+=newattribute.getName().length() + 1 + newattribute.length()+ 1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 459,
    "startColumnNumber" : 38,
    "endLineNumber" : 459,
    "endColumnNumber" : 69
  }, {
    "charLength" : 31,
    "startLineNumber" : 471,
    "startColumnNumber" : 34,
    "endLineNumber" : 471,
    "endColumnNumber" : 65
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}