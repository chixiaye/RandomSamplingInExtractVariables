{
  "id" : 111,
  "expression" : "MiscUtils.getUniqueName(fileStart,\".class\")",
  "projectName" : "Konloch@bytecode-viewer",
  "commitID" : "9ab8ec7f8c061fb1d9b1db3e901034d162a211ff",
  "filePath" : "/src/main/java/the/bytecode/club/bytecodeviewer/decompilers/impl/SmaliDisassembler.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "MiscUtils.getUniqueName(fileStart,\".class\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 44,
      "startLineNumber" : 55,
      "startColumnNumber" : 23,
      "endLineNumber" : 55,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 55,
        "startColumnNumber" : 15,
        "endLineNumber" : 55,
        "endColumnNumber" : 67
      },
      "nodeContext" : "start=MiscUtils.getUniqueName(fileStart,\".class\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 68
      },
      "nodeContext" : "String start=MiscUtils.getUniqueName(fileStart,\".class\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2410,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String exception=\"\";\n  String fileStart=tempDirectory + fs + \"temp\";\n  String start=MiscUtils.getUniqueName(fileStart,\".class\");\n  final File tempClass=new File(start + \".class\");\n  final File tempDex=new File(start + \".dex\");\n  final File tempSmali=new File(start + \"-smali\");\n  try {\n    final FileOutputStream fos=new FileOutputStream(tempClass);\n    fos.write(b);\n    fos.close();\n  }\n catch (  final IOException e) {\n    BytecodeViewer.handleException(e);\n  }\n  Dex2Jar.saveAsDex(tempClass,tempDex,true);\n  try {\n    com.googlecode.d2j.smali.BaksmaliCmd.main(new String[]{tempDex.getAbsolutePath()});\n  }\n catch (  Exception e) {\n    StringWriter sw=new StringWriter();\n    e.printStackTrace(new PrintWriter(sw));\n    e.printStackTrace();\n    exception+=\"Bytecode Viewer Version: \" + VERSION + nl+ nl+ sw;\n  }\n  File rename=new File(tempDex.getName().replaceFirst(\"\\\\.dex\",\"-out\"));\n  try {\n    FileUtils.moveDirectory(rename,tempSmali);\n  }\n catch (  IOException e) {\n    StringWriter sw=new StringWriter();\n    e.printStackTrace(new PrintWriter(sw));\n    e.printStackTrace();\n    exception+=\"Bytecode Viewer Version: \" + VERSION + nl+ nl+ sw;\n  }\n  File outputSmali=null;\n  boolean found=false;\n  File current=tempSmali;\n  while (!found) {\n    File f=Objects.requireNonNull(current.listFiles())[0];\n    if (f.isDirectory())     current=f;\n else {\n      outputSmali=f;\n      found=true;\n    }\n  }\n  try {\n    return DiskReader.loadAsString(outputSmali.getAbsolutePath());\n  }\n catch (  Exception e) {\n    StringWriter sw=new StringWriter();\n    e.printStackTrace(new PrintWriter(sw));\n    e.printStackTrace();\n    exception+=\"Bytecode Viewer Version: \" + VERSION + nl+ nl+ sw;\n  }\n  return SMALI + \" \" + DISASSEMBLER+ \" \"+ ERROR+ \"! \"+ ExceptionUI.SEND_STACKTRACE_TO+ nl+ nl+ TranslatedStrings.SUGGESTED_FIX_DECOMPILER_ERROR+ nl+ nl+ exception;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 332,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2485,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public String decompileClassNode(ClassNode cn,byte[] b){\n  String exception=\"\";\n  String fileStart=tempDirectory + fs + \"temp\";\n  String start=MiscUtils.getUniqueName(fileStart,\".class\");\n  final File tempClass=new File(start + \".class\");\n  final File tempDex=new File(start + \".dex\");\n  final File tempSmali=new File(start + \"-smali\");\n  try {\n    final FileOutputStream fos=new FileOutputStream(tempClass);\n    fos.write(b);\n    fos.close();\n  }\n catch (  final IOException e) {\n    BytecodeViewer.handleException(e);\n  }\n  Dex2Jar.saveAsDex(tempClass,tempDex,true);\n  try {\n    com.googlecode.d2j.smali.BaksmaliCmd.main(new String[]{tempDex.getAbsolutePath()});\n  }\n catch (  Exception e) {\n    StringWriter sw=new StringWriter();\n    e.printStackTrace(new PrintWriter(sw));\n    e.printStackTrace();\n    exception+=\"Bytecode Viewer Version: \" + VERSION + nl+ nl+ sw;\n  }\n  File rename=new File(tempDex.getName().replaceFirst(\"\\\\.dex\",\"-out\"));\n  try {\n    FileUtils.moveDirectory(rename,tempSmali);\n  }\n catch (  IOException e) {\n    StringWriter sw=new StringWriter();\n    e.printStackTrace(new PrintWriter(sw));\n    e.printStackTrace();\n    exception+=\"Bytecode Viewer Version: \" + VERSION + nl+ nl+ sw;\n  }\n  File outputSmali=null;\n  boolean found=false;\n  File current=tempSmali;\n  while (!found) {\n    File f=Objects.requireNonNull(current.listFiles())[0];\n    if (f.isDirectory())     current=f;\n else {\n      outputSmali=f;\n      found=true;\n    }\n  }\n  try {\n    return DiskReader.loadAsString(outputSmali.getAbsolutePath());\n  }\n catch (  Exception e) {\n    StringWriter sw=new StringWriter();\n    e.printStackTrace(new PrintWriter(sw));\n    e.printStackTrace();\n    exception+=\"Bytecode Viewer Version: \" + VERSION + nl+ nl+ sw;\n  }\n  return SMALI + \" \" + DISASSEMBLER+ \" \"+ ERROR+ \"! \"+ ExceptionUI.SEND_STACKTRACE_TO+ nl+ nl+ TranslatedStrings.SUGGESTED_FIX_DECOMPILER_ERROR+ nl+ nl+ exception;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 348,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 68
      },
      "nodeContext" : "String start=MiscUtils.getUniqueName(fileStart,\".class\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 44,
    "startLineNumber" : 55,
    "startColumnNumber" : 23,
    "endLineNumber" : 55,
    "endColumnNumber" : 67
  } ],
  "layoutRelationDataList" : [ ]
}