{
  "id" : 475,
  "expression" : "\"end; \"",
  "projectName" : "redisson@redisson",
  "commitID" : "62b5e68c05b7475e1e0f98b4161aacb35d376b97",
  "filePath" : "/redisson/src/main/java/org/redisson/RedissonRingBuffer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"end; \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 75,
      "startColumnNumber" : 16,
      "endLineNumber" : 75,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 366,
        "startLineNumber" : 69,
        "startColumnNumber" : 16,
        "endLineNumber" : 76,
        "endColumnNumber" : 28
      },
      "nodeContext" : "\"local limit = redis.call('get', KEYS[2]); \" + \"assert(limit ~= false, 'RingBuffer capacity is not defined'); \" + \"local size = redis.call('rpush', KEYS[1], ARGV[1]); \"+ \"if size > tonumber(limit) then \"+ \"redis.call('lpop', KEYS[1]); \"+ \"end; \"+ \"return 1; \"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 537,
        "startLineNumber" : 68,
        "startColumnNumber" : 15,
        "endLineNumber" : 77,
        "endColumnNumber" : 63
      },
      "nodeContext" : "commandExecutor.evalWriteAsync(getName(),LongCodec.INSTANCE,RedisCommands.EVAL_BOOLEAN,\"local limit = redis.call('get', KEYS[2]); \" + \"assert(limit ~= false, 'RingBuffer capacity is not defined'); \" + \"local size = redis.call('rpush', KEYS[1], ARGV[1]); \"+ \"if size > tonumber(limit) then \"+ \"redis.call('lpop', KEYS[1]); \"+ \"end; \"+ \"return 1; \",Arrays.asList(getName(),settingsName),encode(e))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 28,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 545,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 64
      },
      "nodeContext" : "return commandExecutor.evalWriteAsync(getName(),LongCodec.INSTANCE,RedisCommands.EVAL_BOOLEAN,\"local limit = redis.call('get', KEYS[2]); \" + \"assert(limit ~= false, 'RingBuffer capacity is not defined'); \" + \"local size = redis.call('rpush', KEYS[1], ARGV[1]); \"+ \"if size > tonumber(limit) then \"+ \"redis.call('lpop', KEYS[1]); \"+ \"end; \"+ \"return 1; \",Arrays.asList(getName(),settingsName),encode(e));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 29,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 561,
        "startLineNumber" : 67,
        "startColumnNumber" : 42,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  return commandExecutor.evalWriteAsync(getName(),LongCodec.INSTANCE,RedisCommands.EVAL_BOOLEAN,\"local limit = redis.call('get', KEYS[2]); \" + \"assert(limit ~= false, 'RingBuffer capacity is not defined'); \" + \"local size = redis.call('rpush', KEYS[1], ARGV[1]); \"+ \"if size > tonumber(limit) then \"+ \"redis.call('lpop', KEYS[1]); \"+ \"end; \"+ \"return 1; \",Arrays.asList(getName(),settingsName),encode(e));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 30,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 613,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public RFuture<Boolean> addAsync(V e){\n  return commandExecutor.evalWriteAsync(getName(),LongCodec.INSTANCE,RedisCommands.EVAL_BOOLEAN,\"local limit = redis.call('get', KEYS[2]); \" + \"assert(limit ~= false, 'RingBuffer capacity is not defined'); \" + \"local size = redis.call('rpush', KEYS[1], ARGV[1]); \"+ \"if size > tonumber(limit) then \"+ \"redis.call('lpop', KEYS[1]); \"+ \"end; \"+ \"return 1; \",Arrays.asList(getName(),settingsName),encode(e));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 44,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 366,
        "startLineNumber" : 69,
        "startColumnNumber" : 16,
        "endLineNumber" : 76,
        "endColumnNumber" : 28
      },
      "nodeContext" : "\"local limit = redis.call('get', KEYS[2]); \" + \"assert(limit ~= false, 'RingBuffer capacity is not defined'); \" + \"local size = redis.call('rpush', KEYS[1], ARGV[1]); \"+ \"if size > tonumber(limit) then \"+ \"redis.call('lpop', KEYS[1]); \"+ \"end; \"+ \"return 1; \"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 75,
    "startColumnNumber" : 16,
    "endLineNumber" : 75,
    "endColumnNumber" : 23
  } ],
  "layoutRelationDataList" : [ ]
}