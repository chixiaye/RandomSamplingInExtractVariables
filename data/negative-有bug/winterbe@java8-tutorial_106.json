{
  "id" : 106,
  "expression" : "IntStream.range(1,4).mapToObj(i -> \"a\" + i)",
  "projectName" : "winterbe@java8-tutorial",
  "commitID" : "89a257129873974e4beb658115e854649b9204b2",
  "filePath" : "/src/com/winterbe/java8/samples/stream/Streams8.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "IntStream.range(1,4).mapToObj(i -> \"a\" + i)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 57,
      "startLineNumber" : 24,
      "startColumnNumber" : 8,
      "endLineNumber" : 25,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 13,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 24,
        "startColumnNumber" : 8,
        "endLineNumber" : 26,
        "endColumnNumber" : 41
      },
      "nodeContext" : "IntStream.range(1,4).mapToObj(i -> \"a\" + i).forEach(System.out::println)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 24,
        "startColumnNumber" : 8,
        "endLineNumber" : 26,
        "endColumnNumber" : 42
      },
      "nodeContext" : "IntStream.range(1,4).mapToObj(i -> \"a\" + i).forEach(System.out::println);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 728,
        "startLineNumber" : 12,
        "startColumnNumber" : 43,
        "endLineNumber" : 38,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Arrays.asList(\"a1\",\"a2\",\"a3\").stream().findFirst().ifPresent(System.out::println);\n  Stream.of(\"a1\",\"a2\",\"a3\").map(s -> s.substring(1)).mapToInt(Integer::parseInt).max().ifPresent(System.out::println);\n  IntStream.range(1,4).mapToObj(i -> \"a\" + i).forEach(System.out::println);\n  Arrays.stream(new int[]{1,2,3}).map(n -> 2 * n + 1).average().ifPresent(System.out::println);\n  Stream.of(1.0,2.0,3.0).mapToInt(Double::intValue).mapToObj(i -> \"a\" + i).forEach(System.out::println);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 767,
        "startLineNumber" : 12,
        "startColumnNumber" : 4,
        "endLineNumber" : 38,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String[] args){\n  Arrays.asList(\"a1\",\"a2\",\"a3\").stream().findFirst().ifPresent(System.out::println);\n  Stream.of(\"a1\",\"a2\",\"a3\").map(s -> s.substring(1)).mapToInt(Integer::parseInt).max().ifPresent(System.out::println);\n  IntStream.range(1,4).mapToObj(i -> \"a\" + i).forEach(System.out::println);\n  Arrays.stream(new int[]{1,2,3}).map(n -> 2 * n + 1).average().ifPresent(System.out::println);\n  Stream.of(1.0,2.0,3.0).mapToInt(Double::intValue).mapToObj(i -> \"a\" + i).forEach(System.out::println);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 139,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 24,
        "startColumnNumber" : 8,
        "endLineNumber" : 26,
        "endColumnNumber" : 41
      },
      "nodeContext" : "IntStream.range(1,4).mapToObj(i -> \"a\" + i).forEach(System.out::println)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 5
    },
    "tokenLength" : 10,
    "type" : "java.util.stream.Stream<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 57,
    "startLineNumber" : 24,
    "startColumnNumber" : 8,
    "endLineNumber" : 25,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ ]
}