{
  "id" : 428,
  "expression" : "\"my super specific test exception\"",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-rpc/flink-rpc-akka/src/test/java/org/apache/flink/runtime/rpc/akka/AkkaRpcActorTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"my super specific test exception\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 34,
      "startLineNumber" : 221,
      "startColumnNumber" : 25,
      "endLineNumber" : 221,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 221,
        "startColumnNumber" : 12,
        "endLineNumber" : 221,
        "endColumnNumber" : 80
      },
      "nodeContext" : "assertEquals(\"my super specific test exception\",cause.getMessage())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 221,
        "startColumnNumber" : 12,
        "endLineNumber" : 221,
        "endColumnNumber" : 81
      },
      "nodeContext" : "assertEquals(\"my super specific test exception\",cause.getMessage());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 205,
        "startLineNumber" : 218,
        "startColumnNumber" : 39,
        "endLineNumber" : 222,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Throwable cause=e.getCause();\n  assertEquals(RuntimeException.class,cause.getClass());\n  assertEquals(\"my super specific test exception\",cause.getMessage());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 234,
        "startLineNumber" : 218,
        "startColumnNumber" : 10,
        "endLineNumber" : 222,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (ExecutionException e) {\n  Throwable cause=e.getCause();\n  assertEquals(RuntimeException.class,cause.getClass());\n  assertEquals(\"my super specific test exception\",cause.getMessage());\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 30,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 368,
        "startLineNumber" : 215,
        "startColumnNumber" : 8,
        "endLineNumber" : 222,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  result.get(timeout.getSize(),timeout.getUnit());\n  fail(\"this should fail with an exception\");\n}\n catch (ExecutionException e) {\n  Throwable cause=e.getCause();\n  assertEquals(RuntimeException.class,cause.getClass());\n  assertEquals(\"my super specific test exception\",cause.getMessage());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 46,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 658,
        "startLineNumber" : 208,
        "startColumnNumber" : 60,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ExceptionalEndpoint rpcEndpoint=new ExceptionalEndpoint(akkaRpcService);\n  rpcEndpoint.start();\n  ExceptionalGateway rpcGateway=rpcEndpoint.getSelfGateway(ExceptionalGateway.class);\n  CompletableFuture<Integer> result=rpcGateway.doStuff();\n  try {\n    result.get(timeout.getSize(),timeout.getUnit());\n    fail(\"this should fail with an exception\");\n  }\n catch (  ExecutionException e) {\n    Throwable cause=e.getCause();\n    assertEquals(RuntimeException.class,cause.getClass());\n    assertEquals(\"my super specific test exception\",cause.getMessage());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 82,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 724,
        "startLineNumber" : 207,
        "startColumnNumber" : 4,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testExceptionPropagation() throws Exception {\n  ExceptionalEndpoint rpcEndpoint=new ExceptionalEndpoint(akkaRpcService);\n  rpcEndpoint.start();\n  ExceptionalGateway rpcGateway=rpcEndpoint.getSelfGateway(ExceptionalGateway.class);\n  CompletableFuture<Integer> result=rpcGateway.doStuff();\n  try {\n    result.get(timeout.getSize(),timeout.getUnit());\n    fail(\"this should fail with an exception\");\n  }\n catch (  ExecutionException e) {\n    Throwable cause=e.getCause();\n    assertEquals(RuntimeException.class,cause.getClass());\n    assertEquals(\"my super specific test exception\",cause.getMessage());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 90,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 221,
        "startColumnNumber" : 12,
        "endLineNumber" : 221,
        "endColumnNumber" : 81
      },
      "nodeContext" : "assertEquals(\"my super specific test exception\",cause.getMessage());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 34,
    "startLineNumber" : 221,
    "startColumnNumber" : 25,
    "endLineNumber" : 221,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ ]
}