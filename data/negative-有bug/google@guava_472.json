{
  "id" : 472,
  "expression" : "\"Domain has too many parts: '%s'\"",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava/src/com/google/common/net/InternetDomainName.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Domain has too many parts: '%s'\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 149,
      "startColumnNumber" : 45,
      "endLineNumber" : 149,
      "endColumnNumber" : 78
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 149,
        "startColumnNumber" : 4,
        "endLineNumber" : 149,
        "endColumnNumber" : 85
      },
      "nodeContext" : "checkArgument(parts.size() <= MAX_PARTS,\"Domain has too many parts: '%s'\",name)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 149,
        "startColumnNumber" : 4,
        "endLineNumber" : 149,
        "endColumnNumber" : 86
      },
      "nodeContext" : "checkArgument(parts.size() <= MAX_PARTS,\"Domain has too many parts: '%s'\",name);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 823,
        "startLineNumber" : 133,
        "startColumnNumber" : 34,
        "endLineNumber" : 154,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  name=Ascii.toLowerCase(DOTS_MATCHER.replaceFrom(name,'.'));\n  if (name.endsWith(\".\")) {\n    name=name.substring(0,name.length() - 1);\n  }\n  checkArgument(name.length() <= MAX_LENGTH,\"Domain name too long: '%s':\",name);\n  this.name=name;\n  this.parts=ImmutableList.copyOf(DOT_SPLITTER.split(name));\n  checkArgument(parts.size() <= MAX_PARTS,\"Domain has too many parts: '%s'\",name);\n  checkArgument(validateSyntax(parts),\"Not a valid domain name: '%s'\",name);\n  this.publicSuffixIndex=findSuffixOfType(Optional.<PublicSuffixType>absent());\n  this.registrySuffixIndex=findSuffixOfType(Optional.of(PublicSuffixType.REGISTRY));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 939,
        "startLineNumber" : 132,
        "startColumnNumber" : 2,
        "endLineNumber" : 154,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Constructor used to implement  {@link #from(String)}, and from subclasses. \n */\nInternetDomainName(String name){\n  name=Ascii.toLowerCase(DOTS_MATCHER.replaceFrom(name,'.'));\n  if (name.endsWith(\".\")) {\n    name=name.substring(0,name.length() - 1);\n  }\n  checkArgument(name.length() <= MAX_LENGTH,\"Domain name too long: '%s':\",name);\n  this.name=name;\n  this.parts=ImmutableList.copyOf(DOT_SPLITTER.split(name));\n  checkArgument(parts.size() <= MAX_PARTS,\"Domain has too many parts: '%s'\",name);\n  checkArgument(validateSyntax(parts),\"Not a valid domain name: '%s'\",name);\n  this.publicSuffixIndex=findSuffixOfType(Optional.<PublicSuffixType>absent());\n  this.registrySuffixIndex=findSuffixOfType(Optional.of(PublicSuffixType.REGISTRY));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 149,
        "startColumnNumber" : 4,
        "endLineNumber" : 149,
        "endColumnNumber" : 86
      },
      "nodeContext" : "checkArgument(parts.size() <= MAX_PARTS,\"Domain has too many parts: '%s'\",name);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 6,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 33,
    "startLineNumber" : 149,
    "startColumnNumber" : 45,
    "endLineNumber" : 149,
    "endColumnNumber" : 78
  } ],
  "layoutRelationDataList" : [ ]
}