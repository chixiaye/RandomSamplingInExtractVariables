{
  "id" : 10,
  "expression" : "mJobScheduler.mEncodedImage",
  "projectName" : "facebook@fresco",
  "commitID" : "22468d5b520df9b51572a6388a34e7f6bd5a22c1",
  "filePath" : "/imagepipeline/src/test/java/com/facebook/imagepipeline/producers/JobSchedulerTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "mJobScheduler.mEncodedImage",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 133,
      "startColumnNumber" : 32,
      "endLineNumber" : 133,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 133,
        "startColumnNumber" : 4,
        "endLineNumber" : 133,
        "endColumnNumber" : 60
      },
      "nodeContext" : "assertNotSame(encodedImage,mJobScheduler.mEncodedImage)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 133,
        "startColumnNumber" : 4,
        "endLineNumber" : 133,
        "endColumnNumber" : 61
      },
      "nodeContext" : "assertNotSame(encodedImage,mJobScheduler.mEncodedImage);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 505,
        "startLineNumber" : 130,
        "startColumnNumber" : 40,
        "endLineNumber" : 139,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  EncodedImage encodedImage=fakeEncodedImage();\n  assertTrue(mJobScheduler.updateJob(encodedImage,Consumer.NO_FLAGS));\n  assertNotSame(encodedImage,mJobScheduler.mEncodedImage);\n  assertReferencesEqual(encodedImage,mJobScheduler.mEncodedImage);\n  assertEquals(Consumer.NO_FLAGS,mJobScheduler.mStatus);\n  assertEquals(0,mTestScheduledExecutorService.getPendingCount());\n  assertEquals(0,mTestExecutorService.getPendingCount());\n  assertEquals(0,mTestJobRunnable.jobs.size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 551,
        "startLineNumber" : 129,
        "startColumnNumber" : 2,
        "endLineNumber" : 139,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testUpdate_Intermediate(){\n  EncodedImage encodedImage=fakeEncodedImage();\n  assertTrue(mJobScheduler.updateJob(encodedImage,Consumer.NO_FLAGS));\n  assertNotSame(encodedImage,mJobScheduler.mEncodedImage);\n  assertReferencesEqual(encodedImage,mJobScheduler.mEncodedImage);\n  assertEquals(Consumer.NO_FLAGS,mJobScheduler.mStatus);\n  assertEquals(0,mTestScheduledExecutorService.getPendingCount());\n  assertEquals(0,mTestExecutorService.getPendingCount());\n  assertEquals(0,mTestJobRunnable.jobs.size());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 70,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 133,
        "startColumnNumber" : 4,
        "endLineNumber" : 133,
        "endColumnNumber" : 61
      },
      "nodeContext" : "assertNotSame(encodedImage,mJobScheduler.mEncodedImage);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "com.facebook.imagepipeline.image.EncodedImage"
  }, {
    "nodeContext" : "mJobScheduler.mEncodedImage",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 134,
      "startColumnNumber" : 40,
      "endLineNumber" : 134,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 134,
        "startColumnNumber" : 4,
        "endLineNumber" : 134,
        "endColumnNumber" : 68
      },
      "nodeContext" : "assertReferencesEqual(encodedImage,mJobScheduler.mEncodedImage)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 134,
        "startColumnNumber" : 4,
        "endLineNumber" : 134,
        "endColumnNumber" : 69
      },
      "nodeContext" : "assertReferencesEqual(encodedImage,mJobScheduler.mEncodedImage);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 505,
        "startLineNumber" : 130,
        "startColumnNumber" : 40,
        "endLineNumber" : 139,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  EncodedImage encodedImage=fakeEncodedImage();\n  assertTrue(mJobScheduler.updateJob(encodedImage,Consumer.NO_FLAGS));\n  assertNotSame(encodedImage,mJobScheduler.mEncodedImage);\n  assertReferencesEqual(encodedImage,mJobScheduler.mEncodedImage);\n  assertEquals(Consumer.NO_FLAGS,mJobScheduler.mStatus);\n  assertEquals(0,mTestScheduledExecutorService.getPendingCount());\n  assertEquals(0,mTestExecutorService.getPendingCount());\n  assertEquals(0,mTestJobRunnable.jobs.size());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 551,
        "startLineNumber" : 129,
        "startColumnNumber" : 2,
        "endLineNumber" : 139,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testUpdate_Intermediate(){\n  EncodedImage encodedImage=fakeEncodedImage();\n  assertTrue(mJobScheduler.updateJob(encodedImage,Consumer.NO_FLAGS));\n  assertNotSame(encodedImage,mJobScheduler.mEncodedImage);\n  assertReferencesEqual(encodedImage,mJobScheduler.mEncodedImage);\n  assertEquals(Consumer.NO_FLAGS,mJobScheduler.mStatus);\n  assertEquals(0,mTestScheduledExecutorService.getPendingCount());\n  assertEquals(0,mTestExecutorService.getPendingCount());\n  assertEquals(0,mTestJobRunnable.jobs.size());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 70,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 134,
        "startColumnNumber" : 4,
        "endLineNumber" : 134,
        "endColumnNumber" : 69
      },
      "nodeContext" : "assertReferencesEqual(encodedImage,mJobScheduler.mEncodedImage);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "com.facebook.imagepipeline.image.EncodedImage"
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 133,
    "startColumnNumber" : 32,
    "endLineNumber" : 133,
    "endColumnNumber" : 59
  }, {
    "charLength" : 27,
    "startLineNumber" : 134,
    "startColumnNumber" : 40,
    "endLineNumber" : 134,
    "endColumnNumber" : 67
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}