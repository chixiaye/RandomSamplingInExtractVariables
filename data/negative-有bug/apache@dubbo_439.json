{
  "id" : 439,
  "expression" : "new Response(req.getId(),req.getVersion())",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-rpc/dubbo-rpc-triple/src/main/java/org/apache/dubbo/rpc/protocol/tri/TripleClientHandler.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new Response(req.getId(),req.getVersion())",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 43,
      "startLineNumber" : 97,
      "startColumnNumber" : 32,
      "endLineNumber" : 97,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 9,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 97,
        "startColumnNumber" : 21,
        "endLineNumber" : 97,
        "endColumnNumber" : 75
      },
      "nodeContext" : "response=new Response(req.getId(),req.getVersion())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 97,
        "startColumnNumber" : 12,
        "endLineNumber" : 97,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Response response=new Response(req.getId(),req.getVersion());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 434,
        "startLineNumber" : 94,
        "startColumnNumber" : 15,
        "endLineNumber" : 101,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final StreamObserver<Object> streamObserver=(StreamObserver<Object>)inv.getArguments()[0];\n  stream.subscribe(streamObserver);\n  Response response=new Response(req.getId(),req.getVersion());\n  final AppResponse result=new AppResponse(stream.asStreamObserver());\n  response.setResult(result);\n  DefaultFuture2.received(stream.getConnection(),response);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 587,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (methodDescriptor.isUnary()) {\n  stream.asStreamObserver().onNext(inv);\n  stream.asStreamObserver().onCompleted();\n}\n else {\n  final StreamObserver<Object> streamObserver=(StreamObserver<Object>)inv.getArguments()[0];\n  stream.subscribe(streamObserver);\n  Response response=new Response(req.getId(),req.getVersion());\n  final AppResponse result=new AppResponse(stream.asStreamObserver());\n  response.setResult(result);\n  DefaultFuture2.received(stream.getConnection(),response);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 83,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1862,
        "startLineNumber" : 67,
        "startColumnNumber" : 106,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final RpcInvocation inv=(RpcInvocation)req.getData();\n  final URL url=inv.getInvoker().getUrl();\n  ServiceRepository repo=ApplicationModel.getServiceRepository();\n  MethodDescriptor methodDescriptor=repo.lookupMethod(inv.getServiceName(),inv.getMethodName());\n  final ConsumerModel service=repo.lookupReferredService(url.getServiceKey());\n  if (service != null) {\n    ClassLoadUtil.switchContextLoader(service.getServiceInterfaceClass().getClassLoader());\n  }\n  final Executor executor=(Executor)inv.getAttributes().remove(\"callback.executor\");\n  AbstractClientStream stream;\n  if (methodDescriptor.isUnary()) {\n    stream=AbstractClientStream.unary(url,executor);\n  }\n else {\n    stream=AbstractClientStream.stream(url);\n  }\n  stream.service(service).connection(Connection.getConnectionFromChannel(ctx.channel())).method(methodDescriptor).methodName(methodDescriptor.getMethodName()).request(req).serialize((String)inv.getObjectAttachment(Constants.SERIALIZATION_KEY)).subscribe(new ClientTransportObserver(ctx,stream,promise));\n  if (methodDescriptor.isUnary()) {\n    stream.asStreamObserver().onNext(inv);\n    stream.asStreamObserver().onCompleted();\n  }\n else {\n    final StreamObserver<Object> streamObserver=(StreamObserver<Object>)inv.getArguments()[0];\n    stream.subscribe(streamObserver);\n    Response response=new Response(req.getId(),req.getVersion());\n    final AppResponse result=new AppResponse(stream.asStreamObserver());\n    response.setResult(result);\n    DefaultFuture2.received(stream.getConnection(),response);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 239,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1964,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void writeRequest(ChannelHandlerContext ctx,final Request req,final ChannelPromise promise){\n  final RpcInvocation inv=(RpcInvocation)req.getData();\n  final URL url=inv.getInvoker().getUrl();\n  ServiceRepository repo=ApplicationModel.getServiceRepository();\n  MethodDescriptor methodDescriptor=repo.lookupMethod(inv.getServiceName(),inv.getMethodName());\n  final ConsumerModel service=repo.lookupReferredService(url.getServiceKey());\n  if (service != null) {\n    ClassLoadUtil.switchContextLoader(service.getServiceInterfaceClass().getClassLoader());\n  }\n  final Executor executor=(Executor)inv.getAttributes().remove(\"callback.executor\");\n  AbstractClientStream stream;\n  if (methodDescriptor.isUnary()) {\n    stream=AbstractClientStream.unary(url,executor);\n  }\n else {\n    stream=AbstractClientStream.stream(url);\n  }\n  stream.service(service).connection(Connection.getConnectionFromChannel(ctx.channel())).method(methodDescriptor).methodName(methodDescriptor.getMethodName()).request(req).serialize((String)inv.getObjectAttachment(Constants.SERIALIZATION_KEY)).subscribe(new ClientTransportObserver(ctx,stream,promise));\n  if (methodDescriptor.isUnary()) {\n    stream.asStreamObserver().onNext(inv);\n    stream.asStreamObserver().onCompleted();\n  }\n else {\n    final StreamObserver<Object> streamObserver=(StreamObserver<Object>)inv.getArguments()[0];\n    stream.subscribe(streamObserver);\n    Response response=new Response(req.getId(),req.getVersion());\n    final AppResponse result=new AppResponse(stream.asStreamObserver());\n    response.setResult(result);\n    DefaultFuture2.received(stream.getConnection(),response);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 257,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 97,
        "startColumnNumber" : 12,
        "endLineNumber" : 97,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Response response=new Response(req.getId(),req.getVersion());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "org.apache.dubbo.remoting.exchange.Response"
  } ],
  "positionList" : [ {
    "charLength" : 43,
    "startLineNumber" : 97,
    "startColumnNumber" : 32,
    "endLineNumber" : 97,
    "endColumnNumber" : 75
  } ],
  "layoutRelationDataList" : [ ]
}