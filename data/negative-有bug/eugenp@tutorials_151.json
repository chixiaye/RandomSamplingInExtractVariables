{
  "id" : 151,
  "expression" : "Integer.valueOf(3)",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/spring-jooq/src/test/java/com/baeldung/jooq/springboot/SpringBootIntegrationTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Integer.valueOf(3)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 94,
      "startColumnNumber" : 21,
      "endLineNumber" : 94,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 94,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 71
      },
      "nodeContext" : "assertEquals(Integer.valueOf(3),result.getValue(0,AUTHOR.ID))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 94,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 72
      },
      "nodeContext" : "assertEquals(Integer.valueOf(3),result.getValue(0,AUTHOR.ID));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1101,
        "startLineNumber" : 71,
        "startColumnNumber" : 58,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  dsl.update(AUTHOR).set(AUTHOR.LAST_NAME,\"Baeldung\").where(AUTHOR.ID.equal(3)).execute();\n  dsl.update(BOOK).set(BOOK.TITLE,\"Building your REST API with Spring\").where(BOOK.ID.equal(3)).execute();\n  dsl.insertInto(AUTHOR_BOOK).set(AUTHOR_BOOK.AUTHOR_ID,3).set(AUTHOR_BOOK.BOOK_ID,3).execute();\n  final Result<Record3<Integer,String,String>> result=dsl.select(AUTHOR.ID,AUTHOR.LAST_NAME,BOOK.TITLE).from(AUTHOR).join(AUTHOR_BOOK).on(AUTHOR.ID.equal(AUTHOR_BOOK.AUTHOR_ID)).join(BOOK).on(AUTHOR_BOOK.BOOK_ID.equal(BOOK.ID)).where(AUTHOR.ID.equal(3)).fetch();\n  assertEquals(1,result.size());\n  assertEquals(Integer.valueOf(3),result.getValue(0,AUTHOR.ID));\n  assertEquals(\"Baeldung\",result.getValue(0,AUTHOR.LAST_NAME));\n  assertEquals(\"Building your REST API with Spring\",result.getValue(0,BOOK.TITLE));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 172,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1165,
        "startLineNumber" : 70,
        "startColumnNumber" : 4,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void givenValidData_whenUpdating_thenSucceed(){\n  dsl.update(AUTHOR).set(AUTHOR.LAST_NAME,\"Baeldung\").where(AUTHOR.ID.equal(3)).execute();\n  dsl.update(BOOK).set(BOOK.TITLE,\"Building your REST API with Spring\").where(BOOK.ID.equal(3)).execute();\n  dsl.insertInto(AUTHOR_BOOK).set(AUTHOR_BOOK.AUTHOR_ID,3).set(AUTHOR_BOOK.BOOK_ID,3).execute();\n  final Result<Record3<Integer,String,String>> result=dsl.select(AUTHOR.ID,AUTHOR.LAST_NAME,BOOK.TITLE).from(AUTHOR).join(AUTHOR_BOOK).on(AUTHOR.ID.equal(AUTHOR_BOOK.AUTHOR_ID)).join(BOOK).on(AUTHOR_BOOK.BOOK_ID.equal(BOOK.ID)).where(AUTHOR.ID.equal(3)).fetch();\n  assertEquals(1,result.size());\n  assertEquals(Integer.valueOf(3),result.getValue(0,AUTHOR.ID));\n  assertEquals(\"Baeldung\",result.getValue(0,AUTHOR.LAST_NAME));\n  assertEquals(\"Building your REST API with Spring\",result.getValue(0,BOOK.TITLE));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 178,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 94,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 72
      },
      "nodeContext" : "assertEquals(Integer.valueOf(3),result.getValue(0,AUTHOR.ID));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.lang.Integer"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 94,
    "startColumnNumber" : 21,
    "endLineNumber" : 94,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ ]
}