{
  "id" : 165,
  "expression" : "Math.round(Math.sqrt(n))",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-main/src/main/java/com/facebook/presto/operator/aggregation/differentialentropy/EntropyCalculations.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Math.round(Math.sqrt(n))",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 36,
      "startColumnNumber" : 36,
      "endLineNumber" : 36,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 36,
        "startColumnNumber" : 27,
        "endLineNumber" : 36,
        "endColumnNumber" : 64
      },
      "nodeContext" : "Math.max(Math.round(Math.sqrt(n)),2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 36,
        "startColumnNumber" : 16,
        "endLineNumber" : 36,
        "endColumnNumber" : 65
      },
      "nodeContext" : "toIntExact(Math.max(Math.round(Math.sqrt(n)),2))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 36,
        "startColumnNumber" : 12,
        "endLineNumber" : 36,
        "endColumnNumber" : 65
      },
      "nodeContext" : "m=toIntExact(Math.max(Math.round(Math.sqrt(n)),2))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 36,
        "startColumnNumber" : 8,
        "endLineNumber" : 36,
        "endColumnNumber" : 66
      },
      "nodeContext" : "int m=toIntExact(Math.max(Math.round(Math.sqrt(n)),2));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 602,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (samples.length == 0) {\n    return Double.NaN;\n  }\n  Arrays.sort(samples);\n  int n=samples.length;\n  int m=toIntExact(Math.max(Math.round(Math.sqrt(n)),2));\n  double entropy=0;\n  for (int i=0; i < n; i++) {\n    double sIPlusM=i + m < n ? samples[i + m] : samples[n - 1];\n    double sIMinusM=i - m > 0 ? samples[i - m] : samples[0];\n    double aI=i + m < n && i - m > 0 ? 2 : 1;\n    entropy+=Math.log(n / (aI * m) * (sIPlusM - sIMinusM));\n  }\n  return entropy / n / Math.log(2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 139,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 796,
        "startLineNumber" : 25,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * @implNote Based on Alizadeh Noughabi, Hadi & Arghami, N. (2010). \"A New Estimator of Entropy\".\n */\npublic static double calculateFromSamplesUsingVasicek(double[] samples){\n  if (samples.length == 0) {\n    return Double.NaN;\n  }\n  Arrays.sort(samples);\n  int n=samples.length;\n  int m=toIntExact(Math.max(Math.round(Math.sqrt(n)),2));\n  double entropy=0;\n  for (int i=0; i < n; i++) {\n    double sIPlusM=i + m < n ? samples[i + m] : samples[n - 1];\n    double sIMinusM=i - m > 0 ? samples[i - m] : samples[0];\n    double aI=i + m < n && i - m > 0 ? 2 : 1;\n    entropy+=Math.log(n / (aI * m) * (sIPlusM - sIMinusM));\n  }\n  return entropy / n / Math.log(2);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 150,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 36,
        "startColumnNumber" : 8,
        "endLineNumber" : 36,
        "endColumnNumber" : 66
      },
      "nodeContext" : "int m=toIntExact(Math.max(Math.round(Math.sqrt(n)),2));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    },
    "tokenLength" : 5,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 36,
    "startColumnNumber" : 36,
    "endLineNumber" : 36,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ ]
}