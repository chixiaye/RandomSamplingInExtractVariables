{
  "id" : 237,
  "expression" : "Log",
  "projectName" : "signalapp@Signal-Android",
  "commitID" : "7e91132e7ed62a58b5f347de252ab1eda3f43b90",
  "filePath" : "/app/src/main/java/org/thoughtcrime/securesms/groups/GroupsV2CapabilityChecker.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Log",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 41,
      "startColumnNumber" : 6,
      "endLineNumber" : 41,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 41,
        "startColumnNumber" : 6,
        "endLineNumber" : 41,
        "endColumnNumber" : 108
      },
      "nodeContext" : "Log.d(TAG,\"[refreshCapabilitiesIfNecessary] Need to refresh \" + needsRefresh.size() + \" recipients.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 41,
        "startColumnNumber" : 6,
        "endLineNumber" : 41,
        "endColumnNumber" : 109
      },
      "nodeContext" : "Log.d(TAG,\"[refreshCapabilitiesIfNecessary] Need to refresh \" + needsRefresh.size() + \" recipients.\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 490,
        "startLineNumber" : 40,
        "startColumnNumber" : 33,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Log.d(TAG,\"[refreshCapabilitiesIfNecessary] Need to refresh \" + needsRefresh.size() + \" recipients.\");\n  List<Job> jobs=RetrieveProfileJob.forRecipients(needsRefresh);\n  JobManager jobManager=ApplicationDependencies.getJobManager();\n  for (  Job job : jobs) {\n    if (!jobManager.runSynchronously(job,TimeUnit.SECONDS.toMillis(10)).isPresent()) {\n      throw new IOException(\"Recipient capability was not retrieved in time\");\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 59,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 519,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (needsRefresh.size() > 0) {\n  Log.d(TAG,\"[refreshCapabilitiesIfNecessary] Need to refresh \" + needsRefresh.size() + \" recipients.\");\n  List<Job> jobs=RetrieveProfileJob.forRecipients(needsRefresh);\n  JobManager jobManager=ApplicationDependencies.getJobManager();\n  for (  Job job : jobs) {\n    if (!jobManager.runSynchronously(job,TimeUnit.SECONDS.toMillis(10)).isPresent()) {\n      throw new IOException(\"Recipient capability was not retrieved in time\");\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 65,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 839,
        "startLineNumber" : 34,
        "startColumnNumber" : 112,
        "endLineNumber" : 52,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Set<RecipientId> needsRefresh=Stream.of(resolved).filter(r -> r.getGroupsV2Capability() != Recipient.Capability.SUPPORTED).map(Recipient::getId).collect(Collectors.toSet());\n  if (needsRefresh.size() > 0) {\n    Log.d(TAG,\"[refreshCapabilitiesIfNecessary] Need to refresh \" + needsRefresh.size() + \" recipients.\");\n    List<Job> jobs=RetrieveProfileJob.forRecipients(needsRefresh);\n    JobManager jobManager=ApplicationDependencies.getJobManager();\n    for (    Job job : jobs) {\n      if (!jobManager.runSynchronously(job,TimeUnit.SECONDS.toMillis(10)).isPresent()) {\n        throw new IOException(\"Recipient capability was not retrieved in time\");\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1035,
        "startLineNumber" : 30,
        "startColumnNumber" : 2,
        "endLineNumber" : 52,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * @param resolved A collection of resolved recipients.\n */\n@WorkerThread public static void refreshCapabilitiesIfNecessary(@NonNull Collection<Recipient> resolved) throws IOException {\n  Set<RecipientId> needsRefresh=Stream.of(resolved).filter(r -> r.getGroupsV2Capability() != Recipient.Capability.SUPPORTED).map(Recipient::getId).collect(Collectors.toSet());\n  if (needsRefresh.size() > 0) {\n    Log.d(TAG,\"[refreshCapabilitiesIfNecessary] Need to refresh \" + needsRefresh.size() + \" recipients.\");\n    List<Job> jobs=RetrieveProfileJob.forRecipients(needsRefresh);\n    JobManager jobManager=ApplicationDependencies.getJobManager();\n    for (    Job job : jobs) {\n      if (!jobManager.runSynchronously(job,TimeUnit.SECONDS.toMillis(10)).isPresent()) {\n        throw new IOException(\"Recipient capability was not retrieved in time\");\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 121,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 41,
        "startColumnNumber" : 6,
        "endLineNumber" : 41,
        "endColumnNumber" : 109
      },
      "nodeContext" : "Log.d(TAG,\"[refreshCapabilitiesIfNecessary] Need to refresh \" + needsRefresh.size() + \" recipients.\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.signal.core.util.logging.Log"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 41,
    "startColumnNumber" : 6,
    "endLineNumber" : 41,
    "endColumnNumber" : 9
  } ],
  "layoutRelationDataList" : [ ]
}