{
  "id" : 260,
  "expression" : "secrets.get(key)",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/quarkus/runtime/src/main/java/org/keycloak/quarkus/runtime/vault/QuarkusVaultProvider.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "secrets.get(key)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 53,
      "startColumnNumber" : 28,
      "endLineNumber" : 53,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 53,
        "startColumnNumber" : 19,
        "endLineNumber" : 53,
        "endColumnNumber" : 44
      },
      "nodeContext" : "secret=secrets.get(key)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 53,
        "startColumnNumber" : 12,
        "endLineNumber" : 53,
        "endColumnNumber" : 45
      },
      "nodeContext" : "String secret=secrets.get(key);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 282,
        "startLineNumber" : 51,
        "startColumnNumber" : 36,
        "endLineNumber" : 58,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Map<String,String> secrets=secretEngine.readSecret(path);\n  String secret=secrets.get(key);\n  if (secret != null) {\n    return forBuffer(Optional.of(StandardCharsets.UTF_8.encode(CharBuffer.wrap(secret))));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 310,
        "startLineNumber" : 51,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (String path : kvPaths) {\n  Map<String,String> secrets=secretEngine.readSecret(path);\n  String secret=secrets.get(key);\n  if (secret != null) {\n    return forBuffer(Optional.of(StandardCharsets.UTF_8.encode(CharBuffer.wrap(secret))));\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 50,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 461,
        "startLineNumber" : 46,
        "startColumnNumber" : 62,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (kvPaths == null) {\n    return forBuffer(Optional.empty());\n  }\n  for (  String path : kvPaths) {\n    Map<String,String> secrets=secretEngine.readSecret(path);\n    String secret=secrets.get(key);\n    if (secret != null) {\n      return forBuffer(Optional.of(StandardCharsets.UTF_8.encode(CharBuffer.wrap(secret))));\n    }\n  }\n  return forBuffer(Optional.empty());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 533,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected VaultRawSecret obtainSecretInternal(String key){\n  if (kvPaths == null) {\n    return forBuffer(Optional.empty());\n  }\n  for (  String path : kvPaths) {\n    Map<String,String> secrets=secretEngine.readSecret(path);\n    String secret=secrets.get(key);\n    if (secret != null) {\n      return forBuffer(Optional.of(StandardCharsets.UTF_8.encode(CharBuffer.wrap(secret))));\n    }\n  }\n  return forBuffer(Optional.empty());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 79,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 53,
        "startColumnNumber" : 12,
        "endLineNumber" : 53,
        "endColumnNumber" : 45
      },
      "nodeContext" : "String secret=secrets.get(key);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 53,
    "startColumnNumber" : 28,
    "endLineNumber" : 53,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ ]
}