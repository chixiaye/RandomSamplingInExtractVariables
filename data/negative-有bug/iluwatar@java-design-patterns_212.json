{
  "id" : 212,
  "expression" : "10",
  "projectName" : "iluwatar@java-design-patterns",
  "commitID" : "428efc7d53449a51d25dfda4141742629ecbb0b2",
  "filePath" : "/semaphore/src/test/java/com/iluwatar/semaphore/FruitBowlTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "10",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 43,
      "startColumnNumber" : 25,
      "endLineNumber" : 43,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 43,
        "startColumnNumber" : 20,
        "endLineNumber" : 43,
        "endColumnNumber" : 27
      },
      "nodeContext" : "i <= 10",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 46,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (var i=1; i <= 10; i++) {\n  fbowl.put(new Fruit(Fruit.FruitType.LEMON));\n  assertEquals(i,fbowl.countFruit());\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 32,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 368,
        "startLineNumber" : 38,
        "startColumnNumber" : 30,
        "endLineNumber" : 54,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  var fbowl=new FruitBowl();\n  assertEquals(0,fbowl.countFruit());\n  for (var i=1; i <= 10; i++) {\n    fbowl.put(new Fruit(Fruit.FruitType.LEMON));\n    assertEquals(i,fbowl.countFruit());\n  }\n  for (var i=9; i >= 0; i--) {\n    assertNotNull(fbowl.take());\n    assertEquals(i,fbowl.countFruit());\n  }\n  assertNull(fbowl.take());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 404,
        "startLineNumber" : 37,
        "startColumnNumber" : 2,
        "endLineNumber" : 54,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void fruitBowlTest(){\n  var fbowl=new FruitBowl();\n  assertEquals(0,fbowl.countFruit());\n  for (var i=1; i <= 10; i++) {\n    fbowl.put(new Fruit(Fruit.FruitType.LEMON));\n    assertEquals(i,fbowl.countFruit());\n  }\n  for (var i=9; i >= 0; i--) {\n    assertNotNull(fbowl.take());\n    assertEquals(i,fbowl.countFruit());\n  }\n  assertNull(fbowl.take());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 86,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 43,
        "startColumnNumber" : 20,
        "endLineNumber" : 43,
        "endColumnNumber" : 27
      },
      "nodeContext" : "i <= 10",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 43,
    "startColumnNumber" : 25,
    "endLineNumber" : 43,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ ]
}