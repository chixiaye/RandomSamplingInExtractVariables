{
  "id" : 6,
  "expression" : "context.hasMoreCharacters()",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/main/java/com/google/zxing/datamatrix/encoder/Base256Encoder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "context.hasMoreCharacters()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 48,
      "startColumnNumber" : 8,
      "endLineNumber" : 48,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 46
      },
      "nodeContext" : "context.hasMoreCharacters() || mustPad",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 420,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (context.hasMoreCharacters() || mustPad) {\n  if (dataCount <= 249) {\n    buffer.setCharAt(0,(char)dataCount);\n  }\n else   if (dataCount <= 1555) {\n    buffer.setCharAt(0,(char)((dataCount / 250) + 249));\n    buffer.insert(1,(char)(dataCount % 250));\n  }\n else {\n    throw new IllegalStateException(\"Message length not in valid ranges: \" + dataCount);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 58,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1466,
        "startLineNumber" : 27,
        "startColumnNumber" : 45,
        "endLineNumber" : 63,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  StringBuilder buffer=new StringBuilder();\n  buffer.append('\\0');\n  while (context.hasMoreCharacters()) {\n    char c=context.getCurrentChar();\n    buffer.append(c);\n    context.pos++;\n    int newMode=HighLevelEncoder.lookAheadTest(context.getMessage(),context.pos,getEncodingMode());\n    if (newMode != getEncodingMode()) {\n      context.signalEncoderChange(HighLevelEncoder.ASCII_ENCODATION);\n      break;\n    }\n  }\n  int dataCount=buffer.length() - 1;\n  int lengthFieldSize=1;\n  int currentSize=context.getCodewordCount() + dataCount + lengthFieldSize;\n  context.updateSymbolInfo(currentSize);\n  boolean mustPad=(context.getSymbolInfo().getDataCapacity() - currentSize) > 0;\n  if (context.hasMoreCharacters() || mustPad) {\n    if (dataCount <= 249) {\n      buffer.setCharAt(0,(char)dataCount);\n    }\n else     if (dataCount <= 1555) {\n      buffer.setCharAt(0,(char)((dataCount / 250) + 249));\n      buffer.insert(1,(char)(dataCount % 250));\n    }\n else {\n      throw new IllegalStateException(\"Message length not in valid ranges: \" + dataCount);\n    }\n  }\n  for (int i=0, c=buffer.length(); i < c; i++) {\n    context.writeCodeword(randomize255State(buffer.charAt(i),context.getCodewordCount() + 1));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 198,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1522,
        "startLineNumber" : 26,
        "startColumnNumber" : 2,
        "endLineNumber" : 63,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void encode(EncoderContext context){\n  StringBuilder buffer=new StringBuilder();\n  buffer.append('\\0');\n  while (context.hasMoreCharacters()) {\n    char c=context.getCurrentChar();\n    buffer.append(c);\n    context.pos++;\n    int newMode=HighLevelEncoder.lookAheadTest(context.getMessage(),context.pos,getEncodingMode());\n    if (newMode != getEncodingMode()) {\n      context.signalEncoderChange(HighLevelEncoder.ASCII_ENCODATION);\n      break;\n    }\n  }\n  int dataCount=buffer.length() - 1;\n  int lengthFieldSize=1;\n  int currentSize=context.getCodewordCount() + dataCount + lengthFieldSize;\n  context.updateSymbolInfo(currentSize);\n  boolean mustPad=(context.getSymbolInfo().getDataCapacity() - currentSize) > 0;\n  if (context.hasMoreCharacters() || mustPad) {\n    if (dataCount <= 249) {\n      buffer.setCharAt(0,(char)dataCount);\n    }\n else     if (dataCount <= 1555) {\n      buffer.setCharAt(0,(char)((dataCount / 250) + 249));\n      buffer.insert(1,(char)(dataCount % 250));\n    }\n else {\n      throw new IllegalStateException(\"Message length not in valid ranges: \" + dataCount);\n    }\n  }\n  for (int i=0, c=buffer.length(); i < c; i++) {\n    context.writeCodeword(randomize255State(buffer.charAt(i),context.getCodewordCount() + 1));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 208,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 46
      },
      "nodeContext" : "context.hasMoreCharacters() || mustPad",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 48,
    "startColumnNumber" : 8,
    "endLineNumber" : 48,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ ]
}