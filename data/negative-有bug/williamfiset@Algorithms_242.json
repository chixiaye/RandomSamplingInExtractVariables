{
  "id" : 242,
  "expression" : "4",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/graphtheory/treealgorithms/TreeIsomorphism.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "4",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 178,
      "startColumnNumber" : 32,
      "endLineNumber" : 178,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 178,
        "startColumnNumber" : 4,
        "endLineNumber" : 178,
        "endColumnNumber" : 34
      },
      "nodeContext" : "addUndirectedEdge(tree1,3,4)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 178,
        "startColumnNumber" : 4,
        "endLineNumber" : 178,
        "endColumnNumber" : 35
      },
      "nodeContext" : "addUndirectedEdge(tree1,3,4);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 520,
        "startLineNumber" : 175,
        "startColumnNumber" : 46,
        "endLineNumber" : 191,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<List<Integer>> tree1=createEmptyGraph(5);\n  addUndirectedEdge(tree1,2,0);\n  addUndirectedEdge(tree1,3,4);\n  addUndirectedEdge(tree1,2,1);\n  addUndirectedEdge(tree1,2,3);\n  List<List<Integer>> tree2=createEmptyGraph(5);\n  addUndirectedEdge(tree2,1,0);\n  addUndirectedEdge(tree2,2,4);\n  addUndirectedEdge(tree2,1,3);\n  addUndirectedEdge(tree2,1,2);\n  if (!treesAreIsomorphic(tree1,tree2)) {\n    System.out.println(\"Oops, these tree should be isomorphic!\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 564,
        "startLineNumber" : 175,
        "startColumnNumber" : 2,
        "endLineNumber" : 191,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void simpleIsomorphismTest(){\n  List<List<Integer>> tree1=createEmptyGraph(5);\n  addUndirectedEdge(tree1,2,0);\n  addUndirectedEdge(tree1,3,4);\n  addUndirectedEdge(tree1,2,1);\n  addUndirectedEdge(tree1,2,3);\n  List<List<Integer>> tree2=createEmptyGraph(5);\n  addUndirectedEdge(tree2,1,0);\n  addUndirectedEdge(tree2,2,4);\n  addUndirectedEdge(tree2,1,3);\n  addUndirectedEdge(tree2,1,2);\n  if (!treesAreIsomorphic(tree1,tree2)) {\n    System.out.println(\"Oops, these tree should be isomorphic!\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 96,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 178,
        "startColumnNumber" : 4,
        "endLineNumber" : 178,
        "endColumnNumber" : 35
      },
      "nodeContext" : "addUndirectedEdge(tree1,3,4);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "4",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 184,
      "startColumnNumber" : 32,
      "endLineNumber" : 184,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 184,
        "startColumnNumber" : 4,
        "endLineNumber" : 184,
        "endColumnNumber" : 34
      },
      "nodeContext" : "addUndirectedEdge(tree2,2,4)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 184,
        "startColumnNumber" : 4,
        "endLineNumber" : 184,
        "endColumnNumber" : 35
      },
      "nodeContext" : "addUndirectedEdge(tree2,2,4);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 520,
        "startLineNumber" : 175,
        "startColumnNumber" : 46,
        "endLineNumber" : 191,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  List<List<Integer>> tree1=createEmptyGraph(5);\n  addUndirectedEdge(tree1,2,0);\n  addUndirectedEdge(tree1,3,4);\n  addUndirectedEdge(tree1,2,1);\n  addUndirectedEdge(tree1,2,3);\n  List<List<Integer>> tree2=createEmptyGraph(5);\n  addUndirectedEdge(tree2,1,0);\n  addUndirectedEdge(tree2,2,4);\n  addUndirectedEdge(tree2,1,3);\n  addUndirectedEdge(tree2,1,2);\n  if (!treesAreIsomorphic(tree1,tree2)) {\n    System.out.println(\"Oops, these tree should be isomorphic!\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 564,
        "startLineNumber" : 175,
        "startColumnNumber" : 2,
        "endLineNumber" : 191,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static void simpleIsomorphismTest(){\n  List<List<Integer>> tree1=createEmptyGraph(5);\n  addUndirectedEdge(tree1,2,0);\n  addUndirectedEdge(tree1,3,4);\n  addUndirectedEdge(tree1,2,1);\n  addUndirectedEdge(tree1,2,3);\n  List<List<Integer>> tree2=createEmptyGraph(5);\n  addUndirectedEdge(tree2,1,0);\n  addUndirectedEdge(tree2,2,4);\n  addUndirectedEdge(tree2,1,3);\n  addUndirectedEdge(tree2,1,2);\n  if (!treesAreIsomorphic(tree1,tree2)) {\n    System.out.println(\"Oops, these tree should be isomorphic!\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 96,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 184,
        "startColumnNumber" : 4,
        "endLineNumber" : 184,
        "endColumnNumber" : 35
      },
      "nodeContext" : "addUndirectedEdge(tree2,2,4);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 178,
    "startColumnNumber" : 32,
    "endLineNumber" : 178,
    "endColumnNumber" : 33
  }, {
    "charLength" : 1,
    "startLineNumber" : 184,
    "startColumnNumber" : 32,
    "endLineNumber" : 184,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}