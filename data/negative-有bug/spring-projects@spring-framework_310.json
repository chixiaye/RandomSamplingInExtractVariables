{
  "id" : 310,
  "expression" : "UTF_8",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-messaging/src/test/java/org/springframework/messaging/rsocket/MetadataEncoderTests.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "UTF_8",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 68,
      "startColumnNumber" : 57,
      "endLineNumber" : 68,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 68,
        "startColumnNumber" : 37,
        "endLineNumber" : 68,
        "endColumnNumber" : 63
      },
      "nodeContext" : "\"Raw data\".getBytes(UTF_8)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 68,
        "startColumnNumber" : 14,
        "endLineNumber" : 68,
        "endColumnNumber" : 64
      },
      "nodeContext" : "Unpooled.wrappedBuffer(\"Raw data\".getBytes(UTF_8))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 303,
        "startLineNumber" : 64,
        "startColumnNumber" : 22,
        "endLineNumber" : 68,
        "endColumnNumber" : 105
      },
      "nodeContext" : "new MetadataEncoder(COMPOSITE_METADATA,this.strategies).route(\"toA\").metadata(\"My metadata\",MimeTypeUtils.TEXT_PLAIN).metadata(asyncMeta1,new MimeType(\"text\",\"x.test.metadata1\")).metadata(Unpooled.wrappedBuffer(\"Raw data\".getBytes(UTF_8)),MimeTypeUtils.APPLICATION_OCTET_STREAM)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 371,
        "startLineNumber" : 64,
        "startColumnNumber" : 22,
        "endLineNumber" : 69,
        "endColumnNumber" : 67
      },
      "nodeContext" : "new MetadataEncoder(COMPOSITE_METADATA,this.strategies).route(\"toA\").metadata(\"My metadata\",MimeTypeUtils.TEXT_PLAIN).metadata(asyncMeta1,new MimeType(\"text\",\"x.test.metadata1\")).metadata(Unpooled.wrappedBuffer(\"Raw data\".getBytes(UTF_8)),MimeTypeUtils.APPLICATION_OCTET_STREAM).metadata(asyncMeta2,new MimeType(\"text\",\"x.test.metadata2\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 44,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 385,
        "startLineNumber" : 64,
        "startColumnNumber" : 22,
        "endLineNumber" : 70,
        "endColumnNumber" : 13
      },
      "nodeContext" : "new MetadataEncoder(COMPOSITE_METADATA,this.strategies).route(\"toA\").metadata(\"My metadata\",MimeTypeUtils.TEXT_PLAIN).metadata(asyncMeta1,new MimeType(\"text\",\"x.test.metadata1\")).metadata(Unpooled.wrappedBuffer(\"Raw data\".getBytes(UTF_8)),MimeTypeUtils.APPLICATION_OCTET_STREAM).metadata(asyncMeta2,new MimeType(\"text\",\"x.test.metadata2\")).encode()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 46,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 398,
        "startLineNumber" : 64,
        "startColumnNumber" : 22,
        "endLineNumber" : 71,
        "endColumnNumber" : 12
      },
      "nodeContext" : "new MetadataEncoder(COMPOSITE_METADATA,this.strategies).route(\"toA\").metadata(\"My metadata\",MimeTypeUtils.TEXT_PLAIN).metadata(asyncMeta1,new MimeType(\"text\",\"x.test.metadata1\")).metadata(Unpooled.wrappedBuffer(\"Raw data\".getBytes(UTF_8)),MimeTypeUtils.APPLICATION_OCTET_STREAM).metadata(asyncMeta2,new MimeType(\"text\",\"x.test.metadata2\")).encode().block()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 48,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 407,
        "startLineNumber" : 64,
        "startColumnNumber" : 13,
        "endLineNumber" : 71,
        "endColumnNumber" : 12
      },
      "nodeContext" : "buffer=new MetadataEncoder(COMPOSITE_METADATA,this.strategies).route(\"toA\").metadata(\"My metadata\",MimeTypeUtils.TEXT_PLAIN).metadata(asyncMeta1,new MimeType(\"text\",\"x.test.metadata1\")).metadata(Unpooled.wrappedBuffer(\"Raw data\".getBytes(UTF_8)),MimeTypeUtils.APPLICATION_OCTET_STREAM).metadata(asyncMeta2,new MimeType(\"text\",\"x.test.metadata2\")).encode().block()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 50,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 419,
        "startLineNumber" : 64,
        "startColumnNumber" : 2,
        "endLineNumber" : 71,
        "endColumnNumber" : 13
      },
      "nodeContext" : "DataBuffer buffer=new MetadataEncoder(COMPOSITE_METADATA,this.strategies).route(\"toA\").metadata(\"My metadata\",MimeTypeUtils.TEXT_PLAIN).metadata(asyncMeta1,new MimeType(\"text\",\"x.test.metadata1\")).metadata(Unpooled.wrappedBuffer(\"Raw data\".getBytes(UTF_8)),MimeTypeUtils.APPLICATION_OCTET_STREAM).metadata(asyncMeta2,new MimeType(\"text\",\"x.test.metadata2\")).encode().block();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 53,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1973,
        "startLineNumber" : 59,
        "startColumnNumber" : 33,
        "endLineNumber" : 102,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Mono<String> asyncMeta1=Mono.delay(Duration.ofMillis(1)).map(aLong -> \"Async Metadata 1\");\n  Mono<String> asyncMeta2=Mono.delay(Duration.ofMillis(1)).map(aLong -> \"Async Metadata 2\");\n  DataBuffer buffer=new MetadataEncoder(COMPOSITE_METADATA,this.strategies).route(\"toA\").metadata(\"My metadata\",MimeTypeUtils.TEXT_PLAIN).metadata(asyncMeta1,new MimeType(\"text\",\"x.test.metadata1\")).metadata(Unpooled.wrappedBuffer(\"Raw data\".getBytes(UTF_8)),MimeTypeUtils.APPLICATION_OCTET_STREAM).metadata(asyncMeta2,new MimeType(\"text\",\"x.test.metadata2\")).encode().block();\n  CompositeMetadata entries=new CompositeMetadata(((NettyDataBuffer)buffer).getNativeBuffer(),false);\n  Iterator<CompositeMetadata.Entry> iterator=entries.iterator();\n  assertThat(iterator.hasNext()).isTrue();\n  CompositeMetadata.Entry entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(WellKnownMimeType.MESSAGE_RSOCKET_ROUTING.getString());\n  assertRoute(\"toA\",entry.getContent());\n  assertThat(iterator.hasNext()).isTrue();\n  entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(MimeTypeUtils.TEXT_PLAIN_VALUE);\n  assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"My metadata\");\n  assertThat(iterator.hasNext()).isTrue();\n  entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(\"text/x.test.metadata1\");\n  assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"Async Metadata 1\");\n  assertThat(iterator.hasNext()).isTrue();\n  entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(MimeTypeUtils.APPLICATION_OCTET_STREAM_VALUE);\n  assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"Raw data\");\n  assertThat(iterator.hasNext()).isTrue();\n  entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(\"text/x.test.metadata2\");\n  assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"Async Metadata 2\");\n  assertThat(iterator.hasNext()).isFalse();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 315,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2012,
        "startLineNumber" : 58,
        "startColumnNumber" : 1,
        "endLineNumber" : 102,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void compositeMetadata(){\n  Mono<String> asyncMeta1=Mono.delay(Duration.ofMillis(1)).map(aLong -> \"Async Metadata 1\");\n  Mono<String> asyncMeta2=Mono.delay(Duration.ofMillis(1)).map(aLong -> \"Async Metadata 2\");\n  DataBuffer buffer=new MetadataEncoder(COMPOSITE_METADATA,this.strategies).route(\"toA\").metadata(\"My metadata\",MimeTypeUtils.TEXT_PLAIN).metadata(asyncMeta1,new MimeType(\"text\",\"x.test.metadata1\")).metadata(Unpooled.wrappedBuffer(\"Raw data\".getBytes(UTF_8)),MimeTypeUtils.APPLICATION_OCTET_STREAM).metadata(asyncMeta2,new MimeType(\"text\",\"x.test.metadata2\")).encode().block();\n  CompositeMetadata entries=new CompositeMetadata(((NettyDataBuffer)buffer).getNativeBuffer(),false);\n  Iterator<CompositeMetadata.Entry> iterator=entries.iterator();\n  assertThat(iterator.hasNext()).isTrue();\n  CompositeMetadata.Entry entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(WellKnownMimeType.MESSAGE_RSOCKET_ROUTING.getString());\n  assertRoute(\"toA\",entry.getContent());\n  assertThat(iterator.hasNext()).isTrue();\n  entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(MimeTypeUtils.TEXT_PLAIN_VALUE);\n  assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"My metadata\");\n  assertThat(iterator.hasNext()).isTrue();\n  entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(\"text/x.test.metadata1\");\n  assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"Async Metadata 1\");\n  assertThat(iterator.hasNext()).isTrue();\n  entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(MimeTypeUtils.APPLICATION_OCTET_STREAM_VALUE);\n  assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"Raw data\");\n  assertThat(iterator.hasNext()).isTrue();\n  entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(\"text/x.test.metadata2\");\n  assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"Async Metadata 2\");\n  assertThat(iterator.hasNext()).isFalse();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 321,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 68,
        "startColumnNumber" : 14,
        "endLineNumber" : 68,
        "endColumnNumber" : 64
      },
      "nodeContext" : "Unpooled.wrappedBuffer(\"Raw data\".getBytes(UTF_8))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.nio.charset.Charset"
  }, {
    "nodeContext" : "UTF_8",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 84,
      "startColumnNumber" : 41,
      "endLineNumber" : 84,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 84,
        "startColumnNumber" : 13,
        "endLineNumber" : 84,
        "endColumnNumber" : 47
      },
      "nodeContext" : "entry.getContent().toString(UTF_8)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 84,
        "startColumnNumber" : 2,
        "endLineNumber" : 84,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertThat(entry.getContent().toString(UTF_8))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 84,
        "startColumnNumber" : 2,
        "endLineNumber" : 84,
        "endColumnNumber" : 73
      },
      "nodeContext" : "assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"My metadata\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 84,
        "startColumnNumber" : 2,
        "endLineNumber" : 84,
        "endColumnNumber" : 74
      },
      "nodeContext" : "assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"My metadata\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1973,
        "startLineNumber" : 59,
        "startColumnNumber" : 33,
        "endLineNumber" : 102,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Mono<String> asyncMeta1=Mono.delay(Duration.ofMillis(1)).map(aLong -> \"Async Metadata 1\");\n  Mono<String> asyncMeta2=Mono.delay(Duration.ofMillis(1)).map(aLong -> \"Async Metadata 2\");\n  DataBuffer buffer=new MetadataEncoder(COMPOSITE_METADATA,this.strategies).route(\"toA\").metadata(\"My metadata\",MimeTypeUtils.TEXT_PLAIN).metadata(asyncMeta1,new MimeType(\"text\",\"x.test.metadata1\")).metadata(Unpooled.wrappedBuffer(\"Raw data\".getBytes(UTF_8)),MimeTypeUtils.APPLICATION_OCTET_STREAM).metadata(asyncMeta2,new MimeType(\"text\",\"x.test.metadata2\")).encode().block();\n  CompositeMetadata entries=new CompositeMetadata(((NettyDataBuffer)buffer).getNativeBuffer(),false);\n  Iterator<CompositeMetadata.Entry> iterator=entries.iterator();\n  assertThat(iterator.hasNext()).isTrue();\n  CompositeMetadata.Entry entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(WellKnownMimeType.MESSAGE_RSOCKET_ROUTING.getString());\n  assertRoute(\"toA\",entry.getContent());\n  assertThat(iterator.hasNext()).isTrue();\n  entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(MimeTypeUtils.TEXT_PLAIN_VALUE);\n  assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"My metadata\");\n  assertThat(iterator.hasNext()).isTrue();\n  entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(\"text/x.test.metadata1\");\n  assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"Async Metadata 1\");\n  assertThat(iterator.hasNext()).isTrue();\n  entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(MimeTypeUtils.APPLICATION_OCTET_STREAM_VALUE);\n  assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"Raw data\");\n  assertThat(iterator.hasNext()).isTrue();\n  entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(\"text/x.test.metadata2\");\n  assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"Async Metadata 2\");\n  assertThat(iterator.hasNext()).isFalse();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 315,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2012,
        "startLineNumber" : 58,
        "startColumnNumber" : 1,
        "endLineNumber" : 102,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void compositeMetadata(){\n  Mono<String> asyncMeta1=Mono.delay(Duration.ofMillis(1)).map(aLong -> \"Async Metadata 1\");\n  Mono<String> asyncMeta2=Mono.delay(Duration.ofMillis(1)).map(aLong -> \"Async Metadata 2\");\n  DataBuffer buffer=new MetadataEncoder(COMPOSITE_METADATA,this.strategies).route(\"toA\").metadata(\"My metadata\",MimeTypeUtils.TEXT_PLAIN).metadata(asyncMeta1,new MimeType(\"text\",\"x.test.metadata1\")).metadata(Unpooled.wrappedBuffer(\"Raw data\".getBytes(UTF_8)),MimeTypeUtils.APPLICATION_OCTET_STREAM).metadata(asyncMeta2,new MimeType(\"text\",\"x.test.metadata2\")).encode().block();\n  CompositeMetadata entries=new CompositeMetadata(((NettyDataBuffer)buffer).getNativeBuffer(),false);\n  Iterator<CompositeMetadata.Entry> iterator=entries.iterator();\n  assertThat(iterator.hasNext()).isTrue();\n  CompositeMetadata.Entry entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(WellKnownMimeType.MESSAGE_RSOCKET_ROUTING.getString());\n  assertRoute(\"toA\",entry.getContent());\n  assertThat(iterator.hasNext()).isTrue();\n  entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(MimeTypeUtils.TEXT_PLAIN_VALUE);\n  assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"My metadata\");\n  assertThat(iterator.hasNext()).isTrue();\n  entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(\"text/x.test.metadata1\");\n  assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"Async Metadata 1\");\n  assertThat(iterator.hasNext()).isTrue();\n  entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(MimeTypeUtils.APPLICATION_OCTET_STREAM_VALUE);\n  assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"Raw data\");\n  assertThat(iterator.hasNext()).isTrue();\n  entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(\"text/x.test.metadata2\");\n  assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"Async Metadata 2\");\n  assertThat(iterator.hasNext()).isFalse();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 321,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 84,
        "startColumnNumber" : 2,
        "endLineNumber" : 84,
        "endColumnNumber" : 74
      },
      "nodeContext" : "assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"My metadata\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "java.nio.charset.Charset"
  }, {
    "nodeContext" : "UTF_8",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 89,
      "startColumnNumber" : 41,
      "endLineNumber" : 89,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 89,
        "startColumnNumber" : 13,
        "endLineNumber" : 89,
        "endColumnNumber" : 47
      },
      "nodeContext" : "entry.getContent().toString(UTF_8)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 89,
        "startColumnNumber" : 2,
        "endLineNumber" : 89,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertThat(entry.getContent().toString(UTF_8))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 89,
        "startColumnNumber" : 2,
        "endLineNumber" : 89,
        "endColumnNumber" : 78
      },
      "nodeContext" : "assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"Async Metadata 1\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 89,
        "startColumnNumber" : 2,
        "endLineNumber" : 89,
        "endColumnNumber" : 79
      },
      "nodeContext" : "assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"Async Metadata 1\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1973,
        "startLineNumber" : 59,
        "startColumnNumber" : 33,
        "endLineNumber" : 102,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Mono<String> asyncMeta1=Mono.delay(Duration.ofMillis(1)).map(aLong -> \"Async Metadata 1\");\n  Mono<String> asyncMeta2=Mono.delay(Duration.ofMillis(1)).map(aLong -> \"Async Metadata 2\");\n  DataBuffer buffer=new MetadataEncoder(COMPOSITE_METADATA,this.strategies).route(\"toA\").metadata(\"My metadata\",MimeTypeUtils.TEXT_PLAIN).metadata(asyncMeta1,new MimeType(\"text\",\"x.test.metadata1\")).metadata(Unpooled.wrappedBuffer(\"Raw data\".getBytes(UTF_8)),MimeTypeUtils.APPLICATION_OCTET_STREAM).metadata(asyncMeta2,new MimeType(\"text\",\"x.test.metadata2\")).encode().block();\n  CompositeMetadata entries=new CompositeMetadata(((NettyDataBuffer)buffer).getNativeBuffer(),false);\n  Iterator<CompositeMetadata.Entry> iterator=entries.iterator();\n  assertThat(iterator.hasNext()).isTrue();\n  CompositeMetadata.Entry entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(WellKnownMimeType.MESSAGE_RSOCKET_ROUTING.getString());\n  assertRoute(\"toA\",entry.getContent());\n  assertThat(iterator.hasNext()).isTrue();\n  entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(MimeTypeUtils.TEXT_PLAIN_VALUE);\n  assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"My metadata\");\n  assertThat(iterator.hasNext()).isTrue();\n  entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(\"text/x.test.metadata1\");\n  assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"Async Metadata 1\");\n  assertThat(iterator.hasNext()).isTrue();\n  entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(MimeTypeUtils.APPLICATION_OCTET_STREAM_VALUE);\n  assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"Raw data\");\n  assertThat(iterator.hasNext()).isTrue();\n  entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(\"text/x.test.metadata2\");\n  assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"Async Metadata 2\");\n  assertThat(iterator.hasNext()).isFalse();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 315,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2012,
        "startLineNumber" : 58,
        "startColumnNumber" : 1,
        "endLineNumber" : 102,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void compositeMetadata(){\n  Mono<String> asyncMeta1=Mono.delay(Duration.ofMillis(1)).map(aLong -> \"Async Metadata 1\");\n  Mono<String> asyncMeta2=Mono.delay(Duration.ofMillis(1)).map(aLong -> \"Async Metadata 2\");\n  DataBuffer buffer=new MetadataEncoder(COMPOSITE_METADATA,this.strategies).route(\"toA\").metadata(\"My metadata\",MimeTypeUtils.TEXT_PLAIN).metadata(asyncMeta1,new MimeType(\"text\",\"x.test.metadata1\")).metadata(Unpooled.wrappedBuffer(\"Raw data\".getBytes(UTF_8)),MimeTypeUtils.APPLICATION_OCTET_STREAM).metadata(asyncMeta2,new MimeType(\"text\",\"x.test.metadata2\")).encode().block();\n  CompositeMetadata entries=new CompositeMetadata(((NettyDataBuffer)buffer).getNativeBuffer(),false);\n  Iterator<CompositeMetadata.Entry> iterator=entries.iterator();\n  assertThat(iterator.hasNext()).isTrue();\n  CompositeMetadata.Entry entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(WellKnownMimeType.MESSAGE_RSOCKET_ROUTING.getString());\n  assertRoute(\"toA\",entry.getContent());\n  assertThat(iterator.hasNext()).isTrue();\n  entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(MimeTypeUtils.TEXT_PLAIN_VALUE);\n  assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"My metadata\");\n  assertThat(iterator.hasNext()).isTrue();\n  entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(\"text/x.test.metadata1\");\n  assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"Async Metadata 1\");\n  assertThat(iterator.hasNext()).isTrue();\n  entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(MimeTypeUtils.APPLICATION_OCTET_STREAM_VALUE);\n  assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"Raw data\");\n  assertThat(iterator.hasNext()).isTrue();\n  entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(\"text/x.test.metadata2\");\n  assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"Async Metadata 2\");\n  assertThat(iterator.hasNext()).isFalse();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 321,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 89,
        "startColumnNumber" : 2,
        "endLineNumber" : 89,
        "endColumnNumber" : 79
      },
      "nodeContext" : "assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"Async Metadata 1\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "java.nio.charset.Charset"
  }, {
    "nodeContext" : "UTF_8",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 94,
      "startColumnNumber" : 41,
      "endLineNumber" : 94,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 94,
        "startColumnNumber" : 13,
        "endLineNumber" : 94,
        "endColumnNumber" : 47
      },
      "nodeContext" : "entry.getContent().toString(UTF_8)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 94,
        "startColumnNumber" : 2,
        "endLineNumber" : 94,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertThat(entry.getContent().toString(UTF_8))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 94,
        "startColumnNumber" : 2,
        "endLineNumber" : 94,
        "endColumnNumber" : 70
      },
      "nodeContext" : "assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"Raw data\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 94,
        "startColumnNumber" : 2,
        "endLineNumber" : 94,
        "endColumnNumber" : 71
      },
      "nodeContext" : "assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"Raw data\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1973,
        "startLineNumber" : 59,
        "startColumnNumber" : 33,
        "endLineNumber" : 102,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Mono<String> asyncMeta1=Mono.delay(Duration.ofMillis(1)).map(aLong -> \"Async Metadata 1\");\n  Mono<String> asyncMeta2=Mono.delay(Duration.ofMillis(1)).map(aLong -> \"Async Metadata 2\");\n  DataBuffer buffer=new MetadataEncoder(COMPOSITE_METADATA,this.strategies).route(\"toA\").metadata(\"My metadata\",MimeTypeUtils.TEXT_PLAIN).metadata(asyncMeta1,new MimeType(\"text\",\"x.test.metadata1\")).metadata(Unpooled.wrappedBuffer(\"Raw data\".getBytes(UTF_8)),MimeTypeUtils.APPLICATION_OCTET_STREAM).metadata(asyncMeta2,new MimeType(\"text\",\"x.test.metadata2\")).encode().block();\n  CompositeMetadata entries=new CompositeMetadata(((NettyDataBuffer)buffer).getNativeBuffer(),false);\n  Iterator<CompositeMetadata.Entry> iterator=entries.iterator();\n  assertThat(iterator.hasNext()).isTrue();\n  CompositeMetadata.Entry entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(WellKnownMimeType.MESSAGE_RSOCKET_ROUTING.getString());\n  assertRoute(\"toA\",entry.getContent());\n  assertThat(iterator.hasNext()).isTrue();\n  entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(MimeTypeUtils.TEXT_PLAIN_VALUE);\n  assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"My metadata\");\n  assertThat(iterator.hasNext()).isTrue();\n  entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(\"text/x.test.metadata1\");\n  assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"Async Metadata 1\");\n  assertThat(iterator.hasNext()).isTrue();\n  entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(MimeTypeUtils.APPLICATION_OCTET_STREAM_VALUE);\n  assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"Raw data\");\n  assertThat(iterator.hasNext()).isTrue();\n  entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(\"text/x.test.metadata2\");\n  assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"Async Metadata 2\");\n  assertThat(iterator.hasNext()).isFalse();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 315,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2012,
        "startLineNumber" : 58,
        "startColumnNumber" : 1,
        "endLineNumber" : 102,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void compositeMetadata(){\n  Mono<String> asyncMeta1=Mono.delay(Duration.ofMillis(1)).map(aLong -> \"Async Metadata 1\");\n  Mono<String> asyncMeta2=Mono.delay(Duration.ofMillis(1)).map(aLong -> \"Async Metadata 2\");\n  DataBuffer buffer=new MetadataEncoder(COMPOSITE_METADATA,this.strategies).route(\"toA\").metadata(\"My metadata\",MimeTypeUtils.TEXT_PLAIN).metadata(asyncMeta1,new MimeType(\"text\",\"x.test.metadata1\")).metadata(Unpooled.wrappedBuffer(\"Raw data\".getBytes(UTF_8)),MimeTypeUtils.APPLICATION_OCTET_STREAM).metadata(asyncMeta2,new MimeType(\"text\",\"x.test.metadata2\")).encode().block();\n  CompositeMetadata entries=new CompositeMetadata(((NettyDataBuffer)buffer).getNativeBuffer(),false);\n  Iterator<CompositeMetadata.Entry> iterator=entries.iterator();\n  assertThat(iterator.hasNext()).isTrue();\n  CompositeMetadata.Entry entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(WellKnownMimeType.MESSAGE_RSOCKET_ROUTING.getString());\n  assertRoute(\"toA\",entry.getContent());\n  assertThat(iterator.hasNext()).isTrue();\n  entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(MimeTypeUtils.TEXT_PLAIN_VALUE);\n  assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"My metadata\");\n  assertThat(iterator.hasNext()).isTrue();\n  entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(\"text/x.test.metadata1\");\n  assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"Async Metadata 1\");\n  assertThat(iterator.hasNext()).isTrue();\n  entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(MimeTypeUtils.APPLICATION_OCTET_STREAM_VALUE);\n  assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"Raw data\");\n  assertThat(iterator.hasNext()).isTrue();\n  entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(\"text/x.test.metadata2\");\n  assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"Async Metadata 2\");\n  assertThat(iterator.hasNext()).isFalse();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 321,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 94,
        "startColumnNumber" : 2,
        "endLineNumber" : 94,
        "endColumnNumber" : 71
      },
      "nodeContext" : "assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"Raw data\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "java.nio.charset.Charset"
  }, {
    "nodeContext" : "UTF_8",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 99,
      "startColumnNumber" : 41,
      "endLineNumber" : 99,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 99,
        "startColumnNumber" : 13,
        "endLineNumber" : 99,
        "endColumnNumber" : 47
      },
      "nodeContext" : "entry.getContent().toString(UTF_8)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 99,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertThat(entry.getContent().toString(UTF_8))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 99,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 78
      },
      "nodeContext" : "assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"Async Metadata 2\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 99,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 79
      },
      "nodeContext" : "assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"Async Metadata 2\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1973,
        "startLineNumber" : 59,
        "startColumnNumber" : 33,
        "endLineNumber" : 102,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Mono<String> asyncMeta1=Mono.delay(Duration.ofMillis(1)).map(aLong -> \"Async Metadata 1\");\n  Mono<String> asyncMeta2=Mono.delay(Duration.ofMillis(1)).map(aLong -> \"Async Metadata 2\");\n  DataBuffer buffer=new MetadataEncoder(COMPOSITE_METADATA,this.strategies).route(\"toA\").metadata(\"My metadata\",MimeTypeUtils.TEXT_PLAIN).metadata(asyncMeta1,new MimeType(\"text\",\"x.test.metadata1\")).metadata(Unpooled.wrappedBuffer(\"Raw data\".getBytes(UTF_8)),MimeTypeUtils.APPLICATION_OCTET_STREAM).metadata(asyncMeta2,new MimeType(\"text\",\"x.test.metadata2\")).encode().block();\n  CompositeMetadata entries=new CompositeMetadata(((NettyDataBuffer)buffer).getNativeBuffer(),false);\n  Iterator<CompositeMetadata.Entry> iterator=entries.iterator();\n  assertThat(iterator.hasNext()).isTrue();\n  CompositeMetadata.Entry entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(WellKnownMimeType.MESSAGE_RSOCKET_ROUTING.getString());\n  assertRoute(\"toA\",entry.getContent());\n  assertThat(iterator.hasNext()).isTrue();\n  entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(MimeTypeUtils.TEXT_PLAIN_VALUE);\n  assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"My metadata\");\n  assertThat(iterator.hasNext()).isTrue();\n  entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(\"text/x.test.metadata1\");\n  assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"Async Metadata 1\");\n  assertThat(iterator.hasNext()).isTrue();\n  entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(MimeTypeUtils.APPLICATION_OCTET_STREAM_VALUE);\n  assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"Raw data\");\n  assertThat(iterator.hasNext()).isTrue();\n  entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(\"text/x.test.metadata2\");\n  assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"Async Metadata 2\");\n  assertThat(iterator.hasNext()).isFalse();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 315,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2012,
        "startLineNumber" : 58,
        "startColumnNumber" : 1,
        "endLineNumber" : 102,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void compositeMetadata(){\n  Mono<String> asyncMeta1=Mono.delay(Duration.ofMillis(1)).map(aLong -> \"Async Metadata 1\");\n  Mono<String> asyncMeta2=Mono.delay(Duration.ofMillis(1)).map(aLong -> \"Async Metadata 2\");\n  DataBuffer buffer=new MetadataEncoder(COMPOSITE_METADATA,this.strategies).route(\"toA\").metadata(\"My metadata\",MimeTypeUtils.TEXT_PLAIN).metadata(asyncMeta1,new MimeType(\"text\",\"x.test.metadata1\")).metadata(Unpooled.wrappedBuffer(\"Raw data\".getBytes(UTF_8)),MimeTypeUtils.APPLICATION_OCTET_STREAM).metadata(asyncMeta2,new MimeType(\"text\",\"x.test.metadata2\")).encode().block();\n  CompositeMetadata entries=new CompositeMetadata(((NettyDataBuffer)buffer).getNativeBuffer(),false);\n  Iterator<CompositeMetadata.Entry> iterator=entries.iterator();\n  assertThat(iterator.hasNext()).isTrue();\n  CompositeMetadata.Entry entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(WellKnownMimeType.MESSAGE_RSOCKET_ROUTING.getString());\n  assertRoute(\"toA\",entry.getContent());\n  assertThat(iterator.hasNext()).isTrue();\n  entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(MimeTypeUtils.TEXT_PLAIN_VALUE);\n  assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"My metadata\");\n  assertThat(iterator.hasNext()).isTrue();\n  entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(\"text/x.test.metadata1\");\n  assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"Async Metadata 1\");\n  assertThat(iterator.hasNext()).isTrue();\n  entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(MimeTypeUtils.APPLICATION_OCTET_STREAM_VALUE);\n  assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"Raw data\");\n  assertThat(iterator.hasNext()).isTrue();\n  entry=iterator.next();\n  assertThat(entry.getMimeType()).isEqualTo(\"text/x.test.metadata2\");\n  assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"Async Metadata 2\");\n  assertThat(iterator.hasNext()).isFalse();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 321,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 99,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 79
      },
      "nodeContext" : "assertThat(entry.getContent().toString(UTF_8)).isEqualTo(\"Async Metadata 2\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "java.nio.charset.Charset"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 68,
    "startColumnNumber" : 57,
    "endLineNumber" : 68,
    "endColumnNumber" : 62
  }, {
    "charLength" : 5,
    "startLineNumber" : 84,
    "startColumnNumber" : 41,
    "endLineNumber" : 84,
    "endColumnNumber" : 46
  }, {
    "charLength" : 5,
    "startLineNumber" : 89,
    "startColumnNumber" : 41,
    "endLineNumber" : 89,
    "endColumnNumber" : 46
  }, {
    "charLength" : 5,
    "startLineNumber" : 94,
    "startColumnNumber" : 41,
    "endLineNumber" : 94,
    "endColumnNumber" : 46
  }, {
    "charLength" : 5,
    "startLineNumber" : 99,
    "startColumnNumber" : 41,
    "endLineNumber" : 99,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 4
  } ]
}