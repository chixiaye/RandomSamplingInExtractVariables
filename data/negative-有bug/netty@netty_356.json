{
  "id" : 356,
  "expression" : "bytes",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/handler/src/main/java/io/netty/handler/pcap/PcapWriteHandler.java",
  "occurrences" : 6,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "bytes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 282,
      "startColumnNumber" : 33,
      "endLineNumber" : 282,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 282,
        "startColumnNumber" : 20,
        "endLineNumber" : 282,
        "endColumnNumber" : 105
      },
      "nodeContext" : "logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 282,
        "startColumnNumber" : 20,
        "endLineNumber" : 282,
        "endColumnNumber" : 106
      },
      "nodeContext" : "logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 844,
        "startLineNumber" : 278,
        "startColumnNumber" : 38,
        "endLineNumber" : 290,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n  completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n  logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n  sendSegmentNumber+=bytes;\n  TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n  completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n  logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1721,
        "startLineNumber" : 278,
        "startColumnNumber" : 16,
        "endLineNumber" : 302,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (isWriteOperation) {\n  TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n  completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n  logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n  sendSegmentNumber+=bytes;\n  TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n  completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n  logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n}\n else {\n  TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n  completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n  logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n  receiveSegmentNumber+=bytes;\n  TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n  completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n  logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 160,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1755,
        "startLineNumber" : 277,
        "startColumnNumber" : 16,
        "endLineNumber" : 303,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (isWriteOperation) {\n    TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n    sendSegmentNumber+=bytes;\n    TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n  }\n else {\n    TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n    receiveSegmentNumber+=bytes;\n    TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 161,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1819,
        "startLineNumber" : 277,
        "startColumnNumber" : 12,
        "endLineNumber" : 305,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  if (isWriteOperation) {\n    TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n    sendSegmentNumber+=bytes;\n    TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n  }\n else {\n    TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n    receiveSegmentNumber+=bytes;\n    TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n  }\n}\n  finally {\n  tcpBuf.release();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 167,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2432,
        "startLineNumber" : 264,
        "startColumnNumber" : 47,
        "endLineNumber" : 306,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (((ByteBufConvertible)msg).asByteBuf().readableBytes() == 0 && !captureZeroByte) {\n    logger.debug(\"Discarding Zero Byte TCP Packet. isWriteOperation {}\",isWriteOperation);\n    return;\n  }\n  ByteBufAllocator byteBufAllocator=ctx.alloc();\n  ByteBuf packet=((ByteBufConvertible)msg).asByteBuf().duplicate();\n  ByteBuf tcpBuf=byteBufAllocator.buffer();\n  int bytes=packet.readableBytes();\n  try {\n    if (isWriteOperation) {\n      TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n      sendSegmentNumber+=bytes;\n      TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n    }\n else {\n      TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n      receiveSegmentNumber+=bytes;\n      TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n    }\n  }\n  finally {\n    tcpBuf.release();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 228,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2565,
        "startLineNumber" : 264,
        "startColumnNumber" : 8,
        "endLineNumber" : 308,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (msg instanceof ByteBufConvertible) {\n  if (((ByteBufConvertible)msg).asByteBuf().readableBytes() == 0 && !captureZeroByte) {\n    logger.debug(\"Discarding Zero Byte TCP Packet. isWriteOperation {}\",isWriteOperation);\n    return;\n  }\n  ByteBufAllocator byteBufAllocator=ctx.alloc();\n  ByteBuf packet=((ByteBufConvertible)msg).asByteBuf().duplicate();\n  ByteBuf tcpBuf=byteBufAllocator.buffer();\n  int bytes=packet.readableBytes();\n  try {\n    if (isWriteOperation) {\n      TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n      sendSegmentNumber+=bytes;\n      TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n    }\n else {\n      TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n      receiveSegmentNumber+=bytes;\n      TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n    }\n  }\n  finally {\n    tcpBuf.release();\n  }\n}\n else {\n  logger.debug(\"Discarding Pcap Write for TCP Object: {}\",msg);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 240,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2583,
        "startLineNumber" : 263,
        "startColumnNumber" : 92,
        "endLineNumber" : 309,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (msg instanceof ByteBufConvertible) {\n    if (((ByteBufConvertible)msg).asByteBuf().readableBytes() == 0 && !captureZeroByte) {\n      logger.debug(\"Discarding Zero Byte TCP Packet. isWriteOperation {}\",isWriteOperation);\n      return;\n    }\n    ByteBufAllocator byteBufAllocator=ctx.alloc();\n    ByteBuf packet=((ByteBufConvertible)msg).asByteBuf().duplicate();\n    ByteBuf tcpBuf=byteBufAllocator.buffer();\n    int bytes=packet.readableBytes();\n    try {\n      if (isWriteOperation) {\n        TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n        sendSegmentNumber+=bytes;\n        TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n      }\n else {\n        TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n        receiveSegmentNumber+=bytes;\n        TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n      }\n    }\n  finally {\n      tcpBuf.release();\n    }\n  }\n else {\n    logger.debug(\"Discarding Pcap Write for TCP Object: {}\",msg);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 241,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3136,
        "startLineNumber" : 254,
        "startColumnNumber" : 4,
        "endLineNumber" : 309,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Handle TCP L4\n * @param ctx              {@link ChannelHandlerContext} for {@link ByteBuf} allocation and{@code fireExceptionCaught}\n * @param msg              {@link Object} must be {@link ByteBuf} else it'll be discarded\n * @param isWriteOperation Set {@code true} if we have to process packet when packets are being sent outelse set  {@code false}\n */\nprivate void handleTCP(ChannelHandlerContext ctx,Object msg,boolean isWriteOperation){\n  if (msg instanceof ByteBufConvertible) {\n    if (((ByteBufConvertible)msg).asByteBuf().readableBytes() == 0 && !captureZeroByte) {\n      logger.debug(\"Discarding Zero Byte TCP Packet. isWriteOperation {}\",isWriteOperation);\n      return;\n    }\n    ByteBufAllocator byteBufAllocator=ctx.alloc();\n    ByteBuf packet=((ByteBufConvertible)msg).asByteBuf().duplicate();\n    ByteBuf tcpBuf=byteBufAllocator.buffer();\n    int bytes=packet.readableBytes();\n    try {\n      if (isWriteOperation) {\n        TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n        sendSegmentNumber+=bytes;\n        TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n      }\n else {\n        TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n        receiveSegmentNumber+=bytes;\n        TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n      }\n    }\n  finally {\n      tcpBuf.release();\n    }\n  }\n else {\n    logger.debug(\"Discarding Pcap Write for TCP Object: {}\",msg);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 257,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 282,
        "startColumnNumber" : 20,
        "endLineNumber" : 282,
        "endColumnNumber" : 106
      },
      "nodeContext" : "logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "bytes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 284,
      "startColumnNumber" : 41,
      "endLineNumber" : 284,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 284,
        "startColumnNumber" : 20,
        "endLineNumber" : 284,
        "endColumnNumber" : 46
      },
      "nodeContext" : "sendSegmentNumber+=bytes",
      "nodeType" : "Assignment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 284,
        "startColumnNumber" : 20,
        "endLineNumber" : 284,
        "endColumnNumber" : 47
      },
      "nodeContext" : "sendSegmentNumber+=bytes;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 844,
        "startLineNumber" : 278,
        "startColumnNumber" : 38,
        "endLineNumber" : 290,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n  completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n  logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n  sendSegmentNumber+=bytes;\n  TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n  completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n  logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1721,
        "startLineNumber" : 278,
        "startColumnNumber" : 16,
        "endLineNumber" : 302,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (isWriteOperation) {\n  TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n  completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n  logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n  sendSegmentNumber+=bytes;\n  TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n  completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n  logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n}\n else {\n  TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n  completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n  logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n  receiveSegmentNumber+=bytes;\n  TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n  completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n  logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 160,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1755,
        "startLineNumber" : 277,
        "startColumnNumber" : 16,
        "endLineNumber" : 303,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (isWriteOperation) {\n    TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n    sendSegmentNumber+=bytes;\n    TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n  }\n else {\n    TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n    receiveSegmentNumber+=bytes;\n    TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 161,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1819,
        "startLineNumber" : 277,
        "startColumnNumber" : 12,
        "endLineNumber" : 305,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  if (isWriteOperation) {\n    TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n    sendSegmentNumber+=bytes;\n    TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n  }\n else {\n    TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n    receiveSegmentNumber+=bytes;\n    TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n  }\n}\n  finally {\n  tcpBuf.release();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 167,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2432,
        "startLineNumber" : 264,
        "startColumnNumber" : 47,
        "endLineNumber" : 306,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (((ByteBufConvertible)msg).asByteBuf().readableBytes() == 0 && !captureZeroByte) {\n    logger.debug(\"Discarding Zero Byte TCP Packet. isWriteOperation {}\",isWriteOperation);\n    return;\n  }\n  ByteBufAllocator byteBufAllocator=ctx.alloc();\n  ByteBuf packet=((ByteBufConvertible)msg).asByteBuf().duplicate();\n  ByteBuf tcpBuf=byteBufAllocator.buffer();\n  int bytes=packet.readableBytes();\n  try {\n    if (isWriteOperation) {\n      TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n      sendSegmentNumber+=bytes;\n      TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n    }\n else {\n      TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n      receiveSegmentNumber+=bytes;\n      TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n    }\n  }\n  finally {\n    tcpBuf.release();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 228,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2565,
        "startLineNumber" : 264,
        "startColumnNumber" : 8,
        "endLineNumber" : 308,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (msg instanceof ByteBufConvertible) {\n  if (((ByteBufConvertible)msg).asByteBuf().readableBytes() == 0 && !captureZeroByte) {\n    logger.debug(\"Discarding Zero Byte TCP Packet. isWriteOperation {}\",isWriteOperation);\n    return;\n  }\n  ByteBufAllocator byteBufAllocator=ctx.alloc();\n  ByteBuf packet=((ByteBufConvertible)msg).asByteBuf().duplicate();\n  ByteBuf tcpBuf=byteBufAllocator.buffer();\n  int bytes=packet.readableBytes();\n  try {\n    if (isWriteOperation) {\n      TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n      sendSegmentNumber+=bytes;\n      TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n    }\n else {\n      TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n      receiveSegmentNumber+=bytes;\n      TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n    }\n  }\n  finally {\n    tcpBuf.release();\n  }\n}\n else {\n  logger.debug(\"Discarding Pcap Write for TCP Object: {}\",msg);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 240,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2583,
        "startLineNumber" : 263,
        "startColumnNumber" : 92,
        "endLineNumber" : 309,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (msg instanceof ByteBufConvertible) {\n    if (((ByteBufConvertible)msg).asByteBuf().readableBytes() == 0 && !captureZeroByte) {\n      logger.debug(\"Discarding Zero Byte TCP Packet. isWriteOperation {}\",isWriteOperation);\n      return;\n    }\n    ByteBufAllocator byteBufAllocator=ctx.alloc();\n    ByteBuf packet=((ByteBufConvertible)msg).asByteBuf().duplicate();\n    ByteBuf tcpBuf=byteBufAllocator.buffer();\n    int bytes=packet.readableBytes();\n    try {\n      if (isWriteOperation) {\n        TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n        sendSegmentNumber+=bytes;\n        TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n      }\n else {\n        TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n        receiveSegmentNumber+=bytes;\n        TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n      }\n    }\n  finally {\n      tcpBuf.release();\n    }\n  }\n else {\n    logger.debug(\"Discarding Pcap Write for TCP Object: {}\",msg);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 241,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3136,
        "startLineNumber" : 254,
        "startColumnNumber" : 4,
        "endLineNumber" : 309,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Handle TCP L4\n * @param ctx              {@link ChannelHandlerContext} for {@link ByteBuf} allocation and{@code fireExceptionCaught}\n * @param msg              {@link Object} must be {@link ByteBuf} else it'll be discarded\n * @param isWriteOperation Set {@code true} if we have to process packet when packets are being sent outelse set  {@code false}\n */\nprivate void handleTCP(ChannelHandlerContext ctx,Object msg,boolean isWriteOperation){\n  if (msg instanceof ByteBufConvertible) {\n    if (((ByteBufConvertible)msg).asByteBuf().readableBytes() == 0 && !captureZeroByte) {\n      logger.debug(\"Discarding Zero Byte TCP Packet. isWriteOperation {}\",isWriteOperation);\n      return;\n    }\n    ByteBufAllocator byteBufAllocator=ctx.alloc();\n    ByteBuf packet=((ByteBufConvertible)msg).asByteBuf().duplicate();\n    ByteBuf tcpBuf=byteBufAllocator.buffer();\n    int bytes=packet.readableBytes();\n    try {\n      if (isWriteOperation) {\n        TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n        sendSegmentNumber+=bytes;\n        TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n      }\n else {\n        TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n        receiveSegmentNumber+=bytes;\n        TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n      }\n    }\n  finally {\n      tcpBuf.release();\n    }\n  }\n else {\n    logger.debug(\"Discarding Pcap Write for TCP Object: {}\",msg);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 257,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 284,
        "startColumnNumber" : 20,
        "endLineNumber" : 284,
        "endColumnNumber" : 47
      },
      "nodeContext" : "sendSegmentNumber+=bytes;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "bytes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 289,
      "startColumnNumber" : 33,
      "endLineNumber" : 289,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 289,
        "startColumnNumber" : 20,
        "endLineNumber" : 289,
        "endColumnNumber" : 104
      },
      "nodeContext" : "logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 289,
        "startColumnNumber" : 20,
        "endLineNumber" : 289,
        "endColumnNumber" : 105
      },
      "nodeContext" : "logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 844,
        "startLineNumber" : 278,
        "startColumnNumber" : 38,
        "endLineNumber" : 290,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n  completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n  logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n  sendSegmentNumber+=bytes;\n  TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n  completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n  logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1721,
        "startLineNumber" : 278,
        "startColumnNumber" : 16,
        "endLineNumber" : 302,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (isWriteOperation) {\n  TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n  completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n  logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n  sendSegmentNumber+=bytes;\n  TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n  completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n  logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n}\n else {\n  TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n  completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n  logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n  receiveSegmentNumber+=bytes;\n  TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n  completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n  logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 160,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1755,
        "startLineNumber" : 277,
        "startColumnNumber" : 16,
        "endLineNumber" : 303,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (isWriteOperation) {\n    TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n    sendSegmentNumber+=bytes;\n    TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n  }\n else {\n    TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n    receiveSegmentNumber+=bytes;\n    TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 161,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1819,
        "startLineNumber" : 277,
        "startColumnNumber" : 12,
        "endLineNumber" : 305,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  if (isWriteOperation) {\n    TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n    sendSegmentNumber+=bytes;\n    TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n  }\n else {\n    TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n    receiveSegmentNumber+=bytes;\n    TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n  }\n}\n  finally {\n  tcpBuf.release();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 167,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2432,
        "startLineNumber" : 264,
        "startColumnNumber" : 47,
        "endLineNumber" : 306,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (((ByteBufConvertible)msg).asByteBuf().readableBytes() == 0 && !captureZeroByte) {\n    logger.debug(\"Discarding Zero Byte TCP Packet. isWriteOperation {}\",isWriteOperation);\n    return;\n  }\n  ByteBufAllocator byteBufAllocator=ctx.alloc();\n  ByteBuf packet=((ByteBufConvertible)msg).asByteBuf().duplicate();\n  ByteBuf tcpBuf=byteBufAllocator.buffer();\n  int bytes=packet.readableBytes();\n  try {\n    if (isWriteOperation) {\n      TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n      sendSegmentNumber+=bytes;\n      TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n    }\n else {\n      TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n      receiveSegmentNumber+=bytes;\n      TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n    }\n  }\n  finally {\n    tcpBuf.release();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 228,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2565,
        "startLineNumber" : 264,
        "startColumnNumber" : 8,
        "endLineNumber" : 308,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (msg instanceof ByteBufConvertible) {\n  if (((ByteBufConvertible)msg).asByteBuf().readableBytes() == 0 && !captureZeroByte) {\n    logger.debug(\"Discarding Zero Byte TCP Packet. isWriteOperation {}\",isWriteOperation);\n    return;\n  }\n  ByteBufAllocator byteBufAllocator=ctx.alloc();\n  ByteBuf packet=((ByteBufConvertible)msg).asByteBuf().duplicate();\n  ByteBuf tcpBuf=byteBufAllocator.buffer();\n  int bytes=packet.readableBytes();\n  try {\n    if (isWriteOperation) {\n      TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n      sendSegmentNumber+=bytes;\n      TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n    }\n else {\n      TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n      receiveSegmentNumber+=bytes;\n      TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n    }\n  }\n  finally {\n    tcpBuf.release();\n  }\n}\n else {\n  logger.debug(\"Discarding Pcap Write for TCP Object: {}\",msg);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 240,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2583,
        "startLineNumber" : 263,
        "startColumnNumber" : 92,
        "endLineNumber" : 309,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (msg instanceof ByteBufConvertible) {\n    if (((ByteBufConvertible)msg).asByteBuf().readableBytes() == 0 && !captureZeroByte) {\n      logger.debug(\"Discarding Zero Byte TCP Packet. isWriteOperation {}\",isWriteOperation);\n      return;\n    }\n    ByteBufAllocator byteBufAllocator=ctx.alloc();\n    ByteBuf packet=((ByteBufConvertible)msg).asByteBuf().duplicate();\n    ByteBuf tcpBuf=byteBufAllocator.buffer();\n    int bytes=packet.readableBytes();\n    try {\n      if (isWriteOperation) {\n        TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n        sendSegmentNumber+=bytes;\n        TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n      }\n else {\n        TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n        receiveSegmentNumber+=bytes;\n        TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n      }\n    }\n  finally {\n      tcpBuf.release();\n    }\n  }\n else {\n    logger.debug(\"Discarding Pcap Write for TCP Object: {}\",msg);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 241,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3136,
        "startLineNumber" : 254,
        "startColumnNumber" : 4,
        "endLineNumber" : 309,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Handle TCP L4\n * @param ctx              {@link ChannelHandlerContext} for {@link ByteBuf} allocation and{@code fireExceptionCaught}\n * @param msg              {@link Object} must be {@link ByteBuf} else it'll be discarded\n * @param isWriteOperation Set {@code true} if we have to process packet when packets are being sent outelse set  {@code false}\n */\nprivate void handleTCP(ChannelHandlerContext ctx,Object msg,boolean isWriteOperation){\n  if (msg instanceof ByteBufConvertible) {\n    if (((ByteBufConvertible)msg).asByteBuf().readableBytes() == 0 && !captureZeroByte) {\n      logger.debug(\"Discarding Zero Byte TCP Packet. isWriteOperation {}\",isWriteOperation);\n      return;\n    }\n    ByteBufAllocator byteBufAllocator=ctx.alloc();\n    ByteBuf packet=((ByteBufConvertible)msg).asByteBuf().duplicate();\n    ByteBuf tcpBuf=byteBufAllocator.buffer();\n    int bytes=packet.readableBytes();\n    try {\n      if (isWriteOperation) {\n        TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n        sendSegmentNumber+=bytes;\n        TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n      }\n else {\n        TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n        receiveSegmentNumber+=bytes;\n        TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n      }\n    }\n  finally {\n      tcpBuf.release();\n    }\n  }\n else {\n    logger.debug(\"Discarding Pcap Write for TCP Object: {}\",msg);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 257,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 289,
        "startColumnNumber" : 20,
        "endLineNumber" : 289,
        "endColumnNumber" : 105
      },
      "nodeContext" : "logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "bytes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 294,
      "startColumnNumber" : 34,
      "endLineNumber" : 294,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 294,
        "startColumnNumber" : 20,
        "endLineNumber" : 294,
        "endColumnNumber" : 106
      },
      "nodeContext" : "logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 294,
        "startColumnNumber" : 20,
        "endLineNumber" : 294,
        "endColumnNumber" : 107
      },
      "nodeContext" : "logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 849,
        "startLineNumber" : 290,
        "startColumnNumber" : 23,
        "endLineNumber" : 302,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n  completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n  logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n  receiveSegmentNumber+=bytes;\n  TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n  completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n  logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1721,
        "startLineNumber" : 278,
        "startColumnNumber" : 16,
        "endLineNumber" : 302,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (isWriteOperation) {\n  TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n  completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n  logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n  sendSegmentNumber+=bytes;\n  TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n  completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n  logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n}\n else {\n  TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n  completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n  logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n  receiveSegmentNumber+=bytes;\n  TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n  completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n  logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 160,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1755,
        "startLineNumber" : 277,
        "startColumnNumber" : 16,
        "endLineNumber" : 303,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (isWriteOperation) {\n    TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n    sendSegmentNumber+=bytes;\n    TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n  }\n else {\n    TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n    receiveSegmentNumber+=bytes;\n    TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 161,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1819,
        "startLineNumber" : 277,
        "startColumnNumber" : 12,
        "endLineNumber" : 305,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  if (isWriteOperation) {\n    TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n    sendSegmentNumber+=bytes;\n    TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n  }\n else {\n    TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n    receiveSegmentNumber+=bytes;\n    TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n  }\n}\n  finally {\n  tcpBuf.release();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 167,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2432,
        "startLineNumber" : 264,
        "startColumnNumber" : 47,
        "endLineNumber" : 306,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (((ByteBufConvertible)msg).asByteBuf().readableBytes() == 0 && !captureZeroByte) {\n    logger.debug(\"Discarding Zero Byte TCP Packet. isWriteOperation {}\",isWriteOperation);\n    return;\n  }\n  ByteBufAllocator byteBufAllocator=ctx.alloc();\n  ByteBuf packet=((ByteBufConvertible)msg).asByteBuf().duplicate();\n  ByteBuf tcpBuf=byteBufAllocator.buffer();\n  int bytes=packet.readableBytes();\n  try {\n    if (isWriteOperation) {\n      TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n      sendSegmentNumber+=bytes;\n      TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n    }\n else {\n      TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n      receiveSegmentNumber+=bytes;\n      TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n    }\n  }\n  finally {\n    tcpBuf.release();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 228,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2565,
        "startLineNumber" : 264,
        "startColumnNumber" : 8,
        "endLineNumber" : 308,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (msg instanceof ByteBufConvertible) {\n  if (((ByteBufConvertible)msg).asByteBuf().readableBytes() == 0 && !captureZeroByte) {\n    logger.debug(\"Discarding Zero Byte TCP Packet. isWriteOperation {}\",isWriteOperation);\n    return;\n  }\n  ByteBufAllocator byteBufAllocator=ctx.alloc();\n  ByteBuf packet=((ByteBufConvertible)msg).asByteBuf().duplicate();\n  ByteBuf tcpBuf=byteBufAllocator.buffer();\n  int bytes=packet.readableBytes();\n  try {\n    if (isWriteOperation) {\n      TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n      sendSegmentNumber+=bytes;\n      TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n    }\n else {\n      TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n      receiveSegmentNumber+=bytes;\n      TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n    }\n  }\n  finally {\n    tcpBuf.release();\n  }\n}\n else {\n  logger.debug(\"Discarding Pcap Write for TCP Object: {}\",msg);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 240,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2583,
        "startLineNumber" : 263,
        "startColumnNumber" : 92,
        "endLineNumber" : 309,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (msg instanceof ByteBufConvertible) {\n    if (((ByteBufConvertible)msg).asByteBuf().readableBytes() == 0 && !captureZeroByte) {\n      logger.debug(\"Discarding Zero Byte TCP Packet. isWriteOperation {}\",isWriteOperation);\n      return;\n    }\n    ByteBufAllocator byteBufAllocator=ctx.alloc();\n    ByteBuf packet=((ByteBufConvertible)msg).asByteBuf().duplicate();\n    ByteBuf tcpBuf=byteBufAllocator.buffer();\n    int bytes=packet.readableBytes();\n    try {\n      if (isWriteOperation) {\n        TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n        sendSegmentNumber+=bytes;\n        TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n      }\n else {\n        TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n        receiveSegmentNumber+=bytes;\n        TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n      }\n    }\n  finally {\n      tcpBuf.release();\n    }\n  }\n else {\n    logger.debug(\"Discarding Pcap Write for TCP Object: {}\",msg);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 241,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3136,
        "startLineNumber" : 254,
        "startColumnNumber" : 4,
        "endLineNumber" : 309,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Handle TCP L4\n * @param ctx              {@link ChannelHandlerContext} for {@link ByteBuf} allocation and{@code fireExceptionCaught}\n * @param msg              {@link Object} must be {@link ByteBuf} else it'll be discarded\n * @param isWriteOperation Set {@code true} if we have to process packet when packets are being sent outelse set  {@code false}\n */\nprivate void handleTCP(ChannelHandlerContext ctx,Object msg,boolean isWriteOperation){\n  if (msg instanceof ByteBufConvertible) {\n    if (((ByteBufConvertible)msg).asByteBuf().readableBytes() == 0 && !captureZeroByte) {\n      logger.debug(\"Discarding Zero Byte TCP Packet. isWriteOperation {}\",isWriteOperation);\n      return;\n    }\n    ByteBufAllocator byteBufAllocator=ctx.alloc();\n    ByteBuf packet=((ByteBufConvertible)msg).asByteBuf().duplicate();\n    ByteBuf tcpBuf=byteBufAllocator.buffer();\n    int bytes=packet.readableBytes();\n    try {\n      if (isWriteOperation) {\n        TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n        sendSegmentNumber+=bytes;\n        TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n      }\n else {\n        TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n        receiveSegmentNumber+=bytes;\n        TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n      }\n    }\n  finally {\n      tcpBuf.release();\n    }\n  }\n else {\n    logger.debug(\"Discarding Pcap Write for TCP Object: {}\",msg);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 257,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 294,
        "startColumnNumber" : 20,
        "endLineNumber" : 294,
        "endColumnNumber" : 107
      },
      "nodeContext" : "logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "bytes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 296,
      "startColumnNumber" : 44,
      "endLineNumber" : 296,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 296,
        "startColumnNumber" : 20,
        "endLineNumber" : 296,
        "endColumnNumber" : 49
      },
      "nodeContext" : "receiveSegmentNumber+=bytes",
      "nodeType" : "Assignment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 296,
        "startColumnNumber" : 20,
        "endLineNumber" : 296,
        "endColumnNumber" : 50
      },
      "nodeContext" : "receiveSegmentNumber+=bytes;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 849,
        "startLineNumber" : 290,
        "startColumnNumber" : 23,
        "endLineNumber" : 302,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n  completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n  logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n  receiveSegmentNumber+=bytes;\n  TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n  completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n  logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1721,
        "startLineNumber" : 278,
        "startColumnNumber" : 16,
        "endLineNumber" : 302,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (isWriteOperation) {\n  TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n  completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n  logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n  sendSegmentNumber+=bytes;\n  TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n  completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n  logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n}\n else {\n  TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n  completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n  logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n  receiveSegmentNumber+=bytes;\n  TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n  completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n  logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 160,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1755,
        "startLineNumber" : 277,
        "startColumnNumber" : 16,
        "endLineNumber" : 303,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (isWriteOperation) {\n    TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n    sendSegmentNumber+=bytes;\n    TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n  }\n else {\n    TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n    receiveSegmentNumber+=bytes;\n    TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 161,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1819,
        "startLineNumber" : 277,
        "startColumnNumber" : 12,
        "endLineNumber" : 305,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  if (isWriteOperation) {\n    TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n    sendSegmentNumber+=bytes;\n    TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n  }\n else {\n    TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n    receiveSegmentNumber+=bytes;\n    TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n  }\n}\n  finally {\n  tcpBuf.release();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 167,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2432,
        "startLineNumber" : 264,
        "startColumnNumber" : 47,
        "endLineNumber" : 306,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (((ByteBufConvertible)msg).asByteBuf().readableBytes() == 0 && !captureZeroByte) {\n    logger.debug(\"Discarding Zero Byte TCP Packet. isWriteOperation {}\",isWriteOperation);\n    return;\n  }\n  ByteBufAllocator byteBufAllocator=ctx.alloc();\n  ByteBuf packet=((ByteBufConvertible)msg).asByteBuf().duplicate();\n  ByteBuf tcpBuf=byteBufAllocator.buffer();\n  int bytes=packet.readableBytes();\n  try {\n    if (isWriteOperation) {\n      TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n      sendSegmentNumber+=bytes;\n      TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n    }\n else {\n      TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n      receiveSegmentNumber+=bytes;\n      TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n    }\n  }\n  finally {\n    tcpBuf.release();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 228,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2565,
        "startLineNumber" : 264,
        "startColumnNumber" : 8,
        "endLineNumber" : 308,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (msg instanceof ByteBufConvertible) {\n  if (((ByteBufConvertible)msg).asByteBuf().readableBytes() == 0 && !captureZeroByte) {\n    logger.debug(\"Discarding Zero Byte TCP Packet. isWriteOperation {}\",isWriteOperation);\n    return;\n  }\n  ByteBufAllocator byteBufAllocator=ctx.alloc();\n  ByteBuf packet=((ByteBufConvertible)msg).asByteBuf().duplicate();\n  ByteBuf tcpBuf=byteBufAllocator.buffer();\n  int bytes=packet.readableBytes();\n  try {\n    if (isWriteOperation) {\n      TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n      sendSegmentNumber+=bytes;\n      TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n    }\n else {\n      TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n      receiveSegmentNumber+=bytes;\n      TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n    }\n  }\n  finally {\n    tcpBuf.release();\n  }\n}\n else {\n  logger.debug(\"Discarding Pcap Write for TCP Object: {}\",msg);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 240,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2583,
        "startLineNumber" : 263,
        "startColumnNumber" : 92,
        "endLineNumber" : 309,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (msg instanceof ByteBufConvertible) {\n    if (((ByteBufConvertible)msg).asByteBuf().readableBytes() == 0 && !captureZeroByte) {\n      logger.debug(\"Discarding Zero Byte TCP Packet. isWriteOperation {}\",isWriteOperation);\n      return;\n    }\n    ByteBufAllocator byteBufAllocator=ctx.alloc();\n    ByteBuf packet=((ByteBufConvertible)msg).asByteBuf().duplicate();\n    ByteBuf tcpBuf=byteBufAllocator.buffer();\n    int bytes=packet.readableBytes();\n    try {\n      if (isWriteOperation) {\n        TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n        sendSegmentNumber+=bytes;\n        TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n      }\n else {\n        TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n        receiveSegmentNumber+=bytes;\n        TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n      }\n    }\n  finally {\n      tcpBuf.release();\n    }\n  }\n else {\n    logger.debug(\"Discarding Pcap Write for TCP Object: {}\",msg);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 241,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3136,
        "startLineNumber" : 254,
        "startColumnNumber" : 4,
        "endLineNumber" : 309,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Handle TCP L4\n * @param ctx              {@link ChannelHandlerContext} for {@link ByteBuf} allocation and{@code fireExceptionCaught}\n * @param msg              {@link Object} must be {@link ByteBuf} else it'll be discarded\n * @param isWriteOperation Set {@code true} if we have to process packet when packets are being sent outelse set  {@code false}\n */\nprivate void handleTCP(ChannelHandlerContext ctx,Object msg,boolean isWriteOperation){\n  if (msg instanceof ByteBufConvertible) {\n    if (((ByteBufConvertible)msg).asByteBuf().readableBytes() == 0 && !captureZeroByte) {\n      logger.debug(\"Discarding Zero Byte TCP Packet. isWriteOperation {}\",isWriteOperation);\n      return;\n    }\n    ByteBufAllocator byteBufAllocator=ctx.alloc();\n    ByteBuf packet=((ByteBufConvertible)msg).asByteBuf().duplicate();\n    ByteBuf tcpBuf=byteBufAllocator.buffer();\n    int bytes=packet.readableBytes();\n    try {\n      if (isWriteOperation) {\n        TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n        sendSegmentNumber+=bytes;\n        TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n      }\n else {\n        TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n        receiveSegmentNumber+=bytes;\n        TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n      }\n    }\n  finally {\n      tcpBuf.release();\n    }\n  }\n else {\n    logger.debug(\"Discarding Pcap Write for TCP Object: {}\",msg);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 257,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 296,
        "startColumnNumber" : 20,
        "endLineNumber" : 296,
        "endColumnNumber" : 50
      },
      "nodeContext" : "receiveSegmentNumber+=bytes;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "bytes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 301,
      "startColumnNumber" : 34,
      "endLineNumber" : 301,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 301,
        "startColumnNumber" : 20,
        "endLineNumber" : 301,
        "endColumnNumber" : 105
      },
      "nodeContext" : "logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 301,
        "startColumnNumber" : 20,
        "endLineNumber" : 301,
        "endColumnNumber" : 106
      },
      "nodeContext" : "logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 849,
        "startLineNumber" : 290,
        "startColumnNumber" : 23,
        "endLineNumber" : 302,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n  completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n  logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n  receiveSegmentNumber+=bytes;\n  TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n  completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n  logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1721,
        "startLineNumber" : 278,
        "startColumnNumber" : 16,
        "endLineNumber" : 302,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (isWriteOperation) {\n  TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n  completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n  logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n  sendSegmentNumber+=bytes;\n  TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n  completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n  logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n}\n else {\n  TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n  completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n  logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n  receiveSegmentNumber+=bytes;\n  TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n  completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n  logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 160,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1755,
        "startLineNumber" : 277,
        "startColumnNumber" : 16,
        "endLineNumber" : 303,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (isWriteOperation) {\n    TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n    sendSegmentNumber+=bytes;\n    TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n  }\n else {\n    TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n    receiveSegmentNumber+=bytes;\n    TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 161,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1819,
        "startLineNumber" : 277,
        "startColumnNumber" : 12,
        "endLineNumber" : 305,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  if (isWriteOperation) {\n    TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n    sendSegmentNumber+=bytes;\n    TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n  }\n else {\n    TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n    receiveSegmentNumber+=bytes;\n    TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n    completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n    logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n  }\n}\n  finally {\n  tcpBuf.release();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 167,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2432,
        "startLineNumber" : 264,
        "startColumnNumber" : 47,
        "endLineNumber" : 306,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (((ByteBufConvertible)msg).asByteBuf().readableBytes() == 0 && !captureZeroByte) {\n    logger.debug(\"Discarding Zero Byte TCP Packet. isWriteOperation {}\",isWriteOperation);\n    return;\n  }\n  ByteBufAllocator byteBufAllocator=ctx.alloc();\n  ByteBuf packet=((ByteBufConvertible)msg).asByteBuf().duplicate();\n  ByteBuf tcpBuf=byteBufAllocator.buffer();\n  int bytes=packet.readableBytes();\n  try {\n    if (isWriteOperation) {\n      TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n      sendSegmentNumber+=bytes;\n      TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n    }\n else {\n      TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n      receiveSegmentNumber+=bytes;\n      TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n    }\n  }\n  finally {\n    tcpBuf.release();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 228,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2565,
        "startLineNumber" : 264,
        "startColumnNumber" : 8,
        "endLineNumber" : 308,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (msg instanceof ByteBufConvertible) {\n  if (((ByteBufConvertible)msg).asByteBuf().readableBytes() == 0 && !captureZeroByte) {\n    logger.debug(\"Discarding Zero Byte TCP Packet. isWriteOperation {}\",isWriteOperation);\n    return;\n  }\n  ByteBufAllocator byteBufAllocator=ctx.alloc();\n  ByteBuf packet=((ByteBufConvertible)msg).asByteBuf().duplicate();\n  ByteBuf tcpBuf=byteBufAllocator.buffer();\n  int bytes=packet.readableBytes();\n  try {\n    if (isWriteOperation) {\n      TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n      sendSegmentNumber+=bytes;\n      TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n    }\n else {\n      TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n      receiveSegmentNumber+=bytes;\n      TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n      completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n      logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n    }\n  }\n  finally {\n    tcpBuf.release();\n  }\n}\n else {\n  logger.debug(\"Discarding Pcap Write for TCP Object: {}\",msg);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 240,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2583,
        "startLineNumber" : 263,
        "startColumnNumber" : 92,
        "endLineNumber" : 309,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (msg instanceof ByteBufConvertible) {\n    if (((ByteBufConvertible)msg).asByteBuf().readableBytes() == 0 && !captureZeroByte) {\n      logger.debug(\"Discarding Zero Byte TCP Packet. isWriteOperation {}\",isWriteOperation);\n      return;\n    }\n    ByteBufAllocator byteBufAllocator=ctx.alloc();\n    ByteBuf packet=((ByteBufConvertible)msg).asByteBuf().duplicate();\n    ByteBuf tcpBuf=byteBufAllocator.buffer();\n    int bytes=packet.readableBytes();\n    try {\n      if (isWriteOperation) {\n        TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n        sendSegmentNumber+=bytes;\n        TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n      }\n else {\n        TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n        receiveSegmentNumber+=bytes;\n        TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n      }\n    }\n  finally {\n      tcpBuf.release();\n    }\n  }\n else {\n    logger.debug(\"Discarding Pcap Write for TCP Object: {}\",msg);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 241,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3136,
        "startLineNumber" : 254,
        "startColumnNumber" : 4,
        "endLineNumber" : 309,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Handle TCP L4\n * @param ctx              {@link ChannelHandlerContext} for {@link ByteBuf} allocation and{@code fireExceptionCaught}\n * @param msg              {@link Object} must be {@link ByteBuf} else it'll be discarded\n * @param isWriteOperation Set {@code true} if we have to process packet when packets are being sent outelse set  {@code false}\n */\nprivate void handleTCP(ChannelHandlerContext ctx,Object msg,boolean isWriteOperation){\n  if (msg instanceof ByteBufConvertible) {\n    if (((ByteBufConvertible)msg).asByteBuf().readableBytes() == 0 && !captureZeroByte) {\n      logger.debug(\"Discarding Zero Byte TCP Packet. isWriteOperation {}\",isWriteOperation);\n      return;\n    }\n    ByteBufAllocator byteBufAllocator=ctx.alloc();\n    ByteBuf packet=((ByteBufConvertible)msg).asByteBuf().duplicate();\n    ByteBuf tcpBuf=byteBufAllocator.buffer();\n    int bytes=packet.readableBytes();\n    try {\n      if (isWriteOperation) {\n        TCPPacket.writePacket(tcpBuf,packet,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,false);\n        sendSegmentNumber+=bytes;\n        TCPPacket.writePacket(tcpBuf,null,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(true,bytes,sendSegmentNumber,receiveSegmentNumber,dstAddr,srcAddr,true);\n      }\n else {\n        TCPPacket.writePacket(tcpBuf,packet,receiveSegmentNumber,sendSegmentNumber,dstAddr.getPort(),srcAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(dstAddr,srcAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(false,bytes,receiveSegmentNumber,sendSegmentNumber,dstAddr,srcAddr,false);\n        receiveSegmentNumber+=bytes;\n        TCPPacket.writePacket(tcpBuf,null,sendSegmentNumber,receiveSegmentNumber,srcAddr.getPort(),dstAddr.getPort(),TCPPacket.TCPFlag.ACK);\n        completeTCPWrite(srcAddr,dstAddr,tcpBuf,byteBufAllocator,ctx);\n        logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n      }\n    }\n  finally {\n      tcpBuf.release();\n    }\n  }\n else {\n    logger.debug(\"Discarding Pcap Write for TCP Object: {}\",msg);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 257,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 301,
        "startColumnNumber" : 20,
        "endLineNumber" : 301,
        "endColumnNumber" : 106
      },
      "nodeContext" : "logTCP(false,bytes,sendSegmentNumber,receiveSegmentNumber,srcAddr,dstAddr,true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 282,
    "startColumnNumber" : 33,
    "endLineNumber" : 282,
    "endColumnNumber" : 38
  }, {
    "charLength" : 5,
    "startLineNumber" : 284,
    "startColumnNumber" : 41,
    "endLineNumber" : 284,
    "endColumnNumber" : 46
  }, {
    "charLength" : 5,
    "startLineNumber" : 289,
    "startColumnNumber" : 33,
    "endLineNumber" : 289,
    "endColumnNumber" : 38
  }, {
    "charLength" : 5,
    "startLineNumber" : 294,
    "startColumnNumber" : 34,
    "endLineNumber" : 294,
    "endColumnNumber" : 39
  }, {
    "charLength" : 5,
    "startLineNumber" : 296,
    "startColumnNumber" : 44,
    "endLineNumber" : 296,
    "endColumnNumber" : 49
  }, {
    "charLength" : 5,
    "startLineNumber" : 301,
    "startColumnNumber" : 34,
    "endLineNumber" : 301,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 2
  } ]
}