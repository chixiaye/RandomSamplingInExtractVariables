{
  "id" : 307,
  "expression" : "remoteSocketAddress",
  "projectName" : "apache@zookeeper",
  "commitID" : "c6639c9842973a7954c8baa412d6825cb833d51f",
  "filePath" : "/zookeeper-server/src/test/java/org/apache/zookeeper/audit/Slf4JAuditLoggerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "remoteSocketAddress",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 301,
      "startColumnNumber" : 30,
      "endLineNumber" : 301,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 301,
        "startColumnNumber" : 30,
        "endLineNumber" : 301,
        "endColumnNumber" : 62
      },
      "nodeContext" : "remoteSocketAddress.getAddress()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 301,
        "startColumnNumber" : 20,
        "endLineNumber" : 301,
        "endColumnNumber" : 62
      },
      "nodeContext" : "address=remoteSocketAddress.getAddress()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 301,
        "startColumnNumber" : 8,
        "endLineNumber" : 301,
        "endColumnNumber" : 63
      },
      "nodeContext" : "InetAddress address=remoteSocketAddress.getAddress();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 239,
        "startLineNumber" : 298,
        "startColumnNumber" : 27,
        "endLineNumber" : 303,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ServerCnxn next=getServerCnxn();\n  InetSocketAddress remoteSocketAddress=next.getRemoteSocketAddress();\n  InetAddress address=remoteSocketAddress.getAddress();\n  return address.getHostAddress();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 262,
        "startLineNumber" : 298,
        "startColumnNumber" : 4,
        "endLineNumber" : 303,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private String getIp(){\n  ServerCnxn next=getServerCnxn();\n  InetSocketAddress remoteSocketAddress=next.getRemoteSocketAddress();\n  InetAddress address=remoteSocketAddress.getAddress();\n  return address.getHostAddress();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 33,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 301,
        "startColumnNumber" : 8,
        "endLineNumber" : 301,
        "endColumnNumber" : 63
      },
      "nodeContext" : "InetAddress address=remoteSocketAddress.getAddress();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.net.InetSocketAddress"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 301,
    "startColumnNumber" : 30,
    "endLineNumber" : 301,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ ]
}