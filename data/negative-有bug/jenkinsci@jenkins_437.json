{
  "id" : 437,
  "expression" : "request",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/core/src/main/java/jenkins/security/SuspiciousRequestFilter.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "request",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 28,
      "startColumnNumber" : 62,
      "endLineNumber" : 28,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 28,
        "startColumnNumber" : 41,
        "endLineNumber" : 28,
        "endColumnNumber" : 69
      },
      "nodeContext" : "(HttpServletRequest)request",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 28,
        "startColumnNumber" : 27,
        "endLineNumber" : 28,
        "endColumnNumber" : 69
      },
      "nodeContext" : "httpRequest=(HttpServletRequest)request",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 70
      },
      "nodeContext" : "HttpServletRequest httpRequest=(HttpServletRequest)request;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 825,
        "startLineNumber" : 27,
        "startColumnNumber" : 131,
        "endLineNumber" : 38,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HttpServletRequest httpRequest=(HttpServletRequest)request;\n  HttpServletResponse httpResponse=(HttpServletResponse)response;\n  if (!allowSemicolonsInPath && httpRequest.getRequestURI().contains(\";\")) {\n    LOGGER.warning(() -> \"Denying HTTP \" + httpRequest.getMethod() + \" to \"+ httpRequest.getRequestURI()+ \" as it has an illegal semicolon in the path. This behavior can be overridden by setting the system property \"+ ALLOW_SEMICOLONS_IN_PATH+ \" to true. For more information, see https://jenkins.io/redirect/semicolons-in-urls\");\n    httpResponse.sendError(HttpServletResponse.SC_BAD_REQUEST,\"Semicolons are not allowed in the request URI\");\n  }\n else {\n    chain.doFilter(request,response);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 967,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 38,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void doFilter(ServletRequest request,ServletResponse response,FilterChain chain) throws IOException, ServletException {\n  HttpServletRequest httpRequest=(HttpServletRequest)request;\n  HttpServletResponse httpResponse=(HttpServletResponse)response;\n  if (!allowSemicolonsInPath && httpRequest.getRequestURI().contains(\";\")) {\n    LOGGER.warning(() -> \"Denying HTTP \" + httpRequest.getMethod() + \" to \"+ httpRequest.getRequestURI()+ \" as it has an illegal semicolon in the path. This behavior can be overridden by setting the system property \"+ ALLOW_SEMICOLONS_IN_PATH+ \" to true. For more information, see https://jenkins.io/redirect/semicolons-in-urls\");\n    httpResponse.sendError(HttpServletResponse.SC_BAD_REQUEST,\"Semicolons are not allowed in the request URI\");\n  }\n else {\n    chain.doFilter(request,response);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 84,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 70
      },
      "nodeContext" : "HttpServletRequest httpRequest=(HttpServletRequest)request;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "jenkins.security.ServletRequest"
  }, {
    "nodeContext" : "request",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 36,
      "startColumnNumber" : 27,
      "endLineNumber" : 36,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 36,
        "startColumnNumber" : 12,
        "endLineNumber" : 36,
        "endColumnNumber" : 45
      },
      "nodeContext" : "chain.doFilter(request,response)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 36,
        "startColumnNumber" : 12,
        "endLineNumber" : 36,
        "endColumnNumber" : 46
      },
      "nodeContext" : "chain.doFilter(request,response);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 35,
        "startColumnNumber" : 15,
        "endLineNumber" : 37,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  chain.doFilter(request,response);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 659,
        "startLineNumber" : 30,
        "startColumnNumber" : 8,
        "endLineNumber" : 37,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!allowSemicolonsInPath && httpRequest.getRequestURI().contains(\";\")) {\n  LOGGER.warning(() -> \"Denying HTTP \" + httpRequest.getMethod() + \" to \"+ httpRequest.getRequestURI()+ \" as it has an illegal semicolon in the path. This behavior can be overridden by setting the system property \"+ ALLOW_SEMICOLONS_IN_PATH+ \" to true. For more information, see https://jenkins.io/redirect/semicolons-in-urls\");\n  httpResponse.sendError(HttpServletResponse.SC_BAD_REQUEST,\"Semicolons are not allowed in the request URI\");\n}\n else {\n  chain.doFilter(request,response);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 43,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 825,
        "startLineNumber" : 27,
        "startColumnNumber" : 131,
        "endLineNumber" : 38,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HttpServletRequest httpRequest=(HttpServletRequest)request;\n  HttpServletResponse httpResponse=(HttpServletResponse)response;\n  if (!allowSemicolonsInPath && httpRequest.getRequestURI().contains(\";\")) {\n    LOGGER.warning(() -> \"Denying HTTP \" + httpRequest.getMethod() + \" to \"+ httpRequest.getRequestURI()+ \" as it has an illegal semicolon in the path. This behavior can be overridden by setting the system property \"+ ALLOW_SEMICOLONS_IN_PATH+ \" to true. For more information, see https://jenkins.io/redirect/semicolons-in-urls\");\n    httpResponse.sendError(HttpServletResponse.SC_BAD_REQUEST,\"Semicolons are not allowed in the request URI\");\n  }\n else {\n    chain.doFilter(request,response);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 967,
        "startLineNumber" : 26,
        "startColumnNumber" : 4,
        "endLineNumber" : 38,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void doFilter(ServletRequest request,ServletResponse response,FilterChain chain) throws IOException, ServletException {\n  HttpServletRequest httpRequest=(HttpServletRequest)request;\n  HttpServletResponse httpResponse=(HttpServletResponse)response;\n  if (!allowSemicolonsInPath && httpRequest.getRequestURI().contains(\";\")) {\n    LOGGER.warning(() -> \"Denying HTTP \" + httpRequest.getMethod() + \" to \"+ httpRequest.getRequestURI()+ \" as it has an illegal semicolon in the path. This behavior can be overridden by setting the system property \"+ ALLOW_SEMICOLONS_IN_PATH+ \" to true. For more information, see https://jenkins.io/redirect/semicolons-in-urls\");\n    httpResponse.sendError(HttpServletResponse.SC_BAD_REQUEST,\"Semicolons are not allowed in the request URI\");\n  }\n else {\n    chain.doFilter(request,response);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 84,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 36,
        "startColumnNumber" : 12,
        "endLineNumber" : 36,
        "endColumnNumber" : 46
      },
      "nodeContext" : "chain.doFilter(request,response);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "jenkins.security.ServletRequest"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 28,
    "startColumnNumber" : 62,
    "endLineNumber" : 28,
    "endColumnNumber" : 69
  }, {
    "charLength" : 7,
    "startLineNumber" : 36,
    "startColumnNumber" : 27,
    "endLineNumber" : 36,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}