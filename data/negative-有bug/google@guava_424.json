{
  "id" : 424,
  "expression" : "!stack.isEmpty()",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava/src/com/google/common/io/Closer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "!stack.isEmpty()",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 215,
      "startColumnNumber" : 11,
      "endLineNumber" : 215,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 310,
        "startLineNumber" : 215,
        "startColumnNumber" : 4,
        "endLineNumber" : 226,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (!stack.isEmpty()) {\n  Closeable closeable=stack.removeFirst();\n  try {\n    closeable.close();\n  }\n catch (  Throwable e) {\n    if (throwable == null) {\n      throwable=e;\n    }\n else {\n      suppressor.suppress(closeable,throwable,e);\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 43,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 584,
        "startLineNumber" : 211,
        "startColumnNumber" : 41,
        "endLineNumber" : 232,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Throwable throwable=thrown;\n  while (!stack.isEmpty()) {\n    Closeable closeable=stack.removeFirst();\n    try {\n      closeable.close();\n    }\n catch (    Throwable e) {\n      if (throwable == null) {\n        throwable=e;\n      }\n else {\n        suppressor.suppress(closeable,throwable,e);\n      }\n    }\n  }\n  if (thrown == null && throwable != null) {\n    Throwables.propagateIfPossible(throwable,IOException.class);\n    throw new AssertionError(throwable);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1125,
        "startLineNumber" : 203,
        "startColumnNumber" : 2,
        "endLineNumber" : 232,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Closes all  {@code Closeable} instances that have been added to this {@code Closer}. If an exception was thrown in the try block and passed to one of the  {@code exceptionThrown} methods,any exceptions thrown when attempting to close a closeable will be suppressed. Otherwise, the <i>first</i> exception to be thrown from an attempt to close a closeable will be thrown and any additional exceptions that are thrown after that will be suppressed.\n */\n@Override public void close() throws IOException {\n  Throwable throwable=thrown;\n  while (!stack.isEmpty()) {\n    Closeable closeable=stack.removeFirst();\n    try {\n      closeable.close();\n    }\n catch (    Throwable e) {\n      if (throwable == null) {\n        throwable=e;\n      }\n else {\n        suppressor.suppress(closeable,throwable,e);\n      }\n    }\n  }\n  if (thrown == null && throwable != null) {\n    Throwables.propagateIfPossible(throwable,IOException.class);\n    throw new AssertionError(throwable);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 81,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 310,
        "startLineNumber" : 215,
        "startColumnNumber" : 4,
        "endLineNumber" : 226,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (!stack.isEmpty()) {\n  Closeable closeable=stack.removeFirst();\n  try {\n    closeable.close();\n  }\n catch (  Throwable e) {\n    if (throwable == null) {\n      throwable=e;\n    }\n else {\n      suppressor.suppress(closeable,throwable,e);\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 43,
      "astHeight" : 10
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 215,
    "startColumnNumber" : 11,
    "endLineNumber" : 215,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ ]
}