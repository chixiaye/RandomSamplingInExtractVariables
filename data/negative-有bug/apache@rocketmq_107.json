{
  "id" : 107,
  "expression" : "UtilAll",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/common/src/main/java/org/apache/rocketmq/common/stats/StatsItemSet.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "UtilAll",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 84,
      "startColumnNumber" : 20,
      "endLineNumber" : 84,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 84,
        "startColumnNumber" : 20,
        "endLineNumber" : 84,
        "endColumnNumber" : 57
      },
      "nodeContext" : "UtilAll.computNextMinutesTimeMillis()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 84,
        "startColumnNumber" : 20,
        "endLineNumber" : 84,
        "endColumnNumber" : 86
      },
      "nodeContext" : "UtilAll.computNextMinutesTimeMillis() - System.currentTimeMillis()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 84,
        "startColumnNumber" : 11,
        "endLineNumber" : 84,
        "endColumnNumber" : 87
      },
      "nodeContext" : "Math.abs(UtilAll.computNextMinutesTimeMillis() - System.currentTimeMillis())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 381,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 122
      },
      "nodeContext" : "this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n  @Override public void run(){\n    try {\n      printAtMinutes();\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n,Math.abs(UtilAll.computNextMinutesTimeMillis() - System.currentTimeMillis()),1000 * 60,TimeUnit.MILLISECONDS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 43,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 382,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 123
      },
      "nodeContext" : "this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n  @Override public void run(){\n    try {\n      printAtMinutes();\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n,Math.abs(UtilAll.computNextMinutesTimeMillis() - System.currentTimeMillis()),1000 * 60,TimeUnit.MILLISECONDS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 44,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2106,
        "startLineNumber" : 44,
        "startColumnNumber" : 23,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        samplingInSeconds();\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n,0,10,TimeUnit.SECONDS);\n  this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        samplingInMinutes();\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n,0,10,TimeUnit.MINUTES);\n  this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        samplingInHour();\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n,0,1,TimeUnit.HOURS);\n  this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        printAtMinutes();\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n,Math.abs(UtilAll.computNextMinutesTimeMillis() - System.currentTimeMillis()),1000 * 60,TimeUnit.MILLISECONDS);\n  this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        printAtHour();\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n,Math.abs(UtilAll.computNextHourTimeMillis() - System.currentTimeMillis()),1000 * 60 * 60,TimeUnit.MILLISECONDS);\n  this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        printAtDay();\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n,Math.abs(UtilAll.computNextMorningTimeMillis() - System.currentTimeMillis()),1000 * 60 * 60* 24,TimeUnit.MILLISECONDS);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 235,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2125,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void init(){\n  this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        samplingInSeconds();\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n,0,10,TimeUnit.SECONDS);\n  this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        samplingInMinutes();\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n,0,10,TimeUnit.MINUTES);\n  this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        samplingInHour();\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n,0,1,TimeUnit.HOURS);\n  this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        printAtMinutes();\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n,Math.abs(UtilAll.computNextMinutesTimeMillis() - System.currentTimeMillis()),1000 * 60,TimeUnit.MILLISECONDS);\n  this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        printAtHour();\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n,Math.abs(UtilAll.computNextHourTimeMillis() - System.currentTimeMillis()),1000 * 60 * 60,TimeUnit.MILLISECONDS);\n  this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        printAtDay();\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n,Math.abs(UtilAll.computNextMorningTimeMillis() - System.currentTimeMillis()),1000 * 60 * 60* 24,TimeUnit.MILLISECONDS);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 239,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 84,
        "startColumnNumber" : 11,
        "endLineNumber" : 84,
        "endColumnNumber" : 87
      },
      "nodeContext" : "Math.abs(UtilAll.computNextMinutesTimeMillis() - System.currentTimeMillis())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.rocketmq.common.UtilAll"
  }, {
    "nodeContext" : "UtilAll",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 94,
      "startColumnNumber" : 20,
      "endLineNumber" : 94,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 94,
        "startColumnNumber" : 20,
        "endLineNumber" : 94,
        "endColumnNumber" : 54
      },
      "nodeContext" : "UtilAll.computNextHourTimeMillis()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 94,
        "startColumnNumber" : 20,
        "endLineNumber" : 94,
        "endColumnNumber" : 83
      },
      "nodeContext" : "UtilAll.computNextHourTimeMillis() - System.currentTimeMillis()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 94,
        "startColumnNumber" : 11,
        "endLineNumber" : 94,
        "endColumnNumber" : 84
      },
      "nodeContext" : "Math.abs(UtilAll.computNextHourTimeMillis() - System.currentTimeMillis())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 380,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 124
      },
      "nodeContext" : "this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n  @Override public void run(){\n    try {\n      printAtHour();\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n,Math.abs(UtilAll.computNextHourTimeMillis() - System.currentTimeMillis()),1000 * 60 * 60,TimeUnit.MILLISECONDS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 44,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 381,
        "startLineNumber" : 86,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 125
      },
      "nodeContext" : "this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n  @Override public void run(){\n    try {\n      printAtHour();\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n,Math.abs(UtilAll.computNextHourTimeMillis() - System.currentTimeMillis()),1000 * 60 * 60,TimeUnit.MILLISECONDS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 45,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2106,
        "startLineNumber" : 44,
        "startColumnNumber" : 23,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        samplingInSeconds();\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n,0,10,TimeUnit.SECONDS);\n  this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        samplingInMinutes();\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n,0,10,TimeUnit.MINUTES);\n  this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        samplingInHour();\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n,0,1,TimeUnit.HOURS);\n  this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        printAtMinutes();\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n,Math.abs(UtilAll.computNextMinutesTimeMillis() - System.currentTimeMillis()),1000 * 60,TimeUnit.MILLISECONDS);\n  this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        printAtHour();\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n,Math.abs(UtilAll.computNextHourTimeMillis() - System.currentTimeMillis()),1000 * 60 * 60,TimeUnit.MILLISECONDS);\n  this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        printAtDay();\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n,Math.abs(UtilAll.computNextMorningTimeMillis() - System.currentTimeMillis()),1000 * 60 * 60* 24,TimeUnit.MILLISECONDS);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 235,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2125,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void init(){\n  this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        samplingInSeconds();\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n,0,10,TimeUnit.SECONDS);\n  this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        samplingInMinutes();\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n,0,10,TimeUnit.MINUTES);\n  this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        samplingInHour();\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n,0,1,TimeUnit.HOURS);\n  this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        printAtMinutes();\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n,Math.abs(UtilAll.computNextMinutesTimeMillis() - System.currentTimeMillis()),1000 * 60,TimeUnit.MILLISECONDS);\n  this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        printAtHour();\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n,Math.abs(UtilAll.computNextHourTimeMillis() - System.currentTimeMillis()),1000 * 60 * 60,TimeUnit.MILLISECONDS);\n  this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        printAtDay();\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n,Math.abs(UtilAll.computNextMorningTimeMillis() - System.currentTimeMillis()),1000 * 60 * 60* 24,TimeUnit.MILLISECONDS);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 239,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 94,
        "startColumnNumber" : 11,
        "endLineNumber" : 94,
        "endColumnNumber" : 84
      },
      "nodeContext" : "Math.abs(UtilAll.computNextHourTimeMillis() - System.currentTimeMillis())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.rocketmq.common.UtilAll"
  }, {
    "nodeContext" : "UtilAll",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 104,
      "startColumnNumber" : 20,
      "endLineNumber" : 104,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 104,
        "startColumnNumber" : 20,
        "endLineNumber" : 104,
        "endColumnNumber" : 57
      },
      "nodeContext" : "UtilAll.computNextMorningTimeMillis()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 104,
        "startColumnNumber" : 20,
        "endLineNumber" : 104,
        "endColumnNumber" : 86
      },
      "nodeContext" : "UtilAll.computNextMorningTimeMillis() - System.currentTimeMillis()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 104,
        "startColumnNumber" : 11,
        "endLineNumber" : 104,
        "endColumnNumber" : 87
      },
      "nodeContext" : "Math.abs(UtilAll.computNextMorningTimeMillis() - System.currentTimeMillis())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 387,
        "startLineNumber" : 96,
        "startColumnNumber" : 8,
        "endLineNumber" : 104,
        "endColumnNumber" : 132
      },
      "nodeContext" : "this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n  @Override public void run(){\n    try {\n      printAtDay();\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n,Math.abs(UtilAll.computNextMorningTimeMillis() - System.currentTimeMillis()),1000 * 60 * 60* 24,TimeUnit.MILLISECONDS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 45,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 388,
        "startLineNumber" : 96,
        "startColumnNumber" : 8,
        "endLineNumber" : 104,
        "endColumnNumber" : 133
      },
      "nodeContext" : "this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n  @Override public void run(){\n    try {\n      printAtDay();\n    }\n catch (    Throwable ignored) {\n    }\n  }\n}\n,Math.abs(UtilAll.computNextMorningTimeMillis() - System.currentTimeMillis()),1000 * 60 * 60* 24,TimeUnit.MILLISECONDS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 46,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2106,
        "startLineNumber" : 44,
        "startColumnNumber" : 23,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        samplingInSeconds();\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n,0,10,TimeUnit.SECONDS);\n  this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        samplingInMinutes();\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n,0,10,TimeUnit.MINUTES);\n  this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        samplingInHour();\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n,0,1,TimeUnit.HOURS);\n  this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        printAtMinutes();\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n,Math.abs(UtilAll.computNextMinutesTimeMillis() - System.currentTimeMillis()),1000 * 60,TimeUnit.MILLISECONDS);\n  this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        printAtHour();\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n,Math.abs(UtilAll.computNextHourTimeMillis() - System.currentTimeMillis()),1000 * 60 * 60,TimeUnit.MILLISECONDS);\n  this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        printAtDay();\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n,Math.abs(UtilAll.computNextMorningTimeMillis() - System.currentTimeMillis()),1000 * 60 * 60* 24,TimeUnit.MILLISECONDS);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 235,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2125,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void init(){\n  this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        samplingInSeconds();\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n,0,10,TimeUnit.SECONDS);\n  this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        samplingInMinutes();\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n,0,10,TimeUnit.MINUTES);\n  this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        samplingInHour();\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n,0,1,TimeUnit.HOURS);\n  this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        printAtMinutes();\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n,Math.abs(UtilAll.computNextMinutesTimeMillis() - System.currentTimeMillis()),1000 * 60,TimeUnit.MILLISECONDS);\n  this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        printAtHour();\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n,Math.abs(UtilAll.computNextHourTimeMillis() - System.currentTimeMillis()),1000 * 60 * 60,TimeUnit.MILLISECONDS);\n  this.scheduledExecutorService.scheduleAtFixedRate(new Runnable(){\n    @Override public void run(){\n      try {\n        printAtDay();\n      }\n catch (      Throwable ignored) {\n      }\n    }\n  }\n,Math.abs(UtilAll.computNextMorningTimeMillis() - System.currentTimeMillis()),1000 * 60 * 60* 24,TimeUnit.MILLISECONDS);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 239,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 104,
        "startColumnNumber" : 11,
        "endLineNumber" : 104,
        "endColumnNumber" : 87
      },
      "nodeContext" : "Math.abs(UtilAll.computNextMorningTimeMillis() - System.currentTimeMillis())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.rocketmq.common.UtilAll"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 84,
    "startColumnNumber" : 20,
    "endLineNumber" : 84,
    "endColumnNumber" : 27
  }, {
    "charLength" : 7,
    "startLineNumber" : 94,
    "startColumnNumber" : 20,
    "endLineNumber" : 94,
    "endColumnNumber" : 27
  }, {
    "charLength" : 7,
    "startLineNumber" : 104,
    "startColumnNumber" : 20,
    "endLineNumber" : 104,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  } ]
}