{
  "id" : 243,
  "expression" : "disposeEagerly",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/observable/ObservableUsingTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "disposeEagerly",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 88,
      "startColumnNumber" : 37,
      "endLineNumber" : 88,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 87,
        "startColumnNumber" : 31,
        "endLineNumber" : 88,
        "endColumnNumber" : 52
      },
      "nodeContext" : "Observable.using(resourceFactory,observableFactory,new DisposeAction(),disposeEagerly)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 87,
        "startColumnNumber" : 27,
        "endLineNumber" : 88,
        "endColumnNumber" : 52
      },
      "nodeContext" : "o=Observable.using(resourceFactory,observableFactory,new DisposeAction(),disposeEagerly)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 88,
        "endColumnNumber" : 53
      },
      "nodeContext" : "Observable<String> o=Observable.using(resourceFactory,observableFactory,new DisposeAction(),disposeEagerly);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1267,
        "startLineNumber" : 67,
        "startColumnNumber" : 58,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Resource resource=mock(Resource.class);\n  when(resource.getTextFromWeb()).thenReturn(\"Hello world!\");\n  Supplier<Resource> resourceFactory=new Supplier<Resource>(){\n    @Override public Resource get(){\n      return resource;\n    }\n  }\n;\n  Function<Resource,Observable<String>> observableFactory=new Function<Resource,Observable<String>>(){\n    @Override public Observable<String> apply(    Resource res){\n      return Observable.fromArray(res.getTextFromWeb().split(\" \"));\n    }\n  }\n;\n  Observer<String> NbpObserver=TestHelper.mockObserver();\n  Observable<String> o=Observable.using(resourceFactory,observableFactory,new DisposeAction(),disposeEagerly);\n  o.subscribe(NbpObserver);\n  InOrder inOrder=inOrder(NbpObserver);\n  inOrder.verify(NbpObserver,times(1)).onNext(\"Hello\");\n  inOrder.verify(NbpObserver,times(1)).onNext(\"world!\");\n  inOrder.verify(NbpObserver,times(1)).onComplete();\n  inOrder.verifyNoMoreInteractions();\n  verify(resource,times(1)).dispose();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 182,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1321,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 99,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void performTestUsing(boolean disposeEagerly){\n  final Resource resource=mock(Resource.class);\n  when(resource.getTextFromWeb()).thenReturn(\"Hello world!\");\n  Supplier<Resource> resourceFactory=new Supplier<Resource>(){\n    @Override public Resource get(){\n      return resource;\n    }\n  }\n;\n  Function<Resource,Observable<String>> observableFactory=new Function<Resource,Observable<String>>(){\n    @Override public Observable<String> apply(    Resource res){\n      return Observable.fromArray(res.getTextFromWeb().split(\" \"));\n    }\n  }\n;\n  Observer<String> NbpObserver=TestHelper.mockObserver();\n  Observable<String> o=Observable.using(resourceFactory,observableFactory,new DisposeAction(),disposeEagerly);\n  o.subscribe(NbpObserver);\n  InOrder inOrder=inOrder(NbpObserver);\n  inOrder.verify(NbpObserver,times(1)).onNext(\"Hello\");\n  inOrder.verify(NbpObserver,times(1)).onNext(\"world!\");\n  inOrder.verify(NbpObserver,times(1)).onComplete();\n  inOrder.verifyNoMoreInteractions();\n  verify(resource,times(1)).dispose();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 189,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 87,
        "startColumnNumber" : 31,
        "endLineNumber" : 88,
        "endColumnNumber" : 52
      },
      "nodeContext" : "Observable.using(resourceFactory,observableFactory,new DisposeAction(),disposeEagerly)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 88,
    "startColumnNumber" : 37,
    "endLineNumber" : 88,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ ]
}