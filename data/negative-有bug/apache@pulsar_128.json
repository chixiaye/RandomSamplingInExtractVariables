{
  "id" : 128,
  "expression" : "new CompletableFuture<>()",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-broker/src/main/java/org/apache/pulsar/broker/service/Producer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new CompletableFuture<>()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 105,
      "startColumnNumber" : 27,
      "endLineNumber" : 105,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 4,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 105,
        "startColumnNumber" : 8,
        "endLineNumber" : 105,
        "endColumnNumber" : 52
      },
      "nodeContext" : "this.closeFuture=new CompletableFuture<>()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 105,
        "startColumnNumber" : 8,
        "endLineNumber" : 105,
        "endColumnNumber" : 53
      },
      "nodeContext" : "this.closeFuture=new CompletableFuture<>();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1769,
        "startLineNumber" : 98,
        "startColumnNumber" : 39,
        "endLineNumber" : 137,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.topic=topic;\n  this.cnx=cnx;\n  this.producerId=producerId;\n  this.producerName=checkNotNull(producerName);\n  this.userProvidedProducerName=userProvidedProducerName;\n  this.epoch=epoch;\n  this.closeFuture=new CompletableFuture<>();\n  this.appId=appId;\n  this.msgIn=new Rate();\n  this.chunkedMessageRate=new Rate();\n  this.isNonPersistentTopic=topic instanceof NonPersistentTopic;\n  this.msgDrop=this.isNonPersistentTopic ? new Rate() : null;\n  this.metadata=metadata != null ? metadata : Collections.emptyMap();\n  this.stats=isNonPersistentTopic ? new NonPersistentPublisherStatsImpl() : new PublisherStatsImpl();\n  if (cnx.hasHAProxyMessage()) {\n    stats.setAddress(cnx.getHAProxyMessage().sourceAddress() + \":\" + cnx.getHAProxyMessage().sourcePort());\n  }\n else {\n    stats.setAddress(cnx.clientAddress().toString());\n  }\n  stats.setConnectedSince(DateFormatter.now());\n  stats.setClientVersion(cnx.getClientVersion());\n  stats.setProducerName(producerName);\n  stats.producerId=producerId;\n  stats.metadata=this.metadata;\n  stats.accessMode=Commands.convertProducerAccessMode(accessMode);\n  this.isRemote=producerName.startsWith(cnx.getBrokerService().pulsar().getConfiguration().getReplicatorPrefix());\n  this.remoteCluster=isRemote ? producerName.split(\"\\\\.\")[2].split(REPL_PRODUCER_NAME_DELIMITER)[0] : null;\n  this.isEncrypted=isEncrypted;\n  this.schemaVersion=schemaVersion;\n  this.accessMode=accessMode;\n  this.topicEpoch=topicEpoch;\n  this.clientAddress=cnx.clientSourceAddress();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 259,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2100,
        "startLineNumber" : 94,
        "startColumnNumber" : 4,
        "endLineNumber" : 137,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public Producer(Topic topic,TransportCnx cnx,long producerId,String producerName,String appId,boolean isEncrypted,Map<String,String> metadata,SchemaVersion schemaVersion,long epoch,boolean userProvidedProducerName,ProducerAccessMode accessMode,Optional<Long> topicEpoch){\n  this.topic=topic;\n  this.cnx=cnx;\n  this.producerId=producerId;\n  this.producerName=checkNotNull(producerName);\n  this.userProvidedProducerName=userProvidedProducerName;\n  this.epoch=epoch;\n  this.closeFuture=new CompletableFuture<>();\n  this.appId=appId;\n  this.msgIn=new Rate();\n  this.chunkedMessageRate=new Rate();\n  this.isNonPersistentTopic=topic instanceof NonPersistentTopic;\n  this.msgDrop=this.isNonPersistentTopic ? new Rate() : null;\n  this.metadata=metadata != null ? metadata : Collections.emptyMap();\n  this.stats=isNonPersistentTopic ? new NonPersistentPublisherStatsImpl() : new PublisherStatsImpl();\n  if (cnx.hasHAProxyMessage()) {\n    stats.setAddress(cnx.getHAProxyMessage().sourceAddress() + \":\" + cnx.getHAProxyMessage().sourcePort());\n  }\n else {\n    stats.setAddress(cnx.clientAddress().toString());\n  }\n  stats.setConnectedSince(DateFormatter.now());\n  stats.setClientVersion(cnx.getClientVersion());\n  stats.setProducerName(producerName);\n  stats.producerId=producerId;\n  stats.metadata=this.metadata;\n  stats.accessMode=Commands.convertProducerAccessMode(accessMode);\n  this.isRemote=producerName.startsWith(cnx.getBrokerService().pulsar().getConfiguration().getReplicatorPrefix());\n  this.remoteCluster=isRemote ? producerName.split(\"\\\\.\")[2].split(REPL_PRODUCER_NAME_DELIMITER)[0] : null;\n  this.isEncrypted=isEncrypted;\n  this.schemaVersion=schemaVersion;\n  this.accessMode=accessMode;\n  this.topicEpoch=topicEpoch;\n  this.clientAddress=cnx.clientSourceAddress();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 314,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 105,
        "startColumnNumber" : 8,
        "endLineNumber" : 105,
        "endColumnNumber" : 53
      },
      "nodeContext" : "this.closeFuture=new CompletableFuture<>();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.concurrent.CompletableFuture<java.lang.Void>"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 105,
    "startColumnNumber" : 27,
    "endLineNumber" : 105,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}