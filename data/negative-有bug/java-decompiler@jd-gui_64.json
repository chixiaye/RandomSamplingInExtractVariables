{
  "id" : 64,
  "expression" : "\"Ltest/Test;\"",
  "projectName" : "java-decompiler@jd-gui",
  "commitID" : "fbc5b14d66b37b88bf1dc18386b530e874550240",
  "filePath" : "/services/src/test/java/org/jd/gui/util/matcher/DescriptorMatcherTest.java",
  "occurrences" : 10,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Ltest/Test;\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 14,
      "startColumnNumber" : 66,
      "endLineNumber" : 14,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 14,
        "startColumnNumber" : 26,
        "endLineNumber" : 14,
        "endColumnNumber" : 95
      },
      "nodeContext" : "DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 14,
        "startColumnNumber" : 8,
        "endLineNumber" : 14,
        "endColumnNumber" : 96
      },
      "nodeContext" : "Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 14,
        "startColumnNumber" : 8,
        "endLineNumber" : 14,
        "endColumnNumber" : 97
      },
      "nodeContext" : "Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2156,
        "startLineNumber" : 7,
        "startColumnNumber" : 44,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"[[[L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[L*/Test;\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 217,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2196,
        "startLineNumber" : 7,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void testMatchFieldDescriptors(){\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"[[[L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[L*/Test;\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 221,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 14,
        "startColumnNumber" : 8,
        "endLineNumber" : 14,
        "endColumnNumber" : 97
      },
      "nodeContext" : "Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"Ltest/Test;\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 14,
      "startColumnNumber" : 81,
      "endLineNumber" : 14,
      "endColumnNumber" : 94
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 14,
        "startColumnNumber" : 26,
        "endLineNumber" : 14,
        "endColumnNumber" : 95
      },
      "nodeContext" : "DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 14,
        "startColumnNumber" : 8,
        "endLineNumber" : 14,
        "endColumnNumber" : 96
      },
      "nodeContext" : "Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 14,
        "startColumnNumber" : 8,
        "endLineNumber" : 14,
        "endColumnNumber" : 97
      },
      "nodeContext" : "Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2156,
        "startLineNumber" : 7,
        "startColumnNumber" : 44,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"[[[L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[L*/Test;\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 217,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2196,
        "startLineNumber" : 7,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void testMatchFieldDescriptors(){\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"[[[L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[L*/Test;\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 221,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 14,
        "startColumnNumber" : 8,
        "endLineNumber" : 14,
        "endColumnNumber" : 97
      },
      "nodeContext" : "Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"Ltest/Test;\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 15,
      "startColumnNumber" : 71,
      "endLineNumber" : 15,
      "endColumnNumber" : 84
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 15,
        "startColumnNumber" : 26,
        "endLineNumber" : 15,
        "endColumnNumber" : 85
      },
      "nodeContext" : "DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 15,
        "startColumnNumber" : 8,
        "endLineNumber" : 15,
        "endColumnNumber" : 86
      },
      "nodeContext" : "Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 15,
        "startColumnNumber" : 8,
        "endLineNumber" : 15,
        "endColumnNumber" : 87
      },
      "nodeContext" : "Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2156,
        "startLineNumber" : 7,
        "startColumnNumber" : 44,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"[[[L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[L*/Test;\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 217,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2196,
        "startLineNumber" : 7,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void testMatchFieldDescriptors(){\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"[[[L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[L*/Test;\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 221,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 15,
        "startColumnNumber" : 8,
        "endLineNumber" : 15,
        "endColumnNumber" : 87
      },
      "nodeContext" : "Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"Ltest/Test;\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 16,
      "startColumnNumber" : 66,
      "endLineNumber" : 16,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 16,
        "startColumnNumber" : 26,
        "endLineNumber" : 16,
        "endColumnNumber" : 85
      },
      "nodeContext" : "DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 16,
        "startColumnNumber" : 8,
        "endLineNumber" : 16,
        "endColumnNumber" : 86
      },
      "nodeContext" : "Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 16,
        "startColumnNumber" : 8,
        "endLineNumber" : 16,
        "endColumnNumber" : 87
      },
      "nodeContext" : "Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2156,
        "startLineNumber" : 7,
        "startColumnNumber" : 44,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"[[[L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[L*/Test;\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 217,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2196,
        "startLineNumber" : 7,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void testMatchFieldDescriptors(){\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"[[[L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[L*/Test;\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 221,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 16,
        "startColumnNumber" : 8,
        "endLineNumber" : 16,
        "endColumnNumber" : 87
      },
      "nodeContext" : "Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"Ltest/Test;\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 17,
      "startColumnNumber" : 78,
      "endLineNumber" : 17,
      "endColumnNumber" : 91
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 17,
        "startColumnNumber" : 26,
        "endLineNumber" : 17,
        "endColumnNumber" : 92
      },
      "nodeContext" : "DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"Ltest/Test;\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 17,
        "startColumnNumber" : 8,
        "endLineNumber" : 17,
        "endColumnNumber" : 93
      },
      "nodeContext" : "Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"Ltest/Test;\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 17,
        "startColumnNumber" : 8,
        "endLineNumber" : 17,
        "endColumnNumber" : 94
      },
      "nodeContext" : "Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"Ltest/Test;\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2156,
        "startLineNumber" : 7,
        "startColumnNumber" : 44,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"[[[L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[L*/Test;\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 217,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2196,
        "startLineNumber" : 7,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void testMatchFieldDescriptors(){\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"[[[L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[L*/Test;\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 221,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 17,
        "startColumnNumber" : 8,
        "endLineNumber" : 17,
        "endColumnNumber" : 94
      },
      "nodeContext" : "Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"Ltest/Test;\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"Ltest/Test;\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 18,
      "startColumnNumber" : 66,
      "endLineNumber" : 18,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 18,
        "startColumnNumber" : 26,
        "endLineNumber" : 18,
        "endColumnNumber" : 92
      },
      "nodeContext" : "DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"L*/Test;\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 18,
        "startColumnNumber" : 8,
        "endLineNumber" : 18,
        "endColumnNumber" : 93
      },
      "nodeContext" : "Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"L*/Test;\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 18,
        "startColumnNumber" : 8,
        "endLineNumber" : 18,
        "endColumnNumber" : 94
      },
      "nodeContext" : "Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"L*/Test;\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2156,
        "startLineNumber" : 7,
        "startColumnNumber" : 44,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"[[[L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[L*/Test;\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 217,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2196,
        "startLineNumber" : 7,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void testMatchFieldDescriptors(){\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"[[[L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[L*/Test;\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 221,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 18,
        "startColumnNumber" : 8,
        "endLineNumber" : 18,
        "endColumnNumber" : 94
      },
      "nodeContext" : "Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"L*/Test;\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"Ltest/Test;\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 28,
      "startColumnNumber" : 66,
      "endLineNumber" : 28,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 28,
        "startColumnNumber" : 26,
        "endLineNumber" : 28,
        "endColumnNumber" : 95
      },
      "nodeContext" : "DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 96
      },
      "nodeContext" : "Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 97
      },
      "nodeContext" : "Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2156,
        "startLineNumber" : 7,
        "startColumnNumber" : 44,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"[[[L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[L*/Test;\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 217,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2196,
        "startLineNumber" : 7,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void testMatchFieldDescriptors(){\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"[[[L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[L*/Test;\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 221,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 97
      },
      "nodeContext" : "Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"Ltest/Test;\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 28,
      "startColumnNumber" : 81,
      "endLineNumber" : 28,
      "endColumnNumber" : 94
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 28,
        "startColumnNumber" : 26,
        "endLineNumber" : 28,
        "endColumnNumber" : 95
      },
      "nodeContext" : "DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 96
      },
      "nodeContext" : "Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 97
      },
      "nodeContext" : "Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2156,
        "startLineNumber" : 7,
        "startColumnNumber" : 44,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"[[[L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[L*/Test;\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 217,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2196,
        "startLineNumber" : 7,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void testMatchFieldDescriptors(){\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"[[[L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[L*/Test;\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 221,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 97
      },
      "nodeContext" : "Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"Ltest/Test;\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 29,
      "startColumnNumber" : 66,
      "endLineNumber" : 29,
      "endColumnNumber" : 79
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 29,
        "startColumnNumber" : 26,
        "endLineNumber" : 29,
        "endColumnNumber" : 85
      },
      "nodeContext" : "DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 29,
        "startColumnNumber" : 8,
        "endLineNumber" : 29,
        "endColumnNumber" : 86
      },
      "nodeContext" : "Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 29,
        "startColumnNumber" : 8,
        "endLineNumber" : 29,
        "endColumnNumber" : 87
      },
      "nodeContext" : "Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2156,
        "startLineNumber" : 7,
        "startColumnNumber" : 44,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"[[[L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[L*/Test;\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 217,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2196,
        "startLineNumber" : 7,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void testMatchFieldDescriptors(){\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"[[[L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[L*/Test;\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 221,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 29,
        "startColumnNumber" : 8,
        "endLineNumber" : 29,
        "endColumnNumber" : 87
      },
      "nodeContext" : "Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"Ltest/Test;\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 30,
      "startColumnNumber" : 71,
      "endLineNumber" : 30,
      "endColumnNumber" : 84
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 30,
        "startColumnNumber" : 26,
        "endLineNumber" : 30,
        "endColumnNumber" : 85
      },
      "nodeContext" : "DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 30,
        "startColumnNumber" : 8,
        "endLineNumber" : 30,
        "endColumnNumber" : 86
      },
      "nodeContext" : "Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 30,
        "startColumnNumber" : 8,
        "endLineNumber" : 30,
        "endColumnNumber" : 87
      },
      "nodeContext" : "Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2156,
        "startLineNumber" : 7,
        "startColumnNumber" : 44,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"[[[L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[L*/Test;\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 217,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2196,
        "startLineNumber" : 7,
        "startColumnNumber" : 4,
        "endLineNumber" : 39,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void testMatchFieldDescriptors(){\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"I\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"I\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[Z\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[Z\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[Ltest/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[Ltest/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"[[[L*/Test;\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"[[[L*/Test;\",\"?\"));\n  Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"[[[L*/Test;\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 221,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 30,
        "startColumnNumber" : 8,
        "endLineNumber" : 30,
        "endColumnNumber" : 87
      },
      "nodeContext" : "Assert.assertTrue(DescriptorMatcher.matchFieldDescriptors(\"?\",\"Ltest/Test;\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 14,
    "startColumnNumber" : 66,
    "endLineNumber" : 14,
    "endColumnNumber" : 79
  }, {
    "charLength" : 13,
    "startLineNumber" : 14,
    "startColumnNumber" : 81,
    "endLineNumber" : 14,
    "endColumnNumber" : 94
  }, {
    "charLength" : 13,
    "startLineNumber" : 15,
    "startColumnNumber" : 71,
    "endLineNumber" : 15,
    "endColumnNumber" : 84
  }, {
    "charLength" : 13,
    "startLineNumber" : 16,
    "startColumnNumber" : 66,
    "endLineNumber" : 16,
    "endColumnNumber" : 79
  }, {
    "charLength" : 13,
    "startLineNumber" : 17,
    "startColumnNumber" : 78,
    "endLineNumber" : 17,
    "endColumnNumber" : 91
  }, {
    "charLength" : 13,
    "startLineNumber" : 18,
    "startColumnNumber" : 66,
    "endLineNumber" : 18,
    "endColumnNumber" : 79
  }, {
    "charLength" : 13,
    "startLineNumber" : 28,
    "startColumnNumber" : 66,
    "endLineNumber" : 28,
    "endColumnNumber" : 79
  }, {
    "charLength" : 13,
    "startLineNumber" : 28,
    "startColumnNumber" : 81,
    "endLineNumber" : 28,
    "endColumnNumber" : 94
  }, {
    "charLength" : 13,
    "startLineNumber" : 29,
    "startColumnNumber" : 66,
    "endLineNumber" : 29,
    "endColumnNumber" : 79
  }, {
    "charLength" : 13,
    "startLineNumber" : 30,
    "startColumnNumber" : 71,
    "endLineNumber" : 30,
    "endColumnNumber" : 84
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 0
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 0
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 0
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 0
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 3
  } ]
}