{
  "id" : 201,
  "expression" : "true",
  "projectName" : "alibaba@spring-cloud-alibaba",
  "commitID" : "89ad537f66927a647f6233cfc79d58b18f2f6928",
  "filePath" : "/spring-cloud-alibaba-starters/spring-cloud-starter-alibaba-nacos-config/src/main/java/com/alibaba/cloud/nacos/refresh/SmartConfigurationPropertiesRebinder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "true",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 72,
      "startColumnNumber" : 23,
      "endLineNumber" : 72,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 72,
        "startColumnNumber" : 3,
        "endLineNumber" : 72,
        "endColumnNumber" : 28
      },
      "nodeContext" : "field.setAccessible(true)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 72,
        "startColumnNumber" : 3,
        "endLineNumber" : 72,
        "endColumnNumber" : 29
      },
      "nodeContext" : "field.setAccessible(true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 211,
        "startLineNumber" : 71,
        "startColumnNumber" : 21,
        "endLineNumber" : 76,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  field.setAccessible(true);\n  this.beanMap.putAll((Map<String,ConfigurationPropertiesBean>)Optional.ofNullable(ReflectionUtils.getField(field,beans)).orElse(Collections.emptyMap()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 230,
        "startLineNumber" : 71,
        "startColumnNumber" : 2,
        "endLineNumber" : 76,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (field != null) {\n  field.setAccessible(true);\n  this.beanMap.putAll((Map<String,ConfigurationPropertiesBean>)Optional.ofNullable(ReflectionUtils.getField(field,beans)).orElse(Collections.emptyMap()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 37,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 345,
        "startLineNumber" : 68,
        "startColumnNumber" : 62,
        "endLineNumber" : 77,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  this.beanMap=new HashMap<>();\n  Field field=ReflectionUtils.findField(beans.getClass(),\"beans\");\n  if (field != null) {\n    field.setAccessible(true);\n    this.beanMap.putAll((Map<String,ConfigurationPropertiesBean>)Optional.ofNullable(ReflectionUtils.getField(field,beans)).orElse(Collections.emptyMap()));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 59,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 439,
        "startLineNumber" : 67,
        "startColumnNumber" : 1,
        "endLineNumber" : 77,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") private void fillBeanMap(ConfigurationPropertiesBeans beans){\n  this.beanMap=new HashMap<>();\n  Field field=ReflectionUtils.findField(beans.getClass(),\"beans\");\n  if (field != null) {\n    field.setAccessible(true);\n    this.beanMap.putAll((Map<String,ConfigurationPropertiesBean>)Optional.ofNullable(ReflectionUtils.getField(field,beans)).orElse(Collections.emptyMap()));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 70,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 72,
        "startColumnNumber" : 3,
        "endLineNumber" : 72,
        "endColumnNumber" : 29
      },
      "nodeContext" : "field.setAccessible(true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 72,
    "startColumnNumber" : 23,
    "endLineNumber" : 72,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ ]
}