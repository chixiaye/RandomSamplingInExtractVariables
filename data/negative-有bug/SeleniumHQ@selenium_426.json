{
  "id" : 426,
  "expression" : "\"\"",
  "projectName" : "SeleniumHQ@selenium",
  "commitID" : "c146621f39dbec94114835aa1f6af6a0e1fa4cd0",
  "filePath" : "/java/server/src/org/openqa/selenium/grid/web/CheckOriginHeader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 63,
      "startColumnNumber" : 28,
      "endLineNumber" : 63,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 146,
        "startLineNumber" : 60,
        "startColumnNumber" : 21,
        "endLineNumber" : 63,
        "endColumnNumber" : 31
      },
      "nodeContext" : "ImmutableMap.of(\"error\",\"unknown error\",\"message\",\"Origin not allowed: \" + origin,\"stacktrace\",\"\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 185,
        "startLineNumber" : 59,
        "startColumnNumber" : 38,
        "endLineNumber" : 63,
        "endColumnNumber" : 32
      },
      "nodeContext" : "ImmutableMap.of(\"value\",ImmutableMap.of(\"error\",\"unknown error\",\"message\",\"Origin not allowed: \" + origin,\"stacktrace\",\"\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 202,
        "startLineNumber" : 59,
        "startColumnNumber" : 22,
        "endLineNumber" : 63,
        "endColumnNumber" : 33
      },
      "nodeContext" : "Contents.asJson(ImmutableMap.of(\"value\",ImmutableMap.of(\"error\",\"unknown error\",\"message\",\"Origin not allowed: \" + origin,\"stacktrace\",\"\")))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 335,
        "startLineNumber" : 56,
        "startColumnNumber" : 15,
        "endLineNumber" : 63,
        "endColumnNumber" : 34
      },
      "nodeContext" : "new HttpResponse().setStatus(HTTP_INTERNAL_ERROR).addHeader(\"Content-Type\",JSON_UTF_8).setContent(Contents.asJson(ImmutableMap.of(\"value\",ImmutableMap.of(\"error\",\"unknown error\",\"message\",\"Origin not allowed: \" + origin,\"stacktrace\",\"\"))))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 30,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 343,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 35
      },
      "nodeContext" : "return new HttpResponse().setStatus(HTTP_INTERNAL_ERROR).addHeader(\"Content-Type\",JSON_UTF_8).setContent(Contents.asJson(ImmutableMap.of(\"value\",ImmutableMap.of(\"error\",\"unknown error\",\"message\",\"Origin not allowed: \" + origin,\"stacktrace\",\"\"))));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 361,
        "startLineNumber" : 55,
        "startColumnNumber" : 60,
        "endLineNumber" : 64,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  return new HttpResponse().setStatus(HTTP_INTERNAL_ERROR).addHeader(\"Content-Type\",JSON_UTF_8).setContent(Contents.asJson(ImmutableMap.of(\"value\",ImmutableMap.of(\"error\",\"unknown error\",\"message\",\"Origin not allowed: \" + origin,\"stacktrace\",\"\"))));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 415,
        "startLineNumber" : 55,
        "startColumnNumber" : 6,
        "endLineNumber" : 64,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (origin != null && !allowedHosts.contains(origin)) {\n  return new HttpResponse().setStatus(HTTP_INTERNAL_ERROR).addHeader(\"Content-Type\",JSON_UTF_8).setContent(Contents.asJson(ImmutableMap.of(\"value\",ImmutableMap.of(\"error\",\"unknown error\",\"message\",\"Origin not allowed: \" + origin,\"stacktrace\",\"\"))));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 42,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 615,
        "startLineNumber" : 49,
        "startColumnNumber" : 18,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (skipChecksOn.contains(req.getUri())) {\n    return httpHandler.execute(req);\n  }\n  String origin=req.getHeader(\"Origin\");\n  if (origin != null && !allowedHosts.contains(origin)) {\n    return new HttpResponse().setStatus(HTTP_INTERNAL_ERROR).addHeader(\"Content-Type\",JSON_UTF_8).setContent(Contents.asJson(ImmutableMap.of(\"value\",ImmutableMap.of(\"error\",\"unknown error\",\"message\",\"Origin not allowed: \" + origin,\"stacktrace\",\"\"))));\n  }\n  return httpHandler.execute(req);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 622,
        "startLineNumber" : 49,
        "startColumnNumber" : 11,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "req -> {\n  if (skipChecksOn.contains(req.getUri())) {\n    return httpHandler.execute(req);\n  }\n  String origin=req.getHeader(\"Origin\");\n  if (origin != null && !allowedHosts.contains(origin)) {\n    return new HttpResponse().setStatus(HTTP_INTERNAL_ERROR).addHeader(\"Content-Type\",JSON_UTF_8).setContent(Contents.asJson(ImmutableMap.of(\"value\",ImmutableMap.of(\"error\",\"unknown error\",\"message\",\"Origin not allowed: \" + origin,\"stacktrace\",\"\"))));\n  }\n  return httpHandler.execute(req);\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 73,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 146,
        "startLineNumber" : 60,
        "startColumnNumber" : 21,
        "endLineNumber" : 63,
        "endColumnNumber" : 31
      },
      "nodeContext" : "ImmutableMap.of(\"error\",\"unknown error\",\"message\",\"Origin not allowed: \" + origin,\"stacktrace\",\"\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 63,
    "startColumnNumber" : 28,
    "endLineNumber" : 63,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}