{
  "id" : 156,
  "expression" : "someBeanName",
  "projectName" : "apolloconfig@apollo",
  "commitID" : "7b7d753f78e444f9cf97b0f238f7e33f585cb277",
  "filePath" : "/apollo-client/src/test/java/com/ctrip/framework/apollo/spring/util/BeanRegistrationUtilTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "someBeanName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 48,
      "startColumnNumber" : 40,
      "endLineNumber" : 48,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 89
      },
      "nodeContext" : "someRegistry.registerBeanDefinition(someBeanName,Mockito.mock(BeanDefinition.class))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 90
      },
      "nodeContext" : "someRegistry.registerBeanDefinition(someBeanName,Mockito.mock(BeanDefinition.class));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 352,
        "startLineNumber" : 47,
        "startColumnNumber" : 54,
        "endLineNumber" : 54,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  someRegistry.registerBeanDefinition(someBeanName,Mockito.mock(BeanDefinition.class));\n  assertFalse(BeanRegistrationUtil.registerBeanDefinitionIfNotExists(someRegistry,someBeanName,getClass(),null));\n  assertFalse(BeanRegistrationUtil.registerBeanDefinitionIfNotExists(someRegistry,someBeanName,getClass()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 413,
        "startLineNumber" : 46,
        "startColumnNumber" : 2,
        "endLineNumber" : 54,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void registerBeanDefinitionIfNotExistsTest(){\n  someRegistry.registerBeanDefinition(someBeanName,Mockito.mock(BeanDefinition.class));\n  assertFalse(BeanRegistrationUtil.registerBeanDefinitionIfNotExists(someRegistry,someBeanName,getClass(),null));\n  assertFalse(BeanRegistrationUtil.registerBeanDefinitionIfNotExists(someRegistry,someBeanName,getClass()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 39,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 90
      },
      "nodeContext" : "someRegistry.registerBeanDefinition(someBeanName,Mockito.mock(BeanDefinition.class));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "someBeanName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 49,
      "startColumnNumber" : 85,
      "endLineNumber" : 49,
      "endColumnNumber" : 97
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 49,
        "startColumnNumber" : 16,
        "endLineNumber" : 50,
        "endColumnNumber" : 25
      },
      "nodeContext" : "BeanRegistrationUtil.registerBeanDefinitionIfNotExists(someRegistry,someBeanName,getClass(),null)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 26
      },
      "nodeContext" : "assertFalse(BeanRegistrationUtil.registerBeanDefinitionIfNotExists(someRegistry,someBeanName,getClass(),null))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 50,
        "endColumnNumber" : 27
      },
      "nodeContext" : "assertFalse(BeanRegistrationUtil.registerBeanDefinitionIfNotExists(someRegistry,someBeanName,getClass(),null));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 352,
        "startLineNumber" : 47,
        "startColumnNumber" : 54,
        "endLineNumber" : 54,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  someRegistry.registerBeanDefinition(someBeanName,Mockito.mock(BeanDefinition.class));\n  assertFalse(BeanRegistrationUtil.registerBeanDefinitionIfNotExists(someRegistry,someBeanName,getClass(),null));\n  assertFalse(BeanRegistrationUtil.registerBeanDefinitionIfNotExists(someRegistry,someBeanName,getClass()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 413,
        "startLineNumber" : 46,
        "startColumnNumber" : 2,
        "endLineNumber" : 54,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void registerBeanDefinitionIfNotExistsTest(){\n  someRegistry.registerBeanDefinition(someBeanName,Mockito.mock(BeanDefinition.class));\n  assertFalse(BeanRegistrationUtil.registerBeanDefinitionIfNotExists(someRegistry,someBeanName,getClass(),null));\n  assertFalse(BeanRegistrationUtil.registerBeanDefinitionIfNotExists(someRegistry,someBeanName,getClass()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 39,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 49,
        "startColumnNumber" : 16,
        "endLineNumber" : 50,
        "endColumnNumber" : 25
      },
      "nodeContext" : "BeanRegistrationUtil.registerBeanDefinitionIfNotExists(someRegistry,someBeanName,getClass(),null)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "someBeanName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 51,
      "startColumnNumber" : 85,
      "endLineNumber" : 51,
      "endColumnNumber" : 97
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 51,
        "startColumnNumber" : 16,
        "endLineNumber" : 52,
        "endColumnNumber" : 19
      },
      "nodeContext" : "BeanRegistrationUtil.registerBeanDefinitionIfNotExists(someRegistry,someBeanName,getClass())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 20
      },
      "nodeContext" : "assertFalse(BeanRegistrationUtil.registerBeanDefinitionIfNotExists(someRegistry,someBeanName,getClass()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 21
      },
      "nodeContext" : "assertFalse(BeanRegistrationUtil.registerBeanDefinitionIfNotExists(someRegistry,someBeanName,getClass()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 352,
        "startLineNumber" : 47,
        "startColumnNumber" : 54,
        "endLineNumber" : 54,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  someRegistry.registerBeanDefinition(someBeanName,Mockito.mock(BeanDefinition.class));\n  assertFalse(BeanRegistrationUtil.registerBeanDefinitionIfNotExists(someRegistry,someBeanName,getClass(),null));\n  assertFalse(BeanRegistrationUtil.registerBeanDefinitionIfNotExists(someRegistry,someBeanName,getClass()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 413,
        "startLineNumber" : 46,
        "startColumnNumber" : 2,
        "endLineNumber" : 54,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void registerBeanDefinitionIfNotExistsTest(){\n  someRegistry.registerBeanDefinition(someBeanName,Mockito.mock(BeanDefinition.class));\n  assertFalse(BeanRegistrationUtil.registerBeanDefinitionIfNotExists(someRegistry,someBeanName,getClass(),null));\n  assertFalse(BeanRegistrationUtil.registerBeanDefinitionIfNotExists(someRegistry,someBeanName,getClass()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 39,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 51,
        "startColumnNumber" : 16,
        "endLineNumber" : 52,
        "endColumnNumber" : 19
      },
      "nodeContext" : "BeanRegistrationUtil.registerBeanDefinitionIfNotExists(someRegistry,someBeanName,getClass())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 48,
    "startColumnNumber" : 40,
    "endLineNumber" : 48,
    "endColumnNumber" : 52
  }, {
    "charLength" : 12,
    "startLineNumber" : 49,
    "startColumnNumber" : 85,
    "endLineNumber" : 49,
    "endColumnNumber" : 97
  }, {
    "charLength" : 12,
    "startLineNumber" : 51,
    "startColumnNumber" : 85,
    "endLineNumber" : 51,
    "endColumnNumber" : 97
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}