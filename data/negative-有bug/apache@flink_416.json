{
  "id" : 416,
  "expression" : "records2",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-runtime/src/test/java/org/apache/flink/runtime/operators/CoGroupTaskTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "records2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 458,
      "startColumnNumber" : 34,
      "endLineNumber" : 458,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 558,
        "startLineNumber" : 458,
        "startColumnNumber" : 12,
        "endLineNumber" : 476,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (Record record2 : records2) {\n  if (val1Cnt == 0) {\n    if (++this.cnt >= 10) {\n      throw new ExpectedTestException();\n    }\n    out.collect(record2);\n  }\n else {\n    for (int i=0; i < val1Cnt; i++) {\n      if (++this.cnt >= 10) {\n        throw new ExpectedTestException();\n      }\n      out.collect(record2);\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 59,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 722,
        "startLineNumber" : 451,
        "startColumnNumber" : 93,
        "endLineNumber" : 477,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int val1Cnt=0;\n  for (  @SuppressWarnings(\"unused\") Record r : records1) {\n    val1Cnt++;\n  }\n  for (  Record record2 : records2) {\n    if (val1Cnt == 0) {\n      if (++this.cnt >= 10) {\n        throw new ExpectedTestException();\n      }\n      out.collect(record2);\n    }\n else {\n      for (int i=0; i < val1Cnt; i++) {\n        if (++this.cnt >= 10) {\n          throw new ExpectedTestException();\n        }\n        out.collect(record2);\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 78,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 854,
        "startLineNumber" : 449,
        "startColumnNumber" : 8,
        "endLineNumber" : 477,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public void coGroup(Iterable<Record> records1,Iterable<Record> records2,Collector<Record> out){\n  int val1Cnt=0;\n  for (  @SuppressWarnings(\"unused\") Record r : records1) {\n    val1Cnt++;\n  }\n  for (  Record record2 : records2) {\n    if (val1Cnt == 0) {\n      if (++this.cnt >= 10) {\n        throw new ExpectedTestException();\n      }\n      out.collect(record2);\n    }\n else {\n      for (int i=0; i < val1Cnt; i++) {\n        if (++this.cnt >= 10) {\n          throw new ExpectedTestException();\n        }\n        out.collect(record2);\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 105,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 558,
        "startLineNumber" : 458,
        "startColumnNumber" : 12,
        "endLineNumber" : 476,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (Record record2 : records2) {\n  if (val1Cnt == 0) {\n    if (++this.cnt >= 10) {\n      throw new ExpectedTestException();\n    }\n    out.collect(record2);\n  }\n else {\n    for (int i=0; i < val1Cnt; i++) {\n      if (++this.cnt >= 10) {\n        throw new ExpectedTestException();\n      }\n      out.collect(record2);\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 59,
      "astHeight" : 12
    },
    "tokenLength" : 1,
    "type" : "java.lang.Iterable<org.apache.flink.types.Record>"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 458,
    "startColumnNumber" : 34,
    "endLineNumber" : 458,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ ]
}