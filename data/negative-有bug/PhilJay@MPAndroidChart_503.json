{
  "id" : 503,
  "expression" : "System.currentTimeMillis()",
  "projectName" : "PhilJay@MPAndroidChart",
  "commitID" : "43046425fc2ed73d0d3f177759706116e02a9053",
  "filePath" : "/MPChartLib/src/com/github/mikephil/charting/charts/BarLineChartBase.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "System.currentTimeMillis()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 155,
      "startColumnNumber" : 25,
      "endLineNumber" : 155,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 155,
        "startColumnNumber" : 13,
        "endLineNumber" : 155,
        "endColumnNumber" : 51
      },
      "nodeContext" : "starttime=System.currentTimeMillis()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 155,
        "startColumnNumber" : 8,
        "endLineNumber" : 155,
        "endColumnNumber" : 52
      },
      "nodeContext" : "long starttime=System.currentTimeMillis();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2416,
        "startLineNumber" : 149,
        "startColumnNumber" : 41,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super.onDraw(canvas);\n  if (mDataNotSet)   return;\n  long starttime=System.currentTimeMillis();\n  if (mFilterData) {\n    mData=getFilteredData();\n    Log.i(LOG_TAG,\"FilterTime: \" + (System.currentTimeMillis() - starttime) + \" ms\");\n    starttime=System.currentTimeMillis();\n  }\n else {\n    mData=getData();\n  }\n  if (mXAxis.isAdjustXLabelsEnabled())   calcModulus();\n  drawGridBackground();\n  mAxisRendererLeft.computeAxis(mAxisLeft.mAxisMinimum,mAxisLeft.mAxisMaximum);\n  mAxisRendererRight.computeAxis(mAxisRight.mAxisMinimum,mAxisRight.mAxisMaximum);\n  int clipRestoreCount=mDrawCanvas.save();\n  mDrawCanvas.clipRect(mViewPortHandler.getContentRect());\n  mXAxisRenderer.renderGridLines(mDrawCanvas);\n  mAxisRendererLeft.renderGridLines(mDrawCanvas);\n  mAxisRendererRight.renderGridLines(mDrawCanvas);\n  mAxisRendererLeft.renderLimitLines(mDrawCanvas);\n  mAxisRendererRight.renderLimitLines(mDrawCanvas);\n  mRenderer.drawData(mDrawCanvas);\n  if (mHighlightEnabled && mHighLightIndicatorEnabled && valuesToHighlight())   mRenderer.drawHighlighted(mDrawCanvas,mIndicesToHightlight);\n  mDrawCanvas.restoreToCount(clipRestoreCount);\n  mRenderer.drawExtras(mDrawCanvas);\n  mXAxisRenderer.renderAxisLabels(mDrawCanvas);\n  mXAxisRenderer.renderAxisLine(mDrawCanvas);\n  mAxisRendererLeft.renderAxisLabels(mDrawCanvas);\n  mAxisRendererLeft.renderAxisLine(mDrawCanvas);\n  mAxisRendererRight.renderAxisLabels(mDrawCanvas);\n  mAxisRendererRight.renderAxisLine(mDrawCanvas);\n  mRenderer.drawValues(mDrawCanvas);\n  mLegendRenderer.renderLegend(mDrawCanvas,mLegend);\n  drawMarkers();\n  drawDescription();\n  canvas.drawBitmap(mDrawBitmap,0,0,mDrawPaint);\n  if (mLogEnabled)   Log.i(LOG_TAG,\"DrawTime: \" + (System.currentTimeMillis() - starttime) + \" ms\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 216,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2467,
        "startLineNumber" : 148,
        "startColumnNumber" : 4,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected void onDraw(Canvas canvas){\n  super.onDraw(canvas);\n  if (mDataNotSet)   return;\n  long starttime=System.currentTimeMillis();\n  if (mFilterData) {\n    mData=getFilteredData();\n    Log.i(LOG_TAG,\"FilterTime: \" + (System.currentTimeMillis() - starttime) + \" ms\");\n    starttime=System.currentTimeMillis();\n  }\n else {\n    mData=getData();\n  }\n  if (mXAxis.isAdjustXLabelsEnabled())   calcModulus();\n  drawGridBackground();\n  mAxisRendererLeft.computeAxis(mAxisLeft.mAxisMinimum,mAxisLeft.mAxisMaximum);\n  mAxisRendererRight.computeAxis(mAxisRight.mAxisMinimum,mAxisRight.mAxisMaximum);\n  int clipRestoreCount=mDrawCanvas.save();\n  mDrawCanvas.clipRect(mViewPortHandler.getContentRect());\n  mXAxisRenderer.renderGridLines(mDrawCanvas);\n  mAxisRendererLeft.renderGridLines(mDrawCanvas);\n  mAxisRendererRight.renderGridLines(mDrawCanvas);\n  mAxisRendererLeft.renderLimitLines(mDrawCanvas);\n  mAxisRendererRight.renderLimitLines(mDrawCanvas);\n  mRenderer.drawData(mDrawCanvas);\n  if (mHighlightEnabled && mHighLightIndicatorEnabled && valuesToHighlight())   mRenderer.drawHighlighted(mDrawCanvas,mIndicesToHightlight);\n  mDrawCanvas.restoreToCount(clipRestoreCount);\n  mRenderer.drawExtras(mDrawCanvas);\n  mXAxisRenderer.renderAxisLabels(mDrawCanvas);\n  mXAxisRenderer.renderAxisLine(mDrawCanvas);\n  mAxisRendererLeft.renderAxisLabels(mDrawCanvas);\n  mAxisRendererLeft.renderAxisLine(mDrawCanvas);\n  mAxisRendererRight.renderAxisLabels(mDrawCanvas);\n  mAxisRendererRight.renderAxisLine(mDrawCanvas);\n  mRenderer.drawValues(mDrawCanvas);\n  mLegendRenderer.renderLegend(mDrawCanvas,mLegend);\n  drawMarkers();\n  drawDescription();\n  canvas.drawBitmap(mDrawBitmap,0,0,mDrawPaint);\n  if (mLogEnabled)   Log.i(LOG_TAG,\"DrawTime: \" + (System.currentTimeMillis() - starttime) + \" ms\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 226,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 155,
        "startColumnNumber" : 8,
        "endLineNumber" : 155,
        "endColumnNumber" : 52
      },
      "nodeContext" : "long starttime=System.currentTimeMillis();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "long"
  }, {
    "nodeContext" : "System.currentTimeMillis()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 161,
      "startColumnNumber" : 45,
      "endLineNumber" : 161,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 161,
        "startColumnNumber" : 45,
        "endLineNumber" : 162,
        "endColumnNumber" : 29
      },
      "nodeContext" : "System.currentTimeMillis() - starttime",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 161,
        "startColumnNumber" : 44,
        "endLineNumber" : 162,
        "endColumnNumber" : 30
      },
      "nodeContext" : "(System.currentTimeMillis() - starttime)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 161,
        "startColumnNumber" : 27,
        "endLineNumber" : 162,
        "endColumnNumber" : 38
      },
      "nodeContext" : "\"FilterTime: \" + (System.currentTimeMillis() - starttime) + \" ms\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 161,
        "startColumnNumber" : 12,
        "endLineNumber" : 162,
        "endColumnNumber" : 39
      },
      "nodeContext" : "Log.i(LOG_TAG,\"FilterTime: \" + (System.currentTimeMillis() - starttime) + \" ms\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 161,
        "startColumnNumber" : 12,
        "endLineNumber" : 162,
        "endColumnNumber" : 40
      },
      "nodeContext" : "Log.i(LOG_TAG,\"FilterTime: \" + (System.currentTimeMillis() - starttime) + \" ms\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 218,
        "startLineNumber" : 158,
        "startColumnNumber" : 25,
        "endLineNumber" : 164,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  mData=getFilteredData();\n  Log.i(LOG_TAG,\"FilterTime: \" + (System.currentTimeMillis() - starttime) + \" ms\");\n  starttime=System.currentTimeMillis();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 337,
        "startLineNumber" : 158,
        "startColumnNumber" : 8,
        "endLineNumber" : 167,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mFilterData) {\n  mData=getFilteredData();\n  Log.i(LOG_TAG,\"FilterTime: \" + (System.currentTimeMillis() - starttime) + \" ms\");\n  starttime=System.currentTimeMillis();\n}\n else {\n  mData=getData();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 34,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2416,
        "startLineNumber" : 149,
        "startColumnNumber" : 41,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super.onDraw(canvas);\n  if (mDataNotSet)   return;\n  long starttime=System.currentTimeMillis();\n  if (mFilterData) {\n    mData=getFilteredData();\n    Log.i(LOG_TAG,\"FilterTime: \" + (System.currentTimeMillis() - starttime) + \" ms\");\n    starttime=System.currentTimeMillis();\n  }\n else {\n    mData=getData();\n  }\n  if (mXAxis.isAdjustXLabelsEnabled())   calcModulus();\n  drawGridBackground();\n  mAxisRendererLeft.computeAxis(mAxisLeft.mAxisMinimum,mAxisLeft.mAxisMaximum);\n  mAxisRendererRight.computeAxis(mAxisRight.mAxisMinimum,mAxisRight.mAxisMaximum);\n  int clipRestoreCount=mDrawCanvas.save();\n  mDrawCanvas.clipRect(mViewPortHandler.getContentRect());\n  mXAxisRenderer.renderGridLines(mDrawCanvas);\n  mAxisRendererLeft.renderGridLines(mDrawCanvas);\n  mAxisRendererRight.renderGridLines(mDrawCanvas);\n  mAxisRendererLeft.renderLimitLines(mDrawCanvas);\n  mAxisRendererRight.renderLimitLines(mDrawCanvas);\n  mRenderer.drawData(mDrawCanvas);\n  if (mHighlightEnabled && mHighLightIndicatorEnabled && valuesToHighlight())   mRenderer.drawHighlighted(mDrawCanvas,mIndicesToHightlight);\n  mDrawCanvas.restoreToCount(clipRestoreCount);\n  mRenderer.drawExtras(mDrawCanvas);\n  mXAxisRenderer.renderAxisLabels(mDrawCanvas);\n  mXAxisRenderer.renderAxisLine(mDrawCanvas);\n  mAxisRendererLeft.renderAxisLabels(mDrawCanvas);\n  mAxisRendererLeft.renderAxisLine(mDrawCanvas);\n  mAxisRendererRight.renderAxisLabels(mDrawCanvas);\n  mAxisRendererRight.renderAxisLine(mDrawCanvas);\n  mRenderer.drawValues(mDrawCanvas);\n  mLegendRenderer.renderLegend(mDrawCanvas,mLegend);\n  drawMarkers();\n  drawDescription();\n  canvas.drawBitmap(mDrawBitmap,0,0,mDrawPaint);\n  if (mLogEnabled)   Log.i(LOG_TAG,\"DrawTime: \" + (System.currentTimeMillis() - starttime) + \" ms\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 216,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2467,
        "startLineNumber" : 148,
        "startColumnNumber" : 4,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected void onDraw(Canvas canvas){\n  super.onDraw(canvas);\n  if (mDataNotSet)   return;\n  long starttime=System.currentTimeMillis();\n  if (mFilterData) {\n    mData=getFilteredData();\n    Log.i(LOG_TAG,\"FilterTime: \" + (System.currentTimeMillis() - starttime) + \" ms\");\n    starttime=System.currentTimeMillis();\n  }\n else {\n    mData=getData();\n  }\n  if (mXAxis.isAdjustXLabelsEnabled())   calcModulus();\n  drawGridBackground();\n  mAxisRendererLeft.computeAxis(mAxisLeft.mAxisMinimum,mAxisLeft.mAxisMaximum);\n  mAxisRendererRight.computeAxis(mAxisRight.mAxisMinimum,mAxisRight.mAxisMaximum);\n  int clipRestoreCount=mDrawCanvas.save();\n  mDrawCanvas.clipRect(mViewPortHandler.getContentRect());\n  mXAxisRenderer.renderGridLines(mDrawCanvas);\n  mAxisRendererLeft.renderGridLines(mDrawCanvas);\n  mAxisRendererRight.renderGridLines(mDrawCanvas);\n  mAxisRendererLeft.renderLimitLines(mDrawCanvas);\n  mAxisRendererRight.renderLimitLines(mDrawCanvas);\n  mRenderer.drawData(mDrawCanvas);\n  if (mHighlightEnabled && mHighLightIndicatorEnabled && valuesToHighlight())   mRenderer.drawHighlighted(mDrawCanvas,mIndicesToHightlight);\n  mDrawCanvas.restoreToCount(clipRestoreCount);\n  mRenderer.drawExtras(mDrawCanvas);\n  mXAxisRenderer.renderAxisLabels(mDrawCanvas);\n  mXAxisRenderer.renderAxisLine(mDrawCanvas);\n  mAxisRendererLeft.renderAxisLabels(mDrawCanvas);\n  mAxisRendererLeft.renderAxisLine(mDrawCanvas);\n  mAxisRendererRight.renderAxisLabels(mDrawCanvas);\n  mAxisRendererRight.renderAxisLine(mDrawCanvas);\n  mRenderer.drawValues(mDrawCanvas);\n  mLegendRenderer.renderLegend(mDrawCanvas,mLegend);\n  drawMarkers();\n  drawDescription();\n  canvas.drawBitmap(mDrawBitmap,0,0,mDrawPaint);\n  if (mLogEnabled)   Log.i(LOG_TAG,\"DrawTime: \" + (System.currentTimeMillis() - starttime) + \" ms\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 226,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 161,
        "startColumnNumber" : 45,
        "endLineNumber" : 162,
        "endColumnNumber" : 29
      },
      "nodeContext" : "System.currentTimeMillis() - starttime",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "long"
  }, {
    "nodeContext" : "System.currentTimeMillis()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 163,
      "startColumnNumber" : 24,
      "endLineNumber" : 163,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 163,
        "startColumnNumber" : 12,
        "endLineNumber" : 163,
        "endColumnNumber" : 50
      },
      "nodeContext" : "starttime=System.currentTimeMillis()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 163,
        "startColumnNumber" : 12,
        "endLineNumber" : 163,
        "endColumnNumber" : 51
      },
      "nodeContext" : "starttime=System.currentTimeMillis();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 218,
        "startLineNumber" : 158,
        "startColumnNumber" : 25,
        "endLineNumber" : 164,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  mData=getFilteredData();\n  Log.i(LOG_TAG,\"FilterTime: \" + (System.currentTimeMillis() - starttime) + \" ms\");\n  starttime=System.currentTimeMillis();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 337,
        "startLineNumber" : 158,
        "startColumnNumber" : 8,
        "endLineNumber" : 167,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mFilterData) {\n  mData=getFilteredData();\n  Log.i(LOG_TAG,\"FilterTime: \" + (System.currentTimeMillis() - starttime) + \" ms\");\n  starttime=System.currentTimeMillis();\n}\n else {\n  mData=getData();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 34,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2416,
        "startLineNumber" : 149,
        "startColumnNumber" : 41,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super.onDraw(canvas);\n  if (mDataNotSet)   return;\n  long starttime=System.currentTimeMillis();\n  if (mFilterData) {\n    mData=getFilteredData();\n    Log.i(LOG_TAG,\"FilterTime: \" + (System.currentTimeMillis() - starttime) + \" ms\");\n    starttime=System.currentTimeMillis();\n  }\n else {\n    mData=getData();\n  }\n  if (mXAxis.isAdjustXLabelsEnabled())   calcModulus();\n  drawGridBackground();\n  mAxisRendererLeft.computeAxis(mAxisLeft.mAxisMinimum,mAxisLeft.mAxisMaximum);\n  mAxisRendererRight.computeAxis(mAxisRight.mAxisMinimum,mAxisRight.mAxisMaximum);\n  int clipRestoreCount=mDrawCanvas.save();\n  mDrawCanvas.clipRect(mViewPortHandler.getContentRect());\n  mXAxisRenderer.renderGridLines(mDrawCanvas);\n  mAxisRendererLeft.renderGridLines(mDrawCanvas);\n  mAxisRendererRight.renderGridLines(mDrawCanvas);\n  mAxisRendererLeft.renderLimitLines(mDrawCanvas);\n  mAxisRendererRight.renderLimitLines(mDrawCanvas);\n  mRenderer.drawData(mDrawCanvas);\n  if (mHighlightEnabled && mHighLightIndicatorEnabled && valuesToHighlight())   mRenderer.drawHighlighted(mDrawCanvas,mIndicesToHightlight);\n  mDrawCanvas.restoreToCount(clipRestoreCount);\n  mRenderer.drawExtras(mDrawCanvas);\n  mXAxisRenderer.renderAxisLabels(mDrawCanvas);\n  mXAxisRenderer.renderAxisLine(mDrawCanvas);\n  mAxisRendererLeft.renderAxisLabels(mDrawCanvas);\n  mAxisRendererLeft.renderAxisLine(mDrawCanvas);\n  mAxisRendererRight.renderAxisLabels(mDrawCanvas);\n  mAxisRendererRight.renderAxisLine(mDrawCanvas);\n  mRenderer.drawValues(mDrawCanvas);\n  mLegendRenderer.renderLegend(mDrawCanvas,mLegend);\n  drawMarkers();\n  drawDescription();\n  canvas.drawBitmap(mDrawBitmap,0,0,mDrawPaint);\n  if (mLogEnabled)   Log.i(LOG_TAG,\"DrawTime: \" + (System.currentTimeMillis() - starttime) + \" ms\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 216,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2467,
        "startLineNumber" : 148,
        "startColumnNumber" : 4,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected void onDraw(Canvas canvas){\n  super.onDraw(canvas);\n  if (mDataNotSet)   return;\n  long starttime=System.currentTimeMillis();\n  if (mFilterData) {\n    mData=getFilteredData();\n    Log.i(LOG_TAG,\"FilterTime: \" + (System.currentTimeMillis() - starttime) + \" ms\");\n    starttime=System.currentTimeMillis();\n  }\n else {\n    mData=getData();\n  }\n  if (mXAxis.isAdjustXLabelsEnabled())   calcModulus();\n  drawGridBackground();\n  mAxisRendererLeft.computeAxis(mAxisLeft.mAxisMinimum,mAxisLeft.mAxisMaximum);\n  mAxisRendererRight.computeAxis(mAxisRight.mAxisMinimum,mAxisRight.mAxisMaximum);\n  int clipRestoreCount=mDrawCanvas.save();\n  mDrawCanvas.clipRect(mViewPortHandler.getContentRect());\n  mXAxisRenderer.renderGridLines(mDrawCanvas);\n  mAxisRendererLeft.renderGridLines(mDrawCanvas);\n  mAxisRendererRight.renderGridLines(mDrawCanvas);\n  mAxisRendererLeft.renderLimitLines(mDrawCanvas);\n  mAxisRendererRight.renderLimitLines(mDrawCanvas);\n  mRenderer.drawData(mDrawCanvas);\n  if (mHighlightEnabled && mHighLightIndicatorEnabled && valuesToHighlight())   mRenderer.drawHighlighted(mDrawCanvas,mIndicesToHightlight);\n  mDrawCanvas.restoreToCount(clipRestoreCount);\n  mRenderer.drawExtras(mDrawCanvas);\n  mXAxisRenderer.renderAxisLabels(mDrawCanvas);\n  mXAxisRenderer.renderAxisLine(mDrawCanvas);\n  mAxisRendererLeft.renderAxisLabels(mDrawCanvas);\n  mAxisRendererLeft.renderAxisLine(mDrawCanvas);\n  mAxisRendererRight.renderAxisLabels(mDrawCanvas);\n  mAxisRendererRight.renderAxisLine(mDrawCanvas);\n  mRenderer.drawValues(mDrawCanvas);\n  mLegendRenderer.renderLegend(mDrawCanvas,mLegend);\n  drawMarkers();\n  drawDescription();\n  canvas.drawBitmap(mDrawBitmap,0,0,mDrawPaint);\n  if (mLogEnabled)   Log.i(LOG_TAG,\"DrawTime: \" + (System.currentTimeMillis() - starttime) + \" ms\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 226,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 163,
        "startColumnNumber" : 12,
        "endLineNumber" : 163,
        "endColumnNumber" : 51
      },
      "nodeContext" : "starttime=System.currentTimeMillis();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "long"
  }, {
    "nodeContext" : "System.currentTimeMillis()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 222,
      "startColumnNumber" : 43,
      "endLineNumber" : 222,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 222,
        "startColumnNumber" : 43,
        "endLineNumber" : 222,
        "endColumnNumber" : 81
      },
      "nodeContext" : "System.currentTimeMillis() - starttime",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 222,
        "startColumnNumber" : 42,
        "endLineNumber" : 222,
        "endColumnNumber" : 82
      },
      "nodeContext" : "(System.currentTimeMillis() - starttime)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 222,
        "startColumnNumber" : 27,
        "endLineNumber" : 222,
        "endColumnNumber" : 90
      },
      "nodeContext" : "\"DrawTime: \" + (System.currentTimeMillis() - starttime) + \" ms\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 222,
        "startColumnNumber" : 12,
        "endLineNumber" : 222,
        "endColumnNumber" : 91
      },
      "nodeContext" : "Log.i(LOG_TAG,\"DrawTime: \" + (System.currentTimeMillis() - starttime) + \" ms\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 222,
        "startColumnNumber" : 12,
        "endLineNumber" : 222,
        "endColumnNumber" : 92
      },
      "nodeContext" : "Log.i(LOG_TAG,\"DrawTime: \" + (System.currentTimeMillis() - starttime) + \" ms\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 221,
        "startColumnNumber" : 8,
        "endLineNumber" : 222,
        "endColumnNumber" : 92
      },
      "nodeContext" : "if (mLogEnabled) Log.i(LOG_TAG,\"DrawTime: \" + (System.currentTimeMillis() - starttime) + \" ms\");\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2416,
        "startLineNumber" : 149,
        "startColumnNumber" : 41,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super.onDraw(canvas);\n  if (mDataNotSet)   return;\n  long starttime=System.currentTimeMillis();\n  if (mFilterData) {\n    mData=getFilteredData();\n    Log.i(LOG_TAG,\"FilterTime: \" + (System.currentTimeMillis() - starttime) + \" ms\");\n    starttime=System.currentTimeMillis();\n  }\n else {\n    mData=getData();\n  }\n  if (mXAxis.isAdjustXLabelsEnabled())   calcModulus();\n  drawGridBackground();\n  mAxisRendererLeft.computeAxis(mAxisLeft.mAxisMinimum,mAxisLeft.mAxisMaximum);\n  mAxisRendererRight.computeAxis(mAxisRight.mAxisMinimum,mAxisRight.mAxisMaximum);\n  int clipRestoreCount=mDrawCanvas.save();\n  mDrawCanvas.clipRect(mViewPortHandler.getContentRect());\n  mXAxisRenderer.renderGridLines(mDrawCanvas);\n  mAxisRendererLeft.renderGridLines(mDrawCanvas);\n  mAxisRendererRight.renderGridLines(mDrawCanvas);\n  mAxisRendererLeft.renderLimitLines(mDrawCanvas);\n  mAxisRendererRight.renderLimitLines(mDrawCanvas);\n  mRenderer.drawData(mDrawCanvas);\n  if (mHighlightEnabled && mHighLightIndicatorEnabled && valuesToHighlight())   mRenderer.drawHighlighted(mDrawCanvas,mIndicesToHightlight);\n  mDrawCanvas.restoreToCount(clipRestoreCount);\n  mRenderer.drawExtras(mDrawCanvas);\n  mXAxisRenderer.renderAxisLabels(mDrawCanvas);\n  mXAxisRenderer.renderAxisLine(mDrawCanvas);\n  mAxisRendererLeft.renderAxisLabels(mDrawCanvas);\n  mAxisRendererLeft.renderAxisLine(mDrawCanvas);\n  mAxisRendererRight.renderAxisLabels(mDrawCanvas);\n  mAxisRendererRight.renderAxisLine(mDrawCanvas);\n  mRenderer.drawValues(mDrawCanvas);\n  mLegendRenderer.renderLegend(mDrawCanvas,mLegend);\n  drawMarkers();\n  drawDescription();\n  canvas.drawBitmap(mDrawBitmap,0,0,mDrawPaint);\n  if (mLogEnabled)   Log.i(LOG_TAG,\"DrawTime: \" + (System.currentTimeMillis() - starttime) + \" ms\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 216,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2467,
        "startLineNumber" : 148,
        "startColumnNumber" : 4,
        "endLineNumber" : 223,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected void onDraw(Canvas canvas){\n  super.onDraw(canvas);\n  if (mDataNotSet)   return;\n  long starttime=System.currentTimeMillis();\n  if (mFilterData) {\n    mData=getFilteredData();\n    Log.i(LOG_TAG,\"FilterTime: \" + (System.currentTimeMillis() - starttime) + \" ms\");\n    starttime=System.currentTimeMillis();\n  }\n else {\n    mData=getData();\n  }\n  if (mXAxis.isAdjustXLabelsEnabled())   calcModulus();\n  drawGridBackground();\n  mAxisRendererLeft.computeAxis(mAxisLeft.mAxisMinimum,mAxisLeft.mAxisMaximum);\n  mAxisRendererRight.computeAxis(mAxisRight.mAxisMinimum,mAxisRight.mAxisMaximum);\n  int clipRestoreCount=mDrawCanvas.save();\n  mDrawCanvas.clipRect(mViewPortHandler.getContentRect());\n  mXAxisRenderer.renderGridLines(mDrawCanvas);\n  mAxisRendererLeft.renderGridLines(mDrawCanvas);\n  mAxisRendererRight.renderGridLines(mDrawCanvas);\n  mAxisRendererLeft.renderLimitLines(mDrawCanvas);\n  mAxisRendererRight.renderLimitLines(mDrawCanvas);\n  mRenderer.drawData(mDrawCanvas);\n  if (mHighlightEnabled && mHighLightIndicatorEnabled && valuesToHighlight())   mRenderer.drawHighlighted(mDrawCanvas,mIndicesToHightlight);\n  mDrawCanvas.restoreToCount(clipRestoreCount);\n  mRenderer.drawExtras(mDrawCanvas);\n  mXAxisRenderer.renderAxisLabels(mDrawCanvas);\n  mXAxisRenderer.renderAxisLine(mDrawCanvas);\n  mAxisRendererLeft.renderAxisLabels(mDrawCanvas);\n  mAxisRendererLeft.renderAxisLine(mDrawCanvas);\n  mAxisRendererRight.renderAxisLabels(mDrawCanvas);\n  mAxisRendererRight.renderAxisLine(mDrawCanvas);\n  mRenderer.drawValues(mDrawCanvas);\n  mLegendRenderer.renderLegend(mDrawCanvas,mLegend);\n  drawMarkers();\n  drawDescription();\n  canvas.drawBitmap(mDrawBitmap,0,0,mDrawPaint);\n  if (mLogEnabled)   Log.i(LOG_TAG,\"DrawTime: \" + (System.currentTimeMillis() - starttime) + \" ms\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 226,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 222,
        "startColumnNumber" : 12,
        "endLineNumber" : 222,
        "endColumnNumber" : 92
      },
      "nodeContext" : "Log.i(LOG_TAG,\"DrawTime: \" + (System.currentTimeMillis() - starttime) + \" ms\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    },
    "tokenLength" : 2,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 26,
    "startLineNumber" : 155,
    "startColumnNumber" : 25,
    "endLineNumber" : 155,
    "endColumnNumber" : 51
  }, {
    "charLength" : 26,
    "startLineNumber" : 161,
    "startColumnNumber" : 45,
    "endLineNumber" : 161,
    "endColumnNumber" : 71
  }, {
    "charLength" : 26,
    "startLineNumber" : 163,
    "startColumnNumber" : 24,
    "endLineNumber" : 163,
    "endColumnNumber" : 50
  }, {
    "charLength" : 26,
    "startLineNumber" : 222,
    "startColumnNumber" : 43,
    "endLineNumber" : 222,
    "endColumnNumber" : 69
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 6
  } ]
}