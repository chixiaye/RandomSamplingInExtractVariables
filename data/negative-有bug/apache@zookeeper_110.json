{
  "id" : 110,
  "expression" : "(ackstate == QuorumPeer.ServerState.LOOKING) && (n.epoch < logicalclock)",
  "projectName" : "apache@zookeeper",
  "commitID" : "c6639c9842973a7954c8baa412d6825cb833d51f",
  "filePath" : "/src/java/main/org/apache/zookeeper/server/quorum/FastLeaderElection.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(ackstate == QuorumPeer.ServerState.LOOKING) && (n.epoch < logicalclock)",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 90,
      "startLineNumber" : 230,
      "startColumnNumber" : 19,
      "endLineNumber" : 231,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 15,
    "astHeight" : 6,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 445,
        "startLineNumber" : 230,
        "startColumnNumber" : 16,
        "endLineNumber" : 240,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if ((ackstate == QuorumPeer.ServerState.LOOKING) && (n.epoch < logicalclock)) {\n  Vote v=getVote();\n  ToSend notmsg=new ToSend(ToSend.mType.notification,v.id,v.zxid,logicalclock,self.getPeerState(),response.sid);\n  sendqueue.offer(notmsg);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 804,
        "startLineNumber" : 222,
        "startColumnNumber" : 72,
        "endLineNumber" : 241,
        "endColumnNumber" : 16
      },
      "nodeContext" : "{\n  recvqueue.offer(n);\n  if (recvqueue.size() == 0)   LOG.debug(\"Message: \" + n.sid);\n  if ((ackstate == QuorumPeer.ServerState.LOOKING) && (n.epoch < logicalclock)) {\n    Vote v=getVote();\n    ToSend notmsg=new ToSend(ToSend.mType.notification,v.id,v.zxid,logicalclock,self.getPeerState(),response.sid);\n    sendqueue.offer(notmsg);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1654,
        "startLineNumber" : 222,
        "startColumnNumber" : 15,
        "endLineNumber" : 259,
        "endColumnNumber" : 16
      },
      "nodeContext" : "if (self.getPeerState() == QuorumPeer.ServerState.LOOKING) {\n  recvqueue.offer(n);\n  if (recvqueue.size() == 0)   LOG.debug(\"Message: \" + n.sid);\n  if ((ackstate == QuorumPeer.ServerState.LOOKING) && (n.epoch < logicalclock)) {\n    Vote v=getVote();\n    ToSend notmsg=new ToSend(ToSend.mType.notification,v.id,v.zxid,logicalclock,self.getPeerState(),response.sid);\n    sendqueue.offer(notmsg);\n  }\n}\n else {\n  Vote current=self.getCurrentVote();\n  if (ackstate == QuorumPeer.ServerState.LOOKING) {\n    ToSend notmsg=new ToSend(ToSend.mType.notification,current.id,current.zxid,logicalclock,self.getPeerState(),response.sid);\n    sendqueue.offer(notmsg);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 135,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 3061,
        "startLineNumber" : 185,
        "startColumnNumber" : 17,
        "endLineNumber" : 261,
        "endColumnNumber" : 15
      },
      "nodeContext" : "{\n  response=manager.recvQueue.take();\n  if (response.buffer.capacity() < 28) {\n    LOG.error(\"Got a short response: \" + response.buffer.capacity());\n    continue;\n  }\n  response.buffer.clear();\n  QuorumPeer.ServerState ackstate=QuorumPeer.ServerState.LOOKING;\nswitch (response.buffer.getInt()) {\ncase 0:    ackstate=QuorumPeer.ServerState.LOOKING;\n  break;\ncase 1:ackstate=QuorumPeer.ServerState.FOLLOWING;\nbreak;\ncase 2:ackstate=QuorumPeer.ServerState.LEADING;\nbreak;\n}\nNotification n=new Notification();\nn.leader=response.buffer.getLong();\nn.zxid=response.buffer.getLong();\nn.epoch=response.buffer.getLong();\nn.state=ackstate;\nn.sid=response.sid;\nif (self.getPeerState() == QuorumPeer.ServerState.LOOKING) {\nrecvqueue.offer(n);\nif (recvqueue.size() == 0) LOG.debug(\"Message: \" + n.sid);\nif ((ackstate == QuorumPeer.ServerState.LOOKING) && (n.epoch < logicalclock)) {\nVote v=getVote();\nToSend notmsg=new ToSend(ToSend.mType.notification,v.id,v.zxid,logicalclock,self.getPeerState(),response.sid);\nsendqueue.offer(notmsg);\n}\n}\n else {\nVote current=self.getCurrentVote();\nif (ackstate == QuorumPeer.ServerState.LOOKING) {\nToSend notmsg=new ToSend(ToSend.mType.notification,current.id,current.zxid,logicalclock,self.getPeerState(),response.sid);\nsendqueue.offer(notmsg);\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 274,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3235,
        "startLineNumber" : 185,
        "startColumnNumber" : 14,
        "endLineNumber" : 264,
        "endColumnNumber" : 15
      },
      "nodeContext" : "try {\n  response=manager.recvQueue.take();\n  if (response.buffer.capacity() < 28) {\n    LOG.error(\"Got a short response: \" + response.buffer.capacity());\n    continue;\n  }\n  response.buffer.clear();\n  QuorumPeer.ServerState ackstate=QuorumPeer.ServerState.LOOKING;\nswitch (response.buffer.getInt()) {\ncase 0:    ackstate=QuorumPeer.ServerState.LOOKING;\n  break;\ncase 1:ackstate=QuorumPeer.ServerState.FOLLOWING;\nbreak;\ncase 2:ackstate=QuorumPeer.ServerState.LEADING;\nbreak;\n}\nNotification n=new Notification();\nn.leader=response.buffer.getLong();\nn.zxid=response.buffer.getLong();\nn.epoch=response.buffer.getLong();\nn.state=ackstate;\nn.sid=response.sid;\nif (self.getPeerState() == QuorumPeer.ServerState.LOOKING) {\nrecvqueue.offer(n);\nif (recvqueue.size() == 0) LOG.debug(\"Message: \" + n.sid);\nif ((ackstate == QuorumPeer.ServerState.LOOKING) && (n.epoch < logicalclock)) {\nVote v=getVote();\nToSend notmsg=new ToSend(ToSend.mType.notification,v.id,v.zxid,logicalclock,self.getPeerState(),response.sid);\nsendqueue.offer(notmsg);\n}\n}\n else {\nVote current=self.getCurrentVote();\nif (ackstate == QuorumPeer.ServerState.LOOKING) {\nToSend notmsg=new ToSend(ToSend.mType.notification,current.id,current.zxid,logicalclock,self.getPeerState(),response.sid);\nsendqueue.offer(notmsg);\n}\n}\n}\n catch (InterruptedException e) {\nSystem.out.println(\"Interrupted Exception while waiting for new message\" + e.toString());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 292,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 3307,
        "startLineNumber" : 183,
        "startColumnNumber" : 26,
        "endLineNumber" : 265,
        "endColumnNumber" : 14
      },
      "nodeContext" : "{\n  try {\n    response=manager.recvQueue.take();\n    if (response.buffer.capacity() < 28) {\n      LOG.error(\"Got a short response: \" + response.buffer.capacity());\n      continue;\n    }\n    response.buffer.clear();\n    QuorumPeer.ServerState ackstate=QuorumPeer.ServerState.LOOKING;\nswitch (response.buffer.getInt()) {\ncase 0:      ackstate=QuorumPeer.ServerState.LOOKING;\n    break;\ncase 1:  ackstate=QuorumPeer.ServerState.FOLLOWING;\nbreak;\ncase 2:ackstate=QuorumPeer.ServerState.LEADING;\nbreak;\n}\nNotification n=new Notification();\nn.leader=response.buffer.getLong();\nn.zxid=response.buffer.getLong();\nn.epoch=response.buffer.getLong();\nn.state=ackstate;\nn.sid=response.sid;\nif (self.getPeerState() == QuorumPeer.ServerState.LOOKING) {\nrecvqueue.offer(n);\nif (recvqueue.size() == 0) LOG.debug(\"Message: \" + n.sid);\nif ((ackstate == QuorumPeer.ServerState.LOOKING) && (n.epoch < logicalclock)) {\nVote v=getVote();\nToSend notmsg=new ToSend(ToSend.mType.notification,v.id,v.zxid,logicalclock,self.getPeerState(),response.sid);\nsendqueue.offer(notmsg);\n}\n}\n else {\nVote current=self.getCurrentVote();\nif (ackstate == QuorumPeer.ServerState.LOOKING) {\nToSend notmsg=new ToSend(ToSend.mType.notification,current.id,current.zxid,logicalclock,self.getPeerState(),response.sid);\nsendqueue.offer(notmsg);\n}\n}\n}\n catch (InterruptedException e) {\nSystem.out.println(\"Interrupted Exception while waiting for new message\" + e.toString());\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 293,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3320,
        "startLineNumber" : 183,
        "startColumnNumber" : 13,
        "endLineNumber" : 265,
        "endColumnNumber" : 14
      },
      "nodeContext" : "while (true) {\n  try {\n    response=manager.recvQueue.take();\n    if (response.buffer.capacity() < 28) {\n      LOG.error(\"Got a short response: \" + response.buffer.capacity());\n      continue;\n    }\n    response.buffer.clear();\n    QuorumPeer.ServerState ackstate=QuorumPeer.ServerState.LOOKING;\nswitch (response.buffer.getInt()) {\ncase 0:      ackstate=QuorumPeer.ServerState.LOOKING;\n    break;\ncase 1:  ackstate=QuorumPeer.ServerState.FOLLOWING;\nbreak;\ncase 2:ackstate=QuorumPeer.ServerState.LEADING;\nbreak;\n}\nNotification n=new Notification();\nn.leader=response.buffer.getLong();\nn.zxid=response.buffer.getLong();\nn.epoch=response.buffer.getLong();\nn.state=ackstate;\nn.sid=response.sid;\nif (self.getPeerState() == QuorumPeer.ServerState.LOOKING) {\nrecvqueue.offer(n);\nif (recvqueue.size() == 0) LOG.debug(\"Message: \" + n.sid);\nif ((ackstate == QuorumPeer.ServerState.LOOKING) && (n.epoch < logicalclock)) {\nVote v=getVote();\nToSend notmsg=new ToSend(ToSend.mType.notification,v.id,v.zxid,logicalclock,self.getPeerState(),response.sid);\nsendqueue.offer(notmsg);\n}\n}\n else {\nVote current=self.getCurrentVote();\nif (ackstate == QuorumPeer.ServerState.LOOKING) {\nToSend notmsg=new ToSend(ToSend.mType.notification,current.id,current.zxid,logicalclock,self.getPeerState(),response.sid);\nsendqueue.offer(notmsg);\n}\n}\n}\n catch (InterruptedException e) {\nSystem.out.println(\"Interrupted Exception while waiting for new message\" + e.toString());\n}\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 295,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3397,
        "startLineNumber" : 180,
        "startColumnNumber" : 30,
        "endLineNumber" : 266,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Message response;\n  while (true) {\n    try {\n      response=manager.recvQueue.take();\n      if (response.buffer.capacity() < 28) {\n        LOG.error(\"Got a short response: \" + response.buffer.capacity());\n        continue;\n      }\n      response.buffer.clear();\n      QuorumPeer.ServerState ackstate=QuorumPeer.ServerState.LOOKING;\nswitch (response.buffer.getInt()) {\ncase 0:        ackstate=QuorumPeer.ServerState.LOOKING;\n      break;\ncase 1:    ackstate=QuorumPeer.ServerState.FOLLOWING;\n  break;\ncase 2:ackstate=QuorumPeer.ServerState.LEADING;\nbreak;\n}\nNotification n=new Notification();\nn.leader=response.buffer.getLong();\nn.zxid=response.buffer.getLong();\nn.epoch=response.buffer.getLong();\nn.state=ackstate;\nn.sid=response.sid;\nif (self.getPeerState() == QuorumPeer.ServerState.LOOKING) {\nrecvqueue.offer(n);\nif (recvqueue.size() == 0) LOG.debug(\"Message: \" + n.sid);\nif ((ackstate == QuorumPeer.ServerState.LOOKING) && (n.epoch < logicalclock)) {\nVote v=getVote();\nToSend notmsg=new ToSend(ToSend.mType.notification,v.id,v.zxid,logicalclock,self.getPeerState(),response.sid);\nsendqueue.offer(notmsg);\n}\n}\n else {\nVote current=self.getCurrentVote();\nif (ackstate == QuorumPeer.ServerState.LOOKING) {\nToSend notmsg=new ToSend(ToSend.mType.notification,current.id,current.zxid,logicalclock,self.getPeerState(),response.sid);\nsendqueue.offer(notmsg);\n}\n}\n}\n catch (InterruptedException e) {\nSystem.out.println(\"Interrupted Exception while waiting for new message\" + e.toString());\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 301,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3415,
        "startLineNumber" : 180,
        "startColumnNumber" : 12,
        "endLineNumber" : 266,
        "endColumnNumber" : 13
      },
      "nodeContext" : "public void run(){\n  Message response;\n  while (true) {\n    try {\n      response=manager.recvQueue.take();\n      if (response.buffer.capacity() < 28) {\n        LOG.error(\"Got a short response: \" + response.buffer.capacity());\n        continue;\n      }\n      response.buffer.clear();\n      QuorumPeer.ServerState ackstate=QuorumPeer.ServerState.LOOKING;\nswitch (response.buffer.getInt()) {\ncase 0:        ackstate=QuorumPeer.ServerState.LOOKING;\n      break;\ncase 1:    ackstate=QuorumPeer.ServerState.FOLLOWING;\n  break;\ncase 2:ackstate=QuorumPeer.ServerState.LEADING;\nbreak;\n}\nNotification n=new Notification();\nn.leader=response.buffer.getLong();\nn.zxid=response.buffer.getLong();\nn.epoch=response.buffer.getLong();\nn.state=ackstate;\nn.sid=response.sid;\nif (self.getPeerState() == QuorumPeer.ServerState.LOOKING) {\nrecvqueue.offer(n);\nif (recvqueue.size() == 0) LOG.debug(\"Message: \" + n.sid);\nif ((ackstate == QuorumPeer.ServerState.LOOKING) && (n.epoch < logicalclock)) {\nVote v=getVote();\nToSend notmsg=new ToSend(ToSend.mType.notification,v.id,v.zxid,logicalclock,self.getPeerState(),response.sid);\nsendqueue.offer(notmsg);\n}\n}\n else {\nVote current=self.getCurrentVote();\nif (ackstate == QuorumPeer.ServerState.LOOKING) {\nToSend notmsg=new ToSend(ToSend.mType.notification,current.id,current.zxid,logicalclock,self.getPeerState(),response.sid);\nsendqueue.offer(notmsg);\n}\n}\n}\n catch (InterruptedException e) {\nSystem.out.println(\"Interrupted Exception while waiting for new message\" + e.toString());\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 305,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 445,
        "startLineNumber" : 230,
        "startColumnNumber" : 16,
        "endLineNumber" : 240,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if ((ackstate == QuorumPeer.ServerState.LOOKING) && (n.epoch < logicalclock)) {\n  Vote v=getVote();\n  ToSend notmsg=new ToSend(ToSend.mType.notification,v.id,v.zxid,logicalclock,self.getPeerState(),response.sid);\n  sendqueue.offer(notmsg);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 8
    },
    "tokenLength" : 10,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 90,
    "startLineNumber" : 230,
    "startColumnNumber" : 19,
    "endLineNumber" : 231,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ ]
}