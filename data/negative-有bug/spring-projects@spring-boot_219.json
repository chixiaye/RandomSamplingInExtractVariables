{
  "id" : 219,
  "expression" : "this.requiresUnpack",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-project/spring-boot-tools/spring-boot-gradle-plugin/src/main/java/org/springframework/boot/gradle/tasks/bundling/BootZipCopyAction.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "this.requiresUnpack",
    "nodeType" : "FieldAccess",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 104,
      "startColumnNumber" : 34,
      "endLineNumber" : 104,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 165,
        "startLineNumber" : 103,
        "startColumnNumber" : 18,
        "endLineNumber" : 105,
        "endColumnNumber" : 66
      },
      "nodeContext" : "new ZipStreamAction(zipStream,this.output,this.preserveFileTimestamps,this.requiresUnpack,createExclusionSpec(loaderEntries),this.compressionResolver)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 19,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 103,
        "startColumnNumber" : 3,
        "endLineNumber" : 105,
        "endColumnNumber" : 67
      },
      "nodeContext" : "stream.process(new ZipStreamAction(zipStream,this.output,this.preserveFileTimestamps,this.requiresUnpack,createExclusionSpec(loaderEntries),this.compressionResolver))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 22,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 182,
        "startLineNumber" : 103,
        "startColumnNumber" : 3,
        "endLineNumber" : 105,
        "endColumnNumber" : 68
      },
      "nodeContext" : "stream.process(new ZipStreamAction(zipStream,this.output,this.preserveFileTimestamps,this.requiresUnpack,createExclusionSpec(loaderEntries),this.compressionResolver));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 23,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 191,
        "startLineNumber" : 102,
        "startColumnNumber" : 6,
        "endLineNumber" : 106,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  stream.process(new ZipStreamAction(zipStream,this.output,this.preserveFileTimestamps,this.requiresUnpack,createExclusionSpec(loaderEntries),this.compressionResolver));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 297,
        "startLineNumber" : 102,
        "startColumnNumber" : 2,
        "endLineNumber" : 114,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  stream.process(new ZipStreamAction(zipStream,this.output,this.preserveFileTimestamps,this.requiresUnpack,createExclusionSpec(loaderEntries),this.compressionResolver));\n}\n  finally {\n  try {\n    zipStream.close();\n  }\n catch (  IOException ex) {\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 38,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 820,
        "startLineNumber" : 87,
        "startColumnNumber" : 62,
        "endLineNumber" : 116,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  ZipArchiveOutputStream zipStream;\n  Spec<FileTreeElement> loaderEntries;\n  try {\n    FileOutputStream fileStream=new FileOutputStream(this.output);\n    writeLaunchScriptIfNecessary(fileStream);\n    zipStream=new ZipArchiveOutputStream(fileStream);\n    if (this.encoding != null) {\n      zipStream.setEncoding(this.encoding);\n    }\n    loaderEntries=writeLoaderClassesIfNecessary(zipStream);\n  }\n catch (  IOException ex) {\n    throw new GradleException(\"Failed to create \" + this.output,ex);\n  }\n  try {\n    stream.process(new ZipStreamAction(zipStream,this.output,this.preserveFileTimestamps,this.requiresUnpack,createExclusionSpec(loaderEntries),this.compressionResolver));\n  }\n  finally {\n    try {\n      zipStream.close();\n    }\n catch (    IOException ex) {\n    }\n  }\n  return () -> true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 115,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 892,
        "startLineNumber" : 86,
        "startColumnNumber" : 1,
        "endLineNumber" : 116,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public WorkResult execute(CopyActionProcessingStream stream){\n  ZipArchiveOutputStream zipStream;\n  Spec<FileTreeElement> loaderEntries;\n  try {\n    FileOutputStream fileStream=new FileOutputStream(this.output);\n    writeLaunchScriptIfNecessary(fileStream);\n    zipStream=new ZipArchiveOutputStream(fileStream);\n    if (this.encoding != null) {\n      zipStream.setEncoding(this.encoding);\n    }\n    loaderEntries=writeLoaderClassesIfNecessary(zipStream);\n  }\n catch (  IOException ex) {\n    throw new GradleException(\"Failed to create \" + this.output,ex);\n  }\n  try {\n    stream.process(new ZipStreamAction(zipStream,this.output,this.preserveFileTimestamps,this.requiresUnpack,createExclusionSpec(loaderEntries),this.compressionResolver));\n  }\n  finally {\n    try {\n      zipStream.close();\n    }\n catch (    IOException ex) {\n    }\n  }\n  return () -> true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 126,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 165,
        "startLineNumber" : 103,
        "startColumnNumber" : 18,
        "endLineNumber" : 105,
        "endColumnNumber" : 66
      },
      "nodeContext" : "new ZipStreamAction(zipStream,this.output,this.preserveFileTimestamps,this.requiresUnpack,createExclusionSpec(loaderEntries),this.compressionResolver)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 19,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.springframework.boot.gradle.tasks.bundling.Spec<org.springframework.boot.gradle.tasks.bundling.FileTreeElement>"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 104,
    "startColumnNumber" : 34,
    "endLineNumber" : 104,
    "endColumnNumber" : 53
  } ],
  "layoutRelationDataList" : [ ]
}