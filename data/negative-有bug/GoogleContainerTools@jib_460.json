{
  "id" : 460,
  "expression" : "mockHttpResponseException",
  "projectName" : "GoogleContainerTools@jib",
  "commitID" : "a0742fd277b5490a0965dba4443f5864f1250199",
  "filePath" : "/jib-core/src/test/java/com/google/cloud/tools/jib/registry/BlobCheckerTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "mockHttpResponseException",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 88,
      "startColumnNumber" : 17,
      "endLineNumber" : 88,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 88,
        "startColumnNumber" : 17,
        "endLineNumber" : 88,
        "endColumnNumber" : 58
      },
      "nodeContext" : "mockHttpResponseException.getStatusCode()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Mockito.when(mockHttpResponseException.getStatusCode())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 58
      },
      "nodeContext" : "Mockito.when(mockHttpResponseException.getStatusCode()).thenReturn(HttpStatusCodes.STATUS_CODE_NOT_FOUND)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 89,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Mockito.when(mockHttpResponseException.getStatusCode()).thenReturn(HttpStatusCodes.STATUS_CODE_NOT_FOUND);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 720,
        "startLineNumber" : 86,
        "startColumnNumber" : 91,
        "endLineNumber" : 101,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  HttpResponseException mockHttpResponseException=Mockito.mock(HttpResponseException.class);\n  Mockito.when(mockHttpResponseException.getStatusCode()).thenReturn(HttpStatusCodes.STATUS_CODE_NOT_FOUND);\n  ErrorResponseTemplate emptyErrorResponseTemplate=new ErrorResponseTemplate().addError(new ErrorEntryTemplate(ErrorCodes.BLOB_UNKNOWN.name(),\"some message\"));\n  Mockito.when(mockHttpResponseException.getContent()).thenReturn(Blobs.writeToString(JsonTemplateMapper.toBlob(emptyErrorResponseTemplate)));\n  BlobDescriptor blobDescriptor=testBlobChecker.handleHttpResponseException(mockHttpResponseException);\n  Assert.assertNull(blobDescriptor);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 817,
        "startLineNumber" : 85,
        "startColumnNumber" : 2,
        "endLineNumber" : 101,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testHandleHttpResponseException() throws IOException, RegistryErrorException {\n  HttpResponseException mockHttpResponseException=Mockito.mock(HttpResponseException.class);\n  Mockito.when(mockHttpResponseException.getStatusCode()).thenReturn(HttpStatusCodes.STATUS_CODE_NOT_FOUND);\n  ErrorResponseTemplate emptyErrorResponseTemplate=new ErrorResponseTemplate().addError(new ErrorEntryTemplate(ErrorCodes.BLOB_UNKNOWN.name(),\"some message\"));\n  Mockito.when(mockHttpResponseException.getContent()).thenReturn(Blobs.writeToString(JsonTemplateMapper.toBlob(emptyErrorResponseTemplate)));\n  BlobDescriptor blobDescriptor=testBlobChecker.handleHttpResponseException(mockHttpResponseException);\n  Assert.assertNull(blobDescriptor);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 83,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Mockito.when(mockHttpResponseException.getStatusCode())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.google.cloud.tools.jib.registry.HttpResponseException"
  }, {
    "nodeContext" : "mockHttpResponseException",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 94,
      "startColumnNumber" : 17,
      "endLineNumber" : 94,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 94,
        "startColumnNumber" : 17,
        "endLineNumber" : 94,
        "endColumnNumber" : 55
      },
      "nodeContext" : "mockHttpResponseException.getContent()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 94,
        "startColumnNumber" : 4,
        "endLineNumber" : 94,
        "endColumnNumber" : 56
      },
      "nodeContext" : "Mockito.when(mockHttpResponseException.getContent())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 148,
        "startLineNumber" : 94,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 95
      },
      "nodeContext" : "Mockito.when(mockHttpResponseException.getContent()).thenReturn(Blobs.writeToString(JsonTemplateMapper.toBlob(emptyErrorResponseTemplate)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 94,
        "startColumnNumber" : 4,
        "endLineNumber" : 95,
        "endColumnNumber" : 96
      },
      "nodeContext" : "Mockito.when(mockHttpResponseException.getContent()).thenReturn(Blobs.writeToString(JsonTemplateMapper.toBlob(emptyErrorResponseTemplate)));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 720,
        "startLineNumber" : 86,
        "startColumnNumber" : 91,
        "endLineNumber" : 101,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  HttpResponseException mockHttpResponseException=Mockito.mock(HttpResponseException.class);\n  Mockito.when(mockHttpResponseException.getStatusCode()).thenReturn(HttpStatusCodes.STATUS_CODE_NOT_FOUND);\n  ErrorResponseTemplate emptyErrorResponseTemplate=new ErrorResponseTemplate().addError(new ErrorEntryTemplate(ErrorCodes.BLOB_UNKNOWN.name(),\"some message\"));\n  Mockito.when(mockHttpResponseException.getContent()).thenReturn(Blobs.writeToString(JsonTemplateMapper.toBlob(emptyErrorResponseTemplate)));\n  BlobDescriptor blobDescriptor=testBlobChecker.handleHttpResponseException(mockHttpResponseException);\n  Assert.assertNull(blobDescriptor);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 817,
        "startLineNumber" : 85,
        "startColumnNumber" : 2,
        "endLineNumber" : 101,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testHandleHttpResponseException() throws IOException, RegistryErrorException {\n  HttpResponseException mockHttpResponseException=Mockito.mock(HttpResponseException.class);\n  Mockito.when(mockHttpResponseException.getStatusCode()).thenReturn(HttpStatusCodes.STATUS_CODE_NOT_FOUND);\n  ErrorResponseTemplate emptyErrorResponseTemplate=new ErrorResponseTemplate().addError(new ErrorEntryTemplate(ErrorCodes.BLOB_UNKNOWN.name(),\"some message\"));\n  Mockito.when(mockHttpResponseException.getContent()).thenReturn(Blobs.writeToString(JsonTemplateMapper.toBlob(emptyErrorResponseTemplate)));\n  BlobDescriptor blobDescriptor=testBlobChecker.handleHttpResponseException(mockHttpResponseException);\n  Assert.assertNull(blobDescriptor);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 83,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 94,
        "startColumnNumber" : 4,
        "endLineNumber" : 94,
        "endColumnNumber" : 56
      },
      "nodeContext" : "Mockito.when(mockHttpResponseException.getContent())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.google.cloud.tools.jib.registry.HttpResponseException"
  }, {
    "nodeContext" : "mockHttpResponseException",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 98,
      "startColumnNumber" : 52,
      "endLineNumber" : 98,
      "endColumnNumber" : 77
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 98,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 78
      },
      "nodeContext" : "testBlobChecker.handleHttpResponseException(mockHttpResponseException)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 97,
        "startColumnNumber" : 19,
        "endLineNumber" : 98,
        "endColumnNumber" : 78
      },
      "nodeContext" : "blobDescriptor=testBlobChecker.handleHttpResponseException(mockHttpResponseException)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 97,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 79
      },
      "nodeContext" : "BlobDescriptor blobDescriptor=testBlobChecker.handleHttpResponseException(mockHttpResponseException);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 720,
        "startLineNumber" : 86,
        "startColumnNumber" : 91,
        "endLineNumber" : 101,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  HttpResponseException mockHttpResponseException=Mockito.mock(HttpResponseException.class);\n  Mockito.when(mockHttpResponseException.getStatusCode()).thenReturn(HttpStatusCodes.STATUS_CODE_NOT_FOUND);\n  ErrorResponseTemplate emptyErrorResponseTemplate=new ErrorResponseTemplate().addError(new ErrorEntryTemplate(ErrorCodes.BLOB_UNKNOWN.name(),\"some message\"));\n  Mockito.when(mockHttpResponseException.getContent()).thenReturn(Blobs.writeToString(JsonTemplateMapper.toBlob(emptyErrorResponseTemplate)));\n  BlobDescriptor blobDescriptor=testBlobChecker.handleHttpResponseException(mockHttpResponseException);\n  Assert.assertNull(blobDescriptor);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 817,
        "startLineNumber" : 85,
        "startColumnNumber" : 2,
        "endLineNumber" : 101,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testHandleHttpResponseException() throws IOException, RegistryErrorException {\n  HttpResponseException mockHttpResponseException=Mockito.mock(HttpResponseException.class);\n  Mockito.when(mockHttpResponseException.getStatusCode()).thenReturn(HttpStatusCodes.STATUS_CODE_NOT_FOUND);\n  ErrorResponseTemplate emptyErrorResponseTemplate=new ErrorResponseTemplate().addError(new ErrorEntryTemplate(ErrorCodes.BLOB_UNKNOWN.name(),\"some message\"));\n  Mockito.when(mockHttpResponseException.getContent()).thenReturn(Blobs.writeToString(JsonTemplateMapper.toBlob(emptyErrorResponseTemplate)));\n  BlobDescriptor blobDescriptor=testBlobChecker.handleHttpResponseException(mockHttpResponseException);\n  Assert.assertNull(blobDescriptor);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 83,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 98,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 78
      },
      "nodeContext" : "testBlobChecker.handleHttpResponseException(mockHttpResponseException)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.google.cloud.tools.jib.registry.HttpResponseException"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 88,
    "startColumnNumber" : 17,
    "endLineNumber" : 88,
    "endColumnNumber" : 42
  }, {
    "charLength" : 25,
    "startLineNumber" : 94,
    "startColumnNumber" : 17,
    "endLineNumber" : 94,
    "endColumnNumber" : 42
  }, {
    "charLength" : 25,
    "startLineNumber" : 98,
    "startColumnNumber" : 52,
    "endLineNumber" : 98,
    "endColumnNumber" : 77
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}