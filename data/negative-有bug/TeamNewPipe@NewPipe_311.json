{
  "id" : 311,
  "expression" : "selectedCharset.isEmpty()",
  "projectName" : "TeamNewPipe@NewPipe",
  "commitID" : "d7574973e97fa7a3a21aa59967311f6091941830",
  "filePath" : "/app/src/main/java/org/schabi/newpipe/util/FilenameUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "selectedCharset.isEmpty()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 39,
      "startColumnNumber" : 39,
      "endLineNumber" : 39,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 39,
        "startColumnNumber" : 12,
        "endLineNumber" : 39,
        "endColumnNumber" : 64
      },
      "nodeContext" : "selectedCharset == null || selectedCharset.isEmpty()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (selectedCharset == null || selectedCharset.isEmpty()) {\n  selectedCharset=defaultCharset;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1289,
        "startLineNumber" : 24,
        "startColumnNumber" : 83,
        "endLineNumber" : 54,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SharedPreferences sharedPreferences=PreferenceManager.getDefaultSharedPreferences(context);\n  final String charsetLd=context.getString(R.string.charset_letters_and_digits_value);\n  final String charsetMs=context.getString(R.string.charset_most_special_value);\n  final String defaultCharset=context.getString(R.string.default_file_charset_value);\n  final String replacementChar=sharedPreferences.getString(context.getString(R.string.settings_file_replacement_character_key),\"_\");\n  String selectedCharset=sharedPreferences.getString(context.getString(R.string.settings_file_charset_key),null);\n  final String charset;\n  if (selectedCharset == null || selectedCharset.isEmpty()) {\n    selectedCharset=defaultCharset;\n  }\n  if (selectedCharset.equals(charsetLd)) {\n    charset=CHARSET_ONLY_LETTERS_AND_DIGITS;\n  }\n else   if (selectedCharset.equals(charsetMs)) {\n    charset=CHARSET_MOST_SPECIAL;\n  }\n else {\n    charset=selectedCharset;\n  }\n  Pattern pattern=Pattern.compile(charset);\n  return createFilename(title,pattern,replacementChar);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1637,
        "startLineNumber" : 17,
        "startColumnNumber" : 4,
        "endLineNumber" : 54,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * #143 #44 #42 #22: make sure that the filename does not contain illegal chars.\n * @param context the context to retrieve strings and preferences from\n * @param title   the title to create a filename from\n * @return the filename\n */\npublic static String createFilename(final Context context,final String title){\n  SharedPreferences sharedPreferences=PreferenceManager.getDefaultSharedPreferences(context);\n  final String charsetLd=context.getString(R.string.charset_letters_and_digits_value);\n  final String charsetMs=context.getString(R.string.charset_most_special_value);\n  final String defaultCharset=context.getString(R.string.default_file_charset_value);\n  final String replacementChar=sharedPreferences.getString(context.getString(R.string.settings_file_replacement_character_key),\"_\");\n  String selectedCharset=sharedPreferences.getString(context.getString(R.string.settings_file_charset_key),null);\n  final String charset;\n  if (selectedCharset == null || selectedCharset.isEmpty()) {\n    selectedCharset=defaultCharset;\n  }\n  if (selectedCharset.equals(charsetLd)) {\n    charset=CHARSET_ONLY_LETTERS_AND_DIGITS;\n  }\n else   if (selectedCharset.equals(charsetMs)) {\n    charset=CHARSET_MOST_SPECIAL;\n  }\n else {\n    charset=selectedCharset;\n  }\n  Pattern pattern=Pattern.compile(charset);\n  return createFilename(title,pattern,replacementChar);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 163,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 39,
        "startColumnNumber" : 12,
        "endLineNumber" : 39,
        "endColumnNumber" : 64
      },
      "nodeContext" : "selectedCharset == null || selectedCharset.isEmpty()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 39,
    "startColumnNumber" : 39,
    "endLineNumber" : 39,
    "endColumnNumber" : 64
  } ],
  "layoutRelationDataList" : [ ]
}