{
  "id" : 299,
  "expression" : "list",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-core/src/test/java/cn/hutool/core/collection/ListUtilTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "list",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 20,
      "startColumnNumber" : 20,
      "endLineNumber" : 20,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 20,
        "startColumnNumber" : 2,
        "endLineNumber" : 20,
        "endColumnNumber" : 79
      },
      "nodeContext" : "CollUtil.padRight(list,RandomUtil.randomInt(1000_0000,1_0000_0000),\"test\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 20,
        "startColumnNumber" : 2,
        "endLineNumber" : 20,
        "endColumnNumber" : 80
      },
      "nodeContext" : "CollUtil.padRight(list,RandomUtil.randomInt(1000_0000,1_0000_0000),\"test\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 674,
        "startLineNumber" : 18,
        "startColumnNumber" : 21,
        "endLineNumber" : 38,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  List<String> list=new ArrayList<>();\n  CollUtil.padRight(list,RandomUtil.randomInt(1000_0000,1_0000_0000),\"test\");\n  int size=RandomUtil.randomInt(10,1000);\n  Console.log(\"\\nlist size: {}\",list.size());\n  Console.log(\"partition size: {}\\n\",size);\n  StopWatch stopWatch=new StopWatch();\n  stopWatch.start(\"CollUtil#split\");\n  List<List<String>> CollSplitResult=CollUtil.split(list,size);\n  stopWatch.stop();\n  stopWatch.start(\"ListUtil#split\");\n  List<List<String>> ListSplitResult=ListUtil.split(list,size);\n  stopWatch.stop();\n  Assert.assertEquals(CollSplitResult,ListSplitResult);\n  Console.log(stopWatch.prettyPrint());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 712,
        "startLineNumber" : 16,
        "startColumnNumber" : 1,
        "endLineNumber" : 38,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test @Ignore public void split(){\n  List<String> list=new ArrayList<>();\n  CollUtil.padRight(list,RandomUtil.randomInt(1000_0000,1_0000_0000),\"test\");\n  int size=RandomUtil.randomInt(10,1000);\n  Console.log(\"\\nlist size: {}\",list.size());\n  Console.log(\"partition size: {}\\n\",size);\n  StopWatch stopWatch=new StopWatch();\n  stopWatch.start(\"CollUtil#split\");\n  List<List<String>> CollSplitResult=CollUtil.split(list,size);\n  stopWatch.stop();\n  stopWatch.start(\"ListUtil#split\");\n  List<List<String>> ListSplitResult=ListUtil.split(list,size);\n  stopWatch.stop();\n  Assert.assertEquals(CollSplitResult,ListSplitResult);\n  Console.log(stopWatch.prettyPrint());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 126,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 20,
        "startColumnNumber" : 2,
        "endLineNumber" : 20,
        "endColumnNumber" : 80
      },
      "nodeContext" : "CollUtil.padRight(list,RandomUtil.randomInt(1000_0000,1_0000_0000),\"test\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.lang.String>"
  }, {
    "nodeContext" : "list",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 23,
      "startColumnNumber" : 33,
      "endLineNumber" : 23,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 23,
        "startColumnNumber" : 33,
        "endLineNumber" : 23,
        "endColumnNumber" : 44
      },
      "nodeContext" : "list.size()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 23,
        "startColumnNumber" : 2,
        "endLineNumber" : 23,
        "endColumnNumber" : 45
      },
      "nodeContext" : "Console.log(\"\\nlist size: {}\",list.size())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 23,
        "startColumnNumber" : 2,
        "endLineNumber" : 23,
        "endColumnNumber" : 46
      },
      "nodeContext" : "Console.log(\"\\nlist size: {}\",list.size());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 674,
        "startLineNumber" : 18,
        "startColumnNumber" : 21,
        "endLineNumber" : 38,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  List<String> list=new ArrayList<>();\n  CollUtil.padRight(list,RandomUtil.randomInt(1000_0000,1_0000_0000),\"test\");\n  int size=RandomUtil.randomInt(10,1000);\n  Console.log(\"\\nlist size: {}\",list.size());\n  Console.log(\"partition size: {}\\n\",size);\n  StopWatch stopWatch=new StopWatch();\n  stopWatch.start(\"CollUtil#split\");\n  List<List<String>> CollSplitResult=CollUtil.split(list,size);\n  stopWatch.stop();\n  stopWatch.start(\"ListUtil#split\");\n  List<List<String>> ListSplitResult=ListUtil.split(list,size);\n  stopWatch.stop();\n  Assert.assertEquals(CollSplitResult,ListSplitResult);\n  Console.log(stopWatch.prettyPrint());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 712,
        "startLineNumber" : 16,
        "startColumnNumber" : 1,
        "endLineNumber" : 38,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test @Ignore public void split(){\n  List<String> list=new ArrayList<>();\n  CollUtil.padRight(list,RandomUtil.randomInt(1000_0000,1_0000_0000),\"test\");\n  int size=RandomUtil.randomInt(10,1000);\n  Console.log(\"\\nlist size: {}\",list.size());\n  Console.log(\"partition size: {}\\n\",size);\n  StopWatch stopWatch=new StopWatch();\n  stopWatch.start(\"CollUtil#split\");\n  List<List<String>> CollSplitResult=CollUtil.split(list,size);\n  stopWatch.stop();\n  stopWatch.start(\"ListUtil#split\");\n  List<List<String>> ListSplitResult=ListUtil.split(list,size);\n  stopWatch.stop();\n  Assert.assertEquals(CollSplitResult,ListSplitResult);\n  Console.log(stopWatch.prettyPrint());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 126,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 23,
        "startColumnNumber" : 2,
        "endLineNumber" : 23,
        "endColumnNumber" : 46
      },
      "nodeContext" : "Console.log(\"\\nlist size: {}\",list.size());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.lang.String>"
  }, {
    "nodeContext" : "list",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 28,
      "startColumnNumber" : 54,
      "endLineNumber" : 28,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 28,
        "startColumnNumber" : 39,
        "endLineNumber" : 28,
        "endColumnNumber" : 65
      },
      "nodeContext" : "CollUtil.split(list,size)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 28,
        "startColumnNumber" : 21,
        "endLineNumber" : 28,
        "endColumnNumber" : 65
      },
      "nodeContext" : "CollSplitResult=CollUtil.split(list,size)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 28,
        "startColumnNumber" : 2,
        "endLineNumber" : 28,
        "endColumnNumber" : 66
      },
      "nodeContext" : "List<List<String>> CollSplitResult=CollUtil.split(list,size);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 674,
        "startLineNumber" : 18,
        "startColumnNumber" : 21,
        "endLineNumber" : 38,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  List<String> list=new ArrayList<>();\n  CollUtil.padRight(list,RandomUtil.randomInt(1000_0000,1_0000_0000),\"test\");\n  int size=RandomUtil.randomInt(10,1000);\n  Console.log(\"\\nlist size: {}\",list.size());\n  Console.log(\"partition size: {}\\n\",size);\n  StopWatch stopWatch=new StopWatch();\n  stopWatch.start(\"CollUtil#split\");\n  List<List<String>> CollSplitResult=CollUtil.split(list,size);\n  stopWatch.stop();\n  stopWatch.start(\"ListUtil#split\");\n  List<List<String>> ListSplitResult=ListUtil.split(list,size);\n  stopWatch.stop();\n  Assert.assertEquals(CollSplitResult,ListSplitResult);\n  Console.log(stopWatch.prettyPrint());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 712,
        "startLineNumber" : 16,
        "startColumnNumber" : 1,
        "endLineNumber" : 38,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test @Ignore public void split(){\n  List<String> list=new ArrayList<>();\n  CollUtil.padRight(list,RandomUtil.randomInt(1000_0000,1_0000_0000),\"test\");\n  int size=RandomUtil.randomInt(10,1000);\n  Console.log(\"\\nlist size: {}\",list.size());\n  Console.log(\"partition size: {}\\n\",size);\n  StopWatch stopWatch=new StopWatch();\n  stopWatch.start(\"CollUtil#split\");\n  List<List<String>> CollSplitResult=CollUtil.split(list,size);\n  stopWatch.stop();\n  stopWatch.start(\"ListUtil#split\");\n  List<List<String>> ListSplitResult=ListUtil.split(list,size);\n  stopWatch.stop();\n  Assert.assertEquals(CollSplitResult,ListSplitResult);\n  Console.log(stopWatch.prettyPrint());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 126,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 28,
        "startColumnNumber" : 2,
        "endLineNumber" : 28,
        "endColumnNumber" : 66
      },
      "nodeContext" : "List<List<String>> CollSplitResult=CollUtil.split(list,size);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.lang.String>"
  }, {
    "nodeContext" : "list",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 32,
      "startColumnNumber" : 54,
      "endLineNumber" : 32,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 32,
        "startColumnNumber" : 39,
        "endLineNumber" : 32,
        "endColumnNumber" : 65
      },
      "nodeContext" : "ListUtil.split(list,size)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 32,
        "startColumnNumber" : 21,
        "endLineNumber" : 32,
        "endColumnNumber" : 65
      },
      "nodeContext" : "ListSplitResult=ListUtil.split(list,size)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 32,
        "startColumnNumber" : 2,
        "endLineNumber" : 32,
        "endColumnNumber" : 66
      },
      "nodeContext" : "List<List<String>> ListSplitResult=ListUtil.split(list,size);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 674,
        "startLineNumber" : 18,
        "startColumnNumber" : 21,
        "endLineNumber" : 38,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  List<String> list=new ArrayList<>();\n  CollUtil.padRight(list,RandomUtil.randomInt(1000_0000,1_0000_0000),\"test\");\n  int size=RandomUtil.randomInt(10,1000);\n  Console.log(\"\\nlist size: {}\",list.size());\n  Console.log(\"partition size: {}\\n\",size);\n  StopWatch stopWatch=new StopWatch();\n  stopWatch.start(\"CollUtil#split\");\n  List<List<String>> CollSplitResult=CollUtil.split(list,size);\n  stopWatch.stop();\n  stopWatch.start(\"ListUtil#split\");\n  List<List<String>> ListSplitResult=ListUtil.split(list,size);\n  stopWatch.stop();\n  Assert.assertEquals(CollSplitResult,ListSplitResult);\n  Console.log(stopWatch.prettyPrint());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 712,
        "startLineNumber" : 16,
        "startColumnNumber" : 1,
        "endLineNumber" : 38,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test @Ignore public void split(){\n  List<String> list=new ArrayList<>();\n  CollUtil.padRight(list,RandomUtil.randomInt(1000_0000,1_0000_0000),\"test\");\n  int size=RandomUtil.randomInt(10,1000);\n  Console.log(\"\\nlist size: {}\",list.size());\n  Console.log(\"partition size: {}\\n\",size);\n  StopWatch stopWatch=new StopWatch();\n  stopWatch.start(\"CollUtil#split\");\n  List<List<String>> CollSplitResult=CollUtil.split(list,size);\n  stopWatch.stop();\n  stopWatch.start(\"ListUtil#split\");\n  List<List<String>> ListSplitResult=ListUtil.split(list,size);\n  stopWatch.stop();\n  Assert.assertEquals(CollSplitResult,ListSplitResult);\n  Console.log(stopWatch.prettyPrint());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 126,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 32,
        "startColumnNumber" : 2,
        "endLineNumber" : 32,
        "endColumnNumber" : 66
      },
      "nodeContext" : "List<List<String>> ListSplitResult=ListUtil.split(list,size);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.List<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 20,
    "startColumnNumber" : 20,
    "endLineNumber" : 20,
    "endColumnNumber" : 24
  }, {
    "charLength" : 4,
    "startLineNumber" : 23,
    "startColumnNumber" : 33,
    "endLineNumber" : 23,
    "endColumnNumber" : 37
  }, {
    "charLength" : 4,
    "startLineNumber" : 28,
    "startColumnNumber" : 54,
    "endLineNumber" : 28,
    "endColumnNumber" : 58
  }, {
    "charLength" : 4,
    "startLineNumber" : 32,
    "startColumnNumber" : 54,
    "endLineNumber" : 32,
    "endColumnNumber" : 58
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  } ]
}