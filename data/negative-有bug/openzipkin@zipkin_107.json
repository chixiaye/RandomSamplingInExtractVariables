{
  "id" : 107,
  "expression" : "\"$.['gauge.zipkin_collector.message_bytes.http']\"",
  "projectName" : "openzipkin@zipkin",
  "commitID" : "f02a993656f506277ca83737ddf494ed45fde4b3",
  "filePath" : "/zipkin-server/src/test/java/zipkin/server/ZipkinServerIntegrationTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"$.['gauge.zipkin_collector.message_bytes.http']\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 49,
      "startLineNumber" : 77,
      "startColumnNumber" : 28,
      "endLineNumber" : 77,
      "endColumnNumber" : 77
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 77,
        "startColumnNumber" : 19,
        "endLineNumber" : 77,
        "endColumnNumber" : 78
      },
      "nodeContext" : "jsonPath(\"$.['gauge.zipkin_collector.message_bytes.http']\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 77,
        "startColumnNumber" : 19,
        "endLineNumber" : 78,
        "endColumnNumber" : 47
      },
      "nodeContext" : "jsonPath(\"$.['gauge.zipkin_collector.message_bytes.http']\").value(Double.valueOf(body.length))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 388,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 48
      },
      "nodeContext" : "mockMvc.perform(get(\"/metrics\")).andExpect(status().isOk()).andExpect(jsonPath(\"$.['counter.zipkin_collector.messages.http']\").value(2)).andExpect(jsonPath(\"$.['counter.zipkin_collector.bytes.http']\").value(body.length * 2)).andExpect(jsonPath(\"$.['gauge.zipkin_collector.message_bytes.http']\").value(Double.valueOf(body.length)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 45,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 506,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 79,
        "endColumnNumber" : 97
      },
      "nodeContext" : "mockMvc.perform(get(\"/metrics\")).andExpect(status().isOk()).andExpect(jsonPath(\"$.['counter.zipkin_collector.messages.http']\").value(2)).andExpect(jsonPath(\"$.['counter.zipkin_collector.bytes.http']\").value(body.length * 2)).andExpect(jsonPath(\"$.['gauge.zipkin_collector.message_bytes.http']\").value(Double.valueOf(body.length))).andExpect(jsonPath(\"$.['counter.zipkin_collector.spans.http']\").value(TRACE.size() * 2))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 57,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 635,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 81,
        "endColumnNumber" : 49
      },
      "nodeContext" : "mockMvc.perform(get(\"/metrics\")).andExpect(status().isOk()).andExpect(jsonPath(\"$.['counter.zipkin_collector.messages.http']\").value(2)).andExpect(jsonPath(\"$.['counter.zipkin_collector.bytes.http']\").value(body.length * 2)).andExpect(jsonPath(\"$.['gauge.zipkin_collector.message_bytes.http']\").value(Double.valueOf(body.length))).andExpect(jsonPath(\"$.['counter.zipkin_collector.spans.http']\").value(TRACE.size() * 2)).andExpect(jsonPath(\"$.['gauge.zipkin_collector.message_spans.http']\").value(Double.valueOf(TRACE.size())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 70,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 636,
        "startLineNumber" : 72,
        "startColumnNumber" : 4,
        "endLineNumber" : 81,
        "endColumnNumber" : 50
      },
      "nodeContext" : "mockMvc.perform(get(\"/metrics\")).andExpect(status().isOk()).andExpect(jsonPath(\"$.['counter.zipkin_collector.messages.http']\").value(2)).andExpect(jsonPath(\"$.['counter.zipkin_collector.bytes.http']\").value(body.length * 2)).andExpect(jsonPath(\"$.['gauge.zipkin_collector.message_bytes.http']\").value(Double.valueOf(body.length))).andExpect(jsonPath(\"$.['counter.zipkin_collector.spans.http']\").value(TRACE.size() * 2)).andExpect(jsonPath(\"$.['gauge.zipkin_collector.message_spans.http']\").value(Double.valueOf(TRACE.size())));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 71,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 832,
        "startLineNumber" : 67,
        "startColumnNumber" : 59,
        "endLineNumber" : 82,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  byte[] body=Codec.JSON.writeSpans(TRACE);\n  mockMvc.perform(post(\"/api/v1/spans\").content(body));\n  mockMvc.perform(post(\"/api/v1/spans\").content(body));\n  mockMvc.perform(get(\"/metrics\")).andExpect(status().isOk()).andExpect(jsonPath(\"$.['counter.zipkin_collector.messages.http']\").value(2)).andExpect(jsonPath(\"$.['counter.zipkin_collector.bytes.http']\").value(body.length * 2)).andExpect(jsonPath(\"$.['gauge.zipkin_collector.message_bytes.http']\").value(Double.valueOf(body.length))).andExpect(jsonPath(\"$.['counter.zipkin_collector.spans.http']\").value(TRACE.size() * 2)).andExpect(jsonPath(\"$.['gauge.zipkin_collector.message_spans.http']\").value(Double.valueOf(TRACE.size())));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 897,
        "startLineNumber" : 66,
        "startColumnNumber" : 2,
        "endLineNumber" : 82,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void writeSpans_updatesMetrics() throws Exception {\n  byte[] body=Codec.JSON.writeSpans(TRACE);\n  mockMvc.perform(post(\"/api/v1/spans\").content(body));\n  mockMvc.perform(post(\"/api/v1/spans\").content(body));\n  mockMvc.perform(get(\"/metrics\")).andExpect(status().isOk()).andExpect(jsonPath(\"$.['counter.zipkin_collector.messages.http']\").value(2)).andExpect(jsonPath(\"$.['counter.zipkin_collector.bytes.http']\").value(body.length * 2)).andExpect(jsonPath(\"$.['gauge.zipkin_collector.message_bytes.http']\").value(Double.valueOf(body.length))).andExpect(jsonPath(\"$.['counter.zipkin_collector.spans.http']\").value(TRACE.size() * 2)).andExpect(jsonPath(\"$.['gauge.zipkin_collector.message_spans.http']\").value(Double.valueOf(TRACE.size())));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 112,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 77,
        "startColumnNumber" : 19,
        "endLineNumber" : 77,
        "endColumnNumber" : 78
      },
      "nodeContext" : "jsonPath(\"$.['gauge.zipkin_collector.message_bytes.http']\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 6,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 49,
    "startLineNumber" : 77,
    "startColumnNumber" : 28,
    "endLineNumber" : 77,
    "endColumnNumber" : 77
  } ],
  "layoutRelationDataList" : [ ]
}