{
  "id" : 162,
  "expression" : "timestamp == null",
  "projectName" : "openzipkin@zipkin",
  "commitID" : "f02a993656f506277ca83737ddf494ed45fde4b3",
  "filePath" : "/zipkin/src/main/java/zipkin2/internal/V2SpanReader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "timestamp == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 76,
      "startColumnNumber" : 14,
      "endLineNumber" : 76,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 76,
        "startColumnNumber" : 14,
        "endLineNumber" : 76,
        "endColumnNumber" : 48
      },
      "nodeContext" : "timestamp == null || value == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 76,
        "startColumnNumber" : 10,
        "endLineNumber" : 78,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (timestamp == null || value == null) {\n  throw new IllegalArgumentException(\"Incomplete annotation at \" + reader.getPath());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 695,
        "startLineNumber" : 62,
        "startColumnNumber" : 33,
        "endLineNumber" : 81,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  reader.beginObject();\n  Long timestamp=null;\n  String value=null;\n  while (reader.hasNext()) {\n    nextName=reader.nextName();\n    if (nextName.equals(\"timestamp\")) {\n      timestamp=reader.nextLong();\n    }\n else     if (nextName.equals(\"value\")) {\n      value=reader.nextString();\n    }\n else {\n      reader.skipValue();\n    }\n  }\n  if (timestamp == null || value == null) {\n    throw new IllegalArgumentException(\"Incomplete annotation at \" + reader.getPath());\n  }\n  reader.endObject();\n  builder.addAnnotation(timestamp,value);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 720,
        "startLineNumber" : 62,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (reader.hasNext()) {\n  reader.beginObject();\n  Long timestamp=null;\n  String value=null;\n  while (reader.hasNext()) {\n    nextName=reader.nextName();\n    if (nextName.equals(\"timestamp\")) {\n      timestamp=reader.nextLong();\n    }\n else     if (nextName.equals(\"value\")) {\n      value=reader.nextString();\n    }\n else {\n      reader.skipValue();\n    }\n  }\n  if (timestamp == null || value == null) {\n    throw new IllegalArgumentException(\"Incomplete annotation at \" + reader.getPath());\n  }\n  reader.endObject();\n  builder.addAnnotation(timestamp,value);\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 89,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 794,
        "startLineNumber" : 60,
        "startColumnNumber" : 49,
        "endLineNumber" : 83,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  reader.beginArray();\n  while (reader.hasNext()) {\n    reader.beginObject();\n    Long timestamp=null;\n    String value=null;\n    while (reader.hasNext()) {\n      nextName=reader.nextName();\n      if (nextName.equals(\"timestamp\")) {\n        timestamp=reader.nextLong();\n      }\n else       if (nextName.equals(\"value\")) {\n        value=reader.nextString();\n      }\n else {\n        reader.skipValue();\n      }\n    }\n    if (timestamp == null || value == null) {\n      throw new IllegalArgumentException(\"Incomplete annotation at \" + reader.getPath());\n    }\n    reader.endObject();\n    builder.addAnnotation(timestamp,value);\n  }\n  reader.endArray();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1446,
        "startLineNumber" : 60,
        "startColumnNumber" : 13,
        "endLineNumber" : 99,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (nextName.equals(\"annotations\")) {\n  reader.beginArray();\n  while (reader.hasNext()) {\n    reader.beginObject();\n    Long timestamp=null;\n    String value=null;\n    while (reader.hasNext()) {\n      nextName=reader.nextName();\n      if (nextName.equals(\"timestamp\")) {\n        timestamp=reader.nextLong();\n      }\n else       if (nextName.equals(\"value\")) {\n        value=reader.nextString();\n      }\n else {\n        reader.skipValue();\n      }\n    }\n    if (timestamp == null || value == null) {\n      throw new IllegalArgumentException(\"Incomplete annotation at \" + reader.getPath());\n    }\n    reader.endObject();\n    builder.addAnnotation(timestamp,value);\n  }\n  reader.endArray();\n}\n else if (nextName.equals(\"tags\")) {\n  reader.beginObject();\n  while (reader.hasNext()) {\n    String key=reader.nextName();\n    if (reader.peekNull()) {\n      throw new IllegalArgumentException(\"No value at \" + reader.getPath());\n    }\n    builder.putTag(key,reader.nextString());\n  }\n  reader.endObject();\n}\n else if (nextName.equals(\"debug\")) {\n  if (reader.nextBoolean())   builder.debug(true);\n}\n else if (nextName.equals(\"shared\")) {\n  if (reader.nextBoolean())   builder.shared(true);\n}\n else {\n  reader.skipValue();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 187,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1566,
        "startLineNumber" : 58,
        "startColumnNumber" : 13,
        "endLineNumber" : 99,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (nextName.equals(\"remoteEndpoint\")) {\n  builder.remoteEndpoint(ENDPOINT_READER.fromJson(reader));\n}\n else if (nextName.equals(\"annotations\")) {\n  reader.beginArray();\n  while (reader.hasNext()) {\n    reader.beginObject();\n    Long timestamp=null;\n    String value=null;\n    while (reader.hasNext()) {\n      nextName=reader.nextName();\n      if (nextName.equals(\"timestamp\")) {\n        timestamp=reader.nextLong();\n      }\n else       if (nextName.equals(\"value\")) {\n        value=reader.nextString();\n      }\n else {\n        reader.skipValue();\n      }\n    }\n    if (timestamp == null || value == null) {\n      throw new IllegalArgumentException(\"Incomplete annotation at \" + reader.getPath());\n    }\n    reader.endObject();\n    builder.addAnnotation(timestamp,value);\n  }\n  reader.endArray();\n}\n else if (nextName.equals(\"tags\")) {\n  reader.beginObject();\n  while (reader.hasNext()) {\n    String key=reader.nextName();\n    if (reader.peekNull()) {\n      throw new IllegalArgumentException(\"No value at \" + reader.getPath());\n    }\n    builder.putTag(key,reader.nextString());\n  }\n  reader.endObject();\n}\n else if (nextName.equals(\"debug\")) {\n  if (reader.nextBoolean())   builder.debug(true);\n}\n else if (nextName.equals(\"shared\")) {\n  if (reader.nextBoolean())   builder.shared(true);\n}\n else {\n  reader.skipValue();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 201,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1684,
        "startLineNumber" : 56,
        "startColumnNumber" : 13,
        "endLineNumber" : 99,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (nextName.equals(\"localEndpoint\")) {\n  builder.localEndpoint(ENDPOINT_READER.fromJson(reader));\n}\n else if (nextName.equals(\"remoteEndpoint\")) {\n  builder.remoteEndpoint(ENDPOINT_READER.fromJson(reader));\n}\n else if (nextName.equals(\"annotations\")) {\n  reader.beginArray();\n  while (reader.hasNext()) {\n    reader.beginObject();\n    Long timestamp=null;\n    String value=null;\n    while (reader.hasNext()) {\n      nextName=reader.nextName();\n      if (nextName.equals(\"timestamp\")) {\n        timestamp=reader.nextLong();\n      }\n else       if (nextName.equals(\"value\")) {\n        value=reader.nextString();\n      }\n else {\n        reader.skipValue();\n      }\n    }\n    if (timestamp == null || value == null) {\n      throw new IllegalArgumentException(\"Incomplete annotation at \" + reader.getPath());\n    }\n    reader.endObject();\n    builder.addAnnotation(timestamp,value);\n  }\n  reader.endArray();\n}\n else if (nextName.equals(\"tags\")) {\n  reader.beginObject();\n  while (reader.hasNext()) {\n    String key=reader.nextName();\n    if (reader.peekNull()) {\n      throw new IllegalArgumentException(\"No value at \" + reader.getPath());\n    }\n    builder.putTag(key,reader.nextString());\n  }\n  reader.endObject();\n}\n else if (nextName.equals(\"debug\")) {\n  if (reader.nextBoolean())   builder.debug(true);\n}\n else if (nextName.equals(\"shared\")) {\n  if (reader.nextBoolean())   builder.shared(true);\n}\n else {\n  reader.skipValue();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 215,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1777,
        "startLineNumber" : 54,
        "startColumnNumber" : 13,
        "endLineNumber" : 99,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (nextName.equals(\"duration\")) {\n  builder.duration(reader.nextLong());\n}\n else if (nextName.equals(\"localEndpoint\")) {\n  builder.localEndpoint(ENDPOINT_READER.fromJson(reader));\n}\n else if (nextName.equals(\"remoteEndpoint\")) {\n  builder.remoteEndpoint(ENDPOINT_READER.fromJson(reader));\n}\n else if (nextName.equals(\"annotations\")) {\n  reader.beginArray();\n  while (reader.hasNext()) {\n    reader.beginObject();\n    Long timestamp=null;\n    String value=null;\n    while (reader.hasNext()) {\n      nextName=reader.nextName();\n      if (nextName.equals(\"timestamp\")) {\n        timestamp=reader.nextLong();\n      }\n else       if (nextName.equals(\"value\")) {\n        value=reader.nextString();\n      }\n else {\n        reader.skipValue();\n      }\n    }\n    if (timestamp == null || value == null) {\n      throw new IllegalArgumentException(\"Incomplete annotation at \" + reader.getPath());\n    }\n    reader.endObject();\n    builder.addAnnotation(timestamp,value);\n  }\n  reader.endArray();\n}\n else if (nextName.equals(\"tags\")) {\n  reader.beginObject();\n  while (reader.hasNext()) {\n    String key=reader.nextName();\n    if (reader.peekNull()) {\n      throw new IllegalArgumentException(\"No value at \" + reader.getPath());\n    }\n    builder.putTag(key,reader.nextString());\n  }\n  reader.endObject();\n}\n else if (nextName.equals(\"debug\")) {\n  if (reader.nextBoolean())   builder.debug(true);\n}\n else if (nextName.equals(\"shared\")) {\n  if (reader.nextBoolean())   builder.shared(true);\n}\n else {\n  reader.skipValue();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 228,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1872,
        "startLineNumber" : 52,
        "startColumnNumber" : 13,
        "endLineNumber" : 99,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (nextName.equals(\"timestamp\")) {\n  builder.timestamp(reader.nextLong());\n}\n else if (nextName.equals(\"duration\")) {\n  builder.duration(reader.nextLong());\n}\n else if (nextName.equals(\"localEndpoint\")) {\n  builder.localEndpoint(ENDPOINT_READER.fromJson(reader));\n}\n else if (nextName.equals(\"remoteEndpoint\")) {\n  builder.remoteEndpoint(ENDPOINT_READER.fromJson(reader));\n}\n else if (nextName.equals(\"annotations\")) {\n  reader.beginArray();\n  while (reader.hasNext()) {\n    reader.beginObject();\n    Long timestamp=null;\n    String value=null;\n    while (reader.hasNext()) {\n      nextName=reader.nextName();\n      if (nextName.equals(\"timestamp\")) {\n        timestamp=reader.nextLong();\n      }\n else       if (nextName.equals(\"value\")) {\n        value=reader.nextString();\n      }\n else {\n        reader.skipValue();\n      }\n    }\n    if (timestamp == null || value == null) {\n      throw new IllegalArgumentException(\"Incomplete annotation at \" + reader.getPath());\n    }\n    reader.endObject();\n    builder.addAnnotation(timestamp,value);\n  }\n  reader.endArray();\n}\n else if (nextName.equals(\"tags\")) {\n  reader.beginObject();\n  while (reader.hasNext()) {\n    String key=reader.nextName();\n    if (reader.peekNull()) {\n      throw new IllegalArgumentException(\"No value at \" + reader.getPath());\n    }\n    builder.putTag(key,reader.nextString());\n  }\n  reader.endObject();\n}\n else if (nextName.equals(\"debug\")) {\n  if (reader.nextBoolean())   builder.debug(true);\n}\n else if (nextName.equals(\"shared\")) {\n  if (reader.nextBoolean())   builder.shared(true);\n}\n else {\n  reader.skipValue();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 241,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1959,
        "startLineNumber" : 50,
        "startColumnNumber" : 13,
        "endLineNumber" : 99,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (nextName.equals(\"name\")) {\n  builder.name(reader.nextString());\n}\n else if (nextName.equals(\"timestamp\")) {\n  builder.timestamp(reader.nextLong());\n}\n else if (nextName.equals(\"duration\")) {\n  builder.duration(reader.nextLong());\n}\n else if (nextName.equals(\"localEndpoint\")) {\n  builder.localEndpoint(ENDPOINT_READER.fromJson(reader));\n}\n else if (nextName.equals(\"remoteEndpoint\")) {\n  builder.remoteEndpoint(ENDPOINT_READER.fromJson(reader));\n}\n else if (nextName.equals(\"annotations\")) {\n  reader.beginArray();\n  while (reader.hasNext()) {\n    reader.beginObject();\n    Long timestamp=null;\n    String value=null;\n    while (reader.hasNext()) {\n      nextName=reader.nextName();\n      if (nextName.equals(\"timestamp\")) {\n        timestamp=reader.nextLong();\n      }\n else       if (nextName.equals(\"value\")) {\n        value=reader.nextString();\n      }\n else {\n        reader.skipValue();\n      }\n    }\n    if (timestamp == null || value == null) {\n      throw new IllegalArgumentException(\"Incomplete annotation at \" + reader.getPath());\n    }\n    reader.endObject();\n    builder.addAnnotation(timestamp,value);\n  }\n  reader.endArray();\n}\n else if (nextName.equals(\"tags\")) {\n  reader.beginObject();\n  while (reader.hasNext()) {\n    String key=reader.nextName();\n    if (reader.peekNull()) {\n      throw new IllegalArgumentException(\"No value at \" + reader.getPath());\n    }\n    builder.putTag(key,reader.nextString());\n  }\n  reader.endObject();\n}\n else if (nextName.equals(\"debug\")) {\n  if (reader.nextBoolean())   builder.debug(true);\n}\n else if (nextName.equals(\"shared\")) {\n  if (reader.nextBoolean())   builder.shared(true);\n}\n else {\n  reader.skipValue();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 254,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2065,
        "startLineNumber" : 48,
        "startColumnNumber" : 13,
        "endLineNumber" : 99,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (nextName.equals(\"kind\")) {\n  builder.kind(Span.Kind.valueOf(reader.nextString()));\n}\n else if (nextName.equals(\"name\")) {\n  builder.name(reader.nextString());\n}\n else if (nextName.equals(\"timestamp\")) {\n  builder.timestamp(reader.nextLong());\n}\n else if (nextName.equals(\"duration\")) {\n  builder.duration(reader.nextLong());\n}\n else if (nextName.equals(\"localEndpoint\")) {\n  builder.localEndpoint(ENDPOINT_READER.fromJson(reader));\n}\n else if (nextName.equals(\"remoteEndpoint\")) {\n  builder.remoteEndpoint(ENDPOINT_READER.fromJson(reader));\n}\n else if (nextName.equals(\"annotations\")) {\n  reader.beginArray();\n  while (reader.hasNext()) {\n    reader.beginObject();\n    Long timestamp=null;\n    String value=null;\n    while (reader.hasNext()) {\n      nextName=reader.nextName();\n      if (nextName.equals(\"timestamp\")) {\n        timestamp=reader.nextLong();\n      }\n else       if (nextName.equals(\"value\")) {\n        value=reader.nextString();\n      }\n else {\n        reader.skipValue();\n      }\n    }\n    if (timestamp == null || value == null) {\n      throw new IllegalArgumentException(\"Incomplete annotation at \" + reader.getPath());\n    }\n    reader.endObject();\n    builder.addAnnotation(timestamp,value);\n  }\n  reader.endArray();\n}\n else if (nextName.equals(\"tags\")) {\n  reader.beginObject();\n  while (reader.hasNext()) {\n    String key=reader.nextName();\n    if (reader.peekNull()) {\n      throw new IllegalArgumentException(\"No value at \" + reader.getPath());\n    }\n    builder.putTag(key,reader.nextString());\n  }\n  reader.endObject();\n}\n else if (nextName.equals(\"debug\")) {\n  if (reader.nextBoolean())   builder.debug(true);\n}\n else if (nextName.equals(\"shared\")) {\n  if (reader.nextBoolean())   builder.shared(true);\n}\n else {\n  reader.skipValue();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 272,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2160,
        "startLineNumber" : 46,
        "startColumnNumber" : 6,
        "endLineNumber" : 99,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (nextName.equals(\"parentId\")) {\n  builder.parentId(reader.nextString());\n}\n else if (nextName.equals(\"kind\")) {\n  builder.kind(Span.Kind.valueOf(reader.nextString()));\n}\n else if (nextName.equals(\"name\")) {\n  builder.name(reader.nextString());\n}\n else if (nextName.equals(\"timestamp\")) {\n  builder.timestamp(reader.nextLong());\n}\n else if (nextName.equals(\"duration\")) {\n  builder.duration(reader.nextLong());\n}\n else if (nextName.equals(\"localEndpoint\")) {\n  builder.localEndpoint(ENDPOINT_READER.fromJson(reader));\n}\n else if (nextName.equals(\"remoteEndpoint\")) {\n  builder.remoteEndpoint(ENDPOINT_READER.fromJson(reader));\n}\n else if (nextName.equals(\"annotations\")) {\n  reader.beginArray();\n  while (reader.hasNext()) {\n    reader.beginObject();\n    Long timestamp=null;\n    String value=null;\n    while (reader.hasNext()) {\n      nextName=reader.nextName();\n      if (nextName.equals(\"timestamp\")) {\n        timestamp=reader.nextLong();\n      }\n else       if (nextName.equals(\"value\")) {\n        value=reader.nextString();\n      }\n else {\n        reader.skipValue();\n      }\n    }\n    if (timestamp == null || value == null) {\n      throw new IllegalArgumentException(\"Incomplete annotation at \" + reader.getPath());\n    }\n    reader.endObject();\n    builder.addAnnotation(timestamp,value);\n  }\n  reader.endArray();\n}\n else if (nextName.equals(\"tags\")) {\n  reader.beginObject();\n  while (reader.hasNext()) {\n    String key=reader.nextName();\n    if (reader.peekNull()) {\n      throw new IllegalArgumentException(\"No value at \" + reader.getPath());\n    }\n    builder.putTag(key,reader.nextString());\n  }\n  reader.endObject();\n}\n else if (nextName.equals(\"debug\")) {\n  if (reader.nextBoolean())   builder.debug(true);\n}\n else if (nextName.equals(\"shared\")) {\n  if (reader.nextBoolean())   builder.shared(true);\n}\n else {\n  reader.skipValue();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 285,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 2549,
        "startLineNumber" : 32,
        "startColumnNumber" : 29,
        "endLineNumber" : 100,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String nextName=reader.nextName();\n  if (nextName.equals(\"traceId\")) {\n    builder.traceId(reader.nextString());\n    continue;\n  }\n else   if (nextName.equals(\"id\")) {\n    builder.id(reader.nextString());\n    continue;\n  }\n else   if (reader.peekNull()) {\n    reader.skipValue();\n    continue;\n  }\n  if (nextName.equals(\"parentId\")) {\n    builder.parentId(reader.nextString());\n  }\n else   if (nextName.equals(\"kind\")) {\n    builder.kind(Span.Kind.valueOf(reader.nextString()));\n  }\n else   if (nextName.equals(\"name\")) {\n    builder.name(reader.nextString());\n  }\n else   if (nextName.equals(\"timestamp\")) {\n    builder.timestamp(reader.nextLong());\n  }\n else   if (nextName.equals(\"duration\")) {\n    builder.duration(reader.nextLong());\n  }\n else   if (nextName.equals(\"localEndpoint\")) {\n    builder.localEndpoint(ENDPOINT_READER.fromJson(reader));\n  }\n else   if (nextName.equals(\"remoteEndpoint\")) {\n    builder.remoteEndpoint(ENDPOINT_READER.fromJson(reader));\n  }\n else   if (nextName.equals(\"annotations\")) {\n    reader.beginArray();\n    while (reader.hasNext()) {\n      reader.beginObject();\n      Long timestamp=null;\n      String value=null;\n      while (reader.hasNext()) {\n        nextName=reader.nextName();\n        if (nextName.equals(\"timestamp\")) {\n          timestamp=reader.nextLong();\n        }\n else         if (nextName.equals(\"value\")) {\n          value=reader.nextString();\n        }\n else {\n          reader.skipValue();\n        }\n      }\n      if (timestamp == null || value == null) {\n        throw new IllegalArgumentException(\"Incomplete annotation at \" + reader.getPath());\n      }\n      reader.endObject();\n      builder.addAnnotation(timestamp,value);\n    }\n    reader.endArray();\n  }\n else   if (nextName.equals(\"tags\")) {\n    reader.beginObject();\n    while (reader.hasNext()) {\n      String key=reader.nextName();\n      if (reader.peekNull()) {\n        throw new IllegalArgumentException(\"No value at \" + reader.getPath());\n      }\n      builder.putTag(key,reader.nextString());\n    }\n    reader.endObject();\n  }\n else   if (nextName.equals(\"debug\")) {\n    if (reader.nextBoolean())     builder.debug(true);\n  }\n else   if (nextName.equals(\"shared\")) {\n    if (reader.nextBoolean())     builder.shared(true);\n  }\n else {\n    reader.skipValue();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 332,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2574,
        "startLineNumber" : 32,
        "startColumnNumber" : 4,
        "endLineNumber" : 100,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (reader.hasNext()) {\n  String nextName=reader.nextName();\n  if (nextName.equals(\"traceId\")) {\n    builder.traceId(reader.nextString());\n    continue;\n  }\n else   if (nextName.equals(\"id\")) {\n    builder.id(reader.nextString());\n    continue;\n  }\n else   if (reader.peekNull()) {\n    reader.skipValue();\n    continue;\n  }\n  if (nextName.equals(\"parentId\")) {\n    builder.parentId(reader.nextString());\n  }\n else   if (nextName.equals(\"kind\")) {\n    builder.kind(Span.Kind.valueOf(reader.nextString()));\n  }\n else   if (nextName.equals(\"name\")) {\n    builder.name(reader.nextString());\n  }\n else   if (nextName.equals(\"timestamp\")) {\n    builder.timestamp(reader.nextLong());\n  }\n else   if (nextName.equals(\"duration\")) {\n    builder.duration(reader.nextLong());\n  }\n else   if (nextName.equals(\"localEndpoint\")) {\n    builder.localEndpoint(ENDPOINT_READER.fromJson(reader));\n  }\n else   if (nextName.equals(\"remoteEndpoint\")) {\n    builder.remoteEndpoint(ENDPOINT_READER.fromJson(reader));\n  }\n else   if (nextName.equals(\"annotations\")) {\n    reader.beginArray();\n    while (reader.hasNext()) {\n      reader.beginObject();\n      Long timestamp=null;\n      String value=null;\n      while (reader.hasNext()) {\n        nextName=reader.nextName();\n        if (nextName.equals(\"timestamp\")) {\n          timestamp=reader.nextLong();\n        }\n else         if (nextName.equals(\"value\")) {\n          value=reader.nextString();\n        }\n else {\n          reader.skipValue();\n        }\n      }\n      if (timestamp == null || value == null) {\n        throw new IllegalArgumentException(\"Incomplete annotation at \" + reader.getPath());\n      }\n      reader.endObject();\n      builder.addAnnotation(timestamp,value);\n    }\n    reader.endArray();\n  }\n else   if (nextName.equals(\"tags\")) {\n    reader.beginObject();\n    while (reader.hasNext()) {\n      String key=reader.nextName();\n      if (reader.peekNull()) {\n        throw new IllegalArgumentException(\"No value at \" + reader.getPath());\n      }\n      builder.putTag(key,reader.nextString());\n    }\n    reader.endObject();\n  }\n else   if (nextName.equals(\"debug\")) {\n    if (reader.nextBoolean())     builder.debug(true);\n  }\n else   if (nextName.equals(\"shared\")) {\n    if (reader.nextBoolean())     builder.shared(true);\n  }\n else {\n    reader.skipValue();\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 336,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2766,
        "startLineNumber" : 25,
        "startColumnNumber" : 71,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (builder == null) {\n    builder=Span.newBuilder();\n  }\n else {\n    builder.clear();\n  }\n  reader.beginObject();\n  while (reader.hasNext()) {\n    String nextName=reader.nextName();\n    if (nextName.equals(\"traceId\")) {\n      builder.traceId(reader.nextString());\n      continue;\n    }\n else     if (nextName.equals(\"id\")) {\n      builder.id(reader.nextString());\n      continue;\n    }\n else     if (reader.peekNull()) {\n      reader.skipValue();\n      continue;\n    }\n    if (nextName.equals(\"parentId\")) {\n      builder.parentId(reader.nextString());\n    }\n else     if (nextName.equals(\"kind\")) {\n      builder.kind(Span.Kind.valueOf(reader.nextString()));\n    }\n else     if (nextName.equals(\"name\")) {\n      builder.name(reader.nextString());\n    }\n else     if (nextName.equals(\"timestamp\")) {\n      builder.timestamp(reader.nextLong());\n    }\n else     if (nextName.equals(\"duration\")) {\n      builder.duration(reader.nextLong());\n    }\n else     if (nextName.equals(\"localEndpoint\")) {\n      builder.localEndpoint(ENDPOINT_READER.fromJson(reader));\n    }\n else     if (nextName.equals(\"remoteEndpoint\")) {\n      builder.remoteEndpoint(ENDPOINT_READER.fromJson(reader));\n    }\n else     if (nextName.equals(\"annotations\")) {\n      reader.beginArray();\n      while (reader.hasNext()) {\n        reader.beginObject();\n        Long timestamp=null;\n        String value=null;\n        while (reader.hasNext()) {\n          nextName=reader.nextName();\n          if (nextName.equals(\"timestamp\")) {\n            timestamp=reader.nextLong();\n          }\n else           if (nextName.equals(\"value\")) {\n            value=reader.nextString();\n          }\n else {\n            reader.skipValue();\n          }\n        }\n        if (timestamp == null || value == null) {\n          throw new IllegalArgumentException(\"Incomplete annotation at \" + reader.getPath());\n        }\n        reader.endObject();\n        builder.addAnnotation(timestamp,value);\n      }\n      reader.endArray();\n    }\n else     if (nextName.equals(\"tags\")) {\n      reader.beginObject();\n      while (reader.hasNext()) {\n        String key=reader.nextName();\n        if (reader.peekNull()) {\n          throw new IllegalArgumentException(\"No value at \" + reader.getPath());\n        }\n        builder.putTag(key,reader.nextString());\n      }\n      reader.endObject();\n    }\n else     if (nextName.equals(\"debug\")) {\n      if (reader.nextBoolean())       builder.debug(true);\n    }\n else     if (nextName.equals(\"shared\")) {\n      if (reader.nextBoolean())       builder.shared(true);\n    }\n else {\n      reader.skipValue();\n    }\n  }\n  reader.endObject();\n  return builder.build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 365,
      "astHeight" : 23
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2835,
        "startLineNumber" : 25,
        "startColumnNumber" : 2,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public Span fromJson(JsonReader reader) throws IOException {\n  if (builder == null) {\n    builder=Span.newBuilder();\n  }\n else {\n    builder.clear();\n  }\n  reader.beginObject();\n  while (reader.hasNext()) {\n    String nextName=reader.nextName();\n    if (nextName.equals(\"traceId\")) {\n      builder.traceId(reader.nextString());\n      continue;\n    }\n else     if (nextName.equals(\"id\")) {\n      builder.id(reader.nextString());\n      continue;\n    }\n else     if (reader.peekNull()) {\n      reader.skipValue();\n      continue;\n    }\n    if (nextName.equals(\"parentId\")) {\n      builder.parentId(reader.nextString());\n    }\n else     if (nextName.equals(\"kind\")) {\n      builder.kind(Span.Kind.valueOf(reader.nextString()));\n    }\n else     if (nextName.equals(\"name\")) {\n      builder.name(reader.nextString());\n    }\n else     if (nextName.equals(\"timestamp\")) {\n      builder.timestamp(reader.nextLong());\n    }\n else     if (nextName.equals(\"duration\")) {\n      builder.duration(reader.nextLong());\n    }\n else     if (nextName.equals(\"localEndpoint\")) {\n      builder.localEndpoint(ENDPOINT_READER.fromJson(reader));\n    }\n else     if (nextName.equals(\"remoteEndpoint\")) {\n      builder.remoteEndpoint(ENDPOINT_READER.fromJson(reader));\n    }\n else     if (nextName.equals(\"annotations\")) {\n      reader.beginArray();\n      while (reader.hasNext()) {\n        reader.beginObject();\n        Long timestamp=null;\n        String value=null;\n        while (reader.hasNext()) {\n          nextName=reader.nextName();\n          if (nextName.equals(\"timestamp\")) {\n            timestamp=reader.nextLong();\n          }\n else           if (nextName.equals(\"value\")) {\n            value=reader.nextString();\n          }\n else {\n            reader.skipValue();\n          }\n        }\n        if (timestamp == null || value == null) {\n          throw new IllegalArgumentException(\"Incomplete annotation at \" + reader.getPath());\n        }\n        reader.endObject();\n        builder.addAnnotation(timestamp,value);\n      }\n      reader.endArray();\n    }\n else     if (nextName.equals(\"tags\")) {\n      reader.beginObject();\n      while (reader.hasNext()) {\n        String key=reader.nextName();\n        if (reader.peekNull()) {\n          throw new IllegalArgumentException(\"No value at \" + reader.getPath());\n        }\n        builder.putTag(key,reader.nextString());\n      }\n      reader.endObject();\n    }\n else     if (nextName.equals(\"debug\")) {\n      if (reader.nextBoolean())       builder.debug(true);\n    }\n else     if (nextName.equals(\"shared\")) {\n      if (reader.nextBoolean())       builder.shared(true);\n    }\n else {\n      reader.skipValue();\n    }\n  }\n  reader.endObject();\n  return builder.build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 378,
      "astHeight" : 24
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 76,
        "startColumnNumber" : 14,
        "endLineNumber" : 76,
        "endColumnNumber" : 48
      },
      "nodeContext" : "timestamp == null || value == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 76,
    "startColumnNumber" : 14,
    "endLineNumber" : 76,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ ]
}