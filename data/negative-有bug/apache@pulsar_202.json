{
  "id" : 202,
  "expression" : "errMesg",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-broker/src/test/java/org/apache/pulsar/broker/resourcegroup/ResourceGroupUsageAggregationTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "errMesg",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 126,
      "startColumnNumber" : 37,
      "endLineNumber" : 126,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 126,
        "startColumnNumber" : 12,
        "endLineNumber" : 126,
        "endColumnNumber" : 45
      },
      "nodeContext" : "Assert.assertTrue(false,errMesg)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 126,
        "startColumnNumber" : 12,
        "endLineNumber" : 126,
        "endColumnNumber" : 46
      },
      "nodeContext" : "Assert.assertTrue(false,errMesg);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 172,
        "startLineNumber" : 124,
        "startColumnNumber" : 42,
        "endLineNumber" : 127,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final String errMesg=String.format(\"Got exception while building consumer: ex={}\",p.getMessage());\n  Assert.assertTrue(false,errMesg);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 204,
        "startLineNumber" : 124,
        "startColumnNumber" : 10,
        "endLineNumber" : 127,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (PulsarClientException p) {\n  final String errMesg=String.format(\"Got exception while building consumer: ex={}\",p.getMessage());\n  Assert.assertTrue(false,errMesg);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 25,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 464,
        "startLineNumber" : 118,
        "startColumnNumber" : 8,
        "endLineNumber" : 127,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  consumer=pulsarClient.newConsumer().topic(topicString).subscriptionName(\"my-subscription\").subscriptionType(SubscriptionType.Shared).subscribe();\n}\n catch (PulsarClientException p) {\n  final String errMesg=String.format(\"Got exception while building consumer: ex={}\",p.getMessage());\n  Assert.assertTrue(false,errMesg);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 46,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3837,
        "startLineNumber" : 87,
        "startColumnNumber" : 82,
        "endLineNumber" : 179,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ResourceUsagePublisher ruP=new ResourceUsagePublisher(){\n    @Override public String getID(){\n      return \"\";\n    }\n    @Override public void fillResourceUsage(    ResourceUsage resourceUsage){\n    }\n  }\n;\n  ResourceUsageConsumer ruC=new ResourceUsageConsumer(){\n    @Override public String getID(){\n      return \"\";\n    }\n    @Override public void acceptResourceUsage(    String broker,    ResourceUsage resourceUsage){\n    }\n  }\n;\n  org.apache.pulsar.common.policies.data.ResourceGroup rgConfig=new org.apache.pulsar.common.policies.data.ResourceGroup();\n  final String rgName=\"runProduceConsume\";\n  rgConfig.setPublishRateInBytes(1500);\n  rgConfig.setPublishRateInMsgs(100);\n  rgConfig.setDispatchRateInBytes(4000);\n  rgConfig.setPublishRateInMsgs(500);\n  rgs.resourceGroupCreate(rgName,rgConfig,ruP,ruC);\n  Producer<byte[]> producer=null;\n  Consumer<byte[]> consumer=null;\n  producer=pulsarClient.newProducer().topic(topicString).create();\n  try {\n    consumer=pulsarClient.newConsumer().topic(topicString).subscriptionName(\"my-subscription\").subscriptionType(SubscriptionType.Shared).subscribe();\n  }\n catch (  PulsarClientException p) {\n    final String errMesg=String.format(\"Got exception while building consumer: ex={}\",p.getMessage());\n    Assert.assertTrue(false,errMesg);\n  }\n  final TopicName myTopic=TopicName.get(topicString);\n  final String tenantString=myTopic.getTenant();\n  final String nsString=myTopic.getNamespacePortion();\n  rgs.registerTenant(rgName,tenantString);\n  rgs.registerNameSpace(rgName,nsString);\n  final int NumMessagesToSend=10;\n  int sentNumBytes=0;\n  int sentNumMsgs=0;\n  int recvdNumBytes=0;\n  int recvdNumMsgs=0;\n  for (int ix=0; ix < NumMessagesToSend; ix++) {\n    MessageId prodMesgId=null;\n    byte[] mesg;\n    try {\n      mesg=String.format(\"Hi, ix={}\",ix).getBytes();\n      producer.send(mesg);\n      sentNumBytes+=mesg.length;\n      sentNumMsgs++;\n      this.verfyStats(topicString,rgName,sentNumBytes,sentNumMsgs,recvdNumBytes,recvdNumMsgs,true,false);\n    }\n catch (    PulsarClientException p) {\n      final String errMesg=String.format(\"Got exception while sending {}-th time: ex={}\",ix,p.getMessage());\n      Assert.assertTrue(false,errMesg);\n    }\n  }\n  producer.close();\n  this.verfyStats(topicString,rgName,sentNumBytes,sentNumMsgs,recvdNumBytes,recvdNumMsgs,true,false);\n  Message<byte[]> message=null;\n  while (recvdNumMsgs < sentNumMsgs) {\n    try {\n      message=consumer.receive();\n      recvdNumBytes+=message.getValue().length;\n    }\n catch (    PulsarClientException p) {\n      final String errMesg=String.format(\"Got exception in while receiving {}-th mesg at consumer: ex={}\",recvdNumMsgs,p.getMessage());\n      Assert.assertTrue(false,errMesg);\n    }\n    recvdNumMsgs++;\n  }\n  this.verfyStats(topicString,rgName,sentNumBytes,sentNumMsgs,recvdNumBytes,recvdNumMsgs,true,true);\n  consumer.close();\n  rgs.unRegisterTenant(rgName,tenantString);\n  rgs.unRegisterNameSpace(rgName,nsString);\n  rgs.resourceGroupDelete(rgName);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 472,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3915,
        "startLineNumber" : 87,
        "startColumnNumber" : 4,
        "endLineNumber" : 179,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void testProduceConsumeUsageOnRG(String topicString) throws Exception {\n  ResourceUsagePublisher ruP=new ResourceUsagePublisher(){\n    @Override public String getID(){\n      return \"\";\n    }\n    @Override public void fillResourceUsage(    ResourceUsage resourceUsage){\n    }\n  }\n;\n  ResourceUsageConsumer ruC=new ResourceUsageConsumer(){\n    @Override public String getID(){\n      return \"\";\n    }\n    @Override public void acceptResourceUsage(    String broker,    ResourceUsage resourceUsage){\n    }\n  }\n;\n  org.apache.pulsar.common.policies.data.ResourceGroup rgConfig=new org.apache.pulsar.common.policies.data.ResourceGroup();\n  final String rgName=\"runProduceConsume\";\n  rgConfig.setPublishRateInBytes(1500);\n  rgConfig.setPublishRateInMsgs(100);\n  rgConfig.setDispatchRateInBytes(4000);\n  rgConfig.setPublishRateInMsgs(500);\n  rgs.resourceGroupCreate(rgName,rgConfig,ruP,ruC);\n  Producer<byte[]> producer=null;\n  Consumer<byte[]> consumer=null;\n  producer=pulsarClient.newProducer().topic(topicString).create();\n  try {\n    consumer=pulsarClient.newConsumer().topic(topicString).subscriptionName(\"my-subscription\").subscriptionType(SubscriptionType.Shared).subscribe();\n  }\n catch (  PulsarClientException p) {\n    final String errMesg=String.format(\"Got exception while building consumer: ex={}\",p.getMessage());\n    Assert.assertTrue(false,errMesg);\n  }\n  final TopicName myTopic=TopicName.get(topicString);\n  final String tenantString=myTopic.getTenant();\n  final String nsString=myTopic.getNamespacePortion();\n  rgs.registerTenant(rgName,tenantString);\n  rgs.registerNameSpace(rgName,nsString);\n  final int NumMessagesToSend=10;\n  int sentNumBytes=0;\n  int sentNumMsgs=0;\n  int recvdNumBytes=0;\n  int recvdNumMsgs=0;\n  for (int ix=0; ix < NumMessagesToSend; ix++) {\n    MessageId prodMesgId=null;\n    byte[] mesg;\n    try {\n      mesg=String.format(\"Hi, ix={}\",ix).getBytes();\n      producer.send(mesg);\n      sentNumBytes+=mesg.length;\n      sentNumMsgs++;\n      this.verfyStats(topicString,rgName,sentNumBytes,sentNumMsgs,recvdNumBytes,recvdNumMsgs,true,false);\n    }\n catch (    PulsarClientException p) {\n      final String errMesg=String.format(\"Got exception while sending {}-th time: ex={}\",ix,p.getMessage());\n      Assert.assertTrue(false,errMesg);\n    }\n  }\n  producer.close();\n  this.verfyStats(topicString,rgName,sentNumBytes,sentNumMsgs,recvdNumBytes,recvdNumMsgs,true,false);\n  Message<byte[]> message=null;\n  while (recvdNumMsgs < sentNumMsgs) {\n    try {\n      message=consumer.receive();\n      recvdNumBytes+=message.getValue().length;\n    }\n catch (    PulsarClientException p) {\n      final String errMesg=String.format(\"Got exception in while receiving {}-th mesg at consumer: ex={}\",recvdNumMsgs,p.getMessage());\n      Assert.assertTrue(false,errMesg);\n    }\n    recvdNumMsgs++;\n  }\n  this.verfyStats(topicString,rgName,sentNumBytes,sentNumMsgs,recvdNumBytes,recvdNumMsgs,true,true);\n  consumer.close();\n  rgs.unRegisterTenant(rgName,tenantString);\n  rgs.unRegisterNameSpace(rgName,nsString);\n  rgs.resourceGroupDelete(rgName);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 482,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 126,
        "startColumnNumber" : 12,
        "endLineNumber" : 126,
        "endColumnNumber" : 46
      },
      "nodeContext" : "Assert.assertTrue(false,errMesg);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "errMesg",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 151,
      "startColumnNumber" : 41,
      "endLineNumber" : 151,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 151,
        "startColumnNumber" : 16,
        "endLineNumber" : 151,
        "endColumnNumber" : 49
      },
      "nodeContext" : "Assert.assertTrue(false,errMesg)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 151,
        "startColumnNumber" : 16,
        "endLineNumber" : 151,
        "endColumnNumber" : 50
      },
      "nodeContext" : "Assert.assertTrue(false,errMesg);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 189,
        "startLineNumber" : 149,
        "startColumnNumber" : 46,
        "endLineNumber" : 152,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  final String errMesg=String.format(\"Got exception while sending {}-th time: ex={}\",ix,p.getMessage());\n  Assert.assertTrue(false,errMesg);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 221,
        "startLineNumber" : 149,
        "startColumnNumber" : 14,
        "endLineNumber" : 152,
        "endColumnNumber" : 13
      },
      "nodeContext" : "catch (PulsarClientException p) {\n  final String errMesg=String.format(\"Got exception while sending {}-th time: ex={}\",ix,p.getMessage());\n  Assert.assertTrue(false,errMesg);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 543,
        "startLineNumber" : 143,
        "startColumnNumber" : 12,
        "endLineNumber" : 152,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  mesg=String.format(\"Hi, ix={}\",ix).getBytes();\n  producer.send(mesg);\n  sentNumBytes+=mesg.length;\n  sentNumMsgs++;\n  this.verfyStats(topicString,rgName,sentNumBytes,sentNumMsgs,recvdNumBytes,recvdNumMsgs,true,false);\n}\n catch (PulsarClientException p) {\n  final String errMesg=String.format(\"Got exception while sending {}-th time: ex={}\",ix,p.getMessage());\n  Assert.assertTrue(false,errMesg);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 64,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 633,
        "startLineNumber" : 140,
        "startColumnNumber" : 55,
        "endLineNumber" : 153,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  MessageId prodMesgId=null;\n  byte[] mesg;\n  try {\n    mesg=String.format(\"Hi, ix={}\",ix).getBytes();\n    producer.send(mesg);\n    sentNumBytes+=mesg.length;\n    sentNumMsgs++;\n    this.verfyStats(topicString,rgName,sentNumBytes,sentNumMsgs,recvdNumBytes,recvdNumMsgs,true,false);\n  }\n catch (  PulsarClientException p) {\n    final String errMesg=String.format(\"Got exception while sending {}-th time: ex={}\",ix,p.getMessage());\n    Assert.assertTrue(false,errMesg);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 680,
        "startLineNumber" : 140,
        "startColumnNumber" : 8,
        "endLineNumber" : 153,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int ix=0; ix < NumMessagesToSend; ix++) {\n  MessageId prodMesgId=null;\n  byte[] mesg;\n  try {\n    mesg=String.format(\"Hi, ix={}\",ix).getBytes();\n    producer.send(mesg);\n    sentNumBytes+=mesg.length;\n    sentNumMsgs++;\n    this.verfyStats(topicString,rgName,sentNumBytes,sentNumMsgs,recvdNumBytes,recvdNumMsgs,true,false);\n  }\n catch (  PulsarClientException p) {\n    final String errMesg=String.format(\"Got exception while sending {}-th time: ex={}\",ix,p.getMessage());\n    Assert.assertTrue(false,errMesg);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 88,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3837,
        "startLineNumber" : 87,
        "startColumnNumber" : 82,
        "endLineNumber" : 179,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ResourceUsagePublisher ruP=new ResourceUsagePublisher(){\n    @Override public String getID(){\n      return \"\";\n    }\n    @Override public void fillResourceUsage(    ResourceUsage resourceUsage){\n    }\n  }\n;\n  ResourceUsageConsumer ruC=new ResourceUsageConsumer(){\n    @Override public String getID(){\n      return \"\";\n    }\n    @Override public void acceptResourceUsage(    String broker,    ResourceUsage resourceUsage){\n    }\n  }\n;\n  org.apache.pulsar.common.policies.data.ResourceGroup rgConfig=new org.apache.pulsar.common.policies.data.ResourceGroup();\n  final String rgName=\"runProduceConsume\";\n  rgConfig.setPublishRateInBytes(1500);\n  rgConfig.setPublishRateInMsgs(100);\n  rgConfig.setDispatchRateInBytes(4000);\n  rgConfig.setPublishRateInMsgs(500);\n  rgs.resourceGroupCreate(rgName,rgConfig,ruP,ruC);\n  Producer<byte[]> producer=null;\n  Consumer<byte[]> consumer=null;\n  producer=pulsarClient.newProducer().topic(topicString).create();\n  try {\n    consumer=pulsarClient.newConsumer().topic(topicString).subscriptionName(\"my-subscription\").subscriptionType(SubscriptionType.Shared).subscribe();\n  }\n catch (  PulsarClientException p) {\n    final String errMesg=String.format(\"Got exception while building consumer: ex={}\",p.getMessage());\n    Assert.assertTrue(false,errMesg);\n  }\n  final TopicName myTopic=TopicName.get(topicString);\n  final String tenantString=myTopic.getTenant();\n  final String nsString=myTopic.getNamespacePortion();\n  rgs.registerTenant(rgName,tenantString);\n  rgs.registerNameSpace(rgName,nsString);\n  final int NumMessagesToSend=10;\n  int sentNumBytes=0;\n  int sentNumMsgs=0;\n  int recvdNumBytes=0;\n  int recvdNumMsgs=0;\n  for (int ix=0; ix < NumMessagesToSend; ix++) {\n    MessageId prodMesgId=null;\n    byte[] mesg;\n    try {\n      mesg=String.format(\"Hi, ix={}\",ix).getBytes();\n      producer.send(mesg);\n      sentNumBytes+=mesg.length;\n      sentNumMsgs++;\n      this.verfyStats(topicString,rgName,sentNumBytes,sentNumMsgs,recvdNumBytes,recvdNumMsgs,true,false);\n    }\n catch (    PulsarClientException p) {\n      final String errMesg=String.format(\"Got exception while sending {}-th time: ex={}\",ix,p.getMessage());\n      Assert.assertTrue(false,errMesg);\n    }\n  }\n  producer.close();\n  this.verfyStats(topicString,rgName,sentNumBytes,sentNumMsgs,recvdNumBytes,recvdNumMsgs,true,false);\n  Message<byte[]> message=null;\n  while (recvdNumMsgs < sentNumMsgs) {\n    try {\n      message=consumer.receive();\n      recvdNumBytes+=message.getValue().length;\n    }\n catch (    PulsarClientException p) {\n      final String errMesg=String.format(\"Got exception in while receiving {}-th mesg at consumer: ex={}\",recvdNumMsgs,p.getMessage());\n      Assert.assertTrue(false,errMesg);\n    }\n    recvdNumMsgs++;\n  }\n  this.verfyStats(topicString,rgName,sentNumBytes,sentNumMsgs,recvdNumBytes,recvdNumMsgs,true,true);\n  consumer.close();\n  rgs.unRegisterTenant(rgName,tenantString);\n  rgs.unRegisterNameSpace(rgName,nsString);\n  rgs.resourceGroupDelete(rgName);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 472,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3915,
        "startLineNumber" : 87,
        "startColumnNumber" : 4,
        "endLineNumber" : 179,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void testProduceConsumeUsageOnRG(String topicString) throws Exception {\n  ResourceUsagePublisher ruP=new ResourceUsagePublisher(){\n    @Override public String getID(){\n      return \"\";\n    }\n    @Override public void fillResourceUsage(    ResourceUsage resourceUsage){\n    }\n  }\n;\n  ResourceUsageConsumer ruC=new ResourceUsageConsumer(){\n    @Override public String getID(){\n      return \"\";\n    }\n    @Override public void acceptResourceUsage(    String broker,    ResourceUsage resourceUsage){\n    }\n  }\n;\n  org.apache.pulsar.common.policies.data.ResourceGroup rgConfig=new org.apache.pulsar.common.policies.data.ResourceGroup();\n  final String rgName=\"runProduceConsume\";\n  rgConfig.setPublishRateInBytes(1500);\n  rgConfig.setPublishRateInMsgs(100);\n  rgConfig.setDispatchRateInBytes(4000);\n  rgConfig.setPublishRateInMsgs(500);\n  rgs.resourceGroupCreate(rgName,rgConfig,ruP,ruC);\n  Producer<byte[]> producer=null;\n  Consumer<byte[]> consumer=null;\n  producer=pulsarClient.newProducer().topic(topicString).create();\n  try {\n    consumer=pulsarClient.newConsumer().topic(topicString).subscriptionName(\"my-subscription\").subscriptionType(SubscriptionType.Shared).subscribe();\n  }\n catch (  PulsarClientException p) {\n    final String errMesg=String.format(\"Got exception while building consumer: ex={}\",p.getMessage());\n    Assert.assertTrue(false,errMesg);\n  }\n  final TopicName myTopic=TopicName.get(topicString);\n  final String tenantString=myTopic.getTenant();\n  final String nsString=myTopic.getNamespacePortion();\n  rgs.registerTenant(rgName,tenantString);\n  rgs.registerNameSpace(rgName,nsString);\n  final int NumMessagesToSend=10;\n  int sentNumBytes=0;\n  int sentNumMsgs=0;\n  int recvdNumBytes=0;\n  int recvdNumMsgs=0;\n  for (int ix=0; ix < NumMessagesToSend; ix++) {\n    MessageId prodMesgId=null;\n    byte[] mesg;\n    try {\n      mesg=String.format(\"Hi, ix={}\",ix).getBytes();\n      producer.send(mesg);\n      sentNumBytes+=mesg.length;\n      sentNumMsgs++;\n      this.verfyStats(topicString,rgName,sentNumBytes,sentNumMsgs,recvdNumBytes,recvdNumMsgs,true,false);\n    }\n catch (    PulsarClientException p) {\n      final String errMesg=String.format(\"Got exception while sending {}-th time: ex={}\",ix,p.getMessage());\n      Assert.assertTrue(false,errMesg);\n    }\n  }\n  producer.close();\n  this.verfyStats(topicString,rgName,sentNumBytes,sentNumMsgs,recvdNumBytes,recvdNumMsgs,true,false);\n  Message<byte[]> message=null;\n  while (recvdNumMsgs < sentNumMsgs) {\n    try {\n      message=consumer.receive();\n      recvdNumBytes+=message.getValue().length;\n    }\n catch (    PulsarClientException p) {\n      final String errMesg=String.format(\"Got exception in while receiving {}-th mesg at consumer: ex={}\",recvdNumMsgs,p.getMessage());\n      Assert.assertTrue(false,errMesg);\n    }\n    recvdNumMsgs++;\n  }\n  this.verfyStats(topicString,rgName,sentNumBytes,sentNumMsgs,recvdNumBytes,recvdNumMsgs,true,true);\n  consumer.close();\n  rgs.unRegisterTenant(rgName,tenantString);\n  rgs.unRegisterNameSpace(rgName,nsString);\n  rgs.resourceGroupDelete(rgName);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 482,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 151,
        "startColumnNumber" : 16,
        "endLineNumber" : 151,
        "endColumnNumber" : 50
      },
      "nodeContext" : "Assert.assertTrue(false,errMesg);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "errMesg",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 166,
      "startColumnNumber" : 41,
      "endLineNumber" : 166,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 166,
        "startColumnNumber" : 16,
        "endLineNumber" : 166,
        "endColumnNumber" : 49
      },
      "nodeContext" : "Assert.assertTrue(false,errMesg)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 166,
        "startColumnNumber" : 16,
        "endLineNumber" : 166,
        "endColumnNumber" : 50
      },
      "nodeContext" : "Assert.assertTrue(false,errMesg);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 240,
        "startLineNumber" : 163,
        "startColumnNumber" : 46,
        "endLineNumber" : 167,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  final String errMesg=String.format(\"Got exception in while receiving {}-th mesg at consumer: ex={}\",recvdNumMsgs,p.getMessage());\n  Assert.assertTrue(false,errMesg);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 272,
        "startLineNumber" : 163,
        "startColumnNumber" : 14,
        "endLineNumber" : 167,
        "endColumnNumber" : 13
      },
      "nodeContext" : "catch (PulsarClientException p) {\n  final String errMesg=String.format(\"Got exception in while receiving {}-th mesg at consumer: ex={}\",recvdNumMsgs,p.getMessage());\n  Assert.assertTrue(false,errMesg);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 398,
        "startLineNumber" : 160,
        "startColumnNumber" : 12,
        "endLineNumber" : 167,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  message=consumer.receive();\n  recvdNumBytes+=message.getValue().length;\n}\n catch (PulsarClientException p) {\n  final String errMesg=String.format(\"Got exception in while receiving {}-th mesg at consumer: ex={}\",recvdNumMsgs,p.getMessage());\n  Assert.assertTrue(false,errMesg);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 42,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 567,
        "startLineNumber" : 159,
        "startColumnNumber" : 43,
        "endLineNumber" : 170,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    message=consumer.receive();\n    recvdNumBytes+=message.getValue().length;\n  }\n catch (  PulsarClientException p) {\n    final String errMesg=String.format(\"Got exception in while receiving {}-th mesg at consumer: ex={}\",recvdNumMsgs,p.getMessage());\n    Assert.assertTrue(false,errMesg);\n  }\n  recvdNumMsgs++;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 46,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 602,
        "startLineNumber" : 159,
        "startColumnNumber" : 8,
        "endLineNumber" : 170,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (recvdNumMsgs < sentNumMsgs) {\n  try {\n    message=consumer.receive();\n    recvdNumBytes+=message.getValue().length;\n  }\n catch (  PulsarClientException p) {\n    final String errMesg=String.format(\"Got exception in while receiving {}-th mesg at consumer: ex={}\",recvdNumMsgs,p.getMessage());\n    Assert.assertTrue(false,errMesg);\n  }\n  recvdNumMsgs++;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 50,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3837,
        "startLineNumber" : 87,
        "startColumnNumber" : 82,
        "endLineNumber" : 179,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ResourceUsagePublisher ruP=new ResourceUsagePublisher(){\n    @Override public String getID(){\n      return \"\";\n    }\n    @Override public void fillResourceUsage(    ResourceUsage resourceUsage){\n    }\n  }\n;\n  ResourceUsageConsumer ruC=new ResourceUsageConsumer(){\n    @Override public String getID(){\n      return \"\";\n    }\n    @Override public void acceptResourceUsage(    String broker,    ResourceUsage resourceUsage){\n    }\n  }\n;\n  org.apache.pulsar.common.policies.data.ResourceGroup rgConfig=new org.apache.pulsar.common.policies.data.ResourceGroup();\n  final String rgName=\"runProduceConsume\";\n  rgConfig.setPublishRateInBytes(1500);\n  rgConfig.setPublishRateInMsgs(100);\n  rgConfig.setDispatchRateInBytes(4000);\n  rgConfig.setPublishRateInMsgs(500);\n  rgs.resourceGroupCreate(rgName,rgConfig,ruP,ruC);\n  Producer<byte[]> producer=null;\n  Consumer<byte[]> consumer=null;\n  producer=pulsarClient.newProducer().topic(topicString).create();\n  try {\n    consumer=pulsarClient.newConsumer().topic(topicString).subscriptionName(\"my-subscription\").subscriptionType(SubscriptionType.Shared).subscribe();\n  }\n catch (  PulsarClientException p) {\n    final String errMesg=String.format(\"Got exception while building consumer: ex={}\",p.getMessage());\n    Assert.assertTrue(false,errMesg);\n  }\n  final TopicName myTopic=TopicName.get(topicString);\n  final String tenantString=myTopic.getTenant();\n  final String nsString=myTopic.getNamespacePortion();\n  rgs.registerTenant(rgName,tenantString);\n  rgs.registerNameSpace(rgName,nsString);\n  final int NumMessagesToSend=10;\n  int sentNumBytes=0;\n  int sentNumMsgs=0;\n  int recvdNumBytes=0;\n  int recvdNumMsgs=0;\n  for (int ix=0; ix < NumMessagesToSend; ix++) {\n    MessageId prodMesgId=null;\n    byte[] mesg;\n    try {\n      mesg=String.format(\"Hi, ix={}\",ix).getBytes();\n      producer.send(mesg);\n      sentNumBytes+=mesg.length;\n      sentNumMsgs++;\n      this.verfyStats(topicString,rgName,sentNumBytes,sentNumMsgs,recvdNumBytes,recvdNumMsgs,true,false);\n    }\n catch (    PulsarClientException p) {\n      final String errMesg=String.format(\"Got exception while sending {}-th time: ex={}\",ix,p.getMessage());\n      Assert.assertTrue(false,errMesg);\n    }\n  }\n  producer.close();\n  this.verfyStats(topicString,rgName,sentNumBytes,sentNumMsgs,recvdNumBytes,recvdNumMsgs,true,false);\n  Message<byte[]> message=null;\n  while (recvdNumMsgs < sentNumMsgs) {\n    try {\n      message=consumer.receive();\n      recvdNumBytes+=message.getValue().length;\n    }\n catch (    PulsarClientException p) {\n      final String errMesg=String.format(\"Got exception in while receiving {}-th mesg at consumer: ex={}\",recvdNumMsgs,p.getMessage());\n      Assert.assertTrue(false,errMesg);\n    }\n    recvdNumMsgs++;\n  }\n  this.verfyStats(topicString,rgName,sentNumBytes,sentNumMsgs,recvdNumBytes,recvdNumMsgs,true,true);\n  consumer.close();\n  rgs.unRegisterTenant(rgName,tenantString);\n  rgs.unRegisterNameSpace(rgName,nsString);\n  rgs.resourceGroupDelete(rgName);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 472,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3915,
        "startLineNumber" : 87,
        "startColumnNumber" : 4,
        "endLineNumber" : 179,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void testProduceConsumeUsageOnRG(String topicString) throws Exception {\n  ResourceUsagePublisher ruP=new ResourceUsagePublisher(){\n    @Override public String getID(){\n      return \"\";\n    }\n    @Override public void fillResourceUsage(    ResourceUsage resourceUsage){\n    }\n  }\n;\n  ResourceUsageConsumer ruC=new ResourceUsageConsumer(){\n    @Override public String getID(){\n      return \"\";\n    }\n    @Override public void acceptResourceUsage(    String broker,    ResourceUsage resourceUsage){\n    }\n  }\n;\n  org.apache.pulsar.common.policies.data.ResourceGroup rgConfig=new org.apache.pulsar.common.policies.data.ResourceGroup();\n  final String rgName=\"runProduceConsume\";\n  rgConfig.setPublishRateInBytes(1500);\n  rgConfig.setPublishRateInMsgs(100);\n  rgConfig.setDispatchRateInBytes(4000);\n  rgConfig.setPublishRateInMsgs(500);\n  rgs.resourceGroupCreate(rgName,rgConfig,ruP,ruC);\n  Producer<byte[]> producer=null;\n  Consumer<byte[]> consumer=null;\n  producer=pulsarClient.newProducer().topic(topicString).create();\n  try {\n    consumer=pulsarClient.newConsumer().topic(topicString).subscriptionName(\"my-subscription\").subscriptionType(SubscriptionType.Shared).subscribe();\n  }\n catch (  PulsarClientException p) {\n    final String errMesg=String.format(\"Got exception while building consumer: ex={}\",p.getMessage());\n    Assert.assertTrue(false,errMesg);\n  }\n  final TopicName myTopic=TopicName.get(topicString);\n  final String tenantString=myTopic.getTenant();\n  final String nsString=myTopic.getNamespacePortion();\n  rgs.registerTenant(rgName,tenantString);\n  rgs.registerNameSpace(rgName,nsString);\n  final int NumMessagesToSend=10;\n  int sentNumBytes=0;\n  int sentNumMsgs=0;\n  int recvdNumBytes=0;\n  int recvdNumMsgs=0;\n  for (int ix=0; ix < NumMessagesToSend; ix++) {\n    MessageId prodMesgId=null;\n    byte[] mesg;\n    try {\n      mesg=String.format(\"Hi, ix={}\",ix).getBytes();\n      producer.send(mesg);\n      sentNumBytes+=mesg.length;\n      sentNumMsgs++;\n      this.verfyStats(topicString,rgName,sentNumBytes,sentNumMsgs,recvdNumBytes,recvdNumMsgs,true,false);\n    }\n catch (    PulsarClientException p) {\n      final String errMesg=String.format(\"Got exception while sending {}-th time: ex={}\",ix,p.getMessage());\n      Assert.assertTrue(false,errMesg);\n    }\n  }\n  producer.close();\n  this.verfyStats(topicString,rgName,sentNumBytes,sentNumMsgs,recvdNumBytes,recvdNumMsgs,true,false);\n  Message<byte[]> message=null;\n  while (recvdNumMsgs < sentNumMsgs) {\n    try {\n      message=consumer.receive();\n      recvdNumBytes+=message.getValue().length;\n    }\n catch (    PulsarClientException p) {\n      final String errMesg=String.format(\"Got exception in while receiving {}-th mesg at consumer: ex={}\",recvdNumMsgs,p.getMessage());\n      Assert.assertTrue(false,errMesg);\n    }\n    recvdNumMsgs++;\n  }\n  this.verfyStats(topicString,rgName,sentNumBytes,sentNumMsgs,recvdNumBytes,recvdNumMsgs,true,true);\n  consumer.close();\n  rgs.unRegisterTenant(rgName,tenantString);\n  rgs.unRegisterNameSpace(rgName,nsString);\n  rgs.resourceGroupDelete(rgName);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 482,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 166,
        "startColumnNumber" : 16,
        "endLineNumber" : 166,
        "endColumnNumber" : 50
      },
      "nodeContext" : "Assert.assertTrue(false,errMesg);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 126,
    "startColumnNumber" : 37,
    "endLineNumber" : 126,
    "endColumnNumber" : 44
  }, {
    "charLength" : 7,
    "startLineNumber" : 151,
    "startColumnNumber" : 41,
    "endLineNumber" : 151,
    "endColumnNumber" : 48
  }, {
    "charLength" : 7,
    "startLineNumber" : 166,
    "startColumnNumber" : 41,
    "endLineNumber" : 166,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 7
  } ]
}