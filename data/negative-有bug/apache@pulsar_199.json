{
  "id" : 199,
  "expression" : "i % 2 == 0",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-broker/src/test/java/org/apache/pulsar/broker/stats/TransactionMetricsTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i % 2 == 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 124,
      "startColumnNumber" : 16,
      "endLineNumber" : 124,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 457,
        "startLineNumber" : 124,
        "startColumnNumber" : 12,
        "endLineNumber" : 130,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (i % 2 == 0) {\n  pulsar.getTransactionMetadataStoreService().addProducedPartitionToTxn(list.get(i),Collections.singletonList(topic)).get();\n}\n else {\n  pulsar.getTransactionMetadataStoreService().addAckedPartitionToTxn(list.get(i),Collections.singletonList(TransactionSubscription.builder().topic(topic).subscription(subName).build())).get();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 50,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 678,
        "startLineNumber" : 119,
        "startColumnNumber" : 43,
        "endLineNumber" : 131,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  TxnID txnID=pulsar.getTransactionMetadataStoreService().getStores().get(transactionCoordinatorIDOne).newTransaction(timeout).get();\n  list.add(txnID);\n  if (i % 2 == 0) {\n    pulsar.getTransactionMetadataStoreService().addProducedPartitionToTxn(list.get(i),Collections.singletonList(topic)).get();\n  }\n else {\n    pulsar.getTransactionMetadataStoreService().addAckedPartitionToTxn(list.get(i),Collections.singletonList(TransactionSubscription.builder().topic(topic).subscription(subName).build())).get();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 713,
        "startLineNumber" : 119,
        "startColumnNumber" : 8,
        "endLineNumber" : 131,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < txnCount; i++) {\n  TxnID txnID=pulsar.getTransactionMetadataStoreService().getStores().get(transactionCoordinatorIDOne).newTransaction(timeout).get();\n  list.add(txnID);\n  if (i % 2 == 0) {\n    pulsar.getTransactionMetadataStoreService().addProducedPartitionToTxn(list.get(i),Collections.singletonList(topic)).get();\n  }\n else {\n    pulsar.getTransactionMetadataStoreService().addAckedPartitionToTxn(list.get(i),Collections.singletonList(TransactionSubscription.builder().topic(topic).subscription(subName).build())).get();\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 85,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4074,
        "startLineNumber" : 104,
        "startColumnNumber" : 72,
        "endLineNumber" : 190,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long timeout=10000;\n  int txnCount=120;\n  String ns1=\"prop/ns-abc1\";\n  admin.namespaces().createNamespace(ns1);\n  String topic=\"persistent://\" + ns1 + \"/test_coordinator_metrics\";\n  String subName=\"test_coordinator_metrics\";\n  TransactionCoordinatorID transactionCoordinatorIDOne=TransactionCoordinatorID.get(1);\n  pulsar.getTransactionMetadataStoreService().addTransactionMetadataStore(transactionCoordinatorIDOne);\n  admin.topics().createNonPartitionedTopic(topic);\n  admin.topics().createSubscription(topic,subName,MessageId.earliest);\n  Awaitility.await().atMost(2000,TimeUnit.MILLISECONDS).until(() -> pulsar.getTransactionMetadataStoreService().getStores().size() == 1);\n  List<TxnID> list=new ArrayList<>();\n  for (int i=0; i < txnCount; i++) {\n    TxnID txnID=pulsar.getTransactionMetadataStoreService().getStores().get(transactionCoordinatorIDOne).newTransaction(timeout).get();\n    list.add(txnID);\n    if (i % 2 == 0) {\n      pulsar.getTransactionMetadataStoreService().addProducedPartitionToTxn(list.get(i),Collections.singletonList(topic)).get();\n    }\n else {\n      pulsar.getTransactionMetadataStoreService().addAckedPartitionToTxn(list.get(i),Collections.singletonList(TransactionSubscription.builder().topic(topic).subscription(subName).build())).get();\n    }\n  }\n  for (int i=0; i < txnCount; i++) {\n    if (i % 2 == 0) {\n      pulsar.getTransactionMetadataStoreService().endTransaction(list.get(i),TxnAction.COMMIT_VALUE,false).get();\n    }\n else {\n      pulsar.getTransactionMetadataStoreService().endTransaction(list.get(i),TxnAction.ABORT_VALUE,false).get();\n    }\n  }\n  pulsar.getBrokerService().updateRates();\n  ByteArrayOutputStream statsOut=new ByteArrayOutputStream();\n  PrometheusMetricsGenerator.generate(pulsar,true,false,false,statsOut);\n  String metricsStr=statsOut.toString();\n  Multimap<String,PrometheusMetricsTest.Metric> metrics=parseMetrics(metricsStr);\n  Collection<PrometheusMetricsTest.Metric> metric=metrics.get(\"pulsar_txn_created_count\");\n  assertEquals(metric.size(),1);\n  metric.forEach(item -> assertEquals(item.value,txnCount));\n  metric=metrics.get(\"pulsar_txn_committed_count\");\n  assertEquals(metric.size(),1);\n  metric.forEach(item -> assertEquals(item.value,txnCount / 2));\n  metric=metrics.get(\"pulsar_txn_aborted_count\");\n  assertEquals(metric.size(),1);\n  metric.forEach(item -> assertEquals(item.value,txnCount / 2));\n  TxnID txnID=pulsar.getTransactionMetadataStoreService().getStores().get(transactionCoordinatorIDOne).newTransaction(1000).get();\n  Awaitility.await().atMost(2000,TimeUnit.MILLISECONDS).until(() -> {\n    try {\n      pulsar.getTransactionMetadataStoreService().getStores().get(transactionCoordinatorIDOne).getTxnMeta(txnID).get();\n    }\n catch (    Exception e) {\n      return true;\n    }\n    return false;\n  }\n);\n  statsOut=new ByteArrayOutputStream();\n  PrometheusMetricsGenerator.generate(pulsar,true,false,false,statsOut);\n  metricsStr=statsOut.toString();\n  metrics=parseMetrics(metricsStr);\n  metric=metrics.get(\"pulsar_txn_timeout_count\");\n  assertEquals(metric.size(),1);\n  metric.forEach(item -> assertEquals(item.value,1));\n  metric=metrics.get(\"pulsar_txn_append_log_count\");\n  assertEquals(metric.size(),1);\n  metric.forEach(item -> assertEquals(item.value,txnCount * 4 + 3));\n  metric=metrics.get(\"pulsar_txn_execution_latency_le_5000\");\n  assertEquals(metric.size(),1);\n  metric.forEach(item -> assertEquals(item.value,1));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 552,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4152,
        "startLineNumber" : 103,
        "startColumnNumber" : 4,
        "endLineNumber" : 190,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testTransactionCoordinatorRateMetrics() throws Exception {\n  long timeout=10000;\n  int txnCount=120;\n  String ns1=\"prop/ns-abc1\";\n  admin.namespaces().createNamespace(ns1);\n  String topic=\"persistent://\" + ns1 + \"/test_coordinator_metrics\";\n  String subName=\"test_coordinator_metrics\";\n  TransactionCoordinatorID transactionCoordinatorIDOne=TransactionCoordinatorID.get(1);\n  pulsar.getTransactionMetadataStoreService().addTransactionMetadataStore(transactionCoordinatorIDOne);\n  admin.topics().createNonPartitionedTopic(topic);\n  admin.topics().createSubscription(topic,subName,MessageId.earliest);\n  Awaitility.await().atMost(2000,TimeUnit.MILLISECONDS).until(() -> pulsar.getTransactionMetadataStoreService().getStores().size() == 1);\n  List<TxnID> list=new ArrayList<>();\n  for (int i=0; i < txnCount; i++) {\n    TxnID txnID=pulsar.getTransactionMetadataStoreService().getStores().get(transactionCoordinatorIDOne).newTransaction(timeout).get();\n    list.add(txnID);\n    if (i % 2 == 0) {\n      pulsar.getTransactionMetadataStoreService().addProducedPartitionToTxn(list.get(i),Collections.singletonList(topic)).get();\n    }\n else {\n      pulsar.getTransactionMetadataStoreService().addAckedPartitionToTxn(list.get(i),Collections.singletonList(TransactionSubscription.builder().topic(topic).subscription(subName).build())).get();\n    }\n  }\n  for (int i=0; i < txnCount; i++) {\n    if (i % 2 == 0) {\n      pulsar.getTransactionMetadataStoreService().endTransaction(list.get(i),TxnAction.COMMIT_VALUE,false).get();\n    }\n else {\n      pulsar.getTransactionMetadataStoreService().endTransaction(list.get(i),TxnAction.ABORT_VALUE,false).get();\n    }\n  }\n  pulsar.getBrokerService().updateRates();\n  ByteArrayOutputStream statsOut=new ByteArrayOutputStream();\n  PrometheusMetricsGenerator.generate(pulsar,true,false,false,statsOut);\n  String metricsStr=statsOut.toString();\n  Multimap<String,PrometheusMetricsTest.Metric> metrics=parseMetrics(metricsStr);\n  Collection<PrometheusMetricsTest.Metric> metric=metrics.get(\"pulsar_txn_created_count\");\n  assertEquals(metric.size(),1);\n  metric.forEach(item -> assertEquals(item.value,txnCount));\n  metric=metrics.get(\"pulsar_txn_committed_count\");\n  assertEquals(metric.size(),1);\n  metric.forEach(item -> assertEquals(item.value,txnCount / 2));\n  metric=metrics.get(\"pulsar_txn_aborted_count\");\n  assertEquals(metric.size(),1);\n  metric.forEach(item -> assertEquals(item.value,txnCount / 2));\n  TxnID txnID=pulsar.getTransactionMetadataStoreService().getStores().get(transactionCoordinatorIDOne).newTransaction(1000).get();\n  Awaitility.await().atMost(2000,TimeUnit.MILLISECONDS).until(() -> {\n    try {\n      pulsar.getTransactionMetadataStoreService().getStores().get(transactionCoordinatorIDOne).getTxnMeta(txnID).get();\n    }\n catch (    Exception e) {\n      return true;\n    }\n    return false;\n  }\n);\n  statsOut=new ByteArrayOutputStream();\n  PrometheusMetricsGenerator.generate(pulsar,true,false,false,statsOut);\n  metricsStr=statsOut.toString();\n  metrics=parseMetrics(metricsStr);\n  metric=metrics.get(\"pulsar_txn_timeout_count\");\n  assertEquals(metric.size(),1);\n  metric.forEach(item -> assertEquals(item.value,1));\n  metric=metrics.get(\"pulsar_txn_append_log_count\");\n  assertEquals(metric.size(),1);\n  metric.forEach(item -> assertEquals(item.value,txnCount * 4 + 3));\n  metric=metrics.get(\"pulsar_txn_execution_latency_le_5000\");\n  assertEquals(metric.size(),1);\n  metric.forEach(item -> assertEquals(item.value,1));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 560,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 457,
        "startLineNumber" : 124,
        "startColumnNumber" : 12,
        "endLineNumber" : 130,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (i % 2 == 0) {\n  pulsar.getTransactionMetadataStoreService().addProducedPartitionToTxn(list.get(i),Collections.singletonList(topic)).get();\n}\n else {\n  pulsar.getTransactionMetadataStoreService().addAckedPartitionToTxn(list.get(i),Collections.singletonList(TransactionSubscription.builder().topic(topic).subscription(subName).build())).get();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 50,
      "astHeight" : 11
    },
    "tokenLength" : 5,
    "type" : "boolean"
  }, {
    "nodeContext" : "i % 2 == 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 134,
      "startColumnNumber" : 16,
      "endLineNumber" : 134,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 303,
        "startLineNumber" : 134,
        "startColumnNumber" : 12,
        "endLineNumber" : 138,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (i % 2 == 0) {\n  pulsar.getTransactionMetadataStoreService().endTransaction(list.get(i),TxnAction.COMMIT_VALUE,false).get();\n}\n else {\n  pulsar.getTransactionMetadataStoreService().endTransaction(list.get(i),TxnAction.ABORT_VALUE,false).get();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 40,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 327,
        "startLineNumber" : 133,
        "startColumnNumber" : 43,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (i % 2 == 0) {\n    pulsar.getTransactionMetadataStoreService().endTransaction(list.get(i),TxnAction.COMMIT_VALUE,false).get();\n  }\n else {\n    pulsar.getTransactionMetadataStoreService().endTransaction(list.get(i),TxnAction.ABORT_VALUE,false).get();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 362,
        "startLineNumber" : 133,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < txnCount; i++) {\n  if (i % 2 == 0) {\n    pulsar.getTransactionMetadataStoreService().endTransaction(list.get(i),TxnAction.COMMIT_VALUE,false).get();\n  }\n else {\n    pulsar.getTransactionMetadataStoreService().endTransaction(list.get(i),TxnAction.ABORT_VALUE,false).get();\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 52,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4074,
        "startLineNumber" : 104,
        "startColumnNumber" : 72,
        "endLineNumber" : 190,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  long timeout=10000;\n  int txnCount=120;\n  String ns1=\"prop/ns-abc1\";\n  admin.namespaces().createNamespace(ns1);\n  String topic=\"persistent://\" + ns1 + \"/test_coordinator_metrics\";\n  String subName=\"test_coordinator_metrics\";\n  TransactionCoordinatorID transactionCoordinatorIDOne=TransactionCoordinatorID.get(1);\n  pulsar.getTransactionMetadataStoreService().addTransactionMetadataStore(transactionCoordinatorIDOne);\n  admin.topics().createNonPartitionedTopic(topic);\n  admin.topics().createSubscription(topic,subName,MessageId.earliest);\n  Awaitility.await().atMost(2000,TimeUnit.MILLISECONDS).until(() -> pulsar.getTransactionMetadataStoreService().getStores().size() == 1);\n  List<TxnID> list=new ArrayList<>();\n  for (int i=0; i < txnCount; i++) {\n    TxnID txnID=pulsar.getTransactionMetadataStoreService().getStores().get(transactionCoordinatorIDOne).newTransaction(timeout).get();\n    list.add(txnID);\n    if (i % 2 == 0) {\n      pulsar.getTransactionMetadataStoreService().addProducedPartitionToTxn(list.get(i),Collections.singletonList(topic)).get();\n    }\n else {\n      pulsar.getTransactionMetadataStoreService().addAckedPartitionToTxn(list.get(i),Collections.singletonList(TransactionSubscription.builder().topic(topic).subscription(subName).build())).get();\n    }\n  }\n  for (int i=0; i < txnCount; i++) {\n    if (i % 2 == 0) {\n      pulsar.getTransactionMetadataStoreService().endTransaction(list.get(i),TxnAction.COMMIT_VALUE,false).get();\n    }\n else {\n      pulsar.getTransactionMetadataStoreService().endTransaction(list.get(i),TxnAction.ABORT_VALUE,false).get();\n    }\n  }\n  pulsar.getBrokerService().updateRates();\n  ByteArrayOutputStream statsOut=new ByteArrayOutputStream();\n  PrometheusMetricsGenerator.generate(pulsar,true,false,false,statsOut);\n  String metricsStr=statsOut.toString();\n  Multimap<String,PrometheusMetricsTest.Metric> metrics=parseMetrics(metricsStr);\n  Collection<PrometheusMetricsTest.Metric> metric=metrics.get(\"pulsar_txn_created_count\");\n  assertEquals(metric.size(),1);\n  metric.forEach(item -> assertEquals(item.value,txnCount));\n  metric=metrics.get(\"pulsar_txn_committed_count\");\n  assertEquals(metric.size(),1);\n  metric.forEach(item -> assertEquals(item.value,txnCount / 2));\n  metric=metrics.get(\"pulsar_txn_aborted_count\");\n  assertEquals(metric.size(),1);\n  metric.forEach(item -> assertEquals(item.value,txnCount / 2));\n  TxnID txnID=pulsar.getTransactionMetadataStoreService().getStores().get(transactionCoordinatorIDOne).newTransaction(1000).get();\n  Awaitility.await().atMost(2000,TimeUnit.MILLISECONDS).until(() -> {\n    try {\n      pulsar.getTransactionMetadataStoreService().getStores().get(transactionCoordinatorIDOne).getTxnMeta(txnID).get();\n    }\n catch (    Exception e) {\n      return true;\n    }\n    return false;\n  }\n);\n  statsOut=new ByteArrayOutputStream();\n  PrometheusMetricsGenerator.generate(pulsar,true,false,false,statsOut);\n  metricsStr=statsOut.toString();\n  metrics=parseMetrics(metricsStr);\n  metric=metrics.get(\"pulsar_txn_timeout_count\");\n  assertEquals(metric.size(),1);\n  metric.forEach(item -> assertEquals(item.value,1));\n  metric=metrics.get(\"pulsar_txn_append_log_count\");\n  assertEquals(metric.size(),1);\n  metric.forEach(item -> assertEquals(item.value,txnCount * 4 + 3));\n  metric=metrics.get(\"pulsar_txn_execution_latency_le_5000\");\n  assertEquals(metric.size(),1);\n  metric.forEach(item -> assertEquals(item.value,1));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 552,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4152,
        "startLineNumber" : 103,
        "startColumnNumber" : 4,
        "endLineNumber" : 190,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testTransactionCoordinatorRateMetrics() throws Exception {\n  long timeout=10000;\n  int txnCount=120;\n  String ns1=\"prop/ns-abc1\";\n  admin.namespaces().createNamespace(ns1);\n  String topic=\"persistent://\" + ns1 + \"/test_coordinator_metrics\";\n  String subName=\"test_coordinator_metrics\";\n  TransactionCoordinatorID transactionCoordinatorIDOne=TransactionCoordinatorID.get(1);\n  pulsar.getTransactionMetadataStoreService().addTransactionMetadataStore(transactionCoordinatorIDOne);\n  admin.topics().createNonPartitionedTopic(topic);\n  admin.topics().createSubscription(topic,subName,MessageId.earliest);\n  Awaitility.await().atMost(2000,TimeUnit.MILLISECONDS).until(() -> pulsar.getTransactionMetadataStoreService().getStores().size() == 1);\n  List<TxnID> list=new ArrayList<>();\n  for (int i=0; i < txnCount; i++) {\n    TxnID txnID=pulsar.getTransactionMetadataStoreService().getStores().get(transactionCoordinatorIDOne).newTransaction(timeout).get();\n    list.add(txnID);\n    if (i % 2 == 0) {\n      pulsar.getTransactionMetadataStoreService().addProducedPartitionToTxn(list.get(i),Collections.singletonList(topic)).get();\n    }\n else {\n      pulsar.getTransactionMetadataStoreService().addAckedPartitionToTxn(list.get(i),Collections.singletonList(TransactionSubscription.builder().topic(topic).subscription(subName).build())).get();\n    }\n  }\n  for (int i=0; i < txnCount; i++) {\n    if (i % 2 == 0) {\n      pulsar.getTransactionMetadataStoreService().endTransaction(list.get(i),TxnAction.COMMIT_VALUE,false).get();\n    }\n else {\n      pulsar.getTransactionMetadataStoreService().endTransaction(list.get(i),TxnAction.ABORT_VALUE,false).get();\n    }\n  }\n  pulsar.getBrokerService().updateRates();\n  ByteArrayOutputStream statsOut=new ByteArrayOutputStream();\n  PrometheusMetricsGenerator.generate(pulsar,true,false,false,statsOut);\n  String metricsStr=statsOut.toString();\n  Multimap<String,PrometheusMetricsTest.Metric> metrics=parseMetrics(metricsStr);\n  Collection<PrometheusMetricsTest.Metric> metric=metrics.get(\"pulsar_txn_created_count\");\n  assertEquals(metric.size(),1);\n  metric.forEach(item -> assertEquals(item.value,txnCount));\n  metric=metrics.get(\"pulsar_txn_committed_count\");\n  assertEquals(metric.size(),1);\n  metric.forEach(item -> assertEquals(item.value,txnCount / 2));\n  metric=metrics.get(\"pulsar_txn_aborted_count\");\n  assertEquals(metric.size(),1);\n  metric.forEach(item -> assertEquals(item.value,txnCount / 2));\n  TxnID txnID=pulsar.getTransactionMetadataStoreService().getStores().get(transactionCoordinatorIDOne).newTransaction(1000).get();\n  Awaitility.await().atMost(2000,TimeUnit.MILLISECONDS).until(() -> {\n    try {\n      pulsar.getTransactionMetadataStoreService().getStores().get(transactionCoordinatorIDOne).getTxnMeta(txnID).get();\n    }\n catch (    Exception e) {\n      return true;\n    }\n    return false;\n  }\n);\n  statsOut=new ByteArrayOutputStream();\n  PrometheusMetricsGenerator.generate(pulsar,true,false,false,statsOut);\n  metricsStr=statsOut.toString();\n  metrics=parseMetrics(metricsStr);\n  metric=metrics.get(\"pulsar_txn_timeout_count\");\n  assertEquals(metric.size(),1);\n  metric.forEach(item -> assertEquals(item.value,1));\n  metric=metrics.get(\"pulsar_txn_append_log_count\");\n  assertEquals(metric.size(),1);\n  metric.forEach(item -> assertEquals(item.value,txnCount * 4 + 3));\n  metric=metrics.get(\"pulsar_txn_execution_latency_le_5000\");\n  assertEquals(metric.size(),1);\n  metric.forEach(item -> assertEquals(item.value,1));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 560,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 303,
        "startLineNumber" : 134,
        "startColumnNumber" : 12,
        "endLineNumber" : 138,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (i % 2 == 0) {\n  pulsar.getTransactionMetadataStoreService().endTransaction(list.get(i),TxnAction.COMMIT_VALUE,false).get();\n}\n else {\n  pulsar.getTransactionMetadataStoreService().endTransaction(list.get(i),TxnAction.ABORT_VALUE,false).get();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 40,
      "astHeight" : 7
    },
    "tokenLength" : 5,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 124,
    "startColumnNumber" : 16,
    "endLineNumber" : 124,
    "endColumnNumber" : 26
  }, {
    "charLength" : 10,
    "startLineNumber" : 134,
    "startColumnNumber" : 16,
    "endLineNumber" : 134,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}