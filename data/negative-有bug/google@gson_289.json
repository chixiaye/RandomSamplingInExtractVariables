{
  "id" : 289,
  "expression" : "a.equals(b)",
  "projectName" : "google@gson",
  "commitID" : "c3d0f200b352f411b9ebe45c3bf49d4328b2c51f",
  "filePath" : "/gson/src/test/java/com/google/gson/JsonArrayTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "a.equals(b)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 38,
      "startColumnNumber" : 16,
      "endLineNumber" : 38,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 38,
        "endColumnNumber" : 28
      },
      "nodeContext" : "assertFalse(a.equals(b))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 38,
        "endColumnNumber" : 29
      },
      "nodeContext" : "assertFalse(a.equals(b));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 448,
        "startLineNumber" : 31,
        "startColumnNumber" : 40,
        "endLineNumber" : 51,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  JsonArray a=new JsonArray();\n  JsonArray b=new JsonArray();\n  assertEquals(a,a);\n  a.add(new JsonObject());\n  assertFalse(a.equals(b));\n  assertFalse(b.equals(a));\n  b.add(new JsonObject());\n  MoreAsserts.assertEqualsAndHashCode(a,b);\n  a.add(new JsonObject());\n  assertFalse(a.equals(b));\n  assertFalse(b.equals(a));\n  b.add(JsonNull.INSTANCE);\n  assertFalse(a.equals(b));\n  assertFalse(b.equals(a));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 486,
        "startLineNumber" : 31,
        "startColumnNumber" : 2,
        "endLineNumber" : 51,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testEqualsNonEmptyArray(){\n  JsonArray a=new JsonArray();\n  JsonArray b=new JsonArray();\n  assertEquals(a,a);\n  a.add(new JsonObject());\n  assertFalse(a.equals(b));\n  assertFalse(b.equals(a));\n  b.add(new JsonObject());\n  MoreAsserts.assertEqualsAndHashCode(a,b);\n  a.add(new JsonObject());\n  assertFalse(a.equals(b));\n  assertFalse(b.equals(a));\n  b.add(JsonNull.INSTANCE);\n  assertFalse(a.equals(b));\n  assertFalse(b.equals(a));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 102,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 38,
        "endColumnNumber" : 29
      },
      "nodeContext" : "assertFalse(a.equals(b));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "boolean"
  }, {
    "nodeContext" : "a.equals(b)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 45,
      "startColumnNumber" : 16,
      "endLineNumber" : 45,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 28
      },
      "nodeContext" : "assertFalse(a.equals(b))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 29
      },
      "nodeContext" : "assertFalse(a.equals(b));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 448,
        "startLineNumber" : 31,
        "startColumnNumber" : 40,
        "endLineNumber" : 51,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  JsonArray a=new JsonArray();\n  JsonArray b=new JsonArray();\n  assertEquals(a,a);\n  a.add(new JsonObject());\n  assertFalse(a.equals(b));\n  assertFalse(b.equals(a));\n  b.add(new JsonObject());\n  MoreAsserts.assertEqualsAndHashCode(a,b);\n  a.add(new JsonObject());\n  assertFalse(a.equals(b));\n  assertFalse(b.equals(a));\n  b.add(JsonNull.INSTANCE);\n  assertFalse(a.equals(b));\n  assertFalse(b.equals(a));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 486,
        "startLineNumber" : 31,
        "startColumnNumber" : 2,
        "endLineNumber" : 51,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testEqualsNonEmptyArray(){\n  JsonArray a=new JsonArray();\n  JsonArray b=new JsonArray();\n  assertEquals(a,a);\n  a.add(new JsonObject());\n  assertFalse(a.equals(b));\n  assertFalse(b.equals(a));\n  b.add(new JsonObject());\n  MoreAsserts.assertEqualsAndHashCode(a,b);\n  a.add(new JsonObject());\n  assertFalse(a.equals(b));\n  assertFalse(b.equals(a));\n  b.add(JsonNull.INSTANCE);\n  assertFalse(a.equals(b));\n  assertFalse(b.equals(a));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 102,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 29
      },
      "nodeContext" : "assertFalse(a.equals(b));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "boolean"
  }, {
    "nodeContext" : "a.equals(b)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 49,
      "startColumnNumber" : 16,
      "endLineNumber" : 49,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 28
      },
      "nodeContext" : "assertFalse(a.equals(b))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 29
      },
      "nodeContext" : "assertFalse(a.equals(b));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 448,
        "startLineNumber" : 31,
        "startColumnNumber" : 40,
        "endLineNumber" : 51,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  JsonArray a=new JsonArray();\n  JsonArray b=new JsonArray();\n  assertEquals(a,a);\n  a.add(new JsonObject());\n  assertFalse(a.equals(b));\n  assertFalse(b.equals(a));\n  b.add(new JsonObject());\n  MoreAsserts.assertEqualsAndHashCode(a,b);\n  a.add(new JsonObject());\n  assertFalse(a.equals(b));\n  assertFalse(b.equals(a));\n  b.add(JsonNull.INSTANCE);\n  assertFalse(a.equals(b));\n  assertFalse(b.equals(a));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 486,
        "startLineNumber" : 31,
        "startColumnNumber" : 2,
        "endLineNumber" : 51,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testEqualsNonEmptyArray(){\n  JsonArray a=new JsonArray();\n  JsonArray b=new JsonArray();\n  assertEquals(a,a);\n  a.add(new JsonObject());\n  assertFalse(a.equals(b));\n  assertFalse(b.equals(a));\n  b.add(new JsonObject());\n  MoreAsserts.assertEqualsAndHashCode(a,b);\n  a.add(new JsonObject());\n  assertFalse(a.equals(b));\n  assertFalse(b.equals(a));\n  b.add(JsonNull.INSTANCE);\n  assertFalse(a.equals(b));\n  assertFalse(b.equals(a));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 102,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 49,
        "endColumnNumber" : 29
      },
      "nodeContext" : "assertFalse(a.equals(b));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 38,
    "startColumnNumber" : 16,
    "endLineNumber" : 38,
    "endColumnNumber" : 27
  }, {
    "charLength" : 11,
    "startLineNumber" : 45,
    "startColumnNumber" : 16,
    "endLineNumber" : 45,
    "endColumnNumber" : 27
  }, {
    "charLength" : 11,
    "startLineNumber" : 49,
    "startColumnNumber" : 16,
    "endLineNumber" : 49,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}