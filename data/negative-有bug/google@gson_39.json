{
  "id" : 39,
  "expression" : "(ParameterizedType)from",
  "projectName" : "google@gson",
  "commitID" : "c3d0f200b352f411b9ebe45c3bf49d4328b2c51f",
  "filePath" : "/gson/src/main/java/com/google/gson/reflect/TypeToken.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(ParameterizedType)from",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 200,
      "startColumnNumber" : 14,
      "endLineNumber" : 200,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 200,
        "startColumnNumber" : 6,
        "endLineNumber" : 200,
        "endColumnNumber" : 38
      },
      "nodeContext" : "ptype=(ParameterizedType)from",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 200,
        "startColumnNumber" : 6,
        "endLineNumber" : 200,
        "endColumnNumber" : 39
      },
      "nodeContext" : "ptype=(ParameterizedType)from;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 199,
        "startColumnNumber" : 43,
        "endLineNumber" : 201,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ptype=(ParameterizedType)from;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 199,
        "startColumnNumber" : 4,
        "endLineNumber" : 201,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (from instanceof ParameterizedType) {\n  ptype=(ParameterizedType)from;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1379,
        "startLineNumber" : 186,
        "startColumnNumber" : 36,
        "endLineNumber" : 232,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (from == null) {\n    return false;\n  }\n  if (to.equals(from)) {\n    return true;\n  }\n  Class<?> clazz=$Gson$Types.getRawType(from);\n  ParameterizedType ptype=null;\n  if (from instanceof ParameterizedType) {\n    ptype=(ParameterizedType)from;\n  }\n  if (ptype != null) {\n    Type[] tArgs=ptype.getActualTypeArguments();\n    TypeVariable<?>[] tParams=clazz.getTypeParameters();\n    for (int i=0; i < tArgs.length; i++) {\n      Type arg=tArgs[i];\n      TypeVariable<?> var=tParams[i];\n      while (arg instanceof TypeVariable<?>) {\n        TypeVariable<?> v=(TypeVariable<?>)arg;\n        arg=typeVarMap.get(v.getName());\n      }\n      typeVarMap.put(var.getName(),arg);\n    }\n    if (typeEquals(ptype,to,typeVarMap)) {\n      return true;\n    }\n  }\n  for (  Type itype : clazz.getGenericInterfaces()) {\n    if (isAssignableFrom(itype,to,new HashMap<String,Type>(typeVarMap))) {\n      return true;\n    }\n  }\n  Type sType=clazz.getGenericSuperclass();\n  return isAssignableFrom(sType,to,new HashMap<String,Type>(typeVarMap));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 200,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1600,
        "startLineNumber" : 181,
        "startColumnNumber" : 2,
        "endLineNumber" : 232,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Private recursive helper function to actually do the type-safe checking of assignability.\n */\nprivate static boolean isAssignableFrom(Type from,ParameterizedType to,Map<String,Type> typeVarMap){\n  if (from == null) {\n    return false;\n  }\n  if (to.equals(from)) {\n    return true;\n  }\n  Class<?> clazz=$Gson$Types.getRawType(from);\n  ParameterizedType ptype=null;\n  if (from instanceof ParameterizedType) {\n    ptype=(ParameterizedType)from;\n  }\n  if (ptype != null) {\n    Type[] tArgs=ptype.getActualTypeArguments();\n    TypeVariable<?>[] tParams=clazz.getTypeParameters();\n    for (int i=0; i < tArgs.length; i++) {\n      Type arg=tArgs[i];\n      TypeVariable<?> var=tParams[i];\n      while (arg instanceof TypeVariable<?>) {\n        TypeVariable<?> v=(TypeVariable<?>)arg;\n        arg=typeVarMap.get(v.getName());\n      }\n      typeVarMap.put(var.getName(),arg);\n    }\n    if (typeEquals(ptype,to,typeVarMap)) {\n      return true;\n    }\n  }\n  for (  Type itype : clazz.getGenericInterfaces()) {\n    if (isAssignableFrom(itype,to,new HashMap<String,Type>(typeVarMap))) {\n      return true;\n    }\n  }\n  Type sType=clazz.getGenericSuperclass();\n  return isAssignableFrom(sType,to,new HashMap<String,Type>(typeVarMap));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 223,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 200,
        "startColumnNumber" : 6,
        "endLineNumber" : 200,
        "endColumnNumber" : 39
      },
      "nodeContext" : "ptype=(ParameterizedType)from;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.reflect.ParameterizedType"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 200,
    "startColumnNumber" : 14,
    "endLineNumber" : 200,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ ]
}