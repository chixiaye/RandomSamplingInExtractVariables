{
  "id" : 518,
  "expression" : "(double)byteNum + 0.0005",
  "projectName" : "Blankj@AndroidUtilCode",
  "commitID" : "b0f09e2df62a8b5e40c07016bf0588e3d1eb4151",
  "filePath" : "/utilcode/src/main/java/com/blankj/utilcode/util/ConvertUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(double)byteNum + 0.0005",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 179,
      "startColumnNumber" : 42,
      "endLineNumber" : 179,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 179,
        "startColumnNumber" : 19,
        "endLineNumber" : 179,
        "endColumnNumber" : 68
      },
      "nodeContext" : "String.format(\"%.3fB\",(double)byteNum + 0.0005)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 179,
        "startColumnNumber" : 12,
        "endLineNumber" : 179,
        "endColumnNumber" : 69
      },
      "nodeContext" : "return String.format(\"%.3fB\",(double)byteNum + 0.0005);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 178,
        "startColumnNumber" : 49,
        "endLineNumber" : 180,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  return String.format(\"%.3fB\",(double)byteNum + 0.0005);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 510,
        "startLineNumber" : 178,
        "startColumnNumber" : 15,
        "endLineNumber" : 186,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (byteNum < MemoryConstants.KB) {\n  return String.format(\"%.3fB\",(double)byteNum + 0.0005);\n}\n else if (byteNum < MemoryConstants.MB) {\n  return String.format(\"%.3fKB\",(double)byteNum / MemoryConstants.KB + 0.0005);\n}\n else if (byteNum < MemoryConstants.GB) {\n  return String.format(\"%.3fMB\",(double)byteNum / MemoryConstants.MB + 0.0005);\n}\n else {\n  return String.format(\"%.3fGB\",(double)byteNum / MemoryConstants.GB + 0.0005);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 74,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 595,
        "startLineNumber" : 176,
        "startColumnNumber" : 8,
        "endLineNumber" : 186,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (byteNum < 0) {\n  return \"shouldn't be less than zero!\";\n}\n else if (byteNum < MemoryConstants.KB) {\n  return String.format(\"%.3fB\",(double)byteNum + 0.0005);\n}\n else if (byteNum < MemoryConstants.MB) {\n  return String.format(\"%.3fKB\",(double)byteNum / MemoryConstants.KB + 0.0005);\n}\n else if (byteNum < MemoryConstants.GB) {\n  return String.format(\"%.3fMB\",(double)byteNum / MemoryConstants.MB + 0.0005);\n}\n else {\n  return String.format(\"%.3fGB\",(double)byteNum / MemoryConstants.GB + 0.0005);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 81,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 611,
        "startLineNumber" : 175,
        "startColumnNumber" : 64,
        "endLineNumber" : 187,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (byteNum < 0) {\n    return \"shouldn't be less than zero!\";\n  }\n else   if (byteNum < MemoryConstants.KB) {\n    return String.format(\"%.3fB\",(double)byteNum + 0.0005);\n  }\n else   if (byteNum < MemoryConstants.MB) {\n    return String.format(\"%.3fKB\",(double)byteNum / MemoryConstants.KB + 0.0005);\n  }\n else   if (byteNum < MemoryConstants.GB) {\n    return String.format(\"%.3fMB\",(double)byteNum / MemoryConstants.MB + 0.0005);\n  }\n else {\n    return String.format(\"%.3fGB\",(double)byteNum / MemoryConstants.GB + 0.0005);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 82,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 816,
        "startLineNumber" : 167,
        "startColumnNumber" : 4,
        "endLineNumber" : 187,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * 字节数转合适内存大小 <p>保留3位小数</p>\n * @param byteNum 字节数\n * @return 合适内存大小\n */\n@SuppressLint(\"DefaultLocale\") public static String byte2FitMemorySize(final long byteNum){\n  if (byteNum < 0) {\n    return \"shouldn't be less than zero!\";\n  }\n else   if (byteNum < MemoryConstants.KB) {\n    return String.format(\"%.3fB\",(double)byteNum + 0.0005);\n  }\n else   if (byteNum < MemoryConstants.MB) {\n    return String.format(\"%.3fKB\",(double)byteNum / MemoryConstants.KB + 0.0005);\n  }\n else   if (byteNum < MemoryConstants.GB) {\n    return String.format(\"%.3fMB\",(double)byteNum / MemoryConstants.MB + 0.0005);\n  }\n else {\n    return String.format(\"%.3fGB\",(double)byteNum / MemoryConstants.GB + 0.0005);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 96,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 179,
        "startColumnNumber" : 12,
        "endLineNumber" : 179,
        "endColumnNumber" : 69
      },
      "nodeContext" : "return String.format(\"%.3fB\",(double)byteNum + 0.0005);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "double"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 179,
    "startColumnNumber" : 42,
    "endLineNumber" : 179,
    "endColumnNumber" : 67
  } ],
  "layoutRelationDataList" : [ ]
}