{
  "id" : 26,
  "expression" : "warningInvoke",
  "projectName" : "androidannotations@androidannotations",
  "commitID" : "b60a7ff27cb1bcb0eac2710c15c4957c0d992e27",
  "filePath" : "/AndroidAnnotations/androidannotations-core/androidannotations/src/main/java/org/androidannotations/internal/core/handler/RootFragmentHandler.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "warningInvoke",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 86,
      "startColumnNumber" : 2,
      "endLineNumber" : 86,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 86,
        "startColumnNumber" : 2,
        "endLineNumber" : 86,
        "endColumnNumber" : 49
      },
      "nodeContext" : "warningInvoke.arg(logTagForClassHolder(holder))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 86,
        "startColumnNumber" : 2,
        "endLineNumber" : 86,
        "endColumnNumber" : 50
      },
      "nodeContext" : "warningInvoke.arg(logTagForClassHolder(holder));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1209,
        "startLineNumber" : 74,
        "startColumnNumber" : 126,
        "endLineNumber" : 97,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  TypeMirror elementType=param.asType();\n  String typeQualifiedName=elementType.toString();\n  IJExpression rootFragmentRef=holder.getRootFragmentRef();\n  AbstractJClass extendingContextClass=getEnvironment().getJClass(typeQualifiedName);\n  JConditional cond=targetBlock._if(rootFragmentRef._instanceof(extendingContextClass));\n  cond._then().add(fieldRef.assign(cast(extendingContextClass,rootFragmentRef)));\n  JInvocation warningInvoke=getClasses().LOG.staticInvoke(\"w\");\n  warningInvoke.arg(logTagForClassHolder(holder));\n  warningInvoke.arg(lit(\"Due to class \").plus(rootFragmentRef.invoke(\"getClass\").invoke(\"getSimpleName\")).plus(lit(\", the @RootFragment \" + extendingContextClass.name() + \" won't be populated\")));\n  JInvocation warningInvokeIfNull=getClasses().LOG.staticInvoke(\"w\");\n  warningInvokeIfNull.arg(logTagForClassHolder(holder));\n  warningInvokeIfNull.arg(lit(\"Due to not having a rootFragment reference the @RootFragment \" + extendingContextClass.name() + \" won't be populated\"));\n  JConditional ifNotNull=cond._elseif(rootFragmentRef.ne(_null()));\n  ifNotNull._then().add(warningInvoke);\n  ifNotNull._else().add(warningInvokeIfNull);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 163,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1346,
        "startLineNumber" : 73,
        "startColumnNumber" : 1,
        "endLineNumber" : 97,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void assignValue(JBlock targetBlock,IJAssignmentTarget fieldRef,EBeanHolder holder,Element element,Element param){\n  TypeMirror elementType=param.asType();\n  String typeQualifiedName=elementType.toString();\n  IJExpression rootFragmentRef=holder.getRootFragmentRef();\n  AbstractJClass extendingContextClass=getEnvironment().getJClass(typeQualifiedName);\n  JConditional cond=targetBlock._if(rootFragmentRef._instanceof(extendingContextClass));\n  cond._then().add(fieldRef.assign(cast(extendingContextClass,rootFragmentRef)));\n  JInvocation warningInvoke=getClasses().LOG.staticInvoke(\"w\");\n  warningInvoke.arg(logTagForClassHolder(holder));\n  warningInvoke.arg(lit(\"Due to class \").plus(rootFragmentRef.invoke(\"getClass\").invoke(\"getSimpleName\")).plus(lit(\", the @RootFragment \" + extendingContextClass.name() + \" won't be populated\")));\n  JInvocation warningInvokeIfNull=getClasses().LOG.staticInvoke(\"w\");\n  warningInvokeIfNull.arg(logTagForClassHolder(holder));\n  warningInvokeIfNull.arg(lit(\"Due to not having a rootFragment reference the @RootFragment \" + extendingContextClass.name() + \" won't be populated\"));\n  JConditional ifNotNull=cond._elseif(rootFragmentRef.ne(_null()));\n  ifNotNull._then().add(warningInvoke);\n  ifNotNull._else().add(warningInvokeIfNull);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 189,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 86,
        "startColumnNumber" : 2,
        "endLineNumber" : 86,
        "endColumnNumber" : 50
      },
      "nodeContext" : "warningInvoke.arg(logTagForClassHolder(holder));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.androidannotations.internal.core.handler.JInvocation"
  }, {
    "nodeContext" : "warningInvoke",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 87,
      "startColumnNumber" : 2,
      "endLineNumber" : 87,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 199,
        "startLineNumber" : 87,
        "startColumnNumber" : 2,
        "endLineNumber" : 88,
        "endColumnNumber" : 184
      },
      "nodeContext" : "warningInvoke.arg(lit(\"Due to class \").plus(rootFragmentRef.invoke(\"getClass\").invoke(\"getSimpleName\")).plus(lit(\", the @RootFragment \" + extendingContextClass.name() + \" won't be populated\")))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 200,
        "startLineNumber" : 87,
        "startColumnNumber" : 2,
        "endLineNumber" : 88,
        "endColumnNumber" : 185
      },
      "nodeContext" : "warningInvoke.arg(lit(\"Due to class \").plus(rootFragmentRef.invoke(\"getClass\").invoke(\"getSimpleName\")).plus(lit(\", the @RootFragment \" + extendingContextClass.name() + \" won't be populated\")));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1209,
        "startLineNumber" : 74,
        "startColumnNumber" : 126,
        "endLineNumber" : 97,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  TypeMirror elementType=param.asType();\n  String typeQualifiedName=elementType.toString();\n  IJExpression rootFragmentRef=holder.getRootFragmentRef();\n  AbstractJClass extendingContextClass=getEnvironment().getJClass(typeQualifiedName);\n  JConditional cond=targetBlock._if(rootFragmentRef._instanceof(extendingContextClass));\n  cond._then().add(fieldRef.assign(cast(extendingContextClass,rootFragmentRef)));\n  JInvocation warningInvoke=getClasses().LOG.staticInvoke(\"w\");\n  warningInvoke.arg(logTagForClassHolder(holder));\n  warningInvoke.arg(lit(\"Due to class \").plus(rootFragmentRef.invoke(\"getClass\").invoke(\"getSimpleName\")).plus(lit(\", the @RootFragment \" + extendingContextClass.name() + \" won't be populated\")));\n  JInvocation warningInvokeIfNull=getClasses().LOG.staticInvoke(\"w\");\n  warningInvokeIfNull.arg(logTagForClassHolder(holder));\n  warningInvokeIfNull.arg(lit(\"Due to not having a rootFragment reference the @RootFragment \" + extendingContextClass.name() + \" won't be populated\"));\n  JConditional ifNotNull=cond._elseif(rootFragmentRef.ne(_null()));\n  ifNotNull._then().add(warningInvoke);\n  ifNotNull._else().add(warningInvokeIfNull);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 163,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1346,
        "startLineNumber" : 73,
        "startColumnNumber" : 1,
        "endLineNumber" : 97,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void assignValue(JBlock targetBlock,IJAssignmentTarget fieldRef,EBeanHolder holder,Element element,Element param){\n  TypeMirror elementType=param.asType();\n  String typeQualifiedName=elementType.toString();\n  IJExpression rootFragmentRef=holder.getRootFragmentRef();\n  AbstractJClass extendingContextClass=getEnvironment().getJClass(typeQualifiedName);\n  JConditional cond=targetBlock._if(rootFragmentRef._instanceof(extendingContextClass));\n  cond._then().add(fieldRef.assign(cast(extendingContextClass,rootFragmentRef)));\n  JInvocation warningInvoke=getClasses().LOG.staticInvoke(\"w\");\n  warningInvoke.arg(logTagForClassHolder(holder));\n  warningInvoke.arg(lit(\"Due to class \").plus(rootFragmentRef.invoke(\"getClass\").invoke(\"getSimpleName\")).plus(lit(\", the @RootFragment \" + extendingContextClass.name() + \" won't be populated\")));\n  JInvocation warningInvokeIfNull=getClasses().LOG.staticInvoke(\"w\");\n  warningInvokeIfNull.arg(logTagForClassHolder(holder));\n  warningInvokeIfNull.arg(lit(\"Due to not having a rootFragment reference the @RootFragment \" + extendingContextClass.name() + \" won't be populated\"));\n  JConditional ifNotNull=cond._elseif(rootFragmentRef.ne(_null()));\n  ifNotNull._then().add(warningInvoke);\n  ifNotNull._else().add(warningInvokeIfNull);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 189,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 199,
        "startLineNumber" : 87,
        "startColumnNumber" : 2,
        "endLineNumber" : 88,
        "endColumnNumber" : 184
      },
      "nodeContext" : "warningInvoke.arg(lit(\"Due to class \").plus(rootFragmentRef.invoke(\"getClass\").invoke(\"getSimpleName\")).plus(lit(\", the @RootFragment \" + extendingContextClass.name() + \" won't be populated\")))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 25,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "org.androidannotations.internal.core.handler.JInvocation"
  }, {
    "nodeContext" : "warningInvoke",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 95,
      "startColumnNumber" : 24,
      "endLineNumber" : 95,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 95,
        "startColumnNumber" : 2,
        "endLineNumber" : 95,
        "endColumnNumber" : 38
      },
      "nodeContext" : "ifNotNull._then().add(warningInvoke)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 95,
        "startColumnNumber" : 2,
        "endLineNumber" : 95,
        "endColumnNumber" : 39
      },
      "nodeContext" : "ifNotNull._then().add(warningInvoke);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1209,
        "startLineNumber" : 74,
        "startColumnNumber" : 126,
        "endLineNumber" : 97,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  TypeMirror elementType=param.asType();\n  String typeQualifiedName=elementType.toString();\n  IJExpression rootFragmentRef=holder.getRootFragmentRef();\n  AbstractJClass extendingContextClass=getEnvironment().getJClass(typeQualifiedName);\n  JConditional cond=targetBlock._if(rootFragmentRef._instanceof(extendingContextClass));\n  cond._then().add(fieldRef.assign(cast(extendingContextClass,rootFragmentRef)));\n  JInvocation warningInvoke=getClasses().LOG.staticInvoke(\"w\");\n  warningInvoke.arg(logTagForClassHolder(holder));\n  warningInvoke.arg(lit(\"Due to class \").plus(rootFragmentRef.invoke(\"getClass\").invoke(\"getSimpleName\")).plus(lit(\", the @RootFragment \" + extendingContextClass.name() + \" won't be populated\")));\n  JInvocation warningInvokeIfNull=getClasses().LOG.staticInvoke(\"w\");\n  warningInvokeIfNull.arg(logTagForClassHolder(holder));\n  warningInvokeIfNull.arg(lit(\"Due to not having a rootFragment reference the @RootFragment \" + extendingContextClass.name() + \" won't be populated\"));\n  JConditional ifNotNull=cond._elseif(rootFragmentRef.ne(_null()));\n  ifNotNull._then().add(warningInvoke);\n  ifNotNull._else().add(warningInvokeIfNull);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 163,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1346,
        "startLineNumber" : 73,
        "startColumnNumber" : 1,
        "endLineNumber" : 97,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void assignValue(JBlock targetBlock,IJAssignmentTarget fieldRef,EBeanHolder holder,Element element,Element param){\n  TypeMirror elementType=param.asType();\n  String typeQualifiedName=elementType.toString();\n  IJExpression rootFragmentRef=holder.getRootFragmentRef();\n  AbstractJClass extendingContextClass=getEnvironment().getJClass(typeQualifiedName);\n  JConditional cond=targetBlock._if(rootFragmentRef._instanceof(extendingContextClass));\n  cond._then().add(fieldRef.assign(cast(extendingContextClass,rootFragmentRef)));\n  JInvocation warningInvoke=getClasses().LOG.staticInvoke(\"w\");\n  warningInvoke.arg(logTagForClassHolder(holder));\n  warningInvoke.arg(lit(\"Due to class \").plus(rootFragmentRef.invoke(\"getClass\").invoke(\"getSimpleName\")).plus(lit(\", the @RootFragment \" + extendingContextClass.name() + \" won't be populated\")));\n  JInvocation warningInvokeIfNull=getClasses().LOG.staticInvoke(\"w\");\n  warningInvokeIfNull.arg(logTagForClassHolder(holder));\n  warningInvokeIfNull.arg(lit(\"Due to not having a rootFragment reference the @RootFragment \" + extendingContextClass.name() + \" won't be populated\"));\n  JConditional ifNotNull=cond._elseif(rootFragmentRef.ne(_null()));\n  ifNotNull._then().add(warningInvoke);\n  ifNotNull._else().add(warningInvokeIfNull);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 189,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 95,
        "startColumnNumber" : 2,
        "endLineNumber" : 95,
        "endColumnNumber" : 39
      },
      "nodeContext" : "ifNotNull._then().add(warningInvoke);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.androidannotations.internal.core.handler.JInvocation"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 86,
    "startColumnNumber" : 2,
    "endLineNumber" : 86,
    "endColumnNumber" : 15
  }, {
    "charLength" : 13,
    "startLineNumber" : 87,
    "startColumnNumber" : 2,
    "endLineNumber" : 87,
    "endColumnNumber" : 15
  }, {
    "charLength" : 13,
    "startLineNumber" : 95,
    "startColumnNumber" : 24,
    "endLineNumber" : 95,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}