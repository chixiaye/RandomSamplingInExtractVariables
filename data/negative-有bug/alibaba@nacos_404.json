{
  "id" : 404,
  "expression" : "!cancelled",
  "projectName" : "alibaba@nacos",
  "commitID" : "4e7346db1d6657ffe07c96bebd2d348229c2812f",
  "filePath" : "/naming/src/main/java/com/alibaba/nacos/naming/healthcheck/v2/HealthCheckTaskV2.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "!cancelled",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 109,
      "startColumnNumber" : 16,
      "endLineNumber" : 109,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1011,
        "startLineNumber" : 109,
        "startColumnNumber" : 12,
        "endLineNumber" : 125,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!cancelled) {\n  HealthCheckReactor.scheduleCheck(this);\n  if (this.getCheckRtWorst() > 0) {\n    long checkRtLastLast=getCheckRtLastLast();\n    this.setCheckRtLastLast(this.getCheckRtLast());\n    if (checkRtLastLast > 0) {\n      long diff=((this.getCheckRtLast() - this.getCheckRtLastLast()) * 10000) / checkRtLastLast;\n      if (Loggers.CHECK_RT.isDebugEnabled()) {\n        Loggers.CHECK_RT.debug(\"{}->normalized: {}, worst: {}, best: {}, last: {}, diff: {}\",client.getClientId(),this.getCheckRtNormalized(),this.getCheckRtWorst(),this.getCheckRtBest(),this.getCheckRtLast(),diff);\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 81,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,finally]",
      "nodePosition" : {
        "charLength" : 1035,
        "startLineNumber" : 108,
        "startColumnNumber" : 18,
        "endLineNumber" : 126,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!cancelled) {\n    HealthCheckReactor.scheduleCheck(this);\n    if (this.getCheckRtWorst() > 0) {\n      long checkRtLastLast=getCheckRtLastLast();\n      this.setCheckRtLastLast(this.getCheckRtLast());\n      if (checkRtLastLast > 0) {\n        long diff=((this.getCheckRtLast() - this.getCheckRtLastLast()) * 10000) / checkRtLastLast;\n        if (Loggers.CHECK_RT.isDebugEnabled()) {\n          Loggers.CHECK_RT.debug(\"{}->normalized: {}, worst: {}, best: {}, last: {}, diff: {}\",client.getClientId(),this.getCheckRtNormalized(),this.getCheckRtWorst(),this.getCheckRtBest(),this.getCheckRtLast(),diff);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 82,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1902,
        "startLineNumber" : 95,
        "startColumnNumber" : 8,
        "endLineNumber" : 126,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  for (  Service each : client.getAllPublishedService()) {\n    if (switchDomain.isHealthCheckEnabled(each.getGroupedServiceName())) {\n      InstancePublishInfo instancePublishInfo=client.getInstancePublishInfo(each);\n      ClusterMetadata metadata=getClusterMetadata(each,instancePublishInfo);\n      ApplicationUtils.getBean(HealthCheckProcessorV2Delegate.class).process(this,each,metadata);\n      if (Loggers.EVT_LOG.isDebugEnabled()) {\n        Loggers.EVT_LOG.debug(\"[HEALTH-CHECK] schedule health check task: {}\",client.getClientId());\n      }\n    }\n  }\n}\n catch (Throwable e) {\n  Loggers.SRV_LOG.error(\"[HEALTH-CHECK] error while process health check for {}\",client.getClientId(),e);\n}\n finally {\n  if (!cancelled) {\n    HealthCheckReactor.scheduleCheck(this);\n    if (this.getCheckRtWorst() > 0) {\n      long checkRtLastLast=getCheckRtLastLast();\n      this.setCheckRtLastLast(this.getCheckRtLast());\n      if (checkRtLastLast > 0) {\n        long diff=((this.getCheckRtLast() - this.getCheckRtLastLast()) * 10000) / checkRtLastLast;\n        if (Loggers.CHECK_RT.isDebugEnabled()) {\n          Loggers.CHECK_RT.debug(\"{}->normalized: {}, worst: {}, best: {}, last: {}, diff: {}\",client.getClientId(),this.getCheckRtNormalized(),this.getCheckRtWorst(),this.getCheckRtBest(),this.getCheckRtLast(),diff);\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 165,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1918,
        "startLineNumber" : 94,
        "startColumnNumber" : 32,
        "endLineNumber" : 127,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    for (    Service each : client.getAllPublishedService()) {\n      if (switchDomain.isHealthCheckEnabled(each.getGroupedServiceName())) {\n        InstancePublishInfo instancePublishInfo=client.getInstancePublishInfo(each);\n        ClusterMetadata metadata=getClusterMetadata(each,instancePublishInfo);\n        ApplicationUtils.getBean(HealthCheckProcessorV2Delegate.class).process(this,each,metadata);\n        if (Loggers.EVT_LOG.isDebugEnabled()) {\n          Loggers.EVT_LOG.debug(\"[HEALTH-CHECK] schedule health check task: {}\",client.getClientId());\n        }\n      }\n    }\n  }\n catch (  Throwable e) {\n    Loggers.SRV_LOG.error(\"[HEALTH-CHECK] error while process health check for {}\",client.getClientId(),e);\n  }\n finally {\n    if (!cancelled) {\n      HealthCheckReactor.scheduleCheck(this);\n      if (this.getCheckRtWorst() > 0) {\n        long checkRtLastLast=getCheckRtLastLast();\n        this.setCheckRtLastLast(this.getCheckRtLast());\n        if (checkRtLastLast > 0) {\n          long diff=((this.getCheckRtLast() - this.getCheckRtLastLast()) * 10000) / checkRtLastLast;\n          if (Loggers.CHECK_RT.isDebugEnabled()) {\n            Loggers.CHECK_RT.debug(\"{}->normalized: {}, worst: {}, best: {}, last: {}, diff: {}\",client.getClientId(),this.getCheckRtNormalized(),this.getCheckRtWorst(),this.getCheckRtBest(),this.getCheckRtLast(),diff);\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 166,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1960,
        "startLineNumber" : 93,
        "startColumnNumber" : 4,
        "endLineNumber" : 127,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void doHealthCheck(){\n  try {\n    for (    Service each : client.getAllPublishedService()) {\n      if (switchDomain.isHealthCheckEnabled(each.getGroupedServiceName())) {\n        InstancePublishInfo instancePublishInfo=client.getInstancePublishInfo(each);\n        ClusterMetadata metadata=getClusterMetadata(each,instancePublishInfo);\n        ApplicationUtils.getBean(HealthCheckProcessorV2Delegate.class).process(this,each,metadata);\n        if (Loggers.EVT_LOG.isDebugEnabled()) {\n          Loggers.EVT_LOG.debug(\"[HEALTH-CHECK] schedule health check task: {}\",client.getClientId());\n        }\n      }\n    }\n  }\n catch (  Throwable e) {\n    Loggers.SRV_LOG.error(\"[HEALTH-CHECK] error while process health check for {}\",client.getClientId(),e);\n  }\n finally {\n    if (!cancelled) {\n      HealthCheckReactor.scheduleCheck(this);\n      if (this.getCheckRtWorst() > 0) {\n        long checkRtLastLast=getCheckRtLastLast();\n        this.setCheckRtLastLast(this.getCheckRtLast());\n        if (checkRtLastLast > 0) {\n          long diff=((this.getCheckRtLast() - this.getCheckRtLastLast()) * 10000) / checkRtLastLast;\n          if (Loggers.CHECK_RT.isDebugEnabled()) {\n            Loggers.CHECK_RT.debug(\"{}->normalized: {}, worst: {}, best: {}, last: {}, diff: {}\",client.getClientId(),this.getCheckRtNormalized(),this.getCheckRtWorst(),this.getCheckRtBest(),this.getCheckRtLast(),diff);\n          }\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 172,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1011,
        "startLineNumber" : 109,
        "startColumnNumber" : 12,
        "endLineNumber" : 125,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!cancelled) {\n  HealthCheckReactor.scheduleCheck(this);\n  if (this.getCheckRtWorst() > 0) {\n    long checkRtLastLast=getCheckRtLastLast();\n    this.setCheckRtLastLast(this.getCheckRtLast());\n    if (checkRtLastLast > 0) {\n      long diff=((this.getCheckRtLast() - this.getCheckRtLastLast()) * 10000) / checkRtLastLast;\n      if (Loggers.CHECK_RT.isDebugEnabled()) {\n        Loggers.CHECK_RT.debug(\"{}->normalized: {}, worst: {}, best: {}, last: {}, diff: {}\",client.getClientId(),this.getCheckRtNormalized(),this.getCheckRtWorst(),this.getCheckRtBest(),this.getCheckRtLast(),diff);\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 81,
      "astHeight" : 15
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 109,
    "startColumnNumber" : 16,
    "endLineNumber" : 109,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ ]
}