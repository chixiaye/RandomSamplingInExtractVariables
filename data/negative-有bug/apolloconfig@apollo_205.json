{
  "id" : 205,
  "expression" : "Strings",
  "projectName" : "apolloconfig@apollo",
  "commitID" : "7b7d753f78e444f9cf97b0f238f7e33f585cb277",
  "filePath" : "/apollo-biz/src/main/java/com/ctrip/framework/apollo/biz/eureka/ApolloEurekaClientConfig.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Strings",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 33,
      "startColumnNumber" : 9,
      "endLineNumber" : 33,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 33,
        "startColumnNumber" : 9,
        "endLineNumber" : 33,
        "endColumnNumber" : 74
      },
      "nodeContext" : "Strings.isNullOrEmpty(environment.getProperty(EUREKA_URL_CONFIG))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 33,
        "startColumnNumber" : 8,
        "endLineNumber" : 33,
        "endColumnNumber" : 74
      },
      "nodeContext" : "!Strings.isNullOrEmpty(environment.getProperty(EUREKA_URL_CONFIG))",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 33,
        "startColumnNumber" : 4,
        "endLineNumber" : 35,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!Strings.isNullOrEmpty(environment.getProperty(EUREKA_URL_CONFIG))) {\n  return URL_SPLITTER.splitToList(environment.getProperty(EUREKA_URL_CONFIG));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 538,
        "startLineNumber" : 31,
        "startColumnNumber" : 64,
        "endLineNumber" : 47,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!Strings.isNullOrEmpty(environment.getProperty(EUREKA_URL_CONFIG))) {\n    return URL_SPLITTER.splitToList(environment.getProperty(EUREKA_URL_CONFIG));\n  }\n  String eurekaUrl=serverConfigService.getValue(EUREKA_URL_CONFIG);\n  if (!Strings.isNullOrEmpty(eurekaUrl)) {\n    return URL_SPLITTER.splitToList(eurekaUrl);\n  }\n  return super.getEurekaServerServiceUrls(myZone);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 679,
        "startLineNumber" : 28,
        "startColumnNumber" : 2,
        "endLineNumber" : 47,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Assert only one zone: defaultZone, but multiple environments.\n */\npublic List<String> getEurekaServerServiceUrls(String myZone){\n  if (!Strings.isNullOrEmpty(environment.getProperty(EUREKA_URL_CONFIG))) {\n    return URL_SPLITTER.splitToList(environment.getProperty(EUREKA_URL_CONFIG));\n  }\n  String eurekaUrl=serverConfigService.getValue(EUREKA_URL_CONFIG);\n  if (!Strings.isNullOrEmpty(eurekaUrl)) {\n    return URL_SPLITTER.splitToList(eurekaUrl);\n  }\n  return super.getEurekaServerServiceUrls(myZone);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 57,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 33,
        "startColumnNumber" : 8,
        "endLineNumber" : 33,
        "endColumnNumber" : 74
      },
      "nodeContext" : "!Strings.isNullOrEmpty(environment.getProperty(EUREKA_URL_CONFIG))",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "Strings",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 40,
      "startColumnNumber" : 9,
      "endLineNumber" : 40,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 40,
        "startColumnNumber" : 9,
        "endLineNumber" : 40,
        "endColumnNumber" : 41
      },
      "nodeContext" : "Strings.isNullOrEmpty(eurekaUrl)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 41
      },
      "nodeContext" : "!Strings.isNullOrEmpty(eurekaUrl)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 43,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (!Strings.isNullOrEmpty(eurekaUrl)) {\n  return URL_SPLITTER.splitToList(eurekaUrl);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 538,
        "startLineNumber" : 31,
        "startColumnNumber" : 64,
        "endLineNumber" : 47,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!Strings.isNullOrEmpty(environment.getProperty(EUREKA_URL_CONFIG))) {\n    return URL_SPLITTER.splitToList(environment.getProperty(EUREKA_URL_CONFIG));\n  }\n  String eurekaUrl=serverConfigService.getValue(EUREKA_URL_CONFIG);\n  if (!Strings.isNullOrEmpty(eurekaUrl)) {\n    return URL_SPLITTER.splitToList(eurekaUrl);\n  }\n  return super.getEurekaServerServiceUrls(myZone);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 679,
        "startLineNumber" : 28,
        "startColumnNumber" : 2,
        "endLineNumber" : 47,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Assert only one zone: defaultZone, but multiple environments.\n */\npublic List<String> getEurekaServerServiceUrls(String myZone){\n  if (!Strings.isNullOrEmpty(environment.getProperty(EUREKA_URL_CONFIG))) {\n    return URL_SPLITTER.splitToList(environment.getProperty(EUREKA_URL_CONFIG));\n  }\n  String eurekaUrl=serverConfigService.getValue(EUREKA_URL_CONFIG);\n  if (!Strings.isNullOrEmpty(eurekaUrl)) {\n    return URL_SPLITTER.splitToList(eurekaUrl);\n  }\n  return super.getEurekaServerServiceUrls(myZone);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 57,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 41
      },
      "nodeContext" : "!Strings.isNullOrEmpty(eurekaUrl)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 33,
    "startColumnNumber" : 9,
    "endLineNumber" : 33,
    "endColumnNumber" : 16
  }, {
    "charLength" : 7,
    "startLineNumber" : 40,
    "startColumnNumber" : 9,
    "endLineNumber" : 40,
    "endColumnNumber" : 16
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}