{
  "id" : 346,
  "expression" : "SetTestSuiteBuilder.using(new TestStringSetGenerator(){\n  @Override protected Set<String> create(  String[] elements){\n    PopulatableMapAsMultimap<Integer,String> multimap=PopulatableMapAsMultimap.create();\n    populateMultimapForGet(multimap,elements);\n    return multimap.build().get(3);\n  }\n}\n)",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava-tests/test/com/google/common/collect/MultimapsCollectionTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "SetTestSuiteBuilder.using(new TestStringSetGenerator(){\n  @Override protected Set<String> create(  String[] elements){\n    PopulatableMapAsMultimap<Integer,String> multimap=PopulatableMapAsMultimap.create();\n    populateMultimapForGet(multimap,elements);\n    return multimap.build().get(3);\n  }\n}\n)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 465,
      "startLineNumber" : 267,
      "startColumnNumber" : 8,
      "endLineNumber" : 276,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 49,
    "astHeight" : 9,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 509,
        "startLineNumber" : 267,
        "startColumnNumber" : 8,
        "endLineNumber" : 277,
        "endColumnNumber" : 42
      },
      "nodeContext" : "SetTestSuiteBuilder.using(new TestStringSetGenerator(){\n  @Override protected Set<String> create(  String[] elements){\n    PopulatableMapAsMultimap<Integer,String> multimap=PopulatableMapAsMultimap.create();\n    populateMultimapForGet(multimap,elements);\n    return multimap.build().get(3);\n  }\n}\n).named(\"Multimaps.forMap.get\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 52,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 558,
        "startLineNumber" : 267,
        "startColumnNumber" : 8,
        "endLineNumber" : 278,
        "endColumnNumber" : 47
      },
      "nodeContext" : "SetTestSuiteBuilder.using(new TestStringSetGenerator(){\n  @Override protected Set<String> create(  String[] elements){\n    PopulatableMapAsMultimap<Integer,String> multimap=PopulatableMapAsMultimap.create();\n    populateMultimapForGet(multimap,elements);\n    return multimap.build().get(3);\n  }\n}\n).named(\"Multimaps.forMap.get\").withFeatures(FOR_MAP_FEATURES_ONE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 55,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 590,
        "startLineNumber" : 267,
        "startColumnNumber" : 8,
        "endLineNumber" : 279,
        "endColumnNumber" : 30
      },
      "nodeContext" : "SetTestSuiteBuilder.using(new TestStringSetGenerator(){\n  @Override protected Set<String> create(  String[] elements){\n    PopulatableMapAsMultimap<Integer,String> multimap=PopulatableMapAsMultimap.create();\n    populateMultimapForGet(multimap,elements);\n    return multimap.build().get(3);\n  }\n}\n).named(\"Multimaps.forMap.get\").withFeatures(FOR_MAP_FEATURES_ONE).createTestSuite()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 57,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 615,
        "startLineNumber" : 266,
        "startColumnNumber" : 4,
        "endLineNumber" : 279,
        "endColumnNumber" : 31
      },
      "nodeContext" : "suite.addTest(SetTestSuiteBuilder.using(new TestStringSetGenerator(){\n  @Override protected Set<String> create(  String[] elements){\n    PopulatableMapAsMultimap<Integer,String> multimap=PopulatableMapAsMultimap.create();\n    populateMultimapForGet(multimap,elements);\n    return multimap.build().get(3);\n  }\n}\n).named(\"Multimaps.forMap.get\").withFeatures(FOR_MAP_FEATURES_ONE).createTestSuite())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 60,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 616,
        "startLineNumber" : 266,
        "startColumnNumber" : 4,
        "endLineNumber" : 279,
        "endColumnNumber" : 32
      },
      "nodeContext" : "suite.addTest(SetTestSuiteBuilder.using(new TestStringSetGenerator(){\n  @Override protected Set<String> create(  String[] elements){\n    PopulatableMapAsMultimap<Integer,String> multimap=PopulatableMapAsMultimap.create();\n    populateMultimapForGet(multimap,elements);\n    return multimap.build().get(3);\n  }\n}\n).named(\"Multimaps.forMap.get\").withFeatures(FOR_MAP_FEATURES_ONE).createTestSuite());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 61,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3749,
        "startLineNumber" : 235,
        "startColumnNumber" : 29,
        "endLineNumber" : 322,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  TestSuite suite=new TestSuite();\n  suite.addTest(transformSuite());\n  suite.addTest(filterSuite());\n  suite.addTest(ListMultimapTestSuiteBuilder.using(new TestStringListMultimapGenerator(){\n    @Override protected ListMultimap<String,String> create(    Entry<String,String>[] entries){\n      ListMultimap<String,String> multimap=Multimaps.synchronizedListMultimap(ArrayListMultimap.<String,String>create());\n      for (      Entry<String,String> entry : entries) {\n        multimap.put(entry.getKey(),entry.getValue());\n      }\n      return multimap;\n    }\n  }\n).named(\"synchronized ArrayListMultimap\").withFeatures(MapFeature.ALLOWS_NULL_KEYS,MapFeature.ALLOWS_NULL_VALUES,MapFeature.ALLOWS_ANY_NULL_QUERIES,MapFeature.GENERAL_PURPOSE,MapFeature.FAILS_FAST_ON_CONCURRENT_MODIFICATION,CollectionFeature.SUPPORTS_ITERATOR_REMOVE,CollectionSize.ANY).createTestSuite());\n  suite.addTest(SetTestSuiteBuilder.using(new TestStringSetGenerator(){\n    @Override protected Set<String> create(    String[] elements){\n      PopulatableMapAsMultimap<Integer,String> multimap=PopulatableMapAsMultimap.create();\n      populateMultimapForGet(multimap,elements);\n      return multimap.build().get(3);\n    }\n  }\n).named(\"Multimaps.forMap.get\").withFeatures(FOR_MAP_FEATURES_ONE).createTestSuite());\n  suite.addTest(SetTestSuiteBuilder.using(new TestStringSetGenerator(){\n    @Override protected Set<String> create(    String[] elements){\n      PopulatableMapAsMultimap<String,Integer> multimap=PopulatableMapAsMultimap.create();\n      populateMultimapForKeySet(multimap,elements);\n      return multimap.build().keySet();\n    }\n  }\n).named(\"Multimaps.forMap.keySet\").withFeatures(FOR_MAP_FEATURES_ANY).createTestSuite());\n  suite.addTest(MultisetTestSuiteBuilder.using(new TestStringMultisetGenerator(){\n    @Override protected Multiset<String> create(    String[] elements){\n      PopulatableMapAsMultimap<String,Integer> multimap=PopulatableMapAsMultimap.create();\n      populateMultimapForKeys(multimap,elements);\n      return multimap.build().keys();\n    }\n  }\n).named(\"Multimaps.forMap.keys\").withFeatures(FOR_MAP_FEATURES_ANY).suppressing(getCountDuplicateInitializingMethods()).suppressing(getSetCountDuplicateInitializingMethods()).suppressing(getIteratorDuplicateInitializingMethods()).suppressing(getRemoveDuplicateInitializingMethods()).suppressing(getForEachEntryDuplicateInitializingMethods()).suppressing(getElementSetDuplicateInitializingMethods()).createTestSuite());\n  return suite;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 335,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3776,
        "startLineNumber" : 235,
        "startColumnNumber" : 2,
        "endLineNumber" : 322,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static Test suite(){\n  TestSuite suite=new TestSuite();\n  suite.addTest(transformSuite());\n  suite.addTest(filterSuite());\n  suite.addTest(ListMultimapTestSuiteBuilder.using(new TestStringListMultimapGenerator(){\n    @Override protected ListMultimap<String,String> create(    Entry<String,String>[] entries){\n      ListMultimap<String,String> multimap=Multimaps.synchronizedListMultimap(ArrayListMultimap.<String,String>create());\n      for (      Entry<String,String> entry : entries) {\n        multimap.put(entry.getKey(),entry.getValue());\n      }\n      return multimap;\n    }\n  }\n).named(\"synchronized ArrayListMultimap\").withFeatures(MapFeature.ALLOWS_NULL_KEYS,MapFeature.ALLOWS_NULL_VALUES,MapFeature.ALLOWS_ANY_NULL_QUERIES,MapFeature.GENERAL_PURPOSE,MapFeature.FAILS_FAST_ON_CONCURRENT_MODIFICATION,CollectionFeature.SUPPORTS_ITERATOR_REMOVE,CollectionSize.ANY).createTestSuite());\n  suite.addTest(SetTestSuiteBuilder.using(new TestStringSetGenerator(){\n    @Override protected Set<String> create(    String[] elements){\n      PopulatableMapAsMultimap<Integer,String> multimap=PopulatableMapAsMultimap.create();\n      populateMultimapForGet(multimap,elements);\n      return multimap.build().get(3);\n    }\n  }\n).named(\"Multimaps.forMap.get\").withFeatures(FOR_MAP_FEATURES_ONE).createTestSuite());\n  suite.addTest(SetTestSuiteBuilder.using(new TestStringSetGenerator(){\n    @Override protected Set<String> create(    String[] elements){\n      PopulatableMapAsMultimap<String,Integer> multimap=PopulatableMapAsMultimap.create();\n      populateMultimapForKeySet(multimap,elements);\n      return multimap.build().keySet();\n    }\n  }\n).named(\"Multimaps.forMap.keySet\").withFeatures(FOR_MAP_FEATURES_ANY).createTestSuite());\n  suite.addTest(MultisetTestSuiteBuilder.using(new TestStringMultisetGenerator(){\n    @Override protected Multiset<String> create(    String[] elements){\n      PopulatableMapAsMultimap<String,Integer> multimap=PopulatableMapAsMultimap.create();\n      populateMultimapForKeys(multimap,elements);\n      return multimap.build().keys();\n    }\n  }\n).named(\"Multimaps.forMap.keys\").withFeatures(FOR_MAP_FEATURES_ANY).suppressing(getCountDuplicateInitializingMethods()).suppressing(getSetCountDuplicateInitializingMethods()).suppressing(getIteratorDuplicateInitializingMethods()).suppressing(getRemoveDuplicateInitializingMethods()).suppressing(getForEachEntryDuplicateInitializingMethods()).suppressing(getElementSetDuplicateInitializingMethods()).createTestSuite());\n  return suite;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 341,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 509,
        "startLineNumber" : 267,
        "startColumnNumber" : 8,
        "endLineNumber" : 277,
        "endColumnNumber" : 42
      },
      "nodeContext" : "SetTestSuiteBuilder.using(new TestStringSetGenerator(){\n  @Override protected Set<String> create(  String[] elements){\n    PopulatableMapAsMultimap<Integer,String> multimap=PopulatableMapAsMultimap.create();\n    populateMultimapForGet(multimap,elements);\n    return multimap.build().get(3);\n  }\n}\n).named(\"Multimaps.forMap.get\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 52,
      "astHeight" : 10
    },
    "tokenLength" : 19,
    "type" : "com.google.common.collect.testing.SetTestSuiteBuilder<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 465,
    "startLineNumber" : 267,
    "startColumnNumber" : 8,
    "endLineNumber" : 276,
    "endColumnNumber" : 18
  } ],
  "layoutRelationDataList" : [ ]
}