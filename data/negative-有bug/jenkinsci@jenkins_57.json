{
  "id" : 57,
  "expression" : "LOGGER",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/core/src/main/java/jenkins/security/stapler/TypedFilter.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "LOGGER",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 37,
      "startColumnNumber" : 16,
      "endLineNumber" : 37,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 222,
        "startLineNumber" : 37,
        "startColumnNumber" : 16,
        "endLineNumber" : 40,
        "endColumnNumber" : 17
      },
      "nodeContext" : "LOGGER.log(Level.FINE,\"Class {0} is acceptable because it is an Array of acceptable elements {1}\",new Object[]{clazz.getName(),elementClazz.getName()})",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 223,
        "startLineNumber" : 37,
        "startColumnNumber" : 16,
        "endLineNumber" : 40,
        "endColumnNumber" : 18
      },
      "nodeContext" : "LOGGER.log(Level.FINE,\"Class {0} is acceptable because it is an Array of acceptable elements {1}\",new Object[]{clazz.getName(),elementClazz.getName()});\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 287,
        "startLineNumber" : 36,
        "startColumnNumber" : 49,
        "endLineNumber" : 42,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  LOGGER.log(Level.FINE,\"Class {0} is acceptable because it is an Array of acceptable elements {1}\",new Object[]{clazz.getName(),elementClazz.getName()});\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 626,
        "startLineNumber" : 36,
        "startColumnNumber" : 12,
        "endLineNumber" : 48,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (isClassAcceptable(elementClazz)) {\n  LOGGER.log(Level.FINE,\"Class {0} is acceptable because it is an Array of acceptable elements {1}\",new Object[]{clazz.getName(),elementClazz.getName()});\n  return true;\n}\n else {\n  LOGGER.log(Level.FINE,\"Class {0} is not acceptable because it is an Array of non-acceptable elements {1}\",new Object[]{clazz.getName(),elementClazz.getName()});\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 50,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 889,
        "startLineNumber" : 32,
        "startColumnNumber" : 29,
        "endLineNumber" : 49,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Class<?> elementClazz=clazz.getComponentType();\n  if (isClassAcceptable(elementClazz)) {\n    LOGGER.log(Level.FINE,\"Class {0} is acceptable because it is an Array of acceptable elements {1}\",new Object[]{clazz.getName(),elementClazz.getName()});\n    return true;\n  }\n else {\n    LOGGER.log(Level.FINE,\"Class {0} is not acceptable because it is an Array of non-acceptable elements {1}\",new Object[]{clazz.getName(),elementClazz.getName()});\n    return false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 61,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 910,
        "startLineNumber" : 32,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (clazz.isArray()) {\n  Class<?> elementClazz=clazz.getComponentType();\n  if (isClassAcceptable(elementClazz)) {\n    LOGGER.log(Level.FINE,\"Class {0} is acceptable because it is an Array of acceptable elements {1}\",new Object[]{clazz.getName(),elementClazz.getName()});\n    return true;\n  }\n else {\n    LOGGER.log(Level.FINE,\"Class {0} is not acceptable because it is an Array of non-acceptable elements {1}\",new Object[]{clazz.getName(),elementClazz.getName()});\n    return false;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 995,
        "startLineNumber" : 31,
        "startColumnNumber" : 54,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (clazz.isArray()) {\n    Class<?> elementClazz=clazz.getComponentType();\n    if (isClassAcceptable(elementClazz)) {\n      LOGGER.log(Level.FINE,\"Class {0} is acceptable because it is an Array of acceptable elements {1}\",new Object[]{clazz.getName(),elementClazz.getName()});\n      return true;\n    }\n else {\n      LOGGER.log(Level.FINE,\"Class {0} is not acceptable because it is an Array of non-acceptable elements {1}\",new Object[]{clazz.getName(),elementClazz.getName()});\n      return false;\n    }\n  }\n  return SKIP_TYPE_CHECK || isStaplerRelevantCached(clazz);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1045,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private boolean isClassAcceptable(Class<?> clazz){\n  if (clazz.isArray()) {\n    Class<?> elementClazz=clazz.getComponentType();\n    if (isClassAcceptable(elementClazz)) {\n      LOGGER.log(Level.FINE,\"Class {0} is acceptable because it is an Array of acceptable elements {1}\",new Object[]{clazz.getName(),elementClazz.getName()});\n      return true;\n    }\n else {\n      LOGGER.log(Level.FINE,\"Class {0} is not acceptable because it is an Array of non-acceptable elements {1}\",new Object[]{clazz.getName(),elementClazz.getName()});\n      return false;\n    }\n  }\n  return SKIP_TYPE_CHECK || isStaplerRelevantCached(clazz);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 82,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 222,
        "startLineNumber" : 37,
        "startColumnNumber" : 16,
        "endLineNumber" : 40,
        "endColumnNumber" : 17
      },
      "nodeContext" : "LOGGER.log(Level.FINE,\"Class {0} is acceptable because it is an Array of acceptable elements {1}\",new Object[]{clazz.getName(),elementClazz.getName()})",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.logging.Logger"
  }, {
    "nodeContext" : "LOGGER",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 43,
      "startColumnNumber" : 16,
      "endLineNumber" : 43,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 230,
        "startLineNumber" : 43,
        "startColumnNumber" : 16,
        "endLineNumber" : 46,
        "endColumnNumber" : 17
      },
      "nodeContext" : "LOGGER.log(Level.FINE,\"Class {0} is not acceptable because it is an Array of non-acceptable elements {1}\",new Object[]{clazz.getName(),elementClazz.getName()})",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 231,
        "startLineNumber" : 43,
        "startColumnNumber" : 16,
        "endLineNumber" : 46,
        "endColumnNumber" : 18
      },
      "nodeContext" : "LOGGER.log(Level.FINE,\"Class {0} is not acceptable because it is an Array of non-acceptable elements {1}\",new Object[]{clazz.getName(),elementClazz.getName()});\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 296,
        "startLineNumber" : 42,
        "startColumnNumber" : 19,
        "endLineNumber" : 48,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  LOGGER.log(Level.FINE,\"Class {0} is not acceptable because it is an Array of non-acceptable elements {1}\",new Object[]{clazz.getName(),elementClazz.getName()});\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 626,
        "startLineNumber" : 36,
        "startColumnNumber" : 12,
        "endLineNumber" : 48,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (isClassAcceptable(elementClazz)) {\n  LOGGER.log(Level.FINE,\"Class {0} is acceptable because it is an Array of acceptable elements {1}\",new Object[]{clazz.getName(),elementClazz.getName()});\n  return true;\n}\n else {\n  LOGGER.log(Level.FINE,\"Class {0} is not acceptable because it is an Array of non-acceptable elements {1}\",new Object[]{clazz.getName(),elementClazz.getName()});\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 50,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 889,
        "startLineNumber" : 32,
        "startColumnNumber" : 29,
        "endLineNumber" : 49,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Class<?> elementClazz=clazz.getComponentType();\n  if (isClassAcceptable(elementClazz)) {\n    LOGGER.log(Level.FINE,\"Class {0} is acceptable because it is an Array of acceptable elements {1}\",new Object[]{clazz.getName(),elementClazz.getName()});\n    return true;\n  }\n else {\n    LOGGER.log(Level.FINE,\"Class {0} is not acceptable because it is an Array of non-acceptable elements {1}\",new Object[]{clazz.getName(),elementClazz.getName()});\n    return false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 61,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 910,
        "startLineNumber" : 32,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (clazz.isArray()) {\n  Class<?> elementClazz=clazz.getComponentType();\n  if (isClassAcceptable(elementClazz)) {\n    LOGGER.log(Level.FINE,\"Class {0} is acceptable because it is an Array of acceptable elements {1}\",new Object[]{clazz.getName(),elementClazz.getName()});\n    return true;\n  }\n else {\n    LOGGER.log(Level.FINE,\"Class {0} is not acceptable because it is an Array of non-acceptable elements {1}\",new Object[]{clazz.getName(),elementClazz.getName()});\n    return false;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 995,
        "startLineNumber" : 31,
        "startColumnNumber" : 54,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (clazz.isArray()) {\n    Class<?> elementClazz=clazz.getComponentType();\n    if (isClassAcceptable(elementClazz)) {\n      LOGGER.log(Level.FINE,\"Class {0} is acceptable because it is an Array of acceptable elements {1}\",new Object[]{clazz.getName(),elementClazz.getName()});\n      return true;\n    }\n else {\n      LOGGER.log(Level.FINE,\"Class {0} is not acceptable because it is an Array of non-acceptable elements {1}\",new Object[]{clazz.getName(),elementClazz.getName()});\n      return false;\n    }\n  }\n  return SKIP_TYPE_CHECK || isStaplerRelevantCached(clazz);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1045,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private boolean isClassAcceptable(Class<?> clazz){\n  if (clazz.isArray()) {\n    Class<?> elementClazz=clazz.getComponentType();\n    if (isClassAcceptable(elementClazz)) {\n      LOGGER.log(Level.FINE,\"Class {0} is acceptable because it is an Array of acceptable elements {1}\",new Object[]{clazz.getName(),elementClazz.getName()});\n      return true;\n    }\n else {\n      LOGGER.log(Level.FINE,\"Class {0} is not acceptable because it is an Array of non-acceptable elements {1}\",new Object[]{clazz.getName(),elementClazz.getName()});\n      return false;\n    }\n  }\n  return SKIP_TYPE_CHECK || isStaplerRelevantCached(clazz);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 82,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 230,
        "startLineNumber" : 43,
        "startColumnNumber" : 16,
        "endLineNumber" : 46,
        "endColumnNumber" : 17
      },
      "nodeContext" : "LOGGER.log(Level.FINE,\"Class {0} is not acceptable because it is an Array of non-acceptable elements {1}\",new Object[]{clazz.getName(),elementClazz.getName()})",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 19,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.logging.Logger"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 37,
    "startColumnNumber" : 16,
    "endLineNumber" : 37,
    "endColumnNumber" : 22
  }, {
    "charLength" : 6,
    "startLineNumber" : 43,
    "startColumnNumber" : 16,
    "endLineNumber" : 43,
    "endColumnNumber" : 22
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}