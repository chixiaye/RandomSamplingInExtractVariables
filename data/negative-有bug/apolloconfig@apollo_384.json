{
  "id" : 384,
  "expression" : "permissions",
  "projectName" : "apolloconfig@apollo",
  "commitID" : "7b7d753f78e444f9cf97b0f238f7e33f585cb277",
  "filePath" : "/apollo-portal/src/main/java/com/ctrip/framework/apollo/portal/service/RolePermissionService.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "permissions",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 227,
      "startColumnNumber" : 33,
      "endLineNumber" : 227,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 227,
        "startColumnNumber" : 4,
        "endLineNumber" : 229,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (Permission permission : permissions) {\n  targetIdPermissionTypes.put(permission.getTargetId(),permission.getPermissionType());\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 811,
        "startLineNumber" : 225,
        "startColumnNumber" : 72,
        "endLineNumber" : 242,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Multimap<String,String> targetIdPermissionTypes=HashMultimap.create();\n  for (  Permission permission : permissions) {\n    targetIdPermissionTypes.put(permission.getTargetId(),permission.getPermissionType());\n  }\n  for (  String targetId : targetIdPermissionTypes.keySet()) {\n    Collection<String> permissionTypes=targetIdPermissionTypes.get(targetId);\n    List<Permission> current=permissionRepository.findByPermissionTypeInAndTargetId(permissionTypes,targetId);\n    Preconditions.checkState(CollectionUtils.isEmpty(current),\"Permission with permissionType %s targetId %s already exists!\",permissionTypes,targetId);\n  }\n  Iterable<Permission> results=permissionRepository.save(permissions);\n  return FluentIterable.from(results).toSet();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 988,
        "startLineNumber" : 221,
        "startColumnNumber" : 2,
        "endLineNumber" : 242,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Create permissions, note that permissionType + targetId should be unique\n */\n@Transactional public Set<Permission> createPermissions(Set<Permission> permissions){\n  Multimap<String,String> targetIdPermissionTypes=HashMultimap.create();\n  for (  Permission permission : permissions) {\n    targetIdPermissionTypes.put(permission.getTargetId(),permission.getPermissionType());\n  }\n  for (  String targetId : targetIdPermissionTypes.keySet()) {\n    Collection<String> permissionTypes=targetIdPermissionTypes.get(targetId);\n    List<Permission> current=permissionRepository.findByPermissionTypeInAndTargetId(permissionTypes,targetId);\n    Preconditions.checkState(CollectionUtils.isEmpty(current),\"Permission with permissionType %s targetId %s already exists!\",permissionTypes,targetId);\n  }\n  Iterable<Permission> results=permissionRepository.save(permissions);\n  return FluentIterable.from(results).toSet();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 113,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 227,
        "startColumnNumber" : 4,
        "endLineNumber" : 229,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (Permission permission : permissions) {\n  targetIdPermissionTypes.put(permission.getTargetId(),permission.getPermissionType());\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.Set<com.ctrip.framework.apollo.portal.entity.po.Permission>"
  }, {
    "nodeContext" : "permissions",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 240,
      "startColumnNumber" : 61,
      "endLineNumber" : 240,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 240,
        "startColumnNumber" : 35,
        "endLineNumber" : 240,
        "endColumnNumber" : 73
      },
      "nodeContext" : "permissionRepository.save(permissions)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 240,
        "startColumnNumber" : 25,
        "endLineNumber" : 240,
        "endColumnNumber" : 73
      },
      "nodeContext" : "results=permissionRepository.save(permissions)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 240,
        "startColumnNumber" : 4,
        "endLineNumber" : 240,
        "endColumnNumber" : 74
      },
      "nodeContext" : "Iterable<Permission> results=permissionRepository.save(permissions);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 811,
        "startLineNumber" : 225,
        "startColumnNumber" : 72,
        "endLineNumber" : 242,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Multimap<String,String> targetIdPermissionTypes=HashMultimap.create();\n  for (  Permission permission : permissions) {\n    targetIdPermissionTypes.put(permission.getTargetId(),permission.getPermissionType());\n  }\n  for (  String targetId : targetIdPermissionTypes.keySet()) {\n    Collection<String> permissionTypes=targetIdPermissionTypes.get(targetId);\n    List<Permission> current=permissionRepository.findByPermissionTypeInAndTargetId(permissionTypes,targetId);\n    Preconditions.checkState(CollectionUtils.isEmpty(current),\"Permission with permissionType %s targetId %s already exists!\",permissionTypes,targetId);\n  }\n  Iterable<Permission> results=permissionRepository.save(permissions);\n  return FluentIterable.from(results).toSet();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 988,
        "startLineNumber" : 221,
        "startColumnNumber" : 2,
        "endLineNumber" : 242,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Create permissions, note that permissionType + targetId should be unique\n */\n@Transactional public Set<Permission> createPermissions(Set<Permission> permissions){\n  Multimap<String,String> targetIdPermissionTypes=HashMultimap.create();\n  for (  Permission permission : permissions) {\n    targetIdPermissionTypes.put(permission.getTargetId(),permission.getPermissionType());\n  }\n  for (  String targetId : targetIdPermissionTypes.keySet()) {\n    Collection<String> permissionTypes=targetIdPermissionTypes.get(targetId);\n    List<Permission> current=permissionRepository.findByPermissionTypeInAndTargetId(permissionTypes,targetId);\n    Preconditions.checkState(CollectionUtils.isEmpty(current),\"Permission with permissionType %s targetId %s already exists!\",permissionTypes,targetId);\n  }\n  Iterable<Permission> results=permissionRepository.save(permissions);\n  return FluentIterable.from(results).toSet();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 113,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 240,
        "startColumnNumber" : 4,
        "endLineNumber" : 240,
        "endColumnNumber" : 74
      },
      "nodeContext" : "Iterable<Permission> results=permissionRepository.save(permissions);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Set<com.ctrip.framework.apollo.portal.entity.po.Permission>"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 227,
    "startColumnNumber" : 33,
    "endLineNumber" : 227,
    "endColumnNumber" : 44
  }, {
    "charLength" : 11,
    "startLineNumber" : 240,
    "startColumnNumber" : 61,
    "endLineNumber" : 240,
    "endColumnNumber" : 72
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}