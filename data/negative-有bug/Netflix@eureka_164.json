{
  "id" : 164,
  "expression" : "\"Provided buffer does not contain JSON object conforming to type \"",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-core/src/main/java/com/netflix/eureka2/utils/Json.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Provided buffer does not contain JSON object conforming to type \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 66,
      "startLineNumber" : 60,
      "startColumnNumber" : 47,
      "endLineNumber" : 60,
      "endColumnNumber" : 113
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 60,
        "startColumnNumber" : 47,
        "endLineNumber" : 60,
        "endColumnNumber" : 130
      },
      "nodeContext" : "\"Provided buffer does not contain JSON object conforming to type \" + type.getName()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 60,
        "startColumnNumber" : 18,
        "endLineNumber" : 60,
        "endColumnNumber" : 134
      },
      "nodeContext" : "new IllegalArgumentException(\"Provided buffer does not contain JSON object conforming to type \" + type.getName(),e)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 60,
        "endColumnNumber" : 135
      },
      "nodeContext" : "throw new IllegalArgumentException(\"Provided buffer does not contain JSON object conforming to type \" + type.getName(),e);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 147,
        "startLineNumber" : 59,
        "startColumnNumber" : 32,
        "endLineNumber" : 61,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  throw new IllegalArgumentException(\"Provided buffer does not contain JSON object conforming to type \" + type.getName(),e);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 169,
        "startLineNumber" : 59,
        "startColumnNumber" : 10,
        "endLineNumber" : 61,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (IOException e) {\n  throw new IllegalArgumentException(\"Provided buffer does not contain JSON object conforming to type \" + type.getName(),e);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 237,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  return MAPPER.readValue(byteBuf,type);\n}\n catch (IOException e) {\n  throw new IllegalArgumentException(\"Provided buffer does not contain JSON object conforming to type \" + type.getName(),e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 253,
        "startLineNumber" : 56,
        "startColumnNumber" : 64,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    return MAPPER.readValue(byteBuf,type);\n  }\n catch (  IOException e) {\n    throw new IllegalArgumentException(\"Provided buffer does not contain JSON object conforming to type \" + type.getName(),e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 313,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static <T>T fromJson(byte[] byteBuf,Class<T> type){\n  try {\n    return MAPPER.readValue(byteBuf,type);\n  }\n catch (  IOException e) {\n    throw new IllegalArgumentException(\"Provided buffer does not contain JSON object conforming to type \" + type.getName(),e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 45,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 60,
        "endColumnNumber" : 135
      },
      "nodeContext" : "throw new IllegalArgumentException(\"Provided buffer does not contain JSON object conforming to type \" + type.getName(),e);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 10,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 66,
    "startLineNumber" : 60,
    "startColumnNumber" : 47,
    "endLineNumber" : 60,
    "endColumnNumber" : 113
  } ],
  "layoutRelationDataList" : [ ]
}