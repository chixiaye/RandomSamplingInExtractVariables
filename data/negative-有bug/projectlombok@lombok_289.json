{
  "id" : 289,
  "expression" : "methodEnd",
  "projectName" : "projectlombok@lombok",
  "commitID" : "25def866b50860715ee7c315c678b8c3d1ba9b56",
  "filePath" : "/src/core/lombok/eclipse/handlers/HandleSneakyThrows.java",
  "occurrences" : 16,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "methodEnd",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 165,
      "startColumnNumber" : 22,
      "endLineNumber" : 165,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 165,
        "startColumnNumber" : 22,
        "endLineNumber" : 165,
        "endColumnNumber" : 37
      },
      "nodeContext" : "methodEnd << 32",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 165,
        "startColumnNumber" : 22,
        "endLineNumber" : 165,
        "endColumnNumber" : 65
      },
      "nodeContext" : "methodEnd << 32 | (methodEnd & 0xFFFFFFFFL)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 165,
        "startColumnNumber" : 7,
        "endLineNumber" : 165,
        "endColumnNumber" : 65
      },
      "nodeContext" : "methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 165,
        "startColumnNumber" : 2,
        "endLineNumber" : 165,
        "endColumnNumber" : 66
      },
      "nodeContext" : "long methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3202,
        "startLineNumber" : 162,
        "startColumnNumber" : 139,
        "endLineNumber" : 234,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int methodStart=method.bodyStart;\n  int methodEnd=method.bodyEnd;\n  long methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL);\n  TryStatement tryStatement=new TryStatement();\n  setGeneratedBy(tryStatement,source);\n  tryStatement.tryBlock=new Block(0);\n  tryStatement.tryBlock.sourceStart=methodStart;\n  tryStatement.tryBlock.sourceEnd=methodEnd;\n  setGeneratedBy(tryStatement.tryBlock,source);\n  tryStatement.tryBlock.statements=contents;\n  TypeReference typeReference;\n  if (exception.exceptionName.indexOf('.') == -1) {\n    typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n    typeReference.statementEnd=methodEnd;\n  }\n else {\n    String[] x=exception.exceptionName.split(\"\\\\.\");\n    char[][] elems=new char[x.length][];\n    long[] poss=new long[x.length];\n    Arrays.fill(poss,methodPosEnd);\n    for (int i=0; i < x.length; i++) {\n      elems[i]=x[i].trim().toCharArray();\n    }\n    typeReference=new QualifiedTypeReference(elems,poss);\n  }\n  setGeneratedBy(typeReference,source);\n  Argument catchArg=new Argument(\"$ex\".toCharArray(),methodPosEnd,typeReference,Modifier.FINAL);\n  setGeneratedBy(catchArg,source);\n  catchArg.declarationSourceEnd=catchArg.declarationEnd=catchArg.sourceEnd=methodEnd;\n  catchArg.declarationSourceStart=catchArg.modifiersSourceStart=catchArg.sourceStart=methodEnd;\n  tryStatement.catchArguments=new Argument[]{catchArg};\n  MessageSend sneakyThrowStatement=new MessageSend();\n  setGeneratedBy(sneakyThrowStatement,source);\n  sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd);\n  setGeneratedBy(sneakyThrowStatement.receiver,source);\n  sneakyThrowStatement.receiver.statementEnd=methodEnd;\n  sneakyThrowStatement.selector=\"sneakyThrow\".toCharArray();\n  SingleNameReference exRef=new SingleNameReference(\"$ex\".toCharArray(),methodPosEnd);\n  setGeneratedBy(exRef,source);\n  exRef.statementEnd=methodEnd;\n  sneakyThrowStatement.arguments=new Expression[]{exRef};\n  sneakyThrowStatement.nameSourcePosition=-2L;\n  sneakyThrowStatement.sourceStart=methodEnd;\n  sneakyThrowStatement.sourceEnd=sneakyThrowStatement.statementEnd=methodEnd;\n  Statement rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd);\n  setGeneratedBy(rethrowStatement,source);\n  Block block=new Block(0);\n  block.sourceStart=methodEnd;\n  block.sourceEnd=methodEnd;\n  setGeneratedBy(block,source);\n  block.statements=new Statement[]{rethrowStatement};\n  tryStatement.catchBlocks=new Block[]{block};\n  tryStatement.sourceStart=method.bodyStart;\n  tryStatement.sourceEnd=method.bodyEnd;\n  return tryStatement;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 467,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3340,
        "startLineNumber" : 162,
        "startColumnNumber" : 1,
        "endLineNumber" : 234,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private Statement buildTryCatchBlock(Statement[] contents,DeclaredException exception,ASTNode source,AbstractMethodDeclaration method){\n  int methodStart=method.bodyStart;\n  int methodEnd=method.bodyEnd;\n  long methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL);\n  TryStatement tryStatement=new TryStatement();\n  setGeneratedBy(tryStatement,source);\n  tryStatement.tryBlock=new Block(0);\n  tryStatement.tryBlock.sourceStart=methodStart;\n  tryStatement.tryBlock.sourceEnd=methodEnd;\n  setGeneratedBy(tryStatement.tryBlock,source);\n  tryStatement.tryBlock.statements=contents;\n  TypeReference typeReference;\n  if (exception.exceptionName.indexOf('.') == -1) {\n    typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n    typeReference.statementEnd=methodEnd;\n  }\n else {\n    String[] x=exception.exceptionName.split(\"\\\\.\");\n    char[][] elems=new char[x.length][];\n    long[] poss=new long[x.length];\n    Arrays.fill(poss,methodPosEnd);\n    for (int i=0; i < x.length; i++) {\n      elems[i]=x[i].trim().toCharArray();\n    }\n    typeReference=new QualifiedTypeReference(elems,poss);\n  }\n  setGeneratedBy(typeReference,source);\n  Argument catchArg=new Argument(\"$ex\".toCharArray(),methodPosEnd,typeReference,Modifier.FINAL);\n  setGeneratedBy(catchArg,source);\n  catchArg.declarationSourceEnd=catchArg.declarationEnd=catchArg.sourceEnd=methodEnd;\n  catchArg.declarationSourceStart=catchArg.modifiersSourceStart=catchArg.sourceStart=methodEnd;\n  tryStatement.catchArguments=new Argument[]{catchArg};\n  MessageSend sneakyThrowStatement=new MessageSend();\n  setGeneratedBy(sneakyThrowStatement,source);\n  sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd);\n  setGeneratedBy(sneakyThrowStatement.receiver,source);\n  sneakyThrowStatement.receiver.statementEnd=methodEnd;\n  sneakyThrowStatement.selector=\"sneakyThrow\".toCharArray();\n  SingleNameReference exRef=new SingleNameReference(\"$ex\".toCharArray(),methodPosEnd);\n  setGeneratedBy(exRef,source);\n  exRef.statementEnd=methodEnd;\n  sneakyThrowStatement.arguments=new Expression[]{exRef};\n  sneakyThrowStatement.nameSourcePosition=-2L;\n  sneakyThrowStatement.sourceStart=methodEnd;\n  sneakyThrowStatement.sourceEnd=sneakyThrowStatement.statementEnd=methodEnd;\n  Statement rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd);\n  setGeneratedBy(rethrowStatement,source);\n  Block block=new Block(0);\n  block.sourceStart=methodEnd;\n  block.sourceEnd=methodEnd;\n  setGeneratedBy(block,source);\n  block.statements=new Statement[]{rethrowStatement};\n  tryStatement.catchBlocks=new Block[]{block};\n  tryStatement.sourceStart=method.bodyStart;\n  tryStatement.sourceEnd=method.bodyEnd;\n  return tryStatement;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 490,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 165,
        "startColumnNumber" : 2,
        "endLineNumber" : 165,
        "endColumnNumber" : 66
      },
      "nodeContext" : "long methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "methodEnd",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 165,
      "startColumnNumber" : 41,
      "endLineNumber" : 165,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 165,
        "startColumnNumber" : 41,
        "endLineNumber" : 165,
        "endColumnNumber" : 64
      },
      "nodeContext" : "methodEnd & 0xFFFFFFFFL",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 165,
        "startColumnNumber" : 40,
        "endLineNumber" : 165,
        "endColumnNumber" : 65
      },
      "nodeContext" : "(methodEnd & 0xFFFFFFFFL)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 165,
        "startColumnNumber" : 22,
        "endLineNumber" : 165,
        "endColumnNumber" : 65
      },
      "nodeContext" : "methodEnd << 32 | (methodEnd & 0xFFFFFFFFL)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 165,
        "startColumnNumber" : 7,
        "endLineNumber" : 165,
        "endColumnNumber" : 65
      },
      "nodeContext" : "methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 165,
        "startColumnNumber" : 2,
        "endLineNumber" : 165,
        "endColumnNumber" : 66
      },
      "nodeContext" : "long methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3202,
        "startLineNumber" : 162,
        "startColumnNumber" : 139,
        "endLineNumber" : 234,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int methodStart=method.bodyStart;\n  int methodEnd=method.bodyEnd;\n  long methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL);\n  TryStatement tryStatement=new TryStatement();\n  setGeneratedBy(tryStatement,source);\n  tryStatement.tryBlock=new Block(0);\n  tryStatement.tryBlock.sourceStart=methodStart;\n  tryStatement.tryBlock.sourceEnd=methodEnd;\n  setGeneratedBy(tryStatement.tryBlock,source);\n  tryStatement.tryBlock.statements=contents;\n  TypeReference typeReference;\n  if (exception.exceptionName.indexOf('.') == -1) {\n    typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n    typeReference.statementEnd=methodEnd;\n  }\n else {\n    String[] x=exception.exceptionName.split(\"\\\\.\");\n    char[][] elems=new char[x.length][];\n    long[] poss=new long[x.length];\n    Arrays.fill(poss,methodPosEnd);\n    for (int i=0; i < x.length; i++) {\n      elems[i]=x[i].trim().toCharArray();\n    }\n    typeReference=new QualifiedTypeReference(elems,poss);\n  }\n  setGeneratedBy(typeReference,source);\n  Argument catchArg=new Argument(\"$ex\".toCharArray(),methodPosEnd,typeReference,Modifier.FINAL);\n  setGeneratedBy(catchArg,source);\n  catchArg.declarationSourceEnd=catchArg.declarationEnd=catchArg.sourceEnd=methodEnd;\n  catchArg.declarationSourceStart=catchArg.modifiersSourceStart=catchArg.sourceStart=methodEnd;\n  tryStatement.catchArguments=new Argument[]{catchArg};\n  MessageSend sneakyThrowStatement=new MessageSend();\n  setGeneratedBy(sneakyThrowStatement,source);\n  sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd);\n  setGeneratedBy(sneakyThrowStatement.receiver,source);\n  sneakyThrowStatement.receiver.statementEnd=methodEnd;\n  sneakyThrowStatement.selector=\"sneakyThrow\".toCharArray();\n  SingleNameReference exRef=new SingleNameReference(\"$ex\".toCharArray(),methodPosEnd);\n  setGeneratedBy(exRef,source);\n  exRef.statementEnd=methodEnd;\n  sneakyThrowStatement.arguments=new Expression[]{exRef};\n  sneakyThrowStatement.nameSourcePosition=-2L;\n  sneakyThrowStatement.sourceStart=methodEnd;\n  sneakyThrowStatement.sourceEnd=sneakyThrowStatement.statementEnd=methodEnd;\n  Statement rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd);\n  setGeneratedBy(rethrowStatement,source);\n  Block block=new Block(0);\n  block.sourceStart=methodEnd;\n  block.sourceEnd=methodEnd;\n  setGeneratedBy(block,source);\n  block.statements=new Statement[]{rethrowStatement};\n  tryStatement.catchBlocks=new Block[]{block};\n  tryStatement.sourceStart=method.bodyStart;\n  tryStatement.sourceEnd=method.bodyEnd;\n  return tryStatement;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 467,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3340,
        "startLineNumber" : 162,
        "startColumnNumber" : 1,
        "endLineNumber" : 234,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private Statement buildTryCatchBlock(Statement[] contents,DeclaredException exception,ASTNode source,AbstractMethodDeclaration method){\n  int methodStart=method.bodyStart;\n  int methodEnd=method.bodyEnd;\n  long methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL);\n  TryStatement tryStatement=new TryStatement();\n  setGeneratedBy(tryStatement,source);\n  tryStatement.tryBlock=new Block(0);\n  tryStatement.tryBlock.sourceStart=methodStart;\n  tryStatement.tryBlock.sourceEnd=methodEnd;\n  setGeneratedBy(tryStatement.tryBlock,source);\n  tryStatement.tryBlock.statements=contents;\n  TypeReference typeReference;\n  if (exception.exceptionName.indexOf('.') == -1) {\n    typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n    typeReference.statementEnd=methodEnd;\n  }\n else {\n    String[] x=exception.exceptionName.split(\"\\\\.\");\n    char[][] elems=new char[x.length][];\n    long[] poss=new long[x.length];\n    Arrays.fill(poss,methodPosEnd);\n    for (int i=0; i < x.length; i++) {\n      elems[i]=x[i].trim().toCharArray();\n    }\n    typeReference=new QualifiedTypeReference(elems,poss);\n  }\n  setGeneratedBy(typeReference,source);\n  Argument catchArg=new Argument(\"$ex\".toCharArray(),methodPosEnd,typeReference,Modifier.FINAL);\n  setGeneratedBy(catchArg,source);\n  catchArg.declarationSourceEnd=catchArg.declarationEnd=catchArg.sourceEnd=methodEnd;\n  catchArg.declarationSourceStart=catchArg.modifiersSourceStart=catchArg.sourceStart=methodEnd;\n  tryStatement.catchArguments=new Argument[]{catchArg};\n  MessageSend sneakyThrowStatement=new MessageSend();\n  setGeneratedBy(sneakyThrowStatement,source);\n  sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd);\n  setGeneratedBy(sneakyThrowStatement.receiver,source);\n  sneakyThrowStatement.receiver.statementEnd=methodEnd;\n  sneakyThrowStatement.selector=\"sneakyThrow\".toCharArray();\n  SingleNameReference exRef=new SingleNameReference(\"$ex\".toCharArray(),methodPosEnd);\n  setGeneratedBy(exRef,source);\n  exRef.statementEnd=methodEnd;\n  sneakyThrowStatement.arguments=new Expression[]{exRef};\n  sneakyThrowStatement.nameSourcePosition=-2L;\n  sneakyThrowStatement.sourceStart=methodEnd;\n  sneakyThrowStatement.sourceEnd=sneakyThrowStatement.statementEnd=methodEnd;\n  Statement rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd);\n  setGeneratedBy(rethrowStatement,source);\n  Block block=new Block(0);\n  block.sourceStart=methodEnd;\n  block.sourceEnd=methodEnd;\n  setGeneratedBy(block,source);\n  block.statements=new Statement[]{rethrowStatement};\n  tryStatement.catchBlocks=new Block[]{block};\n  tryStatement.sourceStart=method.bodyStart;\n  tryStatement.sourceEnd=method.bodyEnd;\n  return tryStatement;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 490,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 165,
        "startColumnNumber" : 2,
        "endLineNumber" : 165,
        "endColumnNumber" : 66
      },
      "nodeContext" : "long methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "methodEnd",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 172,
      "startColumnNumber" : 85,
      "endLineNumber" : 172,
      "endColumnNumber" : 94
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 172,
        "startColumnNumber" : 51,
        "endLineNumber" : 172,
        "endColumnNumber" : 94
      },
      "nodeContext" : "tryStatement.tryBlock.sourceEnd=methodEnd",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 172,
        "startColumnNumber" : 51,
        "endLineNumber" : 172,
        "endColumnNumber" : 95
      },
      "nodeContext" : "tryStatement.tryBlock.sourceEnd=methodEnd;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3202,
        "startLineNumber" : 162,
        "startColumnNumber" : 139,
        "endLineNumber" : 234,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int methodStart=method.bodyStart;\n  int methodEnd=method.bodyEnd;\n  long methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL);\n  TryStatement tryStatement=new TryStatement();\n  setGeneratedBy(tryStatement,source);\n  tryStatement.tryBlock=new Block(0);\n  tryStatement.tryBlock.sourceStart=methodStart;\n  tryStatement.tryBlock.sourceEnd=methodEnd;\n  setGeneratedBy(tryStatement.tryBlock,source);\n  tryStatement.tryBlock.statements=contents;\n  TypeReference typeReference;\n  if (exception.exceptionName.indexOf('.') == -1) {\n    typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n    typeReference.statementEnd=methodEnd;\n  }\n else {\n    String[] x=exception.exceptionName.split(\"\\\\.\");\n    char[][] elems=new char[x.length][];\n    long[] poss=new long[x.length];\n    Arrays.fill(poss,methodPosEnd);\n    for (int i=0; i < x.length; i++) {\n      elems[i]=x[i].trim().toCharArray();\n    }\n    typeReference=new QualifiedTypeReference(elems,poss);\n  }\n  setGeneratedBy(typeReference,source);\n  Argument catchArg=new Argument(\"$ex\".toCharArray(),methodPosEnd,typeReference,Modifier.FINAL);\n  setGeneratedBy(catchArg,source);\n  catchArg.declarationSourceEnd=catchArg.declarationEnd=catchArg.sourceEnd=methodEnd;\n  catchArg.declarationSourceStart=catchArg.modifiersSourceStart=catchArg.sourceStart=methodEnd;\n  tryStatement.catchArguments=new Argument[]{catchArg};\n  MessageSend sneakyThrowStatement=new MessageSend();\n  setGeneratedBy(sneakyThrowStatement,source);\n  sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd);\n  setGeneratedBy(sneakyThrowStatement.receiver,source);\n  sneakyThrowStatement.receiver.statementEnd=methodEnd;\n  sneakyThrowStatement.selector=\"sneakyThrow\".toCharArray();\n  SingleNameReference exRef=new SingleNameReference(\"$ex\".toCharArray(),methodPosEnd);\n  setGeneratedBy(exRef,source);\n  exRef.statementEnd=methodEnd;\n  sneakyThrowStatement.arguments=new Expression[]{exRef};\n  sneakyThrowStatement.nameSourcePosition=-2L;\n  sneakyThrowStatement.sourceStart=methodEnd;\n  sneakyThrowStatement.sourceEnd=sneakyThrowStatement.statementEnd=methodEnd;\n  Statement rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd);\n  setGeneratedBy(rethrowStatement,source);\n  Block block=new Block(0);\n  block.sourceStart=methodEnd;\n  block.sourceEnd=methodEnd;\n  setGeneratedBy(block,source);\n  block.statements=new Statement[]{rethrowStatement};\n  tryStatement.catchBlocks=new Block[]{block};\n  tryStatement.sourceStart=method.bodyStart;\n  tryStatement.sourceEnd=method.bodyEnd;\n  return tryStatement;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 467,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3340,
        "startLineNumber" : 162,
        "startColumnNumber" : 1,
        "endLineNumber" : 234,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private Statement buildTryCatchBlock(Statement[] contents,DeclaredException exception,ASTNode source,AbstractMethodDeclaration method){\n  int methodStart=method.bodyStart;\n  int methodEnd=method.bodyEnd;\n  long methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL);\n  TryStatement tryStatement=new TryStatement();\n  setGeneratedBy(tryStatement,source);\n  tryStatement.tryBlock=new Block(0);\n  tryStatement.tryBlock.sourceStart=methodStart;\n  tryStatement.tryBlock.sourceEnd=methodEnd;\n  setGeneratedBy(tryStatement.tryBlock,source);\n  tryStatement.tryBlock.statements=contents;\n  TypeReference typeReference;\n  if (exception.exceptionName.indexOf('.') == -1) {\n    typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n    typeReference.statementEnd=methodEnd;\n  }\n else {\n    String[] x=exception.exceptionName.split(\"\\\\.\");\n    char[][] elems=new char[x.length][];\n    long[] poss=new long[x.length];\n    Arrays.fill(poss,methodPosEnd);\n    for (int i=0; i < x.length; i++) {\n      elems[i]=x[i].trim().toCharArray();\n    }\n    typeReference=new QualifiedTypeReference(elems,poss);\n  }\n  setGeneratedBy(typeReference,source);\n  Argument catchArg=new Argument(\"$ex\".toCharArray(),methodPosEnd,typeReference,Modifier.FINAL);\n  setGeneratedBy(catchArg,source);\n  catchArg.declarationSourceEnd=catchArg.declarationEnd=catchArg.sourceEnd=methodEnd;\n  catchArg.declarationSourceStart=catchArg.modifiersSourceStart=catchArg.sourceStart=methodEnd;\n  tryStatement.catchArguments=new Argument[]{catchArg};\n  MessageSend sneakyThrowStatement=new MessageSend();\n  setGeneratedBy(sneakyThrowStatement,source);\n  sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd);\n  setGeneratedBy(sneakyThrowStatement.receiver,source);\n  sneakyThrowStatement.receiver.statementEnd=methodEnd;\n  sneakyThrowStatement.selector=\"sneakyThrow\".toCharArray();\n  SingleNameReference exRef=new SingleNameReference(\"$ex\".toCharArray(),methodPosEnd);\n  setGeneratedBy(exRef,source);\n  exRef.statementEnd=methodEnd;\n  sneakyThrowStatement.arguments=new Expression[]{exRef};\n  sneakyThrowStatement.nameSourcePosition=-2L;\n  sneakyThrowStatement.sourceStart=methodEnd;\n  sneakyThrowStatement.sourceEnd=sneakyThrowStatement.statementEnd=methodEnd;\n  Statement rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd);\n  setGeneratedBy(rethrowStatement,source);\n  Block block=new Block(0);\n  block.sourceStart=methodEnd;\n  block.sourceEnd=methodEnd;\n  setGeneratedBy(block,source);\n  block.statements=new Statement[]{rethrowStatement};\n  tryStatement.catchBlocks=new Block[]{block};\n  tryStatement.sourceStart=method.bodyStart;\n  tryStatement.sourceEnd=method.bodyEnd;\n  return tryStatement;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 490,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 172,
        "startColumnNumber" : 51,
        "endLineNumber" : 172,
        "endColumnNumber" : 95
      },
      "nodeContext" : "tryStatement.tryBlock.sourceEnd=methodEnd;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "methodEnd",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 179,
      "startColumnNumber" : 32,
      "endLineNumber" : 179,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 179,
        "startColumnNumber" : 3,
        "endLineNumber" : 179,
        "endColumnNumber" : 41
      },
      "nodeContext" : "typeReference.statementEnd=methodEnd",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 179,
        "startColumnNumber" : 3,
        "endLineNumber" : 179,
        "endColumnNumber" : 42
      },
      "nodeContext" : "typeReference.statementEnd=methodEnd;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 177,
        "startColumnNumber" : 50,
        "endLineNumber" : 180,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n  typeReference.statementEnd=methodEnd;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 520,
        "startLineNumber" : 177,
        "startColumnNumber" : 2,
        "endLineNumber" : 189,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (exception.exceptionName.indexOf('.') == -1) {\n  typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n  typeReference.statementEnd=methodEnd;\n}\n else {\n  String[] x=exception.exceptionName.split(\"\\\\.\");\n  char[][] elems=new char[x.length][];\n  long[] poss=new long[x.length];\n  Arrays.fill(poss,methodPosEnd);\n  for (int i=0; i < x.length; i++) {\n    elems[i]=x[i].trim().toCharArray();\n  }\n  typeReference=new QualifiedTypeReference(elems,poss);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 111,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3202,
        "startLineNumber" : 162,
        "startColumnNumber" : 139,
        "endLineNumber" : 234,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int methodStart=method.bodyStart;\n  int methodEnd=method.bodyEnd;\n  long methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL);\n  TryStatement tryStatement=new TryStatement();\n  setGeneratedBy(tryStatement,source);\n  tryStatement.tryBlock=new Block(0);\n  tryStatement.tryBlock.sourceStart=methodStart;\n  tryStatement.tryBlock.sourceEnd=methodEnd;\n  setGeneratedBy(tryStatement.tryBlock,source);\n  tryStatement.tryBlock.statements=contents;\n  TypeReference typeReference;\n  if (exception.exceptionName.indexOf('.') == -1) {\n    typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n    typeReference.statementEnd=methodEnd;\n  }\n else {\n    String[] x=exception.exceptionName.split(\"\\\\.\");\n    char[][] elems=new char[x.length][];\n    long[] poss=new long[x.length];\n    Arrays.fill(poss,methodPosEnd);\n    for (int i=0; i < x.length; i++) {\n      elems[i]=x[i].trim().toCharArray();\n    }\n    typeReference=new QualifiedTypeReference(elems,poss);\n  }\n  setGeneratedBy(typeReference,source);\n  Argument catchArg=new Argument(\"$ex\".toCharArray(),methodPosEnd,typeReference,Modifier.FINAL);\n  setGeneratedBy(catchArg,source);\n  catchArg.declarationSourceEnd=catchArg.declarationEnd=catchArg.sourceEnd=methodEnd;\n  catchArg.declarationSourceStart=catchArg.modifiersSourceStart=catchArg.sourceStart=methodEnd;\n  tryStatement.catchArguments=new Argument[]{catchArg};\n  MessageSend sneakyThrowStatement=new MessageSend();\n  setGeneratedBy(sneakyThrowStatement,source);\n  sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd);\n  setGeneratedBy(sneakyThrowStatement.receiver,source);\n  sneakyThrowStatement.receiver.statementEnd=methodEnd;\n  sneakyThrowStatement.selector=\"sneakyThrow\".toCharArray();\n  SingleNameReference exRef=new SingleNameReference(\"$ex\".toCharArray(),methodPosEnd);\n  setGeneratedBy(exRef,source);\n  exRef.statementEnd=methodEnd;\n  sneakyThrowStatement.arguments=new Expression[]{exRef};\n  sneakyThrowStatement.nameSourcePosition=-2L;\n  sneakyThrowStatement.sourceStart=methodEnd;\n  sneakyThrowStatement.sourceEnd=sneakyThrowStatement.statementEnd=methodEnd;\n  Statement rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd);\n  setGeneratedBy(rethrowStatement,source);\n  Block block=new Block(0);\n  block.sourceStart=methodEnd;\n  block.sourceEnd=methodEnd;\n  setGeneratedBy(block,source);\n  block.statements=new Statement[]{rethrowStatement};\n  tryStatement.catchBlocks=new Block[]{block};\n  tryStatement.sourceStart=method.bodyStart;\n  tryStatement.sourceEnd=method.bodyEnd;\n  return tryStatement;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 467,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3340,
        "startLineNumber" : 162,
        "startColumnNumber" : 1,
        "endLineNumber" : 234,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private Statement buildTryCatchBlock(Statement[] contents,DeclaredException exception,ASTNode source,AbstractMethodDeclaration method){\n  int methodStart=method.bodyStart;\n  int methodEnd=method.bodyEnd;\n  long methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL);\n  TryStatement tryStatement=new TryStatement();\n  setGeneratedBy(tryStatement,source);\n  tryStatement.tryBlock=new Block(0);\n  tryStatement.tryBlock.sourceStart=methodStart;\n  tryStatement.tryBlock.sourceEnd=methodEnd;\n  setGeneratedBy(tryStatement.tryBlock,source);\n  tryStatement.tryBlock.statements=contents;\n  TypeReference typeReference;\n  if (exception.exceptionName.indexOf('.') == -1) {\n    typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n    typeReference.statementEnd=methodEnd;\n  }\n else {\n    String[] x=exception.exceptionName.split(\"\\\\.\");\n    char[][] elems=new char[x.length][];\n    long[] poss=new long[x.length];\n    Arrays.fill(poss,methodPosEnd);\n    for (int i=0; i < x.length; i++) {\n      elems[i]=x[i].trim().toCharArray();\n    }\n    typeReference=new QualifiedTypeReference(elems,poss);\n  }\n  setGeneratedBy(typeReference,source);\n  Argument catchArg=new Argument(\"$ex\".toCharArray(),methodPosEnd,typeReference,Modifier.FINAL);\n  setGeneratedBy(catchArg,source);\n  catchArg.declarationSourceEnd=catchArg.declarationEnd=catchArg.sourceEnd=methodEnd;\n  catchArg.declarationSourceStart=catchArg.modifiersSourceStart=catchArg.sourceStart=methodEnd;\n  tryStatement.catchArguments=new Argument[]{catchArg};\n  MessageSend sneakyThrowStatement=new MessageSend();\n  setGeneratedBy(sneakyThrowStatement,source);\n  sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd);\n  setGeneratedBy(sneakyThrowStatement.receiver,source);\n  sneakyThrowStatement.receiver.statementEnd=methodEnd;\n  sneakyThrowStatement.selector=\"sneakyThrow\".toCharArray();\n  SingleNameReference exRef=new SingleNameReference(\"$ex\".toCharArray(),methodPosEnd);\n  setGeneratedBy(exRef,source);\n  exRef.statementEnd=methodEnd;\n  sneakyThrowStatement.arguments=new Expression[]{exRef};\n  sneakyThrowStatement.nameSourcePosition=-2L;\n  sneakyThrowStatement.sourceStart=methodEnd;\n  sneakyThrowStatement.sourceEnd=sneakyThrowStatement.statementEnd=methodEnd;\n  Statement rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd);\n  setGeneratedBy(rethrowStatement,source);\n  Block block=new Block(0);\n  block.sourceStart=methodEnd;\n  block.sourceEnd=methodEnd;\n  setGeneratedBy(block,source);\n  block.statements=new Statement[]{rethrowStatement};\n  tryStatement.catchBlocks=new Block[]{block};\n  tryStatement.sourceStart=method.bodyStart;\n  tryStatement.sourceEnd=method.bodyEnd;\n  return tryStatement;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 490,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 179,
        "startColumnNumber" : 3,
        "endLineNumber" : 179,
        "endColumnNumber" : 42
      },
      "nodeContext" : "typeReference.statementEnd=methodEnd;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "methodEnd",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 194,
      "startColumnNumber" : 81,
      "endLineNumber" : 194,
      "endColumnNumber" : 90
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 194,
        "startColumnNumber" : 60,
        "endLineNumber" : 194,
        "endColumnNumber" : 90
      },
      "nodeContext" : "catchArg.sourceEnd=methodEnd",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 194,
        "startColumnNumber" : 34,
        "endLineNumber" : 194,
        "endColumnNumber" : 90
      },
      "nodeContext" : "catchArg.declarationEnd=catchArg.sourceEnd=methodEnd",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 194,
        "startColumnNumber" : 2,
        "endLineNumber" : 194,
        "endColumnNumber" : 90
      },
      "nodeContext" : "catchArg.declarationSourceEnd=catchArg.declarationEnd=catchArg.sourceEnd=methodEnd",
      "nodeType" : "Assignment",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 194,
        "startColumnNumber" : 2,
        "endLineNumber" : 194,
        "endColumnNumber" : 91
      },
      "nodeContext" : "catchArg.declarationSourceEnd=catchArg.declarationEnd=catchArg.sourceEnd=methodEnd;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3202,
        "startLineNumber" : 162,
        "startColumnNumber" : 139,
        "endLineNumber" : 234,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int methodStart=method.bodyStart;\n  int methodEnd=method.bodyEnd;\n  long methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL);\n  TryStatement tryStatement=new TryStatement();\n  setGeneratedBy(tryStatement,source);\n  tryStatement.tryBlock=new Block(0);\n  tryStatement.tryBlock.sourceStart=methodStart;\n  tryStatement.tryBlock.sourceEnd=methodEnd;\n  setGeneratedBy(tryStatement.tryBlock,source);\n  tryStatement.tryBlock.statements=contents;\n  TypeReference typeReference;\n  if (exception.exceptionName.indexOf('.') == -1) {\n    typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n    typeReference.statementEnd=methodEnd;\n  }\n else {\n    String[] x=exception.exceptionName.split(\"\\\\.\");\n    char[][] elems=new char[x.length][];\n    long[] poss=new long[x.length];\n    Arrays.fill(poss,methodPosEnd);\n    for (int i=0; i < x.length; i++) {\n      elems[i]=x[i].trim().toCharArray();\n    }\n    typeReference=new QualifiedTypeReference(elems,poss);\n  }\n  setGeneratedBy(typeReference,source);\n  Argument catchArg=new Argument(\"$ex\".toCharArray(),methodPosEnd,typeReference,Modifier.FINAL);\n  setGeneratedBy(catchArg,source);\n  catchArg.declarationSourceEnd=catchArg.declarationEnd=catchArg.sourceEnd=methodEnd;\n  catchArg.declarationSourceStart=catchArg.modifiersSourceStart=catchArg.sourceStart=methodEnd;\n  tryStatement.catchArguments=new Argument[]{catchArg};\n  MessageSend sneakyThrowStatement=new MessageSend();\n  setGeneratedBy(sneakyThrowStatement,source);\n  sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd);\n  setGeneratedBy(sneakyThrowStatement.receiver,source);\n  sneakyThrowStatement.receiver.statementEnd=methodEnd;\n  sneakyThrowStatement.selector=\"sneakyThrow\".toCharArray();\n  SingleNameReference exRef=new SingleNameReference(\"$ex\".toCharArray(),methodPosEnd);\n  setGeneratedBy(exRef,source);\n  exRef.statementEnd=methodEnd;\n  sneakyThrowStatement.arguments=new Expression[]{exRef};\n  sneakyThrowStatement.nameSourcePosition=-2L;\n  sneakyThrowStatement.sourceStart=methodEnd;\n  sneakyThrowStatement.sourceEnd=sneakyThrowStatement.statementEnd=methodEnd;\n  Statement rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd);\n  setGeneratedBy(rethrowStatement,source);\n  Block block=new Block(0);\n  block.sourceStart=methodEnd;\n  block.sourceEnd=methodEnd;\n  setGeneratedBy(block,source);\n  block.statements=new Statement[]{rethrowStatement};\n  tryStatement.catchBlocks=new Block[]{block};\n  tryStatement.sourceStart=method.bodyStart;\n  tryStatement.sourceEnd=method.bodyEnd;\n  return tryStatement;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 467,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3340,
        "startLineNumber" : 162,
        "startColumnNumber" : 1,
        "endLineNumber" : 234,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private Statement buildTryCatchBlock(Statement[] contents,DeclaredException exception,ASTNode source,AbstractMethodDeclaration method){\n  int methodStart=method.bodyStart;\n  int methodEnd=method.bodyEnd;\n  long methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL);\n  TryStatement tryStatement=new TryStatement();\n  setGeneratedBy(tryStatement,source);\n  tryStatement.tryBlock=new Block(0);\n  tryStatement.tryBlock.sourceStart=methodStart;\n  tryStatement.tryBlock.sourceEnd=methodEnd;\n  setGeneratedBy(tryStatement.tryBlock,source);\n  tryStatement.tryBlock.statements=contents;\n  TypeReference typeReference;\n  if (exception.exceptionName.indexOf('.') == -1) {\n    typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n    typeReference.statementEnd=methodEnd;\n  }\n else {\n    String[] x=exception.exceptionName.split(\"\\\\.\");\n    char[][] elems=new char[x.length][];\n    long[] poss=new long[x.length];\n    Arrays.fill(poss,methodPosEnd);\n    for (int i=0; i < x.length; i++) {\n      elems[i]=x[i].trim().toCharArray();\n    }\n    typeReference=new QualifiedTypeReference(elems,poss);\n  }\n  setGeneratedBy(typeReference,source);\n  Argument catchArg=new Argument(\"$ex\".toCharArray(),methodPosEnd,typeReference,Modifier.FINAL);\n  setGeneratedBy(catchArg,source);\n  catchArg.declarationSourceEnd=catchArg.declarationEnd=catchArg.sourceEnd=methodEnd;\n  catchArg.declarationSourceStart=catchArg.modifiersSourceStart=catchArg.sourceStart=methodEnd;\n  tryStatement.catchArguments=new Argument[]{catchArg};\n  MessageSend sneakyThrowStatement=new MessageSend();\n  setGeneratedBy(sneakyThrowStatement,source);\n  sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd);\n  setGeneratedBy(sneakyThrowStatement.receiver,source);\n  sneakyThrowStatement.receiver.statementEnd=methodEnd;\n  sneakyThrowStatement.selector=\"sneakyThrow\".toCharArray();\n  SingleNameReference exRef=new SingleNameReference(\"$ex\".toCharArray(),methodPosEnd);\n  setGeneratedBy(exRef,source);\n  exRef.statementEnd=methodEnd;\n  sneakyThrowStatement.arguments=new Expression[]{exRef};\n  sneakyThrowStatement.nameSourcePosition=-2L;\n  sneakyThrowStatement.sourceStart=methodEnd;\n  sneakyThrowStatement.sourceEnd=sneakyThrowStatement.statementEnd=methodEnd;\n  Statement rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd);\n  setGeneratedBy(rethrowStatement,source);\n  Block block=new Block(0);\n  block.sourceStart=methodEnd;\n  block.sourceEnd=methodEnd;\n  setGeneratedBy(block,source);\n  block.statements=new Statement[]{rethrowStatement};\n  tryStatement.catchBlocks=new Block[]{block};\n  tryStatement.sourceStart=method.bodyStart;\n  tryStatement.sourceEnd=method.bodyEnd;\n  return tryStatement;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 490,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 194,
        "startColumnNumber" : 2,
        "endLineNumber" : 194,
        "endColumnNumber" : 91
      },
      "nodeContext" : "catchArg.declarationSourceEnd=catchArg.declarationEnd=catchArg.sourceEnd=methodEnd;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "methodEnd",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 195,
      "startColumnNumber" : 91,
      "endLineNumber" : 195,
      "endColumnNumber" : 100
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 195,
        "startColumnNumber" : 68,
        "endLineNumber" : 195,
        "endColumnNumber" : 100
      },
      "nodeContext" : "catchArg.sourceStart=methodEnd",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 195,
        "startColumnNumber" : 36,
        "endLineNumber" : 195,
        "endColumnNumber" : 100
      },
      "nodeContext" : "catchArg.modifiersSourceStart=catchArg.sourceStart=methodEnd",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 195,
        "startColumnNumber" : 2,
        "endLineNumber" : 195,
        "endColumnNumber" : 100
      },
      "nodeContext" : "catchArg.declarationSourceStart=catchArg.modifiersSourceStart=catchArg.sourceStart=methodEnd",
      "nodeType" : "Assignment",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 195,
        "startColumnNumber" : 2,
        "endLineNumber" : 195,
        "endColumnNumber" : 101
      },
      "nodeContext" : "catchArg.declarationSourceStart=catchArg.modifiersSourceStart=catchArg.sourceStart=methodEnd;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3202,
        "startLineNumber" : 162,
        "startColumnNumber" : 139,
        "endLineNumber" : 234,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int methodStart=method.bodyStart;\n  int methodEnd=method.bodyEnd;\n  long methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL);\n  TryStatement tryStatement=new TryStatement();\n  setGeneratedBy(tryStatement,source);\n  tryStatement.tryBlock=new Block(0);\n  tryStatement.tryBlock.sourceStart=methodStart;\n  tryStatement.tryBlock.sourceEnd=methodEnd;\n  setGeneratedBy(tryStatement.tryBlock,source);\n  tryStatement.tryBlock.statements=contents;\n  TypeReference typeReference;\n  if (exception.exceptionName.indexOf('.') == -1) {\n    typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n    typeReference.statementEnd=methodEnd;\n  }\n else {\n    String[] x=exception.exceptionName.split(\"\\\\.\");\n    char[][] elems=new char[x.length][];\n    long[] poss=new long[x.length];\n    Arrays.fill(poss,methodPosEnd);\n    for (int i=0; i < x.length; i++) {\n      elems[i]=x[i].trim().toCharArray();\n    }\n    typeReference=new QualifiedTypeReference(elems,poss);\n  }\n  setGeneratedBy(typeReference,source);\n  Argument catchArg=new Argument(\"$ex\".toCharArray(),methodPosEnd,typeReference,Modifier.FINAL);\n  setGeneratedBy(catchArg,source);\n  catchArg.declarationSourceEnd=catchArg.declarationEnd=catchArg.sourceEnd=methodEnd;\n  catchArg.declarationSourceStart=catchArg.modifiersSourceStart=catchArg.sourceStart=methodEnd;\n  tryStatement.catchArguments=new Argument[]{catchArg};\n  MessageSend sneakyThrowStatement=new MessageSend();\n  setGeneratedBy(sneakyThrowStatement,source);\n  sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd);\n  setGeneratedBy(sneakyThrowStatement.receiver,source);\n  sneakyThrowStatement.receiver.statementEnd=methodEnd;\n  sneakyThrowStatement.selector=\"sneakyThrow\".toCharArray();\n  SingleNameReference exRef=new SingleNameReference(\"$ex\".toCharArray(),methodPosEnd);\n  setGeneratedBy(exRef,source);\n  exRef.statementEnd=methodEnd;\n  sneakyThrowStatement.arguments=new Expression[]{exRef};\n  sneakyThrowStatement.nameSourcePosition=-2L;\n  sneakyThrowStatement.sourceStart=methodEnd;\n  sneakyThrowStatement.sourceEnd=sneakyThrowStatement.statementEnd=methodEnd;\n  Statement rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd);\n  setGeneratedBy(rethrowStatement,source);\n  Block block=new Block(0);\n  block.sourceStart=methodEnd;\n  block.sourceEnd=methodEnd;\n  setGeneratedBy(block,source);\n  block.statements=new Statement[]{rethrowStatement};\n  tryStatement.catchBlocks=new Block[]{block};\n  tryStatement.sourceStart=method.bodyStart;\n  tryStatement.sourceEnd=method.bodyEnd;\n  return tryStatement;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 467,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3340,
        "startLineNumber" : 162,
        "startColumnNumber" : 1,
        "endLineNumber" : 234,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private Statement buildTryCatchBlock(Statement[] contents,DeclaredException exception,ASTNode source,AbstractMethodDeclaration method){\n  int methodStart=method.bodyStart;\n  int methodEnd=method.bodyEnd;\n  long methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL);\n  TryStatement tryStatement=new TryStatement();\n  setGeneratedBy(tryStatement,source);\n  tryStatement.tryBlock=new Block(0);\n  tryStatement.tryBlock.sourceStart=methodStart;\n  tryStatement.tryBlock.sourceEnd=methodEnd;\n  setGeneratedBy(tryStatement.tryBlock,source);\n  tryStatement.tryBlock.statements=contents;\n  TypeReference typeReference;\n  if (exception.exceptionName.indexOf('.') == -1) {\n    typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n    typeReference.statementEnd=methodEnd;\n  }\n else {\n    String[] x=exception.exceptionName.split(\"\\\\.\");\n    char[][] elems=new char[x.length][];\n    long[] poss=new long[x.length];\n    Arrays.fill(poss,methodPosEnd);\n    for (int i=0; i < x.length; i++) {\n      elems[i]=x[i].trim().toCharArray();\n    }\n    typeReference=new QualifiedTypeReference(elems,poss);\n  }\n  setGeneratedBy(typeReference,source);\n  Argument catchArg=new Argument(\"$ex\".toCharArray(),methodPosEnd,typeReference,Modifier.FINAL);\n  setGeneratedBy(catchArg,source);\n  catchArg.declarationSourceEnd=catchArg.declarationEnd=catchArg.sourceEnd=methodEnd;\n  catchArg.declarationSourceStart=catchArg.modifiersSourceStart=catchArg.sourceStart=methodEnd;\n  tryStatement.catchArguments=new Argument[]{catchArg};\n  MessageSend sneakyThrowStatement=new MessageSend();\n  setGeneratedBy(sneakyThrowStatement,source);\n  sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd);\n  setGeneratedBy(sneakyThrowStatement.receiver,source);\n  sneakyThrowStatement.receiver.statementEnd=methodEnd;\n  sneakyThrowStatement.selector=\"sneakyThrow\".toCharArray();\n  SingleNameReference exRef=new SingleNameReference(\"$ex\".toCharArray(),methodPosEnd);\n  setGeneratedBy(exRef,source);\n  exRef.statementEnd=methodEnd;\n  sneakyThrowStatement.arguments=new Expression[]{exRef};\n  sneakyThrowStatement.nameSourcePosition=-2L;\n  sneakyThrowStatement.sourceStart=methodEnd;\n  sneakyThrowStatement.sourceEnd=sneakyThrowStatement.statementEnd=methodEnd;\n  Statement rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd);\n  setGeneratedBy(rethrowStatement,source);\n  Block block=new Block(0);\n  block.sourceStart=methodEnd;\n  block.sourceEnd=methodEnd;\n  setGeneratedBy(block,source);\n  block.statements=new Statement[]{rethrowStatement};\n  tryStatement.catchBlocks=new Block[]{block};\n  tryStatement.sourceStart=method.bodyStart;\n  tryStatement.sourceEnd=method.bodyEnd;\n  return tryStatement;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 490,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 195,
        "startColumnNumber" : 2,
        "endLineNumber" : 195,
        "endColumnNumber" : 101
      },
      "nodeContext" : "catchArg.declarationSourceStart=catchArg.modifiersSourceStart=catchArg.sourceStart=methodEnd;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "methodEnd",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 201,
      "startColumnNumber" : 139,
      "endLineNumber" : 201,
      "endColumnNumber" : 148
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 201,
        "startColumnNumber" : 34,
        "endLineNumber" : 201,
        "endColumnNumber" : 160
      },
      "nodeContext" : "new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 22,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 158,
        "startLineNumber" : 201,
        "startColumnNumber" : 2,
        "endLineNumber" : 201,
        "endColumnNumber" : 160
      },
      "nodeContext" : "sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 201,
        "startColumnNumber" : 2,
        "endLineNumber" : 201,
        "endColumnNumber" : 161
      },
      "nodeContext" : "sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3202,
        "startLineNumber" : 162,
        "startColumnNumber" : 139,
        "endLineNumber" : 234,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int methodStart=method.bodyStart;\n  int methodEnd=method.bodyEnd;\n  long methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL);\n  TryStatement tryStatement=new TryStatement();\n  setGeneratedBy(tryStatement,source);\n  tryStatement.tryBlock=new Block(0);\n  tryStatement.tryBlock.sourceStart=methodStart;\n  tryStatement.tryBlock.sourceEnd=methodEnd;\n  setGeneratedBy(tryStatement.tryBlock,source);\n  tryStatement.tryBlock.statements=contents;\n  TypeReference typeReference;\n  if (exception.exceptionName.indexOf('.') == -1) {\n    typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n    typeReference.statementEnd=methodEnd;\n  }\n else {\n    String[] x=exception.exceptionName.split(\"\\\\.\");\n    char[][] elems=new char[x.length][];\n    long[] poss=new long[x.length];\n    Arrays.fill(poss,methodPosEnd);\n    for (int i=0; i < x.length; i++) {\n      elems[i]=x[i].trim().toCharArray();\n    }\n    typeReference=new QualifiedTypeReference(elems,poss);\n  }\n  setGeneratedBy(typeReference,source);\n  Argument catchArg=new Argument(\"$ex\".toCharArray(),methodPosEnd,typeReference,Modifier.FINAL);\n  setGeneratedBy(catchArg,source);\n  catchArg.declarationSourceEnd=catchArg.declarationEnd=catchArg.sourceEnd=methodEnd;\n  catchArg.declarationSourceStart=catchArg.modifiersSourceStart=catchArg.sourceStart=methodEnd;\n  tryStatement.catchArguments=new Argument[]{catchArg};\n  MessageSend sneakyThrowStatement=new MessageSend();\n  setGeneratedBy(sneakyThrowStatement,source);\n  sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd);\n  setGeneratedBy(sneakyThrowStatement.receiver,source);\n  sneakyThrowStatement.receiver.statementEnd=methodEnd;\n  sneakyThrowStatement.selector=\"sneakyThrow\".toCharArray();\n  SingleNameReference exRef=new SingleNameReference(\"$ex\".toCharArray(),methodPosEnd);\n  setGeneratedBy(exRef,source);\n  exRef.statementEnd=methodEnd;\n  sneakyThrowStatement.arguments=new Expression[]{exRef};\n  sneakyThrowStatement.nameSourcePosition=-2L;\n  sneakyThrowStatement.sourceStart=methodEnd;\n  sneakyThrowStatement.sourceEnd=sneakyThrowStatement.statementEnd=methodEnd;\n  Statement rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd);\n  setGeneratedBy(rethrowStatement,source);\n  Block block=new Block(0);\n  block.sourceStart=methodEnd;\n  block.sourceEnd=methodEnd;\n  setGeneratedBy(block,source);\n  block.statements=new Statement[]{rethrowStatement};\n  tryStatement.catchBlocks=new Block[]{block};\n  tryStatement.sourceStart=method.bodyStart;\n  tryStatement.sourceEnd=method.bodyEnd;\n  return tryStatement;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 467,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3340,
        "startLineNumber" : 162,
        "startColumnNumber" : 1,
        "endLineNumber" : 234,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private Statement buildTryCatchBlock(Statement[] contents,DeclaredException exception,ASTNode source,AbstractMethodDeclaration method){\n  int methodStart=method.bodyStart;\n  int methodEnd=method.bodyEnd;\n  long methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL);\n  TryStatement tryStatement=new TryStatement();\n  setGeneratedBy(tryStatement,source);\n  tryStatement.tryBlock=new Block(0);\n  tryStatement.tryBlock.sourceStart=methodStart;\n  tryStatement.tryBlock.sourceEnd=methodEnd;\n  setGeneratedBy(tryStatement.tryBlock,source);\n  tryStatement.tryBlock.statements=contents;\n  TypeReference typeReference;\n  if (exception.exceptionName.indexOf('.') == -1) {\n    typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n    typeReference.statementEnd=methodEnd;\n  }\n else {\n    String[] x=exception.exceptionName.split(\"\\\\.\");\n    char[][] elems=new char[x.length][];\n    long[] poss=new long[x.length];\n    Arrays.fill(poss,methodPosEnd);\n    for (int i=0; i < x.length; i++) {\n      elems[i]=x[i].trim().toCharArray();\n    }\n    typeReference=new QualifiedTypeReference(elems,poss);\n  }\n  setGeneratedBy(typeReference,source);\n  Argument catchArg=new Argument(\"$ex\".toCharArray(),methodPosEnd,typeReference,Modifier.FINAL);\n  setGeneratedBy(catchArg,source);\n  catchArg.declarationSourceEnd=catchArg.declarationEnd=catchArg.sourceEnd=methodEnd;\n  catchArg.declarationSourceStart=catchArg.modifiersSourceStart=catchArg.sourceStart=methodEnd;\n  tryStatement.catchArguments=new Argument[]{catchArg};\n  MessageSend sneakyThrowStatement=new MessageSend();\n  setGeneratedBy(sneakyThrowStatement,source);\n  sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd);\n  setGeneratedBy(sneakyThrowStatement.receiver,source);\n  sneakyThrowStatement.receiver.statementEnd=methodEnd;\n  sneakyThrowStatement.selector=\"sneakyThrow\".toCharArray();\n  SingleNameReference exRef=new SingleNameReference(\"$ex\".toCharArray(),methodPosEnd);\n  setGeneratedBy(exRef,source);\n  exRef.statementEnd=methodEnd;\n  sneakyThrowStatement.arguments=new Expression[]{exRef};\n  sneakyThrowStatement.nameSourcePosition=-2L;\n  sneakyThrowStatement.sourceStart=methodEnd;\n  sneakyThrowStatement.sourceEnd=sneakyThrowStatement.statementEnd=methodEnd;\n  Statement rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd);\n  setGeneratedBy(rethrowStatement,source);\n  Block block=new Block(0);\n  block.sourceStart=methodEnd;\n  block.sourceEnd=methodEnd;\n  setGeneratedBy(block,source);\n  block.statements=new Statement[]{rethrowStatement};\n  tryStatement.catchBlocks=new Block[]{block};\n  tryStatement.sourceStart=method.bodyStart;\n  tryStatement.sourceEnd=method.bodyEnd;\n  return tryStatement;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 490,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 201,
        "startColumnNumber" : 2,
        "endLineNumber" : 201,
        "endColumnNumber" : 161
      },
      "nodeContext" : "sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "methodEnd",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 201,
      "startColumnNumber" : 150,
      "endLineNumber" : 201,
      "endColumnNumber" : 159
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 201,
        "startColumnNumber" : 34,
        "endLineNumber" : 201,
        "endColumnNumber" : 160
      },
      "nodeContext" : "new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 22,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 158,
        "startLineNumber" : 201,
        "startColumnNumber" : 2,
        "endLineNumber" : 201,
        "endColumnNumber" : 160
      },
      "nodeContext" : "sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 201,
        "startColumnNumber" : 2,
        "endLineNumber" : 201,
        "endColumnNumber" : 161
      },
      "nodeContext" : "sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3202,
        "startLineNumber" : 162,
        "startColumnNumber" : 139,
        "endLineNumber" : 234,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int methodStart=method.bodyStart;\n  int methodEnd=method.bodyEnd;\n  long methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL);\n  TryStatement tryStatement=new TryStatement();\n  setGeneratedBy(tryStatement,source);\n  tryStatement.tryBlock=new Block(0);\n  tryStatement.tryBlock.sourceStart=methodStart;\n  tryStatement.tryBlock.sourceEnd=methodEnd;\n  setGeneratedBy(tryStatement.tryBlock,source);\n  tryStatement.tryBlock.statements=contents;\n  TypeReference typeReference;\n  if (exception.exceptionName.indexOf('.') == -1) {\n    typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n    typeReference.statementEnd=methodEnd;\n  }\n else {\n    String[] x=exception.exceptionName.split(\"\\\\.\");\n    char[][] elems=new char[x.length][];\n    long[] poss=new long[x.length];\n    Arrays.fill(poss,methodPosEnd);\n    for (int i=0; i < x.length; i++) {\n      elems[i]=x[i].trim().toCharArray();\n    }\n    typeReference=new QualifiedTypeReference(elems,poss);\n  }\n  setGeneratedBy(typeReference,source);\n  Argument catchArg=new Argument(\"$ex\".toCharArray(),methodPosEnd,typeReference,Modifier.FINAL);\n  setGeneratedBy(catchArg,source);\n  catchArg.declarationSourceEnd=catchArg.declarationEnd=catchArg.sourceEnd=methodEnd;\n  catchArg.declarationSourceStart=catchArg.modifiersSourceStart=catchArg.sourceStart=methodEnd;\n  tryStatement.catchArguments=new Argument[]{catchArg};\n  MessageSend sneakyThrowStatement=new MessageSend();\n  setGeneratedBy(sneakyThrowStatement,source);\n  sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd);\n  setGeneratedBy(sneakyThrowStatement.receiver,source);\n  sneakyThrowStatement.receiver.statementEnd=methodEnd;\n  sneakyThrowStatement.selector=\"sneakyThrow\".toCharArray();\n  SingleNameReference exRef=new SingleNameReference(\"$ex\".toCharArray(),methodPosEnd);\n  setGeneratedBy(exRef,source);\n  exRef.statementEnd=methodEnd;\n  sneakyThrowStatement.arguments=new Expression[]{exRef};\n  sneakyThrowStatement.nameSourcePosition=-2L;\n  sneakyThrowStatement.sourceStart=methodEnd;\n  sneakyThrowStatement.sourceEnd=sneakyThrowStatement.statementEnd=methodEnd;\n  Statement rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd);\n  setGeneratedBy(rethrowStatement,source);\n  Block block=new Block(0);\n  block.sourceStart=methodEnd;\n  block.sourceEnd=methodEnd;\n  setGeneratedBy(block,source);\n  block.statements=new Statement[]{rethrowStatement};\n  tryStatement.catchBlocks=new Block[]{block};\n  tryStatement.sourceStart=method.bodyStart;\n  tryStatement.sourceEnd=method.bodyEnd;\n  return tryStatement;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 467,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3340,
        "startLineNumber" : 162,
        "startColumnNumber" : 1,
        "endLineNumber" : 234,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private Statement buildTryCatchBlock(Statement[] contents,DeclaredException exception,ASTNode source,AbstractMethodDeclaration method){\n  int methodStart=method.bodyStart;\n  int methodEnd=method.bodyEnd;\n  long methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL);\n  TryStatement tryStatement=new TryStatement();\n  setGeneratedBy(tryStatement,source);\n  tryStatement.tryBlock=new Block(0);\n  tryStatement.tryBlock.sourceStart=methodStart;\n  tryStatement.tryBlock.sourceEnd=methodEnd;\n  setGeneratedBy(tryStatement.tryBlock,source);\n  tryStatement.tryBlock.statements=contents;\n  TypeReference typeReference;\n  if (exception.exceptionName.indexOf('.') == -1) {\n    typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n    typeReference.statementEnd=methodEnd;\n  }\n else {\n    String[] x=exception.exceptionName.split(\"\\\\.\");\n    char[][] elems=new char[x.length][];\n    long[] poss=new long[x.length];\n    Arrays.fill(poss,methodPosEnd);\n    for (int i=0; i < x.length; i++) {\n      elems[i]=x[i].trim().toCharArray();\n    }\n    typeReference=new QualifiedTypeReference(elems,poss);\n  }\n  setGeneratedBy(typeReference,source);\n  Argument catchArg=new Argument(\"$ex\".toCharArray(),methodPosEnd,typeReference,Modifier.FINAL);\n  setGeneratedBy(catchArg,source);\n  catchArg.declarationSourceEnd=catchArg.declarationEnd=catchArg.sourceEnd=methodEnd;\n  catchArg.declarationSourceStart=catchArg.modifiersSourceStart=catchArg.sourceStart=methodEnd;\n  tryStatement.catchArguments=new Argument[]{catchArg};\n  MessageSend sneakyThrowStatement=new MessageSend();\n  setGeneratedBy(sneakyThrowStatement,source);\n  sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd);\n  setGeneratedBy(sneakyThrowStatement.receiver,source);\n  sneakyThrowStatement.receiver.statementEnd=methodEnd;\n  sneakyThrowStatement.selector=\"sneakyThrow\".toCharArray();\n  SingleNameReference exRef=new SingleNameReference(\"$ex\".toCharArray(),methodPosEnd);\n  setGeneratedBy(exRef,source);\n  exRef.statementEnd=methodEnd;\n  sneakyThrowStatement.arguments=new Expression[]{exRef};\n  sneakyThrowStatement.nameSourcePosition=-2L;\n  sneakyThrowStatement.sourceStart=methodEnd;\n  sneakyThrowStatement.sourceEnd=sneakyThrowStatement.statementEnd=methodEnd;\n  Statement rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd);\n  setGeneratedBy(rethrowStatement,source);\n  Block block=new Block(0);\n  block.sourceStart=methodEnd;\n  block.sourceEnd=methodEnd;\n  setGeneratedBy(block,source);\n  block.statements=new Statement[]{rethrowStatement};\n  tryStatement.catchBlocks=new Block[]{block};\n  tryStatement.sourceStart=method.bodyStart;\n  tryStatement.sourceEnd=method.bodyEnd;\n  return tryStatement;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 490,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 201,
        "startColumnNumber" : 2,
        "endLineNumber" : 201,
        "endColumnNumber" : 161
      },
      "nodeContext" : "sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "methodEnd",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 203,
      "startColumnNumber" : 47,
      "endLineNumber" : 203,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 203,
        "startColumnNumber" : 2,
        "endLineNumber" : 203,
        "endColumnNumber" : 56
      },
      "nodeContext" : "sneakyThrowStatement.receiver.statementEnd=methodEnd",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 203,
        "startColumnNumber" : 2,
        "endLineNumber" : 203,
        "endColumnNumber" : 57
      },
      "nodeContext" : "sneakyThrowStatement.receiver.statementEnd=methodEnd;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3202,
        "startLineNumber" : 162,
        "startColumnNumber" : 139,
        "endLineNumber" : 234,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int methodStart=method.bodyStart;\n  int methodEnd=method.bodyEnd;\n  long methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL);\n  TryStatement tryStatement=new TryStatement();\n  setGeneratedBy(tryStatement,source);\n  tryStatement.tryBlock=new Block(0);\n  tryStatement.tryBlock.sourceStart=methodStart;\n  tryStatement.tryBlock.sourceEnd=methodEnd;\n  setGeneratedBy(tryStatement.tryBlock,source);\n  tryStatement.tryBlock.statements=contents;\n  TypeReference typeReference;\n  if (exception.exceptionName.indexOf('.') == -1) {\n    typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n    typeReference.statementEnd=methodEnd;\n  }\n else {\n    String[] x=exception.exceptionName.split(\"\\\\.\");\n    char[][] elems=new char[x.length][];\n    long[] poss=new long[x.length];\n    Arrays.fill(poss,methodPosEnd);\n    for (int i=0; i < x.length; i++) {\n      elems[i]=x[i].trim().toCharArray();\n    }\n    typeReference=new QualifiedTypeReference(elems,poss);\n  }\n  setGeneratedBy(typeReference,source);\n  Argument catchArg=new Argument(\"$ex\".toCharArray(),methodPosEnd,typeReference,Modifier.FINAL);\n  setGeneratedBy(catchArg,source);\n  catchArg.declarationSourceEnd=catchArg.declarationEnd=catchArg.sourceEnd=methodEnd;\n  catchArg.declarationSourceStart=catchArg.modifiersSourceStart=catchArg.sourceStart=methodEnd;\n  tryStatement.catchArguments=new Argument[]{catchArg};\n  MessageSend sneakyThrowStatement=new MessageSend();\n  setGeneratedBy(sneakyThrowStatement,source);\n  sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd);\n  setGeneratedBy(sneakyThrowStatement.receiver,source);\n  sneakyThrowStatement.receiver.statementEnd=methodEnd;\n  sneakyThrowStatement.selector=\"sneakyThrow\".toCharArray();\n  SingleNameReference exRef=new SingleNameReference(\"$ex\".toCharArray(),methodPosEnd);\n  setGeneratedBy(exRef,source);\n  exRef.statementEnd=methodEnd;\n  sneakyThrowStatement.arguments=new Expression[]{exRef};\n  sneakyThrowStatement.nameSourcePosition=-2L;\n  sneakyThrowStatement.sourceStart=methodEnd;\n  sneakyThrowStatement.sourceEnd=sneakyThrowStatement.statementEnd=methodEnd;\n  Statement rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd);\n  setGeneratedBy(rethrowStatement,source);\n  Block block=new Block(0);\n  block.sourceStart=methodEnd;\n  block.sourceEnd=methodEnd;\n  setGeneratedBy(block,source);\n  block.statements=new Statement[]{rethrowStatement};\n  tryStatement.catchBlocks=new Block[]{block};\n  tryStatement.sourceStart=method.bodyStart;\n  tryStatement.sourceEnd=method.bodyEnd;\n  return tryStatement;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 467,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3340,
        "startLineNumber" : 162,
        "startColumnNumber" : 1,
        "endLineNumber" : 234,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private Statement buildTryCatchBlock(Statement[] contents,DeclaredException exception,ASTNode source,AbstractMethodDeclaration method){\n  int methodStart=method.bodyStart;\n  int methodEnd=method.bodyEnd;\n  long methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL);\n  TryStatement tryStatement=new TryStatement();\n  setGeneratedBy(tryStatement,source);\n  tryStatement.tryBlock=new Block(0);\n  tryStatement.tryBlock.sourceStart=methodStart;\n  tryStatement.tryBlock.sourceEnd=methodEnd;\n  setGeneratedBy(tryStatement.tryBlock,source);\n  tryStatement.tryBlock.statements=contents;\n  TypeReference typeReference;\n  if (exception.exceptionName.indexOf('.') == -1) {\n    typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n    typeReference.statementEnd=methodEnd;\n  }\n else {\n    String[] x=exception.exceptionName.split(\"\\\\.\");\n    char[][] elems=new char[x.length][];\n    long[] poss=new long[x.length];\n    Arrays.fill(poss,methodPosEnd);\n    for (int i=0; i < x.length; i++) {\n      elems[i]=x[i].trim().toCharArray();\n    }\n    typeReference=new QualifiedTypeReference(elems,poss);\n  }\n  setGeneratedBy(typeReference,source);\n  Argument catchArg=new Argument(\"$ex\".toCharArray(),methodPosEnd,typeReference,Modifier.FINAL);\n  setGeneratedBy(catchArg,source);\n  catchArg.declarationSourceEnd=catchArg.declarationEnd=catchArg.sourceEnd=methodEnd;\n  catchArg.declarationSourceStart=catchArg.modifiersSourceStart=catchArg.sourceStart=methodEnd;\n  tryStatement.catchArguments=new Argument[]{catchArg};\n  MessageSend sneakyThrowStatement=new MessageSend();\n  setGeneratedBy(sneakyThrowStatement,source);\n  sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd);\n  setGeneratedBy(sneakyThrowStatement.receiver,source);\n  sneakyThrowStatement.receiver.statementEnd=methodEnd;\n  sneakyThrowStatement.selector=\"sneakyThrow\".toCharArray();\n  SingleNameReference exRef=new SingleNameReference(\"$ex\".toCharArray(),methodPosEnd);\n  setGeneratedBy(exRef,source);\n  exRef.statementEnd=methodEnd;\n  sneakyThrowStatement.arguments=new Expression[]{exRef};\n  sneakyThrowStatement.nameSourcePosition=-2L;\n  sneakyThrowStatement.sourceStart=methodEnd;\n  sneakyThrowStatement.sourceEnd=sneakyThrowStatement.statementEnd=methodEnd;\n  Statement rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd);\n  setGeneratedBy(rethrowStatement,source);\n  Block block=new Block(0);\n  block.sourceStart=methodEnd;\n  block.sourceEnd=methodEnd;\n  setGeneratedBy(block,source);\n  block.statements=new Statement[]{rethrowStatement};\n  tryStatement.catchBlocks=new Block[]{block};\n  tryStatement.sourceStart=method.bodyStart;\n  tryStatement.sourceEnd=method.bodyEnd;\n  return tryStatement;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 490,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 203,
        "startColumnNumber" : 2,
        "endLineNumber" : 203,
        "endColumnNumber" : 57
      },
      "nodeContext" : "sneakyThrowStatement.receiver.statementEnd=methodEnd;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "methodEnd",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 207,
      "startColumnNumber" : 23,
      "endLineNumber" : 207,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 207,
        "startColumnNumber" : 2,
        "endLineNumber" : 207,
        "endColumnNumber" : 32
      },
      "nodeContext" : "exRef.statementEnd=methodEnd",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 207,
        "startColumnNumber" : 2,
        "endLineNumber" : 207,
        "endColumnNumber" : 33
      },
      "nodeContext" : "exRef.statementEnd=methodEnd;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3202,
        "startLineNumber" : 162,
        "startColumnNumber" : 139,
        "endLineNumber" : 234,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int methodStart=method.bodyStart;\n  int methodEnd=method.bodyEnd;\n  long methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL);\n  TryStatement tryStatement=new TryStatement();\n  setGeneratedBy(tryStatement,source);\n  tryStatement.tryBlock=new Block(0);\n  tryStatement.tryBlock.sourceStart=methodStart;\n  tryStatement.tryBlock.sourceEnd=methodEnd;\n  setGeneratedBy(tryStatement.tryBlock,source);\n  tryStatement.tryBlock.statements=contents;\n  TypeReference typeReference;\n  if (exception.exceptionName.indexOf('.') == -1) {\n    typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n    typeReference.statementEnd=methodEnd;\n  }\n else {\n    String[] x=exception.exceptionName.split(\"\\\\.\");\n    char[][] elems=new char[x.length][];\n    long[] poss=new long[x.length];\n    Arrays.fill(poss,methodPosEnd);\n    for (int i=0; i < x.length; i++) {\n      elems[i]=x[i].trim().toCharArray();\n    }\n    typeReference=new QualifiedTypeReference(elems,poss);\n  }\n  setGeneratedBy(typeReference,source);\n  Argument catchArg=new Argument(\"$ex\".toCharArray(),methodPosEnd,typeReference,Modifier.FINAL);\n  setGeneratedBy(catchArg,source);\n  catchArg.declarationSourceEnd=catchArg.declarationEnd=catchArg.sourceEnd=methodEnd;\n  catchArg.declarationSourceStart=catchArg.modifiersSourceStart=catchArg.sourceStart=methodEnd;\n  tryStatement.catchArguments=new Argument[]{catchArg};\n  MessageSend sneakyThrowStatement=new MessageSend();\n  setGeneratedBy(sneakyThrowStatement,source);\n  sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd);\n  setGeneratedBy(sneakyThrowStatement.receiver,source);\n  sneakyThrowStatement.receiver.statementEnd=methodEnd;\n  sneakyThrowStatement.selector=\"sneakyThrow\".toCharArray();\n  SingleNameReference exRef=new SingleNameReference(\"$ex\".toCharArray(),methodPosEnd);\n  setGeneratedBy(exRef,source);\n  exRef.statementEnd=methodEnd;\n  sneakyThrowStatement.arguments=new Expression[]{exRef};\n  sneakyThrowStatement.nameSourcePosition=-2L;\n  sneakyThrowStatement.sourceStart=methodEnd;\n  sneakyThrowStatement.sourceEnd=sneakyThrowStatement.statementEnd=methodEnd;\n  Statement rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd);\n  setGeneratedBy(rethrowStatement,source);\n  Block block=new Block(0);\n  block.sourceStart=methodEnd;\n  block.sourceEnd=methodEnd;\n  setGeneratedBy(block,source);\n  block.statements=new Statement[]{rethrowStatement};\n  tryStatement.catchBlocks=new Block[]{block};\n  tryStatement.sourceStart=method.bodyStart;\n  tryStatement.sourceEnd=method.bodyEnd;\n  return tryStatement;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 467,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3340,
        "startLineNumber" : 162,
        "startColumnNumber" : 1,
        "endLineNumber" : 234,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private Statement buildTryCatchBlock(Statement[] contents,DeclaredException exception,ASTNode source,AbstractMethodDeclaration method){\n  int methodStart=method.bodyStart;\n  int methodEnd=method.bodyEnd;\n  long methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL);\n  TryStatement tryStatement=new TryStatement();\n  setGeneratedBy(tryStatement,source);\n  tryStatement.tryBlock=new Block(0);\n  tryStatement.tryBlock.sourceStart=methodStart;\n  tryStatement.tryBlock.sourceEnd=methodEnd;\n  setGeneratedBy(tryStatement.tryBlock,source);\n  tryStatement.tryBlock.statements=contents;\n  TypeReference typeReference;\n  if (exception.exceptionName.indexOf('.') == -1) {\n    typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n    typeReference.statementEnd=methodEnd;\n  }\n else {\n    String[] x=exception.exceptionName.split(\"\\\\.\");\n    char[][] elems=new char[x.length][];\n    long[] poss=new long[x.length];\n    Arrays.fill(poss,methodPosEnd);\n    for (int i=0; i < x.length; i++) {\n      elems[i]=x[i].trim().toCharArray();\n    }\n    typeReference=new QualifiedTypeReference(elems,poss);\n  }\n  setGeneratedBy(typeReference,source);\n  Argument catchArg=new Argument(\"$ex\".toCharArray(),methodPosEnd,typeReference,Modifier.FINAL);\n  setGeneratedBy(catchArg,source);\n  catchArg.declarationSourceEnd=catchArg.declarationEnd=catchArg.sourceEnd=methodEnd;\n  catchArg.declarationSourceStart=catchArg.modifiersSourceStart=catchArg.sourceStart=methodEnd;\n  tryStatement.catchArguments=new Argument[]{catchArg};\n  MessageSend sneakyThrowStatement=new MessageSend();\n  setGeneratedBy(sneakyThrowStatement,source);\n  sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd);\n  setGeneratedBy(sneakyThrowStatement.receiver,source);\n  sneakyThrowStatement.receiver.statementEnd=methodEnd;\n  sneakyThrowStatement.selector=\"sneakyThrow\".toCharArray();\n  SingleNameReference exRef=new SingleNameReference(\"$ex\".toCharArray(),methodPosEnd);\n  setGeneratedBy(exRef,source);\n  exRef.statementEnd=methodEnd;\n  sneakyThrowStatement.arguments=new Expression[]{exRef};\n  sneakyThrowStatement.nameSourcePosition=-2L;\n  sneakyThrowStatement.sourceStart=methodEnd;\n  sneakyThrowStatement.sourceEnd=sneakyThrowStatement.statementEnd=methodEnd;\n  Statement rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd);\n  setGeneratedBy(rethrowStatement,source);\n  Block block=new Block(0);\n  block.sourceStart=methodEnd;\n  block.sourceEnd=methodEnd;\n  setGeneratedBy(block,source);\n  block.statements=new Statement[]{rethrowStatement};\n  tryStatement.catchBlocks=new Block[]{block};\n  tryStatement.sourceStart=method.bodyStart;\n  tryStatement.sourceEnd=method.bodyEnd;\n  return tryStatement;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 490,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 207,
        "startColumnNumber" : 2,
        "endLineNumber" : 207,
        "endColumnNumber" : 33
      },
      "nodeContext" : "exRef.statementEnd=methodEnd;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "methodEnd",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 215,
      "startColumnNumber" : 37,
      "endLineNumber" : 215,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 215,
        "startColumnNumber" : 2,
        "endLineNumber" : 215,
        "endColumnNumber" : 46
      },
      "nodeContext" : "sneakyThrowStatement.sourceStart=methodEnd",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 215,
        "startColumnNumber" : 2,
        "endLineNumber" : 215,
        "endColumnNumber" : 47
      },
      "nodeContext" : "sneakyThrowStatement.sourceStart=methodEnd;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3202,
        "startLineNumber" : 162,
        "startColumnNumber" : 139,
        "endLineNumber" : 234,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int methodStart=method.bodyStart;\n  int methodEnd=method.bodyEnd;\n  long methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL);\n  TryStatement tryStatement=new TryStatement();\n  setGeneratedBy(tryStatement,source);\n  tryStatement.tryBlock=new Block(0);\n  tryStatement.tryBlock.sourceStart=methodStart;\n  tryStatement.tryBlock.sourceEnd=methodEnd;\n  setGeneratedBy(tryStatement.tryBlock,source);\n  tryStatement.tryBlock.statements=contents;\n  TypeReference typeReference;\n  if (exception.exceptionName.indexOf('.') == -1) {\n    typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n    typeReference.statementEnd=methodEnd;\n  }\n else {\n    String[] x=exception.exceptionName.split(\"\\\\.\");\n    char[][] elems=new char[x.length][];\n    long[] poss=new long[x.length];\n    Arrays.fill(poss,methodPosEnd);\n    for (int i=0; i < x.length; i++) {\n      elems[i]=x[i].trim().toCharArray();\n    }\n    typeReference=new QualifiedTypeReference(elems,poss);\n  }\n  setGeneratedBy(typeReference,source);\n  Argument catchArg=new Argument(\"$ex\".toCharArray(),methodPosEnd,typeReference,Modifier.FINAL);\n  setGeneratedBy(catchArg,source);\n  catchArg.declarationSourceEnd=catchArg.declarationEnd=catchArg.sourceEnd=methodEnd;\n  catchArg.declarationSourceStart=catchArg.modifiersSourceStart=catchArg.sourceStart=methodEnd;\n  tryStatement.catchArguments=new Argument[]{catchArg};\n  MessageSend sneakyThrowStatement=new MessageSend();\n  setGeneratedBy(sneakyThrowStatement,source);\n  sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd);\n  setGeneratedBy(sneakyThrowStatement.receiver,source);\n  sneakyThrowStatement.receiver.statementEnd=methodEnd;\n  sneakyThrowStatement.selector=\"sneakyThrow\".toCharArray();\n  SingleNameReference exRef=new SingleNameReference(\"$ex\".toCharArray(),methodPosEnd);\n  setGeneratedBy(exRef,source);\n  exRef.statementEnd=methodEnd;\n  sneakyThrowStatement.arguments=new Expression[]{exRef};\n  sneakyThrowStatement.nameSourcePosition=-2L;\n  sneakyThrowStatement.sourceStart=methodEnd;\n  sneakyThrowStatement.sourceEnd=sneakyThrowStatement.statementEnd=methodEnd;\n  Statement rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd);\n  setGeneratedBy(rethrowStatement,source);\n  Block block=new Block(0);\n  block.sourceStart=methodEnd;\n  block.sourceEnd=methodEnd;\n  setGeneratedBy(block,source);\n  block.statements=new Statement[]{rethrowStatement};\n  tryStatement.catchBlocks=new Block[]{block};\n  tryStatement.sourceStart=method.bodyStart;\n  tryStatement.sourceEnd=method.bodyEnd;\n  return tryStatement;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 467,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3340,
        "startLineNumber" : 162,
        "startColumnNumber" : 1,
        "endLineNumber" : 234,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private Statement buildTryCatchBlock(Statement[] contents,DeclaredException exception,ASTNode source,AbstractMethodDeclaration method){\n  int methodStart=method.bodyStart;\n  int methodEnd=method.bodyEnd;\n  long methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL);\n  TryStatement tryStatement=new TryStatement();\n  setGeneratedBy(tryStatement,source);\n  tryStatement.tryBlock=new Block(0);\n  tryStatement.tryBlock.sourceStart=methodStart;\n  tryStatement.tryBlock.sourceEnd=methodEnd;\n  setGeneratedBy(tryStatement.tryBlock,source);\n  tryStatement.tryBlock.statements=contents;\n  TypeReference typeReference;\n  if (exception.exceptionName.indexOf('.') == -1) {\n    typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n    typeReference.statementEnd=methodEnd;\n  }\n else {\n    String[] x=exception.exceptionName.split(\"\\\\.\");\n    char[][] elems=new char[x.length][];\n    long[] poss=new long[x.length];\n    Arrays.fill(poss,methodPosEnd);\n    for (int i=0; i < x.length; i++) {\n      elems[i]=x[i].trim().toCharArray();\n    }\n    typeReference=new QualifiedTypeReference(elems,poss);\n  }\n  setGeneratedBy(typeReference,source);\n  Argument catchArg=new Argument(\"$ex\".toCharArray(),methodPosEnd,typeReference,Modifier.FINAL);\n  setGeneratedBy(catchArg,source);\n  catchArg.declarationSourceEnd=catchArg.declarationEnd=catchArg.sourceEnd=methodEnd;\n  catchArg.declarationSourceStart=catchArg.modifiersSourceStart=catchArg.sourceStart=methodEnd;\n  tryStatement.catchArguments=new Argument[]{catchArg};\n  MessageSend sneakyThrowStatement=new MessageSend();\n  setGeneratedBy(sneakyThrowStatement,source);\n  sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd);\n  setGeneratedBy(sneakyThrowStatement.receiver,source);\n  sneakyThrowStatement.receiver.statementEnd=methodEnd;\n  sneakyThrowStatement.selector=\"sneakyThrow\".toCharArray();\n  SingleNameReference exRef=new SingleNameReference(\"$ex\".toCharArray(),methodPosEnd);\n  setGeneratedBy(exRef,source);\n  exRef.statementEnd=methodEnd;\n  sneakyThrowStatement.arguments=new Expression[]{exRef};\n  sneakyThrowStatement.nameSourcePosition=-2L;\n  sneakyThrowStatement.sourceStart=methodEnd;\n  sneakyThrowStatement.sourceEnd=sneakyThrowStatement.statementEnd=methodEnd;\n  Statement rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd);\n  setGeneratedBy(rethrowStatement,source);\n  Block block=new Block(0);\n  block.sourceStart=methodEnd;\n  block.sourceEnd=methodEnd;\n  setGeneratedBy(block,source);\n  block.statements=new Statement[]{rethrowStatement};\n  tryStatement.catchBlocks=new Block[]{block};\n  tryStatement.sourceStart=method.bodyStart;\n  tryStatement.sourceEnd=method.bodyEnd;\n  return tryStatement;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 490,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 215,
        "startColumnNumber" : 2,
        "endLineNumber" : 215,
        "endColumnNumber" : 47
      },
      "nodeContext" : "sneakyThrowStatement.sourceStart=methodEnd;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "methodEnd",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 216,
      "startColumnNumber" : 71,
      "endLineNumber" : 216,
      "endColumnNumber" : 80
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 216,
        "startColumnNumber" : 35,
        "endLineNumber" : 216,
        "endColumnNumber" : 80
      },
      "nodeContext" : "sneakyThrowStatement.statementEnd=methodEnd",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 216,
        "startColumnNumber" : 2,
        "endLineNumber" : 216,
        "endColumnNumber" : 80
      },
      "nodeContext" : "sneakyThrowStatement.sourceEnd=sneakyThrowStatement.statementEnd=methodEnd",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 216,
        "startColumnNumber" : 2,
        "endLineNumber" : 216,
        "endColumnNumber" : 81
      },
      "nodeContext" : "sneakyThrowStatement.sourceEnd=sneakyThrowStatement.statementEnd=methodEnd;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3202,
        "startLineNumber" : 162,
        "startColumnNumber" : 139,
        "endLineNumber" : 234,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int methodStart=method.bodyStart;\n  int methodEnd=method.bodyEnd;\n  long methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL);\n  TryStatement tryStatement=new TryStatement();\n  setGeneratedBy(tryStatement,source);\n  tryStatement.tryBlock=new Block(0);\n  tryStatement.tryBlock.sourceStart=methodStart;\n  tryStatement.tryBlock.sourceEnd=methodEnd;\n  setGeneratedBy(tryStatement.tryBlock,source);\n  tryStatement.tryBlock.statements=contents;\n  TypeReference typeReference;\n  if (exception.exceptionName.indexOf('.') == -1) {\n    typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n    typeReference.statementEnd=methodEnd;\n  }\n else {\n    String[] x=exception.exceptionName.split(\"\\\\.\");\n    char[][] elems=new char[x.length][];\n    long[] poss=new long[x.length];\n    Arrays.fill(poss,methodPosEnd);\n    for (int i=0; i < x.length; i++) {\n      elems[i]=x[i].trim().toCharArray();\n    }\n    typeReference=new QualifiedTypeReference(elems,poss);\n  }\n  setGeneratedBy(typeReference,source);\n  Argument catchArg=new Argument(\"$ex\".toCharArray(),methodPosEnd,typeReference,Modifier.FINAL);\n  setGeneratedBy(catchArg,source);\n  catchArg.declarationSourceEnd=catchArg.declarationEnd=catchArg.sourceEnd=methodEnd;\n  catchArg.declarationSourceStart=catchArg.modifiersSourceStart=catchArg.sourceStart=methodEnd;\n  tryStatement.catchArguments=new Argument[]{catchArg};\n  MessageSend sneakyThrowStatement=new MessageSend();\n  setGeneratedBy(sneakyThrowStatement,source);\n  sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd);\n  setGeneratedBy(sneakyThrowStatement.receiver,source);\n  sneakyThrowStatement.receiver.statementEnd=methodEnd;\n  sneakyThrowStatement.selector=\"sneakyThrow\".toCharArray();\n  SingleNameReference exRef=new SingleNameReference(\"$ex\".toCharArray(),methodPosEnd);\n  setGeneratedBy(exRef,source);\n  exRef.statementEnd=methodEnd;\n  sneakyThrowStatement.arguments=new Expression[]{exRef};\n  sneakyThrowStatement.nameSourcePosition=-2L;\n  sneakyThrowStatement.sourceStart=methodEnd;\n  sneakyThrowStatement.sourceEnd=sneakyThrowStatement.statementEnd=methodEnd;\n  Statement rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd);\n  setGeneratedBy(rethrowStatement,source);\n  Block block=new Block(0);\n  block.sourceStart=methodEnd;\n  block.sourceEnd=methodEnd;\n  setGeneratedBy(block,source);\n  block.statements=new Statement[]{rethrowStatement};\n  tryStatement.catchBlocks=new Block[]{block};\n  tryStatement.sourceStart=method.bodyStart;\n  tryStatement.sourceEnd=method.bodyEnd;\n  return tryStatement;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 467,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3340,
        "startLineNumber" : 162,
        "startColumnNumber" : 1,
        "endLineNumber" : 234,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private Statement buildTryCatchBlock(Statement[] contents,DeclaredException exception,ASTNode source,AbstractMethodDeclaration method){\n  int methodStart=method.bodyStart;\n  int methodEnd=method.bodyEnd;\n  long methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL);\n  TryStatement tryStatement=new TryStatement();\n  setGeneratedBy(tryStatement,source);\n  tryStatement.tryBlock=new Block(0);\n  tryStatement.tryBlock.sourceStart=methodStart;\n  tryStatement.tryBlock.sourceEnd=methodEnd;\n  setGeneratedBy(tryStatement.tryBlock,source);\n  tryStatement.tryBlock.statements=contents;\n  TypeReference typeReference;\n  if (exception.exceptionName.indexOf('.') == -1) {\n    typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n    typeReference.statementEnd=methodEnd;\n  }\n else {\n    String[] x=exception.exceptionName.split(\"\\\\.\");\n    char[][] elems=new char[x.length][];\n    long[] poss=new long[x.length];\n    Arrays.fill(poss,methodPosEnd);\n    for (int i=0; i < x.length; i++) {\n      elems[i]=x[i].trim().toCharArray();\n    }\n    typeReference=new QualifiedTypeReference(elems,poss);\n  }\n  setGeneratedBy(typeReference,source);\n  Argument catchArg=new Argument(\"$ex\".toCharArray(),methodPosEnd,typeReference,Modifier.FINAL);\n  setGeneratedBy(catchArg,source);\n  catchArg.declarationSourceEnd=catchArg.declarationEnd=catchArg.sourceEnd=methodEnd;\n  catchArg.declarationSourceStart=catchArg.modifiersSourceStart=catchArg.sourceStart=methodEnd;\n  tryStatement.catchArguments=new Argument[]{catchArg};\n  MessageSend sneakyThrowStatement=new MessageSend();\n  setGeneratedBy(sneakyThrowStatement,source);\n  sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd);\n  setGeneratedBy(sneakyThrowStatement.receiver,source);\n  sneakyThrowStatement.receiver.statementEnd=methodEnd;\n  sneakyThrowStatement.selector=\"sneakyThrow\".toCharArray();\n  SingleNameReference exRef=new SingleNameReference(\"$ex\".toCharArray(),methodPosEnd);\n  setGeneratedBy(exRef,source);\n  exRef.statementEnd=methodEnd;\n  sneakyThrowStatement.arguments=new Expression[]{exRef};\n  sneakyThrowStatement.nameSourcePosition=-2L;\n  sneakyThrowStatement.sourceStart=methodEnd;\n  sneakyThrowStatement.sourceEnd=sneakyThrowStatement.statementEnd=methodEnd;\n  Statement rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd);\n  setGeneratedBy(rethrowStatement,source);\n  Block block=new Block(0);\n  block.sourceStart=methodEnd;\n  block.sourceEnd=methodEnd;\n  setGeneratedBy(block,source);\n  block.statements=new Statement[]{rethrowStatement};\n  tryStatement.catchBlocks=new Block[]{block};\n  tryStatement.sourceStart=method.bodyStart;\n  tryStatement.sourceEnd=method.bodyEnd;\n  return tryStatement;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 490,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 216,
        "startColumnNumber" : 2,
        "endLineNumber" : 216,
        "endColumnNumber" : 81
      },
      "nodeContext" : "sneakyThrowStatement.sourceEnd=sneakyThrowStatement.statementEnd=methodEnd;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "methodEnd",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 218,
      "startColumnNumber" : 72,
      "endLineNumber" : 218,
      "endColumnNumber" : 81
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 218,
        "startColumnNumber" : 31,
        "endLineNumber" : 218,
        "endColumnNumber" : 93
      },
      "nodeContext" : "new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 218,
        "startColumnNumber" : 12,
        "endLineNumber" : 218,
        "endColumnNumber" : 93
      },
      "nodeContext" : "rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 218,
        "startColumnNumber" : 2,
        "endLineNumber" : 218,
        "endColumnNumber" : 94
      },
      "nodeContext" : "Statement rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3202,
        "startLineNumber" : 162,
        "startColumnNumber" : 139,
        "endLineNumber" : 234,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int methodStart=method.bodyStart;\n  int methodEnd=method.bodyEnd;\n  long methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL);\n  TryStatement tryStatement=new TryStatement();\n  setGeneratedBy(tryStatement,source);\n  tryStatement.tryBlock=new Block(0);\n  tryStatement.tryBlock.sourceStart=methodStart;\n  tryStatement.tryBlock.sourceEnd=methodEnd;\n  setGeneratedBy(tryStatement.tryBlock,source);\n  tryStatement.tryBlock.statements=contents;\n  TypeReference typeReference;\n  if (exception.exceptionName.indexOf('.') == -1) {\n    typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n    typeReference.statementEnd=methodEnd;\n  }\n else {\n    String[] x=exception.exceptionName.split(\"\\\\.\");\n    char[][] elems=new char[x.length][];\n    long[] poss=new long[x.length];\n    Arrays.fill(poss,methodPosEnd);\n    for (int i=0; i < x.length; i++) {\n      elems[i]=x[i].trim().toCharArray();\n    }\n    typeReference=new QualifiedTypeReference(elems,poss);\n  }\n  setGeneratedBy(typeReference,source);\n  Argument catchArg=new Argument(\"$ex\".toCharArray(),methodPosEnd,typeReference,Modifier.FINAL);\n  setGeneratedBy(catchArg,source);\n  catchArg.declarationSourceEnd=catchArg.declarationEnd=catchArg.sourceEnd=methodEnd;\n  catchArg.declarationSourceStart=catchArg.modifiersSourceStart=catchArg.sourceStart=methodEnd;\n  tryStatement.catchArguments=new Argument[]{catchArg};\n  MessageSend sneakyThrowStatement=new MessageSend();\n  setGeneratedBy(sneakyThrowStatement,source);\n  sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd);\n  setGeneratedBy(sneakyThrowStatement.receiver,source);\n  sneakyThrowStatement.receiver.statementEnd=methodEnd;\n  sneakyThrowStatement.selector=\"sneakyThrow\".toCharArray();\n  SingleNameReference exRef=new SingleNameReference(\"$ex\".toCharArray(),methodPosEnd);\n  setGeneratedBy(exRef,source);\n  exRef.statementEnd=methodEnd;\n  sneakyThrowStatement.arguments=new Expression[]{exRef};\n  sneakyThrowStatement.nameSourcePosition=-2L;\n  sneakyThrowStatement.sourceStart=methodEnd;\n  sneakyThrowStatement.sourceEnd=sneakyThrowStatement.statementEnd=methodEnd;\n  Statement rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd);\n  setGeneratedBy(rethrowStatement,source);\n  Block block=new Block(0);\n  block.sourceStart=methodEnd;\n  block.sourceEnd=methodEnd;\n  setGeneratedBy(block,source);\n  block.statements=new Statement[]{rethrowStatement};\n  tryStatement.catchBlocks=new Block[]{block};\n  tryStatement.sourceStart=method.bodyStart;\n  tryStatement.sourceEnd=method.bodyEnd;\n  return tryStatement;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 467,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3340,
        "startLineNumber" : 162,
        "startColumnNumber" : 1,
        "endLineNumber" : 234,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private Statement buildTryCatchBlock(Statement[] contents,DeclaredException exception,ASTNode source,AbstractMethodDeclaration method){\n  int methodStart=method.bodyStart;\n  int methodEnd=method.bodyEnd;\n  long methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL);\n  TryStatement tryStatement=new TryStatement();\n  setGeneratedBy(tryStatement,source);\n  tryStatement.tryBlock=new Block(0);\n  tryStatement.tryBlock.sourceStart=methodStart;\n  tryStatement.tryBlock.sourceEnd=methodEnd;\n  setGeneratedBy(tryStatement.tryBlock,source);\n  tryStatement.tryBlock.statements=contents;\n  TypeReference typeReference;\n  if (exception.exceptionName.indexOf('.') == -1) {\n    typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n    typeReference.statementEnd=methodEnd;\n  }\n else {\n    String[] x=exception.exceptionName.split(\"\\\\.\");\n    char[][] elems=new char[x.length][];\n    long[] poss=new long[x.length];\n    Arrays.fill(poss,methodPosEnd);\n    for (int i=0; i < x.length; i++) {\n      elems[i]=x[i].trim().toCharArray();\n    }\n    typeReference=new QualifiedTypeReference(elems,poss);\n  }\n  setGeneratedBy(typeReference,source);\n  Argument catchArg=new Argument(\"$ex\".toCharArray(),methodPosEnd,typeReference,Modifier.FINAL);\n  setGeneratedBy(catchArg,source);\n  catchArg.declarationSourceEnd=catchArg.declarationEnd=catchArg.sourceEnd=methodEnd;\n  catchArg.declarationSourceStart=catchArg.modifiersSourceStart=catchArg.sourceStart=methodEnd;\n  tryStatement.catchArguments=new Argument[]{catchArg};\n  MessageSend sneakyThrowStatement=new MessageSend();\n  setGeneratedBy(sneakyThrowStatement,source);\n  sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd);\n  setGeneratedBy(sneakyThrowStatement.receiver,source);\n  sneakyThrowStatement.receiver.statementEnd=methodEnd;\n  sneakyThrowStatement.selector=\"sneakyThrow\".toCharArray();\n  SingleNameReference exRef=new SingleNameReference(\"$ex\".toCharArray(),methodPosEnd);\n  setGeneratedBy(exRef,source);\n  exRef.statementEnd=methodEnd;\n  sneakyThrowStatement.arguments=new Expression[]{exRef};\n  sneakyThrowStatement.nameSourcePosition=-2L;\n  sneakyThrowStatement.sourceStart=methodEnd;\n  sneakyThrowStatement.sourceEnd=sneakyThrowStatement.statementEnd=methodEnd;\n  Statement rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd);\n  setGeneratedBy(rethrowStatement,source);\n  Block block=new Block(0);\n  block.sourceStart=methodEnd;\n  block.sourceEnd=methodEnd;\n  setGeneratedBy(block,source);\n  block.statements=new Statement[]{rethrowStatement};\n  tryStatement.catchBlocks=new Block[]{block};\n  tryStatement.sourceStart=method.bodyStart;\n  tryStatement.sourceEnd=method.bodyEnd;\n  return tryStatement;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 490,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 218,
        "startColumnNumber" : 2,
        "endLineNumber" : 218,
        "endColumnNumber" : 94
      },
      "nodeContext" : "Statement rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "methodEnd",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 218,
      "startColumnNumber" : 83,
      "endLineNumber" : 218,
      "endColumnNumber" : 92
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 218,
        "startColumnNumber" : 31,
        "endLineNumber" : 218,
        "endColumnNumber" : 93
      },
      "nodeContext" : "new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 218,
        "startColumnNumber" : 12,
        "endLineNumber" : 218,
        "endColumnNumber" : 93
      },
      "nodeContext" : "rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 218,
        "startColumnNumber" : 2,
        "endLineNumber" : 218,
        "endColumnNumber" : 94
      },
      "nodeContext" : "Statement rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3202,
        "startLineNumber" : 162,
        "startColumnNumber" : 139,
        "endLineNumber" : 234,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int methodStart=method.bodyStart;\n  int methodEnd=method.bodyEnd;\n  long methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL);\n  TryStatement tryStatement=new TryStatement();\n  setGeneratedBy(tryStatement,source);\n  tryStatement.tryBlock=new Block(0);\n  tryStatement.tryBlock.sourceStart=methodStart;\n  tryStatement.tryBlock.sourceEnd=methodEnd;\n  setGeneratedBy(tryStatement.tryBlock,source);\n  tryStatement.tryBlock.statements=contents;\n  TypeReference typeReference;\n  if (exception.exceptionName.indexOf('.') == -1) {\n    typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n    typeReference.statementEnd=methodEnd;\n  }\n else {\n    String[] x=exception.exceptionName.split(\"\\\\.\");\n    char[][] elems=new char[x.length][];\n    long[] poss=new long[x.length];\n    Arrays.fill(poss,methodPosEnd);\n    for (int i=0; i < x.length; i++) {\n      elems[i]=x[i].trim().toCharArray();\n    }\n    typeReference=new QualifiedTypeReference(elems,poss);\n  }\n  setGeneratedBy(typeReference,source);\n  Argument catchArg=new Argument(\"$ex\".toCharArray(),methodPosEnd,typeReference,Modifier.FINAL);\n  setGeneratedBy(catchArg,source);\n  catchArg.declarationSourceEnd=catchArg.declarationEnd=catchArg.sourceEnd=methodEnd;\n  catchArg.declarationSourceStart=catchArg.modifiersSourceStart=catchArg.sourceStart=methodEnd;\n  tryStatement.catchArguments=new Argument[]{catchArg};\n  MessageSend sneakyThrowStatement=new MessageSend();\n  setGeneratedBy(sneakyThrowStatement,source);\n  sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd);\n  setGeneratedBy(sneakyThrowStatement.receiver,source);\n  sneakyThrowStatement.receiver.statementEnd=methodEnd;\n  sneakyThrowStatement.selector=\"sneakyThrow\".toCharArray();\n  SingleNameReference exRef=new SingleNameReference(\"$ex\".toCharArray(),methodPosEnd);\n  setGeneratedBy(exRef,source);\n  exRef.statementEnd=methodEnd;\n  sneakyThrowStatement.arguments=new Expression[]{exRef};\n  sneakyThrowStatement.nameSourcePosition=-2L;\n  sneakyThrowStatement.sourceStart=methodEnd;\n  sneakyThrowStatement.sourceEnd=sneakyThrowStatement.statementEnd=methodEnd;\n  Statement rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd);\n  setGeneratedBy(rethrowStatement,source);\n  Block block=new Block(0);\n  block.sourceStart=methodEnd;\n  block.sourceEnd=methodEnd;\n  setGeneratedBy(block,source);\n  block.statements=new Statement[]{rethrowStatement};\n  tryStatement.catchBlocks=new Block[]{block};\n  tryStatement.sourceStart=method.bodyStart;\n  tryStatement.sourceEnd=method.bodyEnd;\n  return tryStatement;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 467,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3340,
        "startLineNumber" : 162,
        "startColumnNumber" : 1,
        "endLineNumber" : 234,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private Statement buildTryCatchBlock(Statement[] contents,DeclaredException exception,ASTNode source,AbstractMethodDeclaration method){\n  int methodStart=method.bodyStart;\n  int methodEnd=method.bodyEnd;\n  long methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL);\n  TryStatement tryStatement=new TryStatement();\n  setGeneratedBy(tryStatement,source);\n  tryStatement.tryBlock=new Block(0);\n  tryStatement.tryBlock.sourceStart=methodStart;\n  tryStatement.tryBlock.sourceEnd=methodEnd;\n  setGeneratedBy(tryStatement.tryBlock,source);\n  tryStatement.tryBlock.statements=contents;\n  TypeReference typeReference;\n  if (exception.exceptionName.indexOf('.') == -1) {\n    typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n    typeReference.statementEnd=methodEnd;\n  }\n else {\n    String[] x=exception.exceptionName.split(\"\\\\.\");\n    char[][] elems=new char[x.length][];\n    long[] poss=new long[x.length];\n    Arrays.fill(poss,methodPosEnd);\n    for (int i=0; i < x.length; i++) {\n      elems[i]=x[i].trim().toCharArray();\n    }\n    typeReference=new QualifiedTypeReference(elems,poss);\n  }\n  setGeneratedBy(typeReference,source);\n  Argument catchArg=new Argument(\"$ex\".toCharArray(),methodPosEnd,typeReference,Modifier.FINAL);\n  setGeneratedBy(catchArg,source);\n  catchArg.declarationSourceEnd=catchArg.declarationEnd=catchArg.sourceEnd=methodEnd;\n  catchArg.declarationSourceStart=catchArg.modifiersSourceStart=catchArg.sourceStart=methodEnd;\n  tryStatement.catchArguments=new Argument[]{catchArg};\n  MessageSend sneakyThrowStatement=new MessageSend();\n  setGeneratedBy(sneakyThrowStatement,source);\n  sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd);\n  setGeneratedBy(sneakyThrowStatement.receiver,source);\n  sneakyThrowStatement.receiver.statementEnd=methodEnd;\n  sneakyThrowStatement.selector=\"sneakyThrow\".toCharArray();\n  SingleNameReference exRef=new SingleNameReference(\"$ex\".toCharArray(),methodPosEnd);\n  setGeneratedBy(exRef,source);\n  exRef.statementEnd=methodEnd;\n  sneakyThrowStatement.arguments=new Expression[]{exRef};\n  sneakyThrowStatement.nameSourcePosition=-2L;\n  sneakyThrowStatement.sourceStart=methodEnd;\n  sneakyThrowStatement.sourceEnd=sneakyThrowStatement.statementEnd=methodEnd;\n  Statement rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd);\n  setGeneratedBy(rethrowStatement,source);\n  Block block=new Block(0);\n  block.sourceStart=methodEnd;\n  block.sourceEnd=methodEnd;\n  setGeneratedBy(block,source);\n  block.statements=new Statement[]{rethrowStatement};\n  tryStatement.catchBlocks=new Block[]{block};\n  tryStatement.sourceStart=method.bodyStart;\n  tryStatement.sourceEnd=method.bodyEnd;\n  return tryStatement;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 490,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 218,
        "startColumnNumber" : 2,
        "endLineNumber" : 218,
        "endColumnNumber" : 94
      },
      "nodeContext" : "Statement rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "methodEnd",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 222,
      "startColumnNumber" : 22,
      "endLineNumber" : 222,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 222,
        "startColumnNumber" : 2,
        "endLineNumber" : 222,
        "endColumnNumber" : 31
      },
      "nodeContext" : "block.sourceStart=methodEnd",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 222,
        "startColumnNumber" : 2,
        "endLineNumber" : 222,
        "endColumnNumber" : 32
      },
      "nodeContext" : "block.sourceStart=methodEnd;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3202,
        "startLineNumber" : 162,
        "startColumnNumber" : 139,
        "endLineNumber" : 234,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int methodStart=method.bodyStart;\n  int methodEnd=method.bodyEnd;\n  long methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL);\n  TryStatement tryStatement=new TryStatement();\n  setGeneratedBy(tryStatement,source);\n  tryStatement.tryBlock=new Block(0);\n  tryStatement.tryBlock.sourceStart=methodStart;\n  tryStatement.tryBlock.sourceEnd=methodEnd;\n  setGeneratedBy(tryStatement.tryBlock,source);\n  tryStatement.tryBlock.statements=contents;\n  TypeReference typeReference;\n  if (exception.exceptionName.indexOf('.') == -1) {\n    typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n    typeReference.statementEnd=methodEnd;\n  }\n else {\n    String[] x=exception.exceptionName.split(\"\\\\.\");\n    char[][] elems=new char[x.length][];\n    long[] poss=new long[x.length];\n    Arrays.fill(poss,methodPosEnd);\n    for (int i=0; i < x.length; i++) {\n      elems[i]=x[i].trim().toCharArray();\n    }\n    typeReference=new QualifiedTypeReference(elems,poss);\n  }\n  setGeneratedBy(typeReference,source);\n  Argument catchArg=new Argument(\"$ex\".toCharArray(),methodPosEnd,typeReference,Modifier.FINAL);\n  setGeneratedBy(catchArg,source);\n  catchArg.declarationSourceEnd=catchArg.declarationEnd=catchArg.sourceEnd=methodEnd;\n  catchArg.declarationSourceStart=catchArg.modifiersSourceStart=catchArg.sourceStart=methodEnd;\n  tryStatement.catchArguments=new Argument[]{catchArg};\n  MessageSend sneakyThrowStatement=new MessageSend();\n  setGeneratedBy(sneakyThrowStatement,source);\n  sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd);\n  setGeneratedBy(sneakyThrowStatement.receiver,source);\n  sneakyThrowStatement.receiver.statementEnd=methodEnd;\n  sneakyThrowStatement.selector=\"sneakyThrow\".toCharArray();\n  SingleNameReference exRef=new SingleNameReference(\"$ex\".toCharArray(),methodPosEnd);\n  setGeneratedBy(exRef,source);\n  exRef.statementEnd=methodEnd;\n  sneakyThrowStatement.arguments=new Expression[]{exRef};\n  sneakyThrowStatement.nameSourcePosition=-2L;\n  sneakyThrowStatement.sourceStart=methodEnd;\n  sneakyThrowStatement.sourceEnd=sneakyThrowStatement.statementEnd=methodEnd;\n  Statement rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd);\n  setGeneratedBy(rethrowStatement,source);\n  Block block=new Block(0);\n  block.sourceStart=methodEnd;\n  block.sourceEnd=methodEnd;\n  setGeneratedBy(block,source);\n  block.statements=new Statement[]{rethrowStatement};\n  tryStatement.catchBlocks=new Block[]{block};\n  tryStatement.sourceStart=method.bodyStart;\n  tryStatement.sourceEnd=method.bodyEnd;\n  return tryStatement;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 467,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3340,
        "startLineNumber" : 162,
        "startColumnNumber" : 1,
        "endLineNumber" : 234,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private Statement buildTryCatchBlock(Statement[] contents,DeclaredException exception,ASTNode source,AbstractMethodDeclaration method){\n  int methodStart=method.bodyStart;\n  int methodEnd=method.bodyEnd;\n  long methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL);\n  TryStatement tryStatement=new TryStatement();\n  setGeneratedBy(tryStatement,source);\n  tryStatement.tryBlock=new Block(0);\n  tryStatement.tryBlock.sourceStart=methodStart;\n  tryStatement.tryBlock.sourceEnd=methodEnd;\n  setGeneratedBy(tryStatement.tryBlock,source);\n  tryStatement.tryBlock.statements=contents;\n  TypeReference typeReference;\n  if (exception.exceptionName.indexOf('.') == -1) {\n    typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n    typeReference.statementEnd=methodEnd;\n  }\n else {\n    String[] x=exception.exceptionName.split(\"\\\\.\");\n    char[][] elems=new char[x.length][];\n    long[] poss=new long[x.length];\n    Arrays.fill(poss,methodPosEnd);\n    for (int i=0; i < x.length; i++) {\n      elems[i]=x[i].trim().toCharArray();\n    }\n    typeReference=new QualifiedTypeReference(elems,poss);\n  }\n  setGeneratedBy(typeReference,source);\n  Argument catchArg=new Argument(\"$ex\".toCharArray(),methodPosEnd,typeReference,Modifier.FINAL);\n  setGeneratedBy(catchArg,source);\n  catchArg.declarationSourceEnd=catchArg.declarationEnd=catchArg.sourceEnd=methodEnd;\n  catchArg.declarationSourceStart=catchArg.modifiersSourceStart=catchArg.sourceStart=methodEnd;\n  tryStatement.catchArguments=new Argument[]{catchArg};\n  MessageSend sneakyThrowStatement=new MessageSend();\n  setGeneratedBy(sneakyThrowStatement,source);\n  sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd);\n  setGeneratedBy(sneakyThrowStatement.receiver,source);\n  sneakyThrowStatement.receiver.statementEnd=methodEnd;\n  sneakyThrowStatement.selector=\"sneakyThrow\".toCharArray();\n  SingleNameReference exRef=new SingleNameReference(\"$ex\".toCharArray(),methodPosEnd);\n  setGeneratedBy(exRef,source);\n  exRef.statementEnd=methodEnd;\n  sneakyThrowStatement.arguments=new Expression[]{exRef};\n  sneakyThrowStatement.nameSourcePosition=-2L;\n  sneakyThrowStatement.sourceStart=methodEnd;\n  sneakyThrowStatement.sourceEnd=sneakyThrowStatement.statementEnd=methodEnd;\n  Statement rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd);\n  setGeneratedBy(rethrowStatement,source);\n  Block block=new Block(0);\n  block.sourceStart=methodEnd;\n  block.sourceEnd=methodEnd;\n  setGeneratedBy(block,source);\n  block.statements=new Statement[]{rethrowStatement};\n  tryStatement.catchBlocks=new Block[]{block};\n  tryStatement.sourceStart=method.bodyStart;\n  tryStatement.sourceEnd=method.bodyEnd;\n  return tryStatement;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 490,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 222,
        "startColumnNumber" : 2,
        "endLineNumber" : 222,
        "endColumnNumber" : 32
      },
      "nodeContext" : "block.sourceStart=methodEnd;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "methodEnd",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 223,
      "startColumnNumber" : 20,
      "endLineNumber" : 223,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 223,
        "startColumnNumber" : 2,
        "endLineNumber" : 223,
        "endColumnNumber" : 29
      },
      "nodeContext" : "block.sourceEnd=methodEnd",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 223,
        "startColumnNumber" : 2,
        "endLineNumber" : 223,
        "endColumnNumber" : 30
      },
      "nodeContext" : "block.sourceEnd=methodEnd;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3202,
        "startLineNumber" : 162,
        "startColumnNumber" : 139,
        "endLineNumber" : 234,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int methodStart=method.bodyStart;\n  int methodEnd=method.bodyEnd;\n  long methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL);\n  TryStatement tryStatement=new TryStatement();\n  setGeneratedBy(tryStatement,source);\n  tryStatement.tryBlock=new Block(0);\n  tryStatement.tryBlock.sourceStart=methodStart;\n  tryStatement.tryBlock.sourceEnd=methodEnd;\n  setGeneratedBy(tryStatement.tryBlock,source);\n  tryStatement.tryBlock.statements=contents;\n  TypeReference typeReference;\n  if (exception.exceptionName.indexOf('.') == -1) {\n    typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n    typeReference.statementEnd=methodEnd;\n  }\n else {\n    String[] x=exception.exceptionName.split(\"\\\\.\");\n    char[][] elems=new char[x.length][];\n    long[] poss=new long[x.length];\n    Arrays.fill(poss,methodPosEnd);\n    for (int i=0; i < x.length; i++) {\n      elems[i]=x[i].trim().toCharArray();\n    }\n    typeReference=new QualifiedTypeReference(elems,poss);\n  }\n  setGeneratedBy(typeReference,source);\n  Argument catchArg=new Argument(\"$ex\".toCharArray(),methodPosEnd,typeReference,Modifier.FINAL);\n  setGeneratedBy(catchArg,source);\n  catchArg.declarationSourceEnd=catchArg.declarationEnd=catchArg.sourceEnd=methodEnd;\n  catchArg.declarationSourceStart=catchArg.modifiersSourceStart=catchArg.sourceStart=methodEnd;\n  tryStatement.catchArguments=new Argument[]{catchArg};\n  MessageSend sneakyThrowStatement=new MessageSend();\n  setGeneratedBy(sneakyThrowStatement,source);\n  sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd);\n  setGeneratedBy(sneakyThrowStatement.receiver,source);\n  sneakyThrowStatement.receiver.statementEnd=methodEnd;\n  sneakyThrowStatement.selector=\"sneakyThrow\".toCharArray();\n  SingleNameReference exRef=new SingleNameReference(\"$ex\".toCharArray(),methodPosEnd);\n  setGeneratedBy(exRef,source);\n  exRef.statementEnd=methodEnd;\n  sneakyThrowStatement.arguments=new Expression[]{exRef};\n  sneakyThrowStatement.nameSourcePosition=-2L;\n  sneakyThrowStatement.sourceStart=methodEnd;\n  sneakyThrowStatement.sourceEnd=sneakyThrowStatement.statementEnd=methodEnd;\n  Statement rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd);\n  setGeneratedBy(rethrowStatement,source);\n  Block block=new Block(0);\n  block.sourceStart=methodEnd;\n  block.sourceEnd=methodEnd;\n  setGeneratedBy(block,source);\n  block.statements=new Statement[]{rethrowStatement};\n  tryStatement.catchBlocks=new Block[]{block};\n  tryStatement.sourceStart=method.bodyStart;\n  tryStatement.sourceEnd=method.bodyEnd;\n  return tryStatement;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 467,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3340,
        "startLineNumber" : 162,
        "startColumnNumber" : 1,
        "endLineNumber" : 234,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private Statement buildTryCatchBlock(Statement[] contents,DeclaredException exception,ASTNode source,AbstractMethodDeclaration method){\n  int methodStart=method.bodyStart;\n  int methodEnd=method.bodyEnd;\n  long methodPosEnd=methodEnd << 32 | (methodEnd & 0xFFFFFFFFL);\n  TryStatement tryStatement=new TryStatement();\n  setGeneratedBy(tryStatement,source);\n  tryStatement.tryBlock=new Block(0);\n  tryStatement.tryBlock.sourceStart=methodStart;\n  tryStatement.tryBlock.sourceEnd=methodEnd;\n  setGeneratedBy(tryStatement.tryBlock,source);\n  tryStatement.tryBlock.statements=contents;\n  TypeReference typeReference;\n  if (exception.exceptionName.indexOf('.') == -1) {\n    typeReference=new SingleTypeReference(exception.exceptionName.toCharArray(),methodPosEnd);\n    typeReference.statementEnd=methodEnd;\n  }\n else {\n    String[] x=exception.exceptionName.split(\"\\\\.\");\n    char[][] elems=new char[x.length][];\n    long[] poss=new long[x.length];\n    Arrays.fill(poss,methodPosEnd);\n    for (int i=0; i < x.length; i++) {\n      elems[i]=x[i].trim().toCharArray();\n    }\n    typeReference=new QualifiedTypeReference(elems,poss);\n  }\n  setGeneratedBy(typeReference,source);\n  Argument catchArg=new Argument(\"$ex\".toCharArray(),methodPosEnd,typeReference,Modifier.FINAL);\n  setGeneratedBy(catchArg,source);\n  catchArg.declarationSourceEnd=catchArg.declarationEnd=catchArg.sourceEnd=methodEnd;\n  catchArg.declarationSourceStart=catchArg.modifiersSourceStart=catchArg.sourceStart=methodEnd;\n  tryStatement.catchArguments=new Argument[]{catchArg};\n  MessageSend sneakyThrowStatement=new MessageSend();\n  setGeneratedBy(sneakyThrowStatement,source);\n  sneakyThrowStatement.receiver=new QualifiedNameReference(new char[][]{\"lombok\".toCharArray(),\"Lombok\".toCharArray()},new long[2],methodEnd,methodEnd);\n  setGeneratedBy(sneakyThrowStatement.receiver,source);\n  sneakyThrowStatement.receiver.statementEnd=methodEnd;\n  sneakyThrowStatement.selector=\"sneakyThrow\".toCharArray();\n  SingleNameReference exRef=new SingleNameReference(\"$ex\".toCharArray(),methodPosEnd);\n  setGeneratedBy(exRef,source);\n  exRef.statementEnd=methodEnd;\n  sneakyThrowStatement.arguments=new Expression[]{exRef};\n  sneakyThrowStatement.nameSourcePosition=-2L;\n  sneakyThrowStatement.sourceStart=methodEnd;\n  sneakyThrowStatement.sourceEnd=sneakyThrowStatement.statementEnd=methodEnd;\n  Statement rethrowStatement=new ThrowStatement(sneakyThrowStatement,methodEnd,methodEnd);\n  setGeneratedBy(rethrowStatement,source);\n  Block block=new Block(0);\n  block.sourceStart=methodEnd;\n  block.sourceEnd=methodEnd;\n  setGeneratedBy(block,source);\n  block.statements=new Statement[]{rethrowStatement};\n  tryStatement.catchBlocks=new Block[]{block};\n  tryStatement.sourceStart=method.bodyStart;\n  tryStatement.sourceEnd=method.bodyEnd;\n  return tryStatement;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 490,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 223,
        "startColumnNumber" : 2,
        "endLineNumber" : 223,
        "endColumnNumber" : 30
      },
      "nodeContext" : "block.sourceEnd=methodEnd;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 165,
    "startColumnNumber" : 22,
    "endLineNumber" : 165,
    "endColumnNumber" : 31
  }, {
    "charLength" : 9,
    "startLineNumber" : 165,
    "startColumnNumber" : 41,
    "endLineNumber" : 165,
    "endColumnNumber" : 50
  }, {
    "charLength" : 9,
    "startLineNumber" : 172,
    "startColumnNumber" : 85,
    "endLineNumber" : 172,
    "endColumnNumber" : 94
  }, {
    "charLength" : 9,
    "startLineNumber" : 179,
    "startColumnNumber" : 32,
    "endLineNumber" : 179,
    "endColumnNumber" : 41
  }, {
    "charLength" : 9,
    "startLineNumber" : 194,
    "startColumnNumber" : 81,
    "endLineNumber" : 194,
    "endColumnNumber" : 90
  }, {
    "charLength" : 9,
    "startLineNumber" : 195,
    "startColumnNumber" : 91,
    "endLineNumber" : 195,
    "endColumnNumber" : 100
  }, {
    "charLength" : 9,
    "startLineNumber" : 201,
    "startColumnNumber" : 139,
    "endLineNumber" : 201,
    "endColumnNumber" : 148
  }, {
    "charLength" : 9,
    "startLineNumber" : 201,
    "startColumnNumber" : 150,
    "endLineNumber" : 201,
    "endColumnNumber" : 159
  }, {
    "charLength" : 9,
    "startLineNumber" : 203,
    "startColumnNumber" : 47,
    "endLineNumber" : 203,
    "endColumnNumber" : 56
  }, {
    "charLength" : 9,
    "startLineNumber" : 207,
    "startColumnNumber" : 23,
    "endLineNumber" : 207,
    "endColumnNumber" : 32
  }, {
    "charLength" : 9,
    "startLineNumber" : 215,
    "startColumnNumber" : 37,
    "endLineNumber" : 215,
    "endColumnNumber" : 46
  }, {
    "charLength" : 9,
    "startLineNumber" : 216,
    "startColumnNumber" : 71,
    "endLineNumber" : 216,
    "endColumnNumber" : 80
  }, {
    "charLength" : 9,
    "startLineNumber" : 218,
    "startColumnNumber" : 72,
    "endLineNumber" : 218,
    "endColumnNumber" : 81
  }, {
    "charLength" : 9,
    "startLineNumber" : 218,
    "startColumnNumber" : 83,
    "endLineNumber" : 218,
    "endColumnNumber" : 92
  }, {
    "charLength" : 9,
    "startLineNumber" : 222,
    "startColumnNumber" : 22,
    "endLineNumber" : 222,
    "endColumnNumber" : 31
  }, {
    "charLength" : 9,
    "startLineNumber" : 223,
    "startColumnNumber" : 20,
    "endLineNumber" : 223,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 10,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 11,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 12,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 13,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 14,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 15,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 10,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 11,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 12,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 13,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 14,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 15,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 0
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 0
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 8,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 14,
    "layout" : 2
  }, {
    "firstKey" : 10,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 11,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 13,
    "layout" : 0
  }, {
    "firstKey" : 12,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 12,
    "layout" : 0
  }, {
    "firstKey" : 13,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 15,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 14,
    "secondKey" : 15,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 10,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 11,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 12,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 13,
    "layout" : 2
  }, {
    "firstKey" : 15,
    "secondKey" : 14,
    "layout" : 2
  } ]
}