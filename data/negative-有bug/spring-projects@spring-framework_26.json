{
  "id" : 26,
  "expression" : "this.bufferFactory",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-core/src/testFixtures/java/org/springframework/core/testfixture/codec/AbstractEncoderTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "this.bufferFactory",
    "nodeType" : "FieldAccess",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 155,
      "startColumnNumber" : 52,
      "endLineNumber" : 155,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 155,
        "startColumnNumber" : 28,
        "endLineNumber" : 156,
        "endColumnNumber" : 20
      },
      "nodeContext" : "encoder().encode(input,this.bufferFactory,inputType,mimeType,hints)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 155,
        "startColumnNumber" : 19,
        "endLineNumber" : 156,
        "endColumnNumber" : 20
      },
      "nodeContext" : "result=encoder().encode(input,this.bufferFactory,inputType,mimeType,hints)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 155,
        "startColumnNumber" : 2,
        "endLineNumber" : 156,
        "endColumnNumber" : 21
      },
      "nodeContext" : "Flux<DataBuffer> result=encoder().encode(input,this.bufferFactory,inputType,mimeType,hints);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 19,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 212,
        "startLineNumber" : 153,
        "startColumnNumber" : 69,
        "endLineNumber" : 159,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Flux<DataBuffer> result=encoder().encode(input,this.bufferFactory,inputType,mimeType,hints);\n  StepVerifier.FirstStep<DataBuffer> step=StepVerifier.create(result);\n  stepConsumer.accept(step);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 852,
        "startLineNumber" : 141,
        "startColumnNumber" : 1,
        "endLineNumber" : 159,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Test a standard  {@link Encoder#encode encode} scenario.\n * @param input the input to be provided to the encoder\n * @param inputType the input type\n * @param stepConsumer a consumer to {@linkplain StepVerifier verify} the output\n * @param mimeType the mime type to use for decoding. May be {@code null}.\n * @param hints the hints used for decoding. May be {@code null}.\n * @param < T > the output type\n */\nprotected <T>void testEncode(Publisher<? extends T> input,ResolvableType inputType,Consumer<StepVerifier.FirstStep<DataBuffer>> stepConsumer,@Nullable MimeType mimeType,@Nullable Map<String,Object> hints){\n  Flux<DataBuffer> result=encoder().encode(input,this.bufferFactory,inputType,mimeType,hints);\n  StepVerifier.FirstStep<DataBuffer> step=StepVerifier.create(result);\n  stepConsumer.accept(step);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 87,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 155,
        "startColumnNumber" : 28,
        "endLineNumber" : 156,
        "endColumnNumber" : 20
      },
      "nodeContext" : "encoder().encode(input,this.bufferFactory,inputType,mimeType,hints)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.springframework.core.testfixture.io.buffer.LeakAwareDataBufferFactory"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 155,
    "startColumnNumber" : 52,
    "endLineNumber" : 155,
    "endColumnNumber" : 70
  } ],
  "layoutRelationDataList" : [ ]
}