{
  "id" : 251,
  "expression" : "input",
  "projectName" : "java-decompiler@jd-gui",
  "commitID" : "fbc5b14d66b37b88bf1dc18386b530e874550240",
  "filePath" : "/services/src/main/java/org/jd/gui/util/parser/antlr/ANTLRJavaParser.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "input",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 19,
      "startColumnNumber" : 44,
      "endLineNumber" : 19,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 19,
        "startColumnNumber" : 30,
        "endLineNumber" : 19,
        "endColumnNumber" : 50
      },
      "nodeContext" : "new JavaLexer(input)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 19,
        "startColumnNumber" : 22,
        "endLineNumber" : 19,
        "endColumnNumber" : 50
      },
      "nodeContext" : "lexer=new JavaLexer(input)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 19,
        "startColumnNumber" : 12,
        "endLineNumber" : 19,
        "endColumnNumber" : 51
      },
      "nodeContext" : "JavaLexer lexer=new JavaLexer(input);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 404,
        "startLineNumber" : 18,
        "startColumnNumber" : 12,
        "endLineNumber" : 31,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  JavaLexer lexer=new JavaLexer(input);\n  lexer.removeErrorListeners();\n  CommonTokenStream tokens=new CommonTokenStream(lexer);\n  JavaParser parser=new JavaParser(tokens);\n  parser.removeErrorListeners();\n  ParseTree tree=parser.compilationUnit();\n  ParseTreeWalker.DEFAULT.walk(listener,tree);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 52,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 661,
        "startLineNumber" : 18,
        "startColumnNumber" : 8,
        "endLineNumber" : 35,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  JavaLexer lexer=new JavaLexer(input);\n  lexer.removeErrorListeners();\n  CommonTokenStream tokens=new CommonTokenStream(lexer);\n  JavaParser parser=new JavaParser(tokens);\n  parser.removeErrorListeners();\n  ParseTree tree=parser.compilationUnit();\n  ParseTreeWalker.DEFAULT.walk(listener,tree);\n}\n catch (StackOverflowError e) {\n  assert ExceptionUtil.printStackTrace(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 64,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 679,
        "startLineNumber" : 17,
        "startColumnNumber" : 70,
        "endLineNumber" : 36,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    JavaLexer lexer=new JavaLexer(input);\n    lexer.removeErrorListeners();\n    CommonTokenStream tokens=new CommonTokenStream(lexer);\n    JavaParser parser=new JavaParser(tokens);\n    parser.removeErrorListeners();\n    ParseTree tree=parser.compilationUnit();\n    ParseTreeWalker.DEFAULT.walk(listener,tree);\n  }\n catch (  StackOverflowError e) {\n    assert ExceptionUtil.printStackTrace(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 745,
        "startLineNumber" : 17,
        "startColumnNumber" : 4,
        "endLineNumber" : 36,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void parse(CharStream input,JavaListener listener){\n  try {\n    JavaLexer lexer=new JavaLexer(input);\n    lexer.removeErrorListeners();\n    CommonTokenStream tokens=new CommonTokenStream(lexer);\n    JavaParser parser=new JavaParser(tokens);\n    parser.removeErrorListeners();\n    ParseTree tree=parser.compilationUnit();\n    ParseTreeWalker.DEFAULT.walk(listener,tree);\n  }\n catch (  StackOverflowError e) {\n    assert ExceptionUtil.printStackTrace(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 78,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 19,
        "startColumnNumber" : 12,
        "endLineNumber" : 19,
        "endColumnNumber" : 51
      },
      "nodeContext" : "JavaLexer lexer=new JavaLexer(input);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.jd.gui.util.parser.antlr.CharStream"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 19,
    "startColumnNumber" : 44,
    "endLineNumber" : 19,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ ]
}