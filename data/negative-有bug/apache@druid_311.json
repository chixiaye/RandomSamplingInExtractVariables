{
  "id" : 311,
  "expression" : "nulls[i]",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/core/src/main/java/org/apache/druid/math/expr/vector/ExprEvalDoubleVector.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "nulls[i]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 63,
      "startColumnNumber" : 21,
      "endLineNumber" : 63,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 63,
        "startColumnNumber" : 21,
        "endLineNumber" : 63,
        "endColumnNumber" : 48
      },
      "nodeContext" : "nulls[i] ? null : values[i]",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 48
      },
      "nodeContext" : "objects[i]=nulls[i] ? null : values[i]",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 49
      },
      "nodeContext" : "objects[i]=nulls[i] ? null : values[i];\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 62,
        "startColumnNumber" : 46,
        "endLineNumber" : 64,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  objects[i]=nulls[i] ? null : values[i];\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 62,
        "startColumnNumber" : 6,
        "endLineNumber" : 64,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int i=0; i < values.length; i++) {\n  objects[i]=nulls[i] ? null : values[i];\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 61,
        "startColumnNumber" : 23,
        "endLineNumber" : 65,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (int i=0; i < values.length; i++) {\n    objects[i]=nulls[i] ? null : values[i];\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 233,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (nulls != null) {\n  for (int i=0; i < values.length; i++) {\n    objects[i]=nulls[i] ? null : values[i];\n  }\n}\n else {\n  for (int i=0; i < values.length; i++) {\n    objects[i]=values[i];\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 313,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 71,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Double[] objects=new Double[values.length];\n  if (nulls != null) {\n    for (int i=0; i < values.length; i++) {\n      objects[i]=nulls[i] ? null : values[i];\n    }\n  }\n else {\n    for (int i=0; i < values.length; i++) {\n      objects[i]=values[i];\n    }\n  }\n  return objects;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 361,
        "startLineNumber" : 57,
        "startColumnNumber" : 2,
        "endLineNumber" : 71,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public Object[] getObjectVector(){\n  Double[] objects=new Double[values.length];\n  if (nulls != null) {\n    for (int i=0; i < values.length; i++) {\n      objects[i]=nulls[i] ? null : values[i];\n    }\n  }\n else {\n    for (int i=0; i < values.length; i++) {\n      objects[i]=values[i];\n    }\n  }\n  return objects;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 82,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 49
      },
      "nodeContext" : "objects[i]=nulls[i] ? null : values[i];\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 63,
    "startColumnNumber" : 21,
    "endLineNumber" : 63,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ ]
}