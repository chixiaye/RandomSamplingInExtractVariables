{
  "id" : 380,
  "expression" : "Paint",
  "projectName" : "TeamNewPipe@NewPipe",
  "commitID" : "d7574973e97fa7a3a21aa59967311f6091941830",
  "filePath" : "/app/src/main/java/us/shandian/giga/ui/common/ProgressDrawable.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Paint",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 73,
      "startColumnNumber" : 28,
      "endLineNumber" : 73,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.QualifiedName,qualifier]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 73,
        "startColumnNumber" : 28,
        "endLineNumber" : 73,
        "endColumnNumber" : 39
      },
      "nodeContext" : "Paint.Style",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 73,
        "startColumnNumber" : 28,
        "endLineNumber" : 73,
        "endColumnNumber" : 46
      },
      "nodeContext" : "Paint.Style.STROKE",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 73,
        "startColumnNumber" : 12,
        "endLineNumber" : 73,
        "endColumnNumber" : 47
      },
      "nodeContext" : "paint2.setStyle(Paint.Style.STROKE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 73,
        "startColumnNumber" : 12,
        "endLineNumber" : 73,
        "endColumnNumber" : 48
      },
      "nodeContext" : "paint2.setStyle(Paint.Style.STROKE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1102,
        "startLineNumber" : 66,
        "startColumnNumber" : 34,
        "endLineNumber" : 99,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (mMarqueeSize < 1)   setupMarquee(width,height);\n  int size=mMarqueeSize;\n  Paint paint2=new Paint();\n  paint2.setColor(mForegroundColor);\n  paint2.setStrokeWidth(size);\n  paint2.setStyle(Paint.Style.STROKE);\n  size*=2;\n  if (mMarqueeProgress >= size) {\n    mMarqueeProgress=1;\n  }\n else {\n    mMarqueeProgress++;\n  }\n  width+=size * 2;\n  Path marquee=new Path();\n  for (float i=-size; i < width; i+=size) {\n    marquee.addPath(mMarqueeLine,i + mMarqueeProgress,0);\n  }\n  marquee.close();\n  canvas.drawPath(marquee,paint2);\n  if (System.currentTimeMillis() >= mMarqueeNext) {\n    mMarqueeNext=System.currentTimeMillis() + MARQUEE_INTERVAL;\n    mMarqueeHandler.postDelayed(this::invalidateSelf,MARQUEE_INTERVAL);\n  }\n  return;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 130,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1128,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 99,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mMarqueeLine != null) {\n  if (mMarqueeSize < 1)   setupMarquee(width,height);\n  int size=mMarqueeSize;\n  Paint paint2=new Paint();\n  paint2.setColor(mForegroundColor);\n  paint2.setStrokeWidth(size);\n  paint2.setStyle(Paint.Style.STROKE);\n  size*=2;\n  if (mMarqueeProgress >= size) {\n    mMarqueeProgress=1;\n  }\n else {\n    mMarqueeProgress++;\n  }\n  width+=size * 2;\n  Path marquee=new Path();\n  for (float i=-size; i < width; i+=size) {\n    marquee.addPath(mMarqueeLine,i + mMarqueeProgress,0);\n  }\n  marquee.close();\n  canvas.drawPath(marquee,paint2);\n  if (System.currentTimeMillis() >= mMarqueeNext) {\n    mMarqueeNext=System.currentTimeMillis() + MARQUEE_INTERVAL;\n    mMarqueeHandler.postDelayed(this::invalidateSelf,MARQUEE_INTERVAL);\n  }\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 134,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1478,
        "startLineNumber" : 55,
        "startColumnNumber" : 45,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int width=getBounds().width();\n  int height=getBounds().height();\n  Paint paint=new Paint();\n  paint.setColor(mBackgroundColor);\n  canvas.drawRect(0,0,width,height,paint);\n  paint.setColor(mForegroundColor);\n  if (mMarqueeLine != null) {\n    if (mMarqueeSize < 1)     setupMarquee(width,height);\n    int size=mMarqueeSize;\n    Paint paint2=new Paint();\n    paint2.setColor(mForegroundColor);\n    paint2.setStrokeWidth(size);\n    paint2.setStyle(Paint.Style.STROKE);\n    size*=2;\n    if (mMarqueeProgress >= size) {\n      mMarqueeProgress=1;\n    }\n else {\n      mMarqueeProgress++;\n    }\n    width+=size * 2;\n    Path marquee=new Path();\n    for (float i=-size; i < width; i+=size) {\n      marquee.addPath(mMarqueeLine,i + mMarqueeProgress,0);\n    }\n    marquee.close();\n    canvas.drawPath(marquee,paint2);\n    if (System.currentTimeMillis() >= mMarqueeNext) {\n      mMarqueeNext=System.currentTimeMillis() + MARQUEE_INTERVAL;\n      mMarqueeHandler.postDelayed(this::invalidateSelf,MARQUEE_INTERVAL);\n    }\n    return;\n  }\n  canvas.drawRect(0,0,(int)(mProgress * width),height,paint);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 192,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1533,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 102,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void draw(@NonNull Canvas canvas){\n  int width=getBounds().width();\n  int height=getBounds().height();\n  Paint paint=new Paint();\n  paint.setColor(mBackgroundColor);\n  canvas.drawRect(0,0,width,height,paint);\n  paint.setColor(mForegroundColor);\n  if (mMarqueeLine != null) {\n    if (mMarqueeSize < 1)     setupMarquee(width,height);\n    int size=mMarqueeSize;\n    Paint paint2=new Paint();\n    paint2.setColor(mForegroundColor);\n    paint2.setStrokeWidth(size);\n    paint2.setStyle(Paint.Style.STROKE);\n    size*=2;\n    if (mMarqueeProgress >= size) {\n      mMarqueeProgress=1;\n    }\n else {\n      mMarqueeProgress++;\n    }\n    width+=size * 2;\n    Path marquee=new Path();\n    for (float i=-size; i < width; i+=size) {\n      marquee.addPath(mMarqueeLine,i + mMarqueeProgress,0);\n    }\n    marquee.close();\n    canvas.drawPath(marquee,paint2);\n    if (System.currentTimeMillis() >= mMarqueeNext) {\n      mMarqueeNext=System.currentTimeMillis() + MARQUEE_INTERVAL;\n      mMarqueeHandler.postDelayed(this::invalidateSelf,MARQUEE_INTERVAL);\n    }\n    return;\n  }\n  canvas.drawRect(0,0,(int)(mProgress * width),height,paint);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 204,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 73,
        "startColumnNumber" : 12,
        "endLineNumber" : 73,
        "endColumnNumber" : 48
      },
      "nodeContext" : "paint2.setStyle(Paint.Style.STROKE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 73,
    "startColumnNumber" : 28,
    "endLineNumber" : 73,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ ]
}