{
  "id" : 362,
  "expression" : "4",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/flowable/FlowableFromIterableTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "4",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 133,
      "startColumnNumber" : 33,
      "endLineNumber" : 133,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 133,
        "startColumnNumber" : 8,
        "endLineNumber" : 133,
        "endColumnNumber" : 41
      },
      "nodeContext" : "ts.assertValues(1,2,3,4,5,6)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 133,
        "startColumnNumber" : 8,
        "endLineNumber" : 133,
        "endColumnNumber" : 42
      },
      "nodeContext" : "ts.assertValues(1,2,3,4,5,6);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 671,
        "startLineNumber" : 115,
        "startColumnNumber" : 45,
        "endLineNumber" : 136,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ArrayList<Integer> list=new ArrayList<Integer>(Flowable.bufferSize());\n  for (int i=1; i <= Flowable.bufferSize() + 1; i++) {\n    list.add(i);\n  }\n  Flowable<Integer> o=Flowable.fromIterable(list);\n  TestSubscriber<Integer> ts=new TestSubscriber<Integer>((Long)null);\n  ts.assertNoValues();\n  ts.request(1);\n  o.subscribe(ts);\n  ts.assertValue(1);\n  ts.request(2);\n  ts.assertValues(1,2,3);\n  ts.request(3);\n  ts.assertValues(1,2,3,4,5,6);\n  ts.request(list.size());\n  ts.assertTerminated();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 723,
        "startLineNumber" : 114,
        "startColumnNumber" : 4,
        "endLineNumber" : 136,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testBackpressureViaRequest(){\n  ArrayList<Integer> list=new ArrayList<Integer>(Flowable.bufferSize());\n  for (int i=1; i <= Flowable.bufferSize() + 1; i++) {\n    list.add(i);\n  }\n  Flowable<Integer> o=Flowable.fromIterable(list);\n  TestSubscriber<Integer> ts=new TestSubscriber<Integer>((Long)null);\n  ts.assertNoValues();\n  ts.request(1);\n  o.subscribe(ts);\n  ts.assertValue(1);\n  ts.request(2);\n  ts.assertValues(1,2,3);\n  ts.request(3);\n  ts.assertValues(1,2,3,4,5,6);\n  ts.request(list.size());\n  ts.assertTerminated();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 132,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 133,
        "startColumnNumber" : 8,
        "endLineNumber" : 133,
        "endColumnNumber" : 42
      },
      "nodeContext" : "ts.assertValues(1,2,3,4,5,6);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 133,
    "startColumnNumber" : 33,
    "endLineNumber" : 133,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ ]
}