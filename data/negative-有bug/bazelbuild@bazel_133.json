{
  "id" : 133,
  "expression" : "findOnlyBridge(MethodReferenceSuperclass.class)",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/test/java/com/google/devtools/build/android/desugar/DesugarFunctionalTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "findOnlyBridge(MethodReferenceSuperclass.class)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 47,
      "startLineNumber" : 183,
      "startColumnNumber" : 30,
      "endLineNumber" : 183,
      "endColumnNumber" : 77
    },
    "astNodeNumber" : 5,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 183,
        "startColumnNumber" : 11,
        "endLineNumber" : 183,
        "endColumnNumber" : 77
      },
      "nodeContext" : "superclassBridge=findOnlyBridge(MethodReferenceSuperclass.class)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 183,
        "startColumnNumber" : 4,
        "endLineNumber" : 183,
        "endColumnNumber" : 78
      },
      "nodeContext" : "Method superclassBridge=findOnlyBridge(MethodReferenceSuperclass.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 737,
        "startLineNumber" : 176,
        "startColumnNumber" : 61,
        "endLineNumber" : 187,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  MethodReferenceInSubclass methodrefUse=new MethodReferenceInSubclass(ImmutableList.of(\"Sergey\",\"Larry\",\"Alex\"));\n  assertThat(methodrefUse.containsE()).containsExactly(\"Sergey\",\"Alex\");\n  assertThat(methodrefUse.startsWithL()).containsExactly(\"Larry\");\n  Method superclassBridge=findOnlyBridge(MethodReferenceSuperclass.class);\n  Method subclassBridge=findOnlyBridge(MethodReferenceInSubclass.class);\n  assertThat(superclassBridge.getName()).isNotEqualTo(subclassBridge.getName());\n  assertThat(superclassBridge.getParameterTypes()).isEqualTo(subclassBridge.getParameterTypes());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 804,
        "startLineNumber" : 175,
        "startColumnNumber" : 2,
        "endLineNumber" : 187,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testMethodReferenceThatNeedsBridgeInSubclass(){\n  MethodReferenceInSubclass methodrefUse=new MethodReferenceInSubclass(ImmutableList.of(\"Sergey\",\"Larry\",\"Alex\"));\n  assertThat(methodrefUse.containsE()).containsExactly(\"Sergey\",\"Alex\");\n  assertThat(methodrefUse.startsWithL()).containsExactly(\"Larry\");\n  Method superclassBridge=findOnlyBridge(MethodReferenceSuperclass.class);\n  Method subclassBridge=findOnlyBridge(MethodReferenceInSubclass.class);\n  assertThat(superclassBridge.getName()).isNotEqualTo(subclassBridge.getName());\n  assertThat(superclassBridge.getParameterTypes()).isEqualTo(subclassBridge.getParameterTypes());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 82,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 183,
        "startColumnNumber" : 4,
        "endLineNumber" : 183,
        "endColumnNumber" : 78
      },
      "nodeContext" : "Method superclassBridge=findOnlyBridge(MethodReferenceSuperclass.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "java.lang.reflect.Method"
  } ],
  "positionList" : [ {
    "charLength" : 47,
    "startLineNumber" : 183,
    "startColumnNumber" : 30,
    "endLineNumber" : 183,
    "endColumnNumber" : 77
  } ],
  "layoutRelationDataList" : [ ]
}