{
  "id" : 439,
  "expression" : "a[0]",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-core/src/test/java/jadx/tests/integration/conditions/TestSimpleConditions.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "a[0]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 15,
      "startColumnNumber" : 11,
      "endLineNumber" : 15,
      "endColumnNumber" : 15
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 15,
        "startColumnNumber" : 11,
        "endLineNumber" : 15,
        "endColumnNumber" : 31
      },
      "nodeContext" : "a[0] && a[1] && a[2]",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 15,
        "startColumnNumber" : 10,
        "endLineNumber" : 15,
        "endColumnNumber" : 32
      },
      "nodeContext" : "(a[0] && a[1] && a[2])",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 15,
        "startColumnNumber" : 10,
        "endLineNumber" : 15,
        "endColumnNumber" : 50
      },
      "nodeContext" : "(a[0] && a[1] && a[2]) || (a[3] && a[4])",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 15,
        "startColumnNumber" : 3,
        "endLineNumber" : 15,
        "endColumnNumber" : 51
      },
      "nodeContext" : "return (a[0] && a[1] && a[2]) || (a[3] && a[4]);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 14,
        "startColumnNumber" : 36,
        "endLineNumber" : 16,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  return (a[0] && a[1] && a[2]) || (a[3] && a[4]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 14,
        "startColumnNumber" : 2,
        "endLineNumber" : 16,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public boolean test1(boolean[] a){\n  return (a[0] && a[1] && a[2]) || (a[3] && a[4]);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 31,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 15,
        "startColumnNumber" : 3,
        "endLineNumber" : 15,
        "endColumnNumber" : 51
      },
      "nodeContext" : "return (a[0] && a[1] && a[2]) || (a[3] && a[4]);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 15,
    "startColumnNumber" : 11,
    "endLineNumber" : 15,
    "endColumnNumber" : 15
  } ],
  "layoutRelationDataList" : [ ]
}