{
  "id" : 163,
  "expression" : "(BytesMessage)message",
  "projectName" : "openzipkin@zipkin",
  "commitID" : "f02a993656f506277ca83737ddf494ed45fde4b3",
  "filePath" : "/zipkin-collector/activemq/src/main/java/zipkin2/collector/activemq/ActiveMQSpanConsumer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(BytesMessage)message",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 101,
      "startColumnNumber" : 36,
      "endLineNumber" : 101,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 101,
        "startColumnNumber" : 21,
        "endLineNumber" : 101,
        "endColumnNumber" : 58
      },
      "nodeContext" : "bytesMessage=(BytesMessage)message",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 59
      },
      "nodeContext" : "BytesMessage bytesMessage=(BytesMessage)message;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 180,
        "startLineNumber" : 100,
        "startColumnNumber" : 43,
        "endLineNumber" : 104,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  BytesMessage bytesMessage=(BytesMessage)message;\n  serialized=new byte[(int)bytesMessage.getBodyLength()];\n  bytesMessage.readBytes(serialized);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 443,
        "startLineNumber" : 100,
        "startColumnNumber" : 6,
        "endLineNumber" : 110,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (message instanceof BytesMessage) {\n  BytesMessage bytesMessage=(BytesMessage)message;\n  serialized=new byte[(int)bytesMessage.getBodyLength()];\n  bytesMessage.readBytes(serialized);\n}\n else if (message instanceof TextMessage) {\n  String text=((TextMessage)message).getText();\n  serialized=text.getBytes(UTF_8);\n}\n else {\n  metrics.incrementMessagesDropped();\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 63,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 457,
        "startLineNumber" : 99,
        "startColumnNumber" : 8,
        "endLineNumber" : 111,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (message instanceof BytesMessage) {\n    BytesMessage bytesMessage=(BytesMessage)message;\n    serialized=new byte[(int)bytesMessage.getBodyLength()];\n    bytesMessage.readBytes(serialized);\n  }\n else   if (message instanceof TextMessage) {\n    String text=((TextMessage)message).getText();\n    serialized=text.getBytes(UTF_8);\n  }\n else {\n    metrics.incrementMessagesDropped();\n    return;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 545,
        "startLineNumber" : 99,
        "startColumnNumber" : 4,
        "endLineNumber" : 114,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  if (message instanceof BytesMessage) {\n    BytesMessage bytesMessage=(BytesMessage)message;\n    serialized=new byte[(int)bytesMessage.getBodyLength()];\n    bytesMessage.readBytes(serialized);\n  }\n else   if (message instanceof TextMessage) {\n    String text=((TextMessage)message).getText();\n    serialized=text.getBytes(UTF_8);\n  }\n else {\n    metrics.incrementMessagesDropped();\n    return;\n  }\n}\n catch (Exception e) {\n  metrics.incrementMessagesDropped();\n  return;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 76,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 817,
        "startLineNumber" : 96,
        "startColumnNumber" : 51,
        "endLineNumber" : 119,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  metrics.incrementMessages();\n  byte[] serialized;\n  try {\n    if (message instanceof BytesMessage) {\n      BytesMessage bytesMessage=(BytesMessage)message;\n      serialized=new byte[(int)bytesMessage.getBodyLength()];\n      bytesMessage.readBytes(serialized);\n    }\n else     if (message instanceof TextMessage) {\n      String text=((TextMessage)message).getText();\n      serialized=text.getBytes(UTF_8);\n    }\n else {\n      metrics.incrementMessagesDropped();\n      return;\n    }\n  }\n catch (  Exception e) {\n    metrics.incrementMessagesDropped();\n    return;\n  }\n  metrics.incrementBytes(serialized.length);\n  if (serialized.length == 0)   return;\n  collector.acceptSpans(serialized,NOOP);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 866,
        "startLineNumber" : 96,
        "startColumnNumber" : 2,
        "endLineNumber" : 119,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void onMessage(Message message){\n  metrics.incrementMessages();\n  byte[] serialized;\n  try {\n    if (message instanceof BytesMessage) {\n      BytesMessage bytesMessage=(BytesMessage)message;\n      serialized=new byte[(int)bytesMessage.getBodyLength()];\n      bytesMessage.readBytes(serialized);\n    }\n else     if (message instanceof TextMessage) {\n      String text=((TextMessage)message).getText();\n      serialized=text.getBytes(UTF_8);\n    }\n else {\n      metrics.incrementMessagesDropped();\n      return;\n    }\n  }\n catch (  Exception e) {\n    metrics.incrementMessagesDropped();\n    return;\n  }\n  metrics.incrementBytes(serialized.length);\n  if (serialized.length == 0)   return;\n  collector.acceptSpans(serialized,NOOP);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 117,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 101,
        "endColumnNumber" : 59
      },
      "nodeContext" : "BytesMessage bytesMessage=(BytesMessage)message;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "zipkin2.collector.activemq.BytesMessage"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 101,
    "startColumnNumber" : 36,
    "endLineNumber" : 101,
    "endColumnNumber" : 58
  } ],
  "layoutRelationDataList" : [ ]
}