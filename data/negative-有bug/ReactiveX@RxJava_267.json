{
  "id" : 267,
  "expression" : "Flowable",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/flowable/FlowableErrorHandlingTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Flowable",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 38,
      "startColumnNumber" : 27,
      "endLineNumber" : 38,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 38,
        "startColumnNumber" : 27,
        "endLineNumber" : 38,
        "endColumnNumber" : 71
      },
      "nodeContext" : "Flowable.interval(50,TimeUnit.MILLISECONDS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 38,
        "startColumnNumber" : 23,
        "endLineNumber" : 38,
        "endColumnNumber" : 71
      },
      "nodeContext" : "o=Flowable.interval(50,TimeUnit.MILLISECONDS)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 38,
        "endColumnNumber" : 72
      },
      "nodeContext" : "Flowable<Long> o=Flowable.interval(50,TimeUnit.MILLISECONDS);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 971,
        "startLineNumber" : 35,
        "startColumnNumber" : 62,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final CountDownLatch latch=new CountDownLatch(1);\n  final AtomicReference<Throwable> caughtError=new AtomicReference<Throwable>();\n  Flowable<Long> o=Flowable.interval(50,TimeUnit.MILLISECONDS);\n  Subscriber<Long> observer=new DefaultObserver<Long>(){\n    @Override public void onComplete(){\n      System.out.println(\"completed\");\n      latch.countDown();\n    }\n    @Override public void onError(    Throwable e){\n      System.out.println(\"error: \" + e);\n      caughtError.set(e);\n      latch.countDown();\n    }\n    @Override public void onNext(    Long args){\n      throw new RuntimeException(\"forced failure\");\n    }\n  }\n;\n  o.safeSubscribe(observer);\n  latch.await(2000,TimeUnit.MILLISECONDS);\n  assertNotNull(caughtError.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 138,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1224,
        "startLineNumber" : 30,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Test that an error from a user provided Observer.onNext is handled and emitted to the onError\n * @throws InterruptedException if the test is interrupted\n */\n@Test public void testOnNextError() throws InterruptedException {\n  final CountDownLatch latch=new CountDownLatch(1);\n  final AtomicReference<Throwable> caughtError=new AtomicReference<Throwable>();\n  Flowable<Long> o=Flowable.interval(50,TimeUnit.MILLISECONDS);\n  Subscriber<Long> observer=new DefaultObserver<Long>(){\n    @Override public void onComplete(){\n      System.out.println(\"completed\");\n      latch.countDown();\n    }\n    @Override public void onError(    Throwable e){\n      System.out.println(\"error: \" + e);\n      caughtError.set(e);\n      latch.countDown();\n    }\n    @Override public void onNext(    Long args){\n      throw new RuntimeException(\"forced failure\");\n    }\n  }\n;\n  o.safeSubscribe(observer);\n  latch.await(2000,TimeUnit.MILLISECONDS);\n  assertNotNull(caughtError.get());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 147,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 38,
        "endColumnNumber" : 72
      },
      "nodeContext" : "Flowable<Long> o=Flowable.interval(50,TimeUnit.MILLISECONDS);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.Flowable"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 38,
    "startColumnNumber" : 27,
    "endLineNumber" : 38,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ ]
}