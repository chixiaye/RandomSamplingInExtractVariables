{
  "id" : 108,
  "expression" : "results.size()",
  "projectName" : "realm@realm-java",
  "commitID" : "9da3b229a46407f73e2003fb40857cadf062086b",
  "filePath" : "/realm/realm-library/src/androidTest/java/io/realm/RealmMigrationTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "results.size()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 779,
      "startColumnNumber" : 24,
      "endLineNumber" : 779,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 779,
        "startColumnNumber" : 8,
        "endLineNumber" : 779,
        "endColumnNumber" : 39
      },
      "nodeContext" : "assertEquals(2,results.size())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 779,
        "startColumnNumber" : 8,
        "endLineNumber" : 779,
        "endColumnNumber" : 40
      },
      "nodeContext" : "assertEquals(2,results.size());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2234,
        "startLineNumber" : 740,
        "startColumnNumber" : 70,
        "endLineNumber" : 782,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  RealmMigration migration=new RealmMigration(){\n    @Override public void migrate(    DynamicRealm realm,    long oldVersion,    long newVersion){\n      RealmObjectSchema objectSchema=realm.getSchema().get(PrimaryKeyAsString.CLASS_NAME);\n      assertNotNull(objectSchema);\n      assertEquals(PrimaryKeyAsString.FIELD_ID,objectSchema.getPrimaryKey());\n      objectSchema.removePrimaryKey().addPrimaryKey(PrimaryKeyAsString.FIELD_PRIMARY_KEY);\n    }\n  }\n;\n  RealmConfiguration configuration=configFactory.createConfigurationBuilder().schema(PrimaryKeyAsString.class).schemaVersion(1).migration(migration).build();\n  DynamicRealm dynamicRealm=DynamicRealm.getInstance(configuration);\n  dynamicRealm.beginTransaction();\n  RealmSchema schema=dynamicRealm.getSchema();\n  schema.create(PrimaryKeyAsString.CLASS_NAME).addField(PrimaryKeyAsString.FIELD_ID,long.class,FieldAttribute.PRIMARY_KEY).addField(PrimaryKeyAsString.FIELD_PRIMARY_KEY,String.class);\n  dynamicRealm.createObject(PrimaryKeyAsString.CLASS_NAME,0).setString(PrimaryKeyAsString.FIELD_PRIMARY_KEY,\"string0\");\n  dynamicRealm.createObject(PrimaryKeyAsString.CLASS_NAME,1).setString(PrimaryKeyAsString.FIELD_PRIMARY_KEY,\"string1\");\n  dynamicRealm.setVersion(0);\n  dynamicRealm.commitTransaction();\n  realm=Realm.getInstance(configuration);\n  RealmObjectSchema objectSchema=realm.getSchema().get(PrimaryKeyAsString.CLASS_NAME);\n  assertNotNull(objectSchema);\n  assertEquals(PrimaryKeyAsString.FIELD_PRIMARY_KEY,objectSchema.getPrimaryKey());\n  RealmResults<PrimaryKeyAsString> results=realm.where(PrimaryKeyAsString.class).sort(PrimaryKeyAsString.FIELD_ID).findAll();\n  assertEquals(2,results.size());\n  assertEquals(\"string0\",results.get(0).getName());\n  assertEquals(\"string1\",results.get(1).getName());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 247,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2310,
        "startLineNumber" : 739,
        "startColumnNumber" : 4,
        "endLineNumber" : 782,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void modifyPrimaryKeyFieldTypeFromIntToStringInMigration(){\n  RealmMigration migration=new RealmMigration(){\n    @Override public void migrate(    DynamicRealm realm,    long oldVersion,    long newVersion){\n      RealmObjectSchema objectSchema=realm.getSchema().get(PrimaryKeyAsString.CLASS_NAME);\n      assertNotNull(objectSchema);\n      assertEquals(PrimaryKeyAsString.FIELD_ID,objectSchema.getPrimaryKey());\n      objectSchema.removePrimaryKey().addPrimaryKey(PrimaryKeyAsString.FIELD_PRIMARY_KEY);\n    }\n  }\n;\n  RealmConfiguration configuration=configFactory.createConfigurationBuilder().schema(PrimaryKeyAsString.class).schemaVersion(1).migration(migration).build();\n  DynamicRealm dynamicRealm=DynamicRealm.getInstance(configuration);\n  dynamicRealm.beginTransaction();\n  RealmSchema schema=dynamicRealm.getSchema();\n  schema.create(PrimaryKeyAsString.CLASS_NAME).addField(PrimaryKeyAsString.FIELD_ID,long.class,FieldAttribute.PRIMARY_KEY).addField(PrimaryKeyAsString.FIELD_PRIMARY_KEY,String.class);\n  dynamicRealm.createObject(PrimaryKeyAsString.CLASS_NAME,0).setString(PrimaryKeyAsString.FIELD_PRIMARY_KEY,\"string0\");\n  dynamicRealm.createObject(PrimaryKeyAsString.CLASS_NAME,1).setString(PrimaryKeyAsString.FIELD_PRIMARY_KEY,\"string1\");\n  dynamicRealm.setVersion(0);\n  dynamicRealm.commitTransaction();\n  realm=Realm.getInstance(configuration);\n  RealmObjectSchema objectSchema=realm.getSchema().get(PrimaryKeyAsString.CLASS_NAME);\n  assertNotNull(objectSchema);\n  assertEquals(PrimaryKeyAsString.FIELD_PRIMARY_KEY,objectSchema.getPrimaryKey());\n  RealmResults<PrimaryKeyAsString> results=realm.where(PrimaryKeyAsString.class).sort(PrimaryKeyAsString.FIELD_ID).findAll();\n  assertEquals(2,results.size());\n  assertEquals(\"string0\",results.get(0).getName());\n  assertEquals(\"string1\",results.get(1).getName());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 253,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 779,
        "startColumnNumber" : 8,
        "endLineNumber" : 779,
        "endColumnNumber" : 40
      },
      "nodeContext" : "assertEquals(2,results.size());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 779,
    "startColumnNumber" : 24,
    "endLineNumber" : 779,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ ]
}