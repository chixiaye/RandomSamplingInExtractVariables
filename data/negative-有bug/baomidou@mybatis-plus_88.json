{
  "id" : 88,
  "expression" : "connection",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "7815611a659da4cc8d5443f5ef4c10ca0d937582",
  "filePath" : "/mybatis-plus-core/src/main/java/com/baomidou/mybatisplus/plugins/CachePaginationInterceptor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "connection",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 84,
      "startColumnNumber" : 105,
      "endLineNumber" : 84,
      "endColumnNumber" : 115
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 84,
        "startColumnNumber" : 20,
        "endLineNumber" : 84,
        "endColumnNumber" : 116
      },
      "nodeContext" : "super.queryTotal(overflowCurrent,sqlInfo.getSql(),mappedStatement,boundSql,page,connection)",
      "nodeType" : "SuperMethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 84,
        "startColumnNumber" : 20,
        "endLineNumber" : 84,
        "endColumnNumber" : 117
      },
      "nodeContext" : "super.queryTotal(overflowCurrent,sqlInfo.getSql(),mappedStatement,boundSql,page,connection);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 379,
        "startLineNumber" : 82,
        "startColumnNumber" : 42,
        "endLineNumber" : 88,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  SqlInfo sqlInfo=SqlUtils.getOptimizeCountSql(page.isOptimizeCountSql(),sqlParser,originalSql);\n  super.queryTotal(overflowCurrent,sqlInfo.getSql(),mappedStatement,boundSql,page,connection);\n  if (page.getTotal() <= 0) {\n    return invocation.proceed();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 36,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 405,
        "startLineNumber" : 82,
        "startColumnNumber" : 16,
        "endLineNumber" : 88,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (page.isSearchCount()) {\n  SqlInfo sqlInfo=SqlUtils.getOptimizeCountSql(page.isOptimizeCountSql(),sqlParser,originalSql);\n  super.queryTotal(overflowCurrent,sqlInfo.getSql(),mappedStatement,boundSql,page,connection);\n  if (page.getTotal() <= 0) {\n    return invocation.proceed();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 40,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 495,
        "startLineNumber" : 80,
        "startColumnNumber" : 49,
        "endLineNumber" : 89,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Pagination page=(Pagination)rowBounds;\n  if (page.isSearchCount()) {\n    SqlInfo sqlInfo=SqlUtils.getOptimizeCountSql(page.isOptimizeCountSql(),sqlParser,originalSql);\n    super.queryTotal(overflowCurrent,sqlInfo.getSql(),mappedStatement,boundSql,page,connection);\n    if (page.getTotal() <= 0) {\n      return invocation.proceed();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 532,
        "startLineNumber" : 80,
        "startColumnNumber" : 12,
        "endLineNumber" : 89,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (rowBounds instanceof Pagination) {\n  Pagination page=(Pagination)rowBounds;\n  if (page.isSearchCount()) {\n    SqlInfo sqlInfo=SqlUtils.getOptimizeCountSql(page.isOptimizeCountSql(),sqlParser,originalSql);\n    super.queryTotal(overflowCurrent,sqlInfo.getSql(),mappedStatement,boundSql,page,connection);\n    if (page.getTotal() <= 0) {\n      return invocation.proceed();\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1184,
        "startLineNumber" : 69,
        "startColumnNumber" : 15,
        "endLineNumber" : 90,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  RowBounds rowBounds=(RowBounds)invocation.getArgs()[2];\n  if (rowBounds == null || rowBounds == RowBounds.DEFAULT) {\n    return invocation.proceed();\n  }\n  MappedStatement mappedStatement=(MappedStatement)invocation.getArgs()[0];\n  Executor executor=(Executor)invocation.getTarget();\n  Connection connection=executor.getTransaction().getConnection();\n  Object parameterObject=invocation.getArgs()[1];\n  BoundSql boundSql=mappedStatement.getBoundSql(parameterObject);\n  String originalSql=boundSql.getSql();\n  if (rowBounds instanceof Pagination) {\n    Pagination page=(Pagination)rowBounds;\n    if (page.isSearchCount()) {\n      SqlInfo sqlInfo=SqlUtils.getOptimizeCountSql(page.isOptimizeCountSql(),sqlParser,originalSql);\n      super.queryTotal(overflowCurrent,sqlInfo.getSql(),mappedStatement,boundSql,page,connection);\n      if (page.getTotal() <= 0) {\n        return invocation.proceed();\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 145,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1289,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (target instanceof StatementHandler) {\n  return super.intercept(invocation);\n}\n else {\n  RowBounds rowBounds=(RowBounds)invocation.getArgs()[2];\n  if (rowBounds == null || rowBounds == RowBounds.DEFAULT) {\n    return invocation.proceed();\n  }\n  MappedStatement mappedStatement=(MappedStatement)invocation.getArgs()[0];\n  Executor executor=(Executor)invocation.getTarget();\n  Connection connection=executor.getTransaction().getConnection();\n  Object parameterObject=invocation.getArgs()[1];\n  BoundSql boundSql=mappedStatement.getBoundSql(parameterObject);\n  String originalSql=boundSql.getSql();\n  if (rowBounds instanceof Pagination) {\n    Pagination page=(Pagination)rowBounds;\n    if (page.isSearchCount()) {\n      SqlInfo sqlInfo=SqlUtils.getOptimizeCountSql(page.isOptimizeCountSql(),sqlParser,originalSql);\n      super.queryTotal(overflowCurrent,sqlInfo.getSql(),mappedStatement,boundSql,page,connection);\n      if (page.getTotal() <= 0) {\n        return invocation.proceed();\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 155,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1391,
        "startLineNumber" : 64,
        "startColumnNumber" : 68,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Object target=invocation.getTarget();\n  if (target instanceof StatementHandler) {\n    return super.intercept(invocation);\n  }\n else {\n    RowBounds rowBounds=(RowBounds)invocation.getArgs()[2];\n    if (rowBounds == null || rowBounds == RowBounds.DEFAULT) {\n      return invocation.proceed();\n    }\n    MappedStatement mappedStatement=(MappedStatement)invocation.getArgs()[0];\n    Executor executor=(Executor)invocation.getTarget();\n    Connection connection=executor.getTransaction().getConnection();\n    Object parameterObject=invocation.getArgs()[1];\n    BoundSql boundSql=mappedStatement.getBoundSql(parameterObject);\n    String originalSql=boundSql.getSql();\n    if (rowBounds instanceof Pagination) {\n      Pagination page=(Pagination)rowBounds;\n      if (page.isSearchCount()) {\n        SqlInfo sqlInfo=SqlUtils.getOptimizeCountSql(page.isOptimizeCountSql(),sqlParser,originalSql);\n        super.queryTotal(overflowCurrent,sqlInfo.getSql(),mappedStatement,boundSql,page,connection);\n        if (page.getTotal() <= 0) {\n          return invocation.proceed();\n        }\n      }\n    }\n  }\n  return invocation.proceed();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 168,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1610,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Physical Pagination Interceptor for all the queries with parameter {@link org.apache.ibatis.session.RowBounds}\n */\n@Override public Object intercept(Invocation invocation) throws Throwable {\n  Object target=invocation.getTarget();\n  if (target instanceof StatementHandler) {\n    return super.intercept(invocation);\n  }\n else {\n    RowBounds rowBounds=(RowBounds)invocation.getArgs()[2];\n    if (rowBounds == null || rowBounds == RowBounds.DEFAULT) {\n      return invocation.proceed();\n    }\n    MappedStatement mappedStatement=(MappedStatement)invocation.getArgs()[0];\n    Executor executor=(Executor)invocation.getTarget();\n    Connection connection=executor.getTransaction().getConnection();\n    Object parameterObject=invocation.getArgs()[1];\n    BoundSql boundSql=mappedStatement.getBoundSql(parameterObject);\n    String originalSql=boundSql.getSql();\n    if (rowBounds instanceof Pagination) {\n      Pagination page=(Pagination)rowBounds;\n      if (page.isSearchCount()) {\n        SqlInfo sqlInfo=SqlUtils.getOptimizeCountSql(page.isOptimizeCountSql(),sqlParser,originalSql);\n        super.queryTotal(overflowCurrent,sqlInfo.getSql(),mappedStatement,boundSql,page,connection);\n        if (page.getTotal() <= 0) {\n          return invocation.proceed();\n        }\n      }\n    }\n  }\n  return invocation.proceed();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 182,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 84,
        "startColumnNumber" : 20,
        "endLineNumber" : 84,
        "endColumnNumber" : 117
      },
      "nodeContext" : "super.queryTotal(overflowCurrent,sqlInfo.getSql(),mappedStatement,boundSql,page,connection);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.sql.Connection"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 84,
    "startColumnNumber" : 105,
    "endLineNumber" : 84,
    "endColumnNumber" : 115
  } ],
  "layoutRelationDataList" : [ ]
}