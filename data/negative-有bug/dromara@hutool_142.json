{
  "id" : 142,
  "expression" : "\"Hello\".getBytes()",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-socket/src/test/java/cn/hutool/socket/aio/AioClientTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Hello\".getBytes()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 23,
      "startColumnNumber" : 31,
      "endLineNumber" : 23,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 23,
        "startColumnNumber" : 15,
        "endLineNumber" : 23,
        "endColumnNumber" : 50
      },
      "nodeContext" : "ByteBuffer.wrap(\"Hello\".getBytes())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 23,
        "startColumnNumber" : 2,
        "endLineNumber" : 23,
        "endColumnNumber" : 51
      },
      "nodeContext" : "client.write(ByteBuffer.wrap(\"Hello\".getBytes()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 23,
        "startColumnNumber" : 2,
        "endLineNumber" : 23,
        "endColumnNumber" : 52
      },
      "nodeContext" : "client.write(ByteBuffer.wrap(\"Hello\".getBytes()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 427,
        "startLineNumber" : 10,
        "startColumnNumber" : 40,
        "endLineNumber" : 27,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  AioClient client=new AioClient(new InetSocketAddress(\"localhost\",8899),new SimpleIoAction(){\n    @Override public void doAction(    AioSession session,    ByteBuffer data){\n      if (data.hasRemaining()) {\n        Console.log(StrUtil.utf8Str(data));\n        session.read();\n      }\n      Console.log(\"OK\");\n    }\n  }\n);\n  client.write(ByteBuffer.wrap(\"Hello\".getBytes()));\n  client.read();\n  client.close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 466,
        "startLineNumber" : 10,
        "startColumnNumber" : 1,
        "endLineNumber" : 27,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public static void main(String[] args){\n  AioClient client=new AioClient(new InetSocketAddress(\"localhost\",8899),new SimpleIoAction(){\n    @Override public void doAction(    AioSession session,    ByteBuffer data){\n      if (data.hasRemaining()) {\n        Console.log(StrUtil.utf8Str(data));\n        session.read();\n      }\n      Console.log(\"OK\");\n    }\n  }\n);\n  client.write(ByteBuffer.wrap(\"Hello\".getBytes()));\n  client.read();\n  client.close();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 84,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 23,
        "startColumnNumber" : 2,
        "endLineNumber" : 23,
        "endColumnNumber" : 52
      },
      "nodeContext" : "client.write(ByteBuffer.wrap(\"Hello\".getBytes()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "byte[]"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 23,
    "startColumnNumber" : 31,
    "endLineNumber" : 23,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ ]
}