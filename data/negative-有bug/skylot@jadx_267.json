{
  "id" : 267,
  "expression" : "Integer.MAX_VALUE",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-core/src/main/java/jadx/core/dex/instructions/args/SSAVar.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Integer.MAX_VALUE",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 55,
      "startColumnNumber" : 14,
      "endLineNumber" : 55,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 55,
        "startColumnNumber" : 6,
        "endLineNumber" : 55,
        "endColumnNumber" : 31
      },
      "nodeContext" : "start=Integer.MAX_VALUE",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 55,
        "startColumnNumber" : 2,
        "endLineNumber" : 55,
        "endColumnNumber" : 32
      },
      "nodeContext" : "int start=Integer.MAX_VALUE;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 626,
        "startLineNumber" : 54,
        "startColumnNumber" : 35,
        "endLineNumber" : 78,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int start=Integer.MAX_VALUE;\n  int end=Integer.MIN_VALUE;\n  if (assign.getParentInsn() != null) {\n    int insnAddr=assign.getParentInsn().getOffset();\n    if (insnAddr >= 0) {\n      start=Math.min(insnAddr,start);\n      end=Math.max(insnAddr,end);\n    }\n  }\n  for (  RegisterArg arg : useList) {\n    if (arg.getParentInsn() != null) {\n      int insnAddr=arg.getParentInsn().getOffset();\n      if (insnAddr >= 0) {\n        start=Math.min(insnAddr,start);\n        end=Math.max(insnAddr,end);\n      }\n    }\n  }\n  if (start != Integer.MAX_VALUE && end != Integer.MIN_VALUE) {\n    startUseAddr=start;\n    endUseAddr=end;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 117,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 660,
        "startLineNumber" : 54,
        "startColumnNumber" : 1,
        "endLineNumber" : 78,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private void calcUsageAddrRange(){\n  int start=Integer.MAX_VALUE;\n  int end=Integer.MIN_VALUE;\n  if (assign.getParentInsn() != null) {\n    int insnAddr=assign.getParentInsn().getOffset();\n    if (insnAddr >= 0) {\n      start=Math.min(insnAddr,start);\n      end=Math.max(insnAddr,end);\n    }\n  }\n  for (  RegisterArg arg : useList) {\n    if (arg.getParentInsn() != null) {\n      int insnAddr=arg.getParentInsn().getOffset();\n      if (insnAddr >= 0) {\n        start=Math.min(insnAddr,start);\n        end=Math.max(insnAddr,end);\n      }\n    }\n  }\n  if (start != Integer.MAX_VALUE && end != Integer.MIN_VALUE) {\n    startUseAddr=start;\n    endUseAddr=end;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 121,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 55,
        "startColumnNumber" : 2,
        "endLineNumber" : 55,
        "endColumnNumber" : 32
      },
      "nodeContext" : "int start=Integer.MAX_VALUE;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "int"
  }, {
    "nodeContext" : "Integer.MAX_VALUE",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 74,
      "startColumnNumber" : 15,
      "endLineNumber" : 74,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 74,
        "startColumnNumber" : 6,
        "endLineNumber" : 74,
        "endColumnNumber" : 32
      },
      "nodeContext" : "start != Integer.MAX_VALUE",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 74,
        "startColumnNumber" : 6,
        "endLineNumber" : 74,
        "endColumnNumber" : 60
      },
      "nodeContext" : "start != Integer.MAX_VALUE && end != Integer.MIN_VALUE",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 74,
        "startColumnNumber" : 2,
        "endLineNumber" : 77,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (start != Integer.MAX_VALUE && end != Integer.MIN_VALUE) {\n  startUseAddr=start;\n  endUseAddr=end;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 626,
        "startLineNumber" : 54,
        "startColumnNumber" : 35,
        "endLineNumber" : 78,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int start=Integer.MAX_VALUE;\n  int end=Integer.MIN_VALUE;\n  if (assign.getParentInsn() != null) {\n    int insnAddr=assign.getParentInsn().getOffset();\n    if (insnAddr >= 0) {\n      start=Math.min(insnAddr,start);\n      end=Math.max(insnAddr,end);\n    }\n  }\n  for (  RegisterArg arg : useList) {\n    if (arg.getParentInsn() != null) {\n      int insnAddr=arg.getParentInsn().getOffset();\n      if (insnAddr >= 0) {\n        start=Math.min(insnAddr,start);\n        end=Math.max(insnAddr,end);\n      }\n    }\n  }\n  if (start != Integer.MAX_VALUE && end != Integer.MIN_VALUE) {\n    startUseAddr=start;\n    endUseAddr=end;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 117,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 660,
        "startLineNumber" : 54,
        "startColumnNumber" : 1,
        "endLineNumber" : 78,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private void calcUsageAddrRange(){\n  int start=Integer.MAX_VALUE;\n  int end=Integer.MIN_VALUE;\n  if (assign.getParentInsn() != null) {\n    int insnAddr=assign.getParentInsn().getOffset();\n    if (insnAddr >= 0) {\n      start=Math.min(insnAddr,start);\n      end=Math.max(insnAddr,end);\n    }\n  }\n  for (  RegisterArg arg : useList) {\n    if (arg.getParentInsn() != null) {\n      int insnAddr=arg.getParentInsn().getOffset();\n      if (insnAddr >= 0) {\n        start=Math.min(insnAddr,start);\n        end=Math.max(insnAddr,end);\n      }\n    }\n  }\n  if (start != Integer.MAX_VALUE && end != Integer.MIN_VALUE) {\n    startUseAddr=start;\n    endUseAddr=end;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 121,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 74,
        "startColumnNumber" : 6,
        "endLineNumber" : 74,
        "endColumnNumber" : 60
      },
      "nodeContext" : "start != Integer.MAX_VALUE && end != Integer.MIN_VALUE",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 55,
    "startColumnNumber" : 14,
    "endLineNumber" : 55,
    "endColumnNumber" : 31
  }, {
    "charLength" : 17,
    "startLineNumber" : 74,
    "startColumnNumber" : 15,
    "endLineNumber" : 74,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}