{
  "id" : 225,
  "expression" : "config.getHiveStorageFormat().getOutputFormat()",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-hive/src/test/java/com/facebook/presto/hive/TestDynamicPruning.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "config.getHiveStorageFormat().getOutputFormat()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 47,
      "startLineNumber" : 138,
      "startColumnNumber" : 135,
      "endLineNumber" : 138,
      "endColumnNumber" : 182
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 138,
        "startColumnNumber" : 24,
        "endLineNumber" : 138,
        "endColumnNumber" : 183
      },
      "nodeContext" : "StorageFormat.create(config.getHiveStorageFormat().getSerDe(),config.getHiveStorageFormat().getInputFormat(),config.getHiveStorageFormat().getOutputFormat())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 502,
        "startLineNumber" : 137,
        "startColumnNumber" : 16,
        "endLineNumber" : 143,
        "endColumnNumber" : 42
      },
      "nodeContext" : "new Storage(StorageFormat.create(config.getHiveStorageFormat().getSerDe(),config.getHiveStorageFormat().getInputFormat(),config.getHiveStorageFormat().getOutputFormat()),\"location\",Optional.of(new HiveBucketProperty(ImmutableList.of(\"l_orderkey\"),10,ImmutableList.of(),HIVE_COMPATIBLE,Optional.empty())),false,ImmutableMap.of(),ImmutableMap.of())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 47,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 1379,
        "startLineNumber" : 128,
        "startColumnNumber" : 26,
        "endLineNumber" : 158,
        "endColumnNumber" : 39
      },
      "nodeContext" : "new HiveSplit(SCHEMA_NAME,TABLE_NAME,\"\",\"file:///\" + outputFile.getAbsolutePath(),0,outputFile.length(),outputFile.length(),Instant.now().toEpochMilli(),new Storage(StorageFormat.create(config.getHiveStorageFormat().getSerDe(),config.getHiveStorageFormat().getInputFormat(),config.getHiveStorageFormat().getOutputFormat()),\"location\",Optional.of(new HiveBucketProperty(ImmutableList.of(\"l_orderkey\"),10,ImmutableList.of(),HIVE_COMPATIBLE,Optional.empty())),false,ImmutableMap.of(),ImmutableMap.of()),partitionKeys,ImmutableList.of(),OptionalInt.of(1),OptionalInt.of(1),NO_PREFERENCE,getColumnHandles().size(),TableToPartitionMapping.mapColumnsByIndex(partitionSchemaDifference),Optional.empty(),false,Optional.empty(),NO_CACHE_REQUIREMENT,Optional.empty(),ImmutableMap.of(),ImmutableSet.of(),SplitWeight.standard())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 111,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 1387,
        "startLineNumber" : 128,
        "startColumnNumber" : 18,
        "endLineNumber" : 158,
        "endColumnNumber" : 39
      },
      "nodeContext" : "split=new HiveSplit(SCHEMA_NAME,TABLE_NAME,\"\",\"file:///\" + outputFile.getAbsolutePath(),0,outputFile.length(),outputFile.length(),Instant.now().toEpochMilli(),new Storage(StorageFormat.create(config.getHiveStorageFormat().getSerDe(),config.getHiveStorageFormat().getInputFormat(),config.getHiveStorageFormat().getOutputFormat()),\"location\",Optional.of(new HiveBucketProperty(ImmutableList.of(\"l_orderkey\"),10,ImmutableList.of(),HIVE_COMPATIBLE,Optional.empty())),false,ImmutableMap.of(),ImmutableMap.of()),partitionKeys,ImmutableList.of(),OptionalInt.of(1),OptionalInt.of(1),NO_PREFERENCE,getColumnHandles().size(),TableToPartitionMapping.mapColumnsByIndex(partitionSchemaDifference),Optional.empty(),false,Optional.empty(),NO_CACHE_REQUIREMENT,Optional.empty(),ImmutableMap.of(),ImmutableSet.of(),SplitWeight.standard())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 113,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1398,
        "startLineNumber" : 128,
        "startColumnNumber" : 8,
        "endLineNumber" : 158,
        "endColumnNumber" : 40
      },
      "nodeContext" : "HiveSplit split=new HiveSplit(SCHEMA_NAME,TABLE_NAME,\"\",\"file:///\" + outputFile.getAbsolutePath(),0,outputFile.length(),outputFile.length(),Instant.now().toEpochMilli(),new Storage(StorageFormat.create(config.getHiveStorageFormat().getSerDe(),config.getHiveStorageFormat().getInputFormat(),config.getHiveStorageFormat().getOutputFormat()),\"location\",Optional.of(new HiveBucketProperty(ImmutableList.of(\"l_orderkey\"),10,ImmutableList.of(),HIVE_COMPATIBLE,Optional.empty())),false,ImmutableMap.of(),ImmutableMap.of()),partitionKeys,ImmutableList.of(),OptionalInt.of(1),OptionalInt.of(1),NO_PREFERENCE,getColumnHandles().size(),TableToPartitionMapping.mapColumnsByIndex(partitionSchemaDifference),Optional.empty(),false,Optional.empty(),NO_CACHE_REQUIREMENT,Optional.empty(),ImmutableMap.of(),ImmutableSet.of(),SplitWeight.standard());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 116,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3381,
        "startLineNumber" : 125,
        "startColumnNumber" : 4,
        "endLineNumber" : 184,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ImmutableList<HivePartitionKey> partitionKeys=ImmutableList.of(new HivePartitionKey(PARTITION_COLUMN.getName(),Optional.of(\"2020-09-09\")));\n  Map<Integer,Column> partitionSchemaDifference=ImmutableMap.of(1,new Column(\"ds\",HIVE_STRING,Optional.empty(),Optional.empty()));\n  HiveSplit split=new HiveSplit(SCHEMA_NAME,TABLE_NAME,\"\",\"file:///\" + outputFile.getAbsolutePath(),0,outputFile.length(),outputFile.length(),Instant.now().toEpochMilli(),new Storage(StorageFormat.create(config.getHiveStorageFormat().getSerDe(),config.getHiveStorageFormat().getInputFormat(),config.getHiveStorageFormat().getOutputFormat()),\"location\",Optional.of(new HiveBucketProperty(ImmutableList.of(\"l_orderkey\"),10,ImmutableList.of(),HIVE_COMPATIBLE,Optional.empty())),false,ImmutableMap.of(),ImmutableMap.of()),partitionKeys,ImmutableList.of(),OptionalInt.of(1),OptionalInt.of(1),NO_PREFERENCE,getColumnHandles().size(),TableToPartitionMapping.mapColumnsByIndex(partitionSchemaDifference),Optional.empty(),false,Optional.empty(),NO_CACHE_REQUIREMENT,Optional.empty(),ImmutableMap.of(),ImmutableSet.of(),SplitWeight.standard());\n  TableHandle tableHandle=new TableHandle(new ConnectorId(HIVE_CATALOG),new HiveTableHandle(SCHEMA_NAME,TABLE_NAME),transaction,Optional.of(new HiveTableLayoutHandle(new SchemaTableName(SCHEMA_NAME,TABLE_NAME),\"path\",ImmutableList.of(PARTITION_HIVE_COLUMN_HANDLE),getColumnHandles().stream().map(column -> new Column(column.getName(),column.getHiveType(),Optional.empty(),Optional.empty())).collect(toImmutableList()),ImmutableMap.of(),TupleDomain.all(),TRUE_CONSTANT,ImmutableMap.of(),TupleDomain.all(),Optional.empty(),Optional.empty(),false,\"layout\",Optional.empty(),false)));\n  HivePageSourceProvider provider=new HivePageSourceProvider(config,createTestHdfsEnvironment(config,metastoreClientConfig),getDefaultHiveRecordCursorProvider(config,metastoreClientConfig),getDefaultHiveBatchPageSourceFactories(config,metastoreClientConfig),getDefaultHiveSelectivePageSourceFactories(config,metastoreClientConfig),FUNCTION_AND_TYPE_MANAGER,ROW_EXPRESSION_SERVICE);\n  return provider.createPageSource(transaction,getSession(config),split,tableHandle.getLayout().get(),ImmutableList.copyOf(getColumnHandles()),splitContext);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 297,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3593,
        "startLineNumber" : 124,
        "startColumnNumber" : 4,
        "endLineNumber" : 184,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static ConnectorPageSource createTestingPageSource(HiveTransactionHandle transaction,HiveClientConfig config,SplitContext splitContext,MetastoreClientConfig metastoreClientConfig,File outputFile){\n  ImmutableList<HivePartitionKey> partitionKeys=ImmutableList.of(new HivePartitionKey(PARTITION_COLUMN.getName(),Optional.of(\"2020-09-09\")));\n  Map<Integer,Column> partitionSchemaDifference=ImmutableMap.of(1,new Column(\"ds\",HIVE_STRING,Optional.empty(),Optional.empty()));\n  HiveSplit split=new HiveSplit(SCHEMA_NAME,TABLE_NAME,\"\",\"file:///\" + outputFile.getAbsolutePath(),0,outputFile.length(),outputFile.length(),Instant.now().toEpochMilli(),new Storage(StorageFormat.create(config.getHiveStorageFormat().getSerDe(),config.getHiveStorageFormat().getInputFormat(),config.getHiveStorageFormat().getOutputFormat()),\"location\",Optional.of(new HiveBucketProperty(ImmutableList.of(\"l_orderkey\"),10,ImmutableList.of(),HIVE_COMPATIBLE,Optional.empty())),false,ImmutableMap.of(),ImmutableMap.of()),partitionKeys,ImmutableList.of(),OptionalInt.of(1),OptionalInt.of(1),NO_PREFERENCE,getColumnHandles().size(),TableToPartitionMapping.mapColumnsByIndex(partitionSchemaDifference),Optional.empty(),false,Optional.empty(),NO_CACHE_REQUIREMENT,Optional.empty(),ImmutableMap.of(),ImmutableSet.of(),SplitWeight.standard());\n  TableHandle tableHandle=new TableHandle(new ConnectorId(HIVE_CATALOG),new HiveTableHandle(SCHEMA_NAME,TABLE_NAME),transaction,Optional.of(new HiveTableLayoutHandle(new SchemaTableName(SCHEMA_NAME,TABLE_NAME),\"path\",ImmutableList.of(PARTITION_HIVE_COLUMN_HANDLE),getColumnHandles().stream().map(column -> new Column(column.getName(),column.getHiveType(),Optional.empty(),Optional.empty())).collect(toImmutableList()),ImmutableMap.of(),TupleDomain.all(),TRUE_CONSTANT,ImmutableMap.of(),TupleDomain.all(),Optional.empty(),Optional.empty(),false,\"layout\",Optional.empty(),false)));\n  HivePageSourceProvider provider=new HivePageSourceProvider(config,createTestHdfsEnvironment(config,metastoreClientConfig),getDefaultHiveRecordCursorProvider(config,metastoreClientConfig),getDefaultHiveBatchPageSourceFactories(config,metastoreClientConfig),getDefaultHiveSelectivePageSourceFactories(config,metastoreClientConfig),FUNCTION_AND_TYPE_MANAGER,ROW_EXPRESSION_SERVICE);\n  return provider.createPageSource(transaction,getSession(config),split,tableHandle.getLayout().get(),ImmutableList.copyOf(getColumnHandles()),splitContext);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 323,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 138,
        "startColumnNumber" : 24,
        "endLineNumber" : 138,
        "endColumnNumber" : 183
      },
      "nodeContext" : "StorageFormat.create(config.getHiveStorageFormat().getSerDe(),config.getHiveStorageFormat().getInputFormat(),config.getHiveStorageFormat().getOutputFormat())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 47,
    "startLineNumber" : 138,
    "startColumnNumber" : 135,
    "endLineNumber" : 138,
    "endColumnNumber" : 182
  } ],
  "layoutRelationDataList" : [ ]
}