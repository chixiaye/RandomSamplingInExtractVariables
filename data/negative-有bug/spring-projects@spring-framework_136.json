{
  "id" : 136,
  "expression" : "!this.getNonOptionArgs().isEmpty()",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-core/src/main/java/org/springframework/core/env/CommandLinePropertySource.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "!this.getNonOptionArgs().isEmpty()",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 34,
      "startLineNumber" : 255,
      "startColumnNumber" : 10,
      "endLineNumber" : 255,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 6,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 255,
        "startColumnNumber" : 3,
        "endLineNumber" : 255,
        "endColumnNumber" : 45
      },
      "nodeContext" : "return !this.getNonOptionArgs().isEmpty();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 254,
        "startColumnNumber" : 51,
        "endLineNumber" : 256,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  return !this.getNonOptionArgs().isEmpty();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 254,
        "startColumnNumber" : 2,
        "endLineNumber" : 256,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (this.nonOptionArgsPropertyName.equals(name)) {\n  return !this.getNonOptionArgs().isEmpty();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 143,
        "startLineNumber" : 253,
        "startColumnNumber" : 52,
        "endLineNumber" : 258,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (this.nonOptionArgsPropertyName.equals(name)) {\n    return !this.getNonOptionArgs().isEmpty();\n  }\n  return this.containsOption(name);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 624,
        "startLineNumber" : 245,
        "startColumnNumber" : 1,
        "endLineNumber" : 258,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * This implementation first checks to see if the name specified is the special {@linkplain #setNonOptionArgsPropertyName(String) \"non-option arguments\" property}, and if so delegates to the abstract  {@link #getNonOptionArgs()} methodchecking to see whether it returns an empty collection. Otherwise delegates to and returns the value of the abstract  {@link #containsOption(String)} method.\n */\n@Override public final boolean containsProperty(String name){\n  if (this.nonOptionArgsPropertyName.equals(name)) {\n    return !this.getNonOptionArgs().isEmpty();\n  }\n  return this.containsOption(name);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 33,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 255,
        "startColumnNumber" : 3,
        "endLineNumber" : 255,
        "endColumnNumber" : 45
      },
      "nodeContext" : "return !this.getNonOptionArgs().isEmpty();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 34,
    "startLineNumber" : 255,
    "startColumnNumber" : 10,
    "endLineNumber" : 255,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ ]
}