{
  "id" : 383,
  "expression" : "\"Not enough data for FileRecord records\"",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Features/PDB/src/main/java/ghidra/app/util/bin/format/pdb2/pdbreader/AbstractC13Lines.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Not enough data for FileRecord records\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 40,
      "startLineNumber" : 140,
      "startColumnNumber" : 27,
      "endLineNumber" : 140,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 140,
        "startColumnNumber" : 10,
        "endLineNumber" : 140,
        "endColumnNumber" : 68
      },
      "nodeContext" : "new PdbException(\"Not enough data for FileRecord records\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 140,
        "startColumnNumber" : 4,
        "endLineNumber" : 140,
        "endColumnNumber" : 69
      },
      "nodeContext" : "throw new PdbException(\"Not enough data for FileRecord records\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 139,
        "startColumnNumber" : 45,
        "endLineNumber" : 141,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  throw new PdbException(\"Not enough data for FileRecord records\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 139,
        "startColumnNumber" : 3,
        "endLineNumber" : 141,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (reader.numRemaining() < sizeRequired) {\n  throw new PdbException(\"Not enough data for FileRecord records\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1148,
        "startLineNumber" : 120,
        "startColumnNumber" : 24,
        "endLineNumber" : 151,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (reader.numRemaining() < 12) {\n    throw new PdbException(\"Not enough data for FileRecord header\");\n  }\n  fileId=reader.parseUnsignedIntVal();\n  nLines=reader.parseUnsignedIntVal();\n  lenFileBlock=reader.parseUnsignedIntVal();\n  long lenMinusHeader=lenFileBlock - 12;\n  Long x=nLines;\n  int nLinesI=x.intValue();\n  int sizeLines=nLinesI * 8;\n  int sizeColumns=nLinesI * (hasColumn ? 4 : 0);\n  int sizeRequired=sizeLines + sizeColumns;\n  if (lenMinusHeader != sizeRequired) {\n    throw new PdbException(\"Corrupt FileRecord\");\n  }\n  if (reader.numRemaining() < sizeRequired) {\n    throw new PdbException(\"Not enough data for FileRecord records\");\n  }\n  PdbByteReader lineReader=reader.getSubPdbByteReader(sizeLines);\n  PdbByteReader columnReader=(hasColumn ? reader.getSubPdbByteReader(sizeColumns) : null);\n  for (int i=0; i < nLines; i++) {\n    LineRecord lineRecord=LineRecord.parse(lineReader,columnReader);\n    lineRecords.add(lineRecord);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 147,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1254,
        "startLineNumber" : 119,
        "startColumnNumber" : 2,
        "endLineNumber" : 151,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private FileRecord(PdbByteReader reader,boolean hasColumn,TaskMonitor monitor) throws PdbException {\n  if (reader.numRemaining() < 12) {\n    throw new PdbException(\"Not enough data for FileRecord header\");\n  }\n  fileId=reader.parseUnsignedIntVal();\n  nLines=reader.parseUnsignedIntVal();\n  lenFileBlock=reader.parseUnsignedIntVal();\n  long lenMinusHeader=lenFileBlock - 12;\n  Long x=nLines;\n  int nLinesI=x.intValue();\n  int sizeLines=nLinesI * 8;\n  int sizeColumns=nLinesI * (hasColumn ? 4 : 0);\n  int sizeRequired=sizeLines + sizeColumns;\n  if (lenMinusHeader != sizeRequired) {\n    throw new PdbException(\"Corrupt FileRecord\");\n  }\n  if (reader.numRemaining() < sizeRequired) {\n    throw new PdbException(\"Not enough data for FileRecord records\");\n  }\n  PdbByteReader lineReader=reader.getSubPdbByteReader(sizeLines);\n  PdbByteReader columnReader=(hasColumn ? reader.getSubPdbByteReader(sizeColumns) : null);\n  for (int i=0; i < nLines; i++) {\n    LineRecord lineRecord=LineRecord.parse(lineReader,columnReader);\n    lineRecords.add(lineRecord);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 163,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 140,
        "startColumnNumber" : 4,
        "endLineNumber" : 140,
        "endColumnNumber" : 69
      },
      "nodeContext" : "throw new PdbException(\"Not enough data for FileRecord records\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 5,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 40,
    "startLineNumber" : 140,
    "startColumnNumber" : 27,
    "endLineNumber" : 140,
    "endColumnNumber" : 67
  } ],
  "layoutRelationDataList" : [ ]
}