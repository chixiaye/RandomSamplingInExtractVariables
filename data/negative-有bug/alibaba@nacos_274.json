{
  "id" : 274,
  "expression" : "field",
  "projectName" : "alibaba@nacos",
  "commitID" : "4e7346db1d6657ffe07c96bebd2d348229c2812f",
  "filePath" : "/common/src/test/java/com/alibaba/nacos/common/utils/ReflectUtilsTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "field",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 59,
      "startColumnNumber" : 12,
      "endLineNumber" : 59,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 59,
        "startColumnNumber" : 12,
        "endLineNumber" : 59,
        "endColumnNumber" : 37
      },
      "nodeContext" : "field.setAccessible(true)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 59,
        "startColumnNumber" : 12,
        "endLineNumber" : 59,
        "endColumnNumber" : 38
      },
      "nodeContext" : "field.setAccessible(true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 269,
        "startLineNumber" : 57,
        "startColumnNumber" : 12,
        "endLineNumber" : 62,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Field field=listStr.getClass().getDeclaredField(\"elementData\");\n  field.setAccessible(true);\n  Object elementData=ReflectUtils.getField(field,listStr);\n  Assert.assertTrue(elementData instanceof Object[]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 351,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  Field field=listStr.getClass().getDeclaredField(\"elementData\");\n  field.setAccessible(true);\n  Object elementData=ReflectUtils.getField(field,listStr);\n  Assert.assertTrue(elementData instanceof Object[]);\n}\n catch (NoSuchFieldException e) {\n  e.printStackTrace();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 48,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 371,
        "startLineNumber" : 56,
        "startColumnNumber" : 27,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    Field field=listStr.getClass().getDeclaredField(\"elementData\");\n    field.setAccessible(true);\n    Object elementData=ReflectUtils.getField(field,listStr);\n    Assert.assertTrue(elementData instanceof Object[]);\n  }\n catch (  NoSuchFieldException e) {\n    e.printStackTrace();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 49,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 405,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void getField(){\n  try {\n    Field field=listStr.getClass().getDeclaredField(\"elementData\");\n    field.setAccessible(true);\n    Object elementData=ReflectUtils.getField(field,listStr);\n    Assert.assertTrue(elementData instanceof Object[]);\n  }\n catch (  NoSuchFieldException e) {\n    e.printStackTrace();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 55,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 59,
        "startColumnNumber" : 12,
        "endLineNumber" : 59,
        "endColumnNumber" : 38
      },
      "nodeContext" : "field.setAccessible(true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.reflect.Field"
  }, {
    "nodeContext" : "field",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 60,
      "startColumnNumber" : 55,
      "endLineNumber" : 60,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 60,
        "startColumnNumber" : 33,
        "endLineNumber" : 60,
        "endColumnNumber" : 70
      },
      "nodeContext" : "ReflectUtils.getField(field,listStr)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 60,
        "startColumnNumber" : 19,
        "endLineNumber" : 60,
        "endColumnNumber" : 70
      },
      "nodeContext" : "elementData=ReflectUtils.getField(field,listStr)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 60,
        "endColumnNumber" : 71
      },
      "nodeContext" : "Object elementData=ReflectUtils.getField(field,listStr);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 269,
        "startLineNumber" : 57,
        "startColumnNumber" : 12,
        "endLineNumber" : 62,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Field field=listStr.getClass().getDeclaredField(\"elementData\");\n  field.setAccessible(true);\n  Object elementData=ReflectUtils.getField(field,listStr);\n  Assert.assertTrue(elementData instanceof Object[]);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 351,
        "startLineNumber" : 57,
        "startColumnNumber" : 8,
        "endLineNumber" : 64,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  Field field=listStr.getClass().getDeclaredField(\"elementData\");\n  field.setAccessible(true);\n  Object elementData=ReflectUtils.getField(field,listStr);\n  Assert.assertTrue(elementData instanceof Object[]);\n}\n catch (NoSuchFieldException e) {\n  e.printStackTrace();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 48,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 371,
        "startLineNumber" : 56,
        "startColumnNumber" : 27,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    Field field=listStr.getClass().getDeclaredField(\"elementData\");\n    field.setAccessible(true);\n    Object elementData=ReflectUtils.getField(field,listStr);\n    Assert.assertTrue(elementData instanceof Object[]);\n  }\n catch (  NoSuchFieldException e) {\n    e.printStackTrace();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 49,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 405,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void getField(){\n  try {\n    Field field=listStr.getClass().getDeclaredField(\"elementData\");\n    field.setAccessible(true);\n    Object elementData=ReflectUtils.getField(field,listStr);\n    Assert.assertTrue(elementData instanceof Object[]);\n  }\n catch (  NoSuchFieldException e) {\n    e.printStackTrace();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 55,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 60,
        "startColumnNumber" : 12,
        "endLineNumber" : 60,
        "endColumnNumber" : 71
      },
      "nodeContext" : "Object elementData=ReflectUtils.getField(field,listStr);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.reflect.Field"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 59,
    "startColumnNumber" : 12,
    "endLineNumber" : 59,
    "endColumnNumber" : 17
  }, {
    "charLength" : 5,
    "startLineNumber" : 60,
    "startColumnNumber" : 55,
    "endLineNumber" : 60,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}