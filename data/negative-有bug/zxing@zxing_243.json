{
  "id" : 243,
  "expression" : "(column == 0)",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/datamatrix/decoder/BitMatrixParser.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(column == 0)",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 94,
      "startColumnNumber" : 30,
      "endLineNumber" : 94,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 94,
        "startColumnNumber" : 10,
        "endLineNumber" : 94,
        "endColumnNumber" : 59
      },
      "nodeContext" : "(row == numRows) && (column == 0) && !corner1Read",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1768,
        "startLineNumber" : 94,
        "startColumnNumber" : 6,
        "endLineNumber" : 136,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if ((row == numRows) && (column == 0) && !corner1Read) {\n  result[resultOffset++]=(byte)readCorner1(numRows,numColumns);\n  row-=2;\n  column+=2;\n  corner1Read=true;\n}\n else if ((row == numRows - 2) && (column == 0) && ((numColumns & 0x03) != 0)&& !corner2Read) {\n  result[resultOffset++]=(byte)readCorner2(numRows,numColumns);\n  row-=2;\n  column+=2;\n  corner2Read=true;\n}\n else if ((row == numRows + 4) && (column == 2) && ((numColumns & 0x07) == 0)&& !corner3Read) {\n  result[resultOffset++]=(byte)readCorner3(numRows,numColumns);\n  row-=2;\n  column+=2;\n  corner3Read=true;\n}\n else if ((row == numRows - 2) && (column == 0) && ((numColumns & 0x07) == 4)&& !corner4Read) {\n  result[resultOffset++]=(byte)readCorner4(numRows,numColumns);\n  row-=2;\n  column+=2;\n  corner4Read=true;\n}\n else {\n  do {\n    if ((row < numRows) && (column >= 0) && !readMappingMatrix.get(column,row)) {\n      result[resultOffset++]=(byte)readUtah(row,column,numRows,numColumns);\n    }\n    row-=2;\n    column+=2;\n  }\n while ((row >= 0) && (column < numColumns));\n  row+=1;\n  column+=3;\n  do {\n    if ((row >= 0) && (column < numColumns) && !readMappingMatrix.get(column,row)) {\n      result[resultOffset++]=(byte)readUtah(row,column,numRows,numColumns);\n    }\n    row+=2;\n    column-=2;\n  }\n while ((row < numRows) && (column >= 0));\n  row+=3;\n  column+=1;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 292,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.DoStatement,body]",
      "nodePosition" : {
        "charLength" : 1822,
        "startLineNumber" : 92,
        "startColumnNumber" : 7,
        "endLineNumber" : 137,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if ((row == numRows) && (column == 0) && !corner1Read) {\n    result[resultOffset++]=(byte)readCorner1(numRows,numColumns);\n    row-=2;\n    column+=2;\n    corner1Read=true;\n  }\n else   if ((row == numRows - 2) && (column == 0) && ((numColumns & 0x03) != 0)&& !corner2Read) {\n    result[resultOffset++]=(byte)readCorner2(numRows,numColumns);\n    row-=2;\n    column+=2;\n    corner2Read=true;\n  }\n else   if ((row == numRows + 4) && (column == 2) && ((numColumns & 0x07) == 0)&& !corner3Read) {\n    result[resultOffset++]=(byte)readCorner3(numRows,numColumns);\n    row-=2;\n    column+=2;\n    corner3Read=true;\n  }\n else   if ((row == numRows - 2) && (column == 0) && ((numColumns & 0x07) == 4)&& !corner4Read) {\n    result[resultOffset++]=(byte)readCorner4(numRows,numColumns);\n    row-=2;\n    column+=2;\n    corner4Read=true;\n  }\n else {\n    do {\n      if ((row < numRows) && (column >= 0) && !readMappingMatrix.get(column,row)) {\n        result[resultOffset++]=(byte)readUtah(row,column,numRows,numColumns);\n      }\n      row-=2;\n      column+=2;\n    }\n while ((row >= 0) && (column < numColumns));\n    row+=1;\n    column+=3;\n    do {\n      if ((row >= 0) && (column < numColumns) && !readMappingMatrix.get(column,row)) {\n        result[resultOffset++]=(byte)readUtah(row,column,numRows,numColumns);\n      }\n      row+=2;\n      column-=2;\n    }\n while ((row < numRows) && (column >= 0));\n    row+=3;\n    column+=1;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 293,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1875,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 137,
        "endColumnNumber" : 55
      },
      "nodeContext" : "do {\n  if ((row == numRows) && (column == 0) && !corner1Read) {\n    result[resultOffset++]=(byte)readCorner1(numRows,numColumns);\n    row-=2;\n    column+=2;\n    corner1Read=true;\n  }\n else   if ((row == numRows - 2) && (column == 0) && ((numColumns & 0x03) != 0)&& !corner2Read) {\n    result[resultOffset++]=(byte)readCorner2(numRows,numColumns);\n    row-=2;\n    column+=2;\n    corner2Read=true;\n  }\n else   if ((row == numRows + 4) && (column == 2) && ((numColumns & 0x07) == 0)&& !corner3Read) {\n    result[resultOffset++]=(byte)readCorner3(numRows,numColumns);\n    row-=2;\n    column+=2;\n    corner3Read=true;\n  }\n else   if ((row == numRows - 2) && (column == 0) && ((numColumns & 0x07) == 4)&& !corner4Read) {\n    result[resultOffset++]=(byte)readCorner4(numRows,numColumns);\n    row-=2;\n    column+=2;\n    corner4Read=true;\n  }\n else {\n    do {\n      if ((row < numRows) && (column >= 0) && !readMappingMatrix.get(column,row)) {\n        result[resultOffset++]=(byte)readUtah(row,column,numRows,numColumns);\n      }\n      row-=2;\n      column+=2;\n    }\n while ((row >= 0) && (column < numColumns));\n    row+=1;\n    column+=3;\n    do {\n      if ((row >= 0) && (column < numColumns) && !readMappingMatrix.get(column,row)) {\n        result[resultOffset++]=(byte)readUtah(row,column,numRows,numColumns);\n      }\n      row+=2;\n      column-=2;\n    }\n while ((row < numRows) && (column >= 0));\n    row+=3;\n    column+=1;\n  }\n}\n while ((row < numRows) || (column < numColumns));\n",
      "nodeType" : "DoStatement",
      "astNodeNumber" : 303,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2440,
        "startLineNumber" : 75,
        "startColumnNumber" : 48,
        "endLineNumber" : 143,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  byte[] result=new byte[version.getTotalCodewords()];\n  int resultOffset=0;\n  int row=4;\n  int column=0;\n  int numRows=mappingBitMatrix.getHeight();\n  int numColumns=mappingBitMatrix.getWidth();\n  boolean corner1Read=false;\n  boolean corner2Read=false;\n  boolean corner3Read=false;\n  boolean corner4Read=false;\n  do {\n    if ((row == numRows) && (column == 0) && !corner1Read) {\n      result[resultOffset++]=(byte)readCorner1(numRows,numColumns);\n      row-=2;\n      column+=2;\n      corner1Read=true;\n    }\n else     if ((row == numRows - 2) && (column == 0) && ((numColumns & 0x03) != 0)&& !corner2Read) {\n      result[resultOffset++]=(byte)readCorner2(numRows,numColumns);\n      row-=2;\n      column+=2;\n      corner2Read=true;\n    }\n else     if ((row == numRows + 4) && (column == 2) && ((numColumns & 0x07) == 0)&& !corner3Read) {\n      result[resultOffset++]=(byte)readCorner3(numRows,numColumns);\n      row-=2;\n      column+=2;\n      corner3Read=true;\n    }\n else     if ((row == numRows - 2) && (column == 0) && ((numColumns & 0x07) == 4)&& !corner4Read) {\n      result[resultOffset++]=(byte)readCorner4(numRows,numColumns);\n      row-=2;\n      column+=2;\n      corner4Read=true;\n    }\n else {\n      do {\n        if ((row < numRows) && (column >= 0) && !readMappingMatrix.get(column,row)) {\n          result[resultOffset++]=(byte)readUtah(row,column,numRows,numColumns);\n        }\n        row-=2;\n        column+=2;\n      }\n while ((row >= 0) && (column < numColumns));\n      row+=1;\n      column+=3;\n      do {\n        if ((row >= 0) && (column < numColumns) && !readMappingMatrix.get(column,row)) {\n          result[resultOffset++]=(byte)readUtah(row,column,numRows,numColumns);\n        }\n        row+=2;\n        column-=2;\n      }\n while ((row < numRows) && (column >= 0));\n      row+=3;\n      column+=1;\n    }\n  }\n while ((row < numRows) || (column < numColumns));\n  if (resultOffset != version.getTotalCodewords()) {\n    throw FormatException.getFormatInstance();\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 379,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2868,
        "startLineNumber" : 67,
        "startColumnNumber" : 2,
        "endLineNumber" : 143,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * <p>Reads the bits in the  {@link BitMatrix} representing the mapping matrix (No alignment patterns)in the correct order in order to reconstitute the codewords bytes contained within the Data Matrix Code.</p>\n * @return bytes encoded within the Data Matrix Code\n * @throws FormatException if the exact number of bytes expected is not read\n */\nbyte[] readCodewords() throws FormatException {\n  byte[] result=new byte[version.getTotalCodewords()];\n  int resultOffset=0;\n  int row=4;\n  int column=0;\n  int numRows=mappingBitMatrix.getHeight();\n  int numColumns=mappingBitMatrix.getWidth();\n  boolean corner1Read=false;\n  boolean corner2Read=false;\n  boolean corner3Read=false;\n  boolean corner4Read=false;\n  do {\n    if ((row == numRows) && (column == 0) && !corner1Read) {\n      result[resultOffset++]=(byte)readCorner1(numRows,numColumns);\n      row-=2;\n      column+=2;\n      corner1Read=true;\n    }\n else     if ((row == numRows - 2) && (column == 0) && ((numColumns & 0x03) != 0)&& !corner2Read) {\n      result[resultOffset++]=(byte)readCorner2(numRows,numColumns);\n      row-=2;\n      column+=2;\n      corner2Read=true;\n    }\n else     if ((row == numRows + 4) && (column == 2) && ((numColumns & 0x07) == 0)&& !corner3Read) {\n      result[resultOffset++]=(byte)readCorner3(numRows,numColumns);\n      row-=2;\n      column+=2;\n      corner3Read=true;\n    }\n else     if ((row == numRows - 2) && (column == 0) && ((numColumns & 0x07) == 4)&& !corner4Read) {\n      result[resultOffset++]=(byte)readCorner4(numRows,numColumns);\n      row-=2;\n      column+=2;\n      corner4Read=true;\n    }\n else {\n      do {\n        if ((row < numRows) && (column >= 0) && !readMappingMatrix.get(column,row)) {\n          result[resultOffset++]=(byte)readUtah(row,column,numRows,numColumns);\n        }\n        row-=2;\n        column+=2;\n      }\n while ((row >= 0) && (column < numColumns));\n      row+=1;\n      column+=3;\n      do {\n        if ((row >= 0) && (column < numColumns) && !readMappingMatrix.get(column,row)) {\n          result[resultOffset++]=(byte)readUtah(row,column,numRows,numColumns);\n        }\n        row+=2;\n        column-=2;\n      }\n while ((row < numRows) && (column >= 0));\n      row+=3;\n      column+=1;\n    }\n  }\n while ((row < numRows) || (column < numColumns));\n  if (resultOffset != version.getTotalCodewords()) {\n    throw FormatException.getFormatInstance();\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 387,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 94,
        "startColumnNumber" : 10,
        "endLineNumber" : 94,
        "endColumnNumber" : 59
      },
      "nodeContext" : "(row == numRows) && (column == 0) && !corner1Read",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "boolean"
  }, {
    "nodeContext" : "(column == 0)",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 99,
      "startColumnNumber" : 39,
      "endLineNumber" : 99,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 99,
        "startColumnNumber" : 17,
        "endLineNumber" : 99,
        "endColumnNumber" : 98
      },
      "nodeContext" : "(row == numRows - 2) && (column == 0) && ((numColumns & 0x03) != 0)&& !corner2Read",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1553,
        "startLineNumber" : 99,
        "startColumnNumber" : 13,
        "endLineNumber" : 136,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if ((row == numRows - 2) && (column == 0) && ((numColumns & 0x03) != 0)&& !corner2Read) {\n  result[resultOffset++]=(byte)readCorner2(numRows,numColumns);\n  row-=2;\n  column+=2;\n  corner2Read=true;\n}\n else if ((row == numRows + 4) && (column == 2) && ((numColumns & 0x07) == 0)&& !corner3Read) {\n  result[resultOffset++]=(byte)readCorner3(numRows,numColumns);\n  row-=2;\n  column+=2;\n  corner3Read=true;\n}\n else if ((row == numRows - 2) && (column == 0) && ((numColumns & 0x07) == 4)&& !corner4Read) {\n  result[resultOffset++]=(byte)readCorner4(numRows,numColumns);\n  row-=2;\n  column+=2;\n  corner4Read=true;\n}\n else {\n  do {\n    if ((row < numRows) && (column >= 0) && !readMappingMatrix.get(column,row)) {\n      result[resultOffset++]=(byte)readUtah(row,column,numRows,numColumns);\n    }\n    row-=2;\n    column+=2;\n  }\n while ((row >= 0) && (column < numColumns));\n  row+=1;\n  column+=3;\n  do {\n    if ((row >= 0) && (column < numColumns) && !readMappingMatrix.get(column,row)) {\n      result[resultOffset++]=(byte)readUtah(row,column,numRows,numColumns);\n    }\n    row+=2;\n    column-=2;\n  }\n while ((row < numRows) && (column >= 0));\n  row+=3;\n  column+=1;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 255,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1768,
        "startLineNumber" : 94,
        "startColumnNumber" : 6,
        "endLineNumber" : 136,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if ((row == numRows) && (column == 0) && !corner1Read) {\n  result[resultOffset++]=(byte)readCorner1(numRows,numColumns);\n  row-=2;\n  column+=2;\n  corner1Read=true;\n}\n else if ((row == numRows - 2) && (column == 0) && ((numColumns & 0x03) != 0)&& !corner2Read) {\n  result[resultOffset++]=(byte)readCorner2(numRows,numColumns);\n  row-=2;\n  column+=2;\n  corner2Read=true;\n}\n else if ((row == numRows + 4) && (column == 2) && ((numColumns & 0x07) == 0)&& !corner3Read) {\n  result[resultOffset++]=(byte)readCorner3(numRows,numColumns);\n  row-=2;\n  column+=2;\n  corner3Read=true;\n}\n else if ((row == numRows - 2) && (column == 0) && ((numColumns & 0x07) == 4)&& !corner4Read) {\n  result[resultOffset++]=(byte)readCorner4(numRows,numColumns);\n  row-=2;\n  column+=2;\n  corner4Read=true;\n}\n else {\n  do {\n    if ((row < numRows) && (column >= 0) && !readMappingMatrix.get(column,row)) {\n      result[resultOffset++]=(byte)readUtah(row,column,numRows,numColumns);\n    }\n    row-=2;\n    column+=2;\n  }\n while ((row >= 0) && (column < numColumns));\n  row+=1;\n  column+=3;\n  do {\n    if ((row >= 0) && (column < numColumns) && !readMappingMatrix.get(column,row)) {\n      result[resultOffset++]=(byte)readUtah(row,column,numRows,numColumns);\n    }\n    row+=2;\n    column-=2;\n  }\n while ((row < numRows) && (column >= 0));\n  row+=3;\n  column+=1;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 292,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.DoStatement,body]",
      "nodePosition" : {
        "charLength" : 1822,
        "startLineNumber" : 92,
        "startColumnNumber" : 7,
        "endLineNumber" : 137,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if ((row == numRows) && (column == 0) && !corner1Read) {\n    result[resultOffset++]=(byte)readCorner1(numRows,numColumns);\n    row-=2;\n    column+=2;\n    corner1Read=true;\n  }\n else   if ((row == numRows - 2) && (column == 0) && ((numColumns & 0x03) != 0)&& !corner2Read) {\n    result[resultOffset++]=(byte)readCorner2(numRows,numColumns);\n    row-=2;\n    column+=2;\n    corner2Read=true;\n  }\n else   if ((row == numRows + 4) && (column == 2) && ((numColumns & 0x07) == 0)&& !corner3Read) {\n    result[resultOffset++]=(byte)readCorner3(numRows,numColumns);\n    row-=2;\n    column+=2;\n    corner3Read=true;\n  }\n else   if ((row == numRows - 2) && (column == 0) && ((numColumns & 0x07) == 4)&& !corner4Read) {\n    result[resultOffset++]=(byte)readCorner4(numRows,numColumns);\n    row-=2;\n    column+=2;\n    corner4Read=true;\n  }\n else {\n    do {\n      if ((row < numRows) && (column >= 0) && !readMappingMatrix.get(column,row)) {\n        result[resultOffset++]=(byte)readUtah(row,column,numRows,numColumns);\n      }\n      row-=2;\n      column+=2;\n    }\n while ((row >= 0) && (column < numColumns));\n    row+=1;\n    column+=3;\n    do {\n      if ((row >= 0) && (column < numColumns) && !readMappingMatrix.get(column,row)) {\n        result[resultOffset++]=(byte)readUtah(row,column,numRows,numColumns);\n      }\n      row+=2;\n      column-=2;\n    }\n while ((row < numRows) && (column >= 0));\n    row+=3;\n    column+=1;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 293,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1875,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 137,
        "endColumnNumber" : 55
      },
      "nodeContext" : "do {\n  if ((row == numRows) && (column == 0) && !corner1Read) {\n    result[resultOffset++]=(byte)readCorner1(numRows,numColumns);\n    row-=2;\n    column+=2;\n    corner1Read=true;\n  }\n else   if ((row == numRows - 2) && (column == 0) && ((numColumns & 0x03) != 0)&& !corner2Read) {\n    result[resultOffset++]=(byte)readCorner2(numRows,numColumns);\n    row-=2;\n    column+=2;\n    corner2Read=true;\n  }\n else   if ((row == numRows + 4) && (column == 2) && ((numColumns & 0x07) == 0)&& !corner3Read) {\n    result[resultOffset++]=(byte)readCorner3(numRows,numColumns);\n    row-=2;\n    column+=2;\n    corner3Read=true;\n  }\n else   if ((row == numRows - 2) && (column == 0) && ((numColumns & 0x07) == 4)&& !corner4Read) {\n    result[resultOffset++]=(byte)readCorner4(numRows,numColumns);\n    row-=2;\n    column+=2;\n    corner4Read=true;\n  }\n else {\n    do {\n      if ((row < numRows) && (column >= 0) && !readMappingMatrix.get(column,row)) {\n        result[resultOffset++]=(byte)readUtah(row,column,numRows,numColumns);\n      }\n      row-=2;\n      column+=2;\n    }\n while ((row >= 0) && (column < numColumns));\n    row+=1;\n    column+=3;\n    do {\n      if ((row >= 0) && (column < numColumns) && !readMappingMatrix.get(column,row)) {\n        result[resultOffset++]=(byte)readUtah(row,column,numRows,numColumns);\n      }\n      row+=2;\n      column-=2;\n    }\n while ((row < numRows) && (column >= 0));\n    row+=3;\n    column+=1;\n  }\n}\n while ((row < numRows) || (column < numColumns));\n",
      "nodeType" : "DoStatement",
      "astNodeNumber" : 303,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2440,
        "startLineNumber" : 75,
        "startColumnNumber" : 48,
        "endLineNumber" : 143,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  byte[] result=new byte[version.getTotalCodewords()];\n  int resultOffset=0;\n  int row=4;\n  int column=0;\n  int numRows=mappingBitMatrix.getHeight();\n  int numColumns=mappingBitMatrix.getWidth();\n  boolean corner1Read=false;\n  boolean corner2Read=false;\n  boolean corner3Read=false;\n  boolean corner4Read=false;\n  do {\n    if ((row == numRows) && (column == 0) && !corner1Read) {\n      result[resultOffset++]=(byte)readCorner1(numRows,numColumns);\n      row-=2;\n      column+=2;\n      corner1Read=true;\n    }\n else     if ((row == numRows - 2) && (column == 0) && ((numColumns & 0x03) != 0)&& !corner2Read) {\n      result[resultOffset++]=(byte)readCorner2(numRows,numColumns);\n      row-=2;\n      column+=2;\n      corner2Read=true;\n    }\n else     if ((row == numRows + 4) && (column == 2) && ((numColumns & 0x07) == 0)&& !corner3Read) {\n      result[resultOffset++]=(byte)readCorner3(numRows,numColumns);\n      row-=2;\n      column+=2;\n      corner3Read=true;\n    }\n else     if ((row == numRows - 2) && (column == 0) && ((numColumns & 0x07) == 4)&& !corner4Read) {\n      result[resultOffset++]=(byte)readCorner4(numRows,numColumns);\n      row-=2;\n      column+=2;\n      corner4Read=true;\n    }\n else {\n      do {\n        if ((row < numRows) && (column >= 0) && !readMappingMatrix.get(column,row)) {\n          result[resultOffset++]=(byte)readUtah(row,column,numRows,numColumns);\n        }\n        row-=2;\n        column+=2;\n      }\n while ((row >= 0) && (column < numColumns));\n      row+=1;\n      column+=3;\n      do {\n        if ((row >= 0) && (column < numColumns) && !readMappingMatrix.get(column,row)) {\n          result[resultOffset++]=(byte)readUtah(row,column,numRows,numColumns);\n        }\n        row+=2;\n        column-=2;\n      }\n while ((row < numRows) && (column >= 0));\n      row+=3;\n      column+=1;\n    }\n  }\n while ((row < numRows) || (column < numColumns));\n  if (resultOffset != version.getTotalCodewords()) {\n    throw FormatException.getFormatInstance();\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 379,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2868,
        "startLineNumber" : 67,
        "startColumnNumber" : 2,
        "endLineNumber" : 143,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * <p>Reads the bits in the  {@link BitMatrix} representing the mapping matrix (No alignment patterns)in the correct order in order to reconstitute the codewords bytes contained within the Data Matrix Code.</p>\n * @return bytes encoded within the Data Matrix Code\n * @throws FormatException if the exact number of bytes expected is not read\n */\nbyte[] readCodewords() throws FormatException {\n  byte[] result=new byte[version.getTotalCodewords()];\n  int resultOffset=0;\n  int row=4;\n  int column=0;\n  int numRows=mappingBitMatrix.getHeight();\n  int numColumns=mappingBitMatrix.getWidth();\n  boolean corner1Read=false;\n  boolean corner2Read=false;\n  boolean corner3Read=false;\n  boolean corner4Read=false;\n  do {\n    if ((row == numRows) && (column == 0) && !corner1Read) {\n      result[resultOffset++]=(byte)readCorner1(numRows,numColumns);\n      row-=2;\n      column+=2;\n      corner1Read=true;\n    }\n else     if ((row == numRows - 2) && (column == 0) && ((numColumns & 0x03) != 0)&& !corner2Read) {\n      result[resultOffset++]=(byte)readCorner2(numRows,numColumns);\n      row-=2;\n      column+=2;\n      corner2Read=true;\n    }\n else     if ((row == numRows + 4) && (column == 2) && ((numColumns & 0x07) == 0)&& !corner3Read) {\n      result[resultOffset++]=(byte)readCorner3(numRows,numColumns);\n      row-=2;\n      column+=2;\n      corner3Read=true;\n    }\n else     if ((row == numRows - 2) && (column == 0) && ((numColumns & 0x07) == 4)&& !corner4Read) {\n      result[resultOffset++]=(byte)readCorner4(numRows,numColumns);\n      row-=2;\n      column+=2;\n      corner4Read=true;\n    }\n else {\n      do {\n        if ((row < numRows) && (column >= 0) && !readMappingMatrix.get(column,row)) {\n          result[resultOffset++]=(byte)readUtah(row,column,numRows,numColumns);\n        }\n        row-=2;\n        column+=2;\n      }\n while ((row >= 0) && (column < numColumns));\n      row+=1;\n      column+=3;\n      do {\n        if ((row >= 0) && (column < numColumns) && !readMappingMatrix.get(column,row)) {\n          result[resultOffset++]=(byte)readUtah(row,column,numRows,numColumns);\n        }\n        row+=2;\n        column-=2;\n      }\n while ((row < numRows) && (column >= 0));\n      row+=3;\n      column+=1;\n    }\n  }\n while ((row < numRows) || (column < numColumns));\n  if (resultOffset != version.getTotalCodewords()) {\n    throw FormatException.getFormatInstance();\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 387,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 99,
        "startColumnNumber" : 17,
        "endLineNumber" : 99,
        "endColumnNumber" : 98
      },
      "nodeContext" : "(row == numRows - 2) && (column == 0) && ((numColumns & 0x03) != 0)&& !corner2Read",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 20,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "boolean"
  }, {
    "nodeContext" : "(column == 0)",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 109,
      "startColumnNumber" : 39,
      "endLineNumber" : 109,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 109,
        "startColumnNumber" : 17,
        "endLineNumber" : 109,
        "endColumnNumber" : 98
      },
      "nodeContext" : "(row == numRows - 2) && (column == 0) && ((numColumns & 0x07) == 4)&& !corner4Read",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1059,
        "startLineNumber" : 109,
        "startColumnNumber" : 13,
        "endLineNumber" : 136,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if ((row == numRows - 2) && (column == 0) && ((numColumns & 0x07) == 4)&& !corner4Read) {\n  result[resultOffset++]=(byte)readCorner4(numRows,numColumns);\n  row-=2;\n  column+=2;\n  corner4Read=true;\n}\n else {\n  do {\n    if ((row < numRows) && (column >= 0) && !readMappingMatrix.get(column,row)) {\n      result[resultOffset++]=(byte)readUtah(row,column,numRows,numColumns);\n    }\n    row-=2;\n    column+=2;\n  }\n while ((row >= 0) && (column < numColumns));\n  row+=1;\n  column+=3;\n  do {\n    if ((row >= 0) && (column < numColumns) && !readMappingMatrix.get(column,row)) {\n      result[resultOffset++]=(byte)readUtah(row,column,numRows,numColumns);\n    }\n    row+=2;\n    column-=2;\n  }\n while ((row < numRows) && (column >= 0));\n  row+=3;\n  column+=1;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 163,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1306,
        "startLineNumber" : 104,
        "startColumnNumber" : 13,
        "endLineNumber" : 136,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if ((row == numRows + 4) && (column == 2) && ((numColumns & 0x07) == 0)&& !corner3Read) {\n  result[resultOffset++]=(byte)readCorner3(numRows,numColumns);\n  row-=2;\n  column+=2;\n  corner3Read=true;\n}\n else if ((row == numRows - 2) && (column == 0) && ((numColumns & 0x07) == 4)&& !corner4Read) {\n  result[resultOffset++]=(byte)readCorner4(numRows,numColumns);\n  row-=2;\n  column+=2;\n  corner4Read=true;\n}\n else {\n  do {\n    if ((row < numRows) && (column >= 0) && !readMappingMatrix.get(column,row)) {\n      result[resultOffset++]=(byte)readUtah(row,column,numRows,numColumns);\n    }\n    row-=2;\n    column+=2;\n  }\n while ((row >= 0) && (column < numColumns));\n  row+=1;\n  column+=3;\n  do {\n    if ((row >= 0) && (column < numColumns) && !readMappingMatrix.get(column,row)) {\n      result[resultOffset++]=(byte)readUtah(row,column,numRows,numColumns);\n    }\n    row+=2;\n    column-=2;\n  }\n while ((row < numRows) && (column >= 0));\n  row+=3;\n  column+=1;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 209,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1553,
        "startLineNumber" : 99,
        "startColumnNumber" : 13,
        "endLineNumber" : 136,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if ((row == numRows - 2) && (column == 0) && ((numColumns & 0x03) != 0)&& !corner2Read) {\n  result[resultOffset++]=(byte)readCorner2(numRows,numColumns);\n  row-=2;\n  column+=2;\n  corner2Read=true;\n}\n else if ((row == numRows + 4) && (column == 2) && ((numColumns & 0x07) == 0)&& !corner3Read) {\n  result[resultOffset++]=(byte)readCorner3(numRows,numColumns);\n  row-=2;\n  column+=2;\n  corner3Read=true;\n}\n else if ((row == numRows - 2) && (column == 0) && ((numColumns & 0x07) == 4)&& !corner4Read) {\n  result[resultOffset++]=(byte)readCorner4(numRows,numColumns);\n  row-=2;\n  column+=2;\n  corner4Read=true;\n}\n else {\n  do {\n    if ((row < numRows) && (column >= 0) && !readMappingMatrix.get(column,row)) {\n      result[resultOffset++]=(byte)readUtah(row,column,numRows,numColumns);\n    }\n    row-=2;\n    column+=2;\n  }\n while ((row >= 0) && (column < numColumns));\n  row+=1;\n  column+=3;\n  do {\n    if ((row >= 0) && (column < numColumns) && !readMappingMatrix.get(column,row)) {\n      result[resultOffset++]=(byte)readUtah(row,column,numRows,numColumns);\n    }\n    row+=2;\n    column-=2;\n  }\n while ((row < numRows) && (column >= 0));\n  row+=3;\n  column+=1;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 255,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1768,
        "startLineNumber" : 94,
        "startColumnNumber" : 6,
        "endLineNumber" : 136,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if ((row == numRows) && (column == 0) && !corner1Read) {\n  result[resultOffset++]=(byte)readCorner1(numRows,numColumns);\n  row-=2;\n  column+=2;\n  corner1Read=true;\n}\n else if ((row == numRows - 2) && (column == 0) && ((numColumns & 0x03) != 0)&& !corner2Read) {\n  result[resultOffset++]=(byte)readCorner2(numRows,numColumns);\n  row-=2;\n  column+=2;\n  corner2Read=true;\n}\n else if ((row == numRows + 4) && (column == 2) && ((numColumns & 0x07) == 0)&& !corner3Read) {\n  result[resultOffset++]=(byte)readCorner3(numRows,numColumns);\n  row-=2;\n  column+=2;\n  corner3Read=true;\n}\n else if ((row == numRows - 2) && (column == 0) && ((numColumns & 0x07) == 4)&& !corner4Read) {\n  result[resultOffset++]=(byte)readCorner4(numRows,numColumns);\n  row-=2;\n  column+=2;\n  corner4Read=true;\n}\n else {\n  do {\n    if ((row < numRows) && (column >= 0) && !readMappingMatrix.get(column,row)) {\n      result[resultOffset++]=(byte)readUtah(row,column,numRows,numColumns);\n    }\n    row-=2;\n    column+=2;\n  }\n while ((row >= 0) && (column < numColumns));\n  row+=1;\n  column+=3;\n  do {\n    if ((row >= 0) && (column < numColumns) && !readMappingMatrix.get(column,row)) {\n      result[resultOffset++]=(byte)readUtah(row,column,numRows,numColumns);\n    }\n    row+=2;\n    column-=2;\n  }\n while ((row < numRows) && (column >= 0));\n  row+=3;\n  column+=1;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 292,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.DoStatement,body]",
      "nodePosition" : {
        "charLength" : 1822,
        "startLineNumber" : 92,
        "startColumnNumber" : 7,
        "endLineNumber" : 137,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if ((row == numRows) && (column == 0) && !corner1Read) {\n    result[resultOffset++]=(byte)readCorner1(numRows,numColumns);\n    row-=2;\n    column+=2;\n    corner1Read=true;\n  }\n else   if ((row == numRows - 2) && (column == 0) && ((numColumns & 0x03) != 0)&& !corner2Read) {\n    result[resultOffset++]=(byte)readCorner2(numRows,numColumns);\n    row-=2;\n    column+=2;\n    corner2Read=true;\n  }\n else   if ((row == numRows + 4) && (column == 2) && ((numColumns & 0x07) == 0)&& !corner3Read) {\n    result[resultOffset++]=(byte)readCorner3(numRows,numColumns);\n    row-=2;\n    column+=2;\n    corner3Read=true;\n  }\n else   if ((row == numRows - 2) && (column == 0) && ((numColumns & 0x07) == 4)&& !corner4Read) {\n    result[resultOffset++]=(byte)readCorner4(numRows,numColumns);\n    row-=2;\n    column+=2;\n    corner4Read=true;\n  }\n else {\n    do {\n      if ((row < numRows) && (column >= 0) && !readMappingMatrix.get(column,row)) {\n        result[resultOffset++]=(byte)readUtah(row,column,numRows,numColumns);\n      }\n      row-=2;\n      column+=2;\n    }\n while ((row >= 0) && (column < numColumns));\n    row+=1;\n    column+=3;\n    do {\n      if ((row >= 0) && (column < numColumns) && !readMappingMatrix.get(column,row)) {\n        result[resultOffset++]=(byte)readUtah(row,column,numRows,numColumns);\n      }\n      row+=2;\n      column-=2;\n    }\n while ((row < numRows) && (column >= 0));\n    row+=3;\n    column+=1;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 293,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1875,
        "startLineNumber" : 92,
        "startColumnNumber" : 4,
        "endLineNumber" : 137,
        "endColumnNumber" : 55
      },
      "nodeContext" : "do {\n  if ((row == numRows) && (column == 0) && !corner1Read) {\n    result[resultOffset++]=(byte)readCorner1(numRows,numColumns);\n    row-=2;\n    column+=2;\n    corner1Read=true;\n  }\n else   if ((row == numRows - 2) && (column == 0) && ((numColumns & 0x03) != 0)&& !corner2Read) {\n    result[resultOffset++]=(byte)readCorner2(numRows,numColumns);\n    row-=2;\n    column+=2;\n    corner2Read=true;\n  }\n else   if ((row == numRows + 4) && (column == 2) && ((numColumns & 0x07) == 0)&& !corner3Read) {\n    result[resultOffset++]=(byte)readCorner3(numRows,numColumns);\n    row-=2;\n    column+=2;\n    corner3Read=true;\n  }\n else   if ((row == numRows - 2) && (column == 0) && ((numColumns & 0x07) == 4)&& !corner4Read) {\n    result[resultOffset++]=(byte)readCorner4(numRows,numColumns);\n    row-=2;\n    column+=2;\n    corner4Read=true;\n  }\n else {\n    do {\n      if ((row < numRows) && (column >= 0) && !readMappingMatrix.get(column,row)) {\n        result[resultOffset++]=(byte)readUtah(row,column,numRows,numColumns);\n      }\n      row-=2;\n      column+=2;\n    }\n while ((row >= 0) && (column < numColumns));\n    row+=1;\n    column+=3;\n    do {\n      if ((row >= 0) && (column < numColumns) && !readMappingMatrix.get(column,row)) {\n        result[resultOffset++]=(byte)readUtah(row,column,numRows,numColumns);\n      }\n      row+=2;\n      column-=2;\n    }\n while ((row < numRows) && (column >= 0));\n    row+=3;\n    column+=1;\n  }\n}\n while ((row < numRows) || (column < numColumns));\n",
      "nodeType" : "DoStatement",
      "astNodeNumber" : 303,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2440,
        "startLineNumber" : 75,
        "startColumnNumber" : 48,
        "endLineNumber" : 143,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  byte[] result=new byte[version.getTotalCodewords()];\n  int resultOffset=0;\n  int row=4;\n  int column=0;\n  int numRows=mappingBitMatrix.getHeight();\n  int numColumns=mappingBitMatrix.getWidth();\n  boolean corner1Read=false;\n  boolean corner2Read=false;\n  boolean corner3Read=false;\n  boolean corner4Read=false;\n  do {\n    if ((row == numRows) && (column == 0) && !corner1Read) {\n      result[resultOffset++]=(byte)readCorner1(numRows,numColumns);\n      row-=2;\n      column+=2;\n      corner1Read=true;\n    }\n else     if ((row == numRows - 2) && (column == 0) && ((numColumns & 0x03) != 0)&& !corner2Read) {\n      result[resultOffset++]=(byte)readCorner2(numRows,numColumns);\n      row-=2;\n      column+=2;\n      corner2Read=true;\n    }\n else     if ((row == numRows + 4) && (column == 2) && ((numColumns & 0x07) == 0)&& !corner3Read) {\n      result[resultOffset++]=(byte)readCorner3(numRows,numColumns);\n      row-=2;\n      column+=2;\n      corner3Read=true;\n    }\n else     if ((row == numRows - 2) && (column == 0) && ((numColumns & 0x07) == 4)&& !corner4Read) {\n      result[resultOffset++]=(byte)readCorner4(numRows,numColumns);\n      row-=2;\n      column+=2;\n      corner4Read=true;\n    }\n else {\n      do {\n        if ((row < numRows) && (column >= 0) && !readMappingMatrix.get(column,row)) {\n          result[resultOffset++]=(byte)readUtah(row,column,numRows,numColumns);\n        }\n        row-=2;\n        column+=2;\n      }\n while ((row >= 0) && (column < numColumns));\n      row+=1;\n      column+=3;\n      do {\n        if ((row >= 0) && (column < numColumns) && !readMappingMatrix.get(column,row)) {\n          result[resultOffset++]=(byte)readUtah(row,column,numRows,numColumns);\n        }\n        row+=2;\n        column-=2;\n      }\n while ((row < numRows) && (column >= 0));\n      row+=3;\n      column+=1;\n    }\n  }\n while ((row < numRows) || (column < numColumns));\n  if (resultOffset != version.getTotalCodewords()) {\n    throw FormatException.getFormatInstance();\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 379,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2868,
        "startLineNumber" : 67,
        "startColumnNumber" : 2,
        "endLineNumber" : 143,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * <p>Reads the bits in the  {@link BitMatrix} representing the mapping matrix (No alignment patterns)in the correct order in order to reconstitute the codewords bytes contained within the Data Matrix Code.</p>\n * @return bytes encoded within the Data Matrix Code\n * @throws FormatException if the exact number of bytes expected is not read\n */\nbyte[] readCodewords() throws FormatException {\n  byte[] result=new byte[version.getTotalCodewords()];\n  int resultOffset=0;\n  int row=4;\n  int column=0;\n  int numRows=mappingBitMatrix.getHeight();\n  int numColumns=mappingBitMatrix.getWidth();\n  boolean corner1Read=false;\n  boolean corner2Read=false;\n  boolean corner3Read=false;\n  boolean corner4Read=false;\n  do {\n    if ((row == numRows) && (column == 0) && !corner1Read) {\n      result[resultOffset++]=(byte)readCorner1(numRows,numColumns);\n      row-=2;\n      column+=2;\n      corner1Read=true;\n    }\n else     if ((row == numRows - 2) && (column == 0) && ((numColumns & 0x03) != 0)&& !corner2Read) {\n      result[resultOffset++]=(byte)readCorner2(numRows,numColumns);\n      row-=2;\n      column+=2;\n      corner2Read=true;\n    }\n else     if ((row == numRows + 4) && (column == 2) && ((numColumns & 0x07) == 0)&& !corner3Read) {\n      result[resultOffset++]=(byte)readCorner3(numRows,numColumns);\n      row-=2;\n      column+=2;\n      corner3Read=true;\n    }\n else     if ((row == numRows - 2) && (column == 0) && ((numColumns & 0x07) == 4)&& !corner4Read) {\n      result[resultOffset++]=(byte)readCorner4(numRows,numColumns);\n      row-=2;\n      column+=2;\n      corner4Read=true;\n    }\n else {\n      do {\n        if ((row < numRows) && (column >= 0) && !readMappingMatrix.get(column,row)) {\n          result[resultOffset++]=(byte)readUtah(row,column,numRows,numColumns);\n        }\n        row-=2;\n        column+=2;\n      }\n while ((row >= 0) && (column < numColumns));\n      row+=1;\n      column+=3;\n      do {\n        if ((row >= 0) && (column < numColumns) && !readMappingMatrix.get(column,row)) {\n          result[resultOffset++]=(byte)readUtah(row,column,numRows,numColumns);\n        }\n        row+=2;\n        column-=2;\n      }\n while ((row < numRows) && (column >= 0));\n      row+=3;\n      column+=1;\n    }\n  }\n while ((row < numRows) || (column < numColumns));\n  if (resultOffset != version.getTotalCodewords()) {\n    throw FormatException.getFormatInstance();\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 387,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 109,
        "startColumnNumber" : 17,
        "endLineNumber" : 109,
        "endColumnNumber" : 98
      },
      "nodeContext" : "(row == numRows - 2) && (column == 0) && ((numColumns & 0x07) == 4)&& !corner4Read",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 20,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 94,
    "startColumnNumber" : 30,
    "endLineNumber" : 94,
    "endColumnNumber" : 43
  }, {
    "charLength" : 13,
    "startLineNumber" : 99,
    "startColumnNumber" : 39,
    "endLineNumber" : 99,
    "endColumnNumber" : 52
  }, {
    "charLength" : 13,
    "startLineNumber" : 109,
    "startColumnNumber" : 39,
    "endLineNumber" : 109,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}