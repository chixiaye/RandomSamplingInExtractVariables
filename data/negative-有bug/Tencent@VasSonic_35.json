{
  "id" : 35,
  "expression" : "\") handleFlow_FirstLoad error:\"",
  "projectName" : "Tencent@VasSonic",
  "commitID" : "a3e09c156adb93b4ebe6139def465c519069aa9e",
  "filePath" : "/sonic-android/sdk/src/main/java/com/tencent/sonic/sdk/QuickSonicSession.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\") handleFlow_FirstLoad error:\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 611,
      "startColumnNumber" : 66,
      "endLineNumber" : 611,
      "endColumnNumber" : 97
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 611,
        "startColumnNumber" : 47,
        "endLineNumber" : 611,
        "endColumnNumber" : 120
      },
      "nodeContext" : "\"session(\" + sId + \") handleFlow_FirstLoad error:\"+ e.getMessage()+ \".\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 611,
        "startColumnNumber" : 16,
        "endLineNumber" : 611,
        "endColumnNumber" : 121
      },
      "nodeContext" : "SonicUtils.log(TAG,Log.ERROR,\"session(\" + sId + \") handleFlow_FirstLoad error:\"+ e.getMessage()+ \".\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 611,
        "startColumnNumber" : 16,
        "endLineNumber" : 611,
        "endColumnNumber" : 122
      },
      "nodeContext" : "SonicUtils.log(TAG,Log.ERROR,\"session(\" + sId + \") handleFlow_FirstLoad error:\"+ e.getMessage()+ \".\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 187,
        "startLineNumber" : 609,
        "startColumnNumber" : 34,
        "endLineNumber" : 612,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  pendingWebResourceStream=null;\n  SonicUtils.log(TAG,Log.ERROR,\"session(\" + sId + \") handleFlow_FirstLoad error:\"+ e.getMessage()+ \".\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 207,
        "startLineNumber" : 609,
        "startColumnNumber" : 14,
        "endLineNumber" : 612,
        "endColumnNumber" : 13
      },
      "nodeContext" : "catch (Throwable e) {\n  pendingWebResourceStream=null;\n  SonicUtils.log(TAG,Log.ERROR,\"session(\" + sId + \") handleFlow_FirstLoad error:\"+ e.getMessage()+ \".\");\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 306,
        "startLineNumber" : 607,
        "startColumnNumber" : 12,
        "endLineNumber" : 612,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  htmlString=responseDataTuple.outputStream.toString(\"UTF-8\");\n}\n catch (Throwable e) {\n  pendingWebResourceStream=null;\n  SonicUtils.log(TAG,Log.ERROR,\"session(\" + sId + \") handleFlow_FirstLoad error:\"+ e.getMessage()+ \".\");\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 37,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 330,
        "startLineNumber" : 606,
        "startColumnNumber" : 42,
        "endLineNumber" : 613,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    htmlString=responseDataTuple.outputStream.toString(\"UTF-8\");\n  }\n catch (  Throwable e) {\n    pendingWebResourceStream=null;\n    SonicUtils.log(TAG,Log.ERROR,\"session(\" + sId + \") handleFlow_FirstLoad error:\"+ e.getMessage()+ \".\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 38,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 364,
        "startLineNumber" : 606,
        "startColumnNumber" : 8,
        "endLineNumber" : 613,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (responseDataTuple.isComplete) {\n  try {\n    htmlString=responseDataTuple.outputStream.toString(\"UTF-8\");\n  }\n catch (  Throwable e) {\n    pendingWebResourceStream=null;\n    SonicUtils.log(TAG,Log.ERROR,\"session(\" + sId + \") handleFlow_FirstLoad error:\"+ e.getMessage()+ \".\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 42,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2277,
        "startLineNumber" : 596,
        "startColumnNumber" : 42,
        "endLineNumber" : 639,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SonicSessionConnection.ResponseDataTuple responseDataTuple=sessionConnection.getResponseData(wasInterceptInvoked,null);\n  if (null == responseDataTuple) {\n    SonicUtils.log(TAG,Log.ERROR,\"session(\" + sId + \") handleFlow_FirstLoad error:responseDataTuple is null!\");\n    return;\n  }\n  pendingWebResourceStream=new SonicSessionStream(this,responseDataTuple.outputStream,responseDataTuple.responseStream);\n  String htmlString=null;\n  if (responseDataTuple.isComplete) {\n    try {\n      htmlString=responseDataTuple.outputStream.toString(\"UTF-8\");\n    }\n catch (    Throwable e) {\n      pendingWebResourceStream=null;\n      SonicUtils.log(TAG,Log.ERROR,\"session(\" + sId + \") handleFlow_FirstLoad error:\"+ e.getMessage()+ \".\");\n    }\n  }\n  boolean hasCacheData=!TextUtils.isEmpty(htmlString);\n  SonicUtils.log(TAG,Log.INFO,\"session(\" + sId + \") handleFlow_FirstLoad:hasCacheData=\"+ hasCacheData+ \".\");\n  mainHandler.removeMessages(CLIENT_CORE_MSG_PRE_LOAD);\n  Message msg=mainHandler.obtainMessage(CLIENT_CORE_MSG_FIRST_LOAD);\n  msg.obj=htmlString;\n  msg.arg1=hasCacheData ? FIRST_LOAD_WITH_CACHE : FIRST_LOAD_NO_CACHE;\n  mainHandler.sendMessage(msg);\n  String cacheOffline=sessionConnection.getResponseHeaderField(SonicSessionConnection.CUSTOM_HEAD_FILED_CACHE_OFFLINE);\n  if (SonicUtils.needSaveData(cacheOffline)) {\n    try {\n      if (hasCacheData && !wasLoadUrlInvoked.get() && !wasInterceptInvoked.get()) {\n        switchState(STATE_RUNNING,STATE_READY,true);\n        Thread.sleep(1500);\n        separateAndSaveCache(htmlString);\n      }\n    }\n catch (    Throwable e) {\n      SonicUtils.log(TAG,Log.ERROR,\"session(\" + sId + \") handleFlow_FirstLoad error:  \"+ e.getMessage());\n    }\n  }\n else {\n    SonicUtils.log(TAG,Log.INFO,\"session(\" + sId + \") handleFlow_FirstLoad:offline->\"+ cacheOffline+ \" , so do not need cache to file.\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 231,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3040,
        "startLineNumber" : 579,
        "startColumnNumber" : 4,
        "endLineNumber" : 639,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * In this case sonic will always read the new data from the server until the client initiates a resource interception. If the server data is read finished, sonic will send <code>CLIENT_CORE_MSG_FIRST_LOAD</code> message with the new html content from server. If the server data is not read finished sonic will split the read and unread data into a bridgedStream {@link SonicSessionStream}.When client initiates a resource interception, sonic will provide the bridgedStream to the kernel. <p> If need save and separate data, sonic will save the server data and separate the server data to template and data.\n */\nprotected void handleFlow_FirstLoad(){\n  SonicSessionConnection.ResponseDataTuple responseDataTuple=sessionConnection.getResponseData(wasInterceptInvoked,null);\n  if (null == responseDataTuple) {\n    SonicUtils.log(TAG,Log.ERROR,\"session(\" + sId + \") handleFlow_FirstLoad error:responseDataTuple is null!\");\n    return;\n  }\n  pendingWebResourceStream=new SonicSessionStream(this,responseDataTuple.outputStream,responseDataTuple.responseStream);\n  String htmlString=null;\n  if (responseDataTuple.isComplete) {\n    try {\n      htmlString=responseDataTuple.outputStream.toString(\"UTF-8\");\n    }\n catch (    Throwable e) {\n      pendingWebResourceStream=null;\n      SonicUtils.log(TAG,Log.ERROR,\"session(\" + sId + \") handleFlow_FirstLoad error:\"+ e.getMessage()+ \".\");\n    }\n  }\n  boolean hasCacheData=!TextUtils.isEmpty(htmlString);\n  SonicUtils.log(TAG,Log.INFO,\"session(\" + sId + \") handleFlow_FirstLoad:hasCacheData=\"+ hasCacheData+ \".\");\n  mainHandler.removeMessages(CLIENT_CORE_MSG_PRE_LOAD);\n  Message msg=mainHandler.obtainMessage(CLIENT_CORE_MSG_FIRST_LOAD);\n  msg.obj=htmlString;\n  msg.arg1=hasCacheData ? FIRST_LOAD_WITH_CACHE : FIRST_LOAD_NO_CACHE;\n  mainHandler.sendMessage(msg);\n  String cacheOffline=sessionConnection.getResponseHeaderField(SonicSessionConnection.CUSTOM_HEAD_FILED_CACHE_OFFLINE);\n  if (SonicUtils.needSaveData(cacheOffline)) {\n    try {\n      if (hasCacheData && !wasLoadUrlInvoked.get() && !wasInterceptInvoked.get()) {\n        switchState(STATE_RUNNING,STATE_READY,true);\n        Thread.sleep(1500);\n        separateAndSaveCache(htmlString);\n      }\n    }\n catch (    Throwable e) {\n      SonicUtils.log(TAG,Log.ERROR,\"session(\" + sId + \") handleFlow_FirstLoad error:  \"+ e.getMessage());\n    }\n  }\n else {\n    SonicUtils.log(TAG,Log.INFO,\"session(\" + sId + \") handleFlow_FirstLoad:offline->\"+ cacheOffline+ \" , so do not need cache to file.\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 236,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 611,
        "startColumnNumber" : 16,
        "endLineNumber" : 611,
        "endColumnNumber" : 122
      },
      "nodeContext" : "SonicUtils.log(TAG,Log.ERROR,\"session(\" + sId + \") handleFlow_FirstLoad error:\"+ e.getMessage()+ \".\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 611,
    "startColumnNumber" : 66,
    "endLineNumber" : 611,
    "endColumnNumber" : 97
  } ],
  "layoutRelationDataList" : [ ]
}