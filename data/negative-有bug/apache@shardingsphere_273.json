{
  "id" : 273,
  "expression" : "schema",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-features/shardingsphere-sharding/shardingsphere-sharding-core/src/test/java/org/apache/shardingsphere/sharding/route/engine/validator/ddl/ShardingCreateFunctionStatementValidatorTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "schema",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 68,
      "startColumnNumber" : 13,
      "endLineNumber" : 68,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 68,
        "startColumnNumber" : 13,
        "endLineNumber" : 68,
        "endColumnNumber" : 49
      },
      "nodeContext" : "schema.containsTable(\"t_order_item\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 50
      },
      "nodeContext" : "when(schema.containsTable(\"t_order_item\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 67
      },
      "nodeContext" : "when(schema.containsTable(\"t_order_item\")).thenReturn(true)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 68
      },
      "nodeContext" : "when(schema.containsTable(\"t_order_item\")).thenReturn(true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1488,
        "startLineNumber" : 52,
        "startColumnNumber" : 58,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MySQLSelectStatement selectStatement=new MySQLSelectStatement();\n  selectStatement.setFrom(new SimpleTableSegment(new TableNameSegment(0,0,new IdentifierValue(\"t_order_item\"))));\n  MySQLCreateTableStatement createTableStatement=new MySQLCreateTableStatement();\n  createTableStatement.setTable(new SimpleTableSegment(new TableNameSegment(0,0,new IdentifierValue(\"t_order\"))));\n  ValidStatementSegment validStatementSegment=new ValidStatementSegment(0,0);\n  validStatementSegment.setSqlStatement(createTableStatement);\n  ValidStatementSegment selectValidStatementSegment=new ValidStatementSegment(0,0);\n  selectValidStatementSegment.setSqlStatement(selectStatement);\n  RoutineBodySegment routineBody=new RoutineBodySegment(0,0);\n  routineBody.getValidStatements().add(validStatementSegment);\n  routineBody.getValidStatements().add(selectValidStatementSegment);\n  MySQLCreateFunctionStatement sqlStatement=new MySQLCreateFunctionStatement();\n  sqlStatement.setRoutineBody(routineBody);\n  SQLStatementContext<CreateFunctionStatement> sqlStatementContext=new CommonSQLStatementContext<>(sqlStatement);\n  ShardingSphereSchema schema=mock(ShardingSphereSchema.class);\n  when(schema.containsTable(\"t_order_item\")).thenReturn(true);\n  new ShardingCreateFunctionStatementValidator().preValidate(shardingRule,sqlStatementContext,Collections.emptyList(),schema);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 161,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1552,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void assertPreValidateCreateFunctionForMySQL(){\n  MySQLSelectStatement selectStatement=new MySQLSelectStatement();\n  selectStatement.setFrom(new SimpleTableSegment(new TableNameSegment(0,0,new IdentifierValue(\"t_order_item\"))));\n  MySQLCreateTableStatement createTableStatement=new MySQLCreateTableStatement();\n  createTableStatement.setTable(new SimpleTableSegment(new TableNameSegment(0,0,new IdentifierValue(\"t_order\"))));\n  ValidStatementSegment validStatementSegment=new ValidStatementSegment(0,0);\n  validStatementSegment.setSqlStatement(createTableStatement);\n  ValidStatementSegment selectValidStatementSegment=new ValidStatementSegment(0,0);\n  selectValidStatementSegment.setSqlStatement(selectStatement);\n  RoutineBodySegment routineBody=new RoutineBodySegment(0,0);\n  routineBody.getValidStatements().add(validStatementSegment);\n  routineBody.getValidStatements().add(selectValidStatementSegment);\n  MySQLCreateFunctionStatement sqlStatement=new MySQLCreateFunctionStatement();\n  sqlStatement.setRoutineBody(routineBody);\n  SQLStatementContext<CreateFunctionStatement> sqlStatementContext=new CommonSQLStatementContext<>(sqlStatement);\n  ShardingSphereSchema schema=mock(ShardingSphereSchema.class);\n  when(schema.containsTable(\"t_order_item\")).thenReturn(true);\n  new ShardingCreateFunctionStatementValidator().preValidate(shardingRule,sqlStatementContext,Collections.emptyList(),schema);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 167,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 68
      },
      "nodeContext" : "when(schema.containsTable(\"t_order_item\")).thenReturn(true);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.shardingsphere.infra.metadata.schema.ShardingSphereSchema"
  }, {
    "nodeContext" : "schema",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 69,
      "startColumnNumber" : 127,
      "endLineNumber" : 69,
      "endColumnNumber" : 133
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 69,
        "endColumnNumber" : 134
      },
      "nodeContext" : "new ShardingCreateFunctionStatementValidator().preValidate(shardingRule,sqlStatementContext,Collections.emptyList(),schema)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 69,
        "endColumnNumber" : 135
      },
      "nodeContext" : "new ShardingCreateFunctionStatementValidator().preValidate(shardingRule,sqlStatementContext,Collections.emptyList(),schema);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1488,
        "startLineNumber" : 52,
        "startColumnNumber" : 58,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MySQLSelectStatement selectStatement=new MySQLSelectStatement();\n  selectStatement.setFrom(new SimpleTableSegment(new TableNameSegment(0,0,new IdentifierValue(\"t_order_item\"))));\n  MySQLCreateTableStatement createTableStatement=new MySQLCreateTableStatement();\n  createTableStatement.setTable(new SimpleTableSegment(new TableNameSegment(0,0,new IdentifierValue(\"t_order\"))));\n  ValidStatementSegment validStatementSegment=new ValidStatementSegment(0,0);\n  validStatementSegment.setSqlStatement(createTableStatement);\n  ValidStatementSegment selectValidStatementSegment=new ValidStatementSegment(0,0);\n  selectValidStatementSegment.setSqlStatement(selectStatement);\n  RoutineBodySegment routineBody=new RoutineBodySegment(0,0);\n  routineBody.getValidStatements().add(validStatementSegment);\n  routineBody.getValidStatements().add(selectValidStatementSegment);\n  MySQLCreateFunctionStatement sqlStatement=new MySQLCreateFunctionStatement();\n  sqlStatement.setRoutineBody(routineBody);\n  SQLStatementContext<CreateFunctionStatement> sqlStatementContext=new CommonSQLStatementContext<>(sqlStatement);\n  ShardingSphereSchema schema=mock(ShardingSphereSchema.class);\n  when(schema.containsTable(\"t_order_item\")).thenReturn(true);\n  new ShardingCreateFunctionStatementValidator().preValidate(shardingRule,sqlStatementContext,Collections.emptyList(),schema);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 161,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1552,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void assertPreValidateCreateFunctionForMySQL(){\n  MySQLSelectStatement selectStatement=new MySQLSelectStatement();\n  selectStatement.setFrom(new SimpleTableSegment(new TableNameSegment(0,0,new IdentifierValue(\"t_order_item\"))));\n  MySQLCreateTableStatement createTableStatement=new MySQLCreateTableStatement();\n  createTableStatement.setTable(new SimpleTableSegment(new TableNameSegment(0,0,new IdentifierValue(\"t_order\"))));\n  ValidStatementSegment validStatementSegment=new ValidStatementSegment(0,0);\n  validStatementSegment.setSqlStatement(createTableStatement);\n  ValidStatementSegment selectValidStatementSegment=new ValidStatementSegment(0,0);\n  selectValidStatementSegment.setSqlStatement(selectStatement);\n  RoutineBodySegment routineBody=new RoutineBodySegment(0,0);\n  routineBody.getValidStatements().add(validStatementSegment);\n  routineBody.getValidStatements().add(selectValidStatementSegment);\n  MySQLCreateFunctionStatement sqlStatement=new MySQLCreateFunctionStatement();\n  sqlStatement.setRoutineBody(routineBody);\n  SQLStatementContext<CreateFunctionStatement> sqlStatementContext=new CommonSQLStatementContext<>(sqlStatement);\n  ShardingSphereSchema schema=mock(ShardingSphereSchema.class);\n  when(schema.containsTable(\"t_order_item\")).thenReturn(true);\n  new ShardingCreateFunctionStatementValidator().preValidate(shardingRule,sqlStatementContext,Collections.emptyList(),schema);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 167,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 69,
        "startColumnNumber" : 8,
        "endLineNumber" : 69,
        "endColumnNumber" : 135
      },
      "nodeContext" : "new ShardingCreateFunctionStatementValidator().preValidate(shardingRule,sqlStatementContext,Collections.emptyList(),schema);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.shardingsphere.infra.metadata.schema.ShardingSphereSchema"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 68,
    "startColumnNumber" : 13,
    "endLineNumber" : 68,
    "endColumnNumber" : 19
  }, {
    "charLength" : 6,
    "startLineNumber" : 69,
    "startColumnNumber" : 127,
    "endLineNumber" : 69,
    "endColumnNumber" : 133
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}