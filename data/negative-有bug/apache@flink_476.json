{
  "id" : 476,
  "expression" : "DataTypes.VARCHAR(65536)",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-connectors/flink-connector-hive/src/test/java/org/apache/flink/table/catalog/hive/HiveCatalogGenericMetadataTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "DataTypes.VARCHAR(65536)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 182,
      "startColumnNumber" : 40,
      "endLineNumber" : 182,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayCreation,initializer]",
      "nodePosition" : {
        "charLength" : 411,
        "startLineNumber" : 180,
        "startColumnNumber" : 51,
        "endLineNumber" : 187,
        "endColumnNumber" : 37
      },
      "nodeContext" : "{DataTypes.CHAR(265),DataTypes.VARCHAR(65536),DataTypes.STRING(),DataTypes.BINARY(1),DataTypes.VARBINARY(255),DataTypes.BYTES()}",
      "nodeType" : "ArrayInitializer",
      "astNodeNumber" : 23,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 426,
        "startLineNumber" : 180,
        "startColumnNumber" : 36,
        "endLineNumber" : 187,
        "endColumnNumber" : 37
      },
      "nodeContext" : "new DataType[]{DataTypes.CHAR(265),DataTypes.VARCHAR(65536),DataTypes.STRING(),DataTypes.BINARY(1),DataTypes.VARBINARY(255),DataTypes.BYTES()}",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 28,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 606,
        "startLineNumber" : 177,
        "startColumnNumber" : 20,
        "endLineNumber" : 187,
        "endColumnNumber" : 38
      },
      "nodeContext" : "TableSchema.builder().fields(new String[]{\"c\",\"vc\",\"s\",\"b\",\"vb\",\"bs\"},new DataType[]{DataTypes.CHAR(265),DataTypes.VARCHAR(65536),DataTypes.STRING(),DataTypes.BINARY(1),DataTypes.VARBINARY(255),DataTypes.BYTES()})",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 45,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 685,
        "startLineNumber" : 177,
        "startColumnNumber" : 20,
        "endLineNumber" : 188,
        "endColumnNumber" : 78
      },
      "nodeContext" : "TableSchema.builder().fields(new String[]{\"c\",\"vc\",\"s\",\"b\",\"vb\",\"bs\"},new DataType[]{DataTypes.CHAR(265),DataTypes.VARCHAR(65536),DataTypes.STRING(),DataTypes.BINARY(1),DataTypes.VARBINARY(255),DataTypes.BYTES()}).field(\"len\",DataTypes.INT(),\"CHAR_LENGTH(`s`)\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 52,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 722,
        "startLineNumber" : 177,
        "startColumnNumber" : 20,
        "endLineNumber" : 189,
        "endColumnNumber" : 36
      },
      "nodeContext" : "TableSchema.builder().fields(new String[]{\"c\",\"vc\",\"s\",\"b\",\"vb\",\"bs\"},new DataType[]{DataTypes.CHAR(265),DataTypes.VARCHAR(65536),DataTypes.STRING(),DataTypes.BINARY(1),DataTypes.VARBINARY(255),DataTypes.BYTES()}).field(\"len\",DataTypes.INT(),\"CHAR_LENGTH(`s`)\").build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 54,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 759,
        "startLineNumber" : 176,
        "startColumnNumber" : 12,
        "endLineNumber" : 189,
        "endColumnNumber" : 36
      },
      "nodeContext" : "expectedSchema=TableSchema.builder().fields(new String[]{\"c\",\"vc\",\"s\",\"b\",\"vb\",\"bs\"},new DataType[]{DataTypes.CHAR(265),DataTypes.VARCHAR(65536),DataTypes.STRING(),DataTypes.BINARY(1),DataTypes.VARBINARY(255),DataTypes.BYTES()}).field(\"len\",DataTypes.INT(),\"CHAR_LENGTH(`s`)\").build()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 56,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 760,
        "startLineNumber" : 176,
        "startColumnNumber" : 12,
        "endLineNumber" : 189,
        "endColumnNumber" : 37
      },
      "nodeContext" : "expectedSchema=TableSchema.builder().fields(new String[]{\"c\",\"vc\",\"s\",\"b\",\"vb\",\"bs\"},new DataType[]{DataTypes.CHAR(265),DataTypes.VARCHAR(65536),DataTypes.STRING(),DataTypes.BINARY(1),DataTypes.VARBINARY(255),DataTypes.BYTES()}).field(\"len\",DataTypes.INT(),\"CHAR_LENGTH(`s`)\").build();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 57,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 12653,
        "startLineNumber" : 94,
        "startColumnNumber" : 12,
        "endLineNumber" : 297,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ObjectPath tablePath=new ObjectPath(db1,\"generic1\");\n  Table hiveTable=org.apache.hadoop.hive.ql.metadata.Table.getEmptyTable(tablePath.getDatabaseName(),tablePath.getObjectName());\n  hiveTable.setDbName(tablePath.getDatabaseName());\n  hiveTable.setTableName(tablePath.getObjectName());\n  setLegacyGeneric(hiveTable.getParameters());\n  hiveTable.getParameters().put(\"flink.generic.table.schema.0.name\",\"ti\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.0.data-type\",\"TINYINT\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.1.name\",\"si\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.1.data-type\",\"SMALLINT\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.2.name\",\"i\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.2.data-type\",\"INT\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.3.name\",\"bi\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.3.data-type\",\"BIGINT\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.4.name\",\"f\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.4.data-type\",\"FLOAT\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.5.name\",\"d\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.5.data-type\",\"DOUBLE\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.6.name\",\"de\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.6.data-type\",\"DECIMAL(10, 5)\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.7.name\",\"cost\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.7.expr\",\"`d` * `bi`\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.7.data-type\",\"DOUBLE\");\n  ((HiveCatalog)catalog).client.createTable(hiveTable);\n  CatalogBaseTable catalogBaseTable=catalog.getTable(tablePath);\n  assertFalse(HiveCatalog.isHiveTable(catalogBaseTable.getOptions()));\n  TableSchema expectedSchema=TableSchema.builder().fields(new String[]{\"ti\",\"si\",\"i\",\"bi\",\"f\",\"d\",\"de\"},new DataType[]{DataTypes.TINYINT(),DataTypes.SMALLINT(),DataTypes.INT(),DataTypes.BIGINT(),DataTypes.FLOAT(),DataTypes.DOUBLE(),DataTypes.DECIMAL(10,5)}).field(\"cost\",DataTypes.DOUBLE(),\"`d` * `bi`\").build();\n  assertEquals(expectedSchema,catalogBaseTable.getSchema());\n  tablePath=new ObjectPath(db1,\"generic2\");\n  hiveTable=org.apache.hadoop.hive.ql.metadata.Table.getEmptyTable(tablePath.getDatabaseName(),tablePath.getObjectName());\n  hiveTable.setDbName(tablePath.getDatabaseName());\n  hiveTable.setTableName(tablePath.getObjectName());\n  setLegacyGeneric(hiveTable.getParameters());\n  hiveTable.setTableName(tablePath.getObjectName());\n  hiveTable.getParameters().put(\"flink.generic.table.schema.0.name\",\"c\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.0.data-type\",\"CHAR(265)\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.1.name\",\"vc\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.1.data-type\",\"VARCHAR(65536)\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.2.name\",\"s\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.2.data-type\",\"VARCHAR(2147483647)\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.3.name\",\"b\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.3.data-type\",\"BINARY(1)\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.4.name\",\"vb\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.4.data-type\",\"VARBINARY(255)\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.5.name\",\"bs\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.5.data-type\",\"VARBINARY(2147483647)\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.6.name\",\"len\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.6.expr\",\"CHAR_LENGTH(`s`)\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.6.data-type\",\"INT\");\n  ((HiveCatalog)catalog).client.createTable(hiveTable);\n  catalogBaseTable=catalog.getTable(tablePath);\n  expectedSchema=TableSchema.builder().fields(new String[]{\"c\",\"vc\",\"s\",\"b\",\"vb\",\"bs\"},new DataType[]{DataTypes.CHAR(265),DataTypes.VARCHAR(65536),DataTypes.STRING(),DataTypes.BINARY(1),DataTypes.VARBINARY(255),DataTypes.BYTES()}).field(\"len\",DataTypes.INT(),\"CHAR_LENGTH(`s`)\").build();\n  assertEquals(expectedSchema,catalogBaseTable.getSchema());\n  tablePath=new ObjectPath(db1,\"generic3\");\n  hiveTable=org.apache.hadoop.hive.ql.metadata.Table.getEmptyTable(tablePath.getDatabaseName(),tablePath.getObjectName());\n  hiveTable.setDbName(tablePath.getDatabaseName());\n  hiveTable.setTableName(tablePath.getObjectName());\n  setLegacyGeneric(hiveTable.getParameters());\n  hiveTable.setTableName(tablePath.getObjectName());\n  hiveTable.getParameters().put(\"flink.generic.table.schema.0.name\",\"dt\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.0.data-type\",\"DATE\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.1.name\",\"t\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.1.data-type\",\"TIME(0)\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.2.name\",\"ts\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.2.data-type\",\"TIMESTAMP(3)\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.3.name\",\"tstz\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.3.data-type\",\"TIMESTAMP(6) WITH LOCAL TIME ZONE\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.watermark.0.rowtime\",\"ts\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.watermark.0.strategy.data-type\",\"TIMESTAMP(3)\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.watermark.0.strategy.expr\",\"ts\");\n  ((HiveCatalog)catalog).client.createTable(hiveTable);\n  catalogBaseTable=catalog.getTable(tablePath);\n  expectedSchema=TableSchema.builder().fields(new String[]{\"dt\",\"t\",\"ts\",\"tstz\"},new DataType[]{DataTypes.DATE(),DataTypes.TIME(),DataTypes.TIMESTAMP(3),DataTypes.TIMESTAMP_WITH_LOCAL_TIME_ZONE()}).watermark(\"ts\",\"ts\",DataTypes.TIMESTAMP(3)).build();\n  assertEquals(expectedSchema,catalogBaseTable.getSchema());\n  tablePath=new ObjectPath(db1,\"generic4\");\n  hiveTable=org.apache.hadoop.hive.ql.metadata.Table.getEmptyTable(tablePath.getDatabaseName(),tablePath.getObjectName());\n  hiveTable.setDbName(tablePath.getDatabaseName());\n  hiveTable.setTableName(tablePath.getObjectName());\n  setLegacyGeneric(hiveTable.getParameters());\n  hiveTable.setTableName(tablePath.getObjectName());\n  hiveTable.getParameters().put(\"flink.generic.table.schema.0.name\",\"a\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.0.data-type\",\"ARRAY<INT>\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.1.name\",\"m\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.1.data-type\",\"MAP<BIGINT, TIMESTAMP(6)>\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.2.name\",\"mul\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.2.data-type\",\"MULTISET<DOUBLE>\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.3.name\",\"r\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.3.data-type\",\"ROW<`f1` INT, `f2` VARCHAR(2147483647)>\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.4.name\",\"b\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.4.data-type\",\"BOOLEAN\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.5.name\",\"ts\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.5.data-type\",\"TIMESTAMP(3)\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.watermark.0.rowtime\",\"ts\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.watermark.0.strategy.data-type\",\"TIMESTAMP(3)\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.watermark.0.strategy.expr\",\"`ts` - INTERVAL '5' SECOND\");\n  ((HiveCatalog)catalog).client.createTable(hiveTable);\n  catalogBaseTable=catalog.getTable(tablePath);\n  expectedSchema=TableSchema.builder().fields(new String[]{\"a\",\"m\",\"mul\",\"r\",\"b\",\"ts\"},new DataType[]{DataTypes.ARRAY(DataTypes.INT()),DataTypes.MAP(DataTypes.BIGINT(),DataTypes.TIMESTAMP()),DataTypes.MULTISET(DataTypes.DOUBLE()),DataTypes.ROW(DataTypes.FIELD(\"f1\",DataTypes.INT()),DataTypes.FIELD(\"f2\",DataTypes.STRING())),DataTypes.BOOLEAN(),DataTypes.TIMESTAMP(3)}).watermark(\"ts\",\"`ts` - INTERVAL '5' SECOND\",DataTypes.TIMESTAMP(3)).build();\n  assertEquals(expectedSchema,catalogBaseTable.getSchema());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1055,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12728,
        "startLineNumber" : 94,
        "startColumnNumber" : 8,
        "endLineNumber" : 299,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  ObjectPath tablePath=new ObjectPath(db1,\"generic1\");\n  Table hiveTable=org.apache.hadoop.hive.ql.metadata.Table.getEmptyTable(tablePath.getDatabaseName(),tablePath.getObjectName());\n  hiveTable.setDbName(tablePath.getDatabaseName());\n  hiveTable.setTableName(tablePath.getObjectName());\n  setLegacyGeneric(hiveTable.getParameters());\n  hiveTable.getParameters().put(\"flink.generic.table.schema.0.name\",\"ti\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.0.data-type\",\"TINYINT\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.1.name\",\"si\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.1.data-type\",\"SMALLINT\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.2.name\",\"i\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.2.data-type\",\"INT\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.3.name\",\"bi\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.3.data-type\",\"BIGINT\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.4.name\",\"f\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.4.data-type\",\"FLOAT\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.5.name\",\"d\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.5.data-type\",\"DOUBLE\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.6.name\",\"de\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.6.data-type\",\"DECIMAL(10, 5)\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.7.name\",\"cost\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.7.expr\",\"`d` * `bi`\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.7.data-type\",\"DOUBLE\");\n  ((HiveCatalog)catalog).client.createTable(hiveTable);\n  CatalogBaseTable catalogBaseTable=catalog.getTable(tablePath);\n  assertFalse(HiveCatalog.isHiveTable(catalogBaseTable.getOptions()));\n  TableSchema expectedSchema=TableSchema.builder().fields(new String[]{\"ti\",\"si\",\"i\",\"bi\",\"f\",\"d\",\"de\"},new DataType[]{DataTypes.TINYINT(),DataTypes.SMALLINT(),DataTypes.INT(),DataTypes.BIGINT(),DataTypes.FLOAT(),DataTypes.DOUBLE(),DataTypes.DECIMAL(10,5)}).field(\"cost\",DataTypes.DOUBLE(),\"`d` * `bi`\").build();\n  assertEquals(expectedSchema,catalogBaseTable.getSchema());\n  tablePath=new ObjectPath(db1,\"generic2\");\n  hiveTable=org.apache.hadoop.hive.ql.metadata.Table.getEmptyTable(tablePath.getDatabaseName(),tablePath.getObjectName());\n  hiveTable.setDbName(tablePath.getDatabaseName());\n  hiveTable.setTableName(tablePath.getObjectName());\n  setLegacyGeneric(hiveTable.getParameters());\n  hiveTable.setTableName(tablePath.getObjectName());\n  hiveTable.getParameters().put(\"flink.generic.table.schema.0.name\",\"c\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.0.data-type\",\"CHAR(265)\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.1.name\",\"vc\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.1.data-type\",\"VARCHAR(65536)\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.2.name\",\"s\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.2.data-type\",\"VARCHAR(2147483647)\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.3.name\",\"b\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.3.data-type\",\"BINARY(1)\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.4.name\",\"vb\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.4.data-type\",\"VARBINARY(255)\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.5.name\",\"bs\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.5.data-type\",\"VARBINARY(2147483647)\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.6.name\",\"len\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.6.expr\",\"CHAR_LENGTH(`s`)\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.6.data-type\",\"INT\");\n  ((HiveCatalog)catalog).client.createTable(hiveTable);\n  catalogBaseTable=catalog.getTable(tablePath);\n  expectedSchema=TableSchema.builder().fields(new String[]{\"c\",\"vc\",\"s\",\"b\",\"vb\",\"bs\"},new DataType[]{DataTypes.CHAR(265),DataTypes.VARCHAR(65536),DataTypes.STRING(),DataTypes.BINARY(1),DataTypes.VARBINARY(255),DataTypes.BYTES()}).field(\"len\",DataTypes.INT(),\"CHAR_LENGTH(`s`)\").build();\n  assertEquals(expectedSchema,catalogBaseTable.getSchema());\n  tablePath=new ObjectPath(db1,\"generic3\");\n  hiveTable=org.apache.hadoop.hive.ql.metadata.Table.getEmptyTable(tablePath.getDatabaseName(),tablePath.getObjectName());\n  hiveTable.setDbName(tablePath.getDatabaseName());\n  hiveTable.setTableName(tablePath.getObjectName());\n  setLegacyGeneric(hiveTable.getParameters());\n  hiveTable.setTableName(tablePath.getObjectName());\n  hiveTable.getParameters().put(\"flink.generic.table.schema.0.name\",\"dt\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.0.data-type\",\"DATE\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.1.name\",\"t\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.1.data-type\",\"TIME(0)\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.2.name\",\"ts\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.2.data-type\",\"TIMESTAMP(3)\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.3.name\",\"tstz\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.3.data-type\",\"TIMESTAMP(6) WITH LOCAL TIME ZONE\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.watermark.0.rowtime\",\"ts\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.watermark.0.strategy.data-type\",\"TIMESTAMP(3)\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.watermark.0.strategy.expr\",\"ts\");\n  ((HiveCatalog)catalog).client.createTable(hiveTable);\n  catalogBaseTable=catalog.getTable(tablePath);\n  expectedSchema=TableSchema.builder().fields(new String[]{\"dt\",\"t\",\"ts\",\"tstz\"},new DataType[]{DataTypes.DATE(),DataTypes.TIME(),DataTypes.TIMESTAMP(3),DataTypes.TIMESTAMP_WITH_LOCAL_TIME_ZONE()}).watermark(\"ts\",\"ts\",DataTypes.TIMESTAMP(3)).build();\n  assertEquals(expectedSchema,catalogBaseTable.getSchema());\n  tablePath=new ObjectPath(db1,\"generic4\");\n  hiveTable=org.apache.hadoop.hive.ql.metadata.Table.getEmptyTable(tablePath.getDatabaseName(),tablePath.getObjectName());\n  hiveTable.setDbName(tablePath.getDatabaseName());\n  hiveTable.setTableName(tablePath.getObjectName());\n  setLegacyGeneric(hiveTable.getParameters());\n  hiveTable.setTableName(tablePath.getObjectName());\n  hiveTable.getParameters().put(\"flink.generic.table.schema.0.name\",\"a\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.0.data-type\",\"ARRAY<INT>\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.1.name\",\"m\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.1.data-type\",\"MAP<BIGINT, TIMESTAMP(6)>\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.2.name\",\"mul\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.2.data-type\",\"MULTISET<DOUBLE>\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.3.name\",\"r\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.3.data-type\",\"ROW<`f1` INT, `f2` VARCHAR(2147483647)>\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.4.name\",\"b\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.4.data-type\",\"BOOLEAN\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.5.name\",\"ts\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.5.data-type\",\"TIMESTAMP(3)\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.watermark.0.rowtime\",\"ts\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.watermark.0.strategy.data-type\",\"TIMESTAMP(3)\");\n  hiveTable.getParameters().put(\"flink.generic.table.schema.watermark.0.strategy.expr\",\"`ts` - INTERVAL '5' SECOND\");\n  ((HiveCatalog)catalog).client.createTable(hiveTable);\n  catalogBaseTable=catalog.getTable(tablePath);\n  expectedSchema=TableSchema.builder().fields(new String[]{\"a\",\"m\",\"mul\",\"r\",\"b\",\"ts\"},new DataType[]{DataTypes.ARRAY(DataTypes.INT()),DataTypes.MAP(DataTypes.BIGINT(),DataTypes.TIMESTAMP()),DataTypes.MULTISET(DataTypes.DOUBLE()),DataTypes.ROW(DataTypes.FIELD(\"f1\",DataTypes.INT()),DataTypes.FIELD(\"f2\",DataTypes.STRING())),DataTypes.BOOLEAN(),DataTypes.TIMESTAMP(3)}).watermark(\"ts\",\"`ts` - INTERVAL '5' SECOND\",DataTypes.TIMESTAMP(3)).build();\n  assertEquals(expectedSchema,catalogBaseTable.getSchema());\n}\n  finally {\n  catalog.dropDatabase(db1,true,true);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 1064,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 12800,
        "startLineNumber" : 92,
        "startColumnNumber" : 64,
        "endLineNumber" : 300,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  catalog.createDatabase(db1,createDb(),false);\n  try {\n    ObjectPath tablePath=new ObjectPath(db1,\"generic1\");\n    Table hiveTable=org.apache.hadoop.hive.ql.metadata.Table.getEmptyTable(tablePath.getDatabaseName(),tablePath.getObjectName());\n    hiveTable.setDbName(tablePath.getDatabaseName());\n    hiveTable.setTableName(tablePath.getObjectName());\n    setLegacyGeneric(hiveTable.getParameters());\n    hiveTable.getParameters().put(\"flink.generic.table.schema.0.name\",\"ti\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.0.data-type\",\"TINYINT\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.1.name\",\"si\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.1.data-type\",\"SMALLINT\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.2.name\",\"i\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.2.data-type\",\"INT\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.3.name\",\"bi\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.3.data-type\",\"BIGINT\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.4.name\",\"f\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.4.data-type\",\"FLOAT\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.5.name\",\"d\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.5.data-type\",\"DOUBLE\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.6.name\",\"de\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.6.data-type\",\"DECIMAL(10, 5)\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.7.name\",\"cost\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.7.expr\",\"`d` * `bi`\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.7.data-type\",\"DOUBLE\");\n    ((HiveCatalog)catalog).client.createTable(hiveTable);\n    CatalogBaseTable catalogBaseTable=catalog.getTable(tablePath);\n    assertFalse(HiveCatalog.isHiveTable(catalogBaseTable.getOptions()));\n    TableSchema expectedSchema=TableSchema.builder().fields(new String[]{\"ti\",\"si\",\"i\",\"bi\",\"f\",\"d\",\"de\"},new DataType[]{DataTypes.TINYINT(),DataTypes.SMALLINT(),DataTypes.INT(),DataTypes.BIGINT(),DataTypes.FLOAT(),DataTypes.DOUBLE(),DataTypes.DECIMAL(10,5)}).field(\"cost\",DataTypes.DOUBLE(),\"`d` * `bi`\").build();\n    assertEquals(expectedSchema,catalogBaseTable.getSchema());\n    tablePath=new ObjectPath(db1,\"generic2\");\n    hiveTable=org.apache.hadoop.hive.ql.metadata.Table.getEmptyTable(tablePath.getDatabaseName(),tablePath.getObjectName());\n    hiveTable.setDbName(tablePath.getDatabaseName());\n    hiveTable.setTableName(tablePath.getObjectName());\n    setLegacyGeneric(hiveTable.getParameters());\n    hiveTable.setTableName(tablePath.getObjectName());\n    hiveTable.getParameters().put(\"flink.generic.table.schema.0.name\",\"c\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.0.data-type\",\"CHAR(265)\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.1.name\",\"vc\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.1.data-type\",\"VARCHAR(65536)\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.2.name\",\"s\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.2.data-type\",\"VARCHAR(2147483647)\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.3.name\",\"b\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.3.data-type\",\"BINARY(1)\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.4.name\",\"vb\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.4.data-type\",\"VARBINARY(255)\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.5.name\",\"bs\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.5.data-type\",\"VARBINARY(2147483647)\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.6.name\",\"len\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.6.expr\",\"CHAR_LENGTH(`s`)\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.6.data-type\",\"INT\");\n    ((HiveCatalog)catalog).client.createTable(hiveTable);\n    catalogBaseTable=catalog.getTable(tablePath);\n    expectedSchema=TableSchema.builder().fields(new String[]{\"c\",\"vc\",\"s\",\"b\",\"vb\",\"bs\"},new DataType[]{DataTypes.CHAR(265),DataTypes.VARCHAR(65536),DataTypes.STRING(),DataTypes.BINARY(1),DataTypes.VARBINARY(255),DataTypes.BYTES()}).field(\"len\",DataTypes.INT(),\"CHAR_LENGTH(`s`)\").build();\n    assertEquals(expectedSchema,catalogBaseTable.getSchema());\n    tablePath=new ObjectPath(db1,\"generic3\");\n    hiveTable=org.apache.hadoop.hive.ql.metadata.Table.getEmptyTable(tablePath.getDatabaseName(),tablePath.getObjectName());\n    hiveTable.setDbName(tablePath.getDatabaseName());\n    hiveTable.setTableName(tablePath.getObjectName());\n    setLegacyGeneric(hiveTable.getParameters());\n    hiveTable.setTableName(tablePath.getObjectName());\n    hiveTable.getParameters().put(\"flink.generic.table.schema.0.name\",\"dt\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.0.data-type\",\"DATE\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.1.name\",\"t\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.1.data-type\",\"TIME(0)\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.2.name\",\"ts\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.2.data-type\",\"TIMESTAMP(3)\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.3.name\",\"tstz\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.3.data-type\",\"TIMESTAMP(6) WITH LOCAL TIME ZONE\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.watermark.0.rowtime\",\"ts\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.watermark.0.strategy.data-type\",\"TIMESTAMP(3)\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.watermark.0.strategy.expr\",\"ts\");\n    ((HiveCatalog)catalog).client.createTable(hiveTable);\n    catalogBaseTable=catalog.getTable(tablePath);\n    expectedSchema=TableSchema.builder().fields(new String[]{\"dt\",\"t\",\"ts\",\"tstz\"},new DataType[]{DataTypes.DATE(),DataTypes.TIME(),DataTypes.TIMESTAMP(3),DataTypes.TIMESTAMP_WITH_LOCAL_TIME_ZONE()}).watermark(\"ts\",\"ts\",DataTypes.TIMESTAMP(3)).build();\n    assertEquals(expectedSchema,catalogBaseTable.getSchema());\n    tablePath=new ObjectPath(db1,\"generic4\");\n    hiveTable=org.apache.hadoop.hive.ql.metadata.Table.getEmptyTable(tablePath.getDatabaseName(),tablePath.getObjectName());\n    hiveTable.setDbName(tablePath.getDatabaseName());\n    hiveTable.setTableName(tablePath.getObjectName());\n    setLegacyGeneric(hiveTable.getParameters());\n    hiveTable.setTableName(tablePath.getObjectName());\n    hiveTable.getParameters().put(\"flink.generic.table.schema.0.name\",\"a\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.0.data-type\",\"ARRAY<INT>\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.1.name\",\"m\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.1.data-type\",\"MAP<BIGINT, TIMESTAMP(6)>\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.2.name\",\"mul\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.2.data-type\",\"MULTISET<DOUBLE>\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.3.name\",\"r\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.3.data-type\",\"ROW<`f1` INT, `f2` VARCHAR(2147483647)>\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.4.name\",\"b\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.4.data-type\",\"BOOLEAN\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.5.name\",\"ts\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.5.data-type\",\"TIMESTAMP(3)\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.watermark.0.rowtime\",\"ts\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.watermark.0.strategy.data-type\",\"TIMESTAMP(3)\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.watermark.0.strategy.expr\",\"`ts` - INTERVAL '5' SECOND\");\n    ((HiveCatalog)catalog).client.createTable(hiveTable);\n    catalogBaseTable=catalog.getTable(tablePath);\n    expectedSchema=TableSchema.builder().fields(new String[]{\"a\",\"m\",\"mul\",\"r\",\"b\",\"ts\"},new DataType[]{DataTypes.ARRAY(DataTypes.INT()),DataTypes.MAP(DataTypes.BIGINT(),DataTypes.TIMESTAMP()),DataTypes.MULTISET(DataTypes.DOUBLE()),DataTypes.ROW(DataTypes.FIELD(\"f1\",DataTypes.INT()),DataTypes.FIELD(\"f2\",DataTypes.STRING())),DataTypes.BOOLEAN(),DataTypes.TIMESTAMP(3)}).watermark(\"ts\",\"`ts` - INTERVAL '5' SECOND\",DataTypes.TIMESTAMP(3)).build();\n    assertEquals(expectedSchema,catalogBaseTable.getSchema());\n  }\n  finally {\n    catalog.dropDatabase(db1,true,true);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1073,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 12957,
        "startLineNumber" : 90,
        "startColumnNumber" : 4,
        "endLineNumber" : 300,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testTableSchemaCompatibility() throws Exception {\n  catalog.createDatabase(db1,createDb(),false);\n  try {\n    ObjectPath tablePath=new ObjectPath(db1,\"generic1\");\n    Table hiveTable=org.apache.hadoop.hive.ql.metadata.Table.getEmptyTable(tablePath.getDatabaseName(),tablePath.getObjectName());\n    hiveTable.setDbName(tablePath.getDatabaseName());\n    hiveTable.setTableName(tablePath.getObjectName());\n    setLegacyGeneric(hiveTable.getParameters());\n    hiveTable.getParameters().put(\"flink.generic.table.schema.0.name\",\"ti\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.0.data-type\",\"TINYINT\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.1.name\",\"si\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.1.data-type\",\"SMALLINT\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.2.name\",\"i\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.2.data-type\",\"INT\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.3.name\",\"bi\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.3.data-type\",\"BIGINT\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.4.name\",\"f\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.4.data-type\",\"FLOAT\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.5.name\",\"d\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.5.data-type\",\"DOUBLE\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.6.name\",\"de\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.6.data-type\",\"DECIMAL(10, 5)\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.7.name\",\"cost\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.7.expr\",\"`d` * `bi`\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.7.data-type\",\"DOUBLE\");\n    ((HiveCatalog)catalog).client.createTable(hiveTable);\n    CatalogBaseTable catalogBaseTable=catalog.getTable(tablePath);\n    assertFalse(HiveCatalog.isHiveTable(catalogBaseTable.getOptions()));\n    TableSchema expectedSchema=TableSchema.builder().fields(new String[]{\"ti\",\"si\",\"i\",\"bi\",\"f\",\"d\",\"de\"},new DataType[]{DataTypes.TINYINT(),DataTypes.SMALLINT(),DataTypes.INT(),DataTypes.BIGINT(),DataTypes.FLOAT(),DataTypes.DOUBLE(),DataTypes.DECIMAL(10,5)}).field(\"cost\",DataTypes.DOUBLE(),\"`d` * `bi`\").build();\n    assertEquals(expectedSchema,catalogBaseTable.getSchema());\n    tablePath=new ObjectPath(db1,\"generic2\");\n    hiveTable=org.apache.hadoop.hive.ql.metadata.Table.getEmptyTable(tablePath.getDatabaseName(),tablePath.getObjectName());\n    hiveTable.setDbName(tablePath.getDatabaseName());\n    hiveTable.setTableName(tablePath.getObjectName());\n    setLegacyGeneric(hiveTable.getParameters());\n    hiveTable.setTableName(tablePath.getObjectName());\n    hiveTable.getParameters().put(\"flink.generic.table.schema.0.name\",\"c\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.0.data-type\",\"CHAR(265)\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.1.name\",\"vc\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.1.data-type\",\"VARCHAR(65536)\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.2.name\",\"s\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.2.data-type\",\"VARCHAR(2147483647)\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.3.name\",\"b\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.3.data-type\",\"BINARY(1)\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.4.name\",\"vb\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.4.data-type\",\"VARBINARY(255)\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.5.name\",\"bs\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.5.data-type\",\"VARBINARY(2147483647)\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.6.name\",\"len\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.6.expr\",\"CHAR_LENGTH(`s`)\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.6.data-type\",\"INT\");\n    ((HiveCatalog)catalog).client.createTable(hiveTable);\n    catalogBaseTable=catalog.getTable(tablePath);\n    expectedSchema=TableSchema.builder().fields(new String[]{\"c\",\"vc\",\"s\",\"b\",\"vb\",\"bs\"},new DataType[]{DataTypes.CHAR(265),DataTypes.VARCHAR(65536),DataTypes.STRING(),DataTypes.BINARY(1),DataTypes.VARBINARY(255),DataTypes.BYTES()}).field(\"len\",DataTypes.INT(),\"CHAR_LENGTH(`s`)\").build();\n    assertEquals(expectedSchema,catalogBaseTable.getSchema());\n    tablePath=new ObjectPath(db1,\"generic3\");\n    hiveTable=org.apache.hadoop.hive.ql.metadata.Table.getEmptyTable(tablePath.getDatabaseName(),tablePath.getObjectName());\n    hiveTable.setDbName(tablePath.getDatabaseName());\n    hiveTable.setTableName(tablePath.getObjectName());\n    setLegacyGeneric(hiveTable.getParameters());\n    hiveTable.setTableName(tablePath.getObjectName());\n    hiveTable.getParameters().put(\"flink.generic.table.schema.0.name\",\"dt\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.0.data-type\",\"DATE\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.1.name\",\"t\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.1.data-type\",\"TIME(0)\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.2.name\",\"ts\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.2.data-type\",\"TIMESTAMP(3)\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.3.name\",\"tstz\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.3.data-type\",\"TIMESTAMP(6) WITH LOCAL TIME ZONE\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.watermark.0.rowtime\",\"ts\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.watermark.0.strategy.data-type\",\"TIMESTAMP(3)\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.watermark.0.strategy.expr\",\"ts\");\n    ((HiveCatalog)catalog).client.createTable(hiveTable);\n    catalogBaseTable=catalog.getTable(tablePath);\n    expectedSchema=TableSchema.builder().fields(new String[]{\"dt\",\"t\",\"ts\",\"tstz\"},new DataType[]{DataTypes.DATE(),DataTypes.TIME(),DataTypes.TIMESTAMP(3),DataTypes.TIMESTAMP_WITH_LOCAL_TIME_ZONE()}).watermark(\"ts\",\"ts\",DataTypes.TIMESTAMP(3)).build();\n    assertEquals(expectedSchema,catalogBaseTable.getSchema());\n    tablePath=new ObjectPath(db1,\"generic4\");\n    hiveTable=org.apache.hadoop.hive.ql.metadata.Table.getEmptyTable(tablePath.getDatabaseName(),tablePath.getObjectName());\n    hiveTable.setDbName(tablePath.getDatabaseName());\n    hiveTable.setTableName(tablePath.getObjectName());\n    setLegacyGeneric(hiveTable.getParameters());\n    hiveTable.setTableName(tablePath.getObjectName());\n    hiveTable.getParameters().put(\"flink.generic.table.schema.0.name\",\"a\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.0.data-type\",\"ARRAY<INT>\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.1.name\",\"m\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.1.data-type\",\"MAP<BIGINT, TIMESTAMP(6)>\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.2.name\",\"mul\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.2.data-type\",\"MULTISET<DOUBLE>\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.3.name\",\"r\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.3.data-type\",\"ROW<`f1` INT, `f2` VARCHAR(2147483647)>\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.4.name\",\"b\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.4.data-type\",\"BOOLEAN\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.5.name\",\"ts\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.5.data-type\",\"TIMESTAMP(3)\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.watermark.0.rowtime\",\"ts\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.watermark.0.strategy.data-type\",\"TIMESTAMP(3)\");\n    hiveTable.getParameters().put(\"flink.generic.table.schema.watermark.0.strategy.expr\",\"`ts` - INTERVAL '5' SECOND\");\n    ((HiveCatalog)catalog).client.createTable(hiveTable);\n    catalogBaseTable=catalog.getTable(tablePath);\n    expectedSchema=TableSchema.builder().fields(new String[]{\"a\",\"m\",\"mul\",\"r\",\"b\",\"ts\"},new DataType[]{DataTypes.ARRAY(DataTypes.INT()),DataTypes.MAP(DataTypes.BIGINT(),DataTypes.TIMESTAMP()),DataTypes.MULTISET(DataTypes.DOUBLE()),DataTypes.ROW(DataTypes.FIELD(\"f1\",DataTypes.INT()),DataTypes.FIELD(\"f2\",DataTypes.STRING())),DataTypes.BOOLEAN(),DataTypes.TIMESTAMP(3)}).watermark(\"ts\",\"`ts` - INTERVAL '5' SECOND\",DataTypes.TIMESTAMP(3)).build();\n    assertEquals(expectedSchema,catalogBaseTable.getSchema());\n  }\n  finally {\n    catalog.dropDatabase(db1,true,true);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1081,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayCreation,initializer]",
      "nodePosition" : {
        "charLength" : 411,
        "startLineNumber" : 180,
        "startColumnNumber" : 51,
        "endLineNumber" : 187,
        "endColumnNumber" : 37
      },
      "nodeContext" : "{DataTypes.CHAR(265),DataTypes.VARCHAR(65536),DataTypes.STRING(),DataTypes.BINARY(1),DataTypes.VARBINARY(255),DataTypes.BYTES()}",
      "nodeType" : "ArrayInitializer",
      "astNodeNumber" : 23,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "org.apache.flink.table.types.DataType"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 182,
    "startColumnNumber" : 40,
    "endLineNumber" : 182,
    "endColumnNumber" : 64
  } ],
  "layoutRelationDataList" : [ ]
}