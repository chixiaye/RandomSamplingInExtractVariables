{
  "id" : 277,
  "expression" : "insertRecord(\"fruit\",1L,33,1L)",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-table/flink-table-runtime/src/test/java/org/apache/flink/table/runtime/operators/rank/TopNFunctionTestBase.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "insertRecord(\"fruit\",1L,33,1L)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 298,
      "startColumnNumber" : 27,
      "endLineNumber" : 298,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 6,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 298,
        "startColumnNumber" : 8,
        "endLineNumber" : 298,
        "endColumnNumber" : 61
      },
      "nodeContext" : "expectedOutput.add(insertRecord(\"fruit\",1L,33,1L))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 298,
        "startColumnNumber" : 8,
        "endLineNumber" : 298,
        "endColumnNumber" : 62
      },
      "nodeContext" : "expectedOutput.add(insertRecord(\"fruit\",1L,33,1L));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1466,
        "startLineNumber" : 278,
        "startColumnNumber" : 77,
        "endLineNumber" : 303,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  AbstractTopNFunction func=createFunction(RankType.ROW_NUMBER,new VariableRankRange(1),true,true);\n  OneInputStreamOperatorTestHarness<RowData,RowData> testHarness=createTestHarness(func);\n  testHarness.open();\n  testHarness.processElement(insertRecord(\"book\",2L,12));\n  testHarness.processElement(insertRecord(\"book\",2L,19));\n  testHarness.processElement(insertRecord(\"book\",2L,11));\n  testHarness.processElement(insertRecord(\"fruit\",1L,33));\n  testHarness.processElement(insertRecord(\"fruit\",1L,44));\n  testHarness.processElement(insertRecord(\"fruit\",1L,22));\n  testHarness.close();\n  List<Object> expectedOutput=new ArrayList<>();\n  expectedOutput.add(insertRecord(\"book\",2L,12,1L));\n  expectedOutput.add(insertRecord(\"book\",2L,19,2L));\n  expectedOutput.add(updateBeforeRecord(\"book\",2L,12,1L));\n  expectedOutput.add(updateAfterRecord(\"book\",2L,11,1L));\n  expectedOutput.add(updateBeforeRecord(\"book\",2L,19,2L));\n  expectedOutput.add(updateAfterRecord(\"book\",2L,12,2L));\n  expectedOutput.add(insertRecord(\"fruit\",1L,33,1L));\n  expectedOutput.add(updateBeforeRecord(\"fruit\",1L,33,1L));\n  expectedOutput.add(updateAfterRecord(\"fruit\",1L,22,1L));\n  assertorWithRowNumber.assertOutputEquals(\"output wrong.\",expectedOutput,testHarness.getOutput());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 203,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1549,
        "startLineNumber" : 277,
        "startColumnNumber" : 4,
        "endLineNumber" : 303,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testOutputRankNumberWithVariableRankRange() throws Exception {\n  AbstractTopNFunction func=createFunction(RankType.ROW_NUMBER,new VariableRankRange(1),true,true);\n  OneInputStreamOperatorTestHarness<RowData,RowData> testHarness=createTestHarness(func);\n  testHarness.open();\n  testHarness.processElement(insertRecord(\"book\",2L,12));\n  testHarness.processElement(insertRecord(\"book\",2L,19));\n  testHarness.processElement(insertRecord(\"book\",2L,11));\n  testHarness.processElement(insertRecord(\"fruit\",1L,33));\n  testHarness.processElement(insertRecord(\"fruit\",1L,44));\n  testHarness.processElement(insertRecord(\"fruit\",1L,22));\n  testHarness.close();\n  List<Object> expectedOutput=new ArrayList<>();\n  expectedOutput.add(insertRecord(\"book\",2L,12,1L));\n  expectedOutput.add(insertRecord(\"book\",2L,19,2L));\n  expectedOutput.add(updateBeforeRecord(\"book\",2L,12,1L));\n  expectedOutput.add(updateAfterRecord(\"book\",2L,11,1L));\n  expectedOutput.add(updateBeforeRecord(\"book\",2L,19,2L));\n  expectedOutput.add(updateAfterRecord(\"book\",2L,12,2L));\n  expectedOutput.add(insertRecord(\"fruit\",1L,33,1L));\n  expectedOutput.add(updateBeforeRecord(\"fruit\",1L,33,1L));\n  expectedOutput.add(updateAfterRecord(\"fruit\",1L,22,1L));\n  assertorWithRowNumber.assertOutputEquals(\"output wrong.\",expectedOutput,testHarness.getOutput());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 211,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 298,
        "startColumnNumber" : 8,
        "endLineNumber" : 298,
        "endColumnNumber" : 62
      },
      "nodeContext" : "expectedOutput.add(insertRecord(\"fruit\",1L,33,1L));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "org.apache.flink.streaming.runtime.streamrecord.StreamRecord<org.apache.flink.table.data.RowData>"
  } ],
  "positionList" : [ {
    "charLength" : 33,
    "startLineNumber" : 298,
    "startColumnNumber" : 27,
    "endLineNumber" : 298,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ ]
}