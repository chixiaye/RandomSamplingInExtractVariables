{
  "id" : 155,
  "expression" : "treeMaker",
  "projectName" : "projectlombok@lombok",
  "commitID" : "25def866b50860715ee7c315c678b8c3d1ba9b56",
  "filePath" : "/src/core/lombok/javac/handlers/HandleGetter.java",
  "occurrences" : 7,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "treeMaker",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 225,
      "startColumnNumber" : 37,
      "endLineNumber" : 225,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 225,
        "startColumnNumber" : 28,
        "endLineNumber" : 225,
        "endColumnNumber" : 58
      },
      "nodeContext" : "copyType(treeMaker,fieldNode)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 225,
        "startColumnNumber" : 15,
        "endLineNumber" : 225,
        "endColumnNumber" : 58
      },
      "nodeContext" : "methodType=copyType(treeMaker,fieldNode)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 225,
        "startColumnNumber" : 2,
        "endLineNumber" : 225,
        "endColumnNumber" : 59
      },
      "nodeContext" : "JCExpression methodType=copyType(treeMaker,fieldNode);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1678,
        "startLineNumber" : 221,
        "startColumnNumber" : 115,
        "endLineNumber" : 261,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  JCVariableDecl fieldNode=(JCVariableDecl)field.get();\n  JCExpression methodType=copyType(treeMaker,fieldNode);\n  List<JCStatement> statements;\n  JCTree toClearOfMarkers=null;\n  if (lazy) {\n    toClearOfMarkers=fieldNode.init;\n    statements=createLazyGetterBody(treeMaker,field,source);\n  }\n else {\n    statements=createSimpleGetterBody(treeMaker,field);\n  }\n  JCBlock methodBody=treeMaker.Block(0,statements);\n  Name methodName=field.toName(toGetterName(field));\n  List<JCTypeParameter> methodGenericParams=List.nil();\n  List<JCVariableDecl> parameters=List.nil();\n  List<JCExpression> throwsClauses=List.nil();\n  JCExpression annotationMethodDefaultValue=null;\n  List<JCAnnotation> nonNulls=findAnnotations(field,TransformationsUtil.NON_NULL_PATTERN);\n  List<JCAnnotation> nullables=findAnnotations(field,TransformationsUtil.NULLABLE_PATTERN);\n  List<JCAnnotation> delegates=findDelegatesAndRemoveFromField(field);\n  List<JCAnnotation> annsOnMethod=nonNulls.appendList(nullables);\n  if (isFieldDeprecated(field)) {\n    annsOnMethod=annsOnMethod.prepend(treeMaker.Annotation(chainDots(field,\"java\",\"lang\",\"Deprecated\"),List.<JCExpression>nil()));\n  }\n  JCMethodDecl decl=recursiveSetGeneratedBy(treeMaker.MethodDef(treeMaker.Modifiers(access,annsOnMethod),methodName,methodType,methodGenericParams,parameters,throwsClauses,methodBody,annotationMethodDefaultValue),source);\n  if (toClearOfMarkers != null)   recursiveSetGeneratedBy(toClearOfMarkers,null);\n  decl.mods.annotations=decl.mods.annotations.appendList(delegates);\n  return decl;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 245,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1792,
        "startLineNumber" : 221,
        "startColumnNumber" : 1,
        "endLineNumber" : 261,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private JCMethodDecl createGetter(long access,JavacNode field,TreeMaker treeMaker,boolean lazy,JCTree source){\n  JCVariableDecl fieldNode=(JCVariableDecl)field.get();\n  JCExpression methodType=copyType(treeMaker,fieldNode);\n  List<JCStatement> statements;\n  JCTree toClearOfMarkers=null;\n  if (lazy) {\n    toClearOfMarkers=fieldNode.init;\n    statements=createLazyGetterBody(treeMaker,field,source);\n  }\n else {\n    statements=createSimpleGetterBody(treeMaker,field);\n  }\n  JCBlock methodBody=treeMaker.Block(0,statements);\n  Name methodName=field.toName(toGetterName(field));\n  List<JCTypeParameter> methodGenericParams=List.nil();\n  List<JCVariableDecl> parameters=List.nil();\n  List<JCExpression> throwsClauses=List.nil();\n  JCExpression annotationMethodDefaultValue=null;\n  List<JCAnnotation> nonNulls=findAnnotations(field,TransformationsUtil.NON_NULL_PATTERN);\n  List<JCAnnotation> nullables=findAnnotations(field,TransformationsUtil.NULLABLE_PATTERN);\n  List<JCAnnotation> delegates=findDelegatesAndRemoveFromField(field);\n  List<JCAnnotation> annsOnMethod=nonNulls.appendList(nullables);\n  if (isFieldDeprecated(field)) {\n    annsOnMethod=annsOnMethod.prepend(treeMaker.Annotation(chainDots(field,\"java\",\"lang\",\"Deprecated\"),List.<JCExpression>nil()));\n  }\n  JCMethodDecl decl=recursiveSetGeneratedBy(treeMaker.MethodDef(treeMaker.Modifiers(access,annsOnMethod),methodName,methodType,methodGenericParams,parameters,throwsClauses,methodBody,annotationMethodDefaultValue),source);\n  if (toClearOfMarkers != null)   recursiveSetGeneratedBy(toClearOfMarkers,null);\n  decl.mods.annotations=decl.mods.annotations.appendList(delegates);\n  return decl;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 268,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 225,
        "startColumnNumber" : 2,
        "endLineNumber" : 225,
        "endColumnNumber" : 59
      },
      "nodeContext" : "JCExpression methodType=copyType(treeMaker,fieldNode);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "lombok.javac.handlers.TreeMaker"
  }, {
    "nodeContext" : "treeMaker",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 231,
      "startColumnNumber" : 37,
      "endLineNumber" : 231,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 231,
        "startColumnNumber" : 16,
        "endLineNumber" : 231,
        "endColumnNumber" : 62
      },
      "nodeContext" : "createLazyGetterBody(treeMaker,field,source)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 231,
        "startColumnNumber" : 3,
        "endLineNumber" : 231,
        "endColumnNumber" : 62
      },
      "nodeContext" : "statements=createLazyGetterBody(treeMaker,field,source)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 231,
        "startColumnNumber" : 3,
        "endLineNumber" : 231,
        "endColumnNumber" : 63
      },
      "nodeContext" : "statements=createLazyGetterBody(treeMaker,field,source);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 229,
        "startColumnNumber" : 12,
        "endLineNumber" : 232,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  toClearOfMarkers=fieldNode.init;\n  statements=createLazyGetterBody(treeMaker,field,source);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 186,
        "startLineNumber" : 229,
        "startColumnNumber" : 2,
        "endLineNumber" : 234,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (lazy) {\n  toClearOfMarkers=fieldNode.init;\n  statements=createLazyGetterBody(treeMaker,field,source);\n}\n else {\n  statements=createSimpleGetterBody(treeMaker,field);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1678,
        "startLineNumber" : 221,
        "startColumnNumber" : 115,
        "endLineNumber" : 261,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  JCVariableDecl fieldNode=(JCVariableDecl)field.get();\n  JCExpression methodType=copyType(treeMaker,fieldNode);\n  List<JCStatement> statements;\n  JCTree toClearOfMarkers=null;\n  if (lazy) {\n    toClearOfMarkers=fieldNode.init;\n    statements=createLazyGetterBody(treeMaker,field,source);\n  }\n else {\n    statements=createSimpleGetterBody(treeMaker,field);\n  }\n  JCBlock methodBody=treeMaker.Block(0,statements);\n  Name methodName=field.toName(toGetterName(field));\n  List<JCTypeParameter> methodGenericParams=List.nil();\n  List<JCVariableDecl> parameters=List.nil();\n  List<JCExpression> throwsClauses=List.nil();\n  JCExpression annotationMethodDefaultValue=null;\n  List<JCAnnotation> nonNulls=findAnnotations(field,TransformationsUtil.NON_NULL_PATTERN);\n  List<JCAnnotation> nullables=findAnnotations(field,TransformationsUtil.NULLABLE_PATTERN);\n  List<JCAnnotation> delegates=findDelegatesAndRemoveFromField(field);\n  List<JCAnnotation> annsOnMethod=nonNulls.appendList(nullables);\n  if (isFieldDeprecated(field)) {\n    annsOnMethod=annsOnMethod.prepend(treeMaker.Annotation(chainDots(field,\"java\",\"lang\",\"Deprecated\"),List.<JCExpression>nil()));\n  }\n  JCMethodDecl decl=recursiveSetGeneratedBy(treeMaker.MethodDef(treeMaker.Modifiers(access,annsOnMethod),methodName,methodType,methodGenericParams,parameters,throwsClauses,methodBody,annotationMethodDefaultValue),source);\n  if (toClearOfMarkers != null)   recursiveSetGeneratedBy(toClearOfMarkers,null);\n  decl.mods.annotations=decl.mods.annotations.appendList(delegates);\n  return decl;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 245,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1792,
        "startLineNumber" : 221,
        "startColumnNumber" : 1,
        "endLineNumber" : 261,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private JCMethodDecl createGetter(long access,JavacNode field,TreeMaker treeMaker,boolean lazy,JCTree source){\n  JCVariableDecl fieldNode=(JCVariableDecl)field.get();\n  JCExpression methodType=copyType(treeMaker,fieldNode);\n  List<JCStatement> statements;\n  JCTree toClearOfMarkers=null;\n  if (lazy) {\n    toClearOfMarkers=fieldNode.init;\n    statements=createLazyGetterBody(treeMaker,field,source);\n  }\n else {\n    statements=createSimpleGetterBody(treeMaker,field);\n  }\n  JCBlock methodBody=treeMaker.Block(0,statements);\n  Name methodName=field.toName(toGetterName(field));\n  List<JCTypeParameter> methodGenericParams=List.nil();\n  List<JCVariableDecl> parameters=List.nil();\n  List<JCExpression> throwsClauses=List.nil();\n  JCExpression annotationMethodDefaultValue=null;\n  List<JCAnnotation> nonNulls=findAnnotations(field,TransformationsUtil.NON_NULL_PATTERN);\n  List<JCAnnotation> nullables=findAnnotations(field,TransformationsUtil.NULLABLE_PATTERN);\n  List<JCAnnotation> delegates=findDelegatesAndRemoveFromField(field);\n  List<JCAnnotation> annsOnMethod=nonNulls.appendList(nullables);\n  if (isFieldDeprecated(field)) {\n    annsOnMethod=annsOnMethod.prepend(treeMaker.Annotation(chainDots(field,\"java\",\"lang\",\"Deprecated\"),List.<JCExpression>nil()));\n  }\n  JCMethodDecl decl=recursiveSetGeneratedBy(treeMaker.MethodDef(treeMaker.Modifiers(access,annsOnMethod),methodName,methodType,methodGenericParams,parameters,throwsClauses,methodBody,annotationMethodDefaultValue),source);\n  if (toClearOfMarkers != null)   recursiveSetGeneratedBy(toClearOfMarkers,null);\n  decl.mods.annotations=decl.mods.annotations.appendList(delegates);\n  return decl;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 268,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 231,
        "startColumnNumber" : 3,
        "endLineNumber" : 231,
        "endColumnNumber" : 63
      },
      "nodeContext" : "statements=createLazyGetterBody(treeMaker,field,source);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "lombok.javac.handlers.TreeMaker"
  }, {
    "nodeContext" : "treeMaker",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 233,
      "startColumnNumber" : 39,
      "endLineNumber" : 233,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 233,
        "startColumnNumber" : 16,
        "endLineNumber" : 233,
        "endColumnNumber" : 56
      },
      "nodeContext" : "createSimpleGetterBody(treeMaker,field)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 233,
        "startColumnNumber" : 3,
        "endLineNumber" : 233,
        "endColumnNumber" : 56
      },
      "nodeContext" : "statements=createSimpleGetterBody(treeMaker,field)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 233,
        "startColumnNumber" : 3,
        "endLineNumber" : 233,
        "endColumnNumber" : 57
      },
      "nodeContext" : "statements=createSimpleGetterBody(treeMaker,field);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 232,
        "startColumnNumber" : 9,
        "endLineNumber" : 234,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  statements=createSimpleGetterBody(treeMaker,field);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 186,
        "startLineNumber" : 229,
        "startColumnNumber" : 2,
        "endLineNumber" : 234,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (lazy) {\n  toClearOfMarkers=fieldNode.init;\n  statements=createLazyGetterBody(treeMaker,field,source);\n}\n else {\n  statements=createSimpleGetterBody(treeMaker,field);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1678,
        "startLineNumber" : 221,
        "startColumnNumber" : 115,
        "endLineNumber" : 261,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  JCVariableDecl fieldNode=(JCVariableDecl)field.get();\n  JCExpression methodType=copyType(treeMaker,fieldNode);\n  List<JCStatement> statements;\n  JCTree toClearOfMarkers=null;\n  if (lazy) {\n    toClearOfMarkers=fieldNode.init;\n    statements=createLazyGetterBody(treeMaker,field,source);\n  }\n else {\n    statements=createSimpleGetterBody(treeMaker,field);\n  }\n  JCBlock methodBody=treeMaker.Block(0,statements);\n  Name methodName=field.toName(toGetterName(field));\n  List<JCTypeParameter> methodGenericParams=List.nil();\n  List<JCVariableDecl> parameters=List.nil();\n  List<JCExpression> throwsClauses=List.nil();\n  JCExpression annotationMethodDefaultValue=null;\n  List<JCAnnotation> nonNulls=findAnnotations(field,TransformationsUtil.NON_NULL_PATTERN);\n  List<JCAnnotation> nullables=findAnnotations(field,TransformationsUtil.NULLABLE_PATTERN);\n  List<JCAnnotation> delegates=findDelegatesAndRemoveFromField(field);\n  List<JCAnnotation> annsOnMethod=nonNulls.appendList(nullables);\n  if (isFieldDeprecated(field)) {\n    annsOnMethod=annsOnMethod.prepend(treeMaker.Annotation(chainDots(field,\"java\",\"lang\",\"Deprecated\"),List.<JCExpression>nil()));\n  }\n  JCMethodDecl decl=recursiveSetGeneratedBy(treeMaker.MethodDef(treeMaker.Modifiers(access,annsOnMethod),methodName,methodType,methodGenericParams,parameters,throwsClauses,methodBody,annotationMethodDefaultValue),source);\n  if (toClearOfMarkers != null)   recursiveSetGeneratedBy(toClearOfMarkers,null);\n  decl.mods.annotations=decl.mods.annotations.appendList(delegates);\n  return decl;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 245,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1792,
        "startLineNumber" : 221,
        "startColumnNumber" : 1,
        "endLineNumber" : 261,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private JCMethodDecl createGetter(long access,JavacNode field,TreeMaker treeMaker,boolean lazy,JCTree source){\n  JCVariableDecl fieldNode=(JCVariableDecl)field.get();\n  JCExpression methodType=copyType(treeMaker,fieldNode);\n  List<JCStatement> statements;\n  JCTree toClearOfMarkers=null;\n  if (lazy) {\n    toClearOfMarkers=fieldNode.init;\n    statements=createLazyGetterBody(treeMaker,field,source);\n  }\n else {\n    statements=createSimpleGetterBody(treeMaker,field);\n  }\n  JCBlock methodBody=treeMaker.Block(0,statements);\n  Name methodName=field.toName(toGetterName(field));\n  List<JCTypeParameter> methodGenericParams=List.nil();\n  List<JCVariableDecl> parameters=List.nil();\n  List<JCExpression> throwsClauses=List.nil();\n  JCExpression annotationMethodDefaultValue=null;\n  List<JCAnnotation> nonNulls=findAnnotations(field,TransformationsUtil.NON_NULL_PATTERN);\n  List<JCAnnotation> nullables=findAnnotations(field,TransformationsUtil.NULLABLE_PATTERN);\n  List<JCAnnotation> delegates=findDelegatesAndRemoveFromField(field);\n  List<JCAnnotation> annsOnMethod=nonNulls.appendList(nullables);\n  if (isFieldDeprecated(field)) {\n    annsOnMethod=annsOnMethod.prepend(treeMaker.Annotation(chainDots(field,\"java\",\"lang\",\"Deprecated\"),List.<JCExpression>nil()));\n  }\n  JCMethodDecl decl=recursiveSetGeneratedBy(treeMaker.MethodDef(treeMaker.Modifiers(access,annsOnMethod),methodName,methodType,methodGenericParams,parameters,throwsClauses,methodBody,annotationMethodDefaultValue),source);\n  if (toClearOfMarkers != null)   recursiveSetGeneratedBy(toClearOfMarkers,null);\n  decl.mods.annotations=decl.mods.annotations.appendList(delegates);\n  return decl;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 268,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 233,
        "startColumnNumber" : 3,
        "endLineNumber" : 233,
        "endColumnNumber" : 57
      },
      "nodeContext" : "statements=createSimpleGetterBody(treeMaker,field);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "lombok.javac.handlers.TreeMaker"
  }, {
    "nodeContext" : "treeMaker",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 236,
      "startColumnNumber" : 23,
      "endLineNumber" : 236,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 236,
        "startColumnNumber" : 23,
        "endLineNumber" : 236,
        "endColumnNumber" : 53
      },
      "nodeContext" : "treeMaker.Block(0,statements)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 236,
        "startColumnNumber" : 10,
        "endLineNumber" : 236,
        "endColumnNumber" : 53
      },
      "nodeContext" : "methodBody=treeMaker.Block(0,statements)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 236,
        "startColumnNumber" : 2,
        "endLineNumber" : 236,
        "endColumnNumber" : 54
      },
      "nodeContext" : "JCBlock methodBody=treeMaker.Block(0,statements);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1678,
        "startLineNumber" : 221,
        "startColumnNumber" : 115,
        "endLineNumber" : 261,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  JCVariableDecl fieldNode=(JCVariableDecl)field.get();\n  JCExpression methodType=copyType(treeMaker,fieldNode);\n  List<JCStatement> statements;\n  JCTree toClearOfMarkers=null;\n  if (lazy) {\n    toClearOfMarkers=fieldNode.init;\n    statements=createLazyGetterBody(treeMaker,field,source);\n  }\n else {\n    statements=createSimpleGetterBody(treeMaker,field);\n  }\n  JCBlock methodBody=treeMaker.Block(0,statements);\n  Name methodName=field.toName(toGetterName(field));\n  List<JCTypeParameter> methodGenericParams=List.nil();\n  List<JCVariableDecl> parameters=List.nil();\n  List<JCExpression> throwsClauses=List.nil();\n  JCExpression annotationMethodDefaultValue=null;\n  List<JCAnnotation> nonNulls=findAnnotations(field,TransformationsUtil.NON_NULL_PATTERN);\n  List<JCAnnotation> nullables=findAnnotations(field,TransformationsUtil.NULLABLE_PATTERN);\n  List<JCAnnotation> delegates=findDelegatesAndRemoveFromField(field);\n  List<JCAnnotation> annsOnMethod=nonNulls.appendList(nullables);\n  if (isFieldDeprecated(field)) {\n    annsOnMethod=annsOnMethod.prepend(treeMaker.Annotation(chainDots(field,\"java\",\"lang\",\"Deprecated\"),List.<JCExpression>nil()));\n  }\n  JCMethodDecl decl=recursiveSetGeneratedBy(treeMaker.MethodDef(treeMaker.Modifiers(access,annsOnMethod),methodName,methodType,methodGenericParams,parameters,throwsClauses,methodBody,annotationMethodDefaultValue),source);\n  if (toClearOfMarkers != null)   recursiveSetGeneratedBy(toClearOfMarkers,null);\n  decl.mods.annotations=decl.mods.annotations.appendList(delegates);\n  return decl;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 245,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1792,
        "startLineNumber" : 221,
        "startColumnNumber" : 1,
        "endLineNumber" : 261,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private JCMethodDecl createGetter(long access,JavacNode field,TreeMaker treeMaker,boolean lazy,JCTree source){\n  JCVariableDecl fieldNode=(JCVariableDecl)field.get();\n  JCExpression methodType=copyType(treeMaker,fieldNode);\n  List<JCStatement> statements;\n  JCTree toClearOfMarkers=null;\n  if (lazy) {\n    toClearOfMarkers=fieldNode.init;\n    statements=createLazyGetterBody(treeMaker,field,source);\n  }\n else {\n    statements=createSimpleGetterBody(treeMaker,field);\n  }\n  JCBlock methodBody=treeMaker.Block(0,statements);\n  Name methodName=field.toName(toGetterName(field));\n  List<JCTypeParameter> methodGenericParams=List.nil();\n  List<JCVariableDecl> parameters=List.nil();\n  List<JCExpression> throwsClauses=List.nil();\n  JCExpression annotationMethodDefaultValue=null;\n  List<JCAnnotation> nonNulls=findAnnotations(field,TransformationsUtil.NON_NULL_PATTERN);\n  List<JCAnnotation> nullables=findAnnotations(field,TransformationsUtil.NULLABLE_PATTERN);\n  List<JCAnnotation> delegates=findDelegatesAndRemoveFromField(field);\n  List<JCAnnotation> annsOnMethod=nonNulls.appendList(nullables);\n  if (isFieldDeprecated(field)) {\n    annsOnMethod=annsOnMethod.prepend(treeMaker.Annotation(chainDots(field,\"java\",\"lang\",\"Deprecated\"),List.<JCExpression>nil()));\n  }\n  JCMethodDecl decl=recursiveSetGeneratedBy(treeMaker.MethodDef(treeMaker.Modifiers(access,annsOnMethod),methodName,methodType,methodGenericParams,parameters,throwsClauses,methodBody,annotationMethodDefaultValue),source);\n  if (toClearOfMarkers != null)   recursiveSetGeneratedBy(toClearOfMarkers,null);\n  decl.mods.annotations=decl.mods.annotations.appendList(delegates);\n  return decl;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 268,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 236,
        "startColumnNumber" : 2,
        "endLineNumber" : 236,
        "endColumnNumber" : 54
      },
      "nodeContext" : "JCBlock methodBody=treeMaker.Block(0,statements);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "lombok.javac.handlers.TreeMaker"
  }, {
    "nodeContext" : "treeMaker",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 251,
      "startColumnNumber" : 39,
      "endLineNumber" : 251,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 251,
        "startColumnNumber" : 39,
        "endLineNumber" : 251,
        "endColumnNumber" : 133
      },
      "nodeContext" : "treeMaker.Annotation(chainDots(field,\"java\",\"lang\",\"Deprecated\"),List.<JCExpression>nil())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 251,
        "startColumnNumber" : 18,
        "endLineNumber" : 251,
        "endColumnNumber" : 134
      },
      "nodeContext" : "annsOnMethod.prepend(treeMaker.Annotation(chainDots(field,\"java\",\"lang\",\"Deprecated\"),List.<JCExpression>nil()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 251,
        "startColumnNumber" : 3,
        "endLineNumber" : 251,
        "endColumnNumber" : 134
      },
      "nodeContext" : "annsOnMethod=annsOnMethod.prepend(treeMaker.Annotation(chainDots(field,\"java\",\"lang\",\"Deprecated\"),List.<JCExpression>nil()))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 251,
        "startColumnNumber" : 3,
        "endLineNumber" : 251,
        "endColumnNumber" : 135
      },
      "nodeContext" : "annsOnMethod=annsOnMethod.prepend(treeMaker.Annotation(chainDots(field,\"java\",\"lang\",\"Deprecated\"),List.<JCExpression>nil()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 250,
        "startColumnNumber" : 32,
        "endLineNumber" : 252,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  annsOnMethod=annsOnMethod.prepend(treeMaker.Annotation(chainDots(field,\"java\",\"lang\",\"Deprecated\"),List.<JCExpression>nil()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 171,
        "startLineNumber" : 250,
        "startColumnNumber" : 2,
        "endLineNumber" : 252,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (isFieldDeprecated(field)) {\n  annsOnMethod=annsOnMethod.prepend(treeMaker.Annotation(chainDots(field,\"java\",\"lang\",\"Deprecated\"),List.<JCExpression>nil()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1678,
        "startLineNumber" : 221,
        "startColumnNumber" : 115,
        "endLineNumber" : 261,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  JCVariableDecl fieldNode=(JCVariableDecl)field.get();\n  JCExpression methodType=copyType(treeMaker,fieldNode);\n  List<JCStatement> statements;\n  JCTree toClearOfMarkers=null;\n  if (lazy) {\n    toClearOfMarkers=fieldNode.init;\n    statements=createLazyGetterBody(treeMaker,field,source);\n  }\n else {\n    statements=createSimpleGetterBody(treeMaker,field);\n  }\n  JCBlock methodBody=treeMaker.Block(0,statements);\n  Name methodName=field.toName(toGetterName(field));\n  List<JCTypeParameter> methodGenericParams=List.nil();\n  List<JCVariableDecl> parameters=List.nil();\n  List<JCExpression> throwsClauses=List.nil();\n  JCExpression annotationMethodDefaultValue=null;\n  List<JCAnnotation> nonNulls=findAnnotations(field,TransformationsUtil.NON_NULL_PATTERN);\n  List<JCAnnotation> nullables=findAnnotations(field,TransformationsUtil.NULLABLE_PATTERN);\n  List<JCAnnotation> delegates=findDelegatesAndRemoveFromField(field);\n  List<JCAnnotation> annsOnMethod=nonNulls.appendList(nullables);\n  if (isFieldDeprecated(field)) {\n    annsOnMethod=annsOnMethod.prepend(treeMaker.Annotation(chainDots(field,\"java\",\"lang\",\"Deprecated\"),List.<JCExpression>nil()));\n  }\n  JCMethodDecl decl=recursiveSetGeneratedBy(treeMaker.MethodDef(treeMaker.Modifiers(access,annsOnMethod),methodName,methodType,methodGenericParams,parameters,throwsClauses,methodBody,annotationMethodDefaultValue),source);\n  if (toClearOfMarkers != null)   recursiveSetGeneratedBy(toClearOfMarkers,null);\n  decl.mods.annotations=decl.mods.annotations.appendList(delegates);\n  return decl;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 245,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1792,
        "startLineNumber" : 221,
        "startColumnNumber" : 1,
        "endLineNumber" : 261,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private JCMethodDecl createGetter(long access,JavacNode field,TreeMaker treeMaker,boolean lazy,JCTree source){\n  JCVariableDecl fieldNode=(JCVariableDecl)field.get();\n  JCExpression methodType=copyType(treeMaker,fieldNode);\n  List<JCStatement> statements;\n  JCTree toClearOfMarkers=null;\n  if (lazy) {\n    toClearOfMarkers=fieldNode.init;\n    statements=createLazyGetterBody(treeMaker,field,source);\n  }\n else {\n    statements=createSimpleGetterBody(treeMaker,field);\n  }\n  JCBlock methodBody=treeMaker.Block(0,statements);\n  Name methodName=field.toName(toGetterName(field));\n  List<JCTypeParameter> methodGenericParams=List.nil();\n  List<JCVariableDecl> parameters=List.nil();\n  List<JCExpression> throwsClauses=List.nil();\n  JCExpression annotationMethodDefaultValue=null;\n  List<JCAnnotation> nonNulls=findAnnotations(field,TransformationsUtil.NON_NULL_PATTERN);\n  List<JCAnnotation> nullables=findAnnotations(field,TransformationsUtil.NULLABLE_PATTERN);\n  List<JCAnnotation> delegates=findDelegatesAndRemoveFromField(field);\n  List<JCAnnotation> annsOnMethod=nonNulls.appendList(nullables);\n  if (isFieldDeprecated(field)) {\n    annsOnMethod=annsOnMethod.prepend(treeMaker.Annotation(chainDots(field,\"java\",\"lang\",\"Deprecated\"),List.<JCExpression>nil()));\n  }\n  JCMethodDecl decl=recursiveSetGeneratedBy(treeMaker.MethodDef(treeMaker.Modifiers(access,annsOnMethod),methodName,methodType,methodGenericParams,parameters,throwsClauses,methodBody,annotationMethodDefaultValue),source);\n  if (toClearOfMarkers != null)   recursiveSetGeneratedBy(toClearOfMarkers,null);\n  decl.mods.annotations=decl.mods.annotations.appendList(delegates);\n  return decl;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 268,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 251,
        "startColumnNumber" : 3,
        "endLineNumber" : 251,
        "endColumnNumber" : 135
      },
      "nodeContext" : "annsOnMethod=annsOnMethod.prepend(treeMaker.Annotation(chainDots(field,\"java\",\"lang\",\"Deprecated\"),List.<JCExpression>nil()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 20,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "lombok.javac.handlers.TreeMaker"
  }, {
    "nodeContext" : "treeMaker",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 254,
      "startColumnNumber" : 46,
      "endLineNumber" : 254,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 180,
        "startLineNumber" : 254,
        "startColumnNumber" : 46,
        "endLineNumber" : 255,
        "endColumnNumber" : 93
      },
      "nodeContext" : "treeMaker.MethodDef(treeMaker.Modifiers(access,annsOnMethod),methodName,methodType,methodGenericParams,parameters,throwsClauses,methodBody,annotationMethodDefaultValue)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 213,
        "startLineNumber" : 254,
        "startColumnNumber" : 22,
        "endLineNumber" : 255,
        "endColumnNumber" : 102
      },
      "nodeContext" : "recursiveSetGeneratedBy(treeMaker.MethodDef(treeMaker.Modifiers(access,annsOnMethod),methodName,methodType,methodGenericParams,parameters,throwsClauses,methodBody,annotationMethodDefaultValue),source)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 220,
        "startLineNumber" : 254,
        "startColumnNumber" : 15,
        "endLineNumber" : 255,
        "endColumnNumber" : 102
      },
      "nodeContext" : "decl=recursiveSetGeneratedBy(treeMaker.MethodDef(treeMaker.Modifiers(access,annsOnMethod),methodName,methodType,methodGenericParams,parameters,throwsClauses,methodBody,annotationMethodDefaultValue),source)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 234,
        "startLineNumber" : 254,
        "startColumnNumber" : 2,
        "endLineNumber" : 255,
        "endColumnNumber" : 103
      },
      "nodeContext" : "JCMethodDecl decl=recursiveSetGeneratedBy(treeMaker.MethodDef(treeMaker.Modifiers(access,annsOnMethod),methodName,methodType,methodGenericParams,parameters,throwsClauses,methodBody,annotationMethodDefaultValue),source);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1678,
        "startLineNumber" : 221,
        "startColumnNumber" : 115,
        "endLineNumber" : 261,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  JCVariableDecl fieldNode=(JCVariableDecl)field.get();\n  JCExpression methodType=copyType(treeMaker,fieldNode);\n  List<JCStatement> statements;\n  JCTree toClearOfMarkers=null;\n  if (lazy) {\n    toClearOfMarkers=fieldNode.init;\n    statements=createLazyGetterBody(treeMaker,field,source);\n  }\n else {\n    statements=createSimpleGetterBody(treeMaker,field);\n  }\n  JCBlock methodBody=treeMaker.Block(0,statements);\n  Name methodName=field.toName(toGetterName(field));\n  List<JCTypeParameter> methodGenericParams=List.nil();\n  List<JCVariableDecl> parameters=List.nil();\n  List<JCExpression> throwsClauses=List.nil();\n  JCExpression annotationMethodDefaultValue=null;\n  List<JCAnnotation> nonNulls=findAnnotations(field,TransformationsUtil.NON_NULL_PATTERN);\n  List<JCAnnotation> nullables=findAnnotations(field,TransformationsUtil.NULLABLE_PATTERN);\n  List<JCAnnotation> delegates=findDelegatesAndRemoveFromField(field);\n  List<JCAnnotation> annsOnMethod=nonNulls.appendList(nullables);\n  if (isFieldDeprecated(field)) {\n    annsOnMethod=annsOnMethod.prepend(treeMaker.Annotation(chainDots(field,\"java\",\"lang\",\"Deprecated\"),List.<JCExpression>nil()));\n  }\n  JCMethodDecl decl=recursiveSetGeneratedBy(treeMaker.MethodDef(treeMaker.Modifiers(access,annsOnMethod),methodName,methodType,methodGenericParams,parameters,throwsClauses,methodBody,annotationMethodDefaultValue),source);\n  if (toClearOfMarkers != null)   recursiveSetGeneratedBy(toClearOfMarkers,null);\n  decl.mods.annotations=decl.mods.annotations.appendList(delegates);\n  return decl;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 245,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1792,
        "startLineNumber" : 221,
        "startColumnNumber" : 1,
        "endLineNumber" : 261,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private JCMethodDecl createGetter(long access,JavacNode field,TreeMaker treeMaker,boolean lazy,JCTree source){\n  JCVariableDecl fieldNode=(JCVariableDecl)field.get();\n  JCExpression methodType=copyType(treeMaker,fieldNode);\n  List<JCStatement> statements;\n  JCTree toClearOfMarkers=null;\n  if (lazy) {\n    toClearOfMarkers=fieldNode.init;\n    statements=createLazyGetterBody(treeMaker,field,source);\n  }\n else {\n    statements=createSimpleGetterBody(treeMaker,field);\n  }\n  JCBlock methodBody=treeMaker.Block(0,statements);\n  Name methodName=field.toName(toGetterName(field));\n  List<JCTypeParameter> methodGenericParams=List.nil();\n  List<JCVariableDecl> parameters=List.nil();\n  List<JCExpression> throwsClauses=List.nil();\n  JCExpression annotationMethodDefaultValue=null;\n  List<JCAnnotation> nonNulls=findAnnotations(field,TransformationsUtil.NON_NULL_PATTERN);\n  List<JCAnnotation> nullables=findAnnotations(field,TransformationsUtil.NULLABLE_PATTERN);\n  List<JCAnnotation> delegates=findDelegatesAndRemoveFromField(field);\n  List<JCAnnotation> annsOnMethod=nonNulls.appendList(nullables);\n  if (isFieldDeprecated(field)) {\n    annsOnMethod=annsOnMethod.prepend(treeMaker.Annotation(chainDots(field,\"java\",\"lang\",\"Deprecated\"),List.<JCExpression>nil()));\n  }\n  JCMethodDecl decl=recursiveSetGeneratedBy(treeMaker.MethodDef(treeMaker.Modifiers(access,annsOnMethod),methodName,methodType,methodGenericParams,parameters,throwsClauses,methodBody,annotationMethodDefaultValue),source);\n  if (toClearOfMarkers != null)   recursiveSetGeneratedBy(toClearOfMarkers,null);\n  decl.mods.annotations=decl.mods.annotations.appendList(delegates);\n  return decl;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 268,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 180,
        "startLineNumber" : 254,
        "startColumnNumber" : 46,
        "endLineNumber" : 255,
        "endColumnNumber" : 93
      },
      "nodeContext" : "treeMaker.MethodDef(treeMaker.Modifiers(access,annsOnMethod),methodName,methodType,methodGenericParams,parameters,throwsClauses,methodBody,annotationMethodDefaultValue)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "lombok.javac.handlers.TreeMaker"
  }, {
    "nodeContext" : "treeMaker",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 254,
      "startColumnNumber" : 66,
      "endLineNumber" : 254,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 254,
        "startColumnNumber" : 66,
        "endLineNumber" : 254,
        "endColumnNumber" : 107
      },
      "nodeContext" : "treeMaker.Modifiers(access,annsOnMethod)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 180,
        "startLineNumber" : 254,
        "startColumnNumber" : 46,
        "endLineNumber" : 255,
        "endColumnNumber" : 93
      },
      "nodeContext" : "treeMaker.MethodDef(treeMaker.Modifiers(access,annsOnMethod),methodName,methodType,methodGenericParams,parameters,throwsClauses,methodBody,annotationMethodDefaultValue)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 213,
        "startLineNumber" : 254,
        "startColumnNumber" : 22,
        "endLineNumber" : 255,
        "endColumnNumber" : 102
      },
      "nodeContext" : "recursiveSetGeneratedBy(treeMaker.MethodDef(treeMaker.Modifiers(access,annsOnMethod),methodName,methodType,methodGenericParams,parameters,throwsClauses,methodBody,annotationMethodDefaultValue),source)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 220,
        "startLineNumber" : 254,
        "startColumnNumber" : 15,
        "endLineNumber" : 255,
        "endColumnNumber" : 102
      },
      "nodeContext" : "decl=recursiveSetGeneratedBy(treeMaker.MethodDef(treeMaker.Modifiers(access,annsOnMethod),methodName,methodType,methodGenericParams,parameters,throwsClauses,methodBody,annotationMethodDefaultValue),source)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 234,
        "startLineNumber" : 254,
        "startColumnNumber" : 2,
        "endLineNumber" : 255,
        "endColumnNumber" : 103
      },
      "nodeContext" : "JCMethodDecl decl=recursiveSetGeneratedBy(treeMaker.MethodDef(treeMaker.Modifiers(access,annsOnMethod),methodName,methodType,methodGenericParams,parameters,throwsClauses,methodBody,annotationMethodDefaultValue),source);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1678,
        "startLineNumber" : 221,
        "startColumnNumber" : 115,
        "endLineNumber" : 261,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  JCVariableDecl fieldNode=(JCVariableDecl)field.get();\n  JCExpression methodType=copyType(treeMaker,fieldNode);\n  List<JCStatement> statements;\n  JCTree toClearOfMarkers=null;\n  if (lazy) {\n    toClearOfMarkers=fieldNode.init;\n    statements=createLazyGetterBody(treeMaker,field,source);\n  }\n else {\n    statements=createSimpleGetterBody(treeMaker,field);\n  }\n  JCBlock methodBody=treeMaker.Block(0,statements);\n  Name methodName=field.toName(toGetterName(field));\n  List<JCTypeParameter> methodGenericParams=List.nil();\n  List<JCVariableDecl> parameters=List.nil();\n  List<JCExpression> throwsClauses=List.nil();\n  JCExpression annotationMethodDefaultValue=null;\n  List<JCAnnotation> nonNulls=findAnnotations(field,TransformationsUtil.NON_NULL_PATTERN);\n  List<JCAnnotation> nullables=findAnnotations(field,TransformationsUtil.NULLABLE_PATTERN);\n  List<JCAnnotation> delegates=findDelegatesAndRemoveFromField(field);\n  List<JCAnnotation> annsOnMethod=nonNulls.appendList(nullables);\n  if (isFieldDeprecated(field)) {\n    annsOnMethod=annsOnMethod.prepend(treeMaker.Annotation(chainDots(field,\"java\",\"lang\",\"Deprecated\"),List.<JCExpression>nil()));\n  }\n  JCMethodDecl decl=recursiveSetGeneratedBy(treeMaker.MethodDef(treeMaker.Modifiers(access,annsOnMethod),methodName,methodType,methodGenericParams,parameters,throwsClauses,methodBody,annotationMethodDefaultValue),source);\n  if (toClearOfMarkers != null)   recursiveSetGeneratedBy(toClearOfMarkers,null);\n  decl.mods.annotations=decl.mods.annotations.appendList(delegates);\n  return decl;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 245,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1792,
        "startLineNumber" : 221,
        "startColumnNumber" : 1,
        "endLineNumber" : 261,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private JCMethodDecl createGetter(long access,JavacNode field,TreeMaker treeMaker,boolean lazy,JCTree source){\n  JCVariableDecl fieldNode=(JCVariableDecl)field.get();\n  JCExpression methodType=copyType(treeMaker,fieldNode);\n  List<JCStatement> statements;\n  JCTree toClearOfMarkers=null;\n  if (lazy) {\n    toClearOfMarkers=fieldNode.init;\n    statements=createLazyGetterBody(treeMaker,field,source);\n  }\n else {\n    statements=createSimpleGetterBody(treeMaker,field);\n  }\n  JCBlock methodBody=treeMaker.Block(0,statements);\n  Name methodName=field.toName(toGetterName(field));\n  List<JCTypeParameter> methodGenericParams=List.nil();\n  List<JCVariableDecl> parameters=List.nil();\n  List<JCExpression> throwsClauses=List.nil();\n  JCExpression annotationMethodDefaultValue=null;\n  List<JCAnnotation> nonNulls=findAnnotations(field,TransformationsUtil.NON_NULL_PATTERN);\n  List<JCAnnotation> nullables=findAnnotations(field,TransformationsUtil.NULLABLE_PATTERN);\n  List<JCAnnotation> delegates=findDelegatesAndRemoveFromField(field);\n  List<JCAnnotation> annsOnMethod=nonNulls.appendList(nullables);\n  if (isFieldDeprecated(field)) {\n    annsOnMethod=annsOnMethod.prepend(treeMaker.Annotation(chainDots(field,\"java\",\"lang\",\"Deprecated\"),List.<JCExpression>nil()));\n  }\n  JCMethodDecl decl=recursiveSetGeneratedBy(treeMaker.MethodDef(treeMaker.Modifiers(access,annsOnMethod),methodName,methodType,methodGenericParams,parameters,throwsClauses,methodBody,annotationMethodDefaultValue),source);\n  if (toClearOfMarkers != null)   recursiveSetGeneratedBy(toClearOfMarkers,null);\n  decl.mods.annotations=decl.mods.annotations.appendList(delegates);\n  return decl;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 268,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 254,
        "startColumnNumber" : 66,
        "endLineNumber" : 254,
        "endColumnNumber" : 107
      },
      "nodeContext" : "treeMaker.Modifiers(access,annsOnMethod)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "lombok.javac.handlers.TreeMaker"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 225,
    "startColumnNumber" : 37,
    "endLineNumber" : 225,
    "endColumnNumber" : 46
  }, {
    "charLength" : 9,
    "startLineNumber" : 231,
    "startColumnNumber" : 37,
    "endLineNumber" : 231,
    "endColumnNumber" : 46
  }, {
    "charLength" : 9,
    "startLineNumber" : 233,
    "startColumnNumber" : 39,
    "endLineNumber" : 233,
    "endColumnNumber" : 48
  }, {
    "charLength" : 9,
    "startLineNumber" : 236,
    "startColumnNumber" : 23,
    "endLineNumber" : 236,
    "endColumnNumber" : 32
  }, {
    "charLength" : 9,
    "startLineNumber" : 251,
    "startColumnNumber" : 39,
    "endLineNumber" : 251,
    "endColumnNumber" : 48
  }, {
    "charLength" : 9,
    "startLineNumber" : 254,
    "startColumnNumber" : 46,
    "endLineNumber" : 254,
    "endColumnNumber" : 55
  }, {
    "charLength" : 9,
    "startLineNumber" : 254,
    "startColumnNumber" : 66,
    "endLineNumber" : 254,
    "endColumnNumber" : 75
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 0
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 1
  } ]
}