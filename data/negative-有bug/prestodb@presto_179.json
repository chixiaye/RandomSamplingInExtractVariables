{
  "id" : 179,
  "expression" : "\"map_filter(map(ARRAY ['s0', 's1', 's2'], ARRAY [ARRAY ['a', 'b'], ARRAY ['a', 'c'], ARRAY ['a', 'b', 'c']]), (k, v) -> k = 's0' OR cardinality(v) = 3)\"",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-main/src/test/java/com/facebook/presto/operator/scalar/TestMapFilterFunction.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"map_filter(map(ARRAY ['s0', 's1', 's2'], ARRAY [ARRAY ['a', 'b'], ARRAY ['a', 'c'], ARRAY ['a', 'b', 'c']]), (k, v) -> k = 's0' OR cardinality(v) = 3)\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 152,
      "startLineNumber" : 173,
      "startColumnNumber" : 16,
      "endLineNumber" : 173,
      "endColumnNumber" : 168
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 375,
        "startLineNumber" : 172,
        "startColumnNumber" : 8,
        "endLineNumber" : 175,
        "endColumnNumber" : 105
      },
      "nodeContext" : "assertFunction(\"map_filter(map(ARRAY ['s0', 's1', 's2'], ARRAY [ARRAY ['a', 'b'], ARRAY ['a', 'c'], ARRAY ['a', 'b', 'c']]), (k, v) -> k = 's0' OR cardinality(v) = 3)\",mapType(createVarcharType(2),new ArrayType(createVarcharType(1))),ImmutableMap.of(\"s0\",ImmutableList.of(\"a\",\"b\"),\"s2\",ImmutableList.of(\"a\",\"b\",\"c\")))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 30,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 376,
        "startLineNumber" : 172,
        "startColumnNumber" : 8,
        "endLineNumber" : 175,
        "endColumnNumber" : 106
      },
      "nodeContext" : "assertFunction(\"map_filter(map(ARRAY ['s0', 's1', 's2'], ARRAY [ARRAY ['a', 'b'], ARRAY ['a', 'c'], ARRAY ['a', 'b', 'c']]), (k, v) -> k = 's0' OR cardinality(v) = 3)\",mapType(createVarcharType(2),new ArrayType(createVarcharType(1))),ImmutableMap.of(\"s0\",ImmutableList.of(\"a\",\"b\"),\"s2\",ImmutableList.of(\"a\",\"b\",\"c\")));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 31,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 7163,
        "startLineNumber" : 90,
        "startColumnNumber" : 4,
        "endLineNumber" : 197,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertFunction(\"map_filter(map(ARRAY [25, 26, 27], ARRAY [25, 26, 27]), (k, v) -> k = 25 OR v = 27)\",mapType(INTEGER,INTEGER),ImmutableMap.of(25,25,27,27));\n  assertFunction(\"map_filter(map(ARRAY [25, 26, 27], ARRAY [25.5E0, 26.5E0, 27.5E0]), (k, v) -> k = 25 OR v = 27.5E0)\",mapType(INTEGER,DOUBLE),ImmutableMap.of(25,25.5,27,27.5));\n  assertFunction(\"map_filter(map(ARRAY [25, 26, 27], ARRAY [false, null, true]), (k, v) -> k = 25 OR v)\",mapType(INTEGER,BOOLEAN),ImmutableMap.of(25,false,27,true));\n  assertFunction(\"map_filter(map(ARRAY [25, 26, 27], ARRAY ['abc', 'def', 'xyz']), (k, v) -> k = 25 OR v = 'xyz')\",mapType(INTEGER,createVarcharType(3)),ImmutableMap.of(25,\"abc\",27,\"xyz\"));\n  assertFunction(\"map_filter(map(ARRAY [25, 26, 27], ARRAY [ARRAY ['a', 'b'], ARRAY ['a', 'c'], ARRAY ['a', 'b', 'c']]), (k, v) -> k = 25 OR cardinality(v) = 3)\",mapType(INTEGER,new ArrayType(createVarcharType(1))),ImmutableMap.of(25,ImmutableList.of(\"a\",\"b\"),27,ImmutableList.of(\"a\",\"b\",\"c\")));\n  assertFunction(\"map_filter(map(ARRAY [25.5E0, 26.5E0, 27.5E0], ARRAY [25, 26, 27]), (k, v) -> k = 25.5E0 OR v = 27)\",mapType(DOUBLE,INTEGER),ImmutableMap.of(25.5,25,27.5,27));\n  assertFunction(\"map_filter(map(ARRAY [25.5E0, 26.5E0, 27.5E0], ARRAY [25.5E0, 26.5E0, 27.5E0]), (k, v) -> k = 25.5E0 OR v = 27.5E0)\",mapType(DOUBLE,DOUBLE),ImmutableMap.of(25.5,25.5,27.5,27.5));\n  assertFunction(\"map_filter(map(ARRAY [25.5E0, 26.5E0, 27.5E0], ARRAY [false, null, true]), (k, v) -> k = 25.5E0 OR v)\",mapType(DOUBLE,BOOLEAN),ImmutableMap.of(25.5,false,27.5,true));\n  assertFunction(\"map_filter(map(ARRAY [25.5E0, 26.5E0, 27.5E0], ARRAY ['abc', 'def', 'xyz']), (k, v) -> k = 25.5E0 OR v = 'xyz')\",mapType(DOUBLE,createVarcharType(3)),ImmutableMap.of(25.5,\"abc\",27.5,\"xyz\"));\n  assertFunction(\"map_filter(map(ARRAY [25.5E0, 26.5E0, 27.5E0], ARRAY [ARRAY ['a', 'b'], ARRAY ['a', 'c'], ARRAY ['a', 'b', 'c']]), (k, v) -> k = 25.5E0 OR cardinality(v) = 3)\",mapType(DOUBLE,new ArrayType(createVarcharType(1))),ImmutableMap.of(25.5,ImmutableList.of(\"a\",\"b\"),27.5,ImmutableList.of(\"a\",\"b\",\"c\")));\n  assertFunction(\"map_filter(map(ARRAY [true, false], ARRAY [25, 26]), (k, v) -> k AND v = 25)\",mapType(BOOLEAN,INTEGER),ImmutableMap.of(true,25));\n  assertFunction(\"map_filter(map(ARRAY [false, true], ARRAY [25.5E0, 26.5E0]), (k, v) -> k OR v > 100)\",mapType(BOOLEAN,DOUBLE),ImmutableMap.of(true,26.5));\n  Map<Boolean,Boolean> falseToNullMap=new HashMap<>();\n  falseToNullMap.put(false,null);\n  assertFunction(\"map_filter(map(ARRAY [true, false], ARRAY [false, null]), (k, v) -> NOT k OR v)\",mapType(BOOLEAN,BOOLEAN),falseToNullMap);\n  assertFunction(\"map_filter(map(ARRAY [false, true], ARRAY ['abc', 'def']), (k, v) -> NOT k AND v = 'abc')\",mapType(BOOLEAN,createVarcharType(3)),ImmutableMap.of(false,\"abc\"));\n  assertFunction(\"map_filter(map(ARRAY [true, false], ARRAY [ARRAY ['a', 'b'], ARRAY ['a', 'b', 'c']]), (k, v) -> k OR cardinality(v) = 3)\",mapType(BOOLEAN,new ArrayType(createVarcharType(1))),ImmutableMap.of(true,ImmutableList.of(\"a\",\"b\"),false,ImmutableList.of(\"a\",\"b\",\"c\")));\n  assertFunction(\"map_filter(map(ARRAY ['s0', 's1', 's2'], ARRAY [25, 26, 27]), (k, v) -> k = 's0' OR v = 27)\",mapType(createVarcharType(2),INTEGER),ImmutableMap.of(\"s0\",25,\"s2\",27));\n  assertFunction(\"map_filter(map(ARRAY ['s0', 's1', 's2'], ARRAY [25.5E0, 26.5E0, 27.5E0]), (k, v) -> k = 's0' OR v = 27.5E0)\",mapType(createVarcharType(2),DOUBLE),ImmutableMap.of(\"s0\",25.5,\"s2\",27.5));\n  assertFunction(\"map_filter(map(ARRAY ['s0', 's1', 's2'], ARRAY [false, null, true]), (k, v) -> k = 's0' OR v)\",mapType(createVarcharType(2),BOOLEAN),ImmutableMap.of(\"s0\",false,\"s2\",true));\n  assertFunction(\"map_filter(map(ARRAY ['s0', 's1', 's2'], ARRAY ['abc', 'def', 'xyz']), (k, v) -> k = 's0' OR v = 'xyz')\",mapType(createVarcharType(2),createVarcharType(3)),ImmutableMap.of(\"s0\",\"abc\",\"s2\",\"xyz\"));\n  assertFunction(\"map_filter(map(ARRAY ['s0', 's1', 's2'], ARRAY [ARRAY ['a', 'b'], ARRAY ['a', 'c'], ARRAY ['a', 'b', 'c']]), (k, v) -> k = 's0' OR cardinality(v) = 3)\",mapType(createVarcharType(2),new ArrayType(createVarcharType(1))),ImmutableMap.of(\"s0\",ImmutableList.of(\"a\",\"b\"),\"s2\",ImmutableList.of(\"a\",\"b\",\"c\")));\n  assertFunction(\"map_filter(map(ARRAY [ARRAY [1, 2], ARRAY [3, 4], ARRAY []], ARRAY [25, 26, 27]), (k, v) -> k = ARRAY [1, 2] OR v = 27)\",mapType(new ArrayType(INTEGER),INTEGER),ImmutableMap.of(ImmutableList.of(1,2),25,ImmutableList.of(),27));\n  assertFunction(\"map_filter(map(ARRAY [ARRAY [1, 2], ARRAY [3, 4], ARRAY []], ARRAY [25.5E0, 26.5E0, 27.5E0]), (k, v) -> k = ARRAY [1, 2] OR v = 27.5E0)\",mapType(new ArrayType(INTEGER),DOUBLE),ImmutableMap.of(ImmutableList.of(1,2),25.5,ImmutableList.of(),27.5));\n  assertFunction(\"map_filter(map(ARRAY [ARRAY [1, 2], ARRAY [3, 4], ARRAY []], ARRAY [false, null, true]), (k, v) -> k = ARRAY [1, 2] OR v)\",mapType(new ArrayType(INTEGER),BOOLEAN),ImmutableMap.of(ImmutableList.of(1,2),false,ImmutableList.of(),true));\n  assertFunction(\"map_filter(map(ARRAY [ARRAY [1, 2], ARRAY [3, 4], ARRAY []], ARRAY ['abc', 'def', 'xyz']), (k, v) -> k = ARRAY [1, 2] OR v = 'xyz')\",mapType(new ArrayType(INTEGER),createVarcharType(3)),ImmutableMap.of(ImmutableList.of(1,2),\"abc\",ImmutableList.of(),\"xyz\"));\n  assertFunction(\"map_filter(map(ARRAY [ARRAY [1, 2], ARRAY [3, 4], ARRAY []], ARRAY [ARRAY ['a', 'b'], ARRAY ['a', 'b', 'c'], ARRAY ['a', 'c']]), (k, v) -> cardinality(k) = 0 OR cardinality(v) = 3)\",mapType(new ArrayType(INTEGER),new ArrayType(createVarcharType(1))),ImmutableMap.of(ImmutableList.of(3,4),ImmutableList.of(\"a\",\"b\",\"c\"),ImmutableList.of(),ImmutableList.of(\"a\",\"c\")));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 519,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7212,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 197,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testTypeCombinations(){\n  assertFunction(\"map_filter(map(ARRAY [25, 26, 27], ARRAY [25, 26, 27]), (k, v) -> k = 25 OR v = 27)\",mapType(INTEGER,INTEGER),ImmutableMap.of(25,25,27,27));\n  assertFunction(\"map_filter(map(ARRAY [25, 26, 27], ARRAY [25.5E0, 26.5E0, 27.5E0]), (k, v) -> k = 25 OR v = 27.5E0)\",mapType(INTEGER,DOUBLE),ImmutableMap.of(25,25.5,27,27.5));\n  assertFunction(\"map_filter(map(ARRAY [25, 26, 27], ARRAY [false, null, true]), (k, v) -> k = 25 OR v)\",mapType(INTEGER,BOOLEAN),ImmutableMap.of(25,false,27,true));\n  assertFunction(\"map_filter(map(ARRAY [25, 26, 27], ARRAY ['abc', 'def', 'xyz']), (k, v) -> k = 25 OR v = 'xyz')\",mapType(INTEGER,createVarcharType(3)),ImmutableMap.of(25,\"abc\",27,\"xyz\"));\n  assertFunction(\"map_filter(map(ARRAY [25, 26, 27], ARRAY [ARRAY ['a', 'b'], ARRAY ['a', 'c'], ARRAY ['a', 'b', 'c']]), (k, v) -> k = 25 OR cardinality(v) = 3)\",mapType(INTEGER,new ArrayType(createVarcharType(1))),ImmutableMap.of(25,ImmutableList.of(\"a\",\"b\"),27,ImmutableList.of(\"a\",\"b\",\"c\")));\n  assertFunction(\"map_filter(map(ARRAY [25.5E0, 26.5E0, 27.5E0], ARRAY [25, 26, 27]), (k, v) -> k = 25.5E0 OR v = 27)\",mapType(DOUBLE,INTEGER),ImmutableMap.of(25.5,25,27.5,27));\n  assertFunction(\"map_filter(map(ARRAY [25.5E0, 26.5E0, 27.5E0], ARRAY [25.5E0, 26.5E0, 27.5E0]), (k, v) -> k = 25.5E0 OR v = 27.5E0)\",mapType(DOUBLE,DOUBLE),ImmutableMap.of(25.5,25.5,27.5,27.5));\n  assertFunction(\"map_filter(map(ARRAY [25.5E0, 26.5E0, 27.5E0], ARRAY [false, null, true]), (k, v) -> k = 25.5E0 OR v)\",mapType(DOUBLE,BOOLEAN),ImmutableMap.of(25.5,false,27.5,true));\n  assertFunction(\"map_filter(map(ARRAY [25.5E0, 26.5E0, 27.5E0], ARRAY ['abc', 'def', 'xyz']), (k, v) -> k = 25.5E0 OR v = 'xyz')\",mapType(DOUBLE,createVarcharType(3)),ImmutableMap.of(25.5,\"abc\",27.5,\"xyz\"));\n  assertFunction(\"map_filter(map(ARRAY [25.5E0, 26.5E0, 27.5E0], ARRAY [ARRAY ['a', 'b'], ARRAY ['a', 'c'], ARRAY ['a', 'b', 'c']]), (k, v) -> k = 25.5E0 OR cardinality(v) = 3)\",mapType(DOUBLE,new ArrayType(createVarcharType(1))),ImmutableMap.of(25.5,ImmutableList.of(\"a\",\"b\"),27.5,ImmutableList.of(\"a\",\"b\",\"c\")));\n  assertFunction(\"map_filter(map(ARRAY [true, false], ARRAY [25, 26]), (k, v) -> k AND v = 25)\",mapType(BOOLEAN,INTEGER),ImmutableMap.of(true,25));\n  assertFunction(\"map_filter(map(ARRAY [false, true], ARRAY [25.5E0, 26.5E0]), (k, v) -> k OR v > 100)\",mapType(BOOLEAN,DOUBLE),ImmutableMap.of(true,26.5));\n  Map<Boolean,Boolean> falseToNullMap=new HashMap<>();\n  falseToNullMap.put(false,null);\n  assertFunction(\"map_filter(map(ARRAY [true, false], ARRAY [false, null]), (k, v) -> NOT k OR v)\",mapType(BOOLEAN,BOOLEAN),falseToNullMap);\n  assertFunction(\"map_filter(map(ARRAY [false, true], ARRAY ['abc', 'def']), (k, v) -> NOT k AND v = 'abc')\",mapType(BOOLEAN,createVarcharType(3)),ImmutableMap.of(false,\"abc\"));\n  assertFunction(\"map_filter(map(ARRAY [true, false], ARRAY [ARRAY ['a', 'b'], ARRAY ['a', 'b', 'c']]), (k, v) -> k OR cardinality(v) = 3)\",mapType(BOOLEAN,new ArrayType(createVarcharType(1))),ImmutableMap.of(true,ImmutableList.of(\"a\",\"b\"),false,ImmutableList.of(\"a\",\"b\",\"c\")));\n  assertFunction(\"map_filter(map(ARRAY ['s0', 's1', 's2'], ARRAY [25, 26, 27]), (k, v) -> k = 's0' OR v = 27)\",mapType(createVarcharType(2),INTEGER),ImmutableMap.of(\"s0\",25,\"s2\",27));\n  assertFunction(\"map_filter(map(ARRAY ['s0', 's1', 's2'], ARRAY [25.5E0, 26.5E0, 27.5E0]), (k, v) -> k = 's0' OR v = 27.5E0)\",mapType(createVarcharType(2),DOUBLE),ImmutableMap.of(\"s0\",25.5,\"s2\",27.5));\n  assertFunction(\"map_filter(map(ARRAY ['s0', 's1', 's2'], ARRAY [false, null, true]), (k, v) -> k = 's0' OR v)\",mapType(createVarcharType(2),BOOLEAN),ImmutableMap.of(\"s0\",false,\"s2\",true));\n  assertFunction(\"map_filter(map(ARRAY ['s0', 's1', 's2'], ARRAY ['abc', 'def', 'xyz']), (k, v) -> k = 's0' OR v = 'xyz')\",mapType(createVarcharType(2),createVarcharType(3)),ImmutableMap.of(\"s0\",\"abc\",\"s2\",\"xyz\"));\n  assertFunction(\"map_filter(map(ARRAY ['s0', 's1', 's2'], ARRAY [ARRAY ['a', 'b'], ARRAY ['a', 'c'], ARRAY ['a', 'b', 'c']]), (k, v) -> k = 's0' OR cardinality(v) = 3)\",mapType(createVarcharType(2),new ArrayType(createVarcharType(1))),ImmutableMap.of(\"s0\",ImmutableList.of(\"a\",\"b\"),\"s2\",ImmutableList.of(\"a\",\"b\",\"c\")));\n  assertFunction(\"map_filter(map(ARRAY [ARRAY [1, 2], ARRAY [3, 4], ARRAY []], ARRAY [25, 26, 27]), (k, v) -> k = ARRAY [1, 2] OR v = 27)\",mapType(new ArrayType(INTEGER),INTEGER),ImmutableMap.of(ImmutableList.of(1,2),25,ImmutableList.of(),27));\n  assertFunction(\"map_filter(map(ARRAY [ARRAY [1, 2], ARRAY [3, 4], ARRAY []], ARRAY [25.5E0, 26.5E0, 27.5E0]), (k, v) -> k = ARRAY [1, 2] OR v = 27.5E0)\",mapType(new ArrayType(INTEGER),DOUBLE),ImmutableMap.of(ImmutableList.of(1,2),25.5,ImmutableList.of(),27.5));\n  assertFunction(\"map_filter(map(ARRAY [ARRAY [1, 2], ARRAY [3, 4], ARRAY []], ARRAY [false, null, true]), (k, v) -> k = ARRAY [1, 2] OR v)\",mapType(new ArrayType(INTEGER),BOOLEAN),ImmutableMap.of(ImmutableList.of(1,2),false,ImmutableList.of(),true));\n  assertFunction(\"map_filter(map(ARRAY [ARRAY [1, 2], ARRAY [3, 4], ARRAY []], ARRAY ['abc', 'def', 'xyz']), (k, v) -> k = ARRAY [1, 2] OR v = 'xyz')\",mapType(new ArrayType(INTEGER),createVarcharType(3)),ImmutableMap.of(ImmutableList.of(1,2),\"abc\",ImmutableList.of(),\"xyz\"));\n  assertFunction(\"map_filter(map(ARRAY [ARRAY [1, 2], ARRAY [3, 4], ARRAY []], ARRAY [ARRAY ['a', 'b'], ARRAY ['a', 'b', 'c'], ARRAY ['a', 'c']]), (k, v) -> cardinality(k) = 0 OR cardinality(v) = 3)\",mapType(new ArrayType(INTEGER),new ArrayType(createVarcharType(1))),ImmutableMap.of(ImmutableList.of(3,4),ImmutableList.of(\"a\",\"b\",\"c\"),ImmutableList.of(),ImmutableList.of(\"a\",\"c\")));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 525,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 375,
        "startLineNumber" : 172,
        "startColumnNumber" : 8,
        "endLineNumber" : 175,
        "endColumnNumber" : 105
      },
      "nodeContext" : "assertFunction(\"map_filter(map(ARRAY ['s0', 's1', 's2'], ARRAY [ARRAY ['a', 'b'], ARRAY ['a', 'c'], ARRAY ['a', 'b', 'c']]), (k, v) -> k = 's0' OR cardinality(v) = 3)\",mapType(createVarcharType(2),new ArrayType(createVarcharType(1))),ImmutableMap.of(\"s0\",ImmutableList.of(\"a\",\"b\"),\"s2\",ImmutableList.of(\"a\",\"b\",\"c\")))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 30,
      "astHeight" : 5
    },
    "tokenLength" : 29,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 152,
    "startLineNumber" : 173,
    "startColumnNumber" : 16,
    "endLineNumber" : 173,
    "endColumnNumber" : 168
  } ],
  "layoutRelationDataList" : [ ]
}