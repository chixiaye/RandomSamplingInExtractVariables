{
  "id" : 435,
  "expression" : "metadata.getLimit()",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/authz/client/src/main/java/org/keycloak/authorization/client/util/HttpMethodAuthenticator.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "metadata.getLimit()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 125,
      "startColumnNumber" : 16,
      "endLineNumber" : 125,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 125,
        "startColumnNumber" : 16,
        "endLineNumber" : 125,
        "endColumnNumber" : 43
      },
      "nodeContext" : "metadata.getLimit() != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 140,
        "startLineNumber" : 125,
        "startColumnNumber" : 12,
        "endLineNumber" : 127,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (metadata.getLimit() != null) {\n  method.param(\"response_permissions_limit\",metadata.getLimit().toString());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 350,
        "startLineNumber" : 120,
        "startColumnNumber" : 30,
        "endLineNumber" : 128,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (metadata.getIncludeResourceName() != null) {\n    method.param(\"response_include_resource_name\",metadata.getIncludeResourceName().toString());\n  }\n  if (metadata.getLimit() != null) {\n    method.param(\"response_permissions_limit\",metadata.getLimit().toString());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 372,
        "startLineNumber" : 120,
        "startColumnNumber" : 8,
        "endLineNumber" : 128,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (metadata != null) {\n  if (metadata.getIncludeResourceName() != null) {\n    method.param(\"response_include_resource_name\",metadata.getIncludeResourceName().toString());\n  }\n  if (metadata.getLimit() != null) {\n    method.param(\"response_permissions_limit\",metadata.getLimit().toString());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 39,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2103,
        "startLineNumber" : 76,
        "startColumnNumber" : 59,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String ticket=request.getTicket();\n  PermissionTicketToken permissions=request.getPermissions();\n  if (ticket == null && permissions == null) {\n    throw new IllegalArgumentException(\"You must either provide a permission ticket or the permissions you want to request.\");\n  }\n  uma();\n  method.param(\"ticket\",ticket);\n  method.param(\"claim_token\",request.getClaimToken());\n  method.param(\"claim_token_format\",request.getClaimTokenFormat());\n  method.param(\"pct\",request.getPct());\n  method.param(\"rpt\",request.getRptToken());\n  method.param(\"scope\",request.getScope());\n  method.param(\"audience\",request.getAudience());\n  method.param(\"subject_token\",request.getSubjectToken());\n  if (permissions != null) {\n    for (    Permission permission : permissions.getPermissions()) {\n      String resourceId=permission.getResourceId();\n      Set<String> scopes=permission.getScopes();\n      StringBuilder value=new StringBuilder();\n      if (resourceId != null) {\n        value.append(resourceId);\n      }\n      if (scopes != null && !scopes.isEmpty()) {\n        value.append(\"#\");\n        for (        String scope : scopes) {\n          if (!value.toString().endsWith(\"#\")) {\n            value.append(\",\");\n          }\n          value.append(scope);\n        }\n      }\n      method.params(\"permission\",value.toString());\n    }\n  }\n  Metadata metadata=request.getMetadata();\n  if (metadata != null) {\n    if (metadata.getIncludeResourceName() != null) {\n      method.param(\"response_include_resource_name\",metadata.getIncludeResourceName().toString());\n    }\n    if (metadata.getLimit() != null) {\n      method.param(\"response_permissions_limit\",metadata.getLimit().toString());\n    }\n  }\n  return method;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 245,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2158,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public HttpMethod<R> uma(AuthorizationRequest request){\n  String ticket=request.getTicket();\n  PermissionTicketToken permissions=request.getPermissions();\n  if (ticket == null && permissions == null) {\n    throw new IllegalArgumentException(\"You must either provide a permission ticket or the permissions you want to request.\");\n  }\n  uma();\n  method.param(\"ticket\",ticket);\n  method.param(\"claim_token\",request.getClaimToken());\n  method.param(\"claim_token_format\",request.getClaimTokenFormat());\n  method.param(\"pct\",request.getPct());\n  method.param(\"rpt\",request.getRptToken());\n  method.param(\"scope\",request.getScope());\n  method.param(\"audience\",request.getAudience());\n  method.param(\"subject_token\",request.getSubjectToken());\n  if (permissions != null) {\n    for (    Permission permission : permissions.getPermissions()) {\n      String resourceId=permission.getResourceId();\n      Set<String> scopes=permission.getScopes();\n      StringBuilder value=new StringBuilder();\n      if (resourceId != null) {\n        value.append(resourceId);\n      }\n      if (scopes != null && !scopes.isEmpty()) {\n        value.append(\"#\");\n        for (        String scope : scopes) {\n          if (!value.toString().endsWith(\"#\")) {\n            value.append(\",\");\n          }\n          value.append(scope);\n        }\n      }\n      method.params(\"permission\",value.toString());\n    }\n  }\n  Metadata metadata=request.getMetadata();\n  if (metadata != null) {\n    if (metadata.getIncludeResourceName() != null) {\n      method.param(\"response_include_resource_name\",metadata.getIncludeResourceName().toString());\n    }\n    if (metadata.getLimit() != null) {\n      method.param(\"response_permissions_limit\",metadata.getLimit().toString());\n    }\n  }\n  return method;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 257,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 125,
        "startColumnNumber" : 16,
        "endLineNumber" : 125,
        "endColumnNumber" : 43
      },
      "nodeContext" : "metadata.getLimit() != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.lang.Integer"
  }, {
    "nodeContext" : "metadata.getLimit()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 126,
      "startColumnNumber" : 59,
      "endLineNumber" : 126,
      "endColumnNumber" : 78
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 126,
        "startColumnNumber" : 59,
        "endLineNumber" : 126,
        "endColumnNumber" : 89
      },
      "nodeContext" : "metadata.getLimit().toString()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 126,
        "startColumnNumber" : 16,
        "endLineNumber" : 126,
        "endColumnNumber" : 90
      },
      "nodeContext" : "method.param(\"response_permissions_limit\",metadata.getLimit().toString())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 126,
        "startColumnNumber" : 16,
        "endLineNumber" : 126,
        "endColumnNumber" : 91
      },
      "nodeContext" : "method.param(\"response_permissions_limit\",metadata.getLimit().toString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 125,
        "startColumnNumber" : 45,
        "endLineNumber" : 127,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  method.param(\"response_permissions_limit\",metadata.getLimit().toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 140,
        "startLineNumber" : 125,
        "startColumnNumber" : 12,
        "endLineNumber" : 127,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (metadata.getLimit() != null) {\n  method.param(\"response_permissions_limit\",metadata.getLimit().toString());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 350,
        "startLineNumber" : 120,
        "startColumnNumber" : 30,
        "endLineNumber" : 128,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (metadata.getIncludeResourceName() != null) {\n    method.param(\"response_include_resource_name\",metadata.getIncludeResourceName().toString());\n  }\n  if (metadata.getLimit() != null) {\n    method.param(\"response_permissions_limit\",metadata.getLimit().toString());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 372,
        "startLineNumber" : 120,
        "startColumnNumber" : 8,
        "endLineNumber" : 128,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (metadata != null) {\n  if (metadata.getIncludeResourceName() != null) {\n    method.param(\"response_include_resource_name\",metadata.getIncludeResourceName().toString());\n  }\n  if (metadata.getLimit() != null) {\n    method.param(\"response_permissions_limit\",metadata.getLimit().toString());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 39,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2103,
        "startLineNumber" : 76,
        "startColumnNumber" : 59,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String ticket=request.getTicket();\n  PermissionTicketToken permissions=request.getPermissions();\n  if (ticket == null && permissions == null) {\n    throw new IllegalArgumentException(\"You must either provide a permission ticket or the permissions you want to request.\");\n  }\n  uma();\n  method.param(\"ticket\",ticket);\n  method.param(\"claim_token\",request.getClaimToken());\n  method.param(\"claim_token_format\",request.getClaimTokenFormat());\n  method.param(\"pct\",request.getPct());\n  method.param(\"rpt\",request.getRptToken());\n  method.param(\"scope\",request.getScope());\n  method.param(\"audience\",request.getAudience());\n  method.param(\"subject_token\",request.getSubjectToken());\n  if (permissions != null) {\n    for (    Permission permission : permissions.getPermissions()) {\n      String resourceId=permission.getResourceId();\n      Set<String> scopes=permission.getScopes();\n      StringBuilder value=new StringBuilder();\n      if (resourceId != null) {\n        value.append(resourceId);\n      }\n      if (scopes != null && !scopes.isEmpty()) {\n        value.append(\"#\");\n        for (        String scope : scopes) {\n          if (!value.toString().endsWith(\"#\")) {\n            value.append(\",\");\n          }\n          value.append(scope);\n        }\n      }\n      method.params(\"permission\",value.toString());\n    }\n  }\n  Metadata metadata=request.getMetadata();\n  if (metadata != null) {\n    if (metadata.getIncludeResourceName() != null) {\n      method.param(\"response_include_resource_name\",metadata.getIncludeResourceName().toString());\n    }\n    if (metadata.getLimit() != null) {\n      method.param(\"response_permissions_limit\",metadata.getLimit().toString());\n    }\n  }\n  return method;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 245,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2158,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 131,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public HttpMethod<R> uma(AuthorizationRequest request){\n  String ticket=request.getTicket();\n  PermissionTicketToken permissions=request.getPermissions();\n  if (ticket == null && permissions == null) {\n    throw new IllegalArgumentException(\"You must either provide a permission ticket or the permissions you want to request.\");\n  }\n  uma();\n  method.param(\"ticket\",ticket);\n  method.param(\"claim_token\",request.getClaimToken());\n  method.param(\"claim_token_format\",request.getClaimTokenFormat());\n  method.param(\"pct\",request.getPct());\n  method.param(\"rpt\",request.getRptToken());\n  method.param(\"scope\",request.getScope());\n  method.param(\"audience\",request.getAudience());\n  method.param(\"subject_token\",request.getSubjectToken());\n  if (permissions != null) {\n    for (    Permission permission : permissions.getPermissions()) {\n      String resourceId=permission.getResourceId();\n      Set<String> scopes=permission.getScopes();\n      StringBuilder value=new StringBuilder();\n      if (resourceId != null) {\n        value.append(resourceId);\n      }\n      if (scopes != null && !scopes.isEmpty()) {\n        value.append(\"#\");\n        for (        String scope : scopes) {\n          if (!value.toString().endsWith(\"#\")) {\n            value.append(\",\");\n          }\n          value.append(scope);\n        }\n      }\n      method.params(\"permission\",value.toString());\n    }\n  }\n  Metadata metadata=request.getMetadata();\n  if (metadata != null) {\n    if (metadata.getIncludeResourceName() != null) {\n      method.param(\"response_include_resource_name\",metadata.getIncludeResourceName().toString());\n    }\n    if (metadata.getLimit() != null) {\n      method.param(\"response_permissions_limit\",metadata.getLimit().toString());\n    }\n  }\n  return method;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 257,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 126,
        "startColumnNumber" : 16,
        "endLineNumber" : 126,
        "endColumnNumber" : 91
      },
      "nodeContext" : "method.param(\"response_permissions_limit\",metadata.getLimit().toString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.Integer"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 125,
    "startColumnNumber" : 16,
    "endLineNumber" : 125,
    "endColumnNumber" : 35
  }, {
    "charLength" : 19,
    "startLineNumber" : 126,
    "startColumnNumber" : 59,
    "endLineNumber" : 126,
    "endColumnNumber" : 78
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}