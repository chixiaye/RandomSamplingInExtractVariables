{
  "id" : 164,
  "expression" : "branchRegisterResponse",
  "projectName" : "seata@seata",
  "commitID" : "42d41623178ab076b11b27a0f049ac3ed7f1a9dc",
  "filePath" : "/test/src/test/java/io/seata/core/rpc/netty/TmRpcClientTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "branchRegisterResponse",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 145,
      "startColumnNumber" : 33,
      "endLineNumber" : 145,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 145,
        "startColumnNumber" : 8,
        "endLineNumber" : 145,
        "endColumnNumber" : 56
      },
      "nodeContext" : "Assertions.assertNotNull(branchRegisterResponse)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 145,
        "startColumnNumber" : 8,
        "endLineNumber" : 145,
        "endColumnNumber" : 57
      },
      "nodeContext" : "Assertions.assertNotNull(branchRegisterResponse);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1572,
        "startLineNumber" : 117,
        "startColumnNumber" : 59,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  workingThreads.submit(new Runnable(){\n    @Override public void run(){\n      RpcServer rpcServer=new RpcServer(workingThreads);\n      rpcServer.setHandler(new DefaultCoordinator(rpcServer));\n      UUIDGenerator.init(1);\n      rpcServer.init();\n    }\n  }\n);\n  Thread.sleep(3000);\n  String applicationId=\"app 1\";\n  String transactionServiceGroup=\"my_test_tx_group\";\n  TmRpcClient tmRpcClient=TmRpcClient.getInstance(applicationId,transactionServiceGroup);\n  tmRpcClient.init();\n  Method doConnectMethod=TmRpcClient.class.getDeclaredMethod(\"doConnect\",String.class);\n  doConnectMethod.setAccessible(true);\n  String serverAddress=\"0.0.0.0:8091\";\n  Channel channel=(Channel)doConnectMethod.invoke(tmRpcClient,serverAddress);\n  Assertions.assertNotNull(channel);\n  BranchRegisterRequest request=new BranchRegisterRequest();\n  request.setXid(\"127.0.0.1:8091:1249853\");\n  request.setLockKey(\"lock key testSendMsgWithResponse\");\n  request.setResourceId(\"resoutceId1\");\n  BranchRegisterResponse branchRegisterResponse=(BranchRegisterResponse)tmRpcClient.sendMsgWithResponse(request);\n  Assertions.assertNotNull(branchRegisterResponse);\n  Assertions.assertEquals(ResultCode.Failed,branchRegisterResponse.getResultCode());\n  Assertions.assertEquals(\"RuntimeException[SessionManager is NOT init!]\",branchRegisterResponse.getMsg());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 174,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1637,
        "startLineNumber" : 116,
        "startColumnNumber" : 4,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSendMsgWithResponse() throws Exception {\n  workingThreads.submit(new Runnable(){\n    @Override public void run(){\n      RpcServer rpcServer=new RpcServer(workingThreads);\n      rpcServer.setHandler(new DefaultCoordinator(rpcServer));\n      UUIDGenerator.init(1);\n      rpcServer.init();\n    }\n  }\n);\n  Thread.sleep(3000);\n  String applicationId=\"app 1\";\n  String transactionServiceGroup=\"my_test_tx_group\";\n  TmRpcClient tmRpcClient=TmRpcClient.getInstance(applicationId,transactionServiceGroup);\n  tmRpcClient.init();\n  Method doConnectMethod=TmRpcClient.class.getDeclaredMethod(\"doConnect\",String.class);\n  doConnectMethod.setAccessible(true);\n  String serverAddress=\"0.0.0.0:8091\";\n  Channel channel=(Channel)doConnectMethod.invoke(tmRpcClient,serverAddress);\n  Assertions.assertNotNull(channel);\n  BranchRegisterRequest request=new BranchRegisterRequest();\n  request.setXid(\"127.0.0.1:8091:1249853\");\n  request.setLockKey(\"lock key testSendMsgWithResponse\");\n  request.setResourceId(\"resoutceId1\");\n  BranchRegisterResponse branchRegisterResponse=(BranchRegisterResponse)tmRpcClient.sendMsgWithResponse(request);\n  Assertions.assertNotNull(branchRegisterResponse);\n  Assertions.assertEquals(ResultCode.Failed,branchRegisterResponse.getResultCode());\n  Assertions.assertEquals(\"RuntimeException[SessionManager is NOT init!]\",branchRegisterResponse.getMsg());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 182,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 145,
        "startColumnNumber" : 8,
        "endLineNumber" : 145,
        "endColumnNumber" : 57
      },
      "nodeContext" : "Assertions.assertNotNull(branchRegisterResponse);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "io.seata.core.protocol.transaction.BranchRegisterResponse"
  }, {
    "nodeContext" : "branchRegisterResponse",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 146,
      "startColumnNumber" : 51,
      "endLineNumber" : 146,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 146,
        "startColumnNumber" : 51,
        "endLineNumber" : 146,
        "endColumnNumber" : 89
      },
      "nodeContext" : "branchRegisterResponse.getResultCode()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 146,
        "startColumnNumber" : 8,
        "endLineNumber" : 146,
        "endColumnNumber" : 90
      },
      "nodeContext" : "Assertions.assertEquals(ResultCode.Failed,branchRegisterResponse.getResultCode())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 146,
        "startColumnNumber" : 8,
        "endLineNumber" : 146,
        "endColumnNumber" : 91
      },
      "nodeContext" : "Assertions.assertEquals(ResultCode.Failed,branchRegisterResponse.getResultCode());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1572,
        "startLineNumber" : 117,
        "startColumnNumber" : 59,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  workingThreads.submit(new Runnable(){\n    @Override public void run(){\n      RpcServer rpcServer=new RpcServer(workingThreads);\n      rpcServer.setHandler(new DefaultCoordinator(rpcServer));\n      UUIDGenerator.init(1);\n      rpcServer.init();\n    }\n  }\n);\n  Thread.sleep(3000);\n  String applicationId=\"app 1\";\n  String transactionServiceGroup=\"my_test_tx_group\";\n  TmRpcClient tmRpcClient=TmRpcClient.getInstance(applicationId,transactionServiceGroup);\n  tmRpcClient.init();\n  Method doConnectMethod=TmRpcClient.class.getDeclaredMethod(\"doConnect\",String.class);\n  doConnectMethod.setAccessible(true);\n  String serverAddress=\"0.0.0.0:8091\";\n  Channel channel=(Channel)doConnectMethod.invoke(tmRpcClient,serverAddress);\n  Assertions.assertNotNull(channel);\n  BranchRegisterRequest request=new BranchRegisterRequest();\n  request.setXid(\"127.0.0.1:8091:1249853\");\n  request.setLockKey(\"lock key testSendMsgWithResponse\");\n  request.setResourceId(\"resoutceId1\");\n  BranchRegisterResponse branchRegisterResponse=(BranchRegisterResponse)tmRpcClient.sendMsgWithResponse(request);\n  Assertions.assertNotNull(branchRegisterResponse);\n  Assertions.assertEquals(ResultCode.Failed,branchRegisterResponse.getResultCode());\n  Assertions.assertEquals(\"RuntimeException[SessionManager is NOT init!]\",branchRegisterResponse.getMsg());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 174,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1637,
        "startLineNumber" : 116,
        "startColumnNumber" : 4,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSendMsgWithResponse() throws Exception {\n  workingThreads.submit(new Runnable(){\n    @Override public void run(){\n      RpcServer rpcServer=new RpcServer(workingThreads);\n      rpcServer.setHandler(new DefaultCoordinator(rpcServer));\n      UUIDGenerator.init(1);\n      rpcServer.init();\n    }\n  }\n);\n  Thread.sleep(3000);\n  String applicationId=\"app 1\";\n  String transactionServiceGroup=\"my_test_tx_group\";\n  TmRpcClient tmRpcClient=TmRpcClient.getInstance(applicationId,transactionServiceGroup);\n  tmRpcClient.init();\n  Method doConnectMethod=TmRpcClient.class.getDeclaredMethod(\"doConnect\",String.class);\n  doConnectMethod.setAccessible(true);\n  String serverAddress=\"0.0.0.0:8091\";\n  Channel channel=(Channel)doConnectMethod.invoke(tmRpcClient,serverAddress);\n  Assertions.assertNotNull(channel);\n  BranchRegisterRequest request=new BranchRegisterRequest();\n  request.setXid(\"127.0.0.1:8091:1249853\");\n  request.setLockKey(\"lock key testSendMsgWithResponse\");\n  request.setResourceId(\"resoutceId1\");\n  BranchRegisterResponse branchRegisterResponse=(BranchRegisterResponse)tmRpcClient.sendMsgWithResponse(request);\n  Assertions.assertNotNull(branchRegisterResponse);\n  Assertions.assertEquals(ResultCode.Failed,branchRegisterResponse.getResultCode());\n  Assertions.assertEquals(\"RuntimeException[SessionManager is NOT init!]\",branchRegisterResponse.getMsg());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 182,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 146,
        "startColumnNumber" : 8,
        "endLineNumber" : 146,
        "endColumnNumber" : 91
      },
      "nodeContext" : "Assertions.assertEquals(ResultCode.Failed,branchRegisterResponse.getResultCode());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "io.seata.core.protocol.transaction.BranchRegisterResponse"
  }, {
    "nodeContext" : "branchRegisterResponse",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 148,
      "startColumnNumber" : 28,
      "endLineNumber" : 148,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 148,
        "startColumnNumber" : 28,
        "endLineNumber" : 148,
        "endColumnNumber" : 59
      },
      "nodeContext" : "branchRegisterResponse.getMsg()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 147,
        "startColumnNumber" : 8,
        "endLineNumber" : 148,
        "endColumnNumber" : 60
      },
      "nodeContext" : "Assertions.assertEquals(\"RuntimeException[SessionManager is NOT init!]\",branchRegisterResponse.getMsg())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 147,
        "startColumnNumber" : 8,
        "endLineNumber" : 148,
        "endColumnNumber" : 61
      },
      "nodeContext" : "Assertions.assertEquals(\"RuntimeException[SessionManager is NOT init!]\",branchRegisterResponse.getMsg());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1572,
        "startLineNumber" : 117,
        "startColumnNumber" : 59,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  workingThreads.submit(new Runnable(){\n    @Override public void run(){\n      RpcServer rpcServer=new RpcServer(workingThreads);\n      rpcServer.setHandler(new DefaultCoordinator(rpcServer));\n      UUIDGenerator.init(1);\n      rpcServer.init();\n    }\n  }\n);\n  Thread.sleep(3000);\n  String applicationId=\"app 1\";\n  String transactionServiceGroup=\"my_test_tx_group\";\n  TmRpcClient tmRpcClient=TmRpcClient.getInstance(applicationId,transactionServiceGroup);\n  tmRpcClient.init();\n  Method doConnectMethod=TmRpcClient.class.getDeclaredMethod(\"doConnect\",String.class);\n  doConnectMethod.setAccessible(true);\n  String serverAddress=\"0.0.0.0:8091\";\n  Channel channel=(Channel)doConnectMethod.invoke(tmRpcClient,serverAddress);\n  Assertions.assertNotNull(channel);\n  BranchRegisterRequest request=new BranchRegisterRequest();\n  request.setXid(\"127.0.0.1:8091:1249853\");\n  request.setLockKey(\"lock key testSendMsgWithResponse\");\n  request.setResourceId(\"resoutceId1\");\n  BranchRegisterResponse branchRegisterResponse=(BranchRegisterResponse)tmRpcClient.sendMsgWithResponse(request);\n  Assertions.assertNotNull(branchRegisterResponse);\n  Assertions.assertEquals(ResultCode.Failed,branchRegisterResponse.getResultCode());\n  Assertions.assertEquals(\"RuntimeException[SessionManager is NOT init!]\",branchRegisterResponse.getMsg());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 174,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1637,
        "startLineNumber" : 116,
        "startColumnNumber" : 4,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSendMsgWithResponse() throws Exception {\n  workingThreads.submit(new Runnable(){\n    @Override public void run(){\n      RpcServer rpcServer=new RpcServer(workingThreads);\n      rpcServer.setHandler(new DefaultCoordinator(rpcServer));\n      UUIDGenerator.init(1);\n      rpcServer.init();\n    }\n  }\n);\n  Thread.sleep(3000);\n  String applicationId=\"app 1\";\n  String transactionServiceGroup=\"my_test_tx_group\";\n  TmRpcClient tmRpcClient=TmRpcClient.getInstance(applicationId,transactionServiceGroup);\n  tmRpcClient.init();\n  Method doConnectMethod=TmRpcClient.class.getDeclaredMethod(\"doConnect\",String.class);\n  doConnectMethod.setAccessible(true);\n  String serverAddress=\"0.0.0.0:8091\";\n  Channel channel=(Channel)doConnectMethod.invoke(tmRpcClient,serverAddress);\n  Assertions.assertNotNull(channel);\n  BranchRegisterRequest request=new BranchRegisterRequest();\n  request.setXid(\"127.0.0.1:8091:1249853\");\n  request.setLockKey(\"lock key testSendMsgWithResponse\");\n  request.setResourceId(\"resoutceId1\");\n  BranchRegisterResponse branchRegisterResponse=(BranchRegisterResponse)tmRpcClient.sendMsgWithResponse(request);\n  Assertions.assertNotNull(branchRegisterResponse);\n  Assertions.assertEquals(ResultCode.Failed,branchRegisterResponse.getResultCode());\n  Assertions.assertEquals(\"RuntimeException[SessionManager is NOT init!]\",branchRegisterResponse.getMsg());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 182,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 148,
        "startColumnNumber" : 28,
        "endLineNumber" : 148,
        "endColumnNumber" : 59
      },
      "nodeContext" : "branchRegisterResponse.getMsg()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "io.seata.core.protocol.transaction.BranchRegisterResponse"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 145,
    "startColumnNumber" : 33,
    "endLineNumber" : 145,
    "endColumnNumber" : 55
  }, {
    "charLength" : 22,
    "startLineNumber" : 146,
    "startColumnNumber" : 51,
    "endLineNumber" : 146,
    "endColumnNumber" : 73
  }, {
    "charLength" : 22,
    "startLineNumber" : 148,
    "startColumnNumber" : 28,
    "endLineNumber" : 148,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}