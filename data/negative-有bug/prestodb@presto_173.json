{
  "id" : 173,
  "expression" : "((Table)baseTable).getName().toString()",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-main/src/main/java/com/facebook/presto/sql/analyzer/MaterializedViewInformationExtractor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "((Table)baseTable).getName().toString()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 40,
      "startLineNumber" : 137,
      "startColumnNumber" : 61,
      "endLineNumber" : 137,
      "endColumnNumber" : 101
    },
    "astNodeNumber" : 9,
    "astHeight" : 6,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 137,
        "startColumnNumber" : 46,
        "endLineNumber" : 137,
        "endColumnNumber" : 102
      },
      "nodeContext" : "new Identifier(((Table)baseTable).getName().toString())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 12,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 137,
        "startColumnNumber" : 34,
        "endLineNumber" : 137,
        "endColumnNumber" : 103
      },
      "nodeContext" : "Optional.of(new Identifier(((Table)baseTable).getName().toString()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 137,
        "startColumnNumber" : 16,
        "endLineNumber" : 137,
        "endColumnNumber" : 103
      },
      "nodeContext" : "removablePrefix=Optional.of(new Identifier(((Table)baseTable).getName().toString()))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 17,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 137,
        "startColumnNumber" : 16,
        "endLineNumber" : 137,
        "endColumnNumber" : 104
      },
      "nodeContext" : "removablePrefix=Optional.of(new Identifier(((Table)baseTable).getName().toString()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 120,
        "startLineNumber" : 136,
        "startColumnNumber" : 46,
        "endLineNumber" : 138,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  removablePrefix=Optional.of(new Identifier(((Table)baseTable).getName().toString()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 154,
        "startLineNumber" : 136,
        "startColumnNumber" : 12,
        "endLineNumber" : 138,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!removablePrefix.isPresent()) {\n  removablePrefix=Optional.of(new Identifier(((Table)baseTable).getName().toString()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 24,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 771,
        "startLineNumber" : 126,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  checkState(!this.baseTable.isPresent(),\"Only support single table rewrite in query optimizer\");\n  if (baseTable instanceof AliasedRelation) {\n    removablePrefix=Optional.of(((AliasedRelation)baseTable).getAlias());\n    baseTable=((AliasedRelation)baseTable).getRelation();\n  }\n  if (!(baseTable instanceof Table)) {\n    throw new SemanticException(NOT_SUPPORTED,baseTable,\"Relation other than Table is not supported in query optimizer\");\n  }\n  this.baseTable=Optional.of(baseTable);\n  if (!removablePrefix.isPresent()) {\n    removablePrefix=Optional.of(new Identifier(((Table)baseTable).getName().toString()));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 88,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 825,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 139,
        "endColumnNumber" : 9
      },
      "nodeContext" : "private void setBaseTable(Relation baseTable){\n  checkState(!this.baseTable.isPresent(),\"Only support single table rewrite in query optimizer\");\n  if (baseTable instanceof AliasedRelation) {\n    removablePrefix=Optional.of(((AliasedRelation)baseTable).getAlias());\n    baseTable=((AliasedRelation)baseTable).getRelation();\n  }\n  if (!(baseTable instanceof Table)) {\n    throw new SemanticException(NOT_SUPPORTED,baseTable,\"Relation other than Table is not supported in query optimizer\");\n  }\n  this.baseTable=Optional.of(baseTable);\n  if (!removablePrefix.isPresent()) {\n    removablePrefix=Optional.of(new Identifier(((Table)baseTable).getName().toString()));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 96,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 137,
        "startColumnNumber" : 16,
        "endLineNumber" : 137,
        "endColumnNumber" : 104
      },
      "nodeContext" : "removablePrefix=Optional.of(new Identifier(((Table)baseTable).getName().toString()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 10
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 40,
    "startLineNumber" : 137,
    "startColumnNumber" : 61,
    "endLineNumber" : 137,
    "endColumnNumber" : 101
  } ],
  "layoutRelationDataList" : [ ]
}