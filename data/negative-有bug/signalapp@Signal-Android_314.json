{
  "id" : 314,
  "expression" : "key == null",
  "projectName" : "signalapp@Signal-Android",
  "commitID" : "7e91132e7ed62a58b5f347de252ab1eda3f43b90",
  "filePath" : "/app/src/main/java/org/thoughtcrime/securesms/jobs/AvatarGroupsV1DownloadJob.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "key == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 76,
      "startColumnNumber" : 30,
      "endLineNumber" : 76,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 76,
        "startColumnNumber" : 12,
        "endLineNumber" : 76,
        "endColumnNumber" : 41
      },
      "nodeContext" : "avatarId == -1 || key == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 78,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (avatarId == -1 || key == null) {\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1531,
        "startLineNumber" : 68,
        "startColumnNumber" : 30,
        "endLineNumber" : 95,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  long avatarId=record.get().getAvatarId();\n  String contentType=record.get().getAvatarContentType();\n  byte[] key=record.get().getAvatarKey();\n  String relay=record.get().getRelay();\n  Optional<byte[]> digest=Optional.fromNullable(record.get().getAvatarDigest());\n  Optional<String> fileName=Optional.absent();\n  if (avatarId == -1 || key == null) {\n    return;\n  }\n  if (digest.isPresent()) {\n    Log.i(TAG,\"Downloading group avatar with digest: \" + Hex.toString(digest.get()));\n  }\n  attachment=File.createTempFile(\"avatar\",\"tmp\",context.getCacheDir());\n  attachment.deleteOnExit();\n  SignalServiceMessageReceiver receiver=ApplicationDependencies.getSignalServiceMessageReceiver();\n  SignalServiceAttachmentPointer pointer=new SignalServiceAttachmentPointer(0,new SignalServiceAttachmentRemoteId(avatarId),contentType,key,Optional.of(0),Optional.absent(),0,0,digest,fileName,false,false,false,Optional.absent(),Optional.absent(),System.currentTimeMillis());\n  InputStream inputStream=receiver.retrieveAttachment(pointer,attachment,AvatarHelper.AVATAR_DOWNLOAD_FAILSAFE_MAX_SIZE);\n  AvatarHelper.setAvatar(context,record.get().getRecipientId(),inputStream);\n  DatabaseFactory.getGroupDatabase(context).onAvatarUpdated(groupId,true);\n  inputStream.close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 196,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1555,
        "startLineNumber" : 68,
        "startColumnNumber" : 6,
        "endLineNumber" : 95,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (record.isPresent()) {\n  long avatarId=record.get().getAvatarId();\n  String contentType=record.get().getAvatarContentType();\n  byte[] key=record.get().getAvatarKey();\n  String relay=record.get().getRelay();\n  Optional<byte[]> digest=Optional.fromNullable(record.get().getAvatarDigest());\n  Optional<String> fileName=Optional.absent();\n  if (avatarId == -1 || key == null) {\n    return;\n  }\n  if (digest.isPresent()) {\n    Log.i(TAG,\"Downloading group avatar with digest: \" + Hex.toString(digest.get()));\n  }\n  attachment=File.createTempFile(\"avatar\",\"tmp\",context.getCacheDir());\n  attachment.deleteOnExit();\n  SignalServiceMessageReceiver receiver=ApplicationDependencies.getSignalServiceMessageReceiver();\n  SignalServiceAttachmentPointer pointer=new SignalServiceAttachmentPointer(0,new SignalServiceAttachmentRemoteId(avatarId),contentType,key,Optional.of(0),Optional.absent(),0,0,digest,fileName,false,false,false,Optional.absent(),Optional.absent(),System.currentTimeMillis());\n  InputStream inputStream=receiver.retrieveAttachment(pointer,attachment,AvatarHelper.AVATAR_DOWNLOAD_FAILSAFE_MAX_SIZE);\n  AvatarHelper.setAvatar(context,record.get().getRecipientId(),inputStream);\n  DatabaseFactory.getGroupDatabase(context).onAvatarUpdated(groupId,true);\n  inputStream.close();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 200,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1569,
        "startLineNumber" : 67,
        "startColumnNumber" : 8,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (record.isPresent()) {\n    long avatarId=record.get().getAvatarId();\n    String contentType=record.get().getAvatarContentType();\n    byte[] key=record.get().getAvatarKey();\n    String relay=record.get().getRelay();\n    Optional<byte[]> digest=Optional.fromNullable(record.get().getAvatarDigest());\n    Optional<String> fileName=Optional.absent();\n    if (avatarId == -1 || key == null) {\n      return;\n    }\n    if (digest.isPresent()) {\n      Log.i(TAG,\"Downloading group avatar with digest: \" + Hex.toString(digest.get()));\n    }\n    attachment=File.createTempFile(\"avatar\",\"tmp\",context.getCacheDir());\n    attachment.deleteOnExit();\n    SignalServiceMessageReceiver receiver=ApplicationDependencies.getSignalServiceMessageReceiver();\n    SignalServiceAttachmentPointer pointer=new SignalServiceAttachmentPointer(0,new SignalServiceAttachmentRemoteId(avatarId),contentType,key,Optional.of(0),Optional.absent(),0,0,digest,fileName,false,false,false,Optional.absent(),Optional.absent(),System.currentTimeMillis());\n    InputStream inputStream=receiver.retrieveAttachment(pointer,attachment,AvatarHelper.AVATAR_DOWNLOAD_FAILSAFE_MAX_SIZE);\n    AvatarHelper.setAvatar(context,record.get().getRecipientId(),inputStream);\n    DatabaseFactory.getGroupDatabase(context).onAvatarUpdated(groupId,true);\n    inputStream.close();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 201,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1780,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  if (record.isPresent()) {\n    long avatarId=record.get().getAvatarId();\n    String contentType=record.get().getAvatarContentType();\n    byte[] key=record.get().getAvatarKey();\n    String relay=record.get().getRelay();\n    Optional<byte[]> digest=Optional.fromNullable(record.get().getAvatarDigest());\n    Optional<String> fileName=Optional.absent();\n    if (avatarId == -1 || key == null) {\n      return;\n    }\n    if (digest.isPresent()) {\n      Log.i(TAG,\"Downloading group avatar with digest: \" + Hex.toString(digest.get()));\n    }\n    attachment=File.createTempFile(\"avatar\",\"tmp\",context.getCacheDir());\n    attachment.deleteOnExit();\n    SignalServiceMessageReceiver receiver=ApplicationDependencies.getSignalServiceMessageReceiver();\n    SignalServiceAttachmentPointer pointer=new SignalServiceAttachmentPointer(0,new SignalServiceAttachmentRemoteId(avatarId),contentType,key,Optional.of(0),Optional.absent(),0,0,digest,fileName,false,false,false,Optional.absent(),Optional.absent(),System.currentTimeMillis());\n    InputStream inputStream=receiver.retrieveAttachment(pointer,attachment,AvatarHelper.AVATAR_DOWNLOAD_FAILSAFE_MAX_SIZE);\n    AvatarHelper.setAvatar(context,record.get().getRecipientId(),inputStream);\n    DatabaseFactory.getGroupDatabase(context).onAvatarUpdated(groupId,true);\n    inputStream.close();\n  }\n}\n catch (NonSuccessfulResponseCodeException|InvalidMessageException|MissingConfigurationException e) {\n  Log.w(TAG,e);\n}\n finally {\n  if (attachment != null)   attachment.delete();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 228,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1985,
        "startLineNumber" : 62,
        "startColumnNumber" : 41,
        "endLineNumber" : 102,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  GroupDatabase database=DatabaseFactory.getGroupDatabase(context);\n  Optional<GroupRecord> record=database.getGroup(groupId);\n  File attachment=null;\n  try {\n    if (record.isPresent()) {\n      long avatarId=record.get().getAvatarId();\n      String contentType=record.get().getAvatarContentType();\n      byte[] key=record.get().getAvatarKey();\n      String relay=record.get().getRelay();\n      Optional<byte[]> digest=Optional.fromNullable(record.get().getAvatarDigest());\n      Optional<String> fileName=Optional.absent();\n      if (avatarId == -1 || key == null) {\n        return;\n      }\n      if (digest.isPresent()) {\n        Log.i(TAG,\"Downloading group avatar with digest: \" + Hex.toString(digest.get()));\n      }\n      attachment=File.createTempFile(\"avatar\",\"tmp\",context.getCacheDir());\n      attachment.deleteOnExit();\n      SignalServiceMessageReceiver receiver=ApplicationDependencies.getSignalServiceMessageReceiver();\n      SignalServiceAttachmentPointer pointer=new SignalServiceAttachmentPointer(0,new SignalServiceAttachmentRemoteId(avatarId),contentType,key,Optional.of(0),Optional.absent(),0,0,digest,fileName,false,false,false,Optional.absent(),Optional.absent(),System.currentTimeMillis());\n      InputStream inputStream=receiver.retrieveAttachment(pointer,attachment,AvatarHelper.AVATAR_DOWNLOAD_FAILSAFE_MAX_SIZE);\n      AvatarHelper.setAvatar(context,record.get().getRecipientId(),inputStream);\n      DatabaseFactory.getGroupDatabase(context).onAvatarUpdated(groupId,true);\n      inputStream.close();\n    }\n  }\n catch (  NonSuccessfulResponseCodeException|InvalidMessageException|MissingConfigurationException e) {\n    Log.w(TAG,e);\n  }\n finally {\n    if (attachment != null)     attachment.delete();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 256,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2036,
        "startLineNumber" : 61,
        "startColumnNumber" : 2,
        "endLineNumber" : 102,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void onRun() throws IOException {\n  GroupDatabase database=DatabaseFactory.getGroupDatabase(context);\n  Optional<GroupRecord> record=database.getGroup(groupId);\n  File attachment=null;\n  try {\n    if (record.isPresent()) {\n      long avatarId=record.get().getAvatarId();\n      String contentType=record.get().getAvatarContentType();\n      byte[] key=record.get().getAvatarKey();\n      String relay=record.get().getRelay();\n      Optional<byte[]> digest=Optional.fromNullable(record.get().getAvatarDigest());\n      Optional<String> fileName=Optional.absent();\n      if (avatarId == -1 || key == null) {\n        return;\n      }\n      if (digest.isPresent()) {\n        Log.i(TAG,\"Downloading group avatar with digest: \" + Hex.toString(digest.get()));\n      }\n      attachment=File.createTempFile(\"avatar\",\"tmp\",context.getCacheDir());\n      attachment.deleteOnExit();\n      SignalServiceMessageReceiver receiver=ApplicationDependencies.getSignalServiceMessageReceiver();\n      SignalServiceAttachmentPointer pointer=new SignalServiceAttachmentPointer(0,new SignalServiceAttachmentRemoteId(avatarId),contentType,key,Optional.of(0),Optional.absent(),0,0,digest,fileName,false,false,false,Optional.absent(),Optional.absent(),System.currentTimeMillis());\n      InputStream inputStream=receiver.retrieveAttachment(pointer,attachment,AvatarHelper.AVATAR_DOWNLOAD_FAILSAFE_MAX_SIZE);\n      AvatarHelper.setAvatar(context,record.get().getRecipientId(),inputStream);\n      DatabaseFactory.getGroupDatabase(context).onAvatarUpdated(groupId,true);\n      inputStream.close();\n    }\n  }\n catch (  NonSuccessfulResponseCodeException|InvalidMessageException|MissingConfigurationException e) {\n    Log.w(TAG,e);\n  }\n finally {\n    if (attachment != null)     attachment.delete();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 264,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 76,
        "startColumnNumber" : 12,
        "endLineNumber" : 76,
        "endColumnNumber" : 41
      },
      "nodeContext" : "avatarId == -1 || key == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 76,
    "startColumnNumber" : 30,
    "endLineNumber" : 76,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}