{
  "id" : 440,
  "expression" : "tempName.split(ConstVal.UNDERLINE)",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "7815611a659da4cc8d5443f5ef4c10ca0d937582",
  "filePath" : "/mybatis-plus-generate/src/main/java/com/baomidou/mybatisplus/generator/config/rules/NamingStrategy.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "tempName.split(ConstVal.UNDERLINE)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 34,
      "startLineNumber" : 50,
      "startColumnNumber" : 26,
      "endLineNumber" : 50,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 50,
        "startColumnNumber" : 15,
        "endLineNumber" : 50,
        "endColumnNumber" : 60
      },
      "nodeContext" : "camels[]=tempName.split(ConstVal.UNDERLINE)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 61
      },
      "nodeContext" : "String camels[]=tempName.split(ConstVal.UNDERLINE);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 924,
        "startLineNumber" : 37,
        "startColumnNumber" : 55,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (StringUtils.isEmpty(name)) {\n    return \"\";\n  }\n  String tempName=name;\n  if (StringUtils.isCapitalMode(name) || StringUtils.isMixedMode(name)) {\n    tempName=name.toLowerCase();\n  }\n  StringBuilder result=new StringBuilder();\n  String camels[]=tempName.split(ConstVal.UNDERLINE);\n  for (  String camel : camels) {\n    if (StringUtils.isEmpty(camel)) {\n      continue;\n    }\n    if (result.length() == 0) {\n      result.append(camel);\n    }\n else {\n      result.append(capitalFirst(camel));\n    }\n  }\n  return result.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.EnumDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 975,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static String underlineToCamel(String name){\n  if (StringUtils.isEmpty(name)) {\n    return \"\";\n  }\n  String tempName=name;\n  if (StringUtils.isCapitalMode(name) || StringUtils.isMixedMode(name)) {\n    tempName=name.toLowerCase();\n  }\n  StringBuilder result=new StringBuilder();\n  String camels[]=tempName.split(ConstVal.UNDERLINE);\n  for (  String camel : camels) {\n    if (StringUtils.isEmpty(camel)) {\n      continue;\n    }\n    if (result.length() == 0) {\n      result.append(camel);\n    }\n else {\n      result.append(capitalFirst(camel));\n    }\n  }\n  return result.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 100,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 61
      },
      "nodeContext" : "String camels[]=tempName.split(ConstVal.UNDERLINE);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "java.lang.String[]"
  } ],
  "positionList" : [ {
    "charLength" : 34,
    "startLineNumber" : 50,
    "startColumnNumber" : 26,
    "endLineNumber" : 50,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ ]
}