{
  "id" : 232,
  "expression" : "lifecycleLock.awaitStarted(1,TimeUnit.SECONDS)",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/indexing-service/src/main/java/org/apache/druid/indexing/worker/WorkerTaskManager.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "lifecycleLock.awaitStarted(1,TimeUnit.SECONDS)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 47,
      "startLineNumber" : 262,
      "startColumnNumber" : 29,
      "endLineNumber" : 262,
      "endColumnNumber" : 76
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 262,
        "startColumnNumber" : 4,
        "endLineNumber" : 262,
        "endColumnNumber" : 92
      },
      "nodeContext" : "Preconditions.checkState(lifecycleLock.awaitStarted(1,TimeUnit.SECONDS),\"not started\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 262,
        "startColumnNumber" : 4,
        "endLineNumber" : 262,
        "endColumnNumber" : 93
      },
      "nodeContext" : "Preconditions.checkState(lifecycleLock.awaitStarted(1,TimeUnit.SECONDS),\"not started\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1272,
        "startLineNumber" : 261,
        "startColumnNumber" : 2,
        "endLineNumber" : 300,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Preconditions.checkState(lifecycleLock.awaitStarted(1,TimeUnit.SECONDS),\"not started\");\nsynchronized (lock) {\n    if (assignedTasks.containsKey(task.getId()) || runningTasks.containsKey(task.getId()) || completedTasks.containsKey(task.getId())) {\n      log.warn(\"Request to assign task[%s] ignored because it exists already.\",task.getId());\n      return;\n    }\n    try {\n      FileUtils.writeAtomically(new File(getAssignedTaskDir(),task.getId()),getTmpTaskDir(),os -> {\n        jsonMapper.writeValue(os,task);\n        return null;\n      }\n);\n      assignedTasks.put(task.getId(),task);\n    }\n catch (    IOException ex) {\n      log.error(ex,\"Error while trying to persist assigned task[%s]\",task.getId());\n      throw new ISE(\"Assign Task[%s] Request failed because [%s].\",task.getId(),ex.getMessage());\n    }\n    changeHistory.addChangeRequest(new WorkerHistoryItem.TaskUpdate(TaskAnnouncement.create(task,TaskStatus.running(task.getId()),TaskLocation.unknown())));\n  }\n  submitNoticeToExec(new RunNotice(task));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 137,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1308,
        "startLineNumber" : 260,
        "startColumnNumber" : 2,
        "endLineNumber" : 300,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void assignTask(Task task){\n  Preconditions.checkState(lifecycleLock.awaitStarted(1,TimeUnit.SECONDS),\"not started\");\nsynchronized (lock) {\n    if (assignedTasks.containsKey(task.getId()) || runningTasks.containsKey(task.getId()) || completedTasks.containsKey(task.getId())) {\n      log.warn(\"Request to assign task[%s] ignored because it exists already.\",task.getId());\n      return;\n    }\n    try {\n      FileUtils.writeAtomically(new File(getAssignedTaskDir(),task.getId()),getTmpTaskDir(),os -> {\n        jsonMapper.writeValue(os,task);\n        return null;\n      }\n);\n      assignedTasks.put(task.getId(),task);\n    }\n catch (    IOException ex) {\n      log.error(ex,\"Error while trying to persist assigned task[%s]\",task.getId());\n      throw new ISE(\"Assign Task[%s] Request failed because [%s].\",task.getId(),ex.getMessage());\n    }\n    changeHistory.addChangeRequest(new WorkerHistoryItem.TaskUpdate(TaskAnnouncement.create(task,TaskStatus.running(task.getId()),TaskLocation.unknown())));\n  }\n  submitNoticeToExec(new RunNotice(task));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 145,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 262,
        "startColumnNumber" : 4,
        "endLineNumber" : 262,
        "endColumnNumber" : 93
      },
      "nodeContext" : "Preconditions.checkState(lifecycleLock.awaitStarted(1,TimeUnit.SECONDS),\"not started\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 47,
    "startLineNumber" : 262,
    "startColumnNumber" : 29,
    "endLineNumber" : 262,
    "endColumnNumber" : 76
  } ],
  "layoutRelationDataList" : [ ]
}