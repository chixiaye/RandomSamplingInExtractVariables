{
  "id" : 442,
  "expression" : "StoreQueryUtils.readPositionFromCheckpoint(positionCheckpoint)",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/streams/src/main/java/org/apache/kafka/streams/state/internals/AbstractRocksDBSegmentedBytesStore.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "StoreQueryUtils.readPositionFromCheckpoint(positionCheckpoint)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 62,
      "startLineNumber" : 269,
      "startColumnNumber" : 24,
      "endLineNumber" : 269,
      "endColumnNumber" : 86
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 269,
        "startColumnNumber" : 8,
        "endLineNumber" : 269,
        "endColumnNumber" : 86
      },
      "nodeContext" : "this.position=StoreQueryUtils.readPositionFromCheckpoint(positionCheckpoint)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 269,
        "startColumnNumber" : 8,
        "endLineNumber" : 269,
        "endColumnNumber" : 87
      },
      "nodeContext" : "this.position=StoreQueryUtils.readPositionFromCheckpoint(positionCheckpoint);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1238,
        "startLineNumber" : 252,
        "startColumnNumber" : 44,
        "endLineNumber" : 284,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.context=context;\n  final StreamsMetricsImpl metrics=ProcessorContextUtils.getMetricsImpl(context);\n  final String threadId=Thread.currentThread().getName();\n  final String taskName=context.taskId().toString();\n  expiredRecordSensor=TaskMetrics.droppedRecordsSensor(threadId,taskName,metrics);\n  segments.openExisting(this.context,observedStreamTime);\n  final File positionCheckpointFile=new File(context.stateDir(),name() + \".position\");\n  this.positionCheckpoint=new OffsetCheckpoint(positionCheckpointFile);\n  this.position=StoreQueryUtils.readPositionFromCheckpoint(positionCheckpoint);\n  stateStoreContext.register(root,(RecordBatchingStateRestoreCallback)this::restoreAllInternal,() -> StoreQueryUtils.checkpointPosition(positionCheckpoint,position));\n  open=true;\n  consistencyEnabled=StreamsConfig.InternalConfig.getBoolean(context.appConfigs(),IQ_CONSISTENCY_OFFSET_VECTOR_ENABLED,false);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1361,
        "startLineNumber" : 249,
        "startColumnNumber" : 4,
        "endLineNumber" : 284,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Deprecated @Override public void init(final ProcessorContext context,final StateStore root){\n  this.context=context;\n  final StreamsMetricsImpl metrics=ProcessorContextUtils.getMetricsImpl(context);\n  final String threadId=Thread.currentThread().getName();\n  final String taskName=context.taskId().toString();\n  expiredRecordSensor=TaskMetrics.droppedRecordsSensor(threadId,taskName,metrics);\n  segments.openExisting(this.context,observedStreamTime);\n  final File positionCheckpointFile=new File(context.stateDir(),name() + \".position\");\n  this.positionCheckpoint=new OffsetCheckpoint(positionCheckpointFile);\n  this.position=StoreQueryUtils.readPositionFromCheckpoint(positionCheckpoint);\n  stateStoreContext.register(root,(RecordBatchingStateRestoreCallback)this::restoreAllInternal,() -> StoreQueryUtils.checkpointPosition(positionCheckpoint,position));\n  open=true;\n  consistencyEnabled=StreamsConfig.InternalConfig.getBoolean(context.appConfigs(),IQ_CONSISTENCY_OFFSET_VECTOR_ENABLED,false);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 142,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 269,
        "startColumnNumber" : 8,
        "endLineNumber" : 269,
        "endColumnNumber" : 87
      },
      "nodeContext" : "this.position=StoreQueryUtils.readPositionFromCheckpoint(positionCheckpoint);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "org.apache.kafka.streams.query.Position"
  } ],
  "positionList" : [ {
    "charLength" : 62,
    "startLineNumber" : 269,
    "startColumnNumber" : 24,
    "endLineNumber" : 269,
    "endColumnNumber" : 86
  } ],
  "layoutRelationDataList" : [ ]
}