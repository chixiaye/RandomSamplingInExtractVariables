{
  "id" : 73,
  "expression" : "h",
  "projectName" : "antlr@antlr4",
  "commitID" : "f2b93e550cd912be3973743d09206db98f4092c9",
  "filePath" : "/tool/src/org/antlr/v4/automata/LexerATNFactory.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "h",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 181,
      "startColumnNumber" : 9,
      "endLineNumber" : 181,
      "endColumnNumber" : 10
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 181,
        "startColumnNumber" : 2,
        "endLineNumber" : 181,
        "endColumnNumber" : 11
      },
      "nodeContext" : "return h;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 384,
        "startLineNumber" : 171,
        "startColumnNumber" : 67,
        "endLineNumber" : 182,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  ATNState left=newState(node);\n  ATNState right=newState(node);\n  boolean isCtxDependent=false;\n  int lexerActionIndex=getLexerActionIndex(lexerAction);\n  ActionTransition a=new ActionTransition(right,currentRule.index,lexerActionIndex,isCtxDependent);\n  left.addTransition(a);\n  node.atnState=left;\n  Handle h=new Handle(left,right);\n  return h;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 450,
        "startLineNumber" : 171,
        "startColumnNumber" : 1,
        "endLineNumber" : 182,
        "endColumnNumber" : 2
      },
      "nodeContext" : "protected Handle action(GrammarAST node,LexerAction lexerAction){\n  ATNState left=newState(node);\n  ATNState right=newState(node);\n  boolean isCtxDependent=false;\n  int lexerActionIndex=getLexerActionIndex(lexerAction);\n  ActionTransition a=new ActionTransition(right,currentRule.index,lexerActionIndex,isCtxDependent);\n  left.addTransition(a);\n  node.atnState=left;\n  Handle h=new Handle(left,right);\n  return h;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 79,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 181,
        "startColumnNumber" : 2,
        "endLineNumber" : 181,
        "endColumnNumber" : 11
      },
      "nodeContext" : "return h;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.antlr.v4.automata.ATNFactory.Handle"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 181,
    "startColumnNumber" : 9,
    "endLineNumber" : 181,
    "endColumnNumber" : 10
  } ],
  "layoutRelationDataList" : [ ]
}