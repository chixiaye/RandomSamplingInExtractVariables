{
  "id" : 61,
  "expression" : "10",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-functions/instance/src/test/java/org/apache/pulsar/functions/instance/FunctionResultRouterTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "10",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 58,
      "startColumnNumber" : 28,
      "endLineNumber" : 58,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 58,
        "startColumnNumber" : 24,
        "endLineNumber" : 58,
        "endColumnNumber" : 30
      },
      "nodeContext" : "i < 10",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 175,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 10; i++) {\n  when(clock.millis()).thenReturn(123450L + i);\n  assertEquals(i % 5,router.choosePartition(msg,topicMetadata));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 620,
        "startLineNumber" : 47,
        "startColumnNumber" : 65,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Message<?> msg=mock(Message.class);\n  when(msg.hasKey()).thenReturn(false);\n  when(msg.getKey()).thenReturn(null);\n  when(msg.getSequenceId()).thenReturn(-1L);\n  TopicMetadata topicMetadata=mock(TopicMetadata.class);\n  when(topicMetadata.numPartitions()).thenReturn(5);\n  Clock clock=mock(Clock.class);\n  FunctionResultRouter router=new FunctionResultRouter(0,clock);\n  for (int i=0; i < 10; i++) {\n    when(clock.millis()).thenReturn(123450L + i);\n    assertEquals(i % 5,router.choosePartition(msg,topicMetadata));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 691,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testChoosePartitionWithoutKeyWithoutSequenceId(){\n  Message<?> msg=mock(Message.class);\n  when(msg.hasKey()).thenReturn(false);\n  when(msg.getKey()).thenReturn(null);\n  when(msg.getSequenceId()).thenReturn(-1L);\n  TopicMetadata topicMetadata=mock(TopicMetadata.class);\n  when(topicMetadata.numPartitions()).thenReturn(5);\n  Clock clock=mock(Clock.class);\n  FunctionResultRouter router=new FunctionResultRouter(0,clock);\n  for (int i=0; i < 10; i++) {\n    when(clock.millis()).thenReturn(123450L + i);\n    assertEquals(i % 5,router.choosePartition(msg,topicMetadata));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 120,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 6,
        "startLineNumber" : 58,
        "startColumnNumber" : 24,
        "endLineNumber" : 58,
        "endColumnNumber" : 30
      },
      "nodeContext" : "i < 10",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 58,
    "startColumnNumber" : 28,
    "endLineNumber" : 58,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}