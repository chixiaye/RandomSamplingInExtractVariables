{
  "id" : 302,
  "expression" : "new HttpResponseMessageImpl(context,request,99)",
  "projectName" : "Netflix@zuul",
  "commitID" : "f8ef3551d8dd57a512336315ec51bb6c0444c517",
  "filePath" : "/zuul-core/src/test/java/com/netflix/zuul/filters/common/GZipResponseFilterTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new HttpResponseMessageImpl(context,request,99)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 49,
      "startLineNumber" : 50,
      "startColumnNumber" : 19,
      "endLineNumber" : 50,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 68
      },
      "nodeContext" : "response=new HttpResponseMessageImpl(context,request,99)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 69
      },
      "nodeContext" : "response=new HttpResponseMessageImpl(context,request,99);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 234,
        "startLineNumber" : 47,
        "startColumnNumber" : 24,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  super.setup();\n  filter=Mockito.spy(new GZipResponseFilter());\n  response=new HttpResponseMessageImpl(context,request,99);\n  response.getHeaders().set(HttpHeaderNames.CONTENT_TYPE,\"text/html\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 266,
        "startLineNumber" : 46,
        "startColumnNumber" : 4,
        "endLineNumber" : 52,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Before public void setup(){\n  super.setup();\n  filter=Mockito.spy(new GZipResponseFilter());\n  response=new HttpResponseMessageImpl(context,request,99);\n  response.getHeaders().set(HttpHeaderNames.CONTENT_TYPE,\"text/html\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 38,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 69
      },
      "nodeContext" : "response=new HttpResponseMessageImpl(context,request,99);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "com.netflix.zuul.message.http.HttpResponseMessageImpl"
  } ],
  "positionList" : [ {
    "charLength" : 49,
    "startLineNumber" : 50,
    "startColumnNumber" : 19,
    "endLineNumber" : 50,
    "endColumnNumber" : 68
  } ],
  "layoutRelationDataList" : [ ]
}