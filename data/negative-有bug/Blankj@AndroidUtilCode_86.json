{
  "id" : 86,
  "expression" : "process.getErrorStream()",
  "projectName" : "Blankj@AndroidUtilCode",
  "commitID" : "b0f09e2df62a8b5e40c07016bf0588e3d1eb4151",
  "filePath" : "/utilcode/src/main/java/com/blankj/utilcode/util/ShellUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "process.getErrorStream()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 114,
      "startColumnNumber" : 71,
      "endLineNumber" : 114,
      "endColumnNumber" : 95
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 114,
        "startColumnNumber" : 49,
        "endLineNumber" : 114,
        "endColumnNumber" : 105
      },
      "nodeContext" : "new InputStreamReader(process.getErrorStream(),\"UTF-8\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 114,
        "startColumnNumber" : 30,
        "endLineNumber" : 114,
        "endColumnNumber" : 106
      },
      "nodeContext" : "new BufferedReader(new InputStreamReader(process.getErrorStream(),\"UTF-8\"))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 114,
        "startColumnNumber" : 16,
        "endLineNumber" : 114,
        "endColumnNumber" : 106
      },
      "nodeContext" : "errorResult=new BufferedReader(new InputStreamReader(process.getErrorStream(),\"UTF-8\"))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 114,
        "startColumnNumber" : 16,
        "endLineNumber" : 114,
        "endColumnNumber" : 107
      },
      "nodeContext" : "errorResult=new BufferedReader(new InputStreamReader(process.getErrorStream(),\"UTF-8\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 603,
        "startLineNumber" : 110,
        "startColumnNumber" : 33,
        "endLineNumber" : 122,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  successMsg=new StringBuilder();\n  errorMsg=new StringBuilder();\n  successResult=new BufferedReader(new InputStreamReader(process.getInputStream(),\"UTF-8\"));\n  errorResult=new BufferedReader(new InputStreamReader(process.getErrorStream(),\"UTF-8\"));\n  String s;\n  while ((s=successResult.readLine()) != null) {\n    successMsg.append(s);\n  }\n  while ((s=errorResult.readLine()) != null) {\n    errorMsg.append(s);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 624,
        "startLineNumber" : 110,
        "startColumnNumber" : 12,
        "endLineNumber" : 122,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (isNeedResultMsg) {\n  successMsg=new StringBuilder();\n  errorMsg=new StringBuilder();\n  successResult=new BufferedReader(new InputStreamReader(process.getInputStream(),\"UTF-8\"));\n  errorResult=new BufferedReader(new InputStreamReader(process.getErrorStream(),\"UTF-8\"));\n  String s;\n  while ((s=successResult.readLine()) != null) {\n    successMsg.append(s);\n  }\n  while ((s=errorResult.readLine()) != null) {\n    errorMsg.append(s);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 76,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1104,
        "startLineNumber" : 98,
        "startColumnNumber" : 12,
        "endLineNumber" : 123,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  process=Runtime.getRuntime().exec(isRoot ? \"su\" : \"sh\");\n  os=new DataOutputStream(process.getOutputStream());\n  for (  String command : commands) {\n    if (command == null)     continue;\n    os.write(command.getBytes());\n    os.writeBytes(\"\\n\");\n    os.flush();\n  }\n  os.writeBytes(\"exit\\n\");\n  os.flush();\n  result=process.waitFor();\n  if (isNeedResultMsg) {\n    successMsg=new StringBuilder();\n    errorMsg=new StringBuilder();\n    successResult=new BufferedReader(new InputStreamReader(process.getInputStream(),\"UTF-8\"));\n    errorResult=new BufferedReader(new InputStreamReader(process.getErrorStream(),\"UTF-8\"));\n    String s;\n    while ((s=successResult.readLine()) != null) {\n      successMsg.append(s);\n    }\n    while ((s=errorResult.readLine()) != null) {\n      errorMsg.append(s);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1341,
        "startLineNumber" : 98,
        "startColumnNumber" : 8,
        "endLineNumber" : 130,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  process=Runtime.getRuntime().exec(isRoot ? \"su\" : \"sh\");\n  os=new DataOutputStream(process.getOutputStream());\n  for (  String command : commands) {\n    if (command == null)     continue;\n    os.write(command.getBytes());\n    os.writeBytes(\"\\n\");\n    os.flush();\n  }\n  os.writeBytes(\"exit\\n\");\n  os.flush();\n  result=process.waitFor();\n  if (isNeedResultMsg) {\n    successMsg=new StringBuilder();\n    errorMsg=new StringBuilder();\n    successResult=new BufferedReader(new InputStreamReader(process.getInputStream(),\"UTF-8\"));\n    errorResult=new BufferedReader(new InputStreamReader(process.getErrorStream(),\"UTF-8\"));\n    String s;\n    while ((s=successResult.readLine()) != null) {\n      successMsg.append(s);\n    }\n    while ((s=errorResult.readLine()) != null) {\n      errorMsg.append(s);\n    }\n  }\n}\n catch (Exception e) {\n  e.printStackTrace();\n}\n finally {\n  CloseUtils.closeIO(os,successResult,errorResult);\n  if (process != null) {\n    process.destroy();\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 169,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1940,
        "startLineNumber" : 87,
        "startColumnNumber" : 118,
        "endLineNumber" : 136,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int result=-1;\n  if (commands == null || commands.length == 0) {\n    return new CommandResult(result,null,null);\n  }\n  Process process=null;\n  BufferedReader successResult=null;\n  BufferedReader errorResult=null;\n  StringBuilder successMsg=null;\n  StringBuilder errorMsg=null;\n  DataOutputStream os=null;\n  try {\n    process=Runtime.getRuntime().exec(isRoot ? \"su\" : \"sh\");\n    os=new DataOutputStream(process.getOutputStream());\n    for (    String command : commands) {\n      if (command == null)       continue;\n      os.write(command.getBytes());\n      os.writeBytes(\"\\n\");\n      os.flush();\n    }\n    os.writeBytes(\"exit\\n\");\n    os.flush();\n    result=process.waitFor();\n    if (isNeedResultMsg) {\n      successMsg=new StringBuilder();\n      errorMsg=new StringBuilder();\n      successResult=new BufferedReader(new InputStreamReader(process.getInputStream(),\"UTF-8\"));\n      errorResult=new BufferedReader(new InputStreamReader(process.getErrorStream(),\"UTF-8\"));\n      String s;\n      while ((s=successResult.readLine()) != null) {\n        successMsg.append(s);\n      }\n      while ((s=errorResult.readLine()) != null) {\n        errorMsg.append(s);\n      }\n    }\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n finally {\n    CloseUtils.closeIO(os,successResult,errorResult);\n    if (process != null) {\n      process.destroy();\n    }\n  }\n  return new CommandResult(result,successMsg == null ? null : successMsg.toString(),errorMsg == null ? null : errorMsg.toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 251,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2244,
        "startLineNumber" : 79,
        "startColumnNumber" : 4,
        "endLineNumber" : 136,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * 是否是在root下执行命令\n * @param commands        命令数组\n * @param isRoot          是否需要root权限执行\n * @param isNeedResultMsg 是否需要结果消息\n * @return CommandResult\n */\npublic static CommandResult execCmd(final String[] commands,final boolean isRoot,final boolean isNeedResultMsg){\n  int result=-1;\n  if (commands == null || commands.length == 0) {\n    return new CommandResult(result,null,null);\n  }\n  Process process=null;\n  BufferedReader successResult=null;\n  BufferedReader errorResult=null;\n  StringBuilder successMsg=null;\n  StringBuilder errorMsg=null;\n  DataOutputStream os=null;\n  try {\n    process=Runtime.getRuntime().exec(isRoot ? \"su\" : \"sh\");\n    os=new DataOutputStream(process.getOutputStream());\n    for (    String command : commands) {\n      if (command == null)       continue;\n      os.write(command.getBytes());\n      os.writeBytes(\"\\n\");\n      os.flush();\n    }\n    os.writeBytes(\"exit\\n\");\n    os.flush();\n    result=process.waitFor();\n    if (isNeedResultMsg) {\n      successMsg=new StringBuilder();\n      errorMsg=new StringBuilder();\n      successResult=new BufferedReader(new InputStreamReader(process.getInputStream(),\"UTF-8\"));\n      errorResult=new BufferedReader(new InputStreamReader(process.getErrorStream(),\"UTF-8\"));\n      String s;\n      while ((s=successResult.readLine()) != null) {\n        successMsg.append(s);\n      }\n      while ((s=errorResult.readLine()) != null) {\n        errorMsg.append(s);\n      }\n    }\n  }\n catch (  Exception e) {\n    e.printStackTrace();\n  }\n finally {\n    CloseUtils.closeIO(os,successResult,errorResult);\n    if (process != null) {\n      process.destroy();\n    }\n  }\n  return new CommandResult(result,successMsg == null ? null : successMsg.toString(),errorMsg == null ? null : errorMsg.toString());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 273,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 114,
        "startColumnNumber" : 16,
        "endLineNumber" : 114,
        "endColumnNumber" : 107
      },
      "nodeContext" : "errorResult=new BufferedReader(new InputStreamReader(process.getErrorStream(),\"UTF-8\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "java.io.InputStream"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 114,
    "startColumnNumber" : 71,
    "endLineNumber" : 114,
    "endColumnNumber" : 95
  } ],
  "layoutRelationDataList" : [ ]
}