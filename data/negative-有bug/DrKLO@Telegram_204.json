{
  "id" : 204,
  "expression" : "this",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/com/google/android/exoplayer2/upstream/cache/CacheDataSource.java",
  "occurrences" : 10,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 236,
      "startColumnNumber" : 4,
      "endLineNumber" : 236,
      "endColumnNumber" : 8
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 236,
        "startColumnNumber" : 4,
        "endLineNumber" : 236,
        "endColumnNumber" : 14
      },
      "nodeContext" : "this.cache",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 236,
        "startColumnNumber" : 4,
        "endLineNumber" : 236,
        "endColumnNumber" : 22
      },
      "nodeContext" : "this.cache=cache",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 236,
        "startColumnNumber" : 4,
        "endLineNumber" : 236,
        "endColumnNumber" : 23
      },
      "nodeContext" : "this.cache=cache;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 703,
        "startLineNumber" : 235,
        "startColumnNumber" : 49,
        "endLineNumber" : 251,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  this.cache=cache;\n  this.cacheReadDataSource=cacheReadDataSource;\n  this.cacheKeyFactory=cacheKeyFactory != null ? cacheKeyFactory : CacheUtil.DEFAULT_CACHE_KEY_FACTORY;\n  this.blockOnCache=(flags & FLAG_BLOCK_ON_CACHE) != 0;\n  this.ignoreCacheOnError=(flags & FLAG_IGNORE_CACHE_ON_ERROR) != 0;\n  this.ignoreCacheForUnsetLengthRequests=(flags & FLAG_IGNORE_CACHE_FOR_UNSET_LENGTH_REQUESTS) != 0;\n  this.upstreamDataSource=upstream;\n  if (cacheWriteDataSink != null) {\n    this.cacheWriteDataSource=new TeeDataSource(upstream,cacheWriteDataSink);\n  }\n else {\n    this.cacheWriteDataSource=null;\n  }\n  this.eventListener=eventListener;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1859,
        "startLineNumber" : 213,
        "startColumnNumber" : 2,
        "endLineNumber" : 251,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Constructs an instance with arbitrary  {@link DataSource} and {@link DataSink} instances forreading and writing the cache. One use of this constructor is to allow data to be transformed before it is written to disk.\n * @param cache The cache.\n * @param upstream A {@link DataSource} for reading data not in the cache.\n * @param cacheReadDataSource A {@link DataSource} for reading data from the cache.\n * @param cacheWriteDataSink A {@link DataSink} for writing data to the cache. If null, cache isaccessed read-only.\n * @param flags A combination of {@link #FLAG_BLOCK_ON_CACHE},  {@link #FLAG_IGNORE_CACHE_ON_ERROR}and  {@link #FLAG_IGNORE_CACHE_FOR_UNSET_LENGTH_REQUESTS}, or 0.\n * @param eventListener An optional {@link EventListener} to receive events.\n * @param cacheKeyFactory An optional factory for cache keys.\n */\npublic CacheDataSource(Cache cache,DataSource upstream,DataSource cacheReadDataSource,@Nullable DataSink cacheWriteDataSink,@Flags int flags,@Nullable EventListener eventListener,@Nullable CacheKeyFactory cacheKeyFactory){\n  this.cache=cache;\n  this.cacheReadDataSource=cacheReadDataSource;\n  this.cacheKeyFactory=cacheKeyFactory != null ? cacheKeyFactory : CacheUtil.DEFAULT_CACHE_KEY_FACTORY;\n  this.blockOnCache=(flags & FLAG_BLOCK_ON_CACHE) != 0;\n  this.ignoreCacheOnError=(flags & FLAG_IGNORE_CACHE_ON_ERROR) != 0;\n  this.ignoreCacheForUnsetLengthRequests=(flags & FLAG_IGNORE_CACHE_FOR_UNSET_LENGTH_REQUESTS) != 0;\n  this.upstreamDataSource=upstream;\n  if (cacheWriteDataSink != null) {\n    this.cacheWriteDataSource=new TeeDataSource(upstream,cacheWriteDataSink);\n  }\n else {\n    this.cacheWriteDataSource=null;\n  }\n  this.eventListener=eventListener;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 132,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 236,
        "startColumnNumber" : 4,
        "endLineNumber" : 236,
        "endColumnNumber" : 23
      },
      "nodeContext" : "this.cache=cache;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.android.exoplayer2.upstream.cache.CacheDataSource"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 237,
      "startColumnNumber" : 4,
      "endLineNumber" : 237,
      "endColumnNumber" : 8
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 237,
        "startColumnNumber" : 4,
        "endLineNumber" : 237,
        "endColumnNumber" : 28
      },
      "nodeContext" : "this.cacheReadDataSource",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 237,
        "startColumnNumber" : 4,
        "endLineNumber" : 237,
        "endColumnNumber" : 50
      },
      "nodeContext" : "this.cacheReadDataSource=cacheReadDataSource",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 237,
        "startColumnNumber" : 4,
        "endLineNumber" : 237,
        "endColumnNumber" : 51
      },
      "nodeContext" : "this.cacheReadDataSource=cacheReadDataSource;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 703,
        "startLineNumber" : 235,
        "startColumnNumber" : 49,
        "endLineNumber" : 251,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  this.cache=cache;\n  this.cacheReadDataSource=cacheReadDataSource;\n  this.cacheKeyFactory=cacheKeyFactory != null ? cacheKeyFactory : CacheUtil.DEFAULT_CACHE_KEY_FACTORY;\n  this.blockOnCache=(flags & FLAG_BLOCK_ON_CACHE) != 0;\n  this.ignoreCacheOnError=(flags & FLAG_IGNORE_CACHE_ON_ERROR) != 0;\n  this.ignoreCacheForUnsetLengthRequests=(flags & FLAG_IGNORE_CACHE_FOR_UNSET_LENGTH_REQUESTS) != 0;\n  this.upstreamDataSource=upstream;\n  if (cacheWriteDataSink != null) {\n    this.cacheWriteDataSource=new TeeDataSource(upstream,cacheWriteDataSink);\n  }\n else {\n    this.cacheWriteDataSource=null;\n  }\n  this.eventListener=eventListener;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1859,
        "startLineNumber" : 213,
        "startColumnNumber" : 2,
        "endLineNumber" : 251,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Constructs an instance with arbitrary  {@link DataSource} and {@link DataSink} instances forreading and writing the cache. One use of this constructor is to allow data to be transformed before it is written to disk.\n * @param cache The cache.\n * @param upstream A {@link DataSource} for reading data not in the cache.\n * @param cacheReadDataSource A {@link DataSource} for reading data from the cache.\n * @param cacheWriteDataSink A {@link DataSink} for writing data to the cache. If null, cache isaccessed read-only.\n * @param flags A combination of {@link #FLAG_BLOCK_ON_CACHE},  {@link #FLAG_IGNORE_CACHE_ON_ERROR}and  {@link #FLAG_IGNORE_CACHE_FOR_UNSET_LENGTH_REQUESTS}, or 0.\n * @param eventListener An optional {@link EventListener} to receive events.\n * @param cacheKeyFactory An optional factory for cache keys.\n */\npublic CacheDataSource(Cache cache,DataSource upstream,DataSource cacheReadDataSource,@Nullable DataSink cacheWriteDataSink,@Flags int flags,@Nullable EventListener eventListener,@Nullable CacheKeyFactory cacheKeyFactory){\n  this.cache=cache;\n  this.cacheReadDataSource=cacheReadDataSource;\n  this.cacheKeyFactory=cacheKeyFactory != null ? cacheKeyFactory : CacheUtil.DEFAULT_CACHE_KEY_FACTORY;\n  this.blockOnCache=(flags & FLAG_BLOCK_ON_CACHE) != 0;\n  this.ignoreCacheOnError=(flags & FLAG_IGNORE_CACHE_ON_ERROR) != 0;\n  this.ignoreCacheForUnsetLengthRequests=(flags & FLAG_IGNORE_CACHE_FOR_UNSET_LENGTH_REQUESTS) != 0;\n  this.upstreamDataSource=upstream;\n  if (cacheWriteDataSink != null) {\n    this.cacheWriteDataSource=new TeeDataSource(upstream,cacheWriteDataSink);\n  }\n else {\n    this.cacheWriteDataSource=null;\n  }\n  this.eventListener=eventListener;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 132,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 237,
        "startColumnNumber" : 4,
        "endLineNumber" : 237,
        "endColumnNumber" : 51
      },
      "nodeContext" : "this.cacheReadDataSource=cacheReadDataSource;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.android.exoplayer2.upstream.cache.CacheDataSource"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 238,
      "startColumnNumber" : 4,
      "endLineNumber" : 238,
      "endColumnNumber" : 8
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 238,
        "startColumnNumber" : 4,
        "endLineNumber" : 238,
        "endColumnNumber" : 24
      },
      "nodeContext" : "this.cacheKeyFactory",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 238,
        "startColumnNumber" : 4,
        "endLineNumber" : 239,
        "endColumnNumber" : 87
      },
      "nodeContext" : "this.cacheKeyFactory=cacheKeyFactory != null ? cacheKeyFactory : CacheUtil.DEFAULT_CACHE_KEY_FACTORY",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 238,
        "startColumnNumber" : 4,
        "endLineNumber" : 239,
        "endColumnNumber" : 88
      },
      "nodeContext" : "this.cacheKeyFactory=cacheKeyFactory != null ? cacheKeyFactory : CacheUtil.DEFAULT_CACHE_KEY_FACTORY;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 703,
        "startLineNumber" : 235,
        "startColumnNumber" : 49,
        "endLineNumber" : 251,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  this.cache=cache;\n  this.cacheReadDataSource=cacheReadDataSource;\n  this.cacheKeyFactory=cacheKeyFactory != null ? cacheKeyFactory : CacheUtil.DEFAULT_CACHE_KEY_FACTORY;\n  this.blockOnCache=(flags & FLAG_BLOCK_ON_CACHE) != 0;\n  this.ignoreCacheOnError=(flags & FLAG_IGNORE_CACHE_ON_ERROR) != 0;\n  this.ignoreCacheForUnsetLengthRequests=(flags & FLAG_IGNORE_CACHE_FOR_UNSET_LENGTH_REQUESTS) != 0;\n  this.upstreamDataSource=upstream;\n  if (cacheWriteDataSink != null) {\n    this.cacheWriteDataSource=new TeeDataSource(upstream,cacheWriteDataSink);\n  }\n else {\n    this.cacheWriteDataSource=null;\n  }\n  this.eventListener=eventListener;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1859,
        "startLineNumber" : 213,
        "startColumnNumber" : 2,
        "endLineNumber" : 251,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Constructs an instance with arbitrary  {@link DataSource} and {@link DataSink} instances forreading and writing the cache. One use of this constructor is to allow data to be transformed before it is written to disk.\n * @param cache The cache.\n * @param upstream A {@link DataSource} for reading data not in the cache.\n * @param cacheReadDataSource A {@link DataSource} for reading data from the cache.\n * @param cacheWriteDataSink A {@link DataSink} for writing data to the cache. If null, cache isaccessed read-only.\n * @param flags A combination of {@link #FLAG_BLOCK_ON_CACHE},  {@link #FLAG_IGNORE_CACHE_ON_ERROR}and  {@link #FLAG_IGNORE_CACHE_FOR_UNSET_LENGTH_REQUESTS}, or 0.\n * @param eventListener An optional {@link EventListener} to receive events.\n * @param cacheKeyFactory An optional factory for cache keys.\n */\npublic CacheDataSource(Cache cache,DataSource upstream,DataSource cacheReadDataSource,@Nullable DataSink cacheWriteDataSink,@Flags int flags,@Nullable EventListener eventListener,@Nullable CacheKeyFactory cacheKeyFactory){\n  this.cache=cache;\n  this.cacheReadDataSource=cacheReadDataSource;\n  this.cacheKeyFactory=cacheKeyFactory != null ? cacheKeyFactory : CacheUtil.DEFAULT_CACHE_KEY_FACTORY;\n  this.blockOnCache=(flags & FLAG_BLOCK_ON_CACHE) != 0;\n  this.ignoreCacheOnError=(flags & FLAG_IGNORE_CACHE_ON_ERROR) != 0;\n  this.ignoreCacheForUnsetLengthRequests=(flags & FLAG_IGNORE_CACHE_FOR_UNSET_LENGTH_REQUESTS) != 0;\n  this.upstreamDataSource=upstream;\n  if (cacheWriteDataSink != null) {\n    this.cacheWriteDataSource=new TeeDataSource(upstream,cacheWriteDataSink);\n  }\n else {\n    this.cacheWriteDataSource=null;\n  }\n  this.eventListener=eventListener;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 132,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 238,
        "startColumnNumber" : 4,
        "endLineNumber" : 238,
        "endColumnNumber" : 24
      },
      "nodeContext" : "this.cacheKeyFactory",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.google.android.exoplayer2.upstream.cache.CacheDataSource"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 240,
      "startColumnNumber" : 4,
      "endLineNumber" : 240,
      "endColumnNumber" : 8
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 240,
        "startColumnNumber" : 4,
        "endLineNumber" : 240,
        "endColumnNumber" : 21
      },
      "nodeContext" : "this.blockOnCache",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 240,
        "startColumnNumber" : 4,
        "endLineNumber" : 240,
        "endColumnNumber" : 58
      },
      "nodeContext" : "this.blockOnCache=(flags & FLAG_BLOCK_ON_CACHE) != 0",
      "nodeType" : "Assignment",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 240,
        "startColumnNumber" : 4,
        "endLineNumber" : 240,
        "endColumnNumber" : 59
      },
      "nodeContext" : "this.blockOnCache=(flags & FLAG_BLOCK_ON_CACHE) != 0;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 703,
        "startLineNumber" : 235,
        "startColumnNumber" : 49,
        "endLineNumber" : 251,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  this.cache=cache;\n  this.cacheReadDataSource=cacheReadDataSource;\n  this.cacheKeyFactory=cacheKeyFactory != null ? cacheKeyFactory : CacheUtil.DEFAULT_CACHE_KEY_FACTORY;\n  this.blockOnCache=(flags & FLAG_BLOCK_ON_CACHE) != 0;\n  this.ignoreCacheOnError=(flags & FLAG_IGNORE_CACHE_ON_ERROR) != 0;\n  this.ignoreCacheForUnsetLengthRequests=(flags & FLAG_IGNORE_CACHE_FOR_UNSET_LENGTH_REQUESTS) != 0;\n  this.upstreamDataSource=upstream;\n  if (cacheWriteDataSink != null) {\n    this.cacheWriteDataSource=new TeeDataSource(upstream,cacheWriteDataSink);\n  }\n else {\n    this.cacheWriteDataSource=null;\n  }\n  this.eventListener=eventListener;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1859,
        "startLineNumber" : 213,
        "startColumnNumber" : 2,
        "endLineNumber" : 251,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Constructs an instance with arbitrary  {@link DataSource} and {@link DataSink} instances forreading and writing the cache. One use of this constructor is to allow data to be transformed before it is written to disk.\n * @param cache The cache.\n * @param upstream A {@link DataSource} for reading data not in the cache.\n * @param cacheReadDataSource A {@link DataSource} for reading data from the cache.\n * @param cacheWriteDataSink A {@link DataSink} for writing data to the cache. If null, cache isaccessed read-only.\n * @param flags A combination of {@link #FLAG_BLOCK_ON_CACHE},  {@link #FLAG_IGNORE_CACHE_ON_ERROR}and  {@link #FLAG_IGNORE_CACHE_FOR_UNSET_LENGTH_REQUESTS}, or 0.\n * @param eventListener An optional {@link EventListener} to receive events.\n * @param cacheKeyFactory An optional factory for cache keys.\n */\npublic CacheDataSource(Cache cache,DataSource upstream,DataSource cacheReadDataSource,@Nullable DataSink cacheWriteDataSink,@Flags int flags,@Nullable EventListener eventListener,@Nullable CacheKeyFactory cacheKeyFactory){\n  this.cache=cache;\n  this.cacheReadDataSource=cacheReadDataSource;\n  this.cacheKeyFactory=cacheKeyFactory != null ? cacheKeyFactory : CacheUtil.DEFAULT_CACHE_KEY_FACTORY;\n  this.blockOnCache=(flags & FLAG_BLOCK_ON_CACHE) != 0;\n  this.ignoreCacheOnError=(flags & FLAG_IGNORE_CACHE_ON_ERROR) != 0;\n  this.ignoreCacheForUnsetLengthRequests=(flags & FLAG_IGNORE_CACHE_FOR_UNSET_LENGTH_REQUESTS) != 0;\n  this.upstreamDataSource=upstream;\n  if (cacheWriteDataSink != null) {\n    this.cacheWriteDataSource=new TeeDataSource(upstream,cacheWriteDataSink);\n  }\n else {\n    this.cacheWriteDataSource=null;\n  }\n  this.eventListener=eventListener;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 132,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 240,
        "startColumnNumber" : 4,
        "endLineNumber" : 240,
        "endColumnNumber" : 59
      },
      "nodeContext" : "this.blockOnCache=(flags & FLAG_BLOCK_ON_CACHE) != 0;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "com.google.android.exoplayer2.upstream.cache.CacheDataSource"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 241,
      "startColumnNumber" : 4,
      "endLineNumber" : 241,
      "endColumnNumber" : 8
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 241,
        "startColumnNumber" : 4,
        "endLineNumber" : 241,
        "endColumnNumber" : 27
      },
      "nodeContext" : "this.ignoreCacheOnError",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 241,
        "startColumnNumber" : 4,
        "endLineNumber" : 241,
        "endColumnNumber" : 71
      },
      "nodeContext" : "this.ignoreCacheOnError=(flags & FLAG_IGNORE_CACHE_ON_ERROR) != 0",
      "nodeType" : "Assignment",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 241,
        "startColumnNumber" : 4,
        "endLineNumber" : 241,
        "endColumnNumber" : 72
      },
      "nodeContext" : "this.ignoreCacheOnError=(flags & FLAG_IGNORE_CACHE_ON_ERROR) != 0;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 703,
        "startLineNumber" : 235,
        "startColumnNumber" : 49,
        "endLineNumber" : 251,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  this.cache=cache;\n  this.cacheReadDataSource=cacheReadDataSource;\n  this.cacheKeyFactory=cacheKeyFactory != null ? cacheKeyFactory : CacheUtil.DEFAULT_CACHE_KEY_FACTORY;\n  this.blockOnCache=(flags & FLAG_BLOCK_ON_CACHE) != 0;\n  this.ignoreCacheOnError=(flags & FLAG_IGNORE_CACHE_ON_ERROR) != 0;\n  this.ignoreCacheForUnsetLengthRequests=(flags & FLAG_IGNORE_CACHE_FOR_UNSET_LENGTH_REQUESTS) != 0;\n  this.upstreamDataSource=upstream;\n  if (cacheWriteDataSink != null) {\n    this.cacheWriteDataSource=new TeeDataSource(upstream,cacheWriteDataSink);\n  }\n else {\n    this.cacheWriteDataSource=null;\n  }\n  this.eventListener=eventListener;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1859,
        "startLineNumber" : 213,
        "startColumnNumber" : 2,
        "endLineNumber" : 251,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Constructs an instance with arbitrary  {@link DataSource} and {@link DataSink} instances forreading and writing the cache. One use of this constructor is to allow data to be transformed before it is written to disk.\n * @param cache The cache.\n * @param upstream A {@link DataSource} for reading data not in the cache.\n * @param cacheReadDataSource A {@link DataSource} for reading data from the cache.\n * @param cacheWriteDataSink A {@link DataSink} for writing data to the cache. If null, cache isaccessed read-only.\n * @param flags A combination of {@link #FLAG_BLOCK_ON_CACHE},  {@link #FLAG_IGNORE_CACHE_ON_ERROR}and  {@link #FLAG_IGNORE_CACHE_FOR_UNSET_LENGTH_REQUESTS}, or 0.\n * @param eventListener An optional {@link EventListener} to receive events.\n * @param cacheKeyFactory An optional factory for cache keys.\n */\npublic CacheDataSource(Cache cache,DataSource upstream,DataSource cacheReadDataSource,@Nullable DataSink cacheWriteDataSink,@Flags int flags,@Nullable EventListener eventListener,@Nullable CacheKeyFactory cacheKeyFactory){\n  this.cache=cache;\n  this.cacheReadDataSource=cacheReadDataSource;\n  this.cacheKeyFactory=cacheKeyFactory != null ? cacheKeyFactory : CacheUtil.DEFAULT_CACHE_KEY_FACTORY;\n  this.blockOnCache=(flags & FLAG_BLOCK_ON_CACHE) != 0;\n  this.ignoreCacheOnError=(flags & FLAG_IGNORE_CACHE_ON_ERROR) != 0;\n  this.ignoreCacheForUnsetLengthRequests=(flags & FLAG_IGNORE_CACHE_FOR_UNSET_LENGTH_REQUESTS) != 0;\n  this.upstreamDataSource=upstream;\n  if (cacheWriteDataSink != null) {\n    this.cacheWriteDataSource=new TeeDataSource(upstream,cacheWriteDataSink);\n  }\n else {\n    this.cacheWriteDataSource=null;\n  }\n  this.eventListener=eventListener;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 132,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 241,
        "startColumnNumber" : 4,
        "endLineNumber" : 241,
        "endColumnNumber" : 72
      },
      "nodeContext" : "this.ignoreCacheOnError=(flags & FLAG_IGNORE_CACHE_ON_ERROR) != 0;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "com.google.android.exoplayer2.upstream.cache.CacheDataSource"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 242,
      "startColumnNumber" : 4,
      "endLineNumber" : 242,
      "endColumnNumber" : 8
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 242,
        "startColumnNumber" : 4,
        "endLineNumber" : 242,
        "endColumnNumber" : 42
      },
      "nodeContext" : "this.ignoreCacheForUnsetLengthRequests",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 242,
        "startColumnNumber" : 4,
        "endLineNumber" : 243,
        "endColumnNumber" : 66
      },
      "nodeContext" : "this.ignoreCacheForUnsetLengthRequests=(flags & FLAG_IGNORE_CACHE_FOR_UNSET_LENGTH_REQUESTS) != 0",
      "nodeType" : "Assignment",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 242,
        "startColumnNumber" : 4,
        "endLineNumber" : 243,
        "endColumnNumber" : 67
      },
      "nodeContext" : "this.ignoreCacheForUnsetLengthRequests=(flags & FLAG_IGNORE_CACHE_FOR_UNSET_LENGTH_REQUESTS) != 0;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 703,
        "startLineNumber" : 235,
        "startColumnNumber" : 49,
        "endLineNumber" : 251,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  this.cache=cache;\n  this.cacheReadDataSource=cacheReadDataSource;\n  this.cacheKeyFactory=cacheKeyFactory != null ? cacheKeyFactory : CacheUtil.DEFAULT_CACHE_KEY_FACTORY;\n  this.blockOnCache=(flags & FLAG_BLOCK_ON_CACHE) != 0;\n  this.ignoreCacheOnError=(flags & FLAG_IGNORE_CACHE_ON_ERROR) != 0;\n  this.ignoreCacheForUnsetLengthRequests=(flags & FLAG_IGNORE_CACHE_FOR_UNSET_LENGTH_REQUESTS) != 0;\n  this.upstreamDataSource=upstream;\n  if (cacheWriteDataSink != null) {\n    this.cacheWriteDataSource=new TeeDataSource(upstream,cacheWriteDataSink);\n  }\n else {\n    this.cacheWriteDataSource=null;\n  }\n  this.eventListener=eventListener;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1859,
        "startLineNumber" : 213,
        "startColumnNumber" : 2,
        "endLineNumber" : 251,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Constructs an instance with arbitrary  {@link DataSource} and {@link DataSink} instances forreading and writing the cache. One use of this constructor is to allow data to be transformed before it is written to disk.\n * @param cache The cache.\n * @param upstream A {@link DataSource} for reading data not in the cache.\n * @param cacheReadDataSource A {@link DataSource} for reading data from the cache.\n * @param cacheWriteDataSink A {@link DataSink} for writing data to the cache. If null, cache isaccessed read-only.\n * @param flags A combination of {@link #FLAG_BLOCK_ON_CACHE},  {@link #FLAG_IGNORE_CACHE_ON_ERROR}and  {@link #FLAG_IGNORE_CACHE_FOR_UNSET_LENGTH_REQUESTS}, or 0.\n * @param eventListener An optional {@link EventListener} to receive events.\n * @param cacheKeyFactory An optional factory for cache keys.\n */\npublic CacheDataSource(Cache cache,DataSource upstream,DataSource cacheReadDataSource,@Nullable DataSink cacheWriteDataSink,@Flags int flags,@Nullable EventListener eventListener,@Nullable CacheKeyFactory cacheKeyFactory){\n  this.cache=cache;\n  this.cacheReadDataSource=cacheReadDataSource;\n  this.cacheKeyFactory=cacheKeyFactory != null ? cacheKeyFactory : CacheUtil.DEFAULT_CACHE_KEY_FACTORY;\n  this.blockOnCache=(flags & FLAG_BLOCK_ON_CACHE) != 0;\n  this.ignoreCacheOnError=(flags & FLAG_IGNORE_CACHE_ON_ERROR) != 0;\n  this.ignoreCacheForUnsetLengthRequests=(flags & FLAG_IGNORE_CACHE_FOR_UNSET_LENGTH_REQUESTS) != 0;\n  this.upstreamDataSource=upstream;\n  if (cacheWriteDataSink != null) {\n    this.cacheWriteDataSource=new TeeDataSource(upstream,cacheWriteDataSink);\n  }\n else {\n    this.cacheWriteDataSource=null;\n  }\n  this.eventListener=eventListener;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 132,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 242,
        "startColumnNumber" : 4,
        "endLineNumber" : 242,
        "endColumnNumber" : 42
      },
      "nodeContext" : "this.ignoreCacheForUnsetLengthRequests",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "com.google.android.exoplayer2.upstream.cache.CacheDataSource"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 244,
      "startColumnNumber" : 4,
      "endLineNumber" : 244,
      "endColumnNumber" : 8
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 244,
        "startColumnNumber" : 4,
        "endLineNumber" : 244,
        "endColumnNumber" : 27
      },
      "nodeContext" : "this.upstreamDataSource",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 244,
        "startColumnNumber" : 4,
        "endLineNumber" : 244,
        "endColumnNumber" : 38
      },
      "nodeContext" : "this.upstreamDataSource=upstream",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 244,
        "startColumnNumber" : 4,
        "endLineNumber" : 244,
        "endColumnNumber" : 39
      },
      "nodeContext" : "this.upstreamDataSource=upstream;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 703,
        "startLineNumber" : 235,
        "startColumnNumber" : 49,
        "endLineNumber" : 251,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  this.cache=cache;\n  this.cacheReadDataSource=cacheReadDataSource;\n  this.cacheKeyFactory=cacheKeyFactory != null ? cacheKeyFactory : CacheUtil.DEFAULT_CACHE_KEY_FACTORY;\n  this.blockOnCache=(flags & FLAG_BLOCK_ON_CACHE) != 0;\n  this.ignoreCacheOnError=(flags & FLAG_IGNORE_CACHE_ON_ERROR) != 0;\n  this.ignoreCacheForUnsetLengthRequests=(flags & FLAG_IGNORE_CACHE_FOR_UNSET_LENGTH_REQUESTS) != 0;\n  this.upstreamDataSource=upstream;\n  if (cacheWriteDataSink != null) {\n    this.cacheWriteDataSource=new TeeDataSource(upstream,cacheWriteDataSink);\n  }\n else {\n    this.cacheWriteDataSource=null;\n  }\n  this.eventListener=eventListener;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1859,
        "startLineNumber" : 213,
        "startColumnNumber" : 2,
        "endLineNumber" : 251,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Constructs an instance with arbitrary  {@link DataSource} and {@link DataSink} instances forreading and writing the cache. One use of this constructor is to allow data to be transformed before it is written to disk.\n * @param cache The cache.\n * @param upstream A {@link DataSource} for reading data not in the cache.\n * @param cacheReadDataSource A {@link DataSource} for reading data from the cache.\n * @param cacheWriteDataSink A {@link DataSink} for writing data to the cache. If null, cache isaccessed read-only.\n * @param flags A combination of {@link #FLAG_BLOCK_ON_CACHE},  {@link #FLAG_IGNORE_CACHE_ON_ERROR}and  {@link #FLAG_IGNORE_CACHE_FOR_UNSET_LENGTH_REQUESTS}, or 0.\n * @param eventListener An optional {@link EventListener} to receive events.\n * @param cacheKeyFactory An optional factory for cache keys.\n */\npublic CacheDataSource(Cache cache,DataSource upstream,DataSource cacheReadDataSource,@Nullable DataSink cacheWriteDataSink,@Flags int flags,@Nullable EventListener eventListener,@Nullable CacheKeyFactory cacheKeyFactory){\n  this.cache=cache;\n  this.cacheReadDataSource=cacheReadDataSource;\n  this.cacheKeyFactory=cacheKeyFactory != null ? cacheKeyFactory : CacheUtil.DEFAULT_CACHE_KEY_FACTORY;\n  this.blockOnCache=(flags & FLAG_BLOCK_ON_CACHE) != 0;\n  this.ignoreCacheOnError=(flags & FLAG_IGNORE_CACHE_ON_ERROR) != 0;\n  this.ignoreCacheForUnsetLengthRequests=(flags & FLAG_IGNORE_CACHE_FOR_UNSET_LENGTH_REQUESTS) != 0;\n  this.upstreamDataSource=upstream;\n  if (cacheWriteDataSink != null) {\n    this.cacheWriteDataSource=new TeeDataSource(upstream,cacheWriteDataSink);\n  }\n else {\n    this.cacheWriteDataSource=null;\n  }\n  this.eventListener=eventListener;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 132,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 244,
        "startColumnNumber" : 4,
        "endLineNumber" : 244,
        "endColumnNumber" : 39
      },
      "nodeContext" : "this.upstreamDataSource=upstream;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.android.exoplayer2.upstream.cache.CacheDataSource"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 246,
      "startColumnNumber" : 6,
      "endLineNumber" : 246,
      "endColumnNumber" : 10
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 246,
        "startColumnNumber" : 6,
        "endLineNumber" : 246,
        "endColumnNumber" : 31
      },
      "nodeContext" : "this.cacheWriteDataSource",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 246,
        "startColumnNumber" : 6,
        "endLineNumber" : 246,
        "endColumnNumber" : 81
      },
      "nodeContext" : "this.cacheWriteDataSource=new TeeDataSource(upstream,cacheWriteDataSink)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 246,
        "startColumnNumber" : 6,
        "endLineNumber" : 246,
        "endColumnNumber" : 82
      },
      "nodeContext" : "this.cacheWriteDataSource=new TeeDataSource(upstream,cacheWriteDataSink);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 245,
        "startColumnNumber" : 36,
        "endLineNumber" : 247,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.cacheWriteDataSource=new TeeDataSource(upstream,cacheWriteDataSink);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 175,
        "startLineNumber" : 245,
        "startColumnNumber" : 4,
        "endLineNumber" : 249,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (cacheWriteDataSink != null) {\n  this.cacheWriteDataSource=new TeeDataSource(upstream,cacheWriteDataSink);\n}\n else {\n  this.cacheWriteDataSource=null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 703,
        "startLineNumber" : 235,
        "startColumnNumber" : 49,
        "endLineNumber" : 251,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  this.cache=cache;\n  this.cacheReadDataSource=cacheReadDataSource;\n  this.cacheKeyFactory=cacheKeyFactory != null ? cacheKeyFactory : CacheUtil.DEFAULT_CACHE_KEY_FACTORY;\n  this.blockOnCache=(flags & FLAG_BLOCK_ON_CACHE) != 0;\n  this.ignoreCacheOnError=(flags & FLAG_IGNORE_CACHE_ON_ERROR) != 0;\n  this.ignoreCacheForUnsetLengthRequests=(flags & FLAG_IGNORE_CACHE_FOR_UNSET_LENGTH_REQUESTS) != 0;\n  this.upstreamDataSource=upstream;\n  if (cacheWriteDataSink != null) {\n    this.cacheWriteDataSource=new TeeDataSource(upstream,cacheWriteDataSink);\n  }\n else {\n    this.cacheWriteDataSource=null;\n  }\n  this.eventListener=eventListener;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1859,
        "startLineNumber" : 213,
        "startColumnNumber" : 2,
        "endLineNumber" : 251,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Constructs an instance with arbitrary  {@link DataSource} and {@link DataSink} instances forreading and writing the cache. One use of this constructor is to allow data to be transformed before it is written to disk.\n * @param cache The cache.\n * @param upstream A {@link DataSource} for reading data not in the cache.\n * @param cacheReadDataSource A {@link DataSource} for reading data from the cache.\n * @param cacheWriteDataSink A {@link DataSink} for writing data to the cache. If null, cache isaccessed read-only.\n * @param flags A combination of {@link #FLAG_BLOCK_ON_CACHE},  {@link #FLAG_IGNORE_CACHE_ON_ERROR}and  {@link #FLAG_IGNORE_CACHE_FOR_UNSET_LENGTH_REQUESTS}, or 0.\n * @param eventListener An optional {@link EventListener} to receive events.\n * @param cacheKeyFactory An optional factory for cache keys.\n */\npublic CacheDataSource(Cache cache,DataSource upstream,DataSource cacheReadDataSource,@Nullable DataSink cacheWriteDataSink,@Flags int flags,@Nullable EventListener eventListener,@Nullable CacheKeyFactory cacheKeyFactory){\n  this.cache=cache;\n  this.cacheReadDataSource=cacheReadDataSource;\n  this.cacheKeyFactory=cacheKeyFactory != null ? cacheKeyFactory : CacheUtil.DEFAULT_CACHE_KEY_FACTORY;\n  this.blockOnCache=(flags & FLAG_BLOCK_ON_CACHE) != 0;\n  this.ignoreCacheOnError=(flags & FLAG_IGNORE_CACHE_ON_ERROR) != 0;\n  this.ignoreCacheForUnsetLengthRequests=(flags & FLAG_IGNORE_CACHE_FOR_UNSET_LENGTH_REQUESTS) != 0;\n  this.upstreamDataSource=upstream;\n  if (cacheWriteDataSink != null) {\n    this.cacheWriteDataSource=new TeeDataSource(upstream,cacheWriteDataSink);\n  }\n else {\n    this.cacheWriteDataSource=null;\n  }\n  this.eventListener=eventListener;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 132,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 246,
        "startColumnNumber" : 6,
        "endLineNumber" : 246,
        "endColumnNumber" : 82
      },
      "nodeContext" : "this.cacheWriteDataSource=new TeeDataSource(upstream,cacheWriteDataSink);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.google.android.exoplayer2.upstream.cache.CacheDataSource"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 248,
      "startColumnNumber" : 6,
      "endLineNumber" : 248,
      "endColumnNumber" : 10
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 248,
        "startColumnNumber" : 6,
        "endLineNumber" : 248,
        "endColumnNumber" : 31
      },
      "nodeContext" : "this.cacheWriteDataSource",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 248,
        "startColumnNumber" : 6,
        "endLineNumber" : 248,
        "endColumnNumber" : 38
      },
      "nodeContext" : "this.cacheWriteDataSource=null",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 248,
        "startColumnNumber" : 6,
        "endLineNumber" : 248,
        "endColumnNumber" : 39
      },
      "nodeContext" : "this.cacheWriteDataSource=null;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 247,
        "startColumnNumber" : 11,
        "endLineNumber" : 249,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.cacheWriteDataSource=null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 175,
        "startLineNumber" : 245,
        "startColumnNumber" : 4,
        "endLineNumber" : 249,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (cacheWriteDataSink != null) {\n  this.cacheWriteDataSource=new TeeDataSource(upstream,cacheWriteDataSink);\n}\n else {\n  this.cacheWriteDataSource=null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 703,
        "startLineNumber" : 235,
        "startColumnNumber" : 49,
        "endLineNumber" : 251,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  this.cache=cache;\n  this.cacheReadDataSource=cacheReadDataSource;\n  this.cacheKeyFactory=cacheKeyFactory != null ? cacheKeyFactory : CacheUtil.DEFAULT_CACHE_KEY_FACTORY;\n  this.blockOnCache=(flags & FLAG_BLOCK_ON_CACHE) != 0;\n  this.ignoreCacheOnError=(flags & FLAG_IGNORE_CACHE_ON_ERROR) != 0;\n  this.ignoreCacheForUnsetLengthRequests=(flags & FLAG_IGNORE_CACHE_FOR_UNSET_LENGTH_REQUESTS) != 0;\n  this.upstreamDataSource=upstream;\n  if (cacheWriteDataSink != null) {\n    this.cacheWriteDataSource=new TeeDataSource(upstream,cacheWriteDataSink);\n  }\n else {\n    this.cacheWriteDataSource=null;\n  }\n  this.eventListener=eventListener;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1859,
        "startLineNumber" : 213,
        "startColumnNumber" : 2,
        "endLineNumber" : 251,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Constructs an instance with arbitrary  {@link DataSource} and {@link DataSink} instances forreading and writing the cache. One use of this constructor is to allow data to be transformed before it is written to disk.\n * @param cache The cache.\n * @param upstream A {@link DataSource} for reading data not in the cache.\n * @param cacheReadDataSource A {@link DataSource} for reading data from the cache.\n * @param cacheWriteDataSink A {@link DataSink} for writing data to the cache. If null, cache isaccessed read-only.\n * @param flags A combination of {@link #FLAG_BLOCK_ON_CACHE},  {@link #FLAG_IGNORE_CACHE_ON_ERROR}and  {@link #FLAG_IGNORE_CACHE_FOR_UNSET_LENGTH_REQUESTS}, or 0.\n * @param eventListener An optional {@link EventListener} to receive events.\n * @param cacheKeyFactory An optional factory for cache keys.\n */\npublic CacheDataSource(Cache cache,DataSource upstream,DataSource cacheReadDataSource,@Nullable DataSink cacheWriteDataSink,@Flags int flags,@Nullable EventListener eventListener,@Nullable CacheKeyFactory cacheKeyFactory){\n  this.cache=cache;\n  this.cacheReadDataSource=cacheReadDataSource;\n  this.cacheKeyFactory=cacheKeyFactory != null ? cacheKeyFactory : CacheUtil.DEFAULT_CACHE_KEY_FACTORY;\n  this.blockOnCache=(flags & FLAG_BLOCK_ON_CACHE) != 0;\n  this.ignoreCacheOnError=(flags & FLAG_IGNORE_CACHE_ON_ERROR) != 0;\n  this.ignoreCacheForUnsetLengthRequests=(flags & FLAG_IGNORE_CACHE_FOR_UNSET_LENGTH_REQUESTS) != 0;\n  this.upstreamDataSource=upstream;\n  if (cacheWriteDataSink != null) {\n    this.cacheWriteDataSource=new TeeDataSource(upstream,cacheWriteDataSink);\n  }\n else {\n    this.cacheWriteDataSource=null;\n  }\n  this.eventListener=eventListener;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 132,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 248,
        "startColumnNumber" : 6,
        "endLineNumber" : 248,
        "endColumnNumber" : 39
      },
      "nodeContext" : "this.cacheWriteDataSource=null;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.android.exoplayer2.upstream.cache.CacheDataSource"
  }, {
    "nodeContext" : "this",
    "nodeType" : "ThisExpression",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 250,
      "startColumnNumber" : 4,
      "endLineNumber" : 250,
      "endColumnNumber" : 8
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 250,
        "startColumnNumber" : 4,
        "endLineNumber" : 250,
        "endColumnNumber" : 22
      },
      "nodeContext" : "this.eventListener",
      "nodeType" : "FieldAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 250,
        "startColumnNumber" : 4,
        "endLineNumber" : 250,
        "endColumnNumber" : 38
      },
      "nodeContext" : "this.eventListener=eventListener",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 250,
        "startColumnNumber" : 4,
        "endLineNumber" : 250,
        "endColumnNumber" : 39
      },
      "nodeContext" : "this.eventListener=eventListener;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 703,
        "startLineNumber" : 235,
        "startColumnNumber" : 49,
        "endLineNumber" : 251,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  this.cache=cache;\n  this.cacheReadDataSource=cacheReadDataSource;\n  this.cacheKeyFactory=cacheKeyFactory != null ? cacheKeyFactory : CacheUtil.DEFAULT_CACHE_KEY_FACTORY;\n  this.blockOnCache=(flags & FLAG_BLOCK_ON_CACHE) != 0;\n  this.ignoreCacheOnError=(flags & FLAG_IGNORE_CACHE_ON_ERROR) != 0;\n  this.ignoreCacheForUnsetLengthRequests=(flags & FLAG_IGNORE_CACHE_FOR_UNSET_LENGTH_REQUESTS) != 0;\n  this.upstreamDataSource=upstream;\n  if (cacheWriteDataSink != null) {\n    this.cacheWriteDataSource=new TeeDataSource(upstream,cacheWriteDataSink);\n  }\n else {\n    this.cacheWriteDataSource=null;\n  }\n  this.eventListener=eventListener;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1859,
        "startLineNumber" : 213,
        "startColumnNumber" : 2,
        "endLineNumber" : 251,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Constructs an instance with arbitrary  {@link DataSource} and {@link DataSink} instances forreading and writing the cache. One use of this constructor is to allow data to be transformed before it is written to disk.\n * @param cache The cache.\n * @param upstream A {@link DataSource} for reading data not in the cache.\n * @param cacheReadDataSource A {@link DataSource} for reading data from the cache.\n * @param cacheWriteDataSink A {@link DataSink} for writing data to the cache. If null, cache isaccessed read-only.\n * @param flags A combination of {@link #FLAG_BLOCK_ON_CACHE},  {@link #FLAG_IGNORE_CACHE_ON_ERROR}and  {@link #FLAG_IGNORE_CACHE_FOR_UNSET_LENGTH_REQUESTS}, or 0.\n * @param eventListener An optional {@link EventListener} to receive events.\n * @param cacheKeyFactory An optional factory for cache keys.\n */\npublic CacheDataSource(Cache cache,DataSource upstream,DataSource cacheReadDataSource,@Nullable DataSink cacheWriteDataSink,@Flags int flags,@Nullable EventListener eventListener,@Nullable CacheKeyFactory cacheKeyFactory){\n  this.cache=cache;\n  this.cacheReadDataSource=cacheReadDataSource;\n  this.cacheKeyFactory=cacheKeyFactory != null ? cacheKeyFactory : CacheUtil.DEFAULT_CACHE_KEY_FACTORY;\n  this.blockOnCache=(flags & FLAG_BLOCK_ON_CACHE) != 0;\n  this.ignoreCacheOnError=(flags & FLAG_IGNORE_CACHE_ON_ERROR) != 0;\n  this.ignoreCacheForUnsetLengthRequests=(flags & FLAG_IGNORE_CACHE_FOR_UNSET_LENGTH_REQUESTS) != 0;\n  this.upstreamDataSource=upstream;\n  if (cacheWriteDataSink != null) {\n    this.cacheWriteDataSource=new TeeDataSource(upstream,cacheWriteDataSink);\n  }\n else {\n    this.cacheWriteDataSource=null;\n  }\n  this.eventListener=eventListener;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 132,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 250,
        "startColumnNumber" : 4,
        "endLineNumber" : 250,
        "endColumnNumber" : 39
      },
      "nodeContext" : "this.eventListener=eventListener;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.android.exoplayer2.upstream.cache.CacheDataSource"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 236,
    "startColumnNumber" : 4,
    "endLineNumber" : 236,
    "endColumnNumber" : 8
  }, {
    "charLength" : 4,
    "startLineNumber" : 237,
    "startColumnNumber" : 4,
    "endLineNumber" : 237,
    "endColumnNumber" : 8
  }, {
    "charLength" : 4,
    "startLineNumber" : 238,
    "startColumnNumber" : 4,
    "endLineNumber" : 238,
    "endColumnNumber" : 8
  }, {
    "charLength" : 4,
    "startLineNumber" : 240,
    "startColumnNumber" : 4,
    "endLineNumber" : 240,
    "endColumnNumber" : 8
  }, {
    "charLength" : 4,
    "startLineNumber" : 241,
    "startColumnNumber" : 4,
    "endLineNumber" : 241,
    "endColumnNumber" : 8
  }, {
    "charLength" : 4,
    "startLineNumber" : 242,
    "startColumnNumber" : 4,
    "endLineNumber" : 242,
    "endColumnNumber" : 8
  }, {
    "charLength" : 4,
    "startLineNumber" : 244,
    "startColumnNumber" : 4,
    "endLineNumber" : 244,
    "endColumnNumber" : 8
  }, {
    "charLength" : 4,
    "startLineNumber" : 246,
    "startColumnNumber" : 6,
    "endLineNumber" : 246,
    "endColumnNumber" : 10
  }, {
    "charLength" : 4,
    "startLineNumber" : 248,
    "startColumnNumber" : 6,
    "endLineNumber" : 248,
    "endColumnNumber" : 10
  }, {
    "charLength" : 4,
    "startLineNumber" : 250,
    "startColumnNumber" : 4,
    "endLineNumber" : 250,
    "endColumnNumber" : 8
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 3
  } ]
}