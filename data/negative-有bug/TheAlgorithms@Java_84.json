{
  "id" : 84,
  "expression" : "numOfPigeonholes",
  "projectName" : "TheAlgorithms@Java",
  "commitID" : "8b243667d736be7d0413cc77159378aa02459db0",
  "filePath" : "/src/main/java/com/thealgorithms/sorts/PigeonholeSort.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "numOfPigeonholes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 19,
      "startColumnNumber" : 57,
      "endLineNumber" : 19,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 19,
        "startColumnNumber" : 43,
        "endLineNumber" : 19,
        "endColumnNumber" : 74
      },
      "nodeContext" : "new ArrayList[numOfPigeonholes]",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 19,
        "startColumnNumber" : 29,
        "endLineNumber" : 19,
        "endColumnNumber" : 74
      },
      "nodeContext" : "pigeonHole=new ArrayList[numOfPigeonholes]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 19,
        "startColumnNumber" : 8,
        "endLineNumber" : 19,
        "endColumnNumber" : 75
      },
      "nodeContext" : "ArrayList<Integer>[] pigeonHole=new ArrayList[numOfPigeonholes];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 663,
        "startLineNumber" : 12,
        "startColumnNumber" : 30,
        "endLineNumber" : 36,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int maxElement=array[0];\n  for (  int element : array) {\n    if (element > maxElement)     maxElement=element;\n  }\n  int numOfPigeonholes=1 + maxElement;\n  ArrayList<Integer>[] pigeonHole=new ArrayList[numOfPigeonholes];\n  for (int k=0; k < numOfPigeonholes; k++) {\n    pigeonHole[k]=new ArrayList<>();\n  }\n  for (  int t : array) {\n    pigeonHole[t].add(t);\n  }\n  int k=0;\n  for (  ArrayList<Integer> ph : pigeonHole) {\n    for (    int elements : ph) {\n      array[k]=elements;\n      k=k + 1;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 689,
        "startLineNumber" : 12,
        "startColumnNumber" : 4,
        "endLineNumber" : 36,
        "endColumnNumber" : 5
      },
      "nodeContext" : "void sort(Integer[] array){\n  int maxElement=array[0];\n  for (  int element : array) {\n    if (element > maxElement)     maxElement=element;\n  }\n  int numOfPigeonholes=1 + maxElement;\n  ArrayList<Integer>[] pigeonHole=new ArrayList[numOfPigeonholes];\n  for (int k=0; k < numOfPigeonholes; k++) {\n    pigeonHole[k]=new ArrayList<>();\n  }\n  for (  int t : array) {\n    pigeonHole[t].add(t);\n  }\n  int k=0;\n  for (  ArrayList<Integer> ph : pigeonHole) {\n    for (    int elements : ph) {\n      array[k]=elements;\n      k=k + 1;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 121,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 19,
        "startColumnNumber" : 8,
        "endLineNumber" : 19,
        "endColumnNumber" : 75
      },
      "nodeContext" : "ArrayList<Integer>[] pigeonHole=new ArrayList[numOfPigeonholes];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "numOfPigeonholes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 21,
      "startColumnNumber" : 24,
      "endLineNumber" : 21,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 21,
        "startColumnNumber" : 22,
        "endLineNumber" : 21,
        "endColumnNumber" : 40
      },
      "nodeContext" : "k < numOfPigeonholes",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 21,
        "startColumnNumber" : 8,
        "endLineNumber" : 23,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int k=0; k < numOfPigeonholes; k++) {\n  pigeonHole[k]=new ArrayList<>();\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 21,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 663,
        "startLineNumber" : 12,
        "startColumnNumber" : 30,
        "endLineNumber" : 36,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int maxElement=array[0];\n  for (  int element : array) {\n    if (element > maxElement)     maxElement=element;\n  }\n  int numOfPigeonholes=1 + maxElement;\n  ArrayList<Integer>[] pigeonHole=new ArrayList[numOfPigeonholes];\n  for (int k=0; k < numOfPigeonholes; k++) {\n    pigeonHole[k]=new ArrayList<>();\n  }\n  for (  int t : array) {\n    pigeonHole[t].add(t);\n  }\n  int k=0;\n  for (  ArrayList<Integer> ph : pigeonHole) {\n    for (    int elements : ph) {\n      array[k]=elements;\n      k=k + 1;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 112,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 689,
        "startLineNumber" : 12,
        "startColumnNumber" : 4,
        "endLineNumber" : 36,
        "endColumnNumber" : 5
      },
      "nodeContext" : "void sort(Integer[] array){\n  int maxElement=array[0];\n  for (  int element : array) {\n    if (element > maxElement)     maxElement=element;\n  }\n  int numOfPigeonholes=1 + maxElement;\n  ArrayList<Integer>[] pigeonHole=new ArrayList[numOfPigeonholes];\n  for (int k=0; k < numOfPigeonholes; k++) {\n    pigeonHole[k]=new ArrayList<>();\n  }\n  for (  int t : array) {\n    pigeonHole[t].add(t);\n  }\n  int k=0;\n  for (  ArrayList<Integer> ph : pigeonHole) {\n    for (    int elements : ph) {\n      array[k]=elements;\n      k=k + 1;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 121,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 21,
        "startColumnNumber" : 22,
        "endLineNumber" : 21,
        "endColumnNumber" : 40
      },
      "nodeContext" : "k < numOfPigeonholes",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 19,
    "startColumnNumber" : 57,
    "endLineNumber" : 19,
    "endColumnNumber" : 73
  }, {
    "charLength" : 16,
    "startLineNumber" : 21,
    "startColumnNumber" : 24,
    "endLineNumber" : 21,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}