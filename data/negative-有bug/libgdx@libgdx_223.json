{
  "id" : 223,
  "expression" : "baseline",
  "projectName" : "libgdx@libgdx",
  "commitID" : "3485b16e8979c0141421bc80cb8831b7a0403f67",
  "filePath" : "/tests/gdx-tests/src/com/badlogic/gdx/tests/BitmapFontMetricsTest.java",
  "occurrences" : 6,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "baseline",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 96,
      "startColumnNumber" : 19,
      "endLineNumber" : 96,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 96,
        "startColumnNumber" : 2,
        "endLineNumber" : 96,
        "endColumnNumber" : 44
      },
      "nodeContext" : "renderer.line(0,baseline,9999,baseline)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 96,
        "startColumnNumber" : 2,
        "endLineNumber" : 96,
        "endColumnNumber" : 45
      },
      "nodeContext" : "renderer.line(0,baseline,9999,baseline);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2284,
        "startLineNumber" : 48,
        "startColumnNumber" : 23,
        "endLineNumber" : 111,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int viewHeight=Gdx.graphics.getHeight();\n  Gdx.gl.glClearColor(1,1,1,1);\n  Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n  spriteBatch.begin();\n  String text=\"Sphinx of black quartz.\";\n  font.setColor(Color.RED);\n  float x=100, y=100;\n  float alignmentWidth;\n  smallFont.setColor(Color.BLACK);\n  smallFont.draw(spriteBatch,\"draw position\",20,viewHeight - 0);\n  smallFont.setColor(Color.BLUE);\n  smallFont.draw(spriteBatch,\"bounds\",20,viewHeight - 20);\n  smallFont.setColor(Color.MAGENTA);\n  smallFont.draw(spriteBatch,\"baseline\",20,viewHeight - 40);\n  smallFont.setColor(Color.GREEN);\n  smallFont.draw(spriteBatch,\"x height\",20,viewHeight - 60);\n  smallFont.setColor(Color.CYAN);\n  smallFont.draw(spriteBatch,\"ascent\",20,viewHeight - 80);\n  smallFont.setColor(Color.RED);\n  smallFont.draw(spriteBatch,\"descent\",20,viewHeight - 100);\n  smallFont.setColor(Color.ORANGE);\n  smallFont.draw(spriteBatch,\"line height\",20,viewHeight - 120);\n  smallFont.setColor(Color.LIGHT_GRAY);\n  smallFont.draw(spriteBatch,\"cap height\",20,viewHeight - 140);\n  font.setColor(Color.BLACK);\n  GlyphLayout layout=font.draw(spriteBatch,text,x,y);\n  spriteBatch.end();\n  renderer.begin(ShapeType.Filled);\n  renderer.setColor(Color.BLACK);\n  renderer.rect(x - 3,y - 3,6,6);\n  renderer.end();\n  float baseline=y - font.getCapHeight();\n  renderer.begin(ShapeType.Line);\n  renderer.setColor(Color.LIGHT_GRAY);\n  renderer.line(0,y,9999,y);\n  renderer.setColor(Color.MAGENTA);\n  renderer.line(0,baseline,9999,baseline);\n  renderer.setColor(Color.GREEN);\n  renderer.line(0,baseline + font.getXHeight(),9999,baseline + font.getXHeight());\n  renderer.setColor(Color.CYAN);\n  renderer.line(0,y + font.getAscent(),9999,y + font.getAscent());\n  renderer.setColor(Color.RED);\n  renderer.line(0,baseline + font.getDescent(),9999,baseline + font.getDescent());\n  renderer.setColor(Color.ORANGE);\n  renderer.line(0,y - font.getLineHeight(),9999,y - font.getLineHeight());\n  renderer.end();\n  renderer.begin(ShapeType.Line);\n  renderer.setColor(Color.BLUE);\n  renderer.rect(x,y,layout.width,-layout.height);\n  renderer.end();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 420,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2317,
        "startLineNumber" : 47,
        "startColumnNumber" : 1,
        "endLineNumber" : 111,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void render(){\n  int viewHeight=Gdx.graphics.getHeight();\n  Gdx.gl.glClearColor(1,1,1,1);\n  Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n  spriteBatch.begin();\n  String text=\"Sphinx of black quartz.\";\n  font.setColor(Color.RED);\n  float x=100, y=100;\n  float alignmentWidth;\n  smallFont.setColor(Color.BLACK);\n  smallFont.draw(spriteBatch,\"draw position\",20,viewHeight - 0);\n  smallFont.setColor(Color.BLUE);\n  smallFont.draw(spriteBatch,\"bounds\",20,viewHeight - 20);\n  smallFont.setColor(Color.MAGENTA);\n  smallFont.draw(spriteBatch,\"baseline\",20,viewHeight - 40);\n  smallFont.setColor(Color.GREEN);\n  smallFont.draw(spriteBatch,\"x height\",20,viewHeight - 60);\n  smallFont.setColor(Color.CYAN);\n  smallFont.draw(spriteBatch,\"ascent\",20,viewHeight - 80);\n  smallFont.setColor(Color.RED);\n  smallFont.draw(spriteBatch,\"descent\",20,viewHeight - 100);\n  smallFont.setColor(Color.ORANGE);\n  smallFont.draw(spriteBatch,\"line height\",20,viewHeight - 120);\n  smallFont.setColor(Color.LIGHT_GRAY);\n  smallFont.draw(spriteBatch,\"cap height\",20,viewHeight - 140);\n  font.setColor(Color.BLACK);\n  GlyphLayout layout=font.draw(spriteBatch,text,x,y);\n  spriteBatch.end();\n  renderer.begin(ShapeType.Filled);\n  renderer.setColor(Color.BLACK);\n  renderer.rect(x - 3,y - 3,6,6);\n  renderer.end();\n  float baseline=y - font.getCapHeight();\n  renderer.begin(ShapeType.Line);\n  renderer.setColor(Color.LIGHT_GRAY);\n  renderer.line(0,y,9999,y);\n  renderer.setColor(Color.MAGENTA);\n  renderer.line(0,baseline,9999,baseline);\n  renderer.setColor(Color.GREEN);\n  renderer.line(0,baseline + font.getXHeight(),9999,baseline + font.getXHeight());\n  renderer.setColor(Color.CYAN);\n  renderer.line(0,y + font.getAscent(),9999,y + font.getAscent());\n  renderer.setColor(Color.RED);\n  renderer.line(0,baseline + font.getDescent(),9999,baseline + font.getDescent());\n  renderer.setColor(Color.ORANGE);\n  renderer.line(0,y - font.getLineHeight(),9999,y - font.getLineHeight());\n  renderer.end();\n  renderer.begin(ShapeType.Line);\n  renderer.setColor(Color.BLUE);\n  renderer.rect(x,y,layout.width,-layout.height);\n  renderer.end();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 426,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 96,
        "startColumnNumber" : 2,
        "endLineNumber" : 96,
        "endColumnNumber" : 45
      },
      "nodeContext" : "renderer.line(0,baseline,9999,baseline);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "float"
  }, {
    "nodeContext" : "baseline",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 96,
      "startColumnNumber" : 35,
      "endLineNumber" : 96,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 96,
        "startColumnNumber" : 2,
        "endLineNumber" : 96,
        "endColumnNumber" : 44
      },
      "nodeContext" : "renderer.line(0,baseline,9999,baseline)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 96,
        "startColumnNumber" : 2,
        "endLineNumber" : 96,
        "endColumnNumber" : 45
      },
      "nodeContext" : "renderer.line(0,baseline,9999,baseline);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2284,
        "startLineNumber" : 48,
        "startColumnNumber" : 23,
        "endLineNumber" : 111,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int viewHeight=Gdx.graphics.getHeight();\n  Gdx.gl.glClearColor(1,1,1,1);\n  Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n  spriteBatch.begin();\n  String text=\"Sphinx of black quartz.\";\n  font.setColor(Color.RED);\n  float x=100, y=100;\n  float alignmentWidth;\n  smallFont.setColor(Color.BLACK);\n  smallFont.draw(spriteBatch,\"draw position\",20,viewHeight - 0);\n  smallFont.setColor(Color.BLUE);\n  smallFont.draw(spriteBatch,\"bounds\",20,viewHeight - 20);\n  smallFont.setColor(Color.MAGENTA);\n  smallFont.draw(spriteBatch,\"baseline\",20,viewHeight - 40);\n  smallFont.setColor(Color.GREEN);\n  smallFont.draw(spriteBatch,\"x height\",20,viewHeight - 60);\n  smallFont.setColor(Color.CYAN);\n  smallFont.draw(spriteBatch,\"ascent\",20,viewHeight - 80);\n  smallFont.setColor(Color.RED);\n  smallFont.draw(spriteBatch,\"descent\",20,viewHeight - 100);\n  smallFont.setColor(Color.ORANGE);\n  smallFont.draw(spriteBatch,\"line height\",20,viewHeight - 120);\n  smallFont.setColor(Color.LIGHT_GRAY);\n  smallFont.draw(spriteBatch,\"cap height\",20,viewHeight - 140);\n  font.setColor(Color.BLACK);\n  GlyphLayout layout=font.draw(spriteBatch,text,x,y);\n  spriteBatch.end();\n  renderer.begin(ShapeType.Filled);\n  renderer.setColor(Color.BLACK);\n  renderer.rect(x - 3,y - 3,6,6);\n  renderer.end();\n  float baseline=y - font.getCapHeight();\n  renderer.begin(ShapeType.Line);\n  renderer.setColor(Color.LIGHT_GRAY);\n  renderer.line(0,y,9999,y);\n  renderer.setColor(Color.MAGENTA);\n  renderer.line(0,baseline,9999,baseline);\n  renderer.setColor(Color.GREEN);\n  renderer.line(0,baseline + font.getXHeight(),9999,baseline + font.getXHeight());\n  renderer.setColor(Color.CYAN);\n  renderer.line(0,y + font.getAscent(),9999,y + font.getAscent());\n  renderer.setColor(Color.RED);\n  renderer.line(0,baseline + font.getDescent(),9999,baseline + font.getDescent());\n  renderer.setColor(Color.ORANGE);\n  renderer.line(0,y - font.getLineHeight(),9999,y - font.getLineHeight());\n  renderer.end();\n  renderer.begin(ShapeType.Line);\n  renderer.setColor(Color.BLUE);\n  renderer.rect(x,y,layout.width,-layout.height);\n  renderer.end();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 420,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2317,
        "startLineNumber" : 47,
        "startColumnNumber" : 1,
        "endLineNumber" : 111,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void render(){\n  int viewHeight=Gdx.graphics.getHeight();\n  Gdx.gl.glClearColor(1,1,1,1);\n  Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n  spriteBatch.begin();\n  String text=\"Sphinx of black quartz.\";\n  font.setColor(Color.RED);\n  float x=100, y=100;\n  float alignmentWidth;\n  smallFont.setColor(Color.BLACK);\n  smallFont.draw(spriteBatch,\"draw position\",20,viewHeight - 0);\n  smallFont.setColor(Color.BLUE);\n  smallFont.draw(spriteBatch,\"bounds\",20,viewHeight - 20);\n  smallFont.setColor(Color.MAGENTA);\n  smallFont.draw(spriteBatch,\"baseline\",20,viewHeight - 40);\n  smallFont.setColor(Color.GREEN);\n  smallFont.draw(spriteBatch,\"x height\",20,viewHeight - 60);\n  smallFont.setColor(Color.CYAN);\n  smallFont.draw(spriteBatch,\"ascent\",20,viewHeight - 80);\n  smallFont.setColor(Color.RED);\n  smallFont.draw(spriteBatch,\"descent\",20,viewHeight - 100);\n  smallFont.setColor(Color.ORANGE);\n  smallFont.draw(spriteBatch,\"line height\",20,viewHeight - 120);\n  smallFont.setColor(Color.LIGHT_GRAY);\n  smallFont.draw(spriteBatch,\"cap height\",20,viewHeight - 140);\n  font.setColor(Color.BLACK);\n  GlyphLayout layout=font.draw(spriteBatch,text,x,y);\n  spriteBatch.end();\n  renderer.begin(ShapeType.Filled);\n  renderer.setColor(Color.BLACK);\n  renderer.rect(x - 3,y - 3,6,6);\n  renderer.end();\n  float baseline=y - font.getCapHeight();\n  renderer.begin(ShapeType.Line);\n  renderer.setColor(Color.LIGHT_GRAY);\n  renderer.line(0,y,9999,y);\n  renderer.setColor(Color.MAGENTA);\n  renderer.line(0,baseline,9999,baseline);\n  renderer.setColor(Color.GREEN);\n  renderer.line(0,baseline + font.getXHeight(),9999,baseline + font.getXHeight());\n  renderer.setColor(Color.CYAN);\n  renderer.line(0,y + font.getAscent(),9999,y + font.getAscent());\n  renderer.setColor(Color.RED);\n  renderer.line(0,baseline + font.getDescent(),9999,baseline + font.getDescent());\n  renderer.setColor(Color.ORANGE);\n  renderer.line(0,y - font.getLineHeight(),9999,y - font.getLineHeight());\n  renderer.end();\n  renderer.begin(ShapeType.Line);\n  renderer.setColor(Color.BLUE);\n  renderer.rect(x,y,layout.width,-layout.height);\n  renderer.end();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 426,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 96,
        "startColumnNumber" : 2,
        "endLineNumber" : 96,
        "endColumnNumber" : 45
      },
      "nodeContext" : "renderer.line(0,baseline,9999,baseline);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "float"
  }, {
    "nodeContext" : "baseline",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 98,
      "startColumnNumber" : 19,
      "endLineNumber" : 98,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 98,
        "startColumnNumber" : 19,
        "endLineNumber" : 98,
        "endColumnNumber" : 47
      },
      "nodeContext" : "baseline + font.getXHeight()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 98,
        "startColumnNumber" : 2,
        "endLineNumber" : 98,
        "endColumnNumber" : 84
      },
      "nodeContext" : "renderer.line(0,baseline + font.getXHeight(),9999,baseline + font.getXHeight())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 98,
        "startColumnNumber" : 2,
        "endLineNumber" : 98,
        "endColumnNumber" : 85
      },
      "nodeContext" : "renderer.line(0,baseline + font.getXHeight(),9999,baseline + font.getXHeight());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2284,
        "startLineNumber" : 48,
        "startColumnNumber" : 23,
        "endLineNumber" : 111,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int viewHeight=Gdx.graphics.getHeight();\n  Gdx.gl.glClearColor(1,1,1,1);\n  Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n  spriteBatch.begin();\n  String text=\"Sphinx of black quartz.\";\n  font.setColor(Color.RED);\n  float x=100, y=100;\n  float alignmentWidth;\n  smallFont.setColor(Color.BLACK);\n  smallFont.draw(spriteBatch,\"draw position\",20,viewHeight - 0);\n  smallFont.setColor(Color.BLUE);\n  smallFont.draw(spriteBatch,\"bounds\",20,viewHeight - 20);\n  smallFont.setColor(Color.MAGENTA);\n  smallFont.draw(spriteBatch,\"baseline\",20,viewHeight - 40);\n  smallFont.setColor(Color.GREEN);\n  smallFont.draw(spriteBatch,\"x height\",20,viewHeight - 60);\n  smallFont.setColor(Color.CYAN);\n  smallFont.draw(spriteBatch,\"ascent\",20,viewHeight - 80);\n  smallFont.setColor(Color.RED);\n  smallFont.draw(spriteBatch,\"descent\",20,viewHeight - 100);\n  smallFont.setColor(Color.ORANGE);\n  smallFont.draw(spriteBatch,\"line height\",20,viewHeight - 120);\n  smallFont.setColor(Color.LIGHT_GRAY);\n  smallFont.draw(spriteBatch,\"cap height\",20,viewHeight - 140);\n  font.setColor(Color.BLACK);\n  GlyphLayout layout=font.draw(spriteBatch,text,x,y);\n  spriteBatch.end();\n  renderer.begin(ShapeType.Filled);\n  renderer.setColor(Color.BLACK);\n  renderer.rect(x - 3,y - 3,6,6);\n  renderer.end();\n  float baseline=y - font.getCapHeight();\n  renderer.begin(ShapeType.Line);\n  renderer.setColor(Color.LIGHT_GRAY);\n  renderer.line(0,y,9999,y);\n  renderer.setColor(Color.MAGENTA);\n  renderer.line(0,baseline,9999,baseline);\n  renderer.setColor(Color.GREEN);\n  renderer.line(0,baseline + font.getXHeight(),9999,baseline + font.getXHeight());\n  renderer.setColor(Color.CYAN);\n  renderer.line(0,y + font.getAscent(),9999,y + font.getAscent());\n  renderer.setColor(Color.RED);\n  renderer.line(0,baseline + font.getDescent(),9999,baseline + font.getDescent());\n  renderer.setColor(Color.ORANGE);\n  renderer.line(0,y - font.getLineHeight(),9999,y - font.getLineHeight());\n  renderer.end();\n  renderer.begin(ShapeType.Line);\n  renderer.setColor(Color.BLUE);\n  renderer.rect(x,y,layout.width,-layout.height);\n  renderer.end();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 420,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2317,
        "startLineNumber" : 47,
        "startColumnNumber" : 1,
        "endLineNumber" : 111,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void render(){\n  int viewHeight=Gdx.graphics.getHeight();\n  Gdx.gl.glClearColor(1,1,1,1);\n  Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n  spriteBatch.begin();\n  String text=\"Sphinx of black quartz.\";\n  font.setColor(Color.RED);\n  float x=100, y=100;\n  float alignmentWidth;\n  smallFont.setColor(Color.BLACK);\n  smallFont.draw(spriteBatch,\"draw position\",20,viewHeight - 0);\n  smallFont.setColor(Color.BLUE);\n  smallFont.draw(spriteBatch,\"bounds\",20,viewHeight - 20);\n  smallFont.setColor(Color.MAGENTA);\n  smallFont.draw(spriteBatch,\"baseline\",20,viewHeight - 40);\n  smallFont.setColor(Color.GREEN);\n  smallFont.draw(spriteBatch,\"x height\",20,viewHeight - 60);\n  smallFont.setColor(Color.CYAN);\n  smallFont.draw(spriteBatch,\"ascent\",20,viewHeight - 80);\n  smallFont.setColor(Color.RED);\n  smallFont.draw(spriteBatch,\"descent\",20,viewHeight - 100);\n  smallFont.setColor(Color.ORANGE);\n  smallFont.draw(spriteBatch,\"line height\",20,viewHeight - 120);\n  smallFont.setColor(Color.LIGHT_GRAY);\n  smallFont.draw(spriteBatch,\"cap height\",20,viewHeight - 140);\n  font.setColor(Color.BLACK);\n  GlyphLayout layout=font.draw(spriteBatch,text,x,y);\n  spriteBatch.end();\n  renderer.begin(ShapeType.Filled);\n  renderer.setColor(Color.BLACK);\n  renderer.rect(x - 3,y - 3,6,6);\n  renderer.end();\n  float baseline=y - font.getCapHeight();\n  renderer.begin(ShapeType.Line);\n  renderer.setColor(Color.LIGHT_GRAY);\n  renderer.line(0,y,9999,y);\n  renderer.setColor(Color.MAGENTA);\n  renderer.line(0,baseline,9999,baseline);\n  renderer.setColor(Color.GREEN);\n  renderer.line(0,baseline + font.getXHeight(),9999,baseline + font.getXHeight());\n  renderer.setColor(Color.CYAN);\n  renderer.line(0,y + font.getAscent(),9999,y + font.getAscent());\n  renderer.setColor(Color.RED);\n  renderer.line(0,baseline + font.getDescent(),9999,baseline + font.getDescent());\n  renderer.setColor(Color.ORANGE);\n  renderer.line(0,y - font.getLineHeight(),9999,y - font.getLineHeight());\n  renderer.end();\n  renderer.begin(ShapeType.Line);\n  renderer.setColor(Color.BLUE);\n  renderer.rect(x,y,layout.width,-layout.height);\n  renderer.end();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 426,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 98,
        "startColumnNumber" : 2,
        "endLineNumber" : 98,
        "endColumnNumber" : 85
      },
      "nodeContext" : "renderer.line(0,baseline + font.getXHeight(),9999,baseline + font.getXHeight());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "float"
  }, {
    "nodeContext" : "baseline",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 98,
      "startColumnNumber" : 55,
      "endLineNumber" : 98,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 98,
        "startColumnNumber" : 55,
        "endLineNumber" : 98,
        "endColumnNumber" : 83
      },
      "nodeContext" : "baseline + font.getXHeight()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 98,
        "startColumnNumber" : 2,
        "endLineNumber" : 98,
        "endColumnNumber" : 84
      },
      "nodeContext" : "renderer.line(0,baseline + font.getXHeight(),9999,baseline + font.getXHeight())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 98,
        "startColumnNumber" : 2,
        "endLineNumber" : 98,
        "endColumnNumber" : 85
      },
      "nodeContext" : "renderer.line(0,baseline + font.getXHeight(),9999,baseline + font.getXHeight());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2284,
        "startLineNumber" : 48,
        "startColumnNumber" : 23,
        "endLineNumber" : 111,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int viewHeight=Gdx.graphics.getHeight();\n  Gdx.gl.glClearColor(1,1,1,1);\n  Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n  spriteBatch.begin();\n  String text=\"Sphinx of black quartz.\";\n  font.setColor(Color.RED);\n  float x=100, y=100;\n  float alignmentWidth;\n  smallFont.setColor(Color.BLACK);\n  smallFont.draw(spriteBatch,\"draw position\",20,viewHeight - 0);\n  smallFont.setColor(Color.BLUE);\n  smallFont.draw(spriteBatch,\"bounds\",20,viewHeight - 20);\n  smallFont.setColor(Color.MAGENTA);\n  smallFont.draw(spriteBatch,\"baseline\",20,viewHeight - 40);\n  smallFont.setColor(Color.GREEN);\n  smallFont.draw(spriteBatch,\"x height\",20,viewHeight - 60);\n  smallFont.setColor(Color.CYAN);\n  smallFont.draw(spriteBatch,\"ascent\",20,viewHeight - 80);\n  smallFont.setColor(Color.RED);\n  smallFont.draw(spriteBatch,\"descent\",20,viewHeight - 100);\n  smallFont.setColor(Color.ORANGE);\n  smallFont.draw(spriteBatch,\"line height\",20,viewHeight - 120);\n  smallFont.setColor(Color.LIGHT_GRAY);\n  smallFont.draw(spriteBatch,\"cap height\",20,viewHeight - 140);\n  font.setColor(Color.BLACK);\n  GlyphLayout layout=font.draw(spriteBatch,text,x,y);\n  spriteBatch.end();\n  renderer.begin(ShapeType.Filled);\n  renderer.setColor(Color.BLACK);\n  renderer.rect(x - 3,y - 3,6,6);\n  renderer.end();\n  float baseline=y - font.getCapHeight();\n  renderer.begin(ShapeType.Line);\n  renderer.setColor(Color.LIGHT_GRAY);\n  renderer.line(0,y,9999,y);\n  renderer.setColor(Color.MAGENTA);\n  renderer.line(0,baseline,9999,baseline);\n  renderer.setColor(Color.GREEN);\n  renderer.line(0,baseline + font.getXHeight(),9999,baseline + font.getXHeight());\n  renderer.setColor(Color.CYAN);\n  renderer.line(0,y + font.getAscent(),9999,y + font.getAscent());\n  renderer.setColor(Color.RED);\n  renderer.line(0,baseline + font.getDescent(),9999,baseline + font.getDescent());\n  renderer.setColor(Color.ORANGE);\n  renderer.line(0,y - font.getLineHeight(),9999,y - font.getLineHeight());\n  renderer.end();\n  renderer.begin(ShapeType.Line);\n  renderer.setColor(Color.BLUE);\n  renderer.rect(x,y,layout.width,-layout.height);\n  renderer.end();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 420,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2317,
        "startLineNumber" : 47,
        "startColumnNumber" : 1,
        "endLineNumber" : 111,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void render(){\n  int viewHeight=Gdx.graphics.getHeight();\n  Gdx.gl.glClearColor(1,1,1,1);\n  Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n  spriteBatch.begin();\n  String text=\"Sphinx of black quartz.\";\n  font.setColor(Color.RED);\n  float x=100, y=100;\n  float alignmentWidth;\n  smallFont.setColor(Color.BLACK);\n  smallFont.draw(spriteBatch,\"draw position\",20,viewHeight - 0);\n  smallFont.setColor(Color.BLUE);\n  smallFont.draw(spriteBatch,\"bounds\",20,viewHeight - 20);\n  smallFont.setColor(Color.MAGENTA);\n  smallFont.draw(spriteBatch,\"baseline\",20,viewHeight - 40);\n  smallFont.setColor(Color.GREEN);\n  smallFont.draw(spriteBatch,\"x height\",20,viewHeight - 60);\n  smallFont.setColor(Color.CYAN);\n  smallFont.draw(spriteBatch,\"ascent\",20,viewHeight - 80);\n  smallFont.setColor(Color.RED);\n  smallFont.draw(spriteBatch,\"descent\",20,viewHeight - 100);\n  smallFont.setColor(Color.ORANGE);\n  smallFont.draw(spriteBatch,\"line height\",20,viewHeight - 120);\n  smallFont.setColor(Color.LIGHT_GRAY);\n  smallFont.draw(spriteBatch,\"cap height\",20,viewHeight - 140);\n  font.setColor(Color.BLACK);\n  GlyphLayout layout=font.draw(spriteBatch,text,x,y);\n  spriteBatch.end();\n  renderer.begin(ShapeType.Filled);\n  renderer.setColor(Color.BLACK);\n  renderer.rect(x - 3,y - 3,6,6);\n  renderer.end();\n  float baseline=y - font.getCapHeight();\n  renderer.begin(ShapeType.Line);\n  renderer.setColor(Color.LIGHT_GRAY);\n  renderer.line(0,y,9999,y);\n  renderer.setColor(Color.MAGENTA);\n  renderer.line(0,baseline,9999,baseline);\n  renderer.setColor(Color.GREEN);\n  renderer.line(0,baseline + font.getXHeight(),9999,baseline + font.getXHeight());\n  renderer.setColor(Color.CYAN);\n  renderer.line(0,y + font.getAscent(),9999,y + font.getAscent());\n  renderer.setColor(Color.RED);\n  renderer.line(0,baseline + font.getDescent(),9999,baseline + font.getDescent());\n  renderer.setColor(Color.ORANGE);\n  renderer.line(0,y - font.getLineHeight(),9999,y - font.getLineHeight());\n  renderer.end();\n  renderer.begin(ShapeType.Line);\n  renderer.setColor(Color.BLUE);\n  renderer.rect(x,y,layout.width,-layout.height);\n  renderer.end();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 426,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 98,
        "startColumnNumber" : 2,
        "endLineNumber" : 98,
        "endColumnNumber" : 85
      },
      "nodeContext" : "renderer.line(0,baseline + font.getXHeight(),9999,baseline + font.getXHeight());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "float"
  }, {
    "nodeContext" : "baseline",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 102,
      "startColumnNumber" : 19,
      "endLineNumber" : 102,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 102,
        "startColumnNumber" : 19,
        "endLineNumber" : 102,
        "endColumnNumber" : 47
      },
      "nodeContext" : "baseline + font.getDescent()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 102,
        "startColumnNumber" : 2,
        "endLineNumber" : 102,
        "endColumnNumber" : 84
      },
      "nodeContext" : "renderer.line(0,baseline + font.getDescent(),9999,baseline + font.getDescent())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 102,
        "startColumnNumber" : 2,
        "endLineNumber" : 102,
        "endColumnNumber" : 85
      },
      "nodeContext" : "renderer.line(0,baseline + font.getDescent(),9999,baseline + font.getDescent());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2284,
        "startLineNumber" : 48,
        "startColumnNumber" : 23,
        "endLineNumber" : 111,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int viewHeight=Gdx.graphics.getHeight();\n  Gdx.gl.glClearColor(1,1,1,1);\n  Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n  spriteBatch.begin();\n  String text=\"Sphinx of black quartz.\";\n  font.setColor(Color.RED);\n  float x=100, y=100;\n  float alignmentWidth;\n  smallFont.setColor(Color.BLACK);\n  smallFont.draw(spriteBatch,\"draw position\",20,viewHeight - 0);\n  smallFont.setColor(Color.BLUE);\n  smallFont.draw(spriteBatch,\"bounds\",20,viewHeight - 20);\n  smallFont.setColor(Color.MAGENTA);\n  smallFont.draw(spriteBatch,\"baseline\",20,viewHeight - 40);\n  smallFont.setColor(Color.GREEN);\n  smallFont.draw(spriteBatch,\"x height\",20,viewHeight - 60);\n  smallFont.setColor(Color.CYAN);\n  smallFont.draw(spriteBatch,\"ascent\",20,viewHeight - 80);\n  smallFont.setColor(Color.RED);\n  smallFont.draw(spriteBatch,\"descent\",20,viewHeight - 100);\n  smallFont.setColor(Color.ORANGE);\n  smallFont.draw(spriteBatch,\"line height\",20,viewHeight - 120);\n  smallFont.setColor(Color.LIGHT_GRAY);\n  smallFont.draw(spriteBatch,\"cap height\",20,viewHeight - 140);\n  font.setColor(Color.BLACK);\n  GlyphLayout layout=font.draw(spriteBatch,text,x,y);\n  spriteBatch.end();\n  renderer.begin(ShapeType.Filled);\n  renderer.setColor(Color.BLACK);\n  renderer.rect(x - 3,y - 3,6,6);\n  renderer.end();\n  float baseline=y - font.getCapHeight();\n  renderer.begin(ShapeType.Line);\n  renderer.setColor(Color.LIGHT_GRAY);\n  renderer.line(0,y,9999,y);\n  renderer.setColor(Color.MAGENTA);\n  renderer.line(0,baseline,9999,baseline);\n  renderer.setColor(Color.GREEN);\n  renderer.line(0,baseline + font.getXHeight(),9999,baseline + font.getXHeight());\n  renderer.setColor(Color.CYAN);\n  renderer.line(0,y + font.getAscent(),9999,y + font.getAscent());\n  renderer.setColor(Color.RED);\n  renderer.line(0,baseline + font.getDescent(),9999,baseline + font.getDescent());\n  renderer.setColor(Color.ORANGE);\n  renderer.line(0,y - font.getLineHeight(),9999,y - font.getLineHeight());\n  renderer.end();\n  renderer.begin(ShapeType.Line);\n  renderer.setColor(Color.BLUE);\n  renderer.rect(x,y,layout.width,-layout.height);\n  renderer.end();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 420,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2317,
        "startLineNumber" : 47,
        "startColumnNumber" : 1,
        "endLineNumber" : 111,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void render(){\n  int viewHeight=Gdx.graphics.getHeight();\n  Gdx.gl.glClearColor(1,1,1,1);\n  Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n  spriteBatch.begin();\n  String text=\"Sphinx of black quartz.\";\n  font.setColor(Color.RED);\n  float x=100, y=100;\n  float alignmentWidth;\n  smallFont.setColor(Color.BLACK);\n  smallFont.draw(spriteBatch,\"draw position\",20,viewHeight - 0);\n  smallFont.setColor(Color.BLUE);\n  smallFont.draw(spriteBatch,\"bounds\",20,viewHeight - 20);\n  smallFont.setColor(Color.MAGENTA);\n  smallFont.draw(spriteBatch,\"baseline\",20,viewHeight - 40);\n  smallFont.setColor(Color.GREEN);\n  smallFont.draw(spriteBatch,\"x height\",20,viewHeight - 60);\n  smallFont.setColor(Color.CYAN);\n  smallFont.draw(spriteBatch,\"ascent\",20,viewHeight - 80);\n  smallFont.setColor(Color.RED);\n  smallFont.draw(spriteBatch,\"descent\",20,viewHeight - 100);\n  smallFont.setColor(Color.ORANGE);\n  smallFont.draw(spriteBatch,\"line height\",20,viewHeight - 120);\n  smallFont.setColor(Color.LIGHT_GRAY);\n  smallFont.draw(spriteBatch,\"cap height\",20,viewHeight - 140);\n  font.setColor(Color.BLACK);\n  GlyphLayout layout=font.draw(spriteBatch,text,x,y);\n  spriteBatch.end();\n  renderer.begin(ShapeType.Filled);\n  renderer.setColor(Color.BLACK);\n  renderer.rect(x - 3,y - 3,6,6);\n  renderer.end();\n  float baseline=y - font.getCapHeight();\n  renderer.begin(ShapeType.Line);\n  renderer.setColor(Color.LIGHT_GRAY);\n  renderer.line(0,y,9999,y);\n  renderer.setColor(Color.MAGENTA);\n  renderer.line(0,baseline,9999,baseline);\n  renderer.setColor(Color.GREEN);\n  renderer.line(0,baseline + font.getXHeight(),9999,baseline + font.getXHeight());\n  renderer.setColor(Color.CYAN);\n  renderer.line(0,y + font.getAscent(),9999,y + font.getAscent());\n  renderer.setColor(Color.RED);\n  renderer.line(0,baseline + font.getDescent(),9999,baseline + font.getDescent());\n  renderer.setColor(Color.ORANGE);\n  renderer.line(0,y - font.getLineHeight(),9999,y - font.getLineHeight());\n  renderer.end();\n  renderer.begin(ShapeType.Line);\n  renderer.setColor(Color.BLUE);\n  renderer.rect(x,y,layout.width,-layout.height);\n  renderer.end();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 426,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 102,
        "startColumnNumber" : 2,
        "endLineNumber" : 102,
        "endColumnNumber" : 85
      },
      "nodeContext" : "renderer.line(0,baseline + font.getDescent(),9999,baseline + font.getDescent());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "float"
  }, {
    "nodeContext" : "baseline",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 102,
      "startColumnNumber" : 55,
      "endLineNumber" : 102,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 102,
        "startColumnNumber" : 55,
        "endLineNumber" : 102,
        "endColumnNumber" : 83
      },
      "nodeContext" : "baseline + font.getDescent()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 102,
        "startColumnNumber" : 2,
        "endLineNumber" : 102,
        "endColumnNumber" : 84
      },
      "nodeContext" : "renderer.line(0,baseline + font.getDescent(),9999,baseline + font.getDescent())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 15,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 102,
        "startColumnNumber" : 2,
        "endLineNumber" : 102,
        "endColumnNumber" : 85
      },
      "nodeContext" : "renderer.line(0,baseline + font.getDescent(),9999,baseline + font.getDescent());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2284,
        "startLineNumber" : 48,
        "startColumnNumber" : 23,
        "endLineNumber" : 111,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int viewHeight=Gdx.graphics.getHeight();\n  Gdx.gl.glClearColor(1,1,1,1);\n  Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n  spriteBatch.begin();\n  String text=\"Sphinx of black quartz.\";\n  font.setColor(Color.RED);\n  float x=100, y=100;\n  float alignmentWidth;\n  smallFont.setColor(Color.BLACK);\n  smallFont.draw(spriteBatch,\"draw position\",20,viewHeight - 0);\n  smallFont.setColor(Color.BLUE);\n  smallFont.draw(spriteBatch,\"bounds\",20,viewHeight - 20);\n  smallFont.setColor(Color.MAGENTA);\n  smallFont.draw(spriteBatch,\"baseline\",20,viewHeight - 40);\n  smallFont.setColor(Color.GREEN);\n  smallFont.draw(spriteBatch,\"x height\",20,viewHeight - 60);\n  smallFont.setColor(Color.CYAN);\n  smallFont.draw(spriteBatch,\"ascent\",20,viewHeight - 80);\n  smallFont.setColor(Color.RED);\n  smallFont.draw(spriteBatch,\"descent\",20,viewHeight - 100);\n  smallFont.setColor(Color.ORANGE);\n  smallFont.draw(spriteBatch,\"line height\",20,viewHeight - 120);\n  smallFont.setColor(Color.LIGHT_GRAY);\n  smallFont.draw(spriteBatch,\"cap height\",20,viewHeight - 140);\n  font.setColor(Color.BLACK);\n  GlyphLayout layout=font.draw(spriteBatch,text,x,y);\n  spriteBatch.end();\n  renderer.begin(ShapeType.Filled);\n  renderer.setColor(Color.BLACK);\n  renderer.rect(x - 3,y - 3,6,6);\n  renderer.end();\n  float baseline=y - font.getCapHeight();\n  renderer.begin(ShapeType.Line);\n  renderer.setColor(Color.LIGHT_GRAY);\n  renderer.line(0,y,9999,y);\n  renderer.setColor(Color.MAGENTA);\n  renderer.line(0,baseline,9999,baseline);\n  renderer.setColor(Color.GREEN);\n  renderer.line(0,baseline + font.getXHeight(),9999,baseline + font.getXHeight());\n  renderer.setColor(Color.CYAN);\n  renderer.line(0,y + font.getAscent(),9999,y + font.getAscent());\n  renderer.setColor(Color.RED);\n  renderer.line(0,baseline + font.getDescent(),9999,baseline + font.getDescent());\n  renderer.setColor(Color.ORANGE);\n  renderer.line(0,y - font.getLineHeight(),9999,y - font.getLineHeight());\n  renderer.end();\n  renderer.begin(ShapeType.Line);\n  renderer.setColor(Color.BLUE);\n  renderer.rect(x,y,layout.width,-layout.height);\n  renderer.end();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 420,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2317,
        "startLineNumber" : 47,
        "startColumnNumber" : 1,
        "endLineNumber" : 111,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void render(){\n  int viewHeight=Gdx.graphics.getHeight();\n  Gdx.gl.glClearColor(1,1,1,1);\n  Gdx.gl.glClear(GL20.GL_COLOR_BUFFER_BIT);\n  spriteBatch.begin();\n  String text=\"Sphinx of black quartz.\";\n  font.setColor(Color.RED);\n  float x=100, y=100;\n  float alignmentWidth;\n  smallFont.setColor(Color.BLACK);\n  smallFont.draw(spriteBatch,\"draw position\",20,viewHeight - 0);\n  smallFont.setColor(Color.BLUE);\n  smallFont.draw(spriteBatch,\"bounds\",20,viewHeight - 20);\n  smallFont.setColor(Color.MAGENTA);\n  smallFont.draw(spriteBatch,\"baseline\",20,viewHeight - 40);\n  smallFont.setColor(Color.GREEN);\n  smallFont.draw(spriteBatch,\"x height\",20,viewHeight - 60);\n  smallFont.setColor(Color.CYAN);\n  smallFont.draw(spriteBatch,\"ascent\",20,viewHeight - 80);\n  smallFont.setColor(Color.RED);\n  smallFont.draw(spriteBatch,\"descent\",20,viewHeight - 100);\n  smallFont.setColor(Color.ORANGE);\n  smallFont.draw(spriteBatch,\"line height\",20,viewHeight - 120);\n  smallFont.setColor(Color.LIGHT_GRAY);\n  smallFont.draw(spriteBatch,\"cap height\",20,viewHeight - 140);\n  font.setColor(Color.BLACK);\n  GlyphLayout layout=font.draw(spriteBatch,text,x,y);\n  spriteBatch.end();\n  renderer.begin(ShapeType.Filled);\n  renderer.setColor(Color.BLACK);\n  renderer.rect(x - 3,y - 3,6,6);\n  renderer.end();\n  float baseline=y - font.getCapHeight();\n  renderer.begin(ShapeType.Line);\n  renderer.setColor(Color.LIGHT_GRAY);\n  renderer.line(0,y,9999,y);\n  renderer.setColor(Color.MAGENTA);\n  renderer.line(0,baseline,9999,baseline);\n  renderer.setColor(Color.GREEN);\n  renderer.line(0,baseline + font.getXHeight(),9999,baseline + font.getXHeight());\n  renderer.setColor(Color.CYAN);\n  renderer.line(0,y + font.getAscent(),9999,y + font.getAscent());\n  renderer.setColor(Color.RED);\n  renderer.line(0,baseline + font.getDescent(),9999,baseline + font.getDescent());\n  renderer.setColor(Color.ORANGE);\n  renderer.line(0,y - font.getLineHeight(),9999,y - font.getLineHeight());\n  renderer.end();\n  renderer.begin(ShapeType.Line);\n  renderer.setColor(Color.BLUE);\n  renderer.rect(x,y,layout.width,-layout.height);\n  renderer.end();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 426,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 102,
        "startColumnNumber" : 2,
        "endLineNumber" : 102,
        "endColumnNumber" : 85
      },
      "nodeContext" : "renderer.line(0,baseline + font.getDescent(),9999,baseline + font.getDescent());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 96,
    "startColumnNumber" : 19,
    "endLineNumber" : 96,
    "endColumnNumber" : 27
  }, {
    "charLength" : 8,
    "startLineNumber" : 96,
    "startColumnNumber" : 35,
    "endLineNumber" : 96,
    "endColumnNumber" : 43
  }, {
    "charLength" : 8,
    "startLineNumber" : 98,
    "startColumnNumber" : 19,
    "endLineNumber" : 98,
    "endColumnNumber" : 27
  }, {
    "charLength" : 8,
    "startLineNumber" : 98,
    "startColumnNumber" : 55,
    "endLineNumber" : 98,
    "endColumnNumber" : 63
  }, {
    "charLength" : 8,
    "startLineNumber" : 102,
    "startColumnNumber" : 19,
    "endLineNumber" : 102,
    "endColumnNumber" : 27
  }, {
    "charLength" : 8,
    "startLineNumber" : 102,
    "startColumnNumber" : 55,
    "endLineNumber" : 102,
    "endColumnNumber" : 63
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 0
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 0
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 1
  } ]
}