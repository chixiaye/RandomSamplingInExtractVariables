{
  "id" : 126,
  "expression" : "actualOffset",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-project/spring-boot-tools/spring-boot-loader/src/main/java/org/springframework/boot/loader/jar/CentralDirectoryEndRecord.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "actualOffset",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 102,
      "startColumnNumber" : 9,
      "endLineNumber" : 102,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 102,
        "startColumnNumber" : 9,
        "endLineNumber" : 102,
        "endColumnNumber" : 39
      },
      "nodeContext" : "actualOffset - specifiedOffset",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 102,
        "startColumnNumber" : 2,
        "endLineNumber" : 102,
        "endColumnNumber" : 40
      },
      "nodeContext" : "return actualOffset - specifiedOffset;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 261,
        "startLineNumber" : 98,
        "startColumnNumber" : 54,
        "endLineNumber" : 103,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  long length=Bytes.littleEndianValue(this.block,this.offset + 12,4);\n  long specifiedOffset=Bytes.littleEndianValue(this.block,this.offset + 16,4);\n  long actualOffset=data.getSize() - this.size - length;\n  return actualOffset - specifiedOffset;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 49,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 658,
        "startLineNumber" : 91,
        "startColumnNumber" : 1,
        "endLineNumber" : 103,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Returns the location in the data that the archive actually starts. For most files the archive data will start at 0, however, it is possible to have prefixed bytes (often used for startup scripts) at the beginning of the data.\n * @param data the source data\n * @return the offset within the data where the archive begins\n */\npublic long getStartOfArchive(RandomAccessData data){\n  long length=Bytes.littleEndianValue(this.block,this.offset + 12,4);\n  long specifiedOffset=Bytes.littleEndianValue(this.block,this.offset + 16,4);\n  long actualOffset=data.getSize() - this.size - length;\n  return actualOffset - specifiedOffset;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 58,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 102,
        "startColumnNumber" : 2,
        "endLineNumber" : 102,
        "endColumnNumber" : 40
      },
      "nodeContext" : "return actualOffset - specifiedOffset;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 102,
    "startColumnNumber" : 9,
    "endLineNumber" : 102,
    "endColumnNumber" : 21
  } ],
  "layoutRelationDataList" : [ ]
}