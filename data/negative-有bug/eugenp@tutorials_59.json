{
  "id" : 59,
  "expression" : "getStringFromInputStream(new FileInputStream(outputFileName))",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/spring-core/src/test/java/com/baeldung/streamutils/CopyStreamIntegrationTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "getStringFromInputStream(new FileInputStream(outputFileName))",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 61,
      "startLineNumber" : 33,
      "startColumnNumber" : 35,
      "endLineNumber" : 33,
      "endColumnNumber" : 96
    },
    "astNodeNumber" : 6,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 33,
        "startColumnNumber" : 15,
        "endLineNumber" : 33,
        "endColumnNumber" : 96
      },
      "nodeContext" : "outputFileContent=getStringFromInputStream(new FileInputStream(outputFileName))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 33,
        "startColumnNumber" : 8,
        "endLineNumber" : 33,
        "endColumnNumber" : 97
      },
      "nodeContext" : "String outputFileContent=getStringFromInputStream(new FileInputStream(outputFileName));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 644,
        "startLineNumber" : 22,
        "startColumnNumber" : 83,
        "endLineNumber" : 35,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String inputFileName=\"src/test/resources/input.txt\";\n  String outputFileName=\"src/test/resources/output.txt\";\n  File outputFile=new File(outputFileName);\n  InputStream in=new FileInputStream(inputFileName);\n  OutputStream out=new FileOutputStream(outputFileName);\n  StreamUtils.copy(in,out);\n  assertTrue(outputFile.exists());\n  String inputFileContent=getStringFromInputStream(new FileInputStream(inputFileName));\n  String outputFileContent=getStringFromInputStream(new FileInputStream(outputFileName));\n  assertEquals(inputFileContent,outputFileContent);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 733,
        "startLineNumber" : 21,
        "startColumnNumber" : 4,
        "endLineNumber" : 35,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void whenCopyInputStreamToOutputStream_thenCorrect() throws IOException {\n  String inputFileName=\"src/test/resources/input.txt\";\n  String outputFileName=\"src/test/resources/output.txt\";\n  File outputFile=new File(outputFileName);\n  InputStream in=new FileInputStream(inputFileName);\n  OutputStream out=new FileOutputStream(outputFileName);\n  StreamUtils.copy(in,out);\n  assertTrue(outputFile.exists());\n  String inputFileContent=getStringFromInputStream(new FileInputStream(inputFileName));\n  String outputFileContent=getStringFromInputStream(new FileInputStream(outputFileName));\n  assertEquals(inputFileContent,outputFileContent);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 87,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 33,
        "startColumnNumber" : 8,
        "endLineNumber" : 33,
        "endColumnNumber" : 97
      },
      "nodeContext" : "String outputFileContent=getStringFromInputStream(new FileInputStream(outputFileName));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 61,
    "startLineNumber" : 33,
    "startColumnNumber" : 35,
    "endLineNumber" : 33,
    "endColumnNumber" : 96
  } ],
  "layoutRelationDataList" : [ ]
}