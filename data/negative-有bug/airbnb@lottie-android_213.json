{
  "id" : 213,
  "expression" : "widthAnimation.getValue()",
  "projectName" : "airbnb@lottie-android",
  "commitID" : "54c2775bf2c8b67c8d24840424c13968255caea7",
  "filePath" : "/lottie/src/main/java/com/airbnb/lottie/BaseStrokeContent.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "widthAnimation.getValue()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 118,
      "startColumnNumber" : 25,
      "endLineNumber" : 118,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 118,
        "startColumnNumber" : 25,
        "endLineNumber" : 118,
        "endColumnNumber" : 81
      },
      "nodeContext" : "widthAnimation.getValue() * Utils.getScale(parentMatrix)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 118,
        "startColumnNumber" : 4,
        "endLineNumber" : 118,
        "endColumnNumber" : 82
      },
      "nodeContext" : "paint.setStrokeWidth(widthAnimation.getValue() * Utils.getScale(parentMatrix))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 118,
        "startColumnNumber" : 4,
        "endLineNumber" : 118,
        "endColumnNumber" : 83
      },
      "nodeContext" : "paint.setStrokeWidth(widthAnimation.getValue() * Utils.getScale(parentMatrix));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1132,
        "startLineNumber" : 114,
        "startColumnNumber" : 82,
        "endLineNumber" : 145,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  L.beginSection(\"StrokeContent#draw\");\n  int alpha=(int)((parentAlpha / 255f * opacityAnimation.getValue() / 100f) * 255);\n  paint.setAlpha(alpha);\n  paint.setStrokeWidth(widthAnimation.getValue() * Utils.getScale(parentMatrix));\n  if (paint.getStrokeWidth() <= 0) {\n    L.endSection(\"StrokeContent#draw\");\n    return;\n  }\n  applyDashPatternIfNeeded(parentMatrix);\n  for (int i=0; i < pathGroups.size(); i++) {\n    PathGroup pathGroup=pathGroups.get(i);\n    if (pathGroup.trimPath != null) {\n      applyTrimPath(canvas,pathGroup,parentMatrix);\n    }\n else {\n      L.beginSection(\"StrokeContent#buildPath\");\n      path.reset();\n      for (int j=pathGroup.paths.size() - 1; j >= 0; j--) {\n        path.addPath(pathGroup.paths.get(j).getPath(),parentMatrix);\n      }\n      L.endSection(\"StrokeContent#buildPath\");\n      L.beginSection(\"StrokeContent#drawPath\");\n      canvas.drawPath(path,paint);\n      L.endSection(\"StrokeContent#drawPath\");\n    }\n  }\n  L.endSection(\"StrokeContent#draw\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1212,
        "startLineNumber" : 114,
        "startColumnNumber" : 2,
        "endLineNumber" : 145,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void draw(Canvas canvas,Matrix parentMatrix,int parentAlpha){\n  L.beginSection(\"StrokeContent#draw\");\n  int alpha=(int)((parentAlpha / 255f * opacityAnimation.getValue() / 100f) * 255);\n  paint.setAlpha(alpha);\n  paint.setStrokeWidth(widthAnimation.getValue() * Utils.getScale(parentMatrix));\n  if (paint.getStrokeWidth() <= 0) {\n    L.endSection(\"StrokeContent#draw\");\n    return;\n  }\n  applyDashPatternIfNeeded(parentMatrix);\n  for (int i=0; i < pathGroups.size(); i++) {\n    PathGroup pathGroup=pathGroups.get(i);\n    if (pathGroup.trimPath != null) {\n      applyTrimPath(canvas,pathGroup,parentMatrix);\n    }\n else {\n      L.beginSection(\"StrokeContent#buildPath\");\n      path.reset();\n      for (int j=pathGroup.paths.size() - 1; j >= 0; j--) {\n        path.addPath(pathGroup.paths.get(j).getPath(),parentMatrix);\n      }\n      L.endSection(\"StrokeContent#buildPath\");\n      L.beginSection(\"StrokeContent#drawPath\");\n      canvas.drawPath(path,paint);\n      L.endSection(\"StrokeContent#drawPath\");\n    }\n  }\n  L.endSection(\"StrokeContent#draw\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 179,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 118,
        "startColumnNumber" : 4,
        "endLineNumber" : 118,
        "endColumnNumber" : 83
      },
      "nodeContext" : "paint.setStrokeWidth(widthAnimation.getValue() * Utils.getScale(parentMatrix));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.Float"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 118,
    "startColumnNumber" : 25,
    "endLineNumber" : 118,
    "endColumnNumber" : 50
  } ],
  "layoutRelationDataList" : [ ]
}