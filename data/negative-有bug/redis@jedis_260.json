{
  "id" : 260,
  "expression" : "\"[42.0 42.0]\"",
  "projectName" : "redis@jedis",
  "commitID" : "eaa5b16af93d575cd1f340c2cd23595dc29d5638",
  "filePath" : "/src/test/java/redis/clients/jedis/modules/search/QueryBuilderTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"[42.0 42.0]\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 58,
      "startColumnNumber" : 17,
      "endLineNumber" : 58,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 52
      },
      "nodeContext" : "assertEquals(\"[42.0 42.0]\",eq(42.0).toString())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertEquals(\"[42.0 42.0]\",eq(42.0).toString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1383,
        "startLineNumber" : 35,
        "startColumnNumber" : 26,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Value v=between(1,10);\n  assertEquals(\"[1 10]\",v.toString());\n  v=between(1,10).inclusiveMax(false);\n  assertEquals(\"[1 (10]\",v.toString());\n  v=between(1,10).inclusiveMin(false);\n  assertEquals(\"[(1 10]\",v.toString());\n  v=between(1.0,10.1);\n  assertEquals(\"[1.0 10.1]\",v.toString());\n  v=between(-1.0,10.1).inclusiveMax(false);\n  assertEquals(\"[-1.0 (10.1]\",v.toString());\n  v=between(-1.1,150.61).inclusiveMin(false);\n  assertEquals(\"[(-1.1 150.61]\",v.toString());\n  assertEquals(\"[42 42]\",eq(42).toString());\n  assertEquals(\"[-inf (42]\",lt(42).toString());\n  assertEquals(\"[-inf 42]\",le(42).toString());\n  assertEquals(\"[(-42 inf]\",gt(-42).toString());\n  assertEquals(\"[42 inf]\",ge(42).toString());\n  assertEquals(\"[42.0 42.0]\",eq(42.0).toString());\n  assertEquals(\"[-inf (42.0]\",lt(42.0).toString());\n  assertEquals(\"[-inf 42.0]\",le(42.0).toString());\n  assertEquals(\"[(42.0 inf]\",gt(42.0).toString());\n  assertEquals(\"[42.0 inf]\",ge(42.0).toString());\n  assertEquals(\"[(1587058030 inf]\",gt(1587058030).toString());\n  assertEquals(\"s\",value(\"s\").toString());\n  assertEquals(\"[1.0 2.0 3.0 km]\",geo(new GeoCoordinate(1.0,2.0),3.0,GeoUnit.KM).toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 227,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1416,
        "startLineNumber" : 34,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testRange(){\n  Value v=between(1,10);\n  assertEquals(\"[1 10]\",v.toString());\n  v=between(1,10).inclusiveMax(false);\n  assertEquals(\"[1 (10]\",v.toString());\n  v=between(1,10).inclusiveMin(false);\n  assertEquals(\"[(1 10]\",v.toString());\n  v=between(1.0,10.1);\n  assertEquals(\"[1.0 10.1]\",v.toString());\n  v=between(-1.0,10.1).inclusiveMax(false);\n  assertEquals(\"[-1.0 (10.1]\",v.toString());\n  v=between(-1.1,150.61).inclusiveMin(false);\n  assertEquals(\"[(-1.1 150.61]\",v.toString());\n  assertEquals(\"[42 42]\",eq(42).toString());\n  assertEquals(\"[-inf (42]\",lt(42).toString());\n  assertEquals(\"[-inf 42]\",le(42).toString());\n  assertEquals(\"[(-42 inf]\",gt(-42).toString());\n  assertEquals(\"[42 inf]\",ge(42).toString());\n  assertEquals(\"[42.0 42.0]\",eq(42.0).toString());\n  assertEquals(\"[-inf (42.0]\",lt(42.0).toString());\n  assertEquals(\"[-inf 42.0]\",le(42.0).toString());\n  assertEquals(\"[(42.0 inf]\",gt(42.0).toString());\n  assertEquals(\"[42.0 inf]\",ge(42.0).toString());\n  assertEquals(\"[(1587058030 inf]\",gt(1587058030).toString());\n  assertEquals(\"s\",value(\"s\").toString());\n  assertEquals(\"[1.0 2.0 3.0 km]\",geo(new GeoCoordinate(1.0,2.0),3.0,GeoUnit.KM).toString());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 233,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 58,
        "endColumnNumber" : 53
      },
      "nodeContext" : "assertEquals(\"[42.0 42.0]\",eq(42.0).toString());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 58,
    "startColumnNumber" : 17,
    "endLineNumber" : 58,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}