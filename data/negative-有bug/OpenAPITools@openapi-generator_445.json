{
  "id" : 445,
  "expression" : "\"query\"",
  "projectName" : "OpenAPITools@openapi-generator",
  "commitID" : "9e1972bb1d3a4f1e3f47c87613f4050feada0146",
  "filePath" : "/samples/client/petstore/java/retrofit2rx2/src/main/java/org/openapitools/client/auth/ApiKeyAuth.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"query\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 43,
      "startColumnNumber" : 12,
      "endLineNumber" : 43,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 43,
        "startColumnNumber" : 12,
        "endLineNumber" : 43,
        "endColumnNumber" : 36
      },
      "nodeContext" : "\"query\".equals(location)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1102,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 69,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (\"query\".equals(location)) {\n  String newQuery=request.url().uri().getQuery();\n  paramValue=paramName + \"=\" + apiKey;\n  if (newQuery == null) {\n    newQuery=paramValue;\n  }\n else {\n    newQuery+=\"&\" + paramValue;\n  }\n  URI newUri;\n  try {\n    newUri=new URI(request.url().uri().getScheme(),request.url().uri().getAuthority(),request.url().uri().getPath(),newQuery,request.url().uri().getFragment());\n  }\n catch (  URISyntaxException e) {\n    throw new IOException(e);\n  }\n  request=request.newBuilder().url(newUri.toURL()).build();\n}\n else if (\"header\".equals(location)) {\n  request=request.newBuilder().addHeader(paramName,apiKey).build();\n}\n else if (\"cookie\".equals(location)) {\n  request=request.newBuilder().addHeader(\"Cookie\",String.format(\"%s=%s\",paramName,apiKey)).build();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 148,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1228,
        "startLineNumber" : 39,
        "startColumnNumber" : 62,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String paramValue;\n  Request request=chain.request();\n  if (\"query\".equals(location)) {\n    String newQuery=request.url().uri().getQuery();\n    paramValue=paramName + \"=\" + apiKey;\n    if (newQuery == null) {\n      newQuery=paramValue;\n    }\n else {\n      newQuery+=\"&\" + paramValue;\n    }\n    URI newUri;\n    try {\n      newUri=new URI(request.url().uri().getScheme(),request.url().uri().getAuthority(),request.url().uri().getPath(),newQuery,request.url().uri().getFragment());\n    }\n catch (    URISyntaxException e) {\n      throw new IOException(e);\n    }\n    request=request.newBuilder().url(newUri.toURL()).build();\n  }\n else   if (\"header\".equals(location)) {\n    request=request.newBuilder().addHeader(paramName,apiKey).build();\n  }\n else   if (\"cookie\".equals(location)) {\n    request=request.newBuilder().addHeader(\"Cookie\",String.format(\"%s=%s\",paramName,apiKey)).build();\n  }\n  return chain.proceed(request);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 167,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1300,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Response intercept(Chain chain) throws IOException {\n  String paramValue;\n  Request request=chain.request();\n  if (\"query\".equals(location)) {\n    String newQuery=request.url().uri().getQuery();\n    paramValue=paramName + \"=\" + apiKey;\n    if (newQuery == null) {\n      newQuery=paramValue;\n    }\n else {\n      newQuery+=\"&\" + paramValue;\n    }\n    URI newUri;\n    try {\n      newUri=new URI(request.url().uri().getScheme(),request.url().uri().getAuthority(),request.url().uri().getPath(),newQuery,request.url().uri().getFragment());\n    }\n catch (    URISyntaxException e) {\n      throw new IOException(e);\n    }\n    request=request.newBuilder().url(newUri.toURL()).build();\n  }\n else   if (\"header\".equals(location)) {\n    request=request.newBuilder().addHeader(paramName,apiKey).build();\n  }\n else   if (\"cookie\".equals(location)) {\n    request=request.newBuilder().addHeader(\"Cookie\",String.format(\"%s=%s\",paramName,apiKey)).build();\n  }\n  return chain.proceed(request);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 43,
        "startColumnNumber" : 12,
        "endLineNumber" : 43,
        "endColumnNumber" : 36
      },
      "nodeContext" : "\"query\".equals(location)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 43,
    "startColumnNumber" : 12,
    "endLineNumber" : 43,
    "endColumnNumber" : 19
  } ],
  "layoutRelationDataList" : [ ]
}