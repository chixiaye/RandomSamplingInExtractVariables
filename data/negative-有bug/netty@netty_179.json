{
  "id" : 179,
  "expression" : "MqttMessageBuilders.unsubAck().packetId((short)1).properties(props).addReasonCode((short)0x83).build()",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/codec-mqtt/src/test/java/io/netty/handler/codec/mqtt/MqttCodecTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "MqttMessageBuilders.unsubAck().packetId((short)1).properties(props).addReasonCode((short)0x83).build()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 176,
      "startLineNumber" : 741,
      "startColumnNumber" : 44,
      "endLineNumber" : 745,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 18,
    "astHeight" : 6,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 186,
        "startLineNumber" : 741,
        "startColumnNumber" : 34,
        "endLineNumber" : 745,
        "endColumnNumber" : 24
      },
      "nodeContext" : "message=MqttMessageBuilders.unsubAck().packetId((short)1).properties(props).addReasonCode((short)0x83).build()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 213,
        "startLineNumber" : 741,
        "startColumnNumber" : 8,
        "endLineNumber" : 745,
        "endColumnNumber" : 25
      },
      "nodeContext" : "final MqttUnsubAckMessage message=MqttMessageBuilders.unsubAck().packetId((short)1).properties(props).addReasonCode((short)0x83).build();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1250,
        "startLineNumber" : 736,
        "startColumnNumber" : 63,
        "endLineNumber" : 759,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  when(versionAttrMock.get()).thenReturn(MqttVersion.MQTT_5);\n  MqttProperties props=new MqttProperties();\n  props.add(new MqttProperties.IntegerProperty(PAYLOAD_FORMAT_INDICATOR.value(),6));\n  final MqttUnsubAckMessage message=MqttMessageBuilders.unsubAck().packetId((short)1).properties(props).addReasonCode((short)0x83).build();\n  ByteBuf byteBuf=MqttEncoder.doEncode(ctx,message);\n  ArgumentCaptor<MqttUnsubAckMessage> captor=ArgumentCaptor.forClass(MqttUnsubAckMessage.class);\n  mqttDecoder.channelRead(ctx,byteBuf);\n  verify(ctx).fireChannelRead(captor.capture());\n  final MqttUnsubAckMessage decodedMessage=captor.getValue();\n  validateFixedHeaders(message.fixedHeader(),decodedMessage.fixedHeader());\n  validatePacketIdAndPropertiesVariableHeader((MqttMessageIdAndPropertiesVariableHeader)message.variableHeader(),(MqttMessageIdAndPropertiesVariableHeader)decodedMessage.variableHeader());\n  assertEquals(message.payload().unsubscribeReasonCodes(),decodedMessage.payload().unsubscribeReasonCodes());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 142,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1320,
        "startLineNumber" : 735,
        "startColumnNumber" : 4,
        "endLineNumber" : 759,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testUnsubAckMessageForMqtt5() throws Exception {\n  when(versionAttrMock.get()).thenReturn(MqttVersion.MQTT_5);\n  MqttProperties props=new MqttProperties();\n  props.add(new MqttProperties.IntegerProperty(PAYLOAD_FORMAT_INDICATOR.value(),6));\n  final MqttUnsubAckMessage message=MqttMessageBuilders.unsubAck().packetId((short)1).properties(props).addReasonCode((short)0x83).build();\n  ByteBuf byteBuf=MqttEncoder.doEncode(ctx,message);\n  ArgumentCaptor<MqttUnsubAckMessage> captor=ArgumentCaptor.forClass(MqttUnsubAckMessage.class);\n  mqttDecoder.channelRead(ctx,byteBuf);\n  verify(ctx).fireChannelRead(captor.capture());\n  final MqttUnsubAckMessage decodedMessage=captor.getValue();\n  validateFixedHeaders(message.fixedHeader(),decodedMessage.fixedHeader());\n  validatePacketIdAndPropertiesVariableHeader((MqttMessageIdAndPropertiesVariableHeader)message.variableHeader(),(MqttMessageIdAndPropertiesVariableHeader)decodedMessage.variableHeader());\n  assertEquals(message.payload().unsubscribeReasonCodes(),decodedMessage.payload().unsubscribeReasonCodes());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 150,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 213,
        "startLineNumber" : 741,
        "startColumnNumber" : 8,
        "endLineNumber" : 745,
        "endColumnNumber" : 25
      },
      "nodeContext" : "final MqttUnsubAckMessage message=MqttMessageBuilders.unsubAck().packetId((short)1).properties(props).addReasonCode((short)0x83).build();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 24,
      "astHeight" : 8
    },
    "tokenLength" : 9,
    "type" : "io.netty.handler.codec.mqtt.MqttUnsubAckMessage"
  } ],
  "positionList" : [ {
    "charLength" : 176,
    "startLineNumber" : 741,
    "startColumnNumber" : 44,
    "endLineNumber" : 745,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ ]
}