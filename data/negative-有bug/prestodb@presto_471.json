{
  "id" : 471,
  "expression" : "booleanProperty(USE_DATE_TRUNC,\"Use the new UDF dateTrunc in pinot that is more presto compatible\",pinotConfig.isUseDateTrunc(),false)",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-pinot-toolkit/src/main/java/com/facebook/presto/pinot/PinotSessionProperties.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "booleanProperty(USE_DATE_TRUNC,\"Use the new UDF dateTrunc in pinot that is more presto compatible\",pinotConfig.isUseDateTrunc(),false)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 234,
      "startLineNumber" : 172,
      "startColumnNumber" : 16,
      "endLineNumber" : 176,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 8,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 4141,
        "startLineNumber" : 126,
        "startColumnNumber" : 28,
        "endLineNumber" : 208,
        "endColumnNumber" : 42
      },
      "nodeContext" : "ImmutableList.of(booleanProperty(FORBID_BROKER_QUERIES,\"Forbid queries to the broker\",pinotConfig.isForbidBrokerQueries(),false),booleanProperty(FORBID_SEGMENT_QUERIES,\"Forbid segment queries\",pinotConfig.isForbidSegmentQueries(),false),booleanProperty(IGNORE_EMPTY_RESPONSES,\"Ignore empty or missing pinot server responses\",pinotConfig.isIgnoreEmptyResponses(),false),integerProperty(RETRY_COUNT,\"Retry count for retriable pinot data fetch calls\",pinotConfig.getFetchRetryCount(),false),booleanProperty(MARK_DATA_FETCH_EXCEPTIONS_AS_RETRIABLE,\"Retry Pinot query on data fetch exceptions\",pinotConfig.isMarkDataFetchExceptionsAsRetriable(),false),integerProperty(NON_AGGREGATE_LIMIT_FOR_BROKER_QUERIES,\"Max limit for non aggregate queries to the pinot broker\",pinotConfig.getNonAggregateLimitForBrokerQueries(),false),integerProperty(LIMIT_LARGE_FOR_SEGMENT,\"Server query selection limit for large segment\",pinotConfig.getLimitLargeForSegment(),false),integerProperty(TOPN_LARGE,\"Broker query group by limit\",pinotConfig.getTopNLarge(),false),stringProperty(OVERRIDE_DISTINCT_COUNT_FUNCTION,\"Override distinct count function to another function name\",pinotConfig.getOverrideDistinctCountFunction(),false),booleanProperty(USE_DATE_TRUNC,\"Use the new UDF dateTrunc in pinot that is more presto compatible\",pinotConfig.isUseDateTrunc(),false),booleanProperty(USE_PINOT_SQL_FOR_BROKER_QUERIES,\"Use Pinot SQL syntax and endpoint for broker query\",pinotConfig.isUsePinotSqlForBrokerQueries(),false),booleanProperty(PUSHDOWN_TOPN_BROKER_QUERIES,\"Push down order by to pinot broker for top queries\",pinotConfig.isPushdownTopNBrokerQueries(),false),new PropertyMetadata<>(CONNECTION_TIMEOUT,\"Connection Timeout to talk to Pinot servers\",createUnboundedVarcharType(),Duration.class,pinotConfig.getConnectionTimeout(),false,value -> Duration.valueOf((String)value),Duration::toString),new PropertyMetadata<>(NUM_SEGMENTS_PER_SPLIT,\"Number of segments of the same host per split\",INTEGER,Integer.class,pinotConfig.getNumSegmentsPerSplit(),false,value -> {\n  int ret=((Number)value).intValue();\n  checkArgument(ret > 0,\"Number of segments per split must be more than zero\");\n  return ret;\n}\n,object -> object))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 169,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 4161,
        "startLineNumber" : 126,
        "startColumnNumber" : 8,
        "endLineNumber" : 208,
        "endColumnNumber" : 42
      },
      "nodeContext" : "sessionProperties=ImmutableList.of(booleanProperty(FORBID_BROKER_QUERIES,\"Forbid queries to the broker\",pinotConfig.isForbidBrokerQueries(),false),booleanProperty(FORBID_SEGMENT_QUERIES,\"Forbid segment queries\",pinotConfig.isForbidSegmentQueries(),false),booleanProperty(IGNORE_EMPTY_RESPONSES,\"Ignore empty or missing pinot server responses\",pinotConfig.isIgnoreEmptyResponses(),false),integerProperty(RETRY_COUNT,\"Retry count for retriable pinot data fetch calls\",pinotConfig.getFetchRetryCount(),false),booleanProperty(MARK_DATA_FETCH_EXCEPTIONS_AS_RETRIABLE,\"Retry Pinot query on data fetch exceptions\",pinotConfig.isMarkDataFetchExceptionsAsRetriable(),false),integerProperty(NON_AGGREGATE_LIMIT_FOR_BROKER_QUERIES,\"Max limit for non aggregate queries to the pinot broker\",pinotConfig.getNonAggregateLimitForBrokerQueries(),false),integerProperty(LIMIT_LARGE_FOR_SEGMENT,\"Server query selection limit for large segment\",pinotConfig.getLimitLargeForSegment(),false),integerProperty(TOPN_LARGE,\"Broker query group by limit\",pinotConfig.getTopNLarge(),false),stringProperty(OVERRIDE_DISTINCT_COUNT_FUNCTION,\"Override distinct count function to another function name\",pinotConfig.getOverrideDistinctCountFunction(),false),booleanProperty(USE_DATE_TRUNC,\"Use the new UDF dateTrunc in pinot that is more presto compatible\",pinotConfig.isUseDateTrunc(),false),booleanProperty(USE_PINOT_SQL_FOR_BROKER_QUERIES,\"Use Pinot SQL syntax and endpoint for broker query\",pinotConfig.isUsePinotSqlForBrokerQueries(),false),booleanProperty(PUSHDOWN_TOPN_BROKER_QUERIES,\"Push down order by to pinot broker for top queries\",pinotConfig.isPushdownTopNBrokerQueries(),false),new PropertyMetadata<>(CONNECTION_TIMEOUT,\"Connection Timeout to talk to Pinot servers\",createUnboundedVarcharType(),Duration.class,pinotConfig.getConnectionTimeout(),false,value -> Duration.valueOf((String)value),Duration::toString),new PropertyMetadata<>(NUM_SEGMENTS_PER_SPLIT,\"Number of segments of the same host per split\",INTEGER,Integer.class,pinotConfig.getNumSegmentsPerSplit(),false,value -> {\n  int ret=((Number)value).intValue();\n  checkArgument(ret > 0,\"Number of segments per split must be more than zero\");\n  return ret;\n}\n,object -> object))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 171,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4162,
        "startLineNumber" : 126,
        "startColumnNumber" : 8,
        "endLineNumber" : 208,
        "endColumnNumber" : 43
      },
      "nodeContext" : "sessionProperties=ImmutableList.of(booleanProperty(FORBID_BROKER_QUERIES,\"Forbid queries to the broker\",pinotConfig.isForbidBrokerQueries(),false),booleanProperty(FORBID_SEGMENT_QUERIES,\"Forbid segment queries\",pinotConfig.isForbidSegmentQueries(),false),booleanProperty(IGNORE_EMPTY_RESPONSES,\"Ignore empty or missing pinot server responses\",pinotConfig.isIgnoreEmptyResponses(),false),integerProperty(RETRY_COUNT,\"Retry count for retriable pinot data fetch calls\",pinotConfig.getFetchRetryCount(),false),booleanProperty(MARK_DATA_FETCH_EXCEPTIONS_AS_RETRIABLE,\"Retry Pinot query on data fetch exceptions\",pinotConfig.isMarkDataFetchExceptionsAsRetriable(),false),integerProperty(NON_AGGREGATE_LIMIT_FOR_BROKER_QUERIES,\"Max limit for non aggregate queries to the pinot broker\",pinotConfig.getNonAggregateLimitForBrokerQueries(),false),integerProperty(LIMIT_LARGE_FOR_SEGMENT,\"Server query selection limit for large segment\",pinotConfig.getLimitLargeForSegment(),false),integerProperty(TOPN_LARGE,\"Broker query group by limit\",pinotConfig.getTopNLarge(),false),stringProperty(OVERRIDE_DISTINCT_COUNT_FUNCTION,\"Override distinct count function to another function name\",pinotConfig.getOverrideDistinctCountFunction(),false),booleanProperty(USE_DATE_TRUNC,\"Use the new UDF dateTrunc in pinot that is more presto compatible\",pinotConfig.isUseDateTrunc(),false),booleanProperty(USE_PINOT_SQL_FOR_BROKER_QUERIES,\"Use Pinot SQL syntax and endpoint for broker query\",pinotConfig.isUsePinotSqlForBrokerQueries(),false),booleanProperty(PUSHDOWN_TOPN_BROKER_QUERIES,\"Push down order by to pinot broker for top queries\",pinotConfig.isPushdownTopNBrokerQueries(),false),new PropertyMetadata<>(CONNECTION_TIMEOUT,\"Connection Timeout to talk to Pinot servers\",createUnboundedVarcharType(),Duration.class,pinotConfig.getConnectionTimeout(),false,value -> Duration.valueOf((String)value),Duration::toString),new PropertyMetadata<>(NUM_SEGMENTS_PER_SPLIT,\"Number of segments of the same host per split\",INTEGER,Integer.class,pinotConfig.getNumSegmentsPerSplit(),false,value -> {\n  int ret=((Number)value).intValue();\n  checkArgument(ret > 0,\"Number of segments per split must be more than zero\");\n  return ret;\n}\n,object -> object));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 172,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4178,
        "startLineNumber" : 125,
        "startColumnNumber" : 4,
        "endLineNumber" : 209,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  sessionProperties=ImmutableList.of(booleanProperty(FORBID_BROKER_QUERIES,\"Forbid queries to the broker\",pinotConfig.isForbidBrokerQueries(),false),booleanProperty(FORBID_SEGMENT_QUERIES,\"Forbid segment queries\",pinotConfig.isForbidSegmentQueries(),false),booleanProperty(IGNORE_EMPTY_RESPONSES,\"Ignore empty or missing pinot server responses\",pinotConfig.isIgnoreEmptyResponses(),false),integerProperty(RETRY_COUNT,\"Retry count for retriable pinot data fetch calls\",pinotConfig.getFetchRetryCount(),false),booleanProperty(MARK_DATA_FETCH_EXCEPTIONS_AS_RETRIABLE,\"Retry Pinot query on data fetch exceptions\",pinotConfig.isMarkDataFetchExceptionsAsRetriable(),false),integerProperty(NON_AGGREGATE_LIMIT_FOR_BROKER_QUERIES,\"Max limit for non aggregate queries to the pinot broker\",pinotConfig.getNonAggregateLimitForBrokerQueries(),false),integerProperty(LIMIT_LARGE_FOR_SEGMENT,\"Server query selection limit for large segment\",pinotConfig.getLimitLargeForSegment(),false),integerProperty(TOPN_LARGE,\"Broker query group by limit\",pinotConfig.getTopNLarge(),false),stringProperty(OVERRIDE_DISTINCT_COUNT_FUNCTION,\"Override distinct count function to another function name\",pinotConfig.getOverrideDistinctCountFunction(),false),booleanProperty(USE_DATE_TRUNC,\"Use the new UDF dateTrunc in pinot that is more presto compatible\",pinotConfig.isUseDateTrunc(),false),booleanProperty(USE_PINOT_SQL_FOR_BROKER_QUERIES,\"Use Pinot SQL syntax and endpoint for broker query\",pinotConfig.isUsePinotSqlForBrokerQueries(),false),booleanProperty(PUSHDOWN_TOPN_BROKER_QUERIES,\"Push down order by to pinot broker for top queries\",pinotConfig.isPushdownTopNBrokerQueries(),false),new PropertyMetadata<>(CONNECTION_TIMEOUT,\"Connection Timeout to talk to Pinot servers\",createUnboundedVarcharType(),Duration.class,pinotConfig.getConnectionTimeout(),false,value -> Duration.valueOf((String)value),Duration::toString),new PropertyMetadata<>(NUM_SEGMENTS_PER_SPLIT,\"Number of segments of the same host per split\",INTEGER,Integer.class,pinotConfig.getNumSegmentsPerSplit(),false,value -> {\n    int ret=((Number)value).intValue();\n    checkArgument(ret > 0,\"Number of segments per split must be more than zero\");\n    return ret;\n  }\n,object -> object));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 173,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4249,
        "startLineNumber" : 123,
        "startColumnNumber" : 4,
        "endLineNumber" : 209,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Inject public PinotSessionProperties(PinotConfig pinotConfig){\n  sessionProperties=ImmutableList.of(booleanProperty(FORBID_BROKER_QUERIES,\"Forbid queries to the broker\",pinotConfig.isForbidBrokerQueries(),false),booleanProperty(FORBID_SEGMENT_QUERIES,\"Forbid segment queries\",pinotConfig.isForbidSegmentQueries(),false),booleanProperty(IGNORE_EMPTY_RESPONSES,\"Ignore empty or missing pinot server responses\",pinotConfig.isIgnoreEmptyResponses(),false),integerProperty(RETRY_COUNT,\"Retry count for retriable pinot data fetch calls\",pinotConfig.getFetchRetryCount(),false),booleanProperty(MARK_DATA_FETCH_EXCEPTIONS_AS_RETRIABLE,\"Retry Pinot query on data fetch exceptions\",pinotConfig.isMarkDataFetchExceptionsAsRetriable(),false),integerProperty(NON_AGGREGATE_LIMIT_FOR_BROKER_QUERIES,\"Max limit for non aggregate queries to the pinot broker\",pinotConfig.getNonAggregateLimitForBrokerQueries(),false),integerProperty(LIMIT_LARGE_FOR_SEGMENT,\"Server query selection limit for large segment\",pinotConfig.getLimitLargeForSegment(),false),integerProperty(TOPN_LARGE,\"Broker query group by limit\",pinotConfig.getTopNLarge(),false),stringProperty(OVERRIDE_DISTINCT_COUNT_FUNCTION,\"Override distinct count function to another function name\",pinotConfig.getOverrideDistinctCountFunction(),false),booleanProperty(USE_DATE_TRUNC,\"Use the new UDF dateTrunc in pinot that is more presto compatible\",pinotConfig.isUseDateTrunc(),false),booleanProperty(USE_PINOT_SQL_FOR_BROKER_QUERIES,\"Use Pinot SQL syntax and endpoint for broker query\",pinotConfig.isUsePinotSqlForBrokerQueries(),false),booleanProperty(PUSHDOWN_TOPN_BROKER_QUERIES,\"Push down order by to pinot broker for top queries\",pinotConfig.isPushdownTopNBrokerQueries(),false),new PropertyMetadata<>(CONNECTION_TIMEOUT,\"Connection Timeout to talk to Pinot servers\",createUnboundedVarcharType(),Duration.class,pinotConfig.getConnectionTimeout(),false,value -> Duration.valueOf((String)value),Duration::toString),new PropertyMetadata<>(NUM_SEGMENTS_PER_SPLIT,\"Number of segments of the same host per split\",INTEGER,Integer.class,pinotConfig.getNumSegmentsPerSplit(),false,value -> {\n    int ret=((Number)value).intValue();\n    checkArgument(ret > 0,\"Number of segments per split must be more than zero\");\n    return ret;\n  }\n,object -> object));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 182,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 4141,
        "startLineNumber" : 126,
        "startColumnNumber" : 28,
        "endLineNumber" : 208,
        "endColumnNumber" : 42
      },
      "nodeContext" : "ImmutableList.of(booleanProperty(FORBID_BROKER_QUERIES,\"Forbid queries to the broker\",pinotConfig.isForbidBrokerQueries(),false),booleanProperty(FORBID_SEGMENT_QUERIES,\"Forbid segment queries\",pinotConfig.isForbidSegmentQueries(),false),booleanProperty(IGNORE_EMPTY_RESPONSES,\"Ignore empty or missing pinot server responses\",pinotConfig.isIgnoreEmptyResponses(),false),integerProperty(RETRY_COUNT,\"Retry count for retriable pinot data fetch calls\",pinotConfig.getFetchRetryCount(),false),booleanProperty(MARK_DATA_FETCH_EXCEPTIONS_AS_RETRIABLE,\"Retry Pinot query on data fetch exceptions\",pinotConfig.isMarkDataFetchExceptionsAsRetriable(),false),integerProperty(NON_AGGREGATE_LIMIT_FOR_BROKER_QUERIES,\"Max limit for non aggregate queries to the pinot broker\",pinotConfig.getNonAggregateLimitForBrokerQueries(),false),integerProperty(LIMIT_LARGE_FOR_SEGMENT,\"Server query selection limit for large segment\",pinotConfig.getLimitLargeForSegment(),false),integerProperty(TOPN_LARGE,\"Broker query group by limit\",pinotConfig.getTopNLarge(),false),stringProperty(OVERRIDE_DISTINCT_COUNT_FUNCTION,\"Override distinct count function to another function name\",pinotConfig.getOverrideDistinctCountFunction(),false),booleanProperty(USE_DATE_TRUNC,\"Use the new UDF dateTrunc in pinot that is more presto compatible\",pinotConfig.isUseDateTrunc(),false),booleanProperty(USE_PINOT_SQL_FOR_BROKER_QUERIES,\"Use Pinot SQL syntax and endpoint for broker query\",pinotConfig.isUsePinotSqlForBrokerQueries(),false),booleanProperty(PUSHDOWN_TOPN_BROKER_QUERIES,\"Push down order by to pinot broker for top queries\",pinotConfig.isPushdownTopNBrokerQueries(),false),new PropertyMetadata<>(CONNECTION_TIMEOUT,\"Connection Timeout to talk to Pinot servers\",createUnboundedVarcharType(),Duration.class,pinotConfig.getConnectionTimeout(),false,value -> Duration.valueOf((String)value),Duration::toString),new PropertyMetadata<>(NUM_SEGMENTS_PER_SPLIT,\"Number of segments of the same host per split\",INTEGER,Integer.class,pinotConfig.getNumSegmentsPerSplit(),false,value -> {\n  int ret=((Number)value).intValue();\n  checkArgument(ret > 0,\"Number of segments per split must be more than zero\");\n  return ret;\n}\n,object -> object))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 169,
      "astHeight" : 11
    },
    "tokenLength" : 18,
    "type" : "com.facebook.presto.spi.session.PropertyMetadata<java.lang.Boolean>"
  } ],
  "positionList" : [ {
    "charLength" : 234,
    "startLineNumber" : 172,
    "startColumnNumber" : 16,
    "endLineNumber" : 176,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}