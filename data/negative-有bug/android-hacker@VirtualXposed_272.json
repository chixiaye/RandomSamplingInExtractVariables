{
  "id" : 272,
  "expression" : "hashes.length == (BASE_SIZE * 2)",
  "projectName" : "android-hacker@VirtualXposed",
  "commitID" : "8e98dd20e6a751089d4eb2642fa6bf088a3e7a79",
  "filePath" : "/VirtualApp/lib/src/main/java/com/lody/virtual/helper/collection/ArraySet.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "hashes.length == (BASE_SIZE * 2)",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 120,
      "startColumnNumber" : 12,
      "endLineNumber" : 120,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 8,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1215,
        "startLineNumber" : 120,
        "startColumnNumber" : 8,
        "endLineNumber" : 148,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (hashes.length == (BASE_SIZE * 2)) {\nsynchronized (ArraySet.class) {\n    if (mTwiceBaseCacheSize < CACHE_SIZE) {\n      array[0]=mTwiceBaseCache;\n      array[1]=hashes;\n      for (int i=size - 1; i >= 2; i--) {\n        array[i]=null;\n      }\n      mTwiceBaseCache=array;\n      mTwiceBaseCacheSize++;\n      if (DEBUG)       Log.d(TAG,\"Storing 2x cache \" + array + \" now have \"+ mTwiceBaseCacheSize+ \" entries\");\n    }\n  }\n}\n else if (hashes.length == BASE_SIZE) {\nsynchronized (ArraySet.class) {\n    if (mBaseCacheSize < CACHE_SIZE) {\n      array[0]=mBaseCache;\n      array[1]=hashes;\n      for (int i=size - 1; i >= 2; i--) {\n        array[i]=null;\n      }\n      mBaseCache=array;\n      mBaseCacheSize++;\n      if (DEBUG)       Log.d(TAG,\"Storing 1x cache \" + array + \" now have \"+ mBaseCacheSize+ \" entries\");\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 141,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1231,
        "startLineNumber" : 119,
        "startColumnNumber" : 93,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (hashes.length == (BASE_SIZE * 2)) {\nsynchronized (ArraySet.class) {\n      if (mTwiceBaseCacheSize < CACHE_SIZE) {\n        array[0]=mTwiceBaseCache;\n        array[1]=hashes;\n        for (int i=size - 1; i >= 2; i--) {\n          array[i]=null;\n        }\n        mTwiceBaseCache=array;\n        mTwiceBaseCacheSize++;\n        if (DEBUG)         Log.d(TAG,\"Storing 2x cache \" + array + \" now have \"+ mTwiceBaseCacheSize+ \" entries\");\n      }\n    }\n  }\n else   if (hashes.length == BASE_SIZE) {\nsynchronized (ArraySet.class) {\n      if (mBaseCacheSize < CACHE_SIZE) {\n        array[0]=mBaseCache;\n        array[1]=hashes;\n        for (int i=size - 1; i >= 2; i--) {\n          array[i]=null;\n        }\n        mBaseCache=array;\n        mBaseCacheSize++;\n        if (DEBUG)         Log.d(TAG,\"Storing 1x cache \" + array + \" now have \"+ mBaseCacheSize+ \" entries\");\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 142,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1320,
        "startLineNumber" : 119,
        "startColumnNumber" : 4,
        "endLineNumber" : 149,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static void freeArrays(final int[] hashes,final Object[] array,final int size){\n  if (hashes.length == (BASE_SIZE * 2)) {\nsynchronized (ArraySet.class) {\n      if (mTwiceBaseCacheSize < CACHE_SIZE) {\n        array[0]=mTwiceBaseCache;\n        array[1]=hashes;\n        for (int i=size - 1; i >= 2; i--) {\n          array[i]=null;\n        }\n        mTwiceBaseCache=array;\n        mTwiceBaseCacheSize++;\n        if (DEBUG)         Log.d(TAG,\"Storing 2x cache \" + array + \" now have \"+ mTwiceBaseCacheSize+ \" entries\");\n      }\n    }\n  }\n else   if (hashes.length == BASE_SIZE) {\nsynchronized (ArraySet.class) {\n      if (mBaseCacheSize < CACHE_SIZE) {\n        array[0]=mBaseCache;\n        array[1]=hashes;\n        for (int i=size - 1; i >= 2; i--) {\n          array[i]=null;\n        }\n        mBaseCache=array;\n        mBaseCacheSize++;\n        if (DEBUG)         Log.d(TAG,\"Storing 1x cache \" + array + \" now have \"+ mBaseCacheSize+ \" entries\");\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 164,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1215,
        "startLineNumber" : 120,
        "startColumnNumber" : 8,
        "endLineNumber" : 148,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (hashes.length == (BASE_SIZE * 2)) {\nsynchronized (ArraySet.class) {\n    if (mTwiceBaseCacheSize < CACHE_SIZE) {\n      array[0]=mTwiceBaseCache;\n      array[1]=hashes;\n      for (int i=size - 1; i >= 2; i--) {\n        array[i]=null;\n      }\n      mTwiceBaseCache=array;\n      mTwiceBaseCacheSize++;\n      if (DEBUG)       Log.d(TAG,\"Storing 2x cache \" + array + \" now have \"+ mTwiceBaseCacheSize+ \" entries\");\n    }\n  }\n}\n else if (hashes.length == BASE_SIZE) {\nsynchronized (ArraySet.class) {\n    if (mBaseCacheSize < CACHE_SIZE) {\n      array[0]=mBaseCache;\n      array[1]=hashes;\n      for (int i=size - 1; i >= 2; i--) {\n        array[i]=null;\n      }\n      mBaseCache=array;\n      mBaseCacheSize++;\n      if (DEBUG)       Log.d(TAG,\"Storing 1x cache \" + array + \" now have \"+ mBaseCacheSize+ \" entries\");\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 141,
      "astHeight" : 13
    },
    "tokenLength" : 7,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 30,
    "startLineNumber" : 120,
    "startColumnNumber" : 12,
    "endLineNumber" : 120,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ ]
}