{
  "id" : 366,
  "expression" : "protoSource",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/main/java/com/google/devtools/build/lib/rules/proto/ProtoSourceFileExcludeList.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "protoSource",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 91,
      "startColumnNumber" : 21,
      "endLineNumber" : 91,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 91,
        "startColumnNumber" : 21,
        "endLineNumber" : 91,
        "endColumnNumber" : 56
      },
      "nodeContext" : "protoSource.getOriginalSourceFile()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 91,
        "startColumnNumber" : 6,
        "endLineNumber" : 91,
        "endColumnNumber" : 57
      },
      "nodeContext" : "protoFiles.add(protoSource.getOriginalSourceFile())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 91,
        "startColumnNumber" : 6,
        "endLineNumber" : 91,
        "endColumnNumber" : 58
      },
      "nodeContext" : "protoFiles.add(protoSource.getOriginalSourceFile());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 90,
        "startColumnNumber" : 49,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  protoFiles.add(protoSource.getOriginalSourceFile());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 90,
        "startColumnNumber" : 4,
        "endLineNumber" : 92,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (ProtoSource protoSource : protoSources) {\n  protoFiles.add(protoSource.getOriginalSourceFile());\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 260,
        "startLineNumber" : 88,
        "startColumnNumber" : 98,
        "endLineNumber" : 94,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ImmutableList.Builder<Artifact> protoFiles=ImmutableList.builder();\n  for (  ProtoSource protoSource : protoSources) {\n    protoFiles.add(protoSource.getOriginalSourceFile());\n  }\n  return checkSrcs(protoFiles.build(),topLevelProtoRuleName);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 748,
        "startLineNumber" : 80,
        "startColumnNumber" : 2,
        "endLineNumber" : 94,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Checks the proto sources for mixing excluded and non-excluded protos in one single proto_library rule. Registers an attribute error if proto mixing is detected.\n * @param protoSources the protos to filter.\n * @param topLevelProtoRuleName the name of the top-level rule that generates the protos.\n * @return whether the proto sources are clean without mixing.\n */\npublic boolean checkSrcs(ImmutableList<ProtoSource> protoSources,String topLevelProtoRuleName){\n  ImmutableList.Builder<Artifact> protoFiles=ImmutableList.builder();\n  for (  ProtoSource protoSource : protoSources) {\n    protoFiles.add(protoSource.getOriginalSourceFile());\n  }\n  return checkSrcs(protoFiles.build(),topLevelProtoRuleName);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 51,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 91,
        "startColumnNumber" : 6,
        "endLineNumber" : 91,
        "endColumnNumber" : 58
      },
      "nodeContext" : "protoFiles.add(protoSource.getOriginalSourceFile());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.google.devtools.build.lib.rules.proto.ProtoSource"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 91,
    "startColumnNumber" : 21,
    "endLineNumber" : 91,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}