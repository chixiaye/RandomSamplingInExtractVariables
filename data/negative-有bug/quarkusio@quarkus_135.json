{
  "id" : 135,
  "expression" : "Collections",
  "projectName" : "quarkusio@quarkus",
  "commitID" : "2862b200ee266332150317795b9fe315be51d68b",
  "filePath" : "/independent-projects/arc/runtime/src/main/java/io/quarkus/arc/impl/Contexts.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Collections",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 46,
      "startColumnNumber" : 43,
      "endLineNumber" : 46,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 46,
        "startColumnNumber" : 43,
        "endLineNumber" : 46,
        "endColumnNumber" : 88
      },
      "nodeContext" : "Collections.singletonList(applicationContext)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 88
      },
      "nodeContext" : "this.applicationContextSingleton=Collections.singletonList(applicationContext)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 89
      },
      "nodeContext" : "this.applicationContextSingleton=Collections.singletonList(applicationContext);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2099,
        "startLineNumber" : 41,
        "startColumnNumber" : 116,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.requestContext=requestContext;\n  this.applicationContext=applicationContext;\n  this.singletonContext=singletonContext;\n  this.applicationContextSingleton=Collections.singletonList(applicationContext);\n  this.singletonContextSingleton=Collections.singletonList(singletonContext);\n  List<InjectableContext> requestContexts=contexts.get(RequestScoped.class);\n  this.requestContextSingleton=requestContexts != null ? requestContexts : Collections.singletonList(requestContext);\n  if (!contexts.isEmpty()) {\n    int mapSize=contexts.size();\n    @SuppressWarnings(\"unchecked\") Class<? extends Annotation>[] keys=new Class[mapSize];\n    @SuppressWarnings(\"unchecked\") List<InjectableContext>[] values=new List[mapSize];\n    int index=0;\n    for (    Map.Entry<Class<? extends Annotation>,List<InjectableContext>> entry : contexts.entrySet()) {\n      keys[index]=entry.getKey();\n      values[index]=entry.getValue();\n      index++;\n    }\n    this.unoptimizedContexts=new ClassValue<>(){\n      @Override protected List<InjectableContext> computeValue(      Class<?> type){\n        for (int i=0; i < mapSize; i++) {\n          if (keys[i].equals(type)) {\n            return values[i];\n          }\n        }\n        return Collections.emptyList();\n      }\n    }\n;\n    Set<Class<? extends Annotation>> all=new HashSet<>(contexts.keySet());\n    all.add(ApplicationScoped.class);\n    all.add(Singleton.class);\n    all.add(RequestScoped.class);\n    this.scopes=Set.copyOf(all);\n  }\n else {\n    this.unoptimizedContexts=null;\n    this.scopes=Set.of(ApplicationScoped.class,Singleton.class,RequestScoped.class);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 292,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2293,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "Contexts(ManagedContext requestContext,InjectableContext applicationContext,InjectableContext singletonContext,Map<Class<? extends Annotation>,List<InjectableContext>> contexts){\n  this.requestContext=requestContext;\n  this.applicationContext=applicationContext;\n  this.singletonContext=singletonContext;\n  this.applicationContextSingleton=Collections.singletonList(applicationContext);\n  this.singletonContextSingleton=Collections.singletonList(singletonContext);\n  List<InjectableContext> requestContexts=contexts.get(RequestScoped.class);\n  this.requestContextSingleton=requestContexts != null ? requestContexts : Collections.singletonList(requestContext);\n  if (!contexts.isEmpty()) {\n    int mapSize=contexts.size();\n    @SuppressWarnings(\"unchecked\") Class<? extends Annotation>[] keys=new Class[mapSize];\n    @SuppressWarnings(\"unchecked\") List<InjectableContext>[] values=new List[mapSize];\n    int index=0;\n    for (    Map.Entry<Class<? extends Annotation>,List<InjectableContext>> entry : contexts.entrySet()) {\n      keys[index]=entry.getKey();\n      values[index]=entry.getValue();\n      index++;\n    }\n    this.unoptimizedContexts=new ClassValue<>(){\n      @Override protected List<InjectableContext> computeValue(      Class<?> type){\n        for (int i=0; i < mapSize; i++) {\n          if (keys[i].equals(type)) {\n            return values[i];\n          }\n        }\n        return Collections.emptyList();\n      }\n    }\n;\n    Set<Class<? extends Annotation>> all=new HashSet<>(contexts.keySet());\n    all.add(ApplicationScoped.class);\n    all.add(Singleton.class);\n    all.add(RequestScoped.class);\n    this.scopes=Set.copyOf(all);\n  }\n else {\n    this.unoptimizedContexts=null;\n    this.scopes=Set.of(ApplicationScoped.class,Singleton.class,RequestScoped.class);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 322,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 89
      },
      "nodeContext" : "this.applicationContextSingleton=Collections.singletonList(applicationContext);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Collections"
  }, {
    "nodeContext" : "Collections",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 47,
      "startColumnNumber" : 41,
      "endLineNumber" : 47,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 47,
        "startColumnNumber" : 41,
        "endLineNumber" : 47,
        "endColumnNumber" : 84
      },
      "nodeContext" : "Collections.singletonList(singletonContext)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 84
      },
      "nodeContext" : "this.singletonContextSingleton=Collections.singletonList(singletonContext)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 85
      },
      "nodeContext" : "this.singletonContextSingleton=Collections.singletonList(singletonContext);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2099,
        "startLineNumber" : 41,
        "startColumnNumber" : 116,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.requestContext=requestContext;\n  this.applicationContext=applicationContext;\n  this.singletonContext=singletonContext;\n  this.applicationContextSingleton=Collections.singletonList(applicationContext);\n  this.singletonContextSingleton=Collections.singletonList(singletonContext);\n  List<InjectableContext> requestContexts=contexts.get(RequestScoped.class);\n  this.requestContextSingleton=requestContexts != null ? requestContexts : Collections.singletonList(requestContext);\n  if (!contexts.isEmpty()) {\n    int mapSize=contexts.size();\n    @SuppressWarnings(\"unchecked\") Class<? extends Annotation>[] keys=new Class[mapSize];\n    @SuppressWarnings(\"unchecked\") List<InjectableContext>[] values=new List[mapSize];\n    int index=0;\n    for (    Map.Entry<Class<? extends Annotation>,List<InjectableContext>> entry : contexts.entrySet()) {\n      keys[index]=entry.getKey();\n      values[index]=entry.getValue();\n      index++;\n    }\n    this.unoptimizedContexts=new ClassValue<>(){\n      @Override protected List<InjectableContext> computeValue(      Class<?> type){\n        for (int i=0; i < mapSize; i++) {\n          if (keys[i].equals(type)) {\n            return values[i];\n          }\n        }\n        return Collections.emptyList();\n      }\n    }\n;\n    Set<Class<? extends Annotation>> all=new HashSet<>(contexts.keySet());\n    all.add(ApplicationScoped.class);\n    all.add(Singleton.class);\n    all.add(RequestScoped.class);\n    this.scopes=Set.copyOf(all);\n  }\n else {\n    this.unoptimizedContexts=null;\n    this.scopes=Set.of(ApplicationScoped.class,Singleton.class,RequestScoped.class);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 292,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2293,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "Contexts(ManagedContext requestContext,InjectableContext applicationContext,InjectableContext singletonContext,Map<Class<? extends Annotation>,List<InjectableContext>> contexts){\n  this.requestContext=requestContext;\n  this.applicationContext=applicationContext;\n  this.singletonContext=singletonContext;\n  this.applicationContextSingleton=Collections.singletonList(applicationContext);\n  this.singletonContextSingleton=Collections.singletonList(singletonContext);\n  List<InjectableContext> requestContexts=contexts.get(RequestScoped.class);\n  this.requestContextSingleton=requestContexts != null ? requestContexts : Collections.singletonList(requestContext);\n  if (!contexts.isEmpty()) {\n    int mapSize=contexts.size();\n    @SuppressWarnings(\"unchecked\") Class<? extends Annotation>[] keys=new Class[mapSize];\n    @SuppressWarnings(\"unchecked\") List<InjectableContext>[] values=new List[mapSize];\n    int index=0;\n    for (    Map.Entry<Class<? extends Annotation>,List<InjectableContext>> entry : contexts.entrySet()) {\n      keys[index]=entry.getKey();\n      values[index]=entry.getValue();\n      index++;\n    }\n    this.unoptimizedContexts=new ClassValue<>(){\n      @Override protected List<InjectableContext> computeValue(      Class<?> type){\n        for (int i=0; i < mapSize; i++) {\n          if (keys[i].equals(type)) {\n            return values[i];\n          }\n        }\n        return Collections.emptyList();\n      }\n    }\n;\n    Set<Class<? extends Annotation>> all=new HashSet<>(contexts.keySet());\n    all.add(ApplicationScoped.class);\n    all.add(Singleton.class);\n    all.add(RequestScoped.class);\n    this.scopes=Set.copyOf(all);\n  }\n else {\n    this.unoptimizedContexts=null;\n    this.scopes=Set.of(ApplicationScoped.class,Singleton.class,RequestScoped.class);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 322,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 47,
        "startColumnNumber" : 8,
        "endLineNumber" : 47,
        "endColumnNumber" : 85
      },
      "nodeContext" : "this.singletonContextSingleton=Collections.singletonList(singletonContext);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Collections"
  }, {
    "nodeContext" : "Collections",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 49,
      "startColumnNumber" : 83,
      "endLineNumber" : 49,
      "endColumnNumber" : 94
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,elseExpression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 49,
        "startColumnNumber" : 83,
        "endLineNumber" : 49,
        "endColumnNumber" : 124
      },
      "nodeContext" : "Collections.singletonList(requestContext)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 49,
        "startColumnNumber" : 39,
        "endLineNumber" : 49,
        "endColumnNumber" : 124
      },
      "nodeContext" : "requestContexts != null ? requestContexts : Collections.singletonList(requestContext)",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 124
      },
      "nodeContext" : "this.requestContextSingleton=requestContexts != null ? requestContexts : Collections.singletonList(requestContext)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 125
      },
      "nodeContext" : "this.requestContextSingleton=requestContexts != null ? requestContexts : Collections.singletonList(requestContext);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2099,
        "startLineNumber" : 41,
        "startColumnNumber" : 116,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  this.requestContext=requestContext;\n  this.applicationContext=applicationContext;\n  this.singletonContext=singletonContext;\n  this.applicationContextSingleton=Collections.singletonList(applicationContext);\n  this.singletonContextSingleton=Collections.singletonList(singletonContext);\n  List<InjectableContext> requestContexts=contexts.get(RequestScoped.class);\n  this.requestContextSingleton=requestContexts != null ? requestContexts : Collections.singletonList(requestContext);\n  if (!contexts.isEmpty()) {\n    int mapSize=contexts.size();\n    @SuppressWarnings(\"unchecked\") Class<? extends Annotation>[] keys=new Class[mapSize];\n    @SuppressWarnings(\"unchecked\") List<InjectableContext>[] values=new List[mapSize];\n    int index=0;\n    for (    Map.Entry<Class<? extends Annotation>,List<InjectableContext>> entry : contexts.entrySet()) {\n      keys[index]=entry.getKey();\n      values[index]=entry.getValue();\n      index++;\n    }\n    this.unoptimizedContexts=new ClassValue<>(){\n      @Override protected List<InjectableContext> computeValue(      Class<?> type){\n        for (int i=0; i < mapSize; i++) {\n          if (keys[i].equals(type)) {\n            return values[i];\n          }\n        }\n        return Collections.emptyList();\n      }\n    }\n;\n    Set<Class<? extends Annotation>> all=new HashSet<>(contexts.keySet());\n    all.add(ApplicationScoped.class);\n    all.add(Singleton.class);\n    all.add(RequestScoped.class);\n    this.scopes=Set.copyOf(all);\n  }\n else {\n    this.unoptimizedContexts=null;\n    this.scopes=Set.of(ApplicationScoped.class,Singleton.class,RequestScoped.class);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 292,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2293,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "Contexts(ManagedContext requestContext,InjectableContext applicationContext,InjectableContext singletonContext,Map<Class<? extends Annotation>,List<InjectableContext>> contexts){\n  this.requestContext=requestContext;\n  this.applicationContext=applicationContext;\n  this.singletonContext=singletonContext;\n  this.applicationContextSingleton=Collections.singletonList(applicationContext);\n  this.singletonContextSingleton=Collections.singletonList(singletonContext);\n  List<InjectableContext> requestContexts=contexts.get(RequestScoped.class);\n  this.requestContextSingleton=requestContexts != null ? requestContexts : Collections.singletonList(requestContext);\n  if (!contexts.isEmpty()) {\n    int mapSize=contexts.size();\n    @SuppressWarnings(\"unchecked\") Class<? extends Annotation>[] keys=new Class[mapSize];\n    @SuppressWarnings(\"unchecked\") List<InjectableContext>[] values=new List[mapSize];\n    int index=0;\n    for (    Map.Entry<Class<? extends Annotation>,List<InjectableContext>> entry : contexts.entrySet()) {\n      keys[index]=entry.getKey();\n      values[index]=entry.getValue();\n      index++;\n    }\n    this.unoptimizedContexts=new ClassValue<>(){\n      @Override protected List<InjectableContext> computeValue(      Class<?> type){\n        for (int i=0; i < mapSize; i++) {\n          if (keys[i].equals(type)) {\n            return values[i];\n          }\n        }\n        return Collections.emptyList();\n      }\n    }\n;\n    Set<Class<? extends Annotation>> all=new HashSet<>(contexts.keySet());\n    all.add(ApplicationScoped.class);\n    all.add(Singleton.class);\n    all.add(RequestScoped.class);\n    this.scopes=Set.copyOf(all);\n  }\n else {\n    this.unoptimizedContexts=null;\n    this.scopes=Set.of(ApplicationScoped.class,Singleton.class,RequestScoped.class);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 322,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 49,
        "endColumnNumber" : 125
      },
      "nodeContext" : "this.requestContextSingleton=requestContexts != null ? requestContexts : Collections.singletonList(requestContext);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.Collections"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 46,
    "startColumnNumber" : 43,
    "endLineNumber" : 46,
    "endColumnNumber" : 54
  }, {
    "charLength" : 11,
    "startLineNumber" : 47,
    "startColumnNumber" : 41,
    "endLineNumber" : 47,
    "endColumnNumber" : 52
  }, {
    "charLength" : 11,
    "startLineNumber" : 49,
    "startColumnNumber" : 83,
    "endLineNumber" : 49,
    "endColumnNumber" : 94
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  } ]
}