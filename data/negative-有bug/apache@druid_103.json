{
  "id" : 103,
  "expression" : "integer",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/server/src/main/java/org/apache/druid/client/selector/CustomTierSelectorStrategy.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "integer",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 46,
      "startColumnNumber" : 17,
      "endLineNumber" : 46,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 46,
        "startColumnNumber" : 6,
        "endLineNumber" : 46,
        "endColumnNumber" : 30
      },
      "nodeContext" : "lookup.put(integer,pos)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 46,
        "startColumnNumber" : 6,
        "endLineNumber" : 46,
        "endColumnNumber" : 31
      },
      "nodeContext" : "lookup.put(integer,pos);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 45,
        "startColumnNumber" : 51,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  lookup.put(integer,pos);\n  pos++;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 48,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (Integer integer : config.getPriorities()) {\n  lookup.put(integer,pos);\n  pos++;\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 849,
        "startLineNumber" : 40,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  super(serverSelectorStrategy);\n  final Map<Integer,Integer> lookup=new HashMap<>();\n  int pos=0;\n  for (  Integer integer : config.getPriorities()) {\n    lookup.put(integer,pos);\n    pos++;\n  }\n  this.comparator=(p1,p2) -> {\n    if (lookup.containsKey(p1) && lookup.containsKey(p2)) {\n      return Integer.compare(lookup.get(p1),lookup.get(p2));\n    }\n else     if (lookup.containsKey(p1)) {\n      return -1;\n    }\n else     if (lookup.containsKey(p2)) {\n      return 1;\n    }\n else {\n      return Integer.compare(p2,p1);\n    }\n  }\n;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1034,
        "startLineNumber" : 35,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@JsonCreator public CustomTierSelectorStrategy(@JacksonInject ServerSelectorStrategy serverSelectorStrategy,@JacksonInject CustomTierSelectorStrategyConfig config){\n  super(serverSelectorStrategy);\n  final Map<Integer,Integer> lookup=new HashMap<>();\n  int pos=0;\n  for (  Integer integer : config.getPriorities()) {\n    lookup.put(integer,pos);\n    pos++;\n  }\n  this.comparator=(p1,p2) -> {\n    if (lookup.containsKey(p1) && lookup.containsKey(p2)) {\n      return Integer.compare(lookup.get(p1),lookup.get(p2));\n    }\n else     if (lookup.containsKey(p1)) {\n      return -1;\n    }\n else     if (lookup.containsKey(p2)) {\n      return 1;\n    }\n else {\n      return Integer.compare(p2,p1);\n    }\n  }\n;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 116,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 46,
        "startColumnNumber" : 6,
        "endLineNumber" : 46,
        "endColumnNumber" : 31
      },
      "nodeContext" : "lookup.put(integer,pos);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.Integer"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 46,
    "startColumnNumber" : 17,
    "endLineNumber" : 46,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ ]
}