{
  "id" : 176,
  "expression" : "0",
  "projectName" : "iBotPeaches@Apktool",
  "commitID" : "719a25afd69d2211259a65d4fce197340cbae819",
  "filePath" : "/src/brut/androlib/src/SmaliBuilder.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 74,
      "startColumnNumber" : 65,
      "endLineNumber" : 74,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 74,
        "startColumnNumber" : 54,
        "endLineNumber" : 74,
        "endColumnNumber" : 67
      },
      "nodeContext" : "new String[0]",
      "nodeType" : "ArrayCreation",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 74,
        "startColumnNumber" : 40,
        "endLineNumber" : 74,
        "endColumnNumber" : 68
      },
      "nodeContext" : "lines.toArray(new String[0])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 74,
        "startColumnNumber" : 27,
        "endLineNumber" : 74,
        "endColumnNumber" : 68
      },
      "nodeContext" : "linesArray=lines.toArray(new String[0])",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 74,
        "startColumnNumber" : 12,
        "endLineNumber" : 74,
        "endColumnNumber" : 69
      },
      "nodeContext" : "final String[] linesArray=lines.toArray(new String[0]);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 213,
        "startLineNumber" : 73,
        "startColumnNumber" : 21,
        "endLineNumber" : 78,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final String[] linesArray=lines.toArray(new String[0]);\n  for (int i=2; i < linesArray.length - 2; i++) {\n    out.append(linesArray[i]).append('\\n');\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 966,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!mDebug) {\n  final String[] linesArray=lines.toArray(new String[0]);\n  for (int i=2; i < linesArray.length - 2; i++) {\n    out.append(linesArray[i]).append('\\n');\n  }\n}\n else {\n  lines.remove(lines.size() - 1);\n  lines.remove(lines.size() - 1);\n  ListIterator<String> it=lines.listIterator(2);\n  out.append(\".source \\\"\").append(inFile.getName()).append(\"\\\"\\n\");\n  while (it.hasNext()) {\n    String line=it.next().trim();\n    if (line.isEmpty() || line.charAt(0) == '#' || line.startsWith(\".source\")) {\n      continue;\n    }\n    if (line.startsWith(\".method \")) {\n      it.previous();\n      DebugInjector.inject(it,out);\n      continue;\n    }\n    out.append(line).append('\\n');\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1547,
        "startLineNumber" : 58,
        "startColumnNumber" : 24,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  File inFile=new File(mSmaliDir,fileName);\n  InputStream inStream=new FileInputStream(inFile);\n  if (fileName.endsWith(\".smali\")) {\n    mDexBuilder.addSmaliFile(inFile);\n    return;\n  }\n  if (!fileName.endsWith(\".java\")) {\n    throw new AndrolibException(\"Unknown file type: \" + inFile);\n  }\n  StringBuilder out=new StringBuilder();\n  List<String> lines=IOUtils.readLines(inStream);\n  if (!mDebug) {\n    final String[] linesArray=lines.toArray(new String[0]);\n    for (int i=2; i < linesArray.length - 2; i++) {\n      out.append(linesArray[i]).append('\\n');\n    }\n  }\n else {\n    lines.remove(lines.size() - 1);\n    lines.remove(lines.size() - 1);\n    ListIterator<String> it=lines.listIterator(2);\n    out.append(\".source \\\"\").append(inFile.getName()).append(\"\\\"\\n\");\n    while (it.hasNext()) {\n      String line=it.next().trim();\n      if (line.isEmpty() || line.charAt(0) == '#' || line.startsWith(\".source\")) {\n        continue;\n      }\n      if (line.startsWith(\".method \")) {\n        it.previous();\n        DebugInjector.inject(it,out);\n        continue;\n      }\n      out.append(line).append('\\n');\n    }\n  }\n  mDexBuilder.addSmaliFile(IOUtils.toInputStream(out.toString()),fileName);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 226,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1637,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void buildFile(String fileName) throws AndrolibException, IOException {\n  File inFile=new File(mSmaliDir,fileName);\n  InputStream inStream=new FileInputStream(inFile);\n  if (fileName.endsWith(\".smali\")) {\n    mDexBuilder.addSmaliFile(inFile);\n    return;\n  }\n  if (!fileName.endsWith(\".java\")) {\n    throw new AndrolibException(\"Unknown file type: \" + inFile);\n  }\n  StringBuilder out=new StringBuilder();\n  List<String> lines=IOUtils.readLines(inStream);\n  if (!mDebug) {\n    final String[] linesArray=lines.toArray(new String[0]);\n    for (int i=2; i < linesArray.length - 2; i++) {\n      out.append(linesArray[i]).append('\\n');\n    }\n  }\n else {\n    lines.remove(lines.size() - 1);\n    lines.remove(lines.size() - 1);\n    ListIterator<String> it=lines.listIterator(2);\n    out.append(\".source \\\"\").append(inFile.getName()).append(\"\\\"\\n\");\n    while (it.hasNext()) {\n      String line=it.next().trim();\n      if (line.isEmpty() || line.charAt(0) == '#' || line.startsWith(\".source\")) {\n        continue;\n      }\n      if (line.startsWith(\".method \")) {\n        it.previous();\n        DebugInjector.inject(it,out);\n        continue;\n      }\n      out.append(line).append('\\n');\n    }\n  }\n  mDexBuilder.addSmaliFile(IOUtils.toInputStream(out.toString()),fileName);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 238,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 74,
        "startColumnNumber" : 12,
        "endLineNumber" : 74,
        "endColumnNumber" : 69
      },
      "nodeContext" : "final String[] linesArray=lines.toArray(new String[0]);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 86,
      "startColumnNumber" : 50,
      "endLineNumber" : 86,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 86,
        "startColumnNumber" : 38,
        "endLineNumber" : 86,
        "endColumnNumber" : 52
      },
      "nodeContext" : "line.charAt(0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 86,
        "startColumnNumber" : 38,
        "endLineNumber" : 86,
        "endColumnNumber" : 59
      },
      "nodeContext" : "line.charAt(0) == '#'",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 86,
        "startColumnNumber" : 20,
        "endLineNumber" : 86,
        "endColumnNumber" : 59
      },
      "nodeContext" : "line.isEmpty() || line.charAt(0) == '#'",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 86,
        "startColumnNumber" : 20,
        "endLineNumber" : 87,
        "endColumnNumber" : 50
      },
      "nodeContext" : "line.isEmpty() || line.charAt(0) == '#' || line.startsWith(\".source\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 148,
        "startLineNumber" : 86,
        "startColumnNumber" : 16,
        "endLineNumber" : 89,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (line.isEmpty() || line.charAt(0) == '#' || line.startsWith(\".source\")) {\n  continue;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 461,
        "startLineNumber" : 84,
        "startColumnNumber" : 33,
        "endLineNumber" : 97,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String line=it.next().trim();\n  if (line.isEmpty() || line.charAt(0) == '#' || line.startsWith(\".source\")) {\n    continue;\n  }\n  if (line.startsWith(\".method \")) {\n    it.previous();\n    DebugInjector.inject(it,out);\n    continue;\n  }\n  out.append(line).append('\\n');\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 54,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 482,
        "startLineNumber" : 84,
        "startColumnNumber" : 12,
        "endLineNumber" : 97,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (it.hasNext()) {\n  String line=it.next().trim();\n  if (line.isEmpty() || line.charAt(0) == '#' || line.startsWith(\".source\")) {\n    continue;\n  }\n  if (line.startsWith(\".method \")) {\n    it.previous();\n    DebugInjector.inject(it,out);\n    continue;\n  }\n  out.append(line).append('\\n');\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 58,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 734,
        "startLineNumber" : 78,
        "startColumnNumber" : 15,
        "endLineNumber" : 98,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  lines.remove(lines.size() - 1);\n  lines.remove(lines.size() - 1);\n  ListIterator<String> it=lines.listIterator(2);\n  out.append(\".source \\\"\").append(inFile.getName()).append(\"\\\"\\n\");\n  while (it.hasNext()) {\n    String line=it.next().trim();\n    if (line.isEmpty() || line.charAt(0) == '#' || line.startsWith(\".source\")) {\n      continue;\n    }\n    if (line.startsWith(\".method \")) {\n      it.previous();\n      DebugInjector.inject(it,out);\n      continue;\n    }\n    out.append(line).append('\\n');\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 966,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 98,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!mDebug) {\n  final String[] linesArray=lines.toArray(new String[0]);\n  for (int i=2; i < linesArray.length - 2; i++) {\n    out.append(linesArray[i]).append('\\n');\n  }\n}\n else {\n  lines.remove(lines.size() - 1);\n  lines.remove(lines.size() - 1);\n  ListIterator<String> it=lines.listIterator(2);\n  out.append(\".source \\\"\").append(inFile.getName()).append(\"\\\"\\n\");\n  while (it.hasNext()) {\n    String line=it.next().trim();\n    if (line.isEmpty() || line.charAt(0) == '#' || line.startsWith(\".source\")) {\n      continue;\n    }\n    if (line.startsWith(\".method \")) {\n      it.previous();\n      DebugInjector.inject(it,out);\n      continue;\n    }\n    out.append(line).append('\\n');\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 149,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1547,
        "startLineNumber" : 58,
        "startColumnNumber" : 24,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  File inFile=new File(mSmaliDir,fileName);\n  InputStream inStream=new FileInputStream(inFile);\n  if (fileName.endsWith(\".smali\")) {\n    mDexBuilder.addSmaliFile(inFile);\n    return;\n  }\n  if (!fileName.endsWith(\".java\")) {\n    throw new AndrolibException(\"Unknown file type: \" + inFile);\n  }\n  StringBuilder out=new StringBuilder();\n  List<String> lines=IOUtils.readLines(inStream);\n  if (!mDebug) {\n    final String[] linesArray=lines.toArray(new String[0]);\n    for (int i=2; i < linesArray.length - 2; i++) {\n      out.append(linesArray[i]).append('\\n');\n    }\n  }\n else {\n    lines.remove(lines.size() - 1);\n    lines.remove(lines.size() - 1);\n    ListIterator<String> it=lines.listIterator(2);\n    out.append(\".source \\\"\").append(inFile.getName()).append(\"\\\"\\n\");\n    while (it.hasNext()) {\n      String line=it.next().trim();\n      if (line.isEmpty() || line.charAt(0) == '#' || line.startsWith(\".source\")) {\n        continue;\n      }\n      if (line.startsWith(\".method \")) {\n        it.previous();\n        DebugInjector.inject(it,out);\n        continue;\n      }\n      out.append(line).append('\\n');\n    }\n  }\n  mDexBuilder.addSmaliFile(IOUtils.toInputStream(out.toString()),fileName);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 226,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1637,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void buildFile(String fileName) throws AndrolibException, IOException {\n  File inFile=new File(mSmaliDir,fileName);\n  InputStream inStream=new FileInputStream(inFile);\n  if (fileName.endsWith(\".smali\")) {\n    mDexBuilder.addSmaliFile(inFile);\n    return;\n  }\n  if (!fileName.endsWith(\".java\")) {\n    throw new AndrolibException(\"Unknown file type: \" + inFile);\n  }\n  StringBuilder out=new StringBuilder();\n  List<String> lines=IOUtils.readLines(inStream);\n  if (!mDebug) {\n    final String[] linesArray=lines.toArray(new String[0]);\n    for (int i=2; i < linesArray.length - 2; i++) {\n      out.append(linesArray[i]).append('\\n');\n    }\n  }\n else {\n    lines.remove(lines.size() - 1);\n    lines.remove(lines.size() - 1);\n    ListIterator<String> it=lines.listIterator(2);\n    out.append(\".source \\\"\").append(inFile.getName()).append(\"\\\"\\n\");\n    while (it.hasNext()) {\n      String line=it.next().trim();\n      if (line.isEmpty() || line.charAt(0) == '#' || line.startsWith(\".source\")) {\n        continue;\n      }\n      if (line.startsWith(\".method \")) {\n        it.previous();\n        DebugInjector.inject(it,out);\n        continue;\n      }\n      out.append(line).append('\\n');\n    }\n  }\n  mDexBuilder.addSmaliFile(IOUtils.toInputStream(out.toString()),fileName);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 238,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 86,
        "startColumnNumber" : 20,
        "endLineNumber" : 86,
        "endColumnNumber" : 59
      },
      "nodeContext" : "line.isEmpty() || line.charAt(0) == '#'",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 74,
    "startColumnNumber" : 65,
    "endLineNumber" : 74,
    "endColumnNumber" : 66
  }, {
    "charLength" : 1,
    "startLineNumber" : 86,
    "startColumnNumber" : 50,
    "endLineNumber" : 86,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 8
  } ]
}