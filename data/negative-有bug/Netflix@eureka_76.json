{
  "id" : 76,
  "expression" : "updateCount.get()",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-bridge/src/main/java/com/netflix/eureka2/server/channel/BridgeChannel.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "updateCount.get()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 191,
      "startColumnNumber" : 55,
      "endLineNumber" : 191,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 244,
        "startLineNumber" : 189,
        "startColumnNumber" : 8,
        "endLineNumber" : 191,
        "endColumnNumber" : 96
      },
      "nodeContext" : "logger.info(\"Finished new round of replication from v1 to v2.\" + \" Total: {}, registers: {}, updates: {}, unregisters: {}\",totalCount.get(),registerCount.get(),updateCount.get(),unregisterCount.get())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 245,
        "startLineNumber" : 189,
        "startColumnNumber" : 8,
        "endLineNumber" : 191,
        "endColumnNumber" : 97
      },
      "nodeContext" : "logger.info(\"Finished new round of replication from v1 to v2.\" + \" Total: {}, registers: {}, updates: {}, unregisters: {}\",totalCount.get(),registerCount.get(),updateCount.get(),unregisterCount.get());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2861,
        "startLineNumber" : 132,
        "startColumnNumber" : 73,
        "endLineNumber" : 196,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final AtomicLong totalCount=new AtomicLong(0);\n  final AtomicLong updateCount=new AtomicLong(0);\n  final AtomicLong registerCount=new AtomicLong(0);\n  final AtomicLong unregisterCount=new AtomicLong(0);\n  final Map<String,InstanceInfo> newSnapshot=new HashMap<>();\n  getV1Stream().lift(new OperatorInstanceInfoFromV1(converter)).subscribe(new Subscriber<InstanceInfo>(){\n    @Override public void onCompleted(){\n    }\n    @Override public void onError(    Throwable e){\n      logger.warn(\"error processing v1 stream\",e);\n      e.printStackTrace();\n    }\n    @Override public void onNext(    InstanceInfo instanceInfo){\n      totalCount.incrementAndGet();\n      newSnapshot.put(instanceInfo.getId(),instanceInfo);\n      if (currentSnapshot.containsKey(instanceInfo.getId())) {\n        InstanceInfo older=currentSnapshot.get(instanceInfo.getId());\n        if (!older.equals(instanceInfo)) {\n          registry.register(instanceInfo,selfSource);\n          updateCount.incrementAndGet();\n        }\n      }\n else {\n        registry.register(instanceInfo,selfSource);\n        registerCount.incrementAndGet();\n      }\n    }\n  }\n);\n  currentSnapshot.keySet().removeAll(newSnapshot.keySet());\n  Observable.from(currentSnapshot.values()).subscribe(new Subscriber<InstanceInfo>(){\n    @Override public void onCompleted(){\n    }\n    @Override public void onError(    Throwable e){\n      logger.warn(\"error unregistering from v1 stream\",e);\n    }\n    @Override public void onNext(    InstanceInfo instanceInfo){\n      registry.unregister(instanceInfo,selfSource);\n      unregisterCount.incrementAndGet();\n    }\n  }\n);\n  logger.info(\"Finished new round of replication from v1 to v2.\" + \" Total: {}, registers: {}, updates: {}, unregisters: {}\",totalCount.get(),registerCount.get(),updateCount.get(),unregisterCount.get());\n  metrics.setTotalCount(totalCount.get());\n  metrics.setRegisterCount(registerCount.get());\n  metrics.setUpdateCount(updateCount.get());\n  metrics.setUnregisterCount(unregisterCount.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 289,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3152,
        "startLineNumber" : 127,
        "startColumnNumber" : 4,
        "endLineNumber" : 196,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Since the bridge registry take no other forms of input other than those from this bridge channel, this snapshot view of the current registry should be static w.r.t. to the channel operation.\n */\nprotected void diff(final Map<String,InstanceInfo> currentSnapshot){\n  final AtomicLong totalCount=new AtomicLong(0);\n  final AtomicLong updateCount=new AtomicLong(0);\n  final AtomicLong registerCount=new AtomicLong(0);\n  final AtomicLong unregisterCount=new AtomicLong(0);\n  final Map<String,InstanceInfo> newSnapshot=new HashMap<>();\n  getV1Stream().lift(new OperatorInstanceInfoFromV1(converter)).subscribe(new Subscriber<InstanceInfo>(){\n    @Override public void onCompleted(){\n    }\n    @Override public void onError(    Throwable e){\n      logger.warn(\"error processing v1 stream\",e);\n      e.printStackTrace();\n    }\n    @Override public void onNext(    InstanceInfo instanceInfo){\n      totalCount.incrementAndGet();\n      newSnapshot.put(instanceInfo.getId(),instanceInfo);\n      if (currentSnapshot.containsKey(instanceInfo.getId())) {\n        InstanceInfo older=currentSnapshot.get(instanceInfo.getId());\n        if (!older.equals(instanceInfo)) {\n          registry.register(instanceInfo,selfSource);\n          updateCount.incrementAndGet();\n        }\n      }\n else {\n        registry.register(instanceInfo,selfSource);\n        registerCount.incrementAndGet();\n      }\n    }\n  }\n);\n  currentSnapshot.keySet().removeAll(newSnapshot.keySet());\n  Observable.from(currentSnapshot.values()).subscribe(new Subscriber<InstanceInfo>(){\n    @Override public void onCompleted(){\n    }\n    @Override public void onError(    Throwable e){\n      logger.warn(\"error unregistering from v1 stream\",e);\n    }\n    @Override public void onNext(    InstanceInfo instanceInfo){\n      registry.unregister(instanceInfo,selfSource);\n      unregisterCount.incrementAndGet();\n    }\n  }\n);\n  logger.info(\"Finished new round of replication from v1 to v2.\" + \" Total: {}, registers: {}, updates: {}, unregisters: {}\",totalCount.get(),registerCount.get(),updateCount.get(),unregisterCount.get());\n  metrics.setTotalCount(totalCount.get());\n  metrics.setRegisterCount(registerCount.get());\n  metrics.setUpdateCount(updateCount.get());\n  metrics.setUnregisterCount(unregisterCount.get());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 304,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 244,
        "startLineNumber" : 189,
        "startColumnNumber" : 8,
        "endLineNumber" : 191,
        "endColumnNumber" : 96
      },
      "nodeContext" : "logger.info(\"Finished new round of replication from v1 to v2.\" + \" Total: {}, registers: {}, updates: {}, unregisters: {}\",totalCount.get(),registerCount.get(),updateCount.get(),unregisterCount.get())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "long"
  }, {
    "nodeContext" : "updateCount.get()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 194,
      "startColumnNumber" : 31,
      "endLineNumber" : 194,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 194,
        "startColumnNumber" : 8,
        "endLineNumber" : 194,
        "endColumnNumber" : 49
      },
      "nodeContext" : "metrics.setUpdateCount(updateCount.get())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 194,
        "startColumnNumber" : 8,
        "endLineNumber" : 194,
        "endColumnNumber" : 50
      },
      "nodeContext" : "metrics.setUpdateCount(updateCount.get());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2861,
        "startLineNumber" : 132,
        "startColumnNumber" : 73,
        "endLineNumber" : 196,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final AtomicLong totalCount=new AtomicLong(0);\n  final AtomicLong updateCount=new AtomicLong(0);\n  final AtomicLong registerCount=new AtomicLong(0);\n  final AtomicLong unregisterCount=new AtomicLong(0);\n  final Map<String,InstanceInfo> newSnapshot=new HashMap<>();\n  getV1Stream().lift(new OperatorInstanceInfoFromV1(converter)).subscribe(new Subscriber<InstanceInfo>(){\n    @Override public void onCompleted(){\n    }\n    @Override public void onError(    Throwable e){\n      logger.warn(\"error processing v1 stream\",e);\n      e.printStackTrace();\n    }\n    @Override public void onNext(    InstanceInfo instanceInfo){\n      totalCount.incrementAndGet();\n      newSnapshot.put(instanceInfo.getId(),instanceInfo);\n      if (currentSnapshot.containsKey(instanceInfo.getId())) {\n        InstanceInfo older=currentSnapshot.get(instanceInfo.getId());\n        if (!older.equals(instanceInfo)) {\n          registry.register(instanceInfo,selfSource);\n          updateCount.incrementAndGet();\n        }\n      }\n else {\n        registry.register(instanceInfo,selfSource);\n        registerCount.incrementAndGet();\n      }\n    }\n  }\n);\n  currentSnapshot.keySet().removeAll(newSnapshot.keySet());\n  Observable.from(currentSnapshot.values()).subscribe(new Subscriber<InstanceInfo>(){\n    @Override public void onCompleted(){\n    }\n    @Override public void onError(    Throwable e){\n      logger.warn(\"error unregistering from v1 stream\",e);\n    }\n    @Override public void onNext(    InstanceInfo instanceInfo){\n      registry.unregister(instanceInfo,selfSource);\n      unregisterCount.incrementAndGet();\n    }\n  }\n);\n  logger.info(\"Finished new round of replication from v1 to v2.\" + \" Total: {}, registers: {}, updates: {}, unregisters: {}\",totalCount.get(),registerCount.get(),updateCount.get(),unregisterCount.get());\n  metrics.setTotalCount(totalCount.get());\n  metrics.setRegisterCount(registerCount.get());\n  metrics.setUpdateCount(updateCount.get());\n  metrics.setUnregisterCount(unregisterCount.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 289,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3152,
        "startLineNumber" : 127,
        "startColumnNumber" : 4,
        "endLineNumber" : 196,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Since the bridge registry take no other forms of input other than those from this bridge channel, this snapshot view of the current registry should be static w.r.t. to the channel operation.\n */\nprotected void diff(final Map<String,InstanceInfo> currentSnapshot){\n  final AtomicLong totalCount=new AtomicLong(0);\n  final AtomicLong updateCount=new AtomicLong(0);\n  final AtomicLong registerCount=new AtomicLong(0);\n  final AtomicLong unregisterCount=new AtomicLong(0);\n  final Map<String,InstanceInfo> newSnapshot=new HashMap<>();\n  getV1Stream().lift(new OperatorInstanceInfoFromV1(converter)).subscribe(new Subscriber<InstanceInfo>(){\n    @Override public void onCompleted(){\n    }\n    @Override public void onError(    Throwable e){\n      logger.warn(\"error processing v1 stream\",e);\n      e.printStackTrace();\n    }\n    @Override public void onNext(    InstanceInfo instanceInfo){\n      totalCount.incrementAndGet();\n      newSnapshot.put(instanceInfo.getId(),instanceInfo);\n      if (currentSnapshot.containsKey(instanceInfo.getId())) {\n        InstanceInfo older=currentSnapshot.get(instanceInfo.getId());\n        if (!older.equals(instanceInfo)) {\n          registry.register(instanceInfo,selfSource);\n          updateCount.incrementAndGet();\n        }\n      }\n else {\n        registry.register(instanceInfo,selfSource);\n        registerCount.incrementAndGet();\n      }\n    }\n  }\n);\n  currentSnapshot.keySet().removeAll(newSnapshot.keySet());\n  Observable.from(currentSnapshot.values()).subscribe(new Subscriber<InstanceInfo>(){\n    @Override public void onCompleted(){\n    }\n    @Override public void onError(    Throwable e){\n      logger.warn(\"error unregistering from v1 stream\",e);\n    }\n    @Override public void onNext(    InstanceInfo instanceInfo){\n      registry.unregister(instanceInfo,selfSource);\n      unregisterCount.incrementAndGet();\n    }\n  }\n);\n  logger.info(\"Finished new round of replication from v1 to v2.\" + \" Total: {}, registers: {}, updates: {}, unregisters: {}\",totalCount.get(),registerCount.get(),updateCount.get(),unregisterCount.get());\n  metrics.setTotalCount(totalCount.get());\n  metrics.setRegisterCount(registerCount.get());\n  metrics.setUpdateCount(updateCount.get());\n  metrics.setUnregisterCount(unregisterCount.get());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 304,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 194,
        "startColumnNumber" : 8,
        "endLineNumber" : 194,
        "endColumnNumber" : 50
      },
      "nodeContext" : "metrics.setUpdateCount(updateCount.get());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 191,
    "startColumnNumber" : 55,
    "endLineNumber" : 191,
    "endColumnNumber" : 72
  }, {
    "charLength" : 17,
    "startLineNumber" : 194,
    "startColumnNumber" : 31,
    "endLineNumber" : 194,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}