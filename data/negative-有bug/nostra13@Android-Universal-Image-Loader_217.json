{
  "id" : 217,
  "expression" : "System",
  "projectName" : "nostra13@Android-Universal-Image-Loader",
  "commitID" : "7637abf7df1394f71dbc04644be86791959d1313",
  "filePath" : "/library/src/com/nostra13/universalimageloader/cache/disc/impl/ext/DiskLruCache.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "System",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 216,
      "startColumnNumber" : 4,
      "endLineNumber" : 216,
      "endColumnNumber" : 10
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 216,
        "startColumnNumber" : 4,
        "endLineNumber" : 216,
        "endColumnNumber" : 14
      },
      "nodeContext" : "System.out",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 216,
        "startColumnNumber" : 4,
        "endLineNumber" : 221,
        "endColumnNumber" : 23
      },
      "nodeContext" : "System.out.println(\"DiskLruCache \" + directory + \" is corrupt: \"+ journalIsCorrupt.getMessage()+ \", removing\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 216,
        "startColumnNumber" : 4,
        "endLineNumber" : 221,
        "endColumnNumber" : 24
      },
      "nodeContext" : "System.out.println(\"DiskLruCache \" + directory + \" is corrupt: \"+ journalIsCorrupt.getMessage()+ \", removing\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 183,
        "startLineNumber" : 215,
        "startColumnNumber" : 42,
        "endLineNumber" : 223,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  System.out.println(\"DiskLruCache \" + directory + \" is corrupt: \"+ journalIsCorrupt.getMessage()+ \", removing\");\n  cache.delete();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 220,
        "startLineNumber" : 215,
        "startColumnNumber" : 5,
        "endLineNumber" : 223,
        "endColumnNumber" : 4
      },
      "nodeContext" : "catch (IOException journalIsCorrupt) {\n  System.out.println(\"DiskLruCache \" + directory + \" is corrupt: \"+ journalIsCorrupt.getMessage()+ \", removing\");\n  cache.delete();\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 441,
        "startLineNumber" : 209,
        "startColumnNumber" : 3,
        "endLineNumber" : 223,
        "endColumnNumber" : 4
      },
      "nodeContext" : "try {\n  cache.readJournal();\n  cache.processJournal();\n  cache.journalWriter=new BufferedWriter(new OutputStreamWriter(new FileOutputStream(cache.journalFile,true),Util.US_ASCII));\n  return cache;\n}\n catch (IOException journalIsCorrupt) {\n  System.out.println(\"DiskLruCache \" + directory + \" is corrupt: \"+ journalIsCorrupt.getMessage()+ \", removing\");\n  cache.delete();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 57,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 450,
        "startLineNumber" : 208,
        "startColumnNumber" : 34,
        "endLineNumber" : 224,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  try {\n    cache.readJournal();\n    cache.processJournal();\n    cache.journalWriter=new BufferedWriter(new OutputStreamWriter(new FileOutputStream(cache.journalFile,true),Util.US_ASCII));\n    return cache;\n  }\n catch (  IOException journalIsCorrupt) {\n    System.out.println(\"DiskLruCache \" + directory + \" is corrupt: \"+ journalIsCorrupt.getMessage()+ \", removing\");\n    cache.delete();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 58,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 482,
        "startLineNumber" : 208,
        "startColumnNumber" : 2,
        "endLineNumber" : 224,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (cache.journalFile.exists()) {\n  try {\n    cache.readJournal();\n    cache.processJournal();\n    cache.journalWriter=new BufferedWriter(new OutputStreamWriter(new FileOutputStream(cache.journalFile,true),Util.US_ASCII));\n    return cache;\n  }\n catch (  IOException journalIsCorrupt) {\n    System.out.println(\"DiskLruCache \" + directory + \" is corrupt: \"+ journalIsCorrupt.getMessage()+ \", removing\");\n    cache.delete();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 64,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1327,
        "startLineNumber" : 186,
        "startColumnNumber" : 22,
        "endLineNumber" : 231,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (maxSize <= 0) {\n    throw new IllegalArgumentException(\"maxSize <= 0\");\n  }\n  if (valueCount <= 0) {\n    throw new IllegalArgumentException(\"valueCount <= 0\");\n  }\n  File backupFile=new File(directory,JOURNAL_FILE_BACKUP);\n  if (backupFile.exists()) {\n    File journalFile=new File(directory,JOURNAL_FILE);\n    if (journalFile.exists()) {\n      backupFile.delete();\n    }\n else {\n      renameTo(backupFile,journalFile,false);\n    }\n  }\n  DiskLruCache cache=new DiskLruCache(directory,appVersion,valueCount,maxSize);\n  if (cache.journalFile.exists()) {\n    try {\n      cache.readJournal();\n      cache.processJournal();\n      cache.journalWriter=new BufferedWriter(new OutputStreamWriter(new FileOutputStream(cache.journalFile,true),Util.US_ASCII));\n      return cache;\n    }\n catch (    IOException journalIsCorrupt) {\n      System.out.println(\"DiskLruCache \" + directory + \" is corrupt: \"+ journalIsCorrupt.getMessage()+ \", removing\");\n      cache.delete();\n    }\n  }\n  directory.mkdirs();\n  cache=new DiskLruCache(directory,appVersion,valueCount,maxSize);\n  cache.rebuildJournal();\n  return cache;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 158,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1812,
        "startLineNumber" : 176,
        "startColumnNumber" : 1,
        "endLineNumber" : 231,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Opens the cache in  {@code directory}, creating a cache if none exists there.\n * @param directory a writable directory\n * @param valueCount the number of values per cache entry. Must be positive.\n * @param maxSize the maximum number of bytes this cache should use to store\n * @throws IOException if reading or writing the cache directory fails\n */\npublic static DiskLruCache open(File directory,int appVersion,int valueCount,long maxSize) throws IOException {\n  if (maxSize <= 0) {\n    throw new IllegalArgumentException(\"maxSize <= 0\");\n  }\n  if (valueCount <= 0) {\n    throw new IllegalArgumentException(\"valueCount <= 0\");\n  }\n  File backupFile=new File(directory,JOURNAL_FILE_BACKUP);\n  if (backupFile.exists()) {\n    File journalFile=new File(directory,JOURNAL_FILE);\n    if (journalFile.exists()) {\n      backupFile.delete();\n    }\n else {\n      renameTo(backupFile,journalFile,false);\n    }\n  }\n  DiskLruCache cache=new DiskLruCache(directory,appVersion,valueCount,maxSize);\n  if (cache.journalFile.exists()) {\n    try {\n      cache.readJournal();\n      cache.processJournal();\n      cache.journalWriter=new BufferedWriter(new OutputStreamWriter(new FileOutputStream(cache.journalFile,true),Util.US_ASCII));\n      return cache;\n    }\n catch (    IOException journalIsCorrupt) {\n      System.out.println(\"DiskLruCache \" + directory + \" is corrupt: \"+ journalIsCorrupt.getMessage()+ \", removing\");\n      cache.delete();\n    }\n  }\n  directory.mkdirs();\n  cache=new DiskLruCache(directory,appVersion,valueCount,maxSize);\n  cache.rebuildJournal();\n  return cache;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 180,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 216,
        "startColumnNumber" : 4,
        "endLineNumber" : 216,
        "endColumnNumber" : 14
      },
      "nodeContext" : "System.out",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.System"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 216,
    "startColumnNumber" : 4,
    "endLineNumber" : 216,
    "endColumnNumber" : 10
  } ],
  "layoutRelationDataList" : [ ]
}