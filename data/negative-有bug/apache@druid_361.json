{
  "id" : 361,
  "expression" : "signatureLong",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/processing/src/test/java/org/apache/druid/frame/key/RowKeyTest.java",
  "occurrences" : 10,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "signatureLong",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 41,
      "startColumnNumber" : 31,
      "endLineNumber" : 41,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 49
      },
      "nodeContext" : "KeyTestUtils.createKey(signatureLong,1L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 42,
        "endColumnNumber" : 5
      },
      "nodeContext" : "Assert.assertNotEquals(\"not a key\",KeyTestUtils.createKey(signatureLong,1L))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 42,
        "endColumnNumber" : 6
      },
      "nodeContext" : "Assert.assertNotEquals(\"not a key\",KeyTestUtils.createKey(signatureLong,1L));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2152,
        "startLineNumber" : 32,
        "startColumnNumber" : 2,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final RowSignature signatureLong=RowSignature.builder().add(\"1\",ColumnType.LONG).build();\n  final RowSignature signatureLongString=RowSignature.builder().add(\"1\",ColumnType.LONG).add(\"2\",ColumnType.STRING).build();\n  Assert.assertNotEquals(\"not a key\",KeyTestUtils.createKey(signatureLong,1L));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,1L));\n  Assert.assertEquals(KeyTestUtils.createKey(RowSignature.empty()),KeyTestUtils.createKey(RowSignature.empty()));\n  Assert.assertNotEquals(KeyTestUtils.createKey(RowSignature.empty()),KeyTestUtils.createKey(signatureLong,2L));\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,2L));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\"),KeyTestUtils.createKey(signatureLongString,1L,\"abc\"));\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\"),KeyTestUtils.createKey(signatureLongString,1L,\"def\"));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,1L).hashCode());\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,2L).hashCode());\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode(),KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode());\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode(),KeyTestUtils.createKey(signatureLongString,1L,\"def\").hashCode());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 218,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2200,
        "startLineNumber" : 30,
        "startColumnNumber" : 2,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testEqualsAndHashCode(){\n  final RowSignature signatureLong=RowSignature.builder().add(\"1\",ColumnType.LONG).build();\n  final RowSignature signatureLongString=RowSignature.builder().add(\"1\",ColumnType.LONG).add(\"2\",ColumnType.STRING).build();\n  Assert.assertNotEquals(\"not a key\",KeyTestUtils.createKey(signatureLong,1L));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,1L));\n  Assert.assertEquals(KeyTestUtils.createKey(RowSignature.empty()),KeyTestUtils.createKey(RowSignature.empty()));\n  Assert.assertNotEquals(KeyTestUtils.createKey(RowSignature.empty()),KeyTestUtils.createKey(signatureLong,2L));\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,2L));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\"),KeyTestUtils.createKey(signatureLongString,1L,\"abc\"));\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\"),KeyTestUtils.createKey(signatureLongString,1L,\"def\"));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,1L).hashCode());\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,2L).hashCode());\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode(),KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode());\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode(),KeyTestUtils.createKey(signatureLongString,1L,\"def\").hashCode());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 224,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 41,
        "startColumnNumber" : 8,
        "endLineNumber" : 41,
        "endColumnNumber" : 49
      },
      "nodeContext" : "KeyTestUtils.createKey(signatureLong,1L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.druid.segment.column.RowSignature"
  }, {
    "nodeContext" : "signatureLong",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 45,
      "startColumnNumber" : 31,
      "endLineNumber" : 45,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 49
      },
      "nodeContext" : "KeyTestUtils.createKey(signatureLong,1L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,1L))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 6
      },
      "nodeContext" : "Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,1L));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2152,
        "startLineNumber" : 32,
        "startColumnNumber" : 2,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final RowSignature signatureLong=RowSignature.builder().add(\"1\",ColumnType.LONG).build();\n  final RowSignature signatureLongString=RowSignature.builder().add(\"1\",ColumnType.LONG).add(\"2\",ColumnType.STRING).build();\n  Assert.assertNotEquals(\"not a key\",KeyTestUtils.createKey(signatureLong,1L));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,1L));\n  Assert.assertEquals(KeyTestUtils.createKey(RowSignature.empty()),KeyTestUtils.createKey(RowSignature.empty()));\n  Assert.assertNotEquals(KeyTestUtils.createKey(RowSignature.empty()),KeyTestUtils.createKey(signatureLong,2L));\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,2L));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\"),KeyTestUtils.createKey(signatureLongString,1L,\"abc\"));\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\"),KeyTestUtils.createKey(signatureLongString,1L,\"def\"));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,1L).hashCode());\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,2L).hashCode());\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode(),KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode());\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode(),KeyTestUtils.createKey(signatureLongString,1L,\"def\").hashCode());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 218,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2200,
        "startLineNumber" : 30,
        "startColumnNumber" : 2,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testEqualsAndHashCode(){\n  final RowSignature signatureLong=RowSignature.builder().add(\"1\",ColumnType.LONG).build();\n  final RowSignature signatureLongString=RowSignature.builder().add(\"1\",ColumnType.LONG).add(\"2\",ColumnType.STRING).build();\n  Assert.assertNotEquals(\"not a key\",KeyTestUtils.createKey(signatureLong,1L));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,1L));\n  Assert.assertEquals(KeyTestUtils.createKey(RowSignature.empty()),KeyTestUtils.createKey(RowSignature.empty()));\n  Assert.assertNotEquals(KeyTestUtils.createKey(RowSignature.empty()),KeyTestUtils.createKey(signatureLong,2L));\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,2L));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\"),KeyTestUtils.createKey(signatureLongString,1L,\"abc\"));\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\"),KeyTestUtils.createKey(signatureLongString,1L,\"def\"));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,1L).hashCode());\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,2L).hashCode());\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode(),KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode());\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode(),KeyTestUtils.createKey(signatureLongString,1L,\"def\").hashCode());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 224,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 49
      },
      "nodeContext" : "KeyTestUtils.createKey(signatureLong,1L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.druid.segment.column.RowSignature"
  }, {
    "nodeContext" : "signatureLong",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 46,
      "startColumnNumber" : 31,
      "endLineNumber" : 46,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 49
      },
      "nodeContext" : "KeyTestUtils.createKey(signatureLong,1L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,1L))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 6
      },
      "nodeContext" : "Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,1L));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2152,
        "startLineNumber" : 32,
        "startColumnNumber" : 2,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final RowSignature signatureLong=RowSignature.builder().add(\"1\",ColumnType.LONG).build();\n  final RowSignature signatureLongString=RowSignature.builder().add(\"1\",ColumnType.LONG).add(\"2\",ColumnType.STRING).build();\n  Assert.assertNotEquals(\"not a key\",KeyTestUtils.createKey(signatureLong,1L));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,1L));\n  Assert.assertEquals(KeyTestUtils.createKey(RowSignature.empty()),KeyTestUtils.createKey(RowSignature.empty()));\n  Assert.assertNotEquals(KeyTestUtils.createKey(RowSignature.empty()),KeyTestUtils.createKey(signatureLong,2L));\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,2L));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\"),KeyTestUtils.createKey(signatureLongString,1L,\"abc\"));\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\"),KeyTestUtils.createKey(signatureLongString,1L,\"def\"));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,1L).hashCode());\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,2L).hashCode());\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode(),KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode());\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode(),KeyTestUtils.createKey(signatureLongString,1L,\"def\").hashCode());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 218,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2200,
        "startLineNumber" : 30,
        "startColumnNumber" : 2,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testEqualsAndHashCode(){\n  final RowSignature signatureLong=RowSignature.builder().add(\"1\",ColumnType.LONG).build();\n  final RowSignature signatureLongString=RowSignature.builder().add(\"1\",ColumnType.LONG).add(\"2\",ColumnType.STRING).build();\n  Assert.assertNotEquals(\"not a key\",KeyTestUtils.createKey(signatureLong,1L));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,1L));\n  Assert.assertEquals(KeyTestUtils.createKey(RowSignature.empty()),KeyTestUtils.createKey(RowSignature.empty()));\n  Assert.assertNotEquals(KeyTestUtils.createKey(RowSignature.empty()),KeyTestUtils.createKey(signatureLong,2L));\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,2L));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\"),KeyTestUtils.createKey(signatureLongString,1L,\"abc\"));\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\"),KeyTestUtils.createKey(signatureLongString,1L,\"def\"));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,1L).hashCode());\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,2L).hashCode());\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode(),KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode());\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode(),KeyTestUtils.createKey(signatureLongString,1L,\"def\").hashCode());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 224,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 46,
        "endColumnNumber" : 49
      },
      "nodeContext" : "KeyTestUtils.createKey(signatureLong,1L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.druid.segment.column.RowSignature"
  }, {
    "nodeContext" : "signatureLong",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 56,
      "startColumnNumber" : 31,
      "endLineNumber" : 56,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 49
      },
      "nodeContext" : "KeyTestUtils.createKey(signatureLong,2L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 57,
        "endColumnNumber" : 5
      },
      "nodeContext" : "Assert.assertNotEquals(KeyTestUtils.createKey(RowSignature.empty()),KeyTestUtils.createKey(signatureLong,2L))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 137,
        "startLineNumber" : 54,
        "startColumnNumber" : 4,
        "endLineNumber" : 57,
        "endColumnNumber" : 6
      },
      "nodeContext" : "Assert.assertNotEquals(KeyTestUtils.createKey(RowSignature.empty()),KeyTestUtils.createKey(signatureLong,2L));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2152,
        "startLineNumber" : 32,
        "startColumnNumber" : 2,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final RowSignature signatureLong=RowSignature.builder().add(\"1\",ColumnType.LONG).build();\n  final RowSignature signatureLongString=RowSignature.builder().add(\"1\",ColumnType.LONG).add(\"2\",ColumnType.STRING).build();\n  Assert.assertNotEquals(\"not a key\",KeyTestUtils.createKey(signatureLong,1L));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,1L));\n  Assert.assertEquals(KeyTestUtils.createKey(RowSignature.empty()),KeyTestUtils.createKey(RowSignature.empty()));\n  Assert.assertNotEquals(KeyTestUtils.createKey(RowSignature.empty()),KeyTestUtils.createKey(signatureLong,2L));\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,2L));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\"),KeyTestUtils.createKey(signatureLongString,1L,\"abc\"));\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\"),KeyTestUtils.createKey(signatureLongString,1L,\"def\"));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,1L).hashCode());\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,2L).hashCode());\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode(),KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode());\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode(),KeyTestUtils.createKey(signatureLongString,1L,\"def\").hashCode());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 218,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2200,
        "startLineNumber" : 30,
        "startColumnNumber" : 2,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testEqualsAndHashCode(){\n  final RowSignature signatureLong=RowSignature.builder().add(\"1\",ColumnType.LONG).build();\n  final RowSignature signatureLongString=RowSignature.builder().add(\"1\",ColumnType.LONG).add(\"2\",ColumnType.STRING).build();\n  Assert.assertNotEquals(\"not a key\",KeyTestUtils.createKey(signatureLong,1L));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,1L));\n  Assert.assertEquals(KeyTestUtils.createKey(RowSignature.empty()),KeyTestUtils.createKey(RowSignature.empty()));\n  Assert.assertNotEquals(KeyTestUtils.createKey(RowSignature.empty()),KeyTestUtils.createKey(signatureLong,2L));\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,2L));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\"),KeyTestUtils.createKey(signatureLongString,1L,\"abc\"));\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\"),KeyTestUtils.createKey(signatureLongString,1L,\"def\"));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,1L).hashCode());\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,2L).hashCode());\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode(),KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode());\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode(),KeyTestUtils.createKey(signatureLongString,1L,\"def\").hashCode());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 224,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 49
      },
      "nodeContext" : "KeyTestUtils.createKey(signatureLong,2L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.druid.segment.column.RowSignature"
  }, {
    "nodeContext" : "signatureLong",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 60,
      "startColumnNumber" : 31,
      "endLineNumber" : 60,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 49
      },
      "nodeContext" : "KeyTestUtils.createKey(signatureLong,1L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,2L))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 6
      },
      "nodeContext" : "Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,2L));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2152,
        "startLineNumber" : 32,
        "startColumnNumber" : 2,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final RowSignature signatureLong=RowSignature.builder().add(\"1\",ColumnType.LONG).build();\n  final RowSignature signatureLongString=RowSignature.builder().add(\"1\",ColumnType.LONG).add(\"2\",ColumnType.STRING).build();\n  Assert.assertNotEquals(\"not a key\",KeyTestUtils.createKey(signatureLong,1L));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,1L));\n  Assert.assertEquals(KeyTestUtils.createKey(RowSignature.empty()),KeyTestUtils.createKey(RowSignature.empty()));\n  Assert.assertNotEquals(KeyTestUtils.createKey(RowSignature.empty()),KeyTestUtils.createKey(signatureLong,2L));\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,2L));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\"),KeyTestUtils.createKey(signatureLongString,1L,\"abc\"));\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\"),KeyTestUtils.createKey(signatureLongString,1L,\"def\"));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,1L).hashCode());\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,2L).hashCode());\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode(),KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode());\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode(),KeyTestUtils.createKey(signatureLongString,1L,\"def\").hashCode());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 218,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2200,
        "startLineNumber" : 30,
        "startColumnNumber" : 2,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testEqualsAndHashCode(){\n  final RowSignature signatureLong=RowSignature.builder().add(\"1\",ColumnType.LONG).build();\n  final RowSignature signatureLongString=RowSignature.builder().add(\"1\",ColumnType.LONG).add(\"2\",ColumnType.STRING).build();\n  Assert.assertNotEquals(\"not a key\",KeyTestUtils.createKey(signatureLong,1L));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,1L));\n  Assert.assertEquals(KeyTestUtils.createKey(RowSignature.empty()),KeyTestUtils.createKey(RowSignature.empty()));\n  Assert.assertNotEquals(KeyTestUtils.createKey(RowSignature.empty()),KeyTestUtils.createKey(signatureLong,2L));\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,2L));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\"),KeyTestUtils.createKey(signatureLongString,1L,\"abc\"));\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\"),KeyTestUtils.createKey(signatureLongString,1L,\"def\"));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,1L).hashCode());\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,2L).hashCode());\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode(),KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode());\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode(),KeyTestUtils.createKey(signatureLongString,1L,\"def\").hashCode());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 224,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 49
      },
      "nodeContext" : "KeyTestUtils.createKey(signatureLong,1L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.druid.segment.column.RowSignature"
  }, {
    "nodeContext" : "signatureLong",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 61,
      "startColumnNumber" : 31,
      "endLineNumber" : 61,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 49
      },
      "nodeContext" : "KeyTestUtils.createKey(signatureLong,2L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,2L))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 134,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 6
      },
      "nodeContext" : "Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,2L));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2152,
        "startLineNumber" : 32,
        "startColumnNumber" : 2,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final RowSignature signatureLong=RowSignature.builder().add(\"1\",ColumnType.LONG).build();\n  final RowSignature signatureLongString=RowSignature.builder().add(\"1\",ColumnType.LONG).add(\"2\",ColumnType.STRING).build();\n  Assert.assertNotEquals(\"not a key\",KeyTestUtils.createKey(signatureLong,1L));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,1L));\n  Assert.assertEquals(KeyTestUtils.createKey(RowSignature.empty()),KeyTestUtils.createKey(RowSignature.empty()));\n  Assert.assertNotEquals(KeyTestUtils.createKey(RowSignature.empty()),KeyTestUtils.createKey(signatureLong,2L));\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,2L));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\"),KeyTestUtils.createKey(signatureLongString,1L,\"abc\"));\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\"),KeyTestUtils.createKey(signatureLongString,1L,\"def\"));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,1L).hashCode());\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,2L).hashCode());\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode(),KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode());\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode(),KeyTestUtils.createKey(signatureLongString,1L,\"def\").hashCode());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 218,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2200,
        "startLineNumber" : 30,
        "startColumnNumber" : 2,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testEqualsAndHashCode(){\n  final RowSignature signatureLong=RowSignature.builder().add(\"1\",ColumnType.LONG).build();\n  final RowSignature signatureLongString=RowSignature.builder().add(\"1\",ColumnType.LONG).add(\"2\",ColumnType.STRING).build();\n  Assert.assertNotEquals(\"not a key\",KeyTestUtils.createKey(signatureLong,1L));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,1L));\n  Assert.assertEquals(KeyTestUtils.createKey(RowSignature.empty()),KeyTestUtils.createKey(RowSignature.empty()));\n  Assert.assertNotEquals(KeyTestUtils.createKey(RowSignature.empty()),KeyTestUtils.createKey(signatureLong,2L));\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,2L));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\"),KeyTestUtils.createKey(signatureLongString,1L,\"abc\"));\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\"),KeyTestUtils.createKey(signatureLongString,1L,\"def\"));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,1L).hashCode());\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,2L).hashCode());\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode(),KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode());\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode(),KeyTestUtils.createKey(signatureLongString,1L,\"def\").hashCode());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 224,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 49
      },
      "nodeContext" : "KeyTestUtils.createKey(signatureLong,2L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.druid.segment.column.RowSignature"
  }, {
    "nodeContext" : "signatureLong",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 75,
      "startColumnNumber" : 31,
      "endLineNumber" : 75,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 49
      },
      "nodeContext" : "KeyTestUtils.createKey(signatureLong,1L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 60
      },
      "nodeContext" : "KeyTestUtils.createKey(signatureLong,1L).hashCode()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,1L).hashCode())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 153,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 77,
        "endColumnNumber" : 6
      },
      "nodeContext" : "Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,1L).hashCode());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2152,
        "startLineNumber" : 32,
        "startColumnNumber" : 2,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final RowSignature signatureLong=RowSignature.builder().add(\"1\",ColumnType.LONG).build();\n  final RowSignature signatureLongString=RowSignature.builder().add(\"1\",ColumnType.LONG).add(\"2\",ColumnType.STRING).build();\n  Assert.assertNotEquals(\"not a key\",KeyTestUtils.createKey(signatureLong,1L));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,1L));\n  Assert.assertEquals(KeyTestUtils.createKey(RowSignature.empty()),KeyTestUtils.createKey(RowSignature.empty()));\n  Assert.assertNotEquals(KeyTestUtils.createKey(RowSignature.empty()),KeyTestUtils.createKey(signatureLong,2L));\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,2L));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\"),KeyTestUtils.createKey(signatureLongString,1L,\"abc\"));\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\"),KeyTestUtils.createKey(signatureLongString,1L,\"def\"));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,1L).hashCode());\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,2L).hashCode());\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode(),KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode());\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode(),KeyTestUtils.createKey(signatureLongString,1L,\"def\").hashCode());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 218,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2200,
        "startLineNumber" : 30,
        "startColumnNumber" : 2,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testEqualsAndHashCode(){\n  final RowSignature signatureLong=RowSignature.builder().add(\"1\",ColumnType.LONG).build();\n  final RowSignature signatureLongString=RowSignature.builder().add(\"1\",ColumnType.LONG).add(\"2\",ColumnType.STRING).build();\n  Assert.assertNotEquals(\"not a key\",KeyTestUtils.createKey(signatureLong,1L));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,1L));\n  Assert.assertEquals(KeyTestUtils.createKey(RowSignature.empty()),KeyTestUtils.createKey(RowSignature.empty()));\n  Assert.assertNotEquals(KeyTestUtils.createKey(RowSignature.empty()),KeyTestUtils.createKey(signatureLong,2L));\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,2L));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\"),KeyTestUtils.createKey(signatureLongString,1L,\"abc\"));\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\"),KeyTestUtils.createKey(signatureLongString,1L,\"def\"));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,1L).hashCode());\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,2L).hashCode());\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode(),KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode());\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode(),KeyTestUtils.createKey(signatureLongString,1L,\"def\").hashCode());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 224,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 60
      },
      "nodeContext" : "KeyTestUtils.createKey(signatureLong,1L).hashCode()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.druid.segment.column.RowSignature"
  }, {
    "nodeContext" : "signatureLong",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 76,
      "startColumnNumber" : 31,
      "endLineNumber" : 76,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 76,
        "endColumnNumber" : 49
      },
      "nodeContext" : "KeyTestUtils.createKey(signatureLong,1L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 76,
        "endColumnNumber" : 60
      },
      "nodeContext" : "KeyTestUtils.createKey(signatureLong,1L).hashCode()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 152,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,1L).hashCode())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 153,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 77,
        "endColumnNumber" : 6
      },
      "nodeContext" : "Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,1L).hashCode());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2152,
        "startLineNumber" : 32,
        "startColumnNumber" : 2,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final RowSignature signatureLong=RowSignature.builder().add(\"1\",ColumnType.LONG).build();\n  final RowSignature signatureLongString=RowSignature.builder().add(\"1\",ColumnType.LONG).add(\"2\",ColumnType.STRING).build();\n  Assert.assertNotEquals(\"not a key\",KeyTestUtils.createKey(signatureLong,1L));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,1L));\n  Assert.assertEquals(KeyTestUtils.createKey(RowSignature.empty()),KeyTestUtils.createKey(RowSignature.empty()));\n  Assert.assertNotEquals(KeyTestUtils.createKey(RowSignature.empty()),KeyTestUtils.createKey(signatureLong,2L));\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,2L));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\"),KeyTestUtils.createKey(signatureLongString,1L,\"abc\"));\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\"),KeyTestUtils.createKey(signatureLongString,1L,\"def\"));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,1L).hashCode());\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,2L).hashCode());\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode(),KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode());\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode(),KeyTestUtils.createKey(signatureLongString,1L,\"def\").hashCode());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 218,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2200,
        "startLineNumber" : 30,
        "startColumnNumber" : 2,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testEqualsAndHashCode(){\n  final RowSignature signatureLong=RowSignature.builder().add(\"1\",ColumnType.LONG).build();\n  final RowSignature signatureLongString=RowSignature.builder().add(\"1\",ColumnType.LONG).add(\"2\",ColumnType.STRING).build();\n  Assert.assertNotEquals(\"not a key\",KeyTestUtils.createKey(signatureLong,1L));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,1L));\n  Assert.assertEquals(KeyTestUtils.createKey(RowSignature.empty()),KeyTestUtils.createKey(RowSignature.empty()));\n  Assert.assertNotEquals(KeyTestUtils.createKey(RowSignature.empty()),KeyTestUtils.createKey(signatureLong,2L));\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,2L));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\"),KeyTestUtils.createKey(signatureLongString,1L,\"abc\"));\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\"),KeyTestUtils.createKey(signatureLongString,1L,\"def\"));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,1L).hashCode());\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,2L).hashCode());\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode(),KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode());\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode(),KeyTestUtils.createKey(signatureLongString,1L,\"def\").hashCode());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 224,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 76,
        "endColumnNumber" : 60
      },
      "nodeContext" : "KeyTestUtils.createKey(signatureLong,1L).hashCode()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.druid.segment.column.RowSignature"
  }, {
    "nodeContext" : "signatureLong",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 80,
      "startColumnNumber" : 31,
      "endLineNumber" : 80,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 80,
        "endColumnNumber" : 49
      },
      "nodeContext" : "KeyTestUtils.createKey(signatureLong,1L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 80,
        "endColumnNumber" : 60
      },
      "nodeContext" : "KeyTestUtils.createKey(signatureLong,1L).hashCode()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 155,
        "startLineNumber" : 79,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,2L).hashCode())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 156,
        "startLineNumber" : 79,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 6
      },
      "nodeContext" : "Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,2L).hashCode());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2152,
        "startLineNumber" : 32,
        "startColumnNumber" : 2,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final RowSignature signatureLong=RowSignature.builder().add(\"1\",ColumnType.LONG).build();\n  final RowSignature signatureLongString=RowSignature.builder().add(\"1\",ColumnType.LONG).add(\"2\",ColumnType.STRING).build();\n  Assert.assertNotEquals(\"not a key\",KeyTestUtils.createKey(signatureLong,1L));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,1L));\n  Assert.assertEquals(KeyTestUtils.createKey(RowSignature.empty()),KeyTestUtils.createKey(RowSignature.empty()));\n  Assert.assertNotEquals(KeyTestUtils.createKey(RowSignature.empty()),KeyTestUtils.createKey(signatureLong,2L));\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,2L));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\"),KeyTestUtils.createKey(signatureLongString,1L,\"abc\"));\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\"),KeyTestUtils.createKey(signatureLongString,1L,\"def\"));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,1L).hashCode());\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,2L).hashCode());\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode(),KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode());\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode(),KeyTestUtils.createKey(signatureLongString,1L,\"def\").hashCode());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 218,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2200,
        "startLineNumber" : 30,
        "startColumnNumber" : 2,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testEqualsAndHashCode(){\n  final RowSignature signatureLong=RowSignature.builder().add(\"1\",ColumnType.LONG).build();\n  final RowSignature signatureLongString=RowSignature.builder().add(\"1\",ColumnType.LONG).add(\"2\",ColumnType.STRING).build();\n  Assert.assertNotEquals(\"not a key\",KeyTestUtils.createKey(signatureLong,1L));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,1L));\n  Assert.assertEquals(KeyTestUtils.createKey(RowSignature.empty()),KeyTestUtils.createKey(RowSignature.empty()));\n  Assert.assertNotEquals(KeyTestUtils.createKey(RowSignature.empty()),KeyTestUtils.createKey(signatureLong,2L));\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,2L));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\"),KeyTestUtils.createKey(signatureLongString,1L,\"abc\"));\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\"),KeyTestUtils.createKey(signatureLongString,1L,\"def\"));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,1L).hashCode());\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,2L).hashCode());\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode(),KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode());\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode(),KeyTestUtils.createKey(signatureLongString,1L,\"def\").hashCode());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 224,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 80,
        "endColumnNumber" : 60
      },
      "nodeContext" : "KeyTestUtils.createKey(signatureLong,1L).hashCode()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.druid.segment.column.RowSignature"
  }, {
    "nodeContext" : "signatureLong",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 81,
      "startColumnNumber" : 31,
      "endLineNumber" : 81,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 81,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 49
      },
      "nodeContext" : "KeyTestUtils.createKey(signatureLong,2L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 81,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 60
      },
      "nodeContext" : "KeyTestUtils.createKey(signatureLong,2L).hashCode()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 155,
        "startLineNumber" : 79,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,2L).hashCode())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 156,
        "startLineNumber" : 79,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 6
      },
      "nodeContext" : "Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,2L).hashCode());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2152,
        "startLineNumber" : 32,
        "startColumnNumber" : 2,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final RowSignature signatureLong=RowSignature.builder().add(\"1\",ColumnType.LONG).build();\n  final RowSignature signatureLongString=RowSignature.builder().add(\"1\",ColumnType.LONG).add(\"2\",ColumnType.STRING).build();\n  Assert.assertNotEquals(\"not a key\",KeyTestUtils.createKey(signatureLong,1L));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,1L));\n  Assert.assertEquals(KeyTestUtils.createKey(RowSignature.empty()),KeyTestUtils.createKey(RowSignature.empty()));\n  Assert.assertNotEquals(KeyTestUtils.createKey(RowSignature.empty()),KeyTestUtils.createKey(signatureLong,2L));\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,2L));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\"),KeyTestUtils.createKey(signatureLongString,1L,\"abc\"));\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\"),KeyTestUtils.createKey(signatureLongString,1L,\"def\"));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,1L).hashCode());\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,2L).hashCode());\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode(),KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode());\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode(),KeyTestUtils.createKey(signatureLongString,1L,\"def\").hashCode());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 218,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2200,
        "startLineNumber" : 30,
        "startColumnNumber" : 2,
        "endLineNumber" : 93,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testEqualsAndHashCode(){\n  final RowSignature signatureLong=RowSignature.builder().add(\"1\",ColumnType.LONG).build();\n  final RowSignature signatureLongString=RowSignature.builder().add(\"1\",ColumnType.LONG).add(\"2\",ColumnType.STRING).build();\n  Assert.assertNotEquals(\"not a key\",KeyTestUtils.createKey(signatureLong,1L));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,1L));\n  Assert.assertEquals(KeyTestUtils.createKey(RowSignature.empty()),KeyTestUtils.createKey(RowSignature.empty()));\n  Assert.assertNotEquals(KeyTestUtils.createKey(RowSignature.empty()),KeyTestUtils.createKey(signatureLong,2L));\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L),KeyTestUtils.createKey(signatureLong,2L));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\"),KeyTestUtils.createKey(signatureLongString,1L,\"abc\"));\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\"),KeyTestUtils.createKey(signatureLongString,1L,\"def\"));\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,1L).hashCode());\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLong,1L).hashCode(),KeyTestUtils.createKey(signatureLong,2L).hashCode());\n  Assert.assertEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode(),KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode());\n  Assert.assertNotEquals(KeyTestUtils.createKey(signatureLongString,1L,\"abc\").hashCode(),KeyTestUtils.createKey(signatureLongString,1L,\"def\").hashCode());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 224,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 81,
        "startColumnNumber" : 8,
        "endLineNumber" : 81,
        "endColumnNumber" : 60
      },
      "nodeContext" : "KeyTestUtils.createKey(signatureLong,2L).hashCode()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.druid.segment.column.RowSignature"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 41,
    "startColumnNumber" : 31,
    "endLineNumber" : 41,
    "endColumnNumber" : 44
  }, {
    "charLength" : 13,
    "startLineNumber" : 45,
    "startColumnNumber" : 31,
    "endLineNumber" : 45,
    "endColumnNumber" : 44
  }, {
    "charLength" : 13,
    "startLineNumber" : 46,
    "startColumnNumber" : 31,
    "endLineNumber" : 46,
    "endColumnNumber" : 44
  }, {
    "charLength" : 13,
    "startLineNumber" : 56,
    "startColumnNumber" : 31,
    "endLineNumber" : 56,
    "endColumnNumber" : 44
  }, {
    "charLength" : 13,
    "startLineNumber" : 60,
    "startColumnNumber" : 31,
    "endLineNumber" : 60,
    "endColumnNumber" : 44
  }, {
    "charLength" : 13,
    "startLineNumber" : 61,
    "startColumnNumber" : 31,
    "endLineNumber" : 61,
    "endColumnNumber" : 44
  }, {
    "charLength" : 13,
    "startLineNumber" : 75,
    "startColumnNumber" : 31,
    "endLineNumber" : 75,
    "endColumnNumber" : 44
  }, {
    "charLength" : 13,
    "startLineNumber" : 76,
    "startColumnNumber" : 31,
    "endLineNumber" : 76,
    "endColumnNumber" : 44
  }, {
    "charLength" : 13,
    "startLineNumber" : 80,
    "startColumnNumber" : 31,
    "endLineNumber" : 80,
    "endColumnNumber" : 44
  }, {
    "charLength" : 13,
    "startLineNumber" : 81,
    "startColumnNumber" : 31,
    "endLineNumber" : 81,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 2
  } ]
}