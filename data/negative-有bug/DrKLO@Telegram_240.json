{
  "id" : 240,
  "expression" : "payloadSize",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/com/google/android/exoplayer2/extractor/ts/PesReader.java",
  "occurrences" : 6,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "payloadSize",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 96,
      "startColumnNumber" : 14,
      "endLineNumber" : 96,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 96,
        "startColumnNumber" : 14,
        "endLineNumber" : 96,
        "endColumnNumber" : 31
      },
      "nodeContext" : "payloadSize != -1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 96,
        "startColumnNumber" : 10,
        "endLineNumber" : 98,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (payloadSize != -1) {\n  Log.w(TAG,\"Unexpected start indicator: expected \" + payloadSize + \" more bytes\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1000,
        "startLineNumber" : 83,
        "startColumnNumber" : 6,
        "endLineNumber" : 104,
        "endColumnNumber" : 7
      },
      "nodeContext" : "switch (state) {\ncase STATE_FINDING_HEADER:case STATE_READING_HEADER:  break;\ncase STATE_READING_HEADER_EXTENSION:Log.w(TAG,\"Unexpected start indicator reading extended header\");\nbreak;\ncase STATE_READING_BODY:if (payloadSize != -1) {\nLog.w(TAG,\"Unexpected start indicator: expected \" + payloadSize + \" more bytes\");\n}\nreader.packetFinished();\nbreak;\ndefault:throw new IllegalStateException();\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 43,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1052,
        "startLineNumber" : 82,
        "startColumnNumber" : 58,
        "endLineNumber" : 106,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\nswitch (state) {\ncase STATE_FINDING_HEADER:case STATE_READING_HEADER:    break;\ncase STATE_READING_HEADER_EXTENSION:  Log.w(TAG,\"Unexpected start indicator reading extended header\");\nbreak;\ncase STATE_READING_BODY:if (payloadSize != -1) {\nLog.w(TAG,\"Unexpected start indicator: expected \" + payloadSize + \" more bytes\");\n}\nreader.packetFinished();\nbreak;\ndefault:throw new IllegalStateException();\n}\nsetState(STATE_READING_HEADER);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1106,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 106,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if ((flags & FLAG_PAYLOAD_UNIT_START_INDICATOR) != 0) {\nswitch (state) {\ncase STATE_FINDING_HEADER:case STATE_READING_HEADER:    break;\ncase STATE_READING_HEADER_EXTENSION:  Log.w(TAG,\"Unexpected start indicator reading extended header\");\nbreak;\ncase STATE_READING_BODY:if (payloadSize != -1) {\nLog.w(TAG,\"Unexpected start indicator: expected \" + payloadSize + \" more bytes\");\n}\nreader.packetFinished();\nbreak;\ndefault:throw new IllegalStateException();\n}\nsetState(STATE_READING_HEADER);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2713,
        "startLineNumber" : 81,
        "startColumnNumber" : 93,
        "endLineNumber" : 149,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if ((flags & FLAG_PAYLOAD_UNIT_START_INDICATOR) != 0) {\nswitch (state) {\ncase STATE_FINDING_HEADER:case STATE_READING_HEADER:      break;\ncase STATE_READING_HEADER_EXTENSION:    Log.w(TAG,\"Unexpected start indicator reading extended header\");\n  break;\ncase STATE_READING_BODY:if (payloadSize != -1) {\n  Log.w(TAG,\"Unexpected start indicator: expected \" + payloadSize + \" more bytes\");\n}\nreader.packetFinished();\nbreak;\ndefault:throw new IllegalStateException();\n}\nsetState(STATE_READING_HEADER);\n}\nwhile (data.bytesLeft() > 0) {\nswitch (state) {\ncase STATE_FINDING_HEADER:data.skipBytes(data.bytesLeft());\nbreak;\ncase STATE_READING_HEADER:if (continueRead(data,pesScratch.data,HEADER_SIZE)) {\nsetState(parseHeader() ? STATE_READING_HEADER_EXTENSION : STATE_FINDING_HEADER);\n}\nbreak;\ncase STATE_READING_HEADER_EXTENSION:int readLength=Math.min(MAX_HEADER_EXTENSION_SIZE,extendedHeaderLength);\nif (continueRead(data,pesScratch.data,readLength) && continueRead(data,null,extendedHeaderLength)) {\nparseHeaderExtension();\nflags|=dataAlignmentIndicator ? FLAG_DATA_ALIGNMENT_INDICATOR : 0;\nreader.packetStarted(timeUs,flags);\nsetState(STATE_READING_BODY);\n}\nbreak;\ncase STATE_READING_BODY:readLength=data.bytesLeft();\nint padding=payloadSize == -1 ? 0 : readLength - payloadSize;\nif (padding > 0) {\nreadLength-=padding;\ndata.setLimit(data.getPosition() + readLength);\n}\nreader.consume(data);\nif (payloadSize != -1) {\npayloadSize-=readLength;\nif (payloadSize == 0) {\nreader.packetFinished();\nsetState(STATE_READING_HEADER);\n}\n}\nbreak;\ndefault:throw new IllegalStateException();\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 215,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2816,
        "startLineNumber" : 80,
        "startColumnNumber" : 2,
        "endLineNumber" : 149,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public final void consume(ParsableByteArray data,@Flags int flags) throws ParserException {\n  if ((flags & FLAG_PAYLOAD_UNIT_START_INDICATOR) != 0) {\nswitch (state) {\ncase STATE_FINDING_HEADER:case STATE_READING_HEADER:      break;\ncase STATE_READING_HEADER_EXTENSION:    Log.w(TAG,\"Unexpected start indicator reading extended header\");\n  break;\ncase STATE_READING_BODY:if (payloadSize != -1) {\n  Log.w(TAG,\"Unexpected start indicator: expected \" + payloadSize + \" more bytes\");\n}\nreader.packetFinished();\nbreak;\ndefault:throw new IllegalStateException();\n}\nsetState(STATE_READING_HEADER);\n}\nwhile (data.bytesLeft() > 0) {\nswitch (state) {\ncase STATE_FINDING_HEADER:data.skipBytes(data.bytesLeft());\nbreak;\ncase STATE_READING_HEADER:if (continueRead(data,pesScratch.data,HEADER_SIZE)) {\nsetState(parseHeader() ? STATE_READING_HEADER_EXTENSION : STATE_FINDING_HEADER);\n}\nbreak;\ncase STATE_READING_HEADER_EXTENSION:int readLength=Math.min(MAX_HEADER_EXTENSION_SIZE,extendedHeaderLength);\nif (continueRead(data,pesScratch.data,readLength) && continueRead(data,null,extendedHeaderLength)) {\nparseHeaderExtension();\nflags|=dataAlignmentIndicator ? FLAG_DATA_ALIGNMENT_INDICATOR : 0;\nreader.packetStarted(timeUs,flags);\nsetState(STATE_READING_BODY);\n}\nbreak;\ncase STATE_READING_BODY:readLength=data.bytesLeft();\nint padding=payloadSize == -1 ? 0 : readLength - payloadSize;\nif (padding > 0) {\nreadLength-=padding;\ndata.setLimit(data.getPosition() + readLength);\n}\nreader.consume(data);\nif (payloadSize != -1) {\npayloadSize-=readLength;\nif (payloadSize == 0) {\nreader.packetFinished();\nsetState(STATE_READING_HEADER);\n}\n}\nbreak;\ndefault:throw new IllegalStateException();\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 233,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 96,
        "startColumnNumber" : 14,
        "endLineNumber" : 96,
        "endColumnNumber" : 31
      },
      "nodeContext" : "payloadSize != -1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "payloadSize",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 97,
      "startColumnNumber" : 65,
      "endLineNumber" : 97,
      "endColumnNumber" : 76
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 97,
        "startColumnNumber" : 23,
        "endLineNumber" : 97,
        "endColumnNumber" : 92
      },
      "nodeContext" : "\"Unexpected start indicator: expected \" + payloadSize + \" more bytes\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 97,
        "startColumnNumber" : 12,
        "endLineNumber" : 97,
        "endColumnNumber" : 93
      },
      "nodeContext" : "Log.w(TAG,\"Unexpected start indicator: expected \" + payloadSize + \" more bytes\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 97,
        "startColumnNumber" : 12,
        "endLineNumber" : 97,
        "endColumnNumber" : 94
      },
      "nodeContext" : "Log.w(TAG,\"Unexpected start indicator: expected \" + payloadSize + \" more bytes\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 96,
        "startColumnNumber" : 33,
        "endLineNumber" : 98,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  Log.w(TAG,\"Unexpected start indicator: expected \" + payloadSize + \" more bytes\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 96,
        "startColumnNumber" : 10,
        "endLineNumber" : 98,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (payloadSize != -1) {\n  Log.w(TAG,\"Unexpected start indicator: expected \" + payloadSize + \" more bytes\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1000,
        "startLineNumber" : 83,
        "startColumnNumber" : 6,
        "endLineNumber" : 104,
        "endColumnNumber" : 7
      },
      "nodeContext" : "switch (state) {\ncase STATE_FINDING_HEADER:case STATE_READING_HEADER:  break;\ncase STATE_READING_HEADER_EXTENSION:Log.w(TAG,\"Unexpected start indicator reading extended header\");\nbreak;\ncase STATE_READING_BODY:if (payloadSize != -1) {\nLog.w(TAG,\"Unexpected start indicator: expected \" + payloadSize + \" more bytes\");\n}\nreader.packetFinished();\nbreak;\ndefault:throw new IllegalStateException();\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 43,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1052,
        "startLineNumber" : 82,
        "startColumnNumber" : 58,
        "endLineNumber" : 106,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\nswitch (state) {\ncase STATE_FINDING_HEADER:case STATE_READING_HEADER:    break;\ncase STATE_READING_HEADER_EXTENSION:  Log.w(TAG,\"Unexpected start indicator reading extended header\");\nbreak;\ncase STATE_READING_BODY:if (payloadSize != -1) {\nLog.w(TAG,\"Unexpected start indicator: expected \" + payloadSize + \" more bytes\");\n}\nreader.packetFinished();\nbreak;\ndefault:throw new IllegalStateException();\n}\nsetState(STATE_READING_HEADER);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1106,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 106,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if ((flags & FLAG_PAYLOAD_UNIT_START_INDICATOR) != 0) {\nswitch (state) {\ncase STATE_FINDING_HEADER:case STATE_READING_HEADER:    break;\ncase STATE_READING_HEADER_EXTENSION:  Log.w(TAG,\"Unexpected start indicator reading extended header\");\nbreak;\ncase STATE_READING_BODY:if (payloadSize != -1) {\nLog.w(TAG,\"Unexpected start indicator: expected \" + payloadSize + \" more bytes\");\n}\nreader.packetFinished();\nbreak;\ndefault:throw new IllegalStateException();\n}\nsetState(STATE_READING_HEADER);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2713,
        "startLineNumber" : 81,
        "startColumnNumber" : 93,
        "endLineNumber" : 149,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if ((flags & FLAG_PAYLOAD_UNIT_START_INDICATOR) != 0) {\nswitch (state) {\ncase STATE_FINDING_HEADER:case STATE_READING_HEADER:      break;\ncase STATE_READING_HEADER_EXTENSION:    Log.w(TAG,\"Unexpected start indicator reading extended header\");\n  break;\ncase STATE_READING_BODY:if (payloadSize != -1) {\n  Log.w(TAG,\"Unexpected start indicator: expected \" + payloadSize + \" more bytes\");\n}\nreader.packetFinished();\nbreak;\ndefault:throw new IllegalStateException();\n}\nsetState(STATE_READING_HEADER);\n}\nwhile (data.bytesLeft() > 0) {\nswitch (state) {\ncase STATE_FINDING_HEADER:data.skipBytes(data.bytesLeft());\nbreak;\ncase STATE_READING_HEADER:if (continueRead(data,pesScratch.data,HEADER_SIZE)) {\nsetState(parseHeader() ? STATE_READING_HEADER_EXTENSION : STATE_FINDING_HEADER);\n}\nbreak;\ncase STATE_READING_HEADER_EXTENSION:int readLength=Math.min(MAX_HEADER_EXTENSION_SIZE,extendedHeaderLength);\nif (continueRead(data,pesScratch.data,readLength) && continueRead(data,null,extendedHeaderLength)) {\nparseHeaderExtension();\nflags|=dataAlignmentIndicator ? FLAG_DATA_ALIGNMENT_INDICATOR : 0;\nreader.packetStarted(timeUs,flags);\nsetState(STATE_READING_BODY);\n}\nbreak;\ncase STATE_READING_BODY:readLength=data.bytesLeft();\nint padding=payloadSize == -1 ? 0 : readLength - payloadSize;\nif (padding > 0) {\nreadLength-=padding;\ndata.setLimit(data.getPosition() + readLength);\n}\nreader.consume(data);\nif (payloadSize != -1) {\npayloadSize-=readLength;\nif (payloadSize == 0) {\nreader.packetFinished();\nsetState(STATE_READING_HEADER);\n}\n}\nbreak;\ndefault:throw new IllegalStateException();\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 215,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2816,
        "startLineNumber" : 80,
        "startColumnNumber" : 2,
        "endLineNumber" : 149,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public final void consume(ParsableByteArray data,@Flags int flags) throws ParserException {\n  if ((flags & FLAG_PAYLOAD_UNIT_START_INDICATOR) != 0) {\nswitch (state) {\ncase STATE_FINDING_HEADER:case STATE_READING_HEADER:      break;\ncase STATE_READING_HEADER_EXTENSION:    Log.w(TAG,\"Unexpected start indicator reading extended header\");\n  break;\ncase STATE_READING_BODY:if (payloadSize != -1) {\n  Log.w(TAG,\"Unexpected start indicator: expected \" + payloadSize + \" more bytes\");\n}\nreader.packetFinished();\nbreak;\ndefault:throw new IllegalStateException();\n}\nsetState(STATE_READING_HEADER);\n}\nwhile (data.bytesLeft() > 0) {\nswitch (state) {\ncase STATE_FINDING_HEADER:data.skipBytes(data.bytesLeft());\nbreak;\ncase STATE_READING_HEADER:if (continueRead(data,pesScratch.data,HEADER_SIZE)) {\nsetState(parseHeader() ? STATE_READING_HEADER_EXTENSION : STATE_FINDING_HEADER);\n}\nbreak;\ncase STATE_READING_HEADER_EXTENSION:int readLength=Math.min(MAX_HEADER_EXTENSION_SIZE,extendedHeaderLength);\nif (continueRead(data,pesScratch.data,readLength) && continueRead(data,null,extendedHeaderLength)) {\nparseHeaderExtension();\nflags|=dataAlignmentIndicator ? FLAG_DATA_ALIGNMENT_INDICATOR : 0;\nreader.packetStarted(timeUs,flags);\nsetState(STATE_READING_BODY);\n}\nbreak;\ncase STATE_READING_BODY:readLength=data.bytesLeft();\nint padding=payloadSize == -1 ? 0 : readLength - payloadSize;\nif (padding > 0) {\nreadLength-=padding;\ndata.setLimit(data.getPosition() + readLength);\n}\nreader.consume(data);\nif (payloadSize != -1) {\npayloadSize-=readLength;\nif (payloadSize == 0) {\nreader.packetFinished();\nsetState(STATE_READING_HEADER);\n}\n}\nbreak;\ndefault:throw new IllegalStateException();\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 233,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 97,
        "startColumnNumber" : 12,
        "endLineNumber" : 97,
        "endColumnNumber" : 94
      },
      "nodeContext" : "Log.w(TAG,\"Unexpected start indicator: expected \" + payloadSize + \" more bytes\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "payloadSize",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 131,
      "startColumnNumber" : 24,
      "endLineNumber" : 131,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 131,
        "startColumnNumber" : 24,
        "endLineNumber" : 131,
        "endColumnNumber" : 41
      },
      "nodeContext" : "payloadSize == -1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 131,
        "startColumnNumber" : 24,
        "endLineNumber" : 131,
        "endColumnNumber" : 72
      },
      "nodeContext" : "payloadSize == -1 ? 0 : readLength - payloadSize",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 131,
        "startColumnNumber" : 14,
        "endLineNumber" : 131,
        "endColumnNumber" : 72
      },
      "nodeContext" : "padding=payloadSize == -1 ? 0 : readLength - payloadSize",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 131,
        "startColumnNumber" : 10,
        "endLineNumber" : 131,
        "endColumnNumber" : 73
      },
      "nodeContext" : "int padding=payloadSize == -1 ? 0 : readLength - payloadSize;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1548,
        "startLineNumber" : 109,
        "startColumnNumber" : 6,
        "endLineNumber" : 147,
        "endColumnNumber" : 7
      },
      "nodeContext" : "switch (state) {\ncase STATE_FINDING_HEADER:  data.skipBytes(data.bytesLeft());\nbreak;\ncase STATE_READING_HEADER:if (continueRead(data,pesScratch.data,HEADER_SIZE)) {\nsetState(parseHeader() ? STATE_READING_HEADER_EXTENSION : STATE_FINDING_HEADER);\n}\nbreak;\ncase STATE_READING_HEADER_EXTENSION:int readLength=Math.min(MAX_HEADER_EXTENSION_SIZE,extendedHeaderLength);\nif (continueRead(data,pesScratch.data,readLength) && continueRead(data,null,extendedHeaderLength)) {\nparseHeaderExtension();\nflags|=dataAlignmentIndicator ? FLAG_DATA_ALIGNMENT_INDICATOR : 0;\nreader.packetStarted(timeUs,flags);\nsetState(STATE_READING_BODY);\n}\nbreak;\ncase STATE_READING_BODY:readLength=data.bytesLeft();\nint padding=payloadSize == -1 ? 0 : readLength - payloadSize;\nif (padding > 0) {\nreadLength-=padding;\ndata.setLimit(data.getPosition() + readLength);\n}\nreader.consume(data);\nif (payloadSize != -1) {\npayloadSize-=readLength;\nif (payloadSize == 0) {\nreader.packetFinished();\nsetState(STATE_READING_HEADER);\n}\n}\nbreak;\ndefault:throw new IllegalStateException();\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 152,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1562,
        "startLineNumber" : 108,
        "startColumnNumber" : 33,
        "endLineNumber" : 148,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\nswitch (state) {\ncase STATE_FINDING_HEADER:    data.skipBytes(data.bytesLeft());\n  break;\ncase STATE_READING_HEADER:if (continueRead(data,pesScratch.data,HEADER_SIZE)) {\n  setState(parseHeader() ? STATE_READING_HEADER_EXTENSION : STATE_FINDING_HEADER);\n}\nbreak;\ncase STATE_READING_HEADER_EXTENSION:int readLength=Math.min(MAX_HEADER_EXTENSION_SIZE,extendedHeaderLength);\nif (continueRead(data,pesScratch.data,readLength) && continueRead(data,null,extendedHeaderLength)) {\nparseHeaderExtension();\nflags|=dataAlignmentIndicator ? FLAG_DATA_ALIGNMENT_INDICATOR : 0;\nreader.packetStarted(timeUs,flags);\nsetState(STATE_READING_BODY);\n}\nbreak;\ncase STATE_READING_BODY:readLength=data.bytesLeft();\nint padding=payloadSize == -1 ? 0 : readLength - payloadSize;\nif (padding > 0) {\nreadLength-=padding;\ndata.setLimit(data.getPosition() + readLength);\n}\nreader.consume(data);\nif (payloadSize != -1) {\npayloadSize-=readLength;\nif (payloadSize == 0) {\nreader.packetFinished();\nsetState(STATE_READING_HEADER);\n}\n}\nbreak;\ndefault:throw new IllegalStateException();\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 153,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1591,
        "startLineNumber" : 108,
        "startColumnNumber" : 4,
        "endLineNumber" : 148,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (data.bytesLeft() > 0) {\nswitch (state) {\ncase STATE_FINDING_HEADER:    data.skipBytes(data.bytesLeft());\n  break;\ncase STATE_READING_HEADER:if (continueRead(data,pesScratch.data,HEADER_SIZE)) {\n  setState(parseHeader() ? STATE_READING_HEADER_EXTENSION : STATE_FINDING_HEADER);\n}\nbreak;\ncase STATE_READING_HEADER_EXTENSION:int readLength=Math.min(MAX_HEADER_EXTENSION_SIZE,extendedHeaderLength);\nif (continueRead(data,pesScratch.data,readLength) && continueRead(data,null,extendedHeaderLength)) {\nparseHeaderExtension();\nflags|=dataAlignmentIndicator ? FLAG_DATA_ALIGNMENT_INDICATOR : 0;\nreader.packetStarted(timeUs,flags);\nsetState(STATE_READING_BODY);\n}\nbreak;\ncase STATE_READING_BODY:readLength=data.bytesLeft();\nint padding=payloadSize == -1 ? 0 : readLength - payloadSize;\nif (padding > 0) {\nreadLength-=padding;\ndata.setLimit(data.getPosition() + readLength);\n}\nreader.consume(data);\nif (payloadSize != -1) {\npayloadSize-=readLength;\nif (payloadSize == 0) {\nreader.packetFinished();\nsetState(STATE_READING_HEADER);\n}\n}\nbreak;\ndefault:throw new IllegalStateException();\n}\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 159,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2713,
        "startLineNumber" : 81,
        "startColumnNumber" : 93,
        "endLineNumber" : 149,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if ((flags & FLAG_PAYLOAD_UNIT_START_INDICATOR) != 0) {\nswitch (state) {\ncase STATE_FINDING_HEADER:case STATE_READING_HEADER:      break;\ncase STATE_READING_HEADER_EXTENSION:    Log.w(TAG,\"Unexpected start indicator reading extended header\");\n  break;\ncase STATE_READING_BODY:if (payloadSize != -1) {\n  Log.w(TAG,\"Unexpected start indicator: expected \" + payloadSize + \" more bytes\");\n}\nreader.packetFinished();\nbreak;\ndefault:throw new IllegalStateException();\n}\nsetState(STATE_READING_HEADER);\n}\nwhile (data.bytesLeft() > 0) {\nswitch (state) {\ncase STATE_FINDING_HEADER:data.skipBytes(data.bytesLeft());\nbreak;\ncase STATE_READING_HEADER:if (continueRead(data,pesScratch.data,HEADER_SIZE)) {\nsetState(parseHeader() ? STATE_READING_HEADER_EXTENSION : STATE_FINDING_HEADER);\n}\nbreak;\ncase STATE_READING_HEADER_EXTENSION:int readLength=Math.min(MAX_HEADER_EXTENSION_SIZE,extendedHeaderLength);\nif (continueRead(data,pesScratch.data,readLength) && continueRead(data,null,extendedHeaderLength)) {\nparseHeaderExtension();\nflags|=dataAlignmentIndicator ? FLAG_DATA_ALIGNMENT_INDICATOR : 0;\nreader.packetStarted(timeUs,flags);\nsetState(STATE_READING_BODY);\n}\nbreak;\ncase STATE_READING_BODY:readLength=data.bytesLeft();\nint padding=payloadSize == -1 ? 0 : readLength - payloadSize;\nif (padding > 0) {\nreadLength-=padding;\ndata.setLimit(data.getPosition() + readLength);\n}\nreader.consume(data);\nif (payloadSize != -1) {\npayloadSize-=readLength;\nif (payloadSize == 0) {\nreader.packetFinished();\nsetState(STATE_READING_HEADER);\n}\n}\nbreak;\ndefault:throw new IllegalStateException();\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 215,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2816,
        "startLineNumber" : 80,
        "startColumnNumber" : 2,
        "endLineNumber" : 149,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public final void consume(ParsableByteArray data,@Flags int flags) throws ParserException {\n  if ((flags & FLAG_PAYLOAD_UNIT_START_INDICATOR) != 0) {\nswitch (state) {\ncase STATE_FINDING_HEADER:case STATE_READING_HEADER:      break;\ncase STATE_READING_HEADER_EXTENSION:    Log.w(TAG,\"Unexpected start indicator reading extended header\");\n  break;\ncase STATE_READING_BODY:if (payloadSize != -1) {\n  Log.w(TAG,\"Unexpected start indicator: expected \" + payloadSize + \" more bytes\");\n}\nreader.packetFinished();\nbreak;\ndefault:throw new IllegalStateException();\n}\nsetState(STATE_READING_HEADER);\n}\nwhile (data.bytesLeft() > 0) {\nswitch (state) {\ncase STATE_FINDING_HEADER:data.skipBytes(data.bytesLeft());\nbreak;\ncase STATE_READING_HEADER:if (continueRead(data,pesScratch.data,HEADER_SIZE)) {\nsetState(parseHeader() ? STATE_READING_HEADER_EXTENSION : STATE_FINDING_HEADER);\n}\nbreak;\ncase STATE_READING_HEADER_EXTENSION:int readLength=Math.min(MAX_HEADER_EXTENSION_SIZE,extendedHeaderLength);\nif (continueRead(data,pesScratch.data,readLength) && continueRead(data,null,extendedHeaderLength)) {\nparseHeaderExtension();\nflags|=dataAlignmentIndicator ? FLAG_DATA_ALIGNMENT_INDICATOR : 0;\nreader.packetStarted(timeUs,flags);\nsetState(STATE_READING_BODY);\n}\nbreak;\ncase STATE_READING_BODY:readLength=data.bytesLeft();\nint padding=payloadSize == -1 ? 0 : readLength - payloadSize;\nif (padding > 0) {\nreadLength-=padding;\ndata.setLimit(data.getPosition() + readLength);\n}\nreader.consume(data);\nif (payloadSize != -1) {\npayloadSize-=readLength;\nif (payloadSize == 0) {\nreader.packetFinished();\nsetState(STATE_READING_HEADER);\n}\n}\nbreak;\ndefault:throw new IllegalStateException();\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 233,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 131,
        "startColumnNumber" : 10,
        "endLineNumber" : 131,
        "endColumnNumber" : 73
      },
      "nodeContext" : "int padding=payloadSize == -1 ? 0 : readLength - payloadSize;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "payloadSize",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 131,
      "startColumnNumber" : 61,
      "endLineNumber" : 131,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,elseExpression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 131,
        "startColumnNumber" : 48,
        "endLineNumber" : 131,
        "endColumnNumber" : 72
      },
      "nodeContext" : "readLength - payloadSize",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 131,
        "startColumnNumber" : 24,
        "endLineNumber" : 131,
        "endColumnNumber" : 72
      },
      "nodeContext" : "payloadSize == -1 ? 0 : readLength - payloadSize",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 131,
        "startColumnNumber" : 14,
        "endLineNumber" : 131,
        "endColumnNumber" : 72
      },
      "nodeContext" : "padding=payloadSize == -1 ? 0 : readLength - payloadSize",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 131,
        "startColumnNumber" : 10,
        "endLineNumber" : 131,
        "endColumnNumber" : 73
      },
      "nodeContext" : "int padding=payloadSize == -1 ? 0 : readLength - payloadSize;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1548,
        "startLineNumber" : 109,
        "startColumnNumber" : 6,
        "endLineNumber" : 147,
        "endColumnNumber" : 7
      },
      "nodeContext" : "switch (state) {\ncase STATE_FINDING_HEADER:  data.skipBytes(data.bytesLeft());\nbreak;\ncase STATE_READING_HEADER:if (continueRead(data,pesScratch.data,HEADER_SIZE)) {\nsetState(parseHeader() ? STATE_READING_HEADER_EXTENSION : STATE_FINDING_HEADER);\n}\nbreak;\ncase STATE_READING_HEADER_EXTENSION:int readLength=Math.min(MAX_HEADER_EXTENSION_SIZE,extendedHeaderLength);\nif (continueRead(data,pesScratch.data,readLength) && continueRead(data,null,extendedHeaderLength)) {\nparseHeaderExtension();\nflags|=dataAlignmentIndicator ? FLAG_DATA_ALIGNMENT_INDICATOR : 0;\nreader.packetStarted(timeUs,flags);\nsetState(STATE_READING_BODY);\n}\nbreak;\ncase STATE_READING_BODY:readLength=data.bytesLeft();\nint padding=payloadSize == -1 ? 0 : readLength - payloadSize;\nif (padding > 0) {\nreadLength-=padding;\ndata.setLimit(data.getPosition() + readLength);\n}\nreader.consume(data);\nif (payloadSize != -1) {\npayloadSize-=readLength;\nif (payloadSize == 0) {\nreader.packetFinished();\nsetState(STATE_READING_HEADER);\n}\n}\nbreak;\ndefault:throw new IllegalStateException();\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 152,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1562,
        "startLineNumber" : 108,
        "startColumnNumber" : 33,
        "endLineNumber" : 148,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\nswitch (state) {\ncase STATE_FINDING_HEADER:    data.skipBytes(data.bytesLeft());\n  break;\ncase STATE_READING_HEADER:if (continueRead(data,pesScratch.data,HEADER_SIZE)) {\n  setState(parseHeader() ? STATE_READING_HEADER_EXTENSION : STATE_FINDING_HEADER);\n}\nbreak;\ncase STATE_READING_HEADER_EXTENSION:int readLength=Math.min(MAX_HEADER_EXTENSION_SIZE,extendedHeaderLength);\nif (continueRead(data,pesScratch.data,readLength) && continueRead(data,null,extendedHeaderLength)) {\nparseHeaderExtension();\nflags|=dataAlignmentIndicator ? FLAG_DATA_ALIGNMENT_INDICATOR : 0;\nreader.packetStarted(timeUs,flags);\nsetState(STATE_READING_BODY);\n}\nbreak;\ncase STATE_READING_BODY:readLength=data.bytesLeft();\nint padding=payloadSize == -1 ? 0 : readLength - payloadSize;\nif (padding > 0) {\nreadLength-=padding;\ndata.setLimit(data.getPosition() + readLength);\n}\nreader.consume(data);\nif (payloadSize != -1) {\npayloadSize-=readLength;\nif (payloadSize == 0) {\nreader.packetFinished();\nsetState(STATE_READING_HEADER);\n}\n}\nbreak;\ndefault:throw new IllegalStateException();\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 153,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1591,
        "startLineNumber" : 108,
        "startColumnNumber" : 4,
        "endLineNumber" : 148,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (data.bytesLeft() > 0) {\nswitch (state) {\ncase STATE_FINDING_HEADER:    data.skipBytes(data.bytesLeft());\n  break;\ncase STATE_READING_HEADER:if (continueRead(data,pesScratch.data,HEADER_SIZE)) {\n  setState(parseHeader() ? STATE_READING_HEADER_EXTENSION : STATE_FINDING_HEADER);\n}\nbreak;\ncase STATE_READING_HEADER_EXTENSION:int readLength=Math.min(MAX_HEADER_EXTENSION_SIZE,extendedHeaderLength);\nif (continueRead(data,pesScratch.data,readLength) && continueRead(data,null,extendedHeaderLength)) {\nparseHeaderExtension();\nflags|=dataAlignmentIndicator ? FLAG_DATA_ALIGNMENT_INDICATOR : 0;\nreader.packetStarted(timeUs,flags);\nsetState(STATE_READING_BODY);\n}\nbreak;\ncase STATE_READING_BODY:readLength=data.bytesLeft();\nint padding=payloadSize == -1 ? 0 : readLength - payloadSize;\nif (padding > 0) {\nreadLength-=padding;\ndata.setLimit(data.getPosition() + readLength);\n}\nreader.consume(data);\nif (payloadSize != -1) {\npayloadSize-=readLength;\nif (payloadSize == 0) {\nreader.packetFinished();\nsetState(STATE_READING_HEADER);\n}\n}\nbreak;\ndefault:throw new IllegalStateException();\n}\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 159,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2713,
        "startLineNumber" : 81,
        "startColumnNumber" : 93,
        "endLineNumber" : 149,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if ((flags & FLAG_PAYLOAD_UNIT_START_INDICATOR) != 0) {\nswitch (state) {\ncase STATE_FINDING_HEADER:case STATE_READING_HEADER:      break;\ncase STATE_READING_HEADER_EXTENSION:    Log.w(TAG,\"Unexpected start indicator reading extended header\");\n  break;\ncase STATE_READING_BODY:if (payloadSize != -1) {\n  Log.w(TAG,\"Unexpected start indicator: expected \" + payloadSize + \" more bytes\");\n}\nreader.packetFinished();\nbreak;\ndefault:throw new IllegalStateException();\n}\nsetState(STATE_READING_HEADER);\n}\nwhile (data.bytesLeft() > 0) {\nswitch (state) {\ncase STATE_FINDING_HEADER:data.skipBytes(data.bytesLeft());\nbreak;\ncase STATE_READING_HEADER:if (continueRead(data,pesScratch.data,HEADER_SIZE)) {\nsetState(parseHeader() ? STATE_READING_HEADER_EXTENSION : STATE_FINDING_HEADER);\n}\nbreak;\ncase STATE_READING_HEADER_EXTENSION:int readLength=Math.min(MAX_HEADER_EXTENSION_SIZE,extendedHeaderLength);\nif (continueRead(data,pesScratch.data,readLength) && continueRead(data,null,extendedHeaderLength)) {\nparseHeaderExtension();\nflags|=dataAlignmentIndicator ? FLAG_DATA_ALIGNMENT_INDICATOR : 0;\nreader.packetStarted(timeUs,flags);\nsetState(STATE_READING_BODY);\n}\nbreak;\ncase STATE_READING_BODY:readLength=data.bytesLeft();\nint padding=payloadSize == -1 ? 0 : readLength - payloadSize;\nif (padding > 0) {\nreadLength-=padding;\ndata.setLimit(data.getPosition() + readLength);\n}\nreader.consume(data);\nif (payloadSize != -1) {\npayloadSize-=readLength;\nif (payloadSize == 0) {\nreader.packetFinished();\nsetState(STATE_READING_HEADER);\n}\n}\nbreak;\ndefault:throw new IllegalStateException();\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 215,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2816,
        "startLineNumber" : 80,
        "startColumnNumber" : 2,
        "endLineNumber" : 149,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public final void consume(ParsableByteArray data,@Flags int flags) throws ParserException {\n  if ((flags & FLAG_PAYLOAD_UNIT_START_INDICATOR) != 0) {\nswitch (state) {\ncase STATE_FINDING_HEADER:case STATE_READING_HEADER:      break;\ncase STATE_READING_HEADER_EXTENSION:    Log.w(TAG,\"Unexpected start indicator reading extended header\");\n  break;\ncase STATE_READING_BODY:if (payloadSize != -1) {\n  Log.w(TAG,\"Unexpected start indicator: expected \" + payloadSize + \" more bytes\");\n}\nreader.packetFinished();\nbreak;\ndefault:throw new IllegalStateException();\n}\nsetState(STATE_READING_HEADER);\n}\nwhile (data.bytesLeft() > 0) {\nswitch (state) {\ncase STATE_FINDING_HEADER:data.skipBytes(data.bytesLeft());\nbreak;\ncase STATE_READING_HEADER:if (continueRead(data,pesScratch.data,HEADER_SIZE)) {\nsetState(parseHeader() ? STATE_READING_HEADER_EXTENSION : STATE_FINDING_HEADER);\n}\nbreak;\ncase STATE_READING_HEADER_EXTENSION:int readLength=Math.min(MAX_HEADER_EXTENSION_SIZE,extendedHeaderLength);\nif (continueRead(data,pesScratch.data,readLength) && continueRead(data,null,extendedHeaderLength)) {\nparseHeaderExtension();\nflags|=dataAlignmentIndicator ? FLAG_DATA_ALIGNMENT_INDICATOR : 0;\nreader.packetStarted(timeUs,flags);\nsetState(STATE_READING_BODY);\n}\nbreak;\ncase STATE_READING_BODY:readLength=data.bytesLeft();\nint padding=payloadSize == -1 ? 0 : readLength - payloadSize;\nif (padding > 0) {\nreadLength-=padding;\ndata.setLimit(data.getPosition() + readLength);\n}\nreader.consume(data);\nif (payloadSize != -1) {\npayloadSize-=readLength;\nif (payloadSize == 0) {\nreader.packetFinished();\nsetState(STATE_READING_HEADER);\n}\n}\nbreak;\ndefault:throw new IllegalStateException();\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 233,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 131,
        "startColumnNumber" : 10,
        "endLineNumber" : 131,
        "endColumnNumber" : 73
      },
      "nodeContext" : "int padding=payloadSize == -1 ? 0 : readLength - payloadSize;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "payloadSize",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 137,
      "startColumnNumber" : 14,
      "endLineNumber" : 137,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 137,
        "startColumnNumber" : 14,
        "endLineNumber" : 137,
        "endColumnNumber" : 31
      },
      "nodeContext" : "payloadSize != -1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 210,
        "startLineNumber" : 137,
        "startColumnNumber" : 10,
        "endLineNumber" : 143,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (payloadSize != -1) {\n  payloadSize-=readLength;\n  if (payloadSize == 0) {\n    reader.packetFinished();\n    setState(STATE_READING_HEADER);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1548,
        "startLineNumber" : 109,
        "startColumnNumber" : 6,
        "endLineNumber" : 147,
        "endColumnNumber" : 7
      },
      "nodeContext" : "switch (state) {\ncase STATE_FINDING_HEADER:  data.skipBytes(data.bytesLeft());\nbreak;\ncase STATE_READING_HEADER:if (continueRead(data,pesScratch.data,HEADER_SIZE)) {\nsetState(parseHeader() ? STATE_READING_HEADER_EXTENSION : STATE_FINDING_HEADER);\n}\nbreak;\ncase STATE_READING_HEADER_EXTENSION:int readLength=Math.min(MAX_HEADER_EXTENSION_SIZE,extendedHeaderLength);\nif (continueRead(data,pesScratch.data,readLength) && continueRead(data,null,extendedHeaderLength)) {\nparseHeaderExtension();\nflags|=dataAlignmentIndicator ? FLAG_DATA_ALIGNMENT_INDICATOR : 0;\nreader.packetStarted(timeUs,flags);\nsetState(STATE_READING_BODY);\n}\nbreak;\ncase STATE_READING_BODY:readLength=data.bytesLeft();\nint padding=payloadSize == -1 ? 0 : readLength - payloadSize;\nif (padding > 0) {\nreadLength-=padding;\ndata.setLimit(data.getPosition() + readLength);\n}\nreader.consume(data);\nif (payloadSize != -1) {\npayloadSize-=readLength;\nif (payloadSize == 0) {\nreader.packetFinished();\nsetState(STATE_READING_HEADER);\n}\n}\nbreak;\ndefault:throw new IllegalStateException();\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 152,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1562,
        "startLineNumber" : 108,
        "startColumnNumber" : 33,
        "endLineNumber" : 148,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\nswitch (state) {\ncase STATE_FINDING_HEADER:    data.skipBytes(data.bytesLeft());\n  break;\ncase STATE_READING_HEADER:if (continueRead(data,pesScratch.data,HEADER_SIZE)) {\n  setState(parseHeader() ? STATE_READING_HEADER_EXTENSION : STATE_FINDING_HEADER);\n}\nbreak;\ncase STATE_READING_HEADER_EXTENSION:int readLength=Math.min(MAX_HEADER_EXTENSION_SIZE,extendedHeaderLength);\nif (continueRead(data,pesScratch.data,readLength) && continueRead(data,null,extendedHeaderLength)) {\nparseHeaderExtension();\nflags|=dataAlignmentIndicator ? FLAG_DATA_ALIGNMENT_INDICATOR : 0;\nreader.packetStarted(timeUs,flags);\nsetState(STATE_READING_BODY);\n}\nbreak;\ncase STATE_READING_BODY:readLength=data.bytesLeft();\nint padding=payloadSize == -1 ? 0 : readLength - payloadSize;\nif (padding > 0) {\nreadLength-=padding;\ndata.setLimit(data.getPosition() + readLength);\n}\nreader.consume(data);\nif (payloadSize != -1) {\npayloadSize-=readLength;\nif (payloadSize == 0) {\nreader.packetFinished();\nsetState(STATE_READING_HEADER);\n}\n}\nbreak;\ndefault:throw new IllegalStateException();\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 153,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1591,
        "startLineNumber" : 108,
        "startColumnNumber" : 4,
        "endLineNumber" : 148,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (data.bytesLeft() > 0) {\nswitch (state) {\ncase STATE_FINDING_HEADER:    data.skipBytes(data.bytesLeft());\n  break;\ncase STATE_READING_HEADER:if (continueRead(data,pesScratch.data,HEADER_SIZE)) {\n  setState(parseHeader() ? STATE_READING_HEADER_EXTENSION : STATE_FINDING_HEADER);\n}\nbreak;\ncase STATE_READING_HEADER_EXTENSION:int readLength=Math.min(MAX_HEADER_EXTENSION_SIZE,extendedHeaderLength);\nif (continueRead(data,pesScratch.data,readLength) && continueRead(data,null,extendedHeaderLength)) {\nparseHeaderExtension();\nflags|=dataAlignmentIndicator ? FLAG_DATA_ALIGNMENT_INDICATOR : 0;\nreader.packetStarted(timeUs,flags);\nsetState(STATE_READING_BODY);\n}\nbreak;\ncase STATE_READING_BODY:readLength=data.bytesLeft();\nint padding=payloadSize == -1 ? 0 : readLength - payloadSize;\nif (padding > 0) {\nreadLength-=padding;\ndata.setLimit(data.getPosition() + readLength);\n}\nreader.consume(data);\nif (payloadSize != -1) {\npayloadSize-=readLength;\nif (payloadSize == 0) {\nreader.packetFinished();\nsetState(STATE_READING_HEADER);\n}\n}\nbreak;\ndefault:throw new IllegalStateException();\n}\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 159,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2713,
        "startLineNumber" : 81,
        "startColumnNumber" : 93,
        "endLineNumber" : 149,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if ((flags & FLAG_PAYLOAD_UNIT_START_INDICATOR) != 0) {\nswitch (state) {\ncase STATE_FINDING_HEADER:case STATE_READING_HEADER:      break;\ncase STATE_READING_HEADER_EXTENSION:    Log.w(TAG,\"Unexpected start indicator reading extended header\");\n  break;\ncase STATE_READING_BODY:if (payloadSize != -1) {\n  Log.w(TAG,\"Unexpected start indicator: expected \" + payloadSize + \" more bytes\");\n}\nreader.packetFinished();\nbreak;\ndefault:throw new IllegalStateException();\n}\nsetState(STATE_READING_HEADER);\n}\nwhile (data.bytesLeft() > 0) {\nswitch (state) {\ncase STATE_FINDING_HEADER:data.skipBytes(data.bytesLeft());\nbreak;\ncase STATE_READING_HEADER:if (continueRead(data,pesScratch.data,HEADER_SIZE)) {\nsetState(parseHeader() ? STATE_READING_HEADER_EXTENSION : STATE_FINDING_HEADER);\n}\nbreak;\ncase STATE_READING_HEADER_EXTENSION:int readLength=Math.min(MAX_HEADER_EXTENSION_SIZE,extendedHeaderLength);\nif (continueRead(data,pesScratch.data,readLength) && continueRead(data,null,extendedHeaderLength)) {\nparseHeaderExtension();\nflags|=dataAlignmentIndicator ? FLAG_DATA_ALIGNMENT_INDICATOR : 0;\nreader.packetStarted(timeUs,flags);\nsetState(STATE_READING_BODY);\n}\nbreak;\ncase STATE_READING_BODY:readLength=data.bytesLeft();\nint padding=payloadSize == -1 ? 0 : readLength - payloadSize;\nif (padding > 0) {\nreadLength-=padding;\ndata.setLimit(data.getPosition() + readLength);\n}\nreader.consume(data);\nif (payloadSize != -1) {\npayloadSize-=readLength;\nif (payloadSize == 0) {\nreader.packetFinished();\nsetState(STATE_READING_HEADER);\n}\n}\nbreak;\ndefault:throw new IllegalStateException();\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 215,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2816,
        "startLineNumber" : 80,
        "startColumnNumber" : 2,
        "endLineNumber" : 149,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public final void consume(ParsableByteArray data,@Flags int flags) throws ParserException {\n  if ((flags & FLAG_PAYLOAD_UNIT_START_INDICATOR) != 0) {\nswitch (state) {\ncase STATE_FINDING_HEADER:case STATE_READING_HEADER:      break;\ncase STATE_READING_HEADER_EXTENSION:    Log.w(TAG,\"Unexpected start indicator reading extended header\");\n  break;\ncase STATE_READING_BODY:if (payloadSize != -1) {\n  Log.w(TAG,\"Unexpected start indicator: expected \" + payloadSize + \" more bytes\");\n}\nreader.packetFinished();\nbreak;\ndefault:throw new IllegalStateException();\n}\nsetState(STATE_READING_HEADER);\n}\nwhile (data.bytesLeft() > 0) {\nswitch (state) {\ncase STATE_FINDING_HEADER:data.skipBytes(data.bytesLeft());\nbreak;\ncase STATE_READING_HEADER:if (continueRead(data,pesScratch.data,HEADER_SIZE)) {\nsetState(parseHeader() ? STATE_READING_HEADER_EXTENSION : STATE_FINDING_HEADER);\n}\nbreak;\ncase STATE_READING_HEADER_EXTENSION:int readLength=Math.min(MAX_HEADER_EXTENSION_SIZE,extendedHeaderLength);\nif (continueRead(data,pesScratch.data,readLength) && continueRead(data,null,extendedHeaderLength)) {\nparseHeaderExtension();\nflags|=dataAlignmentIndicator ? FLAG_DATA_ALIGNMENT_INDICATOR : 0;\nreader.packetStarted(timeUs,flags);\nsetState(STATE_READING_BODY);\n}\nbreak;\ncase STATE_READING_BODY:readLength=data.bytesLeft();\nint padding=payloadSize == -1 ? 0 : readLength - payloadSize;\nif (padding > 0) {\nreadLength-=padding;\ndata.setLimit(data.getPosition() + readLength);\n}\nreader.consume(data);\nif (payloadSize != -1) {\npayloadSize-=readLength;\nif (payloadSize == 0) {\nreader.packetFinished();\nsetState(STATE_READING_HEADER);\n}\n}\nbreak;\ndefault:throw new IllegalStateException();\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 233,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 137,
        "startColumnNumber" : 14,
        "endLineNumber" : 137,
        "endColumnNumber" : 31
      },
      "nodeContext" : "payloadSize != -1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "payloadSize",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 139,
      "startColumnNumber" : 16,
      "endLineNumber" : 139,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 139,
        "startColumnNumber" : 16,
        "endLineNumber" : 139,
        "endColumnNumber" : 32
      },
      "nodeContext" : "payloadSize == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 139,
        "startColumnNumber" : 12,
        "endLineNumber" : 142,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (payloadSize == 0) {\n  reader.packetFinished();\n  setState(STATE_READING_HEADER);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 187,
        "startLineNumber" : 137,
        "startColumnNumber" : 33,
        "endLineNumber" : 143,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  payloadSize-=readLength;\n  if (payloadSize == 0) {\n    reader.packetFinished();\n    setState(STATE_READING_HEADER);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 210,
        "startLineNumber" : 137,
        "startColumnNumber" : 10,
        "endLineNumber" : 143,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (payloadSize != -1) {\n  payloadSize-=readLength;\n  if (payloadSize == 0) {\n    reader.packetFinished();\n    setState(STATE_READING_HEADER);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1548,
        "startLineNumber" : 109,
        "startColumnNumber" : 6,
        "endLineNumber" : 147,
        "endColumnNumber" : 7
      },
      "nodeContext" : "switch (state) {\ncase STATE_FINDING_HEADER:  data.skipBytes(data.bytesLeft());\nbreak;\ncase STATE_READING_HEADER:if (continueRead(data,pesScratch.data,HEADER_SIZE)) {\nsetState(parseHeader() ? STATE_READING_HEADER_EXTENSION : STATE_FINDING_HEADER);\n}\nbreak;\ncase STATE_READING_HEADER_EXTENSION:int readLength=Math.min(MAX_HEADER_EXTENSION_SIZE,extendedHeaderLength);\nif (continueRead(data,pesScratch.data,readLength) && continueRead(data,null,extendedHeaderLength)) {\nparseHeaderExtension();\nflags|=dataAlignmentIndicator ? FLAG_DATA_ALIGNMENT_INDICATOR : 0;\nreader.packetStarted(timeUs,flags);\nsetState(STATE_READING_BODY);\n}\nbreak;\ncase STATE_READING_BODY:readLength=data.bytesLeft();\nint padding=payloadSize == -1 ? 0 : readLength - payloadSize;\nif (padding > 0) {\nreadLength-=padding;\ndata.setLimit(data.getPosition() + readLength);\n}\nreader.consume(data);\nif (payloadSize != -1) {\npayloadSize-=readLength;\nif (payloadSize == 0) {\nreader.packetFinished();\nsetState(STATE_READING_HEADER);\n}\n}\nbreak;\ndefault:throw new IllegalStateException();\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 152,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1562,
        "startLineNumber" : 108,
        "startColumnNumber" : 33,
        "endLineNumber" : 148,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\nswitch (state) {\ncase STATE_FINDING_HEADER:    data.skipBytes(data.bytesLeft());\n  break;\ncase STATE_READING_HEADER:if (continueRead(data,pesScratch.data,HEADER_SIZE)) {\n  setState(parseHeader() ? STATE_READING_HEADER_EXTENSION : STATE_FINDING_HEADER);\n}\nbreak;\ncase STATE_READING_HEADER_EXTENSION:int readLength=Math.min(MAX_HEADER_EXTENSION_SIZE,extendedHeaderLength);\nif (continueRead(data,pesScratch.data,readLength) && continueRead(data,null,extendedHeaderLength)) {\nparseHeaderExtension();\nflags|=dataAlignmentIndicator ? FLAG_DATA_ALIGNMENT_INDICATOR : 0;\nreader.packetStarted(timeUs,flags);\nsetState(STATE_READING_BODY);\n}\nbreak;\ncase STATE_READING_BODY:readLength=data.bytesLeft();\nint padding=payloadSize == -1 ? 0 : readLength - payloadSize;\nif (padding > 0) {\nreadLength-=padding;\ndata.setLimit(data.getPosition() + readLength);\n}\nreader.consume(data);\nif (payloadSize != -1) {\npayloadSize-=readLength;\nif (payloadSize == 0) {\nreader.packetFinished();\nsetState(STATE_READING_HEADER);\n}\n}\nbreak;\ndefault:throw new IllegalStateException();\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 153,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1591,
        "startLineNumber" : 108,
        "startColumnNumber" : 4,
        "endLineNumber" : 148,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (data.bytesLeft() > 0) {\nswitch (state) {\ncase STATE_FINDING_HEADER:    data.skipBytes(data.bytesLeft());\n  break;\ncase STATE_READING_HEADER:if (continueRead(data,pesScratch.data,HEADER_SIZE)) {\n  setState(parseHeader() ? STATE_READING_HEADER_EXTENSION : STATE_FINDING_HEADER);\n}\nbreak;\ncase STATE_READING_HEADER_EXTENSION:int readLength=Math.min(MAX_HEADER_EXTENSION_SIZE,extendedHeaderLength);\nif (continueRead(data,pesScratch.data,readLength) && continueRead(data,null,extendedHeaderLength)) {\nparseHeaderExtension();\nflags|=dataAlignmentIndicator ? FLAG_DATA_ALIGNMENT_INDICATOR : 0;\nreader.packetStarted(timeUs,flags);\nsetState(STATE_READING_BODY);\n}\nbreak;\ncase STATE_READING_BODY:readLength=data.bytesLeft();\nint padding=payloadSize == -1 ? 0 : readLength - payloadSize;\nif (padding > 0) {\nreadLength-=padding;\ndata.setLimit(data.getPosition() + readLength);\n}\nreader.consume(data);\nif (payloadSize != -1) {\npayloadSize-=readLength;\nif (payloadSize == 0) {\nreader.packetFinished();\nsetState(STATE_READING_HEADER);\n}\n}\nbreak;\ndefault:throw new IllegalStateException();\n}\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 159,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2713,
        "startLineNumber" : 81,
        "startColumnNumber" : 93,
        "endLineNumber" : 149,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if ((flags & FLAG_PAYLOAD_UNIT_START_INDICATOR) != 0) {\nswitch (state) {\ncase STATE_FINDING_HEADER:case STATE_READING_HEADER:      break;\ncase STATE_READING_HEADER_EXTENSION:    Log.w(TAG,\"Unexpected start indicator reading extended header\");\n  break;\ncase STATE_READING_BODY:if (payloadSize != -1) {\n  Log.w(TAG,\"Unexpected start indicator: expected \" + payloadSize + \" more bytes\");\n}\nreader.packetFinished();\nbreak;\ndefault:throw new IllegalStateException();\n}\nsetState(STATE_READING_HEADER);\n}\nwhile (data.bytesLeft() > 0) {\nswitch (state) {\ncase STATE_FINDING_HEADER:data.skipBytes(data.bytesLeft());\nbreak;\ncase STATE_READING_HEADER:if (continueRead(data,pesScratch.data,HEADER_SIZE)) {\nsetState(parseHeader() ? STATE_READING_HEADER_EXTENSION : STATE_FINDING_HEADER);\n}\nbreak;\ncase STATE_READING_HEADER_EXTENSION:int readLength=Math.min(MAX_HEADER_EXTENSION_SIZE,extendedHeaderLength);\nif (continueRead(data,pesScratch.data,readLength) && continueRead(data,null,extendedHeaderLength)) {\nparseHeaderExtension();\nflags|=dataAlignmentIndicator ? FLAG_DATA_ALIGNMENT_INDICATOR : 0;\nreader.packetStarted(timeUs,flags);\nsetState(STATE_READING_BODY);\n}\nbreak;\ncase STATE_READING_BODY:readLength=data.bytesLeft();\nint padding=payloadSize == -1 ? 0 : readLength - payloadSize;\nif (padding > 0) {\nreadLength-=padding;\ndata.setLimit(data.getPosition() + readLength);\n}\nreader.consume(data);\nif (payloadSize != -1) {\npayloadSize-=readLength;\nif (payloadSize == 0) {\nreader.packetFinished();\nsetState(STATE_READING_HEADER);\n}\n}\nbreak;\ndefault:throw new IllegalStateException();\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 215,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2816,
        "startLineNumber" : 80,
        "startColumnNumber" : 2,
        "endLineNumber" : 149,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public final void consume(ParsableByteArray data,@Flags int flags) throws ParserException {\n  if ((flags & FLAG_PAYLOAD_UNIT_START_INDICATOR) != 0) {\nswitch (state) {\ncase STATE_FINDING_HEADER:case STATE_READING_HEADER:      break;\ncase STATE_READING_HEADER_EXTENSION:    Log.w(TAG,\"Unexpected start indicator reading extended header\");\n  break;\ncase STATE_READING_BODY:if (payloadSize != -1) {\n  Log.w(TAG,\"Unexpected start indicator: expected \" + payloadSize + \" more bytes\");\n}\nreader.packetFinished();\nbreak;\ndefault:throw new IllegalStateException();\n}\nsetState(STATE_READING_HEADER);\n}\nwhile (data.bytesLeft() > 0) {\nswitch (state) {\ncase STATE_FINDING_HEADER:data.skipBytes(data.bytesLeft());\nbreak;\ncase STATE_READING_HEADER:if (continueRead(data,pesScratch.data,HEADER_SIZE)) {\nsetState(parseHeader() ? STATE_READING_HEADER_EXTENSION : STATE_FINDING_HEADER);\n}\nbreak;\ncase STATE_READING_HEADER_EXTENSION:int readLength=Math.min(MAX_HEADER_EXTENSION_SIZE,extendedHeaderLength);\nif (continueRead(data,pesScratch.data,readLength) && continueRead(data,null,extendedHeaderLength)) {\nparseHeaderExtension();\nflags|=dataAlignmentIndicator ? FLAG_DATA_ALIGNMENT_INDICATOR : 0;\nreader.packetStarted(timeUs,flags);\nsetState(STATE_READING_BODY);\n}\nbreak;\ncase STATE_READING_BODY:readLength=data.bytesLeft();\nint padding=payloadSize == -1 ? 0 : readLength - payloadSize;\nif (padding > 0) {\nreadLength-=padding;\ndata.setLimit(data.getPosition() + readLength);\n}\nreader.consume(data);\nif (payloadSize != -1) {\npayloadSize-=readLength;\nif (payloadSize == 0) {\nreader.packetFinished();\nsetState(STATE_READING_HEADER);\n}\n}\nbreak;\ndefault:throw new IllegalStateException();\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 233,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 139,
        "startColumnNumber" : 16,
        "endLineNumber" : 139,
        "endColumnNumber" : 32
      },
      "nodeContext" : "payloadSize == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 96,
    "startColumnNumber" : 14,
    "endLineNumber" : 96,
    "endColumnNumber" : 25
  }, {
    "charLength" : 11,
    "startLineNumber" : 97,
    "startColumnNumber" : 65,
    "endLineNumber" : 97,
    "endColumnNumber" : 76
  }, {
    "charLength" : 11,
    "startLineNumber" : 131,
    "startColumnNumber" : 24,
    "endLineNumber" : 131,
    "endColumnNumber" : 35
  }, {
    "charLength" : 11,
    "startLineNumber" : 131,
    "startColumnNumber" : 61,
    "endLineNumber" : 131,
    "endColumnNumber" : 72
  }, {
    "charLength" : 11,
    "startLineNumber" : 137,
    "startColumnNumber" : 14,
    "endLineNumber" : 137,
    "endColumnNumber" : 25
  }, {
    "charLength" : 11,
    "startLineNumber" : 139,
    "startColumnNumber" : 16,
    "endLineNumber" : 139,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 1
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  } ]
}