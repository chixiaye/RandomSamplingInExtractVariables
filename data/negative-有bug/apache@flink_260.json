{
  "id" : 260,
  "expression" : "InputTypeStrategies.varyingSequence(argumentNames,argumentStrategies)",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-table/flink-table-common/src/main/java/org/apache/flink/table/types/extraction/FunctionSignatureTemplate.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "InputTypeStrategies.varyingSequence(argumentNames,argumentStrategies)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 70,
      "startLineNumber" : 78,
      "startColumnNumber" : 27,
      "endLineNumber" : 78,
      "endColumnNumber" : 97
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 78,
        "startColumnNumber" : 16,
        "endLineNumber" : 78,
        "endColumnNumber" : 97
      },
      "nodeContext" : "strategy=InputTypeStrategies.varyingSequence(argumentNames,argumentStrategies)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 78,
        "startColumnNumber" : 16,
        "endLineNumber" : 78,
        "endColumnNumber" : 98
      },
      "nodeContext" : "strategy=InputTypeStrategies.varyingSequence(argumentNames,argumentStrategies);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 77,
        "startColumnNumber" : 19,
        "endLineNumber" : 79,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  strategy=InputTypeStrategies.varyingSequence(argumentNames,argumentStrategies);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 246,
        "startLineNumber" : 75,
        "startColumnNumber" : 12,
        "endLineNumber" : 79,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (argumentNames == null) {\n  strategy=InputTypeStrategies.varyingSequence(argumentStrategies);\n}\n else {\n  strategy=InputTypeStrategies.varyingSequence(argumentNames,argumentStrategies);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 270,
        "startLineNumber" : 74,
        "startColumnNumber" : 23,
        "endLineNumber" : 80,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (argumentNames == null) {\n    strategy=InputTypeStrategies.varyingSequence(argumentStrategies);\n  }\n else {\n    strategy=InputTypeStrategies.varyingSequence(argumentNames,argumentStrategies);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 547,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 86,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (isVarArgs) {\n  if (argumentNames == null) {\n    strategy=InputTypeStrategies.varyingSequence(argumentStrategies);\n  }\n else {\n    strategy=InputTypeStrategies.varyingSequence(argumentNames,argumentStrategies);\n  }\n}\n else {\n  if (argumentNames == null) {\n    strategy=InputTypeStrategies.sequence(argumentStrategies);\n  }\n else {\n    strategy=InputTypeStrategies.sequence(argumentNames,argumentStrategies);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 46,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 874,
        "startLineNumber" : 67,
        "startColumnNumber" : 44,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final ArgumentTypeStrategy[] argumentStrategies=argumentTemplates.stream().map(FunctionArgumentTemplate::toArgumentTypeStrategy).toArray(ArgumentTypeStrategy[]::new);\n  final InputTypeStrategy strategy;\n  if (isVarArgs) {\n    if (argumentNames == null) {\n      strategy=InputTypeStrategies.varyingSequence(argumentStrategies);\n    }\n else {\n      strategy=InputTypeStrategies.varyingSequence(argumentNames,argumentStrategies);\n    }\n  }\n else {\n    if (argumentNames == null) {\n      strategy=InputTypeStrategies.sequence(argumentStrategies);\n    }\n else {\n      strategy=InputTypeStrategies.sequence(argumentNames,argumentStrategies);\n    }\n  }\n  return strategy;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 78,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 914,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "InputTypeStrategy toInputTypeStrategy(){\n  final ArgumentTypeStrategy[] argumentStrategies=argumentTemplates.stream().map(FunctionArgumentTemplate::toArgumentTypeStrategy).toArray(ArgumentTypeStrategy[]::new);\n  final InputTypeStrategy strategy;\n  if (isVarArgs) {\n    if (argumentNames == null) {\n      strategy=InputTypeStrategies.varyingSequence(argumentStrategies);\n    }\n else {\n      strategy=InputTypeStrategies.varyingSequence(argumentNames,argumentStrategies);\n    }\n  }\n else {\n    if (argumentNames == null) {\n      strategy=InputTypeStrategies.sequence(argumentStrategies);\n    }\n else {\n      strategy=InputTypeStrategies.sequence(argumentNames,argumentStrategies);\n    }\n  }\n  return strategy;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 82,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 78,
        "startColumnNumber" : 16,
        "endLineNumber" : 78,
        "endColumnNumber" : 98
      },
      "nodeContext" : "strategy=InputTypeStrategies.varyingSequence(argumentNames,argumentStrategies);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "org.apache.flink.table.types.inference.InputTypeStrategy"
  } ],
  "positionList" : [ {
    "charLength" : 70,
    "startLineNumber" : 78,
    "startColumnNumber" : 27,
    "endLineNumber" : 78,
    "endColumnNumber" : 97
  } ],
  "layoutRelationDataList" : [ ]
}