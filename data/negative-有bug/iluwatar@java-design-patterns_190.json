{
  "id" : 190,
  "expression" : "outputFile",
  "projectName" : "iluwatar@java-design-patterns",
  "commitID" : "428efc7d53449a51d25dfda4141742629ecbb0b2",
  "filePath" : "/tolerant-reader/src/test/java/com/iluwatar/tolerantreader/RainbowFishSerializerTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "outputFile",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 65,
      "startColumnNumber" : 38,
      "endLineNumber" : 65,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 65,
        "startColumnNumber" : 38,
        "endLineNumber" : 65,
        "endColumnNumber" : 58
      },
      "nodeContext" : "outputFile.getPath()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 59
      },
      "nodeContext" : "RainbowFishSerializer.writeV1(V1,outputFile.getPath())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 60
      },
      "nodeContext" : "RainbowFishSerializer.writeV1(V1,outputFile.getPath());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 442,
        "startLineNumber" : 63,
        "startColumnNumber" : 51,
        "endLineNumber" : 74,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final var outputFile=this.testFolder.newFile();\n  RainbowFishSerializer.writeV1(V1,outputFile.getPath());\n  final var fish=RainbowFishSerializer.readV1(outputFile.getPath());\n  assertNotSame(V1,fish);\n  assertEquals(V1.getName(),fish.getName());\n  assertEquals(V1.getAge(),fish.getAge());\n  assertEquals(V1.getLengthMeters(),fish.getLengthMeters());\n  assertEquals(V1.getWeightTons(),fish.getWeightTons());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 585,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 74,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Verify if a fish, written as version 1 can be read back as version 1\n */\n@Test public void testWriteV1ReadV1() throws Exception {\n  final var outputFile=this.testFolder.newFile();\n  RainbowFishSerializer.writeV1(V1,outputFile.getPath());\n  final var fish=RainbowFishSerializer.readV1(outputFile.getPath());\n  assertNotSame(V1,fish);\n  assertEquals(V1.getName(),fish.getName());\n  assertEquals(V1.getAge(),fish.getAge());\n  assertEquals(V1.getLengthMeters(),fish.getLengthMeters());\n  assertEquals(V1.getWeightTons(),fish.getWeightTons());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 82,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 60
      },
      "nodeContext" : "RainbowFishSerializer.writeV1(V1,outputFile.getPath());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Object"
  }, {
    "nodeContext" : "outputFile",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 67,
      "startColumnNumber" : 50,
      "endLineNumber" : 67,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 67,
        "startColumnNumber" : 50,
        "endLineNumber" : 67,
        "endColumnNumber" : 70
      },
      "nodeContext" : "outputFile.getPath()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 67,
        "startColumnNumber" : 21,
        "endLineNumber" : 67,
        "endColumnNumber" : 71
      },
      "nodeContext" : "RainbowFishSerializer.readV1(outputFile.getPath())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 67,
        "startColumnNumber" : 14,
        "endLineNumber" : 67,
        "endColumnNumber" : 71
      },
      "nodeContext" : "fish=RainbowFishSerializer.readV1(outputFile.getPath())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 72
      },
      "nodeContext" : "final var fish=RainbowFishSerializer.readV1(outputFile.getPath());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 442,
        "startLineNumber" : 63,
        "startColumnNumber" : 51,
        "endLineNumber" : 74,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final var outputFile=this.testFolder.newFile();\n  RainbowFishSerializer.writeV1(V1,outputFile.getPath());\n  final var fish=RainbowFishSerializer.readV1(outputFile.getPath());\n  assertNotSame(V1,fish);\n  assertEquals(V1.getName(),fish.getName());\n  assertEquals(V1.getAge(),fish.getAge());\n  assertEquals(V1.getLengthMeters(),fish.getLengthMeters());\n  assertEquals(V1.getWeightTons(),fish.getWeightTons());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 585,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 74,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Verify if a fish, written as version 1 can be read back as version 1\n */\n@Test public void testWriteV1ReadV1() throws Exception {\n  final var outputFile=this.testFolder.newFile();\n  RainbowFishSerializer.writeV1(V1,outputFile.getPath());\n  final var fish=RainbowFishSerializer.readV1(outputFile.getPath());\n  assertNotSame(V1,fish);\n  assertEquals(V1.getName(),fish.getName());\n  assertEquals(V1.getAge(),fish.getAge());\n  assertEquals(V1.getLengthMeters(),fish.getLengthMeters());\n  assertEquals(V1.getWeightTons(),fish.getWeightTons());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 82,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 72
      },
      "nodeContext" : "final var fish=RainbowFishSerializer.readV1(outputFile.getPath());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.Object"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 65,
    "startColumnNumber" : 38,
    "endLineNumber" : 65,
    "endColumnNumber" : 48
  }, {
    "charLength" : 10,
    "startLineNumber" : 67,
    "startColumnNumber" : 50,
    "endLineNumber" : 67,
    "endColumnNumber" : 60
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}