{
  "id" : 494,
  "expression" : "findSession(msg.getSessionId())",
  "projectName" : "redisson@redisson",
  "commitID" : "62b5e68c05b7475e1e0f98b4161aacb35d376b97",
  "filePath" : "/redisson-tomcat/redisson-tomcat-9/src/main/java/org/redisson/tomcat/RedissonSessionManager.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "findSession(msg.getSessionId())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 309,
      "startColumnNumber" : 44,
      "endLineNumber" : 309,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 309,
        "startColumnNumber" : 40,
        "endLineNumber" : 309,
        "endColumnNumber" : 75
      },
      "nodeContext" : "s=findSession(msg.getSessionId())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 309,
        "startColumnNumber" : 32,
        "endLineNumber" : 309,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Session s=findSession(msg.getSessionId());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 309,
        "startLineNumber" : 308,
        "startColumnNumber" : 70,
        "endLineNumber" : 313,
        "endColumnNumber" : 29
      },
      "nodeContext" : "{\n  Session s=findSession(msg.getSessionId());\n  if (s == null) {\n    throw new IllegalStateException(\"Unable to find session: \" + msg.getSessionId());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 351,
        "startLineNumber" : 308,
        "startColumnNumber" : 28,
        "endLineNumber" : 313,
        "endColumnNumber" : 29
      },
      "nodeContext" : "if (msg instanceof SessionCreatedMessage) {\n  Session s=findSession(msg.getSessionId());\n  if (s == null) {\n    throw new IllegalStateException(\"Unable to find session: \" + msg.getSessionId());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 30,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1036,
        "startLineNumber" : 307,
        "startColumnNumber" : 31,
        "endLineNumber" : 325,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  if (msg instanceof SessionCreatedMessage) {\n    Session s=findSession(msg.getSessionId());\n    if (s == null) {\n      throw new IllegalStateException(\"Unable to find session: \" + msg.getSessionId());\n    }\n  }\n  if (msg instanceof SessionDestroyedMessage) {\n    Session s=findSession(msg.getSessionId(),false);\n    if (s == null) {\n      throw new IllegalStateException(\"Unable to find session: \" + msg.getSessionId());\n    }\n    s.expire();\n    RSet<String> set=getNotifiedNodes(msg.getSessionId());\n    set.add(nodeId);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2505,
        "startLineNumber" : 282,
        "startColumnNumber" : 24,
        "endLineNumber" : 325,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (session != null) {\n  if (msg instanceof SessionDestroyedMessage) {\n    session.expire();\n  }\n  if (msg instanceof AttributeRemoveMessage) {\n    for (    String name : ((AttributeRemoveMessage)msg).getNames()) {\n      session.superRemoveAttributeInternal(name,true);\n    }\n  }\n  if (msg instanceof AttributesClearMessage) {\n    RedissonSessionManager.super.remove(session,false);\n  }\n  if (msg instanceof AttributesPutAllMessage) {\n    AttributesPutAllMessage m=(AttributesPutAllMessage)msg;\n    Map<String,Object> attrs=m.getAttrs(codecToUse.getMapValueDecoder());\n    session.load(attrs);\n  }\n  if (msg instanceof AttributeUpdateMessage) {\n    AttributeUpdateMessage m=(AttributeUpdateMessage)msg;\n    session.superSetAttribute(m.getName(),m.getValue(codecToUse.getMapValueDecoder()),true);\n  }\n}\n else {\n  if (msg instanceof SessionCreatedMessage) {\n    Session s=findSession(msg.getSessionId());\n    if (s == null) {\n      throw new IllegalStateException(\"Unable to find session: \" + msg.getSessionId());\n    }\n  }\n  if (msg instanceof SessionDestroyedMessage) {\n    Session s=findSession(msg.getSessionId(),false);\n    if (s == null) {\n      throw new IllegalStateException(\"Unable to find session: \" + msg.getSessionId());\n    }\n    s.expire();\n    RSet<String> set=getNotifiedNodes(msg.getSessionId());\n    set.add(nodeId);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 201,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2809,
        "startLineNumber" : 276,
        "startColumnNumber" : 24,
        "endLineNumber" : 327,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (msg.getNodeId().equals(nodeId)) {\n    return;\n  }\n  RedissonSession session=(RedissonSession)RedissonSessionManager.super.findSession(msg.getSessionId());\n  if (session != null) {\n    if (msg instanceof SessionDestroyedMessage) {\n      session.expire();\n    }\n    if (msg instanceof AttributeRemoveMessage) {\n      for (      String name : ((AttributeRemoveMessage)msg).getNames()) {\n        session.superRemoveAttributeInternal(name,true);\n      }\n    }\n    if (msg instanceof AttributesClearMessage) {\n      RedissonSessionManager.super.remove(session,false);\n    }\n    if (msg instanceof AttributesPutAllMessage) {\n      AttributesPutAllMessage m=(AttributesPutAllMessage)msg;\n      Map<String,Object> attrs=m.getAttrs(codecToUse.getMapValueDecoder());\n      session.load(attrs);\n    }\n    if (msg instanceof AttributeUpdateMessage) {\n      AttributeUpdateMessage m=(AttributeUpdateMessage)msg;\n      session.superSetAttribute(m.getName(),m.getValue(codecToUse.getMapValueDecoder()),true);\n    }\n  }\n else {\n    if (msg instanceof SessionCreatedMessage) {\n      Session s=findSession(msg.getSessionId());\n      if (s == null) {\n        throw new IllegalStateException(\"Unable to find session: \" + msg.getSessionId());\n      }\n    }\n    if (msg instanceof SessionDestroyedMessage) {\n      Session s=findSession(msg.getSessionId(),false);\n      if (s == null) {\n        throw new IllegalStateException(\"Unable to find session: \" + msg.getSessionId());\n      }\n      s.expire();\n      RSet<String> set=getNotifiedNodes(msg.getSessionId());\n      set.add(nodeId);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 225,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2929,
        "startLineNumber" : 276,
        "startColumnNumber" : 20,
        "endLineNumber" : 329,
        "endColumnNumber" : 21
      },
      "nodeContext" : "try {\n  if (msg.getNodeId().equals(nodeId)) {\n    return;\n  }\n  RedissonSession session=(RedissonSession)RedissonSessionManager.super.findSession(msg.getSessionId());\n  if (session != null) {\n    if (msg instanceof SessionDestroyedMessage) {\n      session.expire();\n    }\n    if (msg instanceof AttributeRemoveMessage) {\n      for (      String name : ((AttributeRemoveMessage)msg).getNames()) {\n        session.superRemoveAttributeInternal(name,true);\n      }\n    }\n    if (msg instanceof AttributesClearMessage) {\n      RedissonSessionManager.super.remove(session,false);\n    }\n    if (msg instanceof AttributesPutAllMessage) {\n      AttributesPutAllMessage m=(AttributesPutAllMessage)msg;\n      Map<String,Object> attrs=m.getAttrs(codecToUse.getMapValueDecoder());\n      session.load(attrs);\n    }\n    if (msg instanceof AttributeUpdateMessage) {\n      AttributeUpdateMessage m=(AttributeUpdateMessage)msg;\n      session.superSetAttribute(m.getName(),m.getValue(codecToUse.getMapValueDecoder()),true);\n    }\n  }\n else {\n    if (msg instanceof SessionCreatedMessage) {\n      Session s=findSession(msg.getSessionId());\n      if (s == null) {\n        throw new IllegalStateException(\"Unable to find session: \" + msg.getSessionId());\n      }\n    }\n    if (msg instanceof SessionDestroyedMessage) {\n      Session s=findSession(msg.getSessionId(),false);\n      if (s == null) {\n        throw new IllegalStateException(\"Unable to find session: \" + msg.getSessionId());\n      }\n      s.expire();\n      RSet<String> set=getNotifiedNodes(msg.getSessionId());\n      set.add(nodeId);\n    }\n  }\n}\n catch (Exception e) {\n  log.error(\"Unable to handle topic message\",e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 238,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2969,
        "startLineNumber" : 275,
        "startColumnNumber" : 82,
        "endLineNumber" : 330,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  try {\n    if (msg.getNodeId().equals(nodeId)) {\n      return;\n    }\n    RedissonSession session=(RedissonSession)RedissonSessionManager.super.findSession(msg.getSessionId());\n    if (session != null) {\n      if (msg instanceof SessionDestroyedMessage) {\n        session.expire();\n      }\n      if (msg instanceof AttributeRemoveMessage) {\n        for (        String name : ((AttributeRemoveMessage)msg).getNames()) {\n          session.superRemoveAttributeInternal(name,true);\n        }\n      }\n      if (msg instanceof AttributesClearMessage) {\n        RedissonSessionManager.super.remove(session,false);\n      }\n      if (msg instanceof AttributesPutAllMessage) {\n        AttributesPutAllMessage m=(AttributesPutAllMessage)msg;\n        Map<String,Object> attrs=m.getAttrs(codecToUse.getMapValueDecoder());\n        session.load(attrs);\n      }\n      if (msg instanceof AttributeUpdateMessage) {\n        AttributeUpdateMessage m=(AttributeUpdateMessage)msg;\n        session.superSetAttribute(m.getName(),m.getValue(codecToUse.getMapValueDecoder()),true);\n      }\n    }\n else {\n      if (msg instanceof SessionCreatedMessage) {\n        Session s=findSession(msg.getSessionId());\n        if (s == null) {\n          throw new IllegalStateException(\"Unable to find session: \" + msg.getSessionId());\n        }\n      }\n      if (msg instanceof SessionDestroyedMessage) {\n        Session s=findSession(msg.getSessionId(),false);\n        if (s == null) {\n          throw new IllegalStateException(\"Unable to find session: \" + msg.getSessionId());\n        }\n        s.expire();\n        RSet<String> set=getNotifiedNodes(msg.getSessionId());\n        set.add(nodeId);\n      }\n    }\n  }\n catch (  Exception e) {\n    log.error(\"Unable to handle topic message\",e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 239,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3061,
        "startLineNumber" : 274,
        "startColumnNumber" : 16,
        "endLineNumber" : 330,
        "endColumnNumber" : 17
      },
      "nodeContext" : "@Override public void onMessage(CharSequence channel,AttributeMessage msg){\n  try {\n    if (msg.getNodeId().equals(nodeId)) {\n      return;\n    }\n    RedissonSession session=(RedissonSession)RedissonSessionManager.super.findSession(msg.getSessionId());\n    if (session != null) {\n      if (msg instanceof SessionDestroyedMessage) {\n        session.expire();\n      }\n      if (msg instanceof AttributeRemoveMessage) {\n        for (        String name : ((AttributeRemoveMessage)msg).getNames()) {\n          session.superRemoveAttributeInternal(name,true);\n        }\n      }\n      if (msg instanceof AttributesClearMessage) {\n        RedissonSessionManager.super.remove(session,false);\n      }\n      if (msg instanceof AttributesPutAllMessage) {\n        AttributesPutAllMessage m=(AttributesPutAllMessage)msg;\n        Map<String,Object> attrs=m.getAttrs(codecToUse.getMapValueDecoder());\n        session.load(attrs);\n      }\n      if (msg instanceof AttributeUpdateMessage) {\n        AttributeUpdateMessage m=(AttributeUpdateMessage)msg;\n        session.superSetAttribute(m.getName(),m.getValue(codecToUse.getMapValueDecoder()),true);\n      }\n    }\n else {\n      if (msg instanceof SessionCreatedMessage) {\n        Session s=findSession(msg.getSessionId());\n        if (s == null) {\n          throw new IllegalStateException(\"Unable to find session: \" + msg.getSessionId());\n        }\n      }\n      if (msg instanceof SessionDestroyedMessage) {\n        Session s=findSession(msg.getSessionId(),false);\n        if (s == null) {\n          throw new IllegalStateException(\"Unable to find session: \" + msg.getSessionId());\n        }\n        s.expire();\n        RSet<String> set=getNotifiedNodes(msg.getSessionId());\n        set.add(nodeId);\n      }\n    }\n  }\n catch (  Exception e) {\n    log.error(\"Unable to handle topic message\",e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 253,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 309,
        "startColumnNumber" : 32,
        "endLineNumber" : 309,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Session s=findSession(msg.getSessionId());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "org.redisson.tomcat.Session"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 309,
    "startColumnNumber" : 44,
    "endLineNumber" : 309,
    "endColumnNumber" : 75
  } ],
  "layoutRelationDataList" : [ ]
}