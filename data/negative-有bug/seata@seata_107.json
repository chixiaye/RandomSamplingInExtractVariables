{
  "id" : 107,
  "expression" : "String.format(\"UNIQUE KEY `%s`\",index.getIndexName())",
  "projectName" : "seata@seata",
  "commitID" : "42d41623178ab076b11b27a0f049ac3ed7f1a9dc",
  "filePath" : "/rm-datasource/src/main/java/io/seata/rm/datasource/sql/struct/TableMeta.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "String.format(\"UNIQUE KEY `%s`\",index.getIndexName())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 54,
      "startLineNumber" : 221,
      "startColumnNumber" : 30,
      "endLineNumber" : 221,
      "endColumnNumber" : 84
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 221,
        "startColumnNumber" : 20,
        "endLineNumber" : 221,
        "endColumnNumber" : 85
      },
      "nodeContext" : "sb.append(String.format(\"UNIQUE KEY `%s`\",index.getIndexName()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 221,
        "startColumnNumber" : 20,
        "endLineNumber" : 221,
        "endColumnNumber" : 86
      },
      "nodeContext" : "sb.append(String.format(\"UNIQUE KEY `%s`\",index.getIndexName()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 537,
        "startLineNumber" : 211,
        "startColumnNumber" : 12,
        "endLineNumber" : 225,
        "endColumnNumber" : 13
      },
      "nodeContext" : "switch (index.getIndextype()) {\ncase FullText:  break;\ncase Normal:sb.append(String.format(\"KEY `%s`\",index.getIndexName()));\nbreak;\ncase PRIMARY:sb.append(\"PRIMARY KEY\");\nbreak;\ncase Unique:sb.append(String.format(\"UNIQUE KEY `%s`\",index.getIndexName()));\nbreak;\ndefault:break;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 45,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 999,
        "startLineNumber" : 207,
        "startColumnNumber" : 69,
        "endLineNumber" : 239,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  sb.append(\", \");\n  IndexMeta index=entry.getValue();\nswitch (index.getIndextype()) {\ncase FullText:    break;\ncase Normal:  sb.append(String.format(\"KEY `%s`\",index.getIndexName()));\nbreak;\ncase PRIMARY:sb.append(\"PRIMARY KEY\");\nbreak;\ncase Unique:sb.append(String.format(\"UNIQUE KEY `%s`\",index.getIndexName()));\nbreak;\ndefault:break;\n}\nsb.append(\" (\");\nboolean f=true;\nfor (ColumnMeta c : index.getValues()) {\nif (f) {\nf=false;\n}\n else {\nsb.append(\",\");\n}\nsb.append(String.format(\"`%s`\",c.getColumnName()));\n}\nsb.append(\")\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 107,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1060,
        "startLineNumber" : 207,
        "startColumnNumber" : 8,
        "endLineNumber" : 239,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Entry<String,IndexMeta> entry : allIndexes.entrySet()) {\n  sb.append(\", \");\n  IndexMeta index=entry.getValue();\nswitch (index.getIndextype()) {\ncase FullText:    break;\ncase Normal:  sb.append(String.format(\"KEY `%s`\",index.getIndexName()));\nbreak;\ncase PRIMARY:sb.append(\"PRIMARY KEY\");\nbreak;\ncase Unique:sb.append(String.format(\"UNIQUE KEY `%s`\",index.getIndexName()));\nbreak;\ndefault:break;\n}\nsb.append(\" (\");\nboolean f=true;\nfor (ColumnMeta c : index.getValues()) {\nif (f) {\nf=false;\n}\n else {\nsb.append(\",\");\n}\nsb.append(String.format(\"`%s`\",c.getColumnName()));\n}\nsb.append(\")\");\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 120,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2278,
        "startLineNumber" : 175,
        "startColumnNumber" : 38,
        "endLineNumber" : 243,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringBuilder sb=new StringBuilder(\"CREATE TABLE\");\n  sb.append(String.format(\" `%s` \",getTableName()));\n  sb.append(\"(\");\n  boolean flag=true;\n  Map<String,ColumnMeta> allColumns=getAllColumns();\n  for (  Entry<String,ColumnMeta> entry : allColumns.entrySet()) {\n    if (flag) {\n      flag=false;\n    }\n else {\n      sb.append(\",\");\n    }\n    ColumnMeta col=entry.getValue();\n    sb.append(String.format(\" `%s` \",col.getColumnName()));\n    sb.append(col.getDataTypeName());\n    if (col.getColumnSize() > 0) {\n      sb.append(String.format(\"(%d)\",col.getColumnSize()));\n    }\n    if (col.getColumnDef() != null && col.getColumnDef().length() > 0) {\n      sb.append(String.format(\" default '%s'\",col.getColumnDef()));\n    }\n    if (col.getIsNullAble() != null && col.getIsNullAble().length() > 0) {\n      sb.append(\" \");\n      sb.append(col.getIsNullAble());\n    }\n  }\n  Map<String,IndexMeta> allIndexes=getAllIndexes();\n  for (  Entry<String,IndexMeta> entry : allIndexes.entrySet()) {\n    sb.append(\", \");\n    IndexMeta index=entry.getValue();\nswitch (index.getIndextype()) {\ncase FullText:      break;\ncase Normal:    sb.append(String.format(\"KEY `%s`\",index.getIndexName()));\n  break;\ncase PRIMARY:sb.append(\"PRIMARY KEY\");\nbreak;\ncase Unique:sb.append(String.format(\"UNIQUE KEY `%s`\",index.getIndexName()));\nbreak;\ndefault:break;\n}\nsb.append(\" (\");\nboolean f=true;\nfor (ColumnMeta c : index.getValues()) {\nif (f) {\nf=false;\n}\n else {\nsb.append(\",\");\n}\nsb.append(String.format(\"`%s`\",c.getColumnName()));\n}\nsb.append(\")\");\n}\nsb.append(\")\");\nreturn sb.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 307,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2401,
        "startLineNumber" : 170,
        "startColumnNumber" : 4,
        "endLineNumber" : 243,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Gets create table sql.\n * @return the create table sql\n */\npublic String getCreateTableSQL(){\n  StringBuilder sb=new StringBuilder(\"CREATE TABLE\");\n  sb.append(String.format(\" `%s` \",getTableName()));\n  sb.append(\"(\");\n  boolean flag=true;\n  Map<String,ColumnMeta> allColumns=getAllColumns();\n  for (  Entry<String,ColumnMeta> entry : allColumns.entrySet()) {\n    if (flag) {\n      flag=false;\n    }\n else {\n      sb.append(\",\");\n    }\n    ColumnMeta col=entry.getValue();\n    sb.append(String.format(\" `%s` \",col.getColumnName()));\n    sb.append(col.getDataTypeName());\n    if (col.getColumnSize() > 0) {\n      sb.append(String.format(\"(%d)\",col.getColumnSize()));\n    }\n    if (col.getColumnDef() != null && col.getColumnDef().length() > 0) {\n      sb.append(String.format(\" default '%s'\",col.getColumnDef()));\n    }\n    if (col.getIsNullAble() != null && col.getIsNullAble().length() > 0) {\n      sb.append(\" \");\n      sb.append(col.getIsNullAble());\n    }\n  }\n  Map<String,IndexMeta> allIndexes=getAllIndexes();\n  for (  Entry<String,IndexMeta> entry : allIndexes.entrySet()) {\n    sb.append(\", \");\n    IndexMeta index=entry.getValue();\nswitch (index.getIndextype()) {\ncase FullText:      break;\ncase Normal:    sb.append(String.format(\"KEY `%s`\",index.getIndexName()));\n  break;\ncase PRIMARY:sb.append(\"PRIMARY KEY\");\nbreak;\ncase Unique:sb.append(String.format(\"UNIQUE KEY `%s`\",index.getIndexName()));\nbreak;\ndefault:break;\n}\nsb.append(\" (\");\nboolean f=true;\nfor (ColumnMeta c : index.getValues()) {\nif (f) {\nf=false;\n}\n else {\nsb.append(\",\");\n}\nsb.append(String.format(\"`%s`\",c.getColumnName()));\n}\nsb.append(\")\");\n}\nsb.append(\")\");\nreturn sb.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 313,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 221,
        "startColumnNumber" : 20,
        "endLineNumber" : 221,
        "endColumnNumber" : 86
      },
      "nodeContext" : "sb.append(String.format(\"UNIQUE KEY `%s`\",index.getIndexName()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 7,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 54,
    "startLineNumber" : 221,
    "startColumnNumber" : 30,
    "endLineNumber" : 221,
    "endColumnNumber" : 84
  } ],
  "layoutRelationDataList" : [ ]
}