{
  "id" : 86,
  "expression" : "2",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-project/spring-boot-cli/src/main/java/org/springframework/boot/cli/compiler/DependencyManagementBomTransformation.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "2",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 119,
      "startColumnNumber" : 42,
      "endLineNumber" : 119,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 119,
        "startColumnNumber" : 31,
        "endLineNumber" : 119,
        "endColumnNumber" : 44
      },
      "nodeContext" : "components[2]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 119,
        "startColumnNumber" : 5,
        "endLineNumber" : 119,
        "endColumnNumber" : 45
      },
      "nodeContext" : "dependency.put(\"version\",components[2])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 119,
        "startColumnNumber" : 5,
        "endLineNumber" : 119,
        "endColumnNumber" : 46
      },
      "nodeContext" : "dependency.put(\"version\",components[2]);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 251,
        "startLineNumber" : 115,
        "startColumnNumber" : 32,
        "endLineNumber" : 122,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  dependency=new HashMap<>();\n  dependency.put(\"group\",components[0]);\n  dependency.put(\"module\",components[1]);\n  dependency.put(\"version\",components[2]);\n  dependency.put(\"type\",\"pom\");\n  dependencies.add(dependency);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 340,
        "startLineNumber" : 115,
        "startColumnNumber" : 4,
        "endLineNumber" : 125,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (components.length == 3) {\n  dependency=new HashMap<>();\n  dependency.put(\"group\",components[0]);\n  dependency.put(\"module\",components[1]);\n  dependency.put(\"version\",components[2]);\n  dependency.put(\"type\",\"pom\");\n  dependencies.add(dependency);\n}\n else {\n  handleMalformedDependency(expression);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 54,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 422,
        "startLineNumber" : 113,
        "startColumnNumber" : 32,
        "endLineNumber" : 126,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  String[] components=((String)expression.getValue()).split(\":\");\n  if (components.length == 3) {\n    dependency=new HashMap<>();\n    dependency.put(\"group\",components[0]);\n    dependency.put(\"module\",components[1]);\n    dependency.put(\"version\",components[2]);\n    dependency.put(\"type\",\"pom\");\n    dependencies.add(dependency);\n  }\n else {\n    handleMalformedDependency(expression);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 451,
        "startLineNumber" : 113,
        "startColumnNumber" : 3,
        "endLineNumber" : 126,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (value instanceof String) {\n  String[] components=((String)expression.getValue()).split(\":\");\n  if (components.length == 3) {\n    dependency=new HashMap<>();\n    dependency.put(\"group\",components[0]);\n    dependency.put(\"module\",components[1]);\n    dependency.put(\"version\",components[2]);\n    dependency.put(\"type\",\"pom\");\n    dependencies.add(dependency);\n  }\n else {\n    handleMalformedDependency(expression);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 77,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 501,
        "startLineNumber" : 111,
        "startColumnNumber" : 60,
        "endLineNumber" : 127,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Object value=expression.getValue();\n  if (value instanceof String) {\n    String[] components=((String)expression.getValue()).split(\":\");\n    if (components.length == 3) {\n      dependency=new HashMap<>();\n      dependency.put(\"group\",components[0]);\n      dependency.put(\"module\",components[1]);\n      dependency.put(\"version\",components[2]);\n      dependency.put(\"type\",\"pom\");\n      dependencies.add(dependency);\n    }\n else {\n      handleMalformedDependency(expression);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 559,
        "startLineNumber" : 111,
        "startColumnNumber" : 2,
        "endLineNumber" : 127,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (ConstantExpression expression : constantExpressions) {\n  Object value=expression.getValue();\n  if (value instanceof String) {\n    String[] components=((String)expression.getValue()).split(\":\");\n    if (components.length == 3) {\n      dependency=new HashMap<>();\n      dependency.put(\"group\",components[0]);\n      dependency.put(\"module\",components[1]);\n      dependency.put(\"version\",components[2]);\n      dependency.put(\"type\",\"pom\");\n      dependencies.add(dependency);\n    }\n else {\n      handleMalformedDependency(expression);\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 92,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 818,
        "startLineNumber" : 105,
        "startColumnNumber" : 84,
        "endLineNumber" : 129,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Map<String,String> dependency=null;\n  List<ConstantExpression> constantExpressions=getConstantExpressions(valueExpression);\n  List<Map<String,String>> dependencies=new ArrayList<>(constantExpressions.size());\n  for (  ConstantExpression expression : constantExpressions) {\n    Object value=expression.getValue();\n    if (value instanceof String) {\n      String[] components=((String)expression.getValue()).split(\":\");\n      if (components.length == 3) {\n        dependency=new HashMap<>();\n        dependency.put(\"group\",components[0]);\n        dependency.put(\"module\",components[1]);\n        dependency.put(\"version\",components[2]);\n        dependency.put(\"type\",\"pom\");\n        dependencies.add(dependency);\n      }\n else {\n        handleMalformedDependency(expression);\n      }\n    }\n  }\n  return dependencies;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 137,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 901,
        "startLineNumber" : 105,
        "startColumnNumber" : 1,
        "endLineNumber" : 129,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private List<Map<String,String>> createDependencyMaps(Expression valueExpression){\n  Map<String,String> dependency=null;\n  List<ConstantExpression> constantExpressions=getConstantExpressions(valueExpression);\n  List<Map<String,String>> dependencies=new ArrayList<>(constantExpressions.size());\n  for (  ConstantExpression expression : constantExpressions) {\n    Object value=expression.getValue();\n    if (value instanceof String) {\n      String[] components=((String)expression.getValue()).split(\":\");\n      if (components.length == 3) {\n        dependency=new HashMap<>();\n        dependency.put(\"group\",components[0]);\n        dependency.put(\"module\",components[1]);\n        dependency.put(\"version\",components[2]);\n        dependency.put(\"type\",\"pom\");\n        dependencies.add(dependency);\n      }\n else {\n        handleMalformedDependency(expression);\n      }\n    }\n  }\n  return dependencies;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 154,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 119,
        "startColumnNumber" : 5,
        "endLineNumber" : 119,
        "endColumnNumber" : 46
      },
      "nodeContext" : "dependency.put(\"version\",components[2]);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 119,
    "startColumnNumber" : 42,
    "endLineNumber" : 119,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ ]
}