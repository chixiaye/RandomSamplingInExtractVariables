{
  "id" : 237,
  "expression" : "\"classes\"",
  "projectName" : "java-decompiler@jd-gui",
  "commitID" : "fbc5b14d66b37b88bf1dc18386b530e874550240",
  "filePath" : "/services/src/main/java/org/jd/gui/service/container/JavaModuleContainerFactoryProvider.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"classes\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 31,
      "startColumnNumber" : 119,
      "endLineNumber" : 31,
      "endColumnNumber" : 128
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 31,
        "startColumnNumber" : 102,
        "endLineNumber" : 31,
        "endColumnNumber" : 129
      },
      "nodeContext" : "rootPath.resolve(\"classes\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 31,
        "startColumnNumber" : 89,
        "endLineNumber" : 31,
        "endColumnNumber" : 130
      },
      "nodeContext" : "Files.exists(rootPath.resolve(\"classes\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 31,
        "startColumnNumber" : 23,
        "endLineNumber" : 31,
        "endColumnNumber" : 130
      },
      "nodeContext" : "rootPath.getFileSystem().provider().getScheme().equals(\"file\") && Files.exists(rootPath.resolve(\"classes\"))",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 31,
        "startColumnNumber" : 16,
        "endLineNumber" : 31,
        "endColumnNumber" : 131
      },
      "nodeContext" : "return rootPath.getFileSystem().provider().getScheme().equals(\"file\") && Files.exists(rootPath.resolve(\"classes\"));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 30,
        "startColumnNumber" : 16,
        "endLineNumber" : 32,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  return rootPath.getFileSystem().provider().getScheme().equals(\"file\") && Files.exists(rootPath.resolve(\"classes\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 290,
        "startLineNumber" : 30,
        "startColumnNumber" : 12,
        "endLineNumber" : 35,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  return rootPath.getFileSystem().provider().getScheme().equals(\"file\") && Files.exists(rootPath.resolve(\"classes\"));\n}\n catch (InvalidPathException e) {\n  assert ExceptionUtil.printStackTrace(e);\n  return false;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 34,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 403,
        "startLineNumber" : 28,
        "startColumnNumber" : 15,
        "endLineNumber" : 36,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    return rootPath.getFileSystem().provider().getScheme().equals(\"file\") && Files.exists(rootPath.resolve(\"classes\"));\n  }\n catch (  InvalidPathException e) {\n    assert ExceptionUtil.printStackTrace(e);\n    return false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 514,
        "startLineNumber" : 26,
        "startColumnNumber" : 8,
        "endLineNumber" : 36,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (rootPath.toUri().toString().toLowerCase().endsWith(\".jmod!/\")) {\n  return true;\n}\n else {\n  try {\n    return rootPath.getFileSystem().provider().getScheme().equals(\"file\") && Files.exists(rootPath.resolve(\"classes\"));\n  }\n catch (  InvalidPathException e) {\n    assert ExceptionUtil.printStackTrace(e);\n    return false;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 49,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 532,
        "startLineNumber" : 25,
        "startColumnNumber" : 50,
        "endLineNumber" : 37,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (rootPath.toUri().toString().toLowerCase().endsWith(\".jmod!/\")) {\n    return true;\n  }\n else {\n    try {\n      return rootPath.getFileSystem().provider().getScheme().equals(\"file\") && Files.exists(rootPath.resolve(\"classes\"));\n    }\n catch (    InvalidPathException e) {\n      assert ExceptionUtil.printStackTrace(e);\n      return false;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 593,
        "startLineNumber" : 24,
        "startColumnNumber" : 4,
        "endLineNumber" : 37,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public boolean accept(API api,Path rootPath){\n  if (rootPath.toUri().toString().toLowerCase().endsWith(\".jmod!/\")) {\n    return true;\n  }\n else {\n    try {\n      return rootPath.getFileSystem().provider().getScheme().equals(\"file\") && Files.exists(rootPath.resolve(\"classes\"));\n    }\n catch (    InvalidPathException e) {\n      assert ExceptionUtil.printStackTrace(e);\n      return false;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 64,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 115,
        "startLineNumber" : 31,
        "startColumnNumber" : 16,
        "endLineNumber" : 31,
        "endColumnNumber" : 131
      },
      "nodeContext" : "return rootPath.getFileSystem().provider().getScheme().equals(\"file\") && Files.exists(rootPath.resolve(\"classes\"));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 31,
    "startColumnNumber" : 119,
    "endLineNumber" : 31,
    "endColumnNumber" : 128
  } ],
  "layoutRelationDataList" : [ ]
}