{
  "id" : 462,
  "expression" : "i < limitLines.size()",
  "projectName" : "PhilJay@MPAndroidChart",
  "commitID" : "43046425fc2ed73d0d3f177759706116e02a9053",
  "filePath" : "/MPChartLib/src/com/github/mikephil/charting/renderer/YAxisRendererRadarChart.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "i < limitLines.size()",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 145,
      "startColumnNumber" : 24,
      "endLineNumber" : 145,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 820,
        "startLineNumber" : 145,
        "startColumnNumber" : 8,
        "endLineNumber" : 170,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < limitLines.size(); i++) {\n  LimitLine l=limitLines.get(i);\n  mLimitLinePaint.setColor(l.getLineColor());\n  mLimitLinePaint.setPathEffect(l.getDashPathEffect());\n  mLimitLinePaint.setStrokeWidth(l.getLineWidth());\n  float r=(l.getLimit() - mChart.getYChartMin()) * factor;\n  Path limitPath=new Path();\n  for (int j=0; j < mChart.getData().getXValCount(); j++) {\n    PointF p=Utils.getPosition(center,r,sliceangle * j + mChart.getRotationAngle());\n    if (j == 0)     limitPath.moveTo(p.x,p.y);\n else     limitPath.lineTo(p.x,p.y);\n  }\n  limitPath.close();\n  c.drawPath(limitPath,mLimitLinePaint);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 133,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1200,
        "startLineNumber" : 130,
        "startColumnNumber" : 43,
        "endLineNumber" : 171,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ArrayList<LimitLine> limitLines=mYAxis.getLimitLines();\n  if (limitLines == null)   return;\n  float sliceangle=mChart.getSliceAngle();\n  float factor=mChart.getFactor();\n  PointF center=mChart.getCenterOffsets();\n  for (int i=0; i < limitLines.size(); i++) {\n    LimitLine l=limitLines.get(i);\n    mLimitLinePaint.setColor(l.getLineColor());\n    mLimitLinePaint.setPathEffect(l.getDashPathEffect());\n    mLimitLinePaint.setStrokeWidth(l.getLineWidth());\n    float r=(l.getLimit() - mChart.getYChartMin()) * factor;\n    Path limitPath=new Path();\n    for (int j=0; j < mChart.getData().getXValCount(); j++) {\n      PointF p=Utils.getPosition(center,r,sliceangle * j + mChart.getRotationAngle());\n      if (j == 0)       limitPath.moveTo(p.x,p.y);\n else       limitPath.lineTo(p.x,p.y);\n    }\n    limitPath.close();\n    c.drawPath(limitPath,mLimitLinePaint);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 172,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1253,
        "startLineNumber" : 129,
        "startColumnNumber" : 4,
        "endLineNumber" : 171,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void renderLimitLines(Canvas c){\n  ArrayList<LimitLine> limitLines=mYAxis.getLimitLines();\n  if (limitLines == null)   return;\n  float sliceangle=mChart.getSliceAngle();\n  float factor=mChart.getFactor();\n  PointF center=mChart.getCenterOffsets();\n  for (int i=0; i < limitLines.size(); i++) {\n    LimitLine l=limitLines.get(i);\n    mLimitLinePaint.setColor(l.getLineColor());\n    mLimitLinePaint.setPathEffect(l.getDashPathEffect());\n    mLimitLinePaint.setStrokeWidth(l.getLineWidth());\n    float r=(l.getLimit() - mChart.getYChartMin()) * factor;\n    Path limitPath=new Path();\n    for (int j=0; j < mChart.getData().getXValCount(); j++) {\n      PointF p=Utils.getPosition(center,r,sliceangle * j + mChart.getRotationAngle());\n      if (j == 0)       limitPath.moveTo(p.x,p.y);\n else       limitPath.lineTo(p.x,p.y);\n    }\n    limitPath.close();\n    c.drawPath(limitPath,mLimitLinePaint);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 182,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 820,
        "startLineNumber" : 145,
        "startColumnNumber" : 8,
        "endLineNumber" : 170,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < limitLines.size(); i++) {\n  LimitLine l=limitLines.get(i);\n  mLimitLinePaint.setColor(l.getLineColor());\n  mLimitLinePaint.setPathEffect(l.getDashPathEffect());\n  mLimitLinePaint.setStrokeWidth(l.getLineWidth());\n  float r=(l.getLimit() - mChart.getYChartMin()) * factor;\n  Path limitPath=new Path();\n  for (int j=0; j < mChart.getData().getXValCount(); j++) {\n    PointF p=Utils.getPosition(center,r,sliceangle * j + mChart.getRotationAngle());\n    if (j == 0)     limitPath.moveTo(p.x,p.y);\n else     limitPath.lineTo(p.x,p.y);\n  }\n  limitPath.close();\n  c.drawPath(limitPath,mLimitLinePaint);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 133,
      "astHeight" : 10
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 145,
    "startColumnNumber" : 24,
    "endLineNumber" : 145,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ ]
}