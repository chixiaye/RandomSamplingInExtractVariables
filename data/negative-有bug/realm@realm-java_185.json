{
  "id" : 185,
  "expression" : "field",
  "projectName" : "realm@realm-java",
  "commitID" : "9da3b229a46407f73e2003fb40857cadf062086b",
  "filePath" : "/realm/realm-library/src/androidTest/java/io/realm/CustomRealmNameTests.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "field",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 89,
      "startColumnNumber" : 23,
      "endLineNumber" : 89,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 89,
        "startColumnNumber" : 23,
        "endLineNumber" : 89,
        "endColumnNumber" : 48
      },
      "nodeContext" : "field + \" was not found.\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 89,
        "startColumnNumber" : 12,
        "endLineNumber" : 89,
        "endColumnNumber" : 78
      },
      "nodeContext" : "assertTrue(field + \" was not found.\",classSchema.hasField(field))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 89,
        "startColumnNumber" : 12,
        "endLineNumber" : 89,
        "endColumnNumber" : 79
      },
      "nodeContext" : "assertTrue(field + \" was not found.\",classSchema.hasField(field));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 88,
        "startColumnNumber" : 56,
        "endLineNumber" : 90,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  assertTrue(field + \" was not found.\",classSchema.hasField(field));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (String field : ClassWithPolicy.ALL_FIELDS) {\n  assertTrue(field + \" was not found.\",classSchema.hasField(field));\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 322,
        "startLineNumber" : 85,
        "startColumnNumber" : 61,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertTrue(realm.getSchema().contains(ClassWithPolicy.CLASS_NAME));\n  RealmObjectSchema classSchema=realm.getSchema().get(ClassWithPolicy.CLASS_NAME);\n  for (  String field : ClassWithPolicy.ALL_FIELDS) {\n    assertTrue(field + \" was not found.\",classSchema.hasField(field));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 389,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void classFieldPolicy_overrideModuleFieldPolicy(){\n  assertTrue(realm.getSchema().contains(ClassWithPolicy.CLASS_NAME));\n  RealmObjectSchema classSchema=realm.getSchema().get(ClassWithPolicy.CLASS_NAME);\n  for (  String field : ClassWithPolicy.ALL_FIELDS) {\n    assertTrue(field + \" was not found.\",classSchema.hasField(field));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 50,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 89,
        "startColumnNumber" : 12,
        "endLineNumber" : 89,
        "endColumnNumber" : 79
      },
      "nodeContext" : "assertTrue(field + \" was not found.\",classSchema.hasField(field));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "field",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 89,
      "startColumnNumber" : 71,
      "endLineNumber" : 89,
      "endColumnNumber" : 76
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 89,
        "startColumnNumber" : 50,
        "endLineNumber" : 89,
        "endColumnNumber" : 77
      },
      "nodeContext" : "classSchema.hasField(field)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 89,
        "startColumnNumber" : 12,
        "endLineNumber" : 89,
        "endColumnNumber" : 78
      },
      "nodeContext" : "assertTrue(field + \" was not found.\",classSchema.hasField(field))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 89,
        "startColumnNumber" : 12,
        "endLineNumber" : 89,
        "endColumnNumber" : 79
      },
      "nodeContext" : "assertTrue(field + \" was not found.\",classSchema.hasField(field));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 88,
        "startColumnNumber" : 56,
        "endLineNumber" : 90,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  assertTrue(field + \" was not found.\",classSchema.hasField(field));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 139,
        "startLineNumber" : 88,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (String field : ClassWithPolicy.ALL_FIELDS) {\n  assertTrue(field + \" was not found.\",classSchema.hasField(field));\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 322,
        "startLineNumber" : 85,
        "startColumnNumber" : 61,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertTrue(realm.getSchema().contains(ClassWithPolicy.CLASS_NAME));\n  RealmObjectSchema classSchema=realm.getSchema().get(ClassWithPolicy.CLASS_NAME);\n  for (  String field : ClassWithPolicy.ALL_FIELDS) {\n    assertTrue(field + \" was not found.\",classSchema.hasField(field));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 389,
        "startLineNumber" : 84,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void classFieldPolicy_overrideModuleFieldPolicy(){\n  assertTrue(realm.getSchema().contains(ClassWithPolicy.CLASS_NAME));\n  RealmObjectSchema classSchema=realm.getSchema().get(ClassWithPolicy.CLASS_NAME);\n  for (  String field : ClassWithPolicy.ALL_FIELDS) {\n    assertTrue(field + \" was not found.\",classSchema.hasField(field));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 50,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 89,
        "startColumnNumber" : 12,
        "endLineNumber" : 89,
        "endColumnNumber" : 79
      },
      "nodeContext" : "assertTrue(field + \" was not found.\",classSchema.hasField(field));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 89,
    "startColumnNumber" : 23,
    "endLineNumber" : 89,
    "endColumnNumber" : 28
  }, {
    "charLength" : 5,
    "startLineNumber" : 89,
    "startColumnNumber" : 71,
    "endLineNumber" : 89,
    "endColumnNumber" : 76
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}