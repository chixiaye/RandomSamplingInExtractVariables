{
  "id" : 449,
  "expression" : "resFile.getType()",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-core/src/main/java/jadx/core/xmlgen/ResDecoder.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "resFile.getType()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 14,
      "startColumnNumber" : 6,
      "endLineNumber" : 14,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 14,
        "startColumnNumber" : 6,
        "endLineNumber" : 14,
        "endColumnNumber" : 44
      },
      "nodeContext" : "resFile.getType() != ResourceType.ARSC",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 169,
        "startLineNumber" : 14,
        "startColumnNumber" : 2,
        "endLineNumber" : 16,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (resFile.getType() != ResourceType.ARSC) {\n  throw new IllegalArgumentException(\"Unexpected resource type for decode: \" + resFile.getType() + \", expect ARSC\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 567,
        "startLineNumber" : 13,
        "startColumnNumber" : 105,
        "endLineNumber" : 30,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (resFile.getType() != ResourceType.ARSC) {\n    throw new IllegalArgumentException(\"Unexpected resource type for decode: \" + resFile.getType() + \", expect ARSC\");\n  }\n  IResParser parser=null;\n  String fileName=resFile.getOriginalName();\n  if (fileName.endsWith(\".arsc\")) {\n    parser=new ResTableParser(root);\n  }\n  if (fileName.endsWith(\".pb\")) {\n    parser=new ResProtoParser(root);\n  }\n  if (parser == null) {\n    throw new JadxRuntimeException(\"Unknown type of resource file: \" + fileName);\n  }\n  parser.decode(is);\n  return parser;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 671,
        "startLineNumber" : 13,
        "startColumnNumber" : 1,
        "endLineNumber" : 30,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public static IResParser decode(RootNode root,ResourceFile resFile,InputStream is) throws IOException {\n  if (resFile.getType() != ResourceType.ARSC) {\n    throw new IllegalArgumentException(\"Unexpected resource type for decode: \" + resFile.getType() + \", expect ARSC\");\n  }\n  IResParser parser=null;\n  String fileName=resFile.getOriginalName();\n  if (fileName.endsWith(\".arsc\")) {\n    parser=new ResTableParser(root);\n  }\n  if (fileName.endsWith(\".pb\")) {\n    parser=new ResProtoParser(root);\n  }\n  if (parser == null) {\n    throw new JadxRuntimeException(\"Unknown type of resource file: \" + fileName);\n  }\n  parser.decode(is);\n  return parser;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 99,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 14,
        "startColumnNumber" : 6,
        "endLineNumber" : 14,
        "endColumnNumber" : 44
      },
      "nodeContext" : "resFile.getType() != ResourceType.ARSC",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "jadx.api.ResourceType"
  }, {
    "nodeContext" : "resFile.getType()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 15,
      "startColumnNumber" : 80,
      "endLineNumber" : 15,
      "endColumnNumber" : 97
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 15,
        "startColumnNumber" : 38,
        "endLineNumber" : 15,
        "endColumnNumber" : 115
      },
      "nodeContext" : "\"Unexpected resource type for decode: \" + resFile.getType() + \", expect ARSC\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 15,
        "startColumnNumber" : 9,
        "endLineNumber" : 15,
        "endColumnNumber" : 116
      },
      "nodeContext" : "new IllegalArgumentException(\"Unexpected resource type for decode: \" + resFile.getType() + \", expect ARSC\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 15,
        "startColumnNumber" : 3,
        "endLineNumber" : 15,
        "endColumnNumber" : 117
      },
      "nodeContext" : "throw new IllegalArgumentException(\"Unexpected resource type for decode: \" + resFile.getType() + \", expect ARSC\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 14,
        "startColumnNumber" : 46,
        "endLineNumber" : 16,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  throw new IllegalArgumentException(\"Unexpected resource type for decode: \" + resFile.getType() + \", expect ARSC\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 169,
        "startLineNumber" : 14,
        "startColumnNumber" : 2,
        "endLineNumber" : 16,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (resFile.getType() != ResourceType.ARSC) {\n  throw new IllegalArgumentException(\"Unexpected resource type for decode: \" + resFile.getType() + \", expect ARSC\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 567,
        "startLineNumber" : 13,
        "startColumnNumber" : 105,
        "endLineNumber" : 30,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (resFile.getType() != ResourceType.ARSC) {\n    throw new IllegalArgumentException(\"Unexpected resource type for decode: \" + resFile.getType() + \", expect ARSC\");\n  }\n  IResParser parser=null;\n  String fileName=resFile.getOriginalName();\n  if (fileName.endsWith(\".arsc\")) {\n    parser=new ResTableParser(root);\n  }\n  if (fileName.endsWith(\".pb\")) {\n    parser=new ResProtoParser(root);\n  }\n  if (parser == null) {\n    throw new JadxRuntimeException(\"Unknown type of resource file: \" + fileName);\n  }\n  parser.decode(is);\n  return parser;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 671,
        "startLineNumber" : 13,
        "startColumnNumber" : 1,
        "endLineNumber" : 30,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public static IResParser decode(RootNode root,ResourceFile resFile,InputStream is) throws IOException {\n  if (resFile.getType() != ResourceType.ARSC) {\n    throw new IllegalArgumentException(\"Unexpected resource type for decode: \" + resFile.getType() + \", expect ARSC\");\n  }\n  IResParser parser=null;\n  String fileName=resFile.getOriginalName();\n  if (fileName.endsWith(\".arsc\")) {\n    parser=new ResTableParser(root);\n  }\n  if (fileName.endsWith(\".pb\")) {\n    parser=new ResProtoParser(root);\n  }\n  if (parser == null) {\n    throw new JadxRuntimeException(\"Unknown type of resource file: \" + fileName);\n  }\n  parser.decode(is);\n  return parser;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 99,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 15,
        "startColumnNumber" : 3,
        "endLineNumber" : 15,
        "endColumnNumber" : 117
      },
      "nodeContext" : "throw new IllegalArgumentException(\"Unexpected resource type for decode: \" + resFile.getType() + \", expect ARSC\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "jadx.api.ResourceType"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 14,
    "startColumnNumber" : 6,
    "endLineNumber" : 14,
    "endColumnNumber" : 23
  }, {
    "charLength" : 17,
    "startLineNumber" : 15,
    "startColumnNumber" : 80,
    "endLineNumber" : 15,
    "endColumnNumber" : 97
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}