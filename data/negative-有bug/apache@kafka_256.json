{
  "id" : 256,
  "expression" : "gracePeriod",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/streams/src/main/java/org/apache/kafka/streams/kstream/internals/graph/GraphGraceSearchUtil.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "gracePeriod",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 45,
      "startColumnNumber" : 16,
      "endLineNumber" : 45,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 45,
        "startColumnNumber" : 16,
        "endLineNumber" : 45,
        "endColumnNumber" : 35
      },
      "nodeContext" : "gracePeriod != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 45,
        "startColumnNumber" : 12,
        "endLineNumber" : 47,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (gracePeriod != null) {\n  return gracePeriod;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final Long gracePeriod=extractGracePeriod(graphNode);\n  if (gracePeriod != null) {\n    return gracePeriod;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1545,
        "startLineNumber" : 35,
        "startColumnNumber" : 96,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (graphNode == null) {\n    throw new TopologyException(\"Window close time is only defined for windowed computations. Got [\" + chain + \"].\");\n  }\n{\n    final Long gracePeriod=extractGracePeriod(graphNode);\n    if (gracePeriod != null) {\n      return gracePeriod;\n    }\n  }\n  final String newChain=chain.equals(\"\") ? graphNode.nodeName() : graphNode.nodeName() + \"->\" + chain;\n  if (graphNode.parentNodes().isEmpty()) {\n    throw new TopologyException(\"Window close time is only defined for windowed computations. Got [\" + newChain + \"].\");\n  }\n  long inheritedGrace=-1;\n  for (  final GraphNode parentNode : graphNode.parentNodes()) {\n    final long parentGrace=findAndVerifyWindowGrace(parentNode,newChain);\n    inheritedGrace=Math.max(inheritedGrace,parentGrace);\n  }\n  if (inheritedGrace == -1) {\n    throw new IllegalStateException();\n  }\n  return inheritedGrace;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1637,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static long findAndVerifyWindowGrace(final GraphNode graphNode,final String chain){\n  if (graphNode == null) {\n    throw new TopologyException(\"Window close time is only defined for windowed computations. Got [\" + chain + \"].\");\n  }\n{\n    final Long gracePeriod=extractGracePeriod(graphNode);\n    if (gracePeriod != null) {\n      return gracePeriod;\n    }\n  }\n  final String newChain=chain.equals(\"\") ? graphNode.nodeName() : graphNode.nodeName() + \"->\" + chain;\n  if (graphNode.parentNodes().isEmpty()) {\n    throw new TopologyException(\"Window close time is only defined for windowed computations. Got [\" + newChain + \"].\");\n  }\n  long inheritedGrace=-1;\n  for (  final GraphNode parentNode : graphNode.parentNodes()) {\n    final long parentGrace=findAndVerifyWindowGrace(parentNode,newChain);\n    inheritedGrace=Math.max(inheritedGrace,parentGrace);\n  }\n  if (inheritedGrace == -1) {\n    throw new IllegalStateException();\n  }\n  return inheritedGrace;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 126,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 45,
        "startColumnNumber" : 16,
        "endLineNumber" : 45,
        "endColumnNumber" : 35
      },
      "nodeContext" : "gracePeriod != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.Long"
  }, {
    "nodeContext" : "gracePeriod",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 46,
      "startColumnNumber" : 23,
      "endLineNumber" : 46,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 46,
        "startColumnNumber" : 16,
        "endLineNumber" : 46,
        "endColumnNumber" : 35
      },
      "nodeContext" : "return gracePeriod;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 45,
        "startColumnNumber" : 37,
        "endLineNumber" : 47,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  return gracePeriod;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 3,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 45,
        "startColumnNumber" : 12,
        "endLineNumber" : 47,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (gracePeriod != null) {\n  return gracePeriod;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 43,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final Long gracePeriod=extractGracePeriod(graphNode);\n  if (gracePeriod != null) {\n    return gracePeriod;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1545,
        "startLineNumber" : 35,
        "startColumnNumber" : 96,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (graphNode == null) {\n    throw new TopologyException(\"Window close time is only defined for windowed computations. Got [\" + chain + \"].\");\n  }\n{\n    final Long gracePeriod=extractGracePeriod(graphNode);\n    if (gracePeriod != null) {\n      return gracePeriod;\n    }\n  }\n  final String newChain=chain.equals(\"\") ? graphNode.nodeName() : graphNode.nodeName() + \"->\" + chain;\n  if (graphNode.parentNodes().isEmpty()) {\n    throw new TopologyException(\"Window close time is only defined for windowed computations. Got [\" + newChain + \"].\");\n  }\n  long inheritedGrace=-1;\n  for (  final GraphNode parentNode : graphNode.parentNodes()) {\n    final long parentGrace=findAndVerifyWindowGrace(parentNode,newChain);\n    inheritedGrace=Math.max(inheritedGrace,parentGrace);\n  }\n  if (inheritedGrace == -1) {\n    throw new IllegalStateException();\n  }\n  return inheritedGrace;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1637,
        "startLineNumber" : 35,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static long findAndVerifyWindowGrace(final GraphNode graphNode,final String chain){\n  if (graphNode == null) {\n    throw new TopologyException(\"Window close time is only defined for windowed computations. Got [\" + chain + \"].\");\n  }\n{\n    final Long gracePeriod=extractGracePeriod(graphNode);\n    if (gracePeriod != null) {\n      return gracePeriod;\n    }\n  }\n  final String newChain=chain.equals(\"\") ? graphNode.nodeName() : graphNode.nodeName() + \"->\" + chain;\n  if (graphNode.parentNodes().isEmpty()) {\n    throw new TopologyException(\"Window close time is only defined for windowed computations. Got [\" + newChain + \"].\");\n  }\n  long inheritedGrace=-1;\n  for (  final GraphNode parentNode : graphNode.parentNodes()) {\n    final long parentGrace=findAndVerifyWindowGrace(parentNode,newChain);\n    inheritedGrace=Math.max(inheritedGrace,parentGrace);\n  }\n  if (inheritedGrace == -1) {\n    throw new IllegalStateException();\n  }\n  return inheritedGrace;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 126,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 46,
        "startColumnNumber" : 16,
        "endLineNumber" : 46,
        "endColumnNumber" : 35
      },
      "nodeContext" : "return gracePeriod;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 2,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.Long"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 45,
    "startColumnNumber" : 16,
    "endLineNumber" : 45,
    "endColumnNumber" : 27
  }, {
    "charLength" : 11,
    "startLineNumber" : 46,
    "startColumnNumber" : 23,
    "endLineNumber" : 46,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}