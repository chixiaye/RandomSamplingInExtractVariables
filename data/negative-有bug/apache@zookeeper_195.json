{
  "id" : 195,
  "expression" : "h.count",
  "projectName" : "apache@zookeeper",
  "commitID" : "c6639c9842973a7954c8baa412d6825cb833d51f",
  "filePath" : "/src/java/test/org/apache/zookeeper/test/ClientTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "h.count",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 645,
      "startColumnNumber" : 49,
      "endLineNumber" : 645,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 645,
        "startColumnNumber" : 36,
        "endLineNumber" : 645,
        "endColumnNumber" : 56
      },
      "nodeContext" : "h.current == h.count",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 645,
        "startColumnNumber" : 20,
        "endLineNumber" : 645,
        "endColumnNumber" : 56
      },
      "nodeContext" : "!h.isAlive() || h.current == h.count",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 645,
        "startColumnNumber" : 16,
        "endLineNumber" : 647,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (!h.isAlive() || h.current == h.count) {\n  workingCount--;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 644,
        "startColumnNumber" : 43,
        "endLineNumber" : 648,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (!h.isAlive() || h.current == h.count) {\n    workingCount--;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 160,
        "startLineNumber" : 644,
        "startColumnNumber" : 12,
        "endLineNumber" : 648,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (HammerThread h : threads) {\n  if (!h.isAlive() || h.current == h.count) {\n    workingCount--;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 334,
        "startLineNumber" : 642,
        "startColumnNumber" : 38,
        "endLineNumber" : 653,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Thread.sleep(10000);\n  for (  HammerThread h : threads) {\n    if (!h.isAlive() || h.current == h.count) {\n      workingCount--;\n    }\n  }\n  if (workingCount == 0) {\n    break;\n  }\n  workingCount=threads.length;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 364,
        "startLineNumber" : 642,
        "startColumnNumber" : 8,
        "endLineNumber" : 653,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 120; i++) {\n  Thread.sleep(10000);\n  for (  HammerThread h : threads) {\n    if (!h.isAlive() || h.current == h.count) {\n      workingCount--;\n    }\n  }\n  if (workingCount == 0) {\n    break;\n  }\n  workingCount=threads.length;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 53,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1896,
        "startLineNumber" : 638,
        "startColumnNumber" : 4,
        "endLineNumber" : 690,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  LOG.info(\"Starting check for completed hammers\");\n  int workingCount=threads.length;\n  for (int i=0; i < 120; i++) {\n    Thread.sleep(10000);\n    for (    HammerThread h : threads) {\n      if (!h.isAlive() || h.current == h.count) {\n        workingCount--;\n      }\n    }\n    if (workingCount == 0) {\n      break;\n    }\n    workingCount=threads.length;\n  }\n  if (workingCount > 0) {\n    for (    HammerThread h : threads) {\n      LOG.warn(h.getName() + \" never finished creation, current:\" + h.current);\n    }\n  }\n else {\n    LOG.info(\"Hammer threads completed creation operations\");\n  }\n  for (  HammerThread h : threads) {\n    final int safetyFactor=3;\n    verifyThreadTerminated(h,threads.length * childCount * HAMMERTHREAD_LATENCY* safetyFactor);\n  }\n  LOG.info(new Date() + \" Total time \" + (System.currentTimeMillis() - start));\n  ZooKeeper zk=createClient();\n  try {\n    LOG.info(\"******************* Connected to ZooKeeper\" + new Date());\n    for (int i=0; i < threads.length; i++) {\n      LOG.info(\"Doing thread: \" + i + \" \"+ new Date());\n      List<String> children=zk.getChildren(\"/test-\" + i,false);\n      assertEquals(childCount,children.size());\n    }\n    for (int i=0; i < threads.length; i++) {\n      List<String> children=zk.getChildren(\"/test-\" + i,false);\n      assertEquals(childCount,children.size());\n    }\n  }\n  finally {\n    zk.close();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 241,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2043,
        "startLineNumber" : 636,
        "startColumnNumber" : 4,
        "endLineNumber" : 690,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void verifyHammer(long start,HammerThread[] threads,int childCount) throws IOException, InterruptedException, KeeperException {\n  LOG.info(\"Starting check for completed hammers\");\n  int workingCount=threads.length;\n  for (int i=0; i < 120; i++) {\n    Thread.sleep(10000);\n    for (    HammerThread h : threads) {\n      if (!h.isAlive() || h.current == h.count) {\n        workingCount--;\n      }\n    }\n    if (workingCount == 0) {\n      break;\n    }\n    workingCount=threads.length;\n  }\n  if (workingCount > 0) {\n    for (    HammerThread h : threads) {\n      LOG.warn(h.getName() + \" never finished creation, current:\" + h.current);\n    }\n  }\n else {\n    LOG.info(\"Hammer threads completed creation operations\");\n  }\n  for (  HammerThread h : threads) {\n    final int safetyFactor=3;\n    verifyThreadTerminated(h,threads.length * childCount * HAMMERTHREAD_LATENCY* safetyFactor);\n  }\n  LOG.info(new Date() + \" Total time \" + (System.currentTimeMillis() - start));\n  ZooKeeper zk=createClient();\n  try {\n    LOG.info(\"******************* Connected to ZooKeeper\" + new Date());\n    for (int i=0; i < threads.length; i++) {\n      LOG.info(\"Doing thread: \" + i + \" \"+ new Date());\n      List<String> children=zk.getChildren(\"/test-\" + i,false);\n      assertEquals(childCount,children.size());\n    }\n    for (int i=0; i < threads.length; i++) {\n      List<String> children=zk.getChildren(\"/test-\" + i,false);\n      assertEquals(childCount,children.size());\n    }\n  }\n  finally {\n    zk.close();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 263,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 645,
        "startColumnNumber" : 20,
        "endLineNumber" : 645,
        "endColumnNumber" : 56
      },
      "nodeContext" : "!h.isAlive() || h.current == h.count",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 645,
    "startColumnNumber" : 49,
    "endLineNumber" : 645,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}