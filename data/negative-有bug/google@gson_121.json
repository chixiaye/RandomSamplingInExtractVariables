{
  "id" : 121,
  "expression" : "(c - 'a' + 10)",
  "projectName" : "google@gson",
  "commitID" : "c3d0f200b352f411b9ebe45c3bf49d4328b2c51f",
  "filePath" : "/gson/src/main/java/com/google/gson/stream/JsonReader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(c - 'a' + 10)",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 1462,
      "startColumnNumber" : 20,
      "endLineNumber" : 1462,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 6,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 1462,
        "startColumnNumber" : 10,
        "endLineNumber" : 1462,
        "endColumnNumber" : 34
      },
      "nodeContext" : "result+=(c - 'a' + 10)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 1462,
        "startColumnNumber" : 10,
        "endLineNumber" : 1462,
        "endColumnNumber" : 35
      },
      "nodeContext" : "result+=(c - 'a' + 10);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 1461,
        "startColumnNumber" : 41,
        "endLineNumber" : 1463,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  result+=(c - 'a' + 10);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 248,
        "startLineNumber" : 1461,
        "startColumnNumber" : 15,
        "endLineNumber" : 1467,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (c >= 'a' && c <= 'f') {\n  result+=(c - 'a' + 10);\n}\n else if (c >= 'A' && c <= 'F') {\n  result+=(c - 'A' + 10);\n}\n else {\n  throw new NumberFormatException(\"\\\\u\" + new String(buffer,pos,4));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 49,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 322,
        "startLineNumber" : 1459,
        "startColumnNumber" : 8,
        "endLineNumber" : 1467,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (c >= '0' && c <= '9') {\n  result+=(c - '0');\n}\n else if (c >= 'a' && c <= 'f') {\n  result+=(c - 'a' + 10);\n}\n else if (c >= 'A' && c <= 'F') {\n  result+=(c - 'A' + 10);\n}\n else {\n  throw new NumberFormatException(\"\\\\u\" + new String(buffer,pos,4));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 65,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 390,
        "startLineNumber" : 1456,
        "startColumnNumber" : 51,
        "endLineNumber" : 1468,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  char c=buffer[i];\n  result<<=4;\n  if (c >= '0' && c <= '9') {\n    result+=(c - '0');\n  }\n else   if (c >= 'a' && c <= 'f') {\n    result+=(c - 'a' + 10);\n  }\n else   if (c >= 'A' && c <= 'F') {\n    result+=(c - 'A' + 10);\n  }\n else {\n    throw new NumberFormatException(\"\\\\u\" + new String(buffer,pos,4));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 435,
        "startLineNumber" : 1456,
        "startColumnNumber" : 6,
        "endLineNumber" : 1468,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int i=pos, end=i + 4; i < end; i++) {\n  char c=buffer[i];\n  result<<=4;\n  if (c >= '0' && c <= '9') {\n    result+=(c - '0');\n  }\n else   if (c >= 'a' && c <= 'f') {\n    result+=(c - 'a' + 10);\n  }\n else   if (c >= 'A' && c <= 'F') {\n    result+=(c - 'A' + 10);\n  }\n else {\n    throw new NumberFormatException(\"\\\\u\" + new String(buffer,pos,4));\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 93,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1062,
        "startLineNumber" : 1449,
        "startColumnNumber" : 4,
        "endLineNumber" : 1497,
        "endColumnNumber" : 5
      },
      "nodeContext" : "switch (escaped) {\ncase 'u':  if (pos + 4 > limit && !fillBuffer(4)) {\n    throw syntaxError(\"Unterminated escape sequence\");\n  }\nchar result=0;\nfor (int i=pos, end=i + 4; i < end; i++) {\nchar c=buffer[i];\nresult<<=4;\nif (c >= '0' && c <= '9') {\n  result+=(c - '0');\n}\n else if (c >= 'a' && c <= 'f') {\n  result+=(c - 'a' + 10);\n}\n else if (c >= 'A' && c <= 'F') {\n  result+=(c - 'A' + 10);\n}\n else {\n  throw new NumberFormatException(\"\\\\u\" + new String(buffer,pos,4));\n}\n}\npos+=4;\nreturn result;\ncase 't':return '\\t';\ncase 'b':return '\\b';\ncase 'n':return '\\n';\ncase 'r':return '\\r';\ncase 'f':return '\\f';\ncase '\\n':lineNumber++;\nlineStart=pos;\ncase '\\'':case '\"':case '\\\\':default:return escaped;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 162,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1212,
        "startLineNumber" : 1443,
        "startColumnNumber" : 56,
        "endLineNumber" : 1498,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (pos == limit && !fillBuffer(1)) {\n    throw syntaxError(\"Unterminated escape sequence\");\n  }\n  char escaped=buffer[pos++];\nswitch (escaped) {\ncase 'u':    if (pos + 4 > limit && !fillBuffer(4)) {\n      throw syntaxError(\"Unterminated escape sequence\");\n    }\n  char result=0;\nfor (int i=pos, end=i + 4; i < end; i++) {\n  char c=buffer[i];\n  result<<=4;\n  if (c >= '0' && c <= '9') {\n    result+=(c - '0');\n  }\n else   if (c >= 'a' && c <= 'f') {\n    result+=(c - 'a' + 10);\n  }\n else   if (c >= 'A' && c <= 'F') {\n    result+=(c - 'A' + 10);\n  }\n else {\n    throw new NumberFormatException(\"\\\\u\" + new String(buffer,pos,4));\n  }\n}\npos+=4;\nreturn result;\ncase 't':return '\\t';\ncase 'b':return '\\b';\ncase 'n':return '\\n';\ncase 'r':return '\\r';\ncase 'f':return '\\f';\ncase '\\n':lineNumber++;\nlineStart=pos;\ncase '\\'':case '\"':case '\\\\':default:return escaped;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 185,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1621,
        "startLineNumber" : 1434,
        "startColumnNumber" : 2,
        "endLineNumber" : 1498,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Unescapes the character identified by the character or characters that immediately follow a backslash. The backslash '\\' should have already been read. This supports both unicode escapes \"u000A\" and two-character escapes \"\\n\".\n * @throws NumberFormatException if any unicode escape sequences aremalformed.\n */\nprivate char readEscapeCharacter() throws IOException {\n  if (pos == limit && !fillBuffer(1)) {\n    throw syntaxError(\"Unterminated escape sequence\");\n  }\n  char escaped=buffer[pos++];\nswitch (escaped) {\ncase 'u':    if (pos + 4 > limit && !fillBuffer(4)) {\n      throw syntaxError(\"Unterminated escape sequence\");\n    }\n  char result=0;\nfor (int i=pos, end=i + 4; i < end; i++) {\n  char c=buffer[i];\n  result<<=4;\n  if (c >= '0' && c <= '9') {\n    result+=(c - '0');\n  }\n else   if (c >= 'a' && c <= 'f') {\n    result+=(c - 'a' + 10);\n  }\n else   if (c >= 'A' && c <= 'F') {\n    result+=(c - 'A' + 10);\n  }\n else {\n    throw new NumberFormatException(\"\\\\u\" + new String(buffer,pos,4));\n  }\n}\npos+=4;\nreturn result;\ncase 't':return '\\t';\ncase 'b':return '\\b';\ncase 'n':return '\\n';\ncase 'r':return '\\r';\ncase 'f':return '\\f';\ncase '\\n':lineNumber++;\nlineStart=pos;\ncase '\\'':case '\"':case '\\\\':default:return escaped;\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 192,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 1462,
        "startColumnNumber" : 10,
        "endLineNumber" : 1462,
        "endColumnNumber" : 35
      },
      "nodeContext" : "result+=(c - 'a' + 10);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 6
    },
    "tokenLength" : 5,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 1462,
    "startColumnNumber" : 20,
    "endLineNumber" : 1462,
    "endColumnNumber" : 34
  } ],
  "layoutRelationDataList" : [ ]
}