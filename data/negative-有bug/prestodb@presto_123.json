{
  "id" : 123,
  "expression" : "a(PRIVATE)",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-main/src/main/java/com/facebook/presto/operator/scalar/ConcatFunction.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "a(PRIVATE)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 177,
      "startColumnNumber" : 45,
      "endLineNumber" : 177,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 177,
        "startColumnNumber" : 8,
        "endLineNumber" : 177,
        "endColumnNumber" : 56
      },
      "nodeContext" : "definition.declareDefaultConstructor(a(PRIVATE))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 177,
        "startColumnNumber" : 8,
        "endLineNumber" : 177,
        "endColumnNumber" : 57
      },
      "nodeContext" : "definition.declareDefaultConstructor(a(PRIVATE));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1234,
        "startLineNumber" : 169,
        "startColumnNumber" : 4,
        "endLineNumber" : 192,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  checkCondition(arity <= 254,NOT_SUPPORTED,\"Too many arguments for string concatenation\");\n  ClassDefinition definition=new ClassDefinition(a(PUBLIC,FINAL),makeClassName(type.getBase() + \"_concat\" + arity+ \"ScalarFunction\"),type(Object.class));\n  definition.declareDefaultConstructor(a(PRIVATE));\n  List<Parameter> parameters=IntStream.range(0,arity).mapToObj(i -> arg(\"arg\" + i,Slice.class)).collect(toImmutableList());\n  MethodDefinition method=definition.declareMethod(a(PUBLIC,STATIC),\"concat\",type(Slice.class),parameters);\n  Scope scope=method.getScope();\n  BytecodeBlock body=method.getBody();\n  Variable result=scope.declareVariable(Slice.class,\"result\");\n  body.append(invokeStatic(ConcatFunction.class,\"concat\",Slice.class,BytecodeExpressions.newArray(ParameterizedType.type(Slice[].class),parameters))).retObject();\n  return defineClass(definition,Object.class,ImmutableMap.of(),new DynamicClassLoader(ConcatFunction.class.getClassLoader()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 164,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1308,
        "startLineNumber" : 168,
        "startColumnNumber" : 4,
        "endLineNumber" : 192,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static Class<?> generateConcat(TypeSignature type,int arity){\n  checkCondition(arity <= 254,NOT_SUPPORTED,\"Too many arguments for string concatenation\");\n  ClassDefinition definition=new ClassDefinition(a(PUBLIC,FINAL),makeClassName(type.getBase() + \"_concat\" + arity+ \"ScalarFunction\"),type(Object.class));\n  definition.declareDefaultConstructor(a(PRIVATE));\n  List<Parameter> parameters=IntStream.range(0,arity).mapToObj(i -> arg(\"arg\" + i,Slice.class)).collect(toImmutableList());\n  MethodDefinition method=definition.declareMethod(a(PUBLIC,STATIC),\"concat\",type(Slice.class),parameters);\n  Scope scope=method.getScope();\n  BytecodeBlock body=method.getBody();\n  Variable result=scope.declareVariable(Slice.class,\"result\");\n  body.append(invokeStatic(ConcatFunction.class,\"concat\",Slice.class,BytecodeExpressions.newArray(ParameterizedType.type(Slice[].class),parameters))).retObject();\n  return defineClass(definition,Object.class,ImmutableMap.of(),new DynamicClassLoader(ConcatFunction.class.getClassLoader()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 179,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 177,
        "startColumnNumber" : 8,
        "endLineNumber" : 177,
        "endColumnNumber" : 57
      },
      "nodeContext" : "definition.declareDefaultConstructor(a(PRIVATE));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.util.EnumSet<com.facebook.presto.bytecode.Access>"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 177,
    "startColumnNumber" : 45,
    "endLineNumber" : 177,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ ]
}