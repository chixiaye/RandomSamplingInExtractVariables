{
  "id" : 112,
  "expression" : "\"bob\"",
  "projectName" : "openzipkin@zipkin",
  "commitID" : "f02a993656f506277ca83737ddf494ed45fde4b3",
  "filePath" : "/zipkin-server/src/test/java/zipkin2/server/internal/rabbitmq/ZipkinRabbitMQCollectorPropertiesTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"bob\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 29,
      "startColumnNumber" : 27,
      "endLineNumber" : 29,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 29,
        "endColumnNumber" : 33
      },
      "nodeContext" : "properties.setUsername(\"bob\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 29,
        "endColumnNumber" : 34
      },
      "nodeContext" : "properties.setUsername(\"bob\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 779,
        "startLineNumber" : 26,
        "startColumnNumber" : 93,
        "endLineNumber" : 43,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  properties.setUri(URI.create(\"amqp://admin:admin@localhost:5678/myv\"));\n  properties.setAddresses(Collections.singletonList(\"will_not^work!\"));\n  properties.setUsername(\"bob\");\n  properties.setPassword(\"letmein\");\n  properties.setVirtualHost(\"drwho\");\n  assertThat(properties.toBuilder()).extracting(\"connectionFactory\").satisfies(object -> {\n    ConnectionFactory connFactory=(ConnectionFactory)object;\n    assertThat(connFactory.getHost()).isEqualTo(\"localhost\");\n    assertThat(connFactory.getPort()).isEqualTo(5678);\n    assertThat(connFactory.getUsername()).isEqualTo(\"admin\");\n    assertThat(connFactory.getPassword()).isEqualTo(\"admin\");\n    assertThat(connFactory.getVirtualHost()).isEqualTo(\"myv\");\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 870,
        "startLineNumber" : 26,
        "startColumnNumber" : 2,
        "endLineNumber" : 43,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void uriProperlyParsedAndIgnoresOtherProperties_whenUriSet() throws Exception {\n  properties.setUri(URI.create(\"amqp://admin:admin@localhost:5678/myv\"));\n  properties.setAddresses(Collections.singletonList(\"will_not^work!\"));\n  properties.setUsername(\"bob\");\n  properties.setPassword(\"letmein\");\n  properties.setVirtualHost(\"drwho\");\n  assertThat(properties.toBuilder()).extracting(\"connectionFactory\").satisfies(object -> {\n    ConnectionFactory connFactory=(ConnectionFactory)object;\n    assertThat(connFactory.getHost()).isEqualTo(\"localhost\");\n    assertThat(connFactory.getPort()).isEqualTo(5678);\n    assertThat(connFactory.getUsername()).isEqualTo(\"admin\");\n    assertThat(connFactory.getPassword()).isEqualTo(\"admin\");\n    assertThat(connFactory.getVirtualHost()).isEqualTo(\"myv\");\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 109,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 29,
        "endColumnNumber" : 34
      },
      "nodeContext" : "properties.setUsername(\"bob\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 29,
    "startColumnNumber" : 27,
    "endLineNumber" : 29,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}