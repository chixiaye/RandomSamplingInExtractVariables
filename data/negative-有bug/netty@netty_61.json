{
  "id" : 61,
  "expression" : "itr",
  "projectName" : "netty@netty",
  "commitID" : "8a68c3e58d4663ae42e41a90d0d11aec3c25016b",
  "filePath" : "/codec-http/src/main/java/io/netty/handler/codec/http/HttpHeaders.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "itr",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 1136,
      "startColumnNumber" : 15,
      "endLineNumber" : 1136,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 1136,
        "startColumnNumber" : 15,
        "endLineNumber" : 1136,
        "endColumnNumber" : 28
      },
      "nodeContext" : "itr.hasNext()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 160,
        "startLineNumber" : 1136,
        "startColumnNumber" : 8,
        "endLineNumber" : 1140,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (itr.hasNext()) {\n  if (containsCommaSeparatedTrimmed(itr.next(),value,ignoreCase)) {\n    return true;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 282,
        "startLineNumber" : 1134,
        "startColumnNumber" : 92,
        "endLineNumber" : 1142,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Iterator<? extends CharSequence> itr=valueCharSequenceIterator(name);\n  while (itr.hasNext()) {\n    if (containsCommaSeparatedTrimmed(itr.next(),value,ignoreCase)) {\n      return true;\n    }\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 963,
        "startLineNumber" : 1124,
        "startColumnNumber" : 4,
        "endLineNumber" : 1142,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Returns  {@code true} if a header with the {@code name} and {@code value} exists, {@code false} otherwise.This also handles multiple values that are separated with a  {@code ,}. <p> If  {@code ignoreCase} is {@code true} then a case insensitive compare is done on the value.\n * @param name the name of the header to find\n * @param value the value of the header to find\n * @param ignoreCase {@code true} then a case insensitive compare is run to compare values.otherwise a case sensitive compare is run to compare values.\n */\npublic boolean containsValue(CharSequence name,CharSequence value,boolean ignoreCase){\n  Iterator<? extends CharSequence> itr=valueCharSequenceIterator(name);\n  while (itr.hasNext()) {\n    if (containsCommaSeparatedTrimmed(itr.next(),value,ignoreCase)) {\n      return true;\n    }\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 47,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 1136,
        "startColumnNumber" : 15,
        "endLineNumber" : 1136,
        "endColumnNumber" : 28
      },
      "nodeContext" : "itr.hasNext()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.util.Iterator<>"
  }, {
    "nodeContext" : "itr",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 1137,
      "startColumnNumber" : 46,
      "endLineNumber" : 1137,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 1137,
        "startColumnNumber" : 46,
        "endLineNumber" : 1137,
        "endColumnNumber" : 56
      },
      "nodeContext" : "itr.next()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 1137,
        "startColumnNumber" : 16,
        "endLineNumber" : 1137,
        "endColumnNumber" : 76
      },
      "nodeContext" : "containsCommaSeparatedTrimmed(itr.next(),value,ignoreCase)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 1137,
        "startColumnNumber" : 12,
        "endLineNumber" : 1139,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (containsCommaSeparatedTrimmed(itr.next(),value,ignoreCase)) {\n  return true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 138,
        "startLineNumber" : 1136,
        "startColumnNumber" : 30,
        "endLineNumber" : 1140,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (containsCommaSeparatedTrimmed(itr.next(),value,ignoreCase)) {\n    return true;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 160,
        "startLineNumber" : 1136,
        "startColumnNumber" : 8,
        "endLineNumber" : 1140,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (itr.hasNext()) {\n  if (containsCommaSeparatedTrimmed(itr.next(),value,ignoreCase)) {\n    return true;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 282,
        "startLineNumber" : 1134,
        "startColumnNumber" : 92,
        "endLineNumber" : 1142,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Iterator<? extends CharSequence> itr=valueCharSequenceIterator(name);\n  while (itr.hasNext()) {\n    if (containsCommaSeparatedTrimmed(itr.next(),value,ignoreCase)) {\n      return true;\n    }\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 963,
        "startLineNumber" : 1124,
        "startColumnNumber" : 4,
        "endLineNumber" : 1142,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Returns  {@code true} if a header with the {@code name} and {@code value} exists, {@code false} otherwise.This also handles multiple values that are separated with a  {@code ,}. <p> If  {@code ignoreCase} is {@code true} then a case insensitive compare is done on the value.\n * @param name the name of the header to find\n * @param value the value of the header to find\n * @param ignoreCase {@code true} then a case insensitive compare is run to compare values.otherwise a case sensitive compare is run to compare values.\n */\npublic boolean containsValue(CharSequence name,CharSequence value,boolean ignoreCase){\n  Iterator<? extends CharSequence> itr=valueCharSequenceIterator(name);\n  while (itr.hasNext()) {\n    if (containsCommaSeparatedTrimmed(itr.next(),value,ignoreCase)) {\n      return true;\n    }\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 47,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 1137,
        "startColumnNumber" : 16,
        "endLineNumber" : 1137,
        "endColumnNumber" : 76
      },
      "nodeContext" : "containsCommaSeparatedTrimmed(itr.next(),value,ignoreCase)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Iterator<>"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 1136,
    "startColumnNumber" : 15,
    "endLineNumber" : 1136,
    "endColumnNumber" : 18
  }, {
    "charLength" : 3,
    "startLineNumber" : 1137,
    "startColumnNumber" : 46,
    "endLineNumber" : 1137,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}