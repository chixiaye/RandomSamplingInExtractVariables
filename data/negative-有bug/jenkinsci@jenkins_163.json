{
  "id" : 163,
  "expression" : "index == octets.length - 1",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/core/src/main/java/jenkins/org/apache/commons/validator/routines/InetAddressValidator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "index == octets.length - 1",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 169,
      "startColumnNumber" : 20,
      "endLineNumber" : 169,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 7,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 169,
        "startColumnNumber" : 20,
        "endLineNumber" : 169,
        "endColumnNumber" : 69
      },
      "nodeContext" : "index == octets.length - 1 && octet.contains(\".\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 263,
        "startLineNumber" : 169,
        "startColumnNumber" : 16,
        "endLineNumber" : 175,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (index == octets.length - 1 && octet.contains(\".\")) {\n  if (!isValidInet4Address(octet)) {\n    return false;\n  }\n  validOctets+=2;\n  continue;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 858,
        "startLineNumber" : 166,
        "startColumnNumber" : 19,
        "endLineNumber" : 188,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  emptyOctets=0;\n  if (index == octets.length - 1 && octet.contains(\".\")) {\n    if (!isValidInet4Address(octet)) {\n      return false;\n    }\n    validOctets+=2;\n    continue;\n  }\n  if (octet.length() > IPV6_MAX_HEX_DIGITS_PER_GROUP) {\n    return false;\n  }\n  int octetInt;\n  try {\n    octetInt=Integer.parseInt(octet,BASE_16);\n  }\n catch (  NumberFormatException e) {\n    return false;\n  }\n  if (octetInt < 0 || octetInt > MAX_UNSIGNED_SHORT) {\n    return false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1031,
        "startLineNumber" : 161,
        "startColumnNumber" : 12,
        "endLineNumber" : 188,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (octet.length() == 0) {\n  emptyOctets++;\n  if (emptyOctets > 1) {\n    return false;\n  }\n}\n else {\n  emptyOctets=0;\n  if (index == octets.length - 1 && octet.contains(\".\")) {\n    if (!isValidInet4Address(octet)) {\n      return false;\n    }\n    validOctets+=2;\n    continue;\n  }\n  if (octet.length() > IPV6_MAX_HEX_DIGITS_PER_GROUP) {\n    return false;\n  }\n  int octetInt;\n  try {\n    octetInt=Integer.parseInt(octet,BASE_16);\n  }\n catch (  NumberFormatException e) {\n    return false;\n  }\n  if (octetInt < 0 || octetInt > MAX_UNSIGNED_SHORT) {\n    return false;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 91,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1128,
        "startLineNumber" : 159,
        "startColumnNumber" : 60,
        "endLineNumber" : 190,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String octet=octets[index];\n  if (octet.length() == 0) {\n    emptyOctets++;\n    if (emptyOctets > 1) {\n      return false;\n    }\n  }\n else {\n    emptyOctets=0;\n    if (index == octets.length - 1 && octet.contains(\".\")) {\n      if (!isValidInet4Address(octet)) {\n        return false;\n      }\n      validOctets+=2;\n      continue;\n    }\n    if (octet.length() > IPV6_MAX_HEX_DIGITS_PER_GROUP) {\n      return false;\n    }\n    int octetInt;\n    try {\n      octetInt=Integer.parseInt(octet,BASE_16);\n    }\n catch (    NumberFormatException e) {\n      return false;\n    }\n    if (octetInt < 0 || octetInt > MAX_UNSIGNED_SHORT) {\n      return false;\n    }\n  }\n  validOctets++;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1180,
        "startLineNumber" : 159,
        "startColumnNumber" : 8,
        "endLineNumber" : 190,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int index=0; index < octets.length; index++) {\n  String octet=octets[index];\n  if (octet.length() == 0) {\n    emptyOctets++;\n    if (emptyOctets > 1) {\n      return false;\n    }\n  }\n else {\n    emptyOctets=0;\n    if (index == octets.length - 1 && octet.contains(\".\")) {\n      if (!isValidInet4Address(octet)) {\n        return false;\n      }\n      validOctets+=2;\n      continue;\n    }\n    if (octet.length() > IPV6_MAX_HEX_DIGITS_PER_GROUP) {\n      return false;\n    }\n    int octetInt;\n    try {\n      octetInt=Integer.parseInt(octet,BASE_16);\n    }\n catch (    NumberFormatException e) {\n      return false;\n    }\n    if (octetInt < 0 || octetInt > MAX_UNSIGNED_SHORT) {\n      return false;\n    }\n  }\n  validOctets++;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 116,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2491,
        "startLineNumber" : 134,
        "startColumnNumber" : 60,
        "endLineNumber" : 195,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  boolean containsCompressedZeroes=inet6Address.contains(\"::\");\n  if (containsCompressedZeroes && (inet6Address.indexOf(\"::\") != inet6Address.lastIndexOf(\"::\"))) {\n    return false;\n  }\n  if ((inet6Address.startsWith(\":\") && !inet6Address.startsWith(\"::\")) || (inet6Address.endsWith(\":\") && !inet6Address.endsWith(\"::\"))) {\n    return false;\n  }\n  String[] octets=inet6Address.split(\":\");\n  if (containsCompressedZeroes) {\n    List<String> octetList=new ArrayList<>(Arrays.asList(octets));\n    if (inet6Address.endsWith(\"::\")) {\n      octetList.add(\"\");\n    }\n else     if (inet6Address.startsWith(\"::\") && !octetList.isEmpty()) {\n      octetList.remove(0);\n    }\n    octets=octetList.toArray(new String[0]);\n  }\n  if (octets.length > IPV6_MAX_HEX_GROUPS) {\n    return false;\n  }\n  int validOctets=0;\n  int emptyOctets=0;\n  for (int index=0; index < octets.length; index++) {\n    String octet=octets[index];\n    if (octet.length() == 0) {\n      emptyOctets++;\n      if (emptyOctets > 1) {\n        return false;\n      }\n    }\n else {\n      emptyOctets=0;\n      if (index == octets.length - 1 && octet.contains(\".\")) {\n        if (!isValidInet4Address(octet)) {\n          return false;\n        }\n        validOctets+=2;\n        continue;\n      }\n      if (octet.length() > IPV6_MAX_HEX_DIGITS_PER_GROUP) {\n        return false;\n      }\n      int octetInt;\n      try {\n        octetInt=Integer.parseInt(octet,BASE_16);\n      }\n catch (      NumberFormatException e) {\n        return false;\n      }\n      if (octetInt < 0 || octetInt > MAX_UNSIGNED_SHORT) {\n        return false;\n      }\n    }\n    validOctets++;\n  }\n  if (validOctets > IPV6_MAX_HEX_GROUPS || (validOctets < IPV6_MAX_HEX_GROUPS && !containsCompressedZeroes)) {\n    return false;\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 273,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2777,
        "startLineNumber" : 127,
        "startColumnNumber" : 4,
        "endLineNumber" : 195,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Validates an IPv6 address. Returns true if valid.\n * @param inet6Address the IPv6 address to validate\n * @return true if the argument contains a valid IPv6 address\n * @since 1.4.1\n */\npublic boolean isValidInet6Address(String inet6Address){\n  boolean containsCompressedZeroes=inet6Address.contains(\"::\");\n  if (containsCompressedZeroes && (inet6Address.indexOf(\"::\") != inet6Address.lastIndexOf(\"::\"))) {\n    return false;\n  }\n  if ((inet6Address.startsWith(\":\") && !inet6Address.startsWith(\"::\")) || (inet6Address.endsWith(\":\") && !inet6Address.endsWith(\"::\"))) {\n    return false;\n  }\n  String[] octets=inet6Address.split(\":\");\n  if (containsCompressedZeroes) {\n    List<String> octetList=new ArrayList<>(Arrays.asList(octets));\n    if (inet6Address.endsWith(\"::\")) {\n      octetList.add(\"\");\n    }\n else     if (inet6Address.startsWith(\"::\") && !octetList.isEmpty()) {\n      octetList.remove(0);\n    }\n    octets=octetList.toArray(new String[0]);\n  }\n  if (octets.length > IPV6_MAX_HEX_GROUPS) {\n    return false;\n  }\n  int validOctets=0;\n  int emptyOctets=0;\n  for (int index=0; index < octets.length; index++) {\n    String octet=octets[index];\n    if (octet.length() == 0) {\n      emptyOctets++;\n      if (emptyOctets > 1) {\n        return false;\n      }\n    }\n else {\n      emptyOctets=0;\n      if (index == octets.length - 1 && octet.contains(\".\")) {\n        if (!isValidInet4Address(octet)) {\n          return false;\n        }\n        validOctets+=2;\n        continue;\n      }\n      if (octet.length() > IPV6_MAX_HEX_DIGITS_PER_GROUP) {\n        return false;\n      }\n      int octetInt;\n      try {\n        octetInt=Integer.parseInt(octet,BASE_16);\n      }\n catch (      NumberFormatException e) {\n        return false;\n      }\n      if (octetInt < 0 || octetInt > MAX_UNSIGNED_SHORT) {\n        return false;\n      }\n    }\n    validOctets++;\n  }\n  if (validOctets > IPV6_MAX_HEX_GROUPS || (validOctets < IPV6_MAX_HEX_GROUPS && !containsCompressedZeroes)) {\n    return false;\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 282,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 169,
        "startColumnNumber" : 20,
        "endLineNumber" : 169,
        "endColumnNumber" : 69
      },
      "nodeContext" : "index == octets.length - 1 && octet.contains(\".\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 6,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 26,
    "startLineNumber" : 169,
    "startColumnNumber" : 20,
    "endLineNumber" : 169,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ ]
}