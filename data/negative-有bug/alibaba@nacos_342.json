{
  "id" : 342,
  "expression" : "c1 == c2",
  "projectName" : "alibaba@nacos",
  "commitID" : "4e7346db1d6657ffe07c96bebd2d348229c2812f",
  "filePath" : "/api/src/main/java/com/alibaba/nacos/api/utils/StringUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "c1 == c2",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 170,
      "startColumnNumber" : 16,
      "endLineNumber" : 170,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 170,
        "startColumnNumber" : 12,
        "endLineNumber" : 172,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (c1 == c2) {\n  continue;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 555,
        "startLineNumber" : 166,
        "startColumnNumber" : 29,
        "endLineNumber" : 183,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final char c1=cs.charAt(index1++);\n  final char c2=substring.charAt(index2++);\n  if (c1 == c2) {\n    continue;\n  }\n  if (!ignoreCase) {\n    return false;\n  }\n  if (Character.toUpperCase(c1) != Character.toUpperCase(c2) && Character.toLowerCase(c1) != Character.toLowerCase(c2)) {\n    return false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 576,
        "startLineNumber" : 166,
        "startColumnNumber" : 8,
        "endLineNumber" : 183,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (tmpLen-- > 0) {\n  final char c1=cs.charAt(index1++);\n  final char c2=substring.charAt(index2++);\n  if (c1 == c2) {\n    continue;\n  }\n  if (!ignoreCase) {\n    return false;\n  }\n  if (Character.toUpperCase(c1) != Character.toUpperCase(c2) && Character.toLowerCase(c1) != Character.toLowerCase(c2)) {\n    return false;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 61,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 903,
        "startLineNumber" : 158,
        "startColumnNumber" : 77,
        "endLineNumber" : 186,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (cs instanceof String && substring instanceof String) {\n    return ((String)cs).regionMatches(ignoreCase,thisStart,(String)substring,start,length);\n  }\n  int index1=thisStart;\n  int index2=start;\n  int tmpLen=length;\n  while (tmpLen-- > 0) {\n    final char c1=cs.charAt(index1++);\n    final char c2=substring.charAt(index2++);\n    if (c1 == c2) {\n      continue;\n    }\n    if (!ignoreCase) {\n      return false;\n    }\n    if (Character.toUpperCase(c1) != Character.toUpperCase(c2) && Character.toLowerCase(c1) != Character.toLowerCase(c2)) {\n      return false;\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1606,
        "startLineNumber" : 146,
        "startColumnNumber" : 4,
        "endLineNumber" : 186,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Green implementation of regionMatches.\n * @param cs         the {@code CharSequence} to be processed\n * @param ignoreCase whether or not to be case insensitive\n * @param thisStart  the index to start on the {@code cs} CharSequence\n * @param substring  the {@code CharSequence} to be looked for\n * @param start      the index to start on the {@code substring} CharSequence\n * @param length     character length of the region\n * @return whether the region matched\n */\npublic static boolean regionMatches(final CharSequence cs,final boolean ignoreCase,final int thisStart,final CharSequence substring,final int start,final int length){\n  if (cs instanceof String && substring instanceof String) {\n    return ((String)cs).regionMatches(ignoreCase,thisStart,(String)substring,start,length);\n  }\n  int index1=thisStart;\n  int index2=start;\n  int tmpLen=length;\n  while (tmpLen-- > 0) {\n    final char c1=cs.charAt(index1++);\n    final char c2=substring.charAt(index2++);\n    if (c1 == c2) {\n      continue;\n    }\n    if (!ignoreCase) {\n      return false;\n    }\n    if (Character.toUpperCase(c1) != Character.toUpperCase(c2) && Character.toLowerCase(c1) != Character.toLowerCase(c2)) {\n      return false;\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 138,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 170,
        "startColumnNumber" : 12,
        "endLineNumber" : 172,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (c1 == c2) {\n  continue;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 170,
    "startColumnNumber" : 16,
    "endLineNumber" : 170,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ ]
}