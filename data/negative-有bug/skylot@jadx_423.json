{
  "id" : 423,
  "expression" : "searchInSkippedClasses(text,ignoreCase)",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-gui/src/main/java/jadx/gui/utils/search/TextSearchIndex.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "searchInSkippedClasses(text,ignoreCase)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 40,
      "startLineNumber" : 109,
      "startColumnNumber" : 37,
      "endLineNumber" : 109,
      "endColumnNumber" : 77
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 109,
        "startColumnNumber" : 13,
        "endLineNumber" : 109,
        "endColumnNumber" : 78
      },
      "nodeContext" : "Flowable.concat(result,searchInSkippedClasses(text,ignoreCase))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 109,
        "startColumnNumber" : 4,
        "endLineNumber" : 109,
        "endColumnNumber" : 78
      },
      "nodeContext" : "result=Flowable.concat(result,searchInSkippedClasses(text,ignoreCase))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 109,
        "startColumnNumber" : 4,
        "endLineNumber" : 109,
        "endColumnNumber" : 79
      },
      "nodeContext" : "result=Flowable.concat(result,searchInSkippedClasses(text,ignoreCase));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 108,
        "startColumnNumber" : 34,
        "endLineNumber" : 110,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  result=Flowable.concat(result,searchInSkippedClasses(text,ignoreCase));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 108,
        "startColumnNumber" : 3,
        "endLineNumber" : 110,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (!skippedClasses.isEmpty()) {\n  result=Flowable.concat(result,searchInSkippedClasses(text,ignoreCase));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 236,
        "startLineNumber" : 104,
        "startColumnNumber" : 30,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (codeIndex.size() > 0) {\n    result=Flowable.concat(result,codeIndex.search(text,ignoreCase));\n  }\n  if (!skippedClasses.isEmpty()) {\n    result=Flowable.concat(result,searchInSkippedClasses(text,ignoreCase));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 37,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 264,
        "startLineNumber" : 104,
        "startColumnNumber" : 2,
        "endLineNumber" : 111,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (options.contains(CODE)) {\n  if (codeIndex.size() > 0) {\n    result=Flowable.concat(result,codeIndex.search(text,ignoreCase));\n  }\n  if (!skippedClasses.isEmpty()) {\n    result=Flowable.concat(result,searchInSkippedClasses(text,ignoreCase));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 42,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 791,
        "startLineNumber" : 90,
        "startColumnNumber" : 90,
        "endLineNumber" : 113,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  boolean ignoreCase=options.contains(IGNORE_CASE);\n  LOG.debug(\"Building search, ignoreCase: {}\",ignoreCase);\n  Flowable<JNode> result=Flowable.empty();\n  if (options.contains(CLASS)) {\n    result=Flowable.concat(result,clsNamesIndex.search(text,ignoreCase));\n  }\n  if (options.contains(METHOD)) {\n    result=Flowable.concat(result,mthNamesIndex.search(text,ignoreCase));\n  }\n  if (options.contains(FIELD)) {\n    result=Flowable.concat(result,fldNamesIndex.search(text,ignoreCase));\n  }\n  if (options.contains(CODE)) {\n    if (codeIndex.size() > 0) {\n      result=Flowable.concat(result,codeIndex.search(text,ignoreCase));\n    }\n    if (!skippedClasses.isEmpty()) {\n      result=Flowable.concat(result,searchInSkippedClasses(text,ignoreCase));\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 880,
        "startLineNumber" : 90,
        "startColumnNumber" : 1,
        "endLineNumber" : 113,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public Flowable<JNode> buildSearch(String text,Set<SearchDialog.SearchOptions> options){\n  boolean ignoreCase=options.contains(IGNORE_CASE);\n  LOG.debug(\"Building search, ignoreCase: {}\",ignoreCase);\n  Flowable<JNode> result=Flowable.empty();\n  if (options.contains(CLASS)) {\n    result=Flowable.concat(result,clsNamesIndex.search(text,ignoreCase));\n  }\n  if (options.contains(METHOD)) {\n    result=Flowable.concat(result,mthNamesIndex.search(text,ignoreCase));\n  }\n  if (options.contains(FIELD)) {\n    result=Flowable.concat(result,fldNamesIndex.search(text,ignoreCase));\n  }\n  if (options.contains(CODE)) {\n    if (codeIndex.size() > 0) {\n      result=Flowable.concat(result,codeIndex.search(text,ignoreCase));\n    }\n    if (!skippedClasses.isEmpty()) {\n      result=Flowable.concat(result,searchInSkippedClasses(text,ignoreCase));\n    }\n  }\n  return result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 145,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 109,
        "startColumnNumber" : 4,
        "endLineNumber" : 109,
        "endColumnNumber" : 79
      },
      "nodeContext" : "result=Flowable.concat(result,searchInSkippedClasses(text,ignoreCase));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "jadx.gui.utils.search.Flowable<jadx.gui.treemodel.CodeNode>"
  } ],
  "positionList" : [ {
    "charLength" : 40,
    "startLineNumber" : 109,
    "startColumnNumber" : 37,
    "endLineNumber" : 109,
    "endColumnNumber" : 77
  } ],
  "layoutRelationDataList" : [ ]
}