{
  "id" : 353,
  "expression" : "event.getTestQueryInfo()",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-verifier/src/test/java/com/facebook/presto/verifier/framework/AbstractDdlVerificationTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "event.getTestQueryInfo()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 54,
      "startColumnNumber" : 21,
      "endLineNumber" : 54,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 54,
        "startColumnNumber" : 21,
        "endLineNumber" : 54,
        "endColumnNumber" : 63
      },
      "nodeContext" : "event.getTestQueryInfo().getSetupQueries()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 54,
        "startColumnNumber" : 21,
        "endLineNumber" : 54,
        "endColumnNumber" : 70
      },
      "nodeContext" : "event.getTestQueryInfo().getSetupQueries().size()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 88
      },
      "nodeContext" : "assertEquals(event.getTestQueryInfo().getSetupQueries().size(),setupQueryCount)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 89
      },
      "nodeContext" : "assertEquals(event.getTestQueryInfo().getSetupQueries().size(),setupQueryCount);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 715,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 57,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertEquals(event.getSuite(),SUITE);\n  assertEquals(event.getTestId(),TEST_ID);\n  assertEquals(event.getName(),NAME);\n  assertEquals(event.getStatus(),expectedStatus.name());\n  expectedMatchType.ifPresent(matchType -> assertEquals(event.getMatchType(),matchType.name()));\n  int setupQueryCount=hasSetupQuery ? 1 : 0;\n  assertEquals(event.getControlQueryInfo().getSetupQueries().size(),setupQueryCount);\n  assertEquals(event.getTestQueryInfo().getSetupQueries().size(),setupQueryCount);\n  assertEquals(event.getControlQueryInfo().getTeardownQueries().size(),1);\n  assertEquals(event.getTestQueryInfo().getTeardownQueries().size(),1);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 911,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 57,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected void assertEvent(VerifierQueryEvent event,EventStatus expectedStatus,Optional<MatchType> expectedMatchType,boolean hasSetupQuery){\n  assertEquals(event.getSuite(),SUITE);\n  assertEquals(event.getTestId(),TEST_ID);\n  assertEquals(event.getName(),NAME);\n  assertEquals(event.getStatus(),expectedStatus.name());\n  expectedMatchType.ifPresent(matchType -> assertEquals(event.getMatchType(),matchType.name()));\n  int setupQueryCount=hasSetupQuery ? 1 : 0;\n  assertEquals(event.getControlQueryInfo().getSetupQueries().size(),setupQueryCount);\n  assertEquals(event.getTestQueryInfo().getSetupQueries().size(),setupQueryCount);\n  assertEquals(event.getControlQueryInfo().getTeardownQueries().size(),1);\n  assertEquals(event.getTestQueryInfo().getTeardownQueries().size(),1);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 120,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 54,
        "endColumnNumber" : 89
      },
      "nodeContext" : "assertEquals(event.getTestQueryInfo().getSetupQueries().size(),setupQueryCount);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "com.facebook.presto.verifier.event.QueryInfo"
  }, {
    "nodeContext" : "event.getTestQueryInfo()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 56,
      "startColumnNumber" : 21,
      "endLineNumber" : 56,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 56,
        "startColumnNumber" : 21,
        "endLineNumber" : 56,
        "endColumnNumber" : 66
      },
      "nodeContext" : "event.getTestQueryInfo().getTeardownQueries()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 56,
        "startColumnNumber" : 21,
        "endLineNumber" : 56,
        "endColumnNumber" : 73
      },
      "nodeContext" : "event.getTestQueryInfo().getTeardownQueries().size()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 77
      },
      "nodeContext" : "assertEquals(event.getTestQueryInfo().getTeardownQueries().size(),1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 78
      },
      "nodeContext" : "assertEquals(event.getTestQueryInfo().getTeardownQueries().size(),1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 715,
        "startLineNumber" : 45,
        "startColumnNumber" : 4,
        "endLineNumber" : 57,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertEquals(event.getSuite(),SUITE);\n  assertEquals(event.getTestId(),TEST_ID);\n  assertEquals(event.getName(),NAME);\n  assertEquals(event.getStatus(),expectedStatus.name());\n  expectedMatchType.ifPresent(matchType -> assertEquals(event.getMatchType(),matchType.name()));\n  int setupQueryCount=hasSetupQuery ? 1 : 0;\n  assertEquals(event.getControlQueryInfo().getSetupQueries().size(),setupQueryCount);\n  assertEquals(event.getTestQueryInfo().getSetupQueries().size(),setupQueryCount);\n  assertEquals(event.getControlQueryInfo().getTeardownQueries().size(),1);\n  assertEquals(event.getTestQueryInfo().getTeardownQueries().size(),1);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 98,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 911,
        "startLineNumber" : 40,
        "startColumnNumber" : 4,
        "endLineNumber" : 57,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected void assertEvent(VerifierQueryEvent event,EventStatus expectedStatus,Optional<MatchType> expectedMatchType,boolean hasSetupQuery){\n  assertEquals(event.getSuite(),SUITE);\n  assertEquals(event.getTestId(),TEST_ID);\n  assertEquals(event.getName(),NAME);\n  assertEquals(event.getStatus(),expectedStatus.name());\n  expectedMatchType.ifPresent(matchType -> assertEquals(event.getMatchType(),matchType.name()));\n  int setupQueryCount=hasSetupQuery ? 1 : 0;\n  assertEquals(event.getControlQueryInfo().getSetupQueries().size(),setupQueryCount);\n  assertEquals(event.getTestQueryInfo().getSetupQueries().size(),setupQueryCount);\n  assertEquals(event.getControlQueryInfo().getTeardownQueries().size(),1);\n  assertEquals(event.getTestQueryInfo().getTeardownQueries().size(),1);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 120,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 56,
        "endColumnNumber" : 78
      },
      "nodeContext" : "assertEquals(event.getTestQueryInfo().getTeardownQueries().size(),1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "com.facebook.presto.verifier.event.QueryInfo"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 54,
    "startColumnNumber" : 21,
    "endLineNumber" : 54,
    "endColumnNumber" : 45
  }, {
    "charLength" : 24,
    "startLineNumber" : 56,
    "startColumnNumber" : 21,
    "endLineNumber" : 56,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}