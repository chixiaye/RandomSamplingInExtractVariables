{
  "id" : 187,
  "expression" : "new HystrixContextRunnable(new Runnable(){\n  @Override public void run(){\n    rejectedCmd.observe();\n  }\n}\n)",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-core/src/test/java/com/netflix/hystrix/metric/consumer/RollingThreadPoolMaxConcurrencyStreamTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new HystrixContextRunnable(new Runnable(){\n  @Override public void run(){\n    rejectedCmd.observe();\n  }\n}\n)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 181,
      "startLineNumber" : 402,
      "startColumnNumber" : 30,
      "endLineNumber" : 407,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 18,
    "astHeight" : 8,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 200,
        "startLineNumber" : 402,
        "startColumnNumber" : 12,
        "endLineNumber" : 407,
        "endColumnNumber" : 15
      },
      "nodeContext" : "threadPool.submit(new HystrixContextRunnable(new Runnable(){\n  @Override public void run(){\n    rejectedCmd.observe();\n  }\n}\n))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 21,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 201,
        "startLineNumber" : 402,
        "startColumnNumber" : 12,
        "endLineNumber" : 407,
        "endColumnNumber" : 16
      },
      "nodeContext" : "threadPool.submit(new HystrixContextRunnable(new Runnable(){\n  @Override public void run(){\n    rejectedCmd.observe();\n  }\n}\n));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 22,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 225,
        "startLineNumber" : 401,
        "startColumnNumber" : 50,
        "endLineNumber" : 408,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  threadPool.submit(new HystrixContextRunnable(new Runnable(){\n    @Override public void run(){\n      rejectedCmd.observe();\n    }\n  }\n));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 267,
        "startLineNumber" : 401,
        "startColumnNumber" : 8,
        "endLineNumber" : 408,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (final Command rejectedCmd : rejected) {\n  threadPool.submit(new HystrixContextRunnable(new Runnable(){\n    @Override public void run(){\n      rejectedCmd.observe();\n    }\n  }\n));\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 30,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2422,
        "startLineNumber" : 366,
        "startColumnNumber" : 105,
        "endLineNumber" : 418,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HystrixCommandGroupKey groupKey=HystrixCommandGroupKey.Factory.asKey(\"ThreadPool-Concurrency-I\");\n  HystrixThreadPoolKey threadPoolKey=HystrixThreadPoolKey.Factory.asKey(\"ThreadPool-Concurrency-I\");\n  HystrixCommandKey key=HystrixCommandKey.Factory.asKey(\"RollingConcurrency-I\");\n  stream=RollingThreadPoolMaxConcurrencyStream.getInstance(threadPoolKey,10,100);\n  stream.startCachingStreamValuesIfUnstarted();\n  final CountDownLatch latch=new CountDownLatch(1);\n  stream.observe().take(10).subscribe(getSubscriber(latch));\n  List<Command> saturators=new ArrayList<Command>();\n  for (int i=0; i < 10; i++) {\n    saturators.add(Command.from(groupKey,key,HystrixEventType.SUCCESS,400,HystrixCommandProperties.ExecutionIsolationStrategy.SEMAPHORE));\n  }\n  final List<Command> rejected=new ArrayList<Command>();\n  for (int i=0; i < 10; i++) {\n    rejected.add(Command.from(groupKey,key,HystrixEventType.SUCCESS,100,HystrixCommandProperties.ExecutionIsolationStrategy.SEMAPHORE));\n  }\n  for (  final Command saturatingCmd : saturators) {\n    threadPool.submit(new HystrixContextRunnable(new Runnable(){\n      @Override public void run(){\n        saturatingCmd.observe();\n      }\n    }\n));\n  }\n  Thread.sleep(30);\n  for (  final Command rejectedCmd : rejected) {\n    threadPool.submit(new HystrixContextRunnable(new Runnable(){\n      @Override public void run(){\n        rejectedCmd.observe();\n      }\n    }\n));\n  }\n  assertTrue(latch.await(10000,TimeUnit.MILLISECONDS));\n  System.out.println(\"ReqLog : \" + HystrixRequestLog.getCurrentRequest().getExecutedCommandsAsString());\n  for (  Command rejectedCmd : rejected) {\n    assertTrue(rejectedCmd.isResponseSemaphoreRejected() || rejectedCmd.isResponseShortCircuited());\n  }\n  assertEquals(0,stream.getLatestRollingMax());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 270,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2533,
        "startLineNumber" : 365,
        "startColumnNumber" : 4,
        "endLineNumber" : 418,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testConcurrencyStreamProperlyFiltersOutSemaphoreRejections() throws InterruptedException {\n  HystrixCommandGroupKey groupKey=HystrixCommandGroupKey.Factory.asKey(\"ThreadPool-Concurrency-I\");\n  HystrixThreadPoolKey threadPoolKey=HystrixThreadPoolKey.Factory.asKey(\"ThreadPool-Concurrency-I\");\n  HystrixCommandKey key=HystrixCommandKey.Factory.asKey(\"RollingConcurrency-I\");\n  stream=RollingThreadPoolMaxConcurrencyStream.getInstance(threadPoolKey,10,100);\n  stream.startCachingStreamValuesIfUnstarted();\n  final CountDownLatch latch=new CountDownLatch(1);\n  stream.observe().take(10).subscribe(getSubscriber(latch));\n  List<Command> saturators=new ArrayList<Command>();\n  for (int i=0; i < 10; i++) {\n    saturators.add(Command.from(groupKey,key,HystrixEventType.SUCCESS,400,HystrixCommandProperties.ExecutionIsolationStrategy.SEMAPHORE));\n  }\n  final List<Command> rejected=new ArrayList<Command>();\n  for (int i=0; i < 10; i++) {\n    rejected.add(Command.from(groupKey,key,HystrixEventType.SUCCESS,100,HystrixCommandProperties.ExecutionIsolationStrategy.SEMAPHORE));\n  }\n  for (  final Command saturatingCmd : saturators) {\n    threadPool.submit(new HystrixContextRunnable(new Runnable(){\n      @Override public void run(){\n        saturatingCmd.observe();\n      }\n    }\n));\n  }\n  Thread.sleep(30);\n  for (  final Command rejectedCmd : rejected) {\n    threadPool.submit(new HystrixContextRunnable(new Runnable(){\n      @Override public void run(){\n        rejectedCmd.observe();\n      }\n    }\n));\n  }\n  assertTrue(latch.await(10000,TimeUnit.MILLISECONDS));\n  System.out.println(\"ReqLog : \" + HystrixRequestLog.getCurrentRequest().getExecutedCommandsAsString());\n  for (  Command rejectedCmd : rejected) {\n    assertTrue(rejectedCmd.isResponseSemaphoreRejected() || rejectedCmd.isResponseShortCircuited());\n  }\n  assertEquals(0,stream.getLatestRollingMax());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 278,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 201,
        "startLineNumber" : 402,
        "startColumnNumber" : 12,
        "endLineNumber" : 407,
        "endColumnNumber" : 16
      },
      "nodeContext" : "threadPool.submit(new HystrixContextRunnable(new Runnable(){\n  @Override public void run(){\n    rejectedCmd.observe();\n  }\n}\n));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 22,
      "astHeight" : 10
    },
    "tokenLength" : 6,
    "type" : "com.netflix.hystrix.strategy.concurrency.HystrixContextRunnable"
  } ],
  "positionList" : [ {
    "charLength" : 181,
    "startLineNumber" : 402,
    "startColumnNumber" : 30,
    "endLineNumber" : 407,
    "endColumnNumber" : 14
  } ],
  "layoutRelationDataList" : [ ]
}