{
  "id" : 361,
  "expression" : "p",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/test/java/com/williamfiset/algorithms/graphtheory/KahnsTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "p",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 74,
      "startColumnNumber" : 25,
      "endLineNumber" : 74,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 74,
        "startColumnNumber" : 25,
        "endLineNumber" : 74,
        "endColumnNumber" : 33
      },
      "nodeContext" : "p <= 1.0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 326,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (double p=0.7; p <= 1.0; p+=0.02) {\n  GraphGenerator.DagGenerator dagGen=new GraphGenerator.DagGenerator(2,20,4,15,p);\n  List<List<Integer>> g=dagGen.createDag();\n  Kahns solver=new Kahns();\n  int[] order=solver.kahns(g);\n  assertThat(isTopsortOrdering(g,order)).isEqualTo(true);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 72,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 336,
        "startLineNumber" : 73,
        "startColumnNumber" : 28,
        "endLineNumber" : 81,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (double p=0.7; p <= 1.0; p+=0.02) {\n    GraphGenerator.DagGenerator dagGen=new GraphGenerator.DagGenerator(2,20,4,15,p);\n    List<List<Integer>> g=dagGen.createDag();\n    Kahns solver=new Kahns();\n    int[] order=solver.kahns(g);\n    assertThat(isTopsortOrdering(g,order)).isEqualTo(true);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 370,
        "startLineNumber" : 72,
        "startColumnNumber" : 2,
        "endLineNumber" : 81,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void randomTests(){\n  for (double p=0.7; p <= 1.0; p+=0.02) {\n    GraphGenerator.DagGenerator dagGen=new GraphGenerator.DagGenerator(2,20,4,15,p);\n    List<List<Integer>> g=dagGen.createDag();\n    Kahns solver=new Kahns();\n    int[] order=solver.kahns(g);\n    assertThat(isTopsortOrdering(g,order)).isEqualTo(true);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 79,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 8,
        "startLineNumber" : 74,
        "startColumnNumber" : 25,
        "endLineNumber" : 74,
        "endColumnNumber" : 33
      },
      "nodeContext" : "p <= 1.0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "double"
  }, {
    "nodeContext" : "p",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 75,
      "startColumnNumber" : 89,
      "endLineNumber" : 75,
      "endColumnNumber" : 90
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 75,
        "startColumnNumber" : 43,
        "endLineNumber" : 75,
        "endColumnNumber" : 91
      },
      "nodeContext" : "new GraphGenerator.DagGenerator(2,20,4,15,p)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 75,
        "startColumnNumber" : 34,
        "endLineNumber" : 75,
        "endColumnNumber" : 91
      },
      "nodeContext" : "dagGen=new GraphGenerator.DagGenerator(2,20,4,15,p)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 75,
        "startColumnNumber" : 6,
        "endLineNumber" : 75,
        "endColumnNumber" : 92
      },
      "nodeContext" : "GraphGenerator.DagGenerator dagGen=new GraphGenerator.DagGenerator(2,20,4,15,p);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 284,
        "startLineNumber" : 74,
        "startColumnNumber" : 46,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  GraphGenerator.DagGenerator dagGen=new GraphGenerator.DagGenerator(2,20,4,15,p);\n  List<List<Integer>> g=dagGen.createDag();\n  Kahns solver=new Kahns();\n  int[] order=solver.kahns(g);\n  assertThat(isTopsortOrdering(g,order)).isEqualTo(true);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 60,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 326,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (double p=0.7; p <= 1.0; p+=0.02) {\n  GraphGenerator.DagGenerator dagGen=new GraphGenerator.DagGenerator(2,20,4,15,p);\n  List<List<Integer>> g=dagGen.createDag();\n  Kahns solver=new Kahns();\n  int[] order=solver.kahns(g);\n  assertThat(isTopsortOrdering(g,order)).isEqualTo(true);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 72,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 336,
        "startLineNumber" : 73,
        "startColumnNumber" : 28,
        "endLineNumber" : 81,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (double p=0.7; p <= 1.0; p+=0.02) {\n    GraphGenerator.DagGenerator dagGen=new GraphGenerator.DagGenerator(2,20,4,15,p);\n    List<List<Integer>> g=dagGen.createDag();\n    Kahns solver=new Kahns();\n    int[] order=solver.kahns(g);\n    assertThat(isTopsortOrdering(g,order)).isEqualTo(true);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 370,
        "startLineNumber" : 72,
        "startColumnNumber" : 2,
        "endLineNumber" : 81,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void randomTests(){\n  for (double p=0.7; p <= 1.0; p+=0.02) {\n    GraphGenerator.DagGenerator dagGen=new GraphGenerator.DagGenerator(2,20,4,15,p);\n    List<List<Integer>> g=dagGen.createDag();\n    Kahns solver=new Kahns();\n    int[] order=solver.kahns(g);\n    assertThat(isTopsortOrdering(g,order)).isEqualTo(true);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 79,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 75,
        "startColumnNumber" : 6,
        "endLineNumber" : 75,
        "endColumnNumber" : 92
      },
      "nodeContext" : "GraphGenerator.DagGenerator dagGen=new GraphGenerator.DagGenerator(2,20,4,15,p);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "double"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 74,
    "startColumnNumber" : 25,
    "endLineNumber" : 74,
    "endColumnNumber" : 26
  }, {
    "charLength" : 1,
    "startLineNumber" : 75,
    "startColumnNumber" : 89,
    "endLineNumber" : 75,
    "endColumnNumber" : 90
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}