{
  "id" : 183,
  "expression" : "30",
  "projectName" : "material-components@material-components-android",
  "commitID" : "79bf9d0e8e62eea9c2f2620d4e1a0a2ca0e12017",
  "filePath" : "/lib/java/com/google/android/material/timepicker/TimePickerClockPresenter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "30",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 231,
      "startColumnNumber" : 47,
      "endLineNumber" : 231,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 231,
        "startColumnNumber" : 26,
        "endLineNumber" : 231,
        "endColumnNumber" : 49
      },
      "nodeContext" : "(rotationInt + 15) / 30",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 231,
        "startColumnNumber" : 12,
        "endLineNumber" : 231,
        "endColumnNumber" : 49
      },
      "nodeContext" : "newRotation=(rotationInt + 15) / 30",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 231,
        "startColumnNumber" : 8,
        "endLineNumber" : 231,
        "endColumnNumber" : 50
      },
      "nodeContext" : "int newRotation=(rotationInt + 15) / 30;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 245,
        "startLineNumber" : 229,
        "startColumnNumber" : 30,
        "endLineNumber" : 234,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  int newRotation=(rotationInt + 15) / 30;\n  time.setMinute(newRotation * 5);\n  minuteRotation=time.minute * DEGREES_PER_MINUTE;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 269,
        "startLineNumber" : 229,
        "startColumnNumber" : 6,
        "endLineNumber" : 234,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (!moveInEventStream) {\n  int newRotation=(rotationInt + 15) / 30;\n  time.setMinute(newRotation * 5);\n  minuteRotation=time.minute * DEGREES_PER_MINUTE;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 29,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 421,
        "startLineNumber" : 227,
        "startColumnNumber" : 11,
        "endLineNumber" : 236,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int rotationInt=Math.round(rotation);\n  if (!moveInEventStream) {\n    int newRotation=(rotationInt + 15) / 30;\n    time.setMinute(newRotation * 5);\n    minuteRotation=time.minute * DEGREES_PER_MINUTE;\n  }\n  timePickerView.setHandRotation(minuteRotation,moveInEventStream);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 44,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1096,
        "startLineNumber" : 215,
        "startColumnNumber" : 4,
        "endLineNumber" : 236,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (time.selection == HOUR) {\n  timePickerView.setHandRotation(hourRotation,false);\n  AccessibilityManager am=getSystemService(timePickerView.getContext(),AccessibilityManager.class);\n  boolean isExploreByTouchEnabled=am != null && am.isTouchExplorationEnabled();\n  if (!isExploreByTouchEnabled) {\n    setSelection(MINUTE,true);\n  }\n}\n else {\n  int rotationInt=Math.round(rotation);\n  if (!moveInEventStream) {\n    int newRotation=(rotationInt + 15) / 30;\n    time.setMinute(newRotation * 5);\n    minuteRotation=time.minute * DEGREES_PER_MINUTE;\n  }\n  timePickerView.setHandRotation(minuteRotation,moveInEventStream);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 90,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1296,
        "startLineNumber" : 211,
        "startColumnNumber" : 68,
        "endLineNumber" : 240,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  broadcasting=true;\n  int prevMinute=time.minute;\n  int prevHour=time.hour;\n  if (time.selection == HOUR) {\n    timePickerView.setHandRotation(hourRotation,false);\n    AccessibilityManager am=getSystemService(timePickerView.getContext(),AccessibilityManager.class);\n    boolean isExploreByTouchEnabled=am != null && am.isTouchExplorationEnabled();\n    if (!isExploreByTouchEnabled) {\n      setSelection(MINUTE,true);\n    }\n  }\n else {\n    int rotationInt=Math.round(rotation);\n    if (!moveInEventStream) {\n      int newRotation=(rotationInt + 15) / 30;\n      time.setMinute(newRotation * 5);\n      minuteRotation=time.minute * DEGREES_PER_MINUTE;\n    }\n    timePickerView.setHandRotation(minuteRotation,moveInEventStream);\n  }\n  broadcasting=false;\n  updateTime();\n  performHapticFeedback(prevHour,prevMinute);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 121,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1375,
        "startLineNumber" : 210,
        "startColumnNumber" : 2,
        "endLineNumber" : 240,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void onActionUp(float rotation,boolean moveInEventStream){\n  broadcasting=true;\n  int prevMinute=time.minute;\n  int prevHour=time.hour;\n  if (time.selection == HOUR) {\n    timePickerView.setHandRotation(hourRotation,false);\n    AccessibilityManager am=getSystemService(timePickerView.getContext(),AccessibilityManager.class);\n    boolean isExploreByTouchEnabled=am != null && am.isTouchExplorationEnabled();\n    if (!isExploreByTouchEnabled) {\n      setSelection(MINUTE,true);\n    }\n  }\n else {\n    int rotationInt=Math.round(rotation);\n    if (!moveInEventStream) {\n      int newRotation=(rotationInt + 15) / 30;\n      time.setMinute(newRotation * 5);\n      minuteRotation=time.minute * DEGREES_PER_MINUTE;\n    }\n    timePickerView.setHandRotation(minuteRotation,moveInEventStream);\n  }\n  broadcasting=false;\n  updateTime();\n  performHapticFeedback(prevHour,prevMinute);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 133,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 231,
        "startColumnNumber" : 8,
        "endLineNumber" : 231,
        "endColumnNumber" : 50
      },
      "nodeContext" : "int newRotation=(rotationInt + 15) / 30;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 231,
    "startColumnNumber" : 47,
    "endLineNumber" : 231,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ ]
}