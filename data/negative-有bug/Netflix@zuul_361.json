{
  "id" : 361,
  "expression" : "responseHttpVersion",
  "projectName" : "Netflix@zuul",
  "commitID" : "f8ef3551d8dd57a512336315ec51bb6c0444c517",
  "filePath" : "/zuul-core/src/main/java/com/netflix/zuul/netty/server/ClientResponseWriter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "responseHttpVersion",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 184,
      "startColumnNumber" : 75,
      "endLineNumber" : 184,
      "endColumnNumber" : 94
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 184,
        "startColumnNumber" : 51,
        "endLineNumber" : 185,
        "endColumnNumber" : 79
      },
      "nodeContext" : "new DefaultHttpResponse(responseHttpVersion,HttpResponseStatus.valueOf(zuulResp.getStatus()),false,false)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 184,
        "startColumnNumber" : 34,
        "endLineNumber" : 185,
        "endColumnNumber" : 79
      },
      "nodeContext" : "nativeResponse=new DefaultHttpResponse(responseHttpVersion,HttpResponseStatus.valueOf(zuulResp.getStatus()),false,false)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 184,
        "startColumnNumber" : 8,
        "endLineNumber" : 185,
        "endColumnNumber" : 80
      },
      "nodeContext" : "final DefaultHttpResponse nativeResponse=new DefaultHttpResponse(responseHttpVersion,HttpResponseStatus.valueOf(zuulResp.getStatus()),false,false);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2250,
        "startLineNumber" : 171,
        "startColumnNumber" : 79,
        "endLineNumber" : 213,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final HttpRequestInfo zuulRequest=zuulResp.getInboundRequest();\n  HttpVersion responseHttpVersion;\n  final String inboundProtocol=zuulRequest.getProtocol();\n  if (inboundProtocol.startsWith(\"HTTP/1\")) {\n    responseHttpVersion=HttpVersion.valueOf(inboundProtocol);\n  }\n else {\n    responseHttpVersion=HttpVersion.HTTP_1_1;\n  }\n  final DefaultHttpResponse nativeResponse=new DefaultHttpResponse(responseHttpVersion,HttpResponseStatus.valueOf(zuulResp.getStatus()),false,false);\n  final HttpHeaders nativeHeaders=nativeResponse.headers();\n  for (  Header entry : zuulResp.getHeaders().entries()) {\n    nativeHeaders.add(entry.getKey(),entry.getValue());\n  }\n  if (!HttpUtil.isContentLengthSet(nativeResponse) && !HttpUtil.isTransferEncodingChunked(nativeResponse)) {\n    nativeResponse.headers().add(HttpHeaderNames.TRANSFER_ENCODING,HttpHeaderValues.CHUNKED);\n  }\n  final HttpRequest nativeReq=(HttpRequest)zuulResp.getContext().get(CommonContextKeys.NETTY_HTTP_REQUEST);\n  if (!closeConnection && HttpUtil.isKeepAlive(nativeReq)) {\n    HttpUtil.setKeepAlive(nativeResponse,true);\n  }\n else {\n    nativeResponse.headers().set(\"Connection\",\"close\");\n  }\n  if (nativeReq.headers().contains(HttpConversionUtil.ExtensionHeaderNames.STREAM_ID.text())) {\n    String streamId=nativeReq.headers().get(HttpConversionUtil.ExtensionHeaderNames.STREAM_ID.text());\n    nativeResponse.headers().set(HttpConversionUtil.ExtensionHeaderNames.STREAM_ID.text(),streamId);\n  }\n  return nativeResponse;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 205,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2325,
        "startLineNumber" : 171,
        "startColumnNumber" : 4,
        "endLineNumber" : 213,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private HttpResponse buildHttpResponse(final HttpResponseMessage zuulResp){\n  final HttpRequestInfo zuulRequest=zuulResp.getInboundRequest();\n  HttpVersion responseHttpVersion;\n  final String inboundProtocol=zuulRequest.getProtocol();\n  if (inboundProtocol.startsWith(\"HTTP/1\")) {\n    responseHttpVersion=HttpVersion.valueOf(inboundProtocol);\n  }\n else {\n    responseHttpVersion=HttpVersion.HTTP_1_1;\n  }\n  final DefaultHttpResponse nativeResponse=new DefaultHttpResponse(responseHttpVersion,HttpResponseStatus.valueOf(zuulResp.getStatus()),false,false);\n  final HttpHeaders nativeHeaders=nativeResponse.headers();\n  for (  Header entry : zuulResp.getHeaders().entries()) {\n    nativeHeaders.add(entry.getKey(),entry.getValue());\n  }\n  if (!HttpUtil.isContentLengthSet(nativeResponse) && !HttpUtil.isTransferEncodingChunked(nativeResponse)) {\n    nativeResponse.headers().add(HttpHeaderNames.TRANSFER_ENCODING,HttpHeaderValues.CHUNKED);\n  }\n  final HttpRequest nativeReq=(HttpRequest)zuulResp.getContext().get(CommonContextKeys.NETTY_HTTP_REQUEST);\n  if (!closeConnection && HttpUtil.isKeepAlive(nativeReq)) {\n    HttpUtil.setKeepAlive(nativeResponse,true);\n  }\n else {\n    nativeResponse.headers().set(\"Connection\",\"close\");\n  }\n  if (nativeReq.headers().contains(HttpConversionUtil.ExtensionHeaderNames.STREAM_ID.text())) {\n    String streamId=nativeReq.headers().get(HttpConversionUtil.ExtensionHeaderNames.STREAM_ID.text());\n    nativeResponse.headers().set(HttpConversionUtil.ExtensionHeaderNames.STREAM_ID.text(),streamId);\n  }\n  return nativeResponse;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 215,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 184,
        "startColumnNumber" : 51,
        "endLineNumber" : 185,
        "endColumnNumber" : 79
      },
      "nodeContext" : "new DefaultHttpResponse(responseHttpVersion,HttpResponseStatus.valueOf(zuulResp.getStatus()),false,false)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.netflix.zuul.netty.server.HttpVersion"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 184,
    "startColumnNumber" : 75,
    "endLineNumber" : 184,
    "endColumnNumber" : 94
  } ],
  "layoutRelationDataList" : [ ]
}