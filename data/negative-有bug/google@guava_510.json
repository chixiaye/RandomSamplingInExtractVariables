{
  "id" : 510,
  "expression" : "collector.combiner().apply(left,right)",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava-testlib/src/com/google/common/testing/CollectorTester.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "collector.combiner().apply(left,right)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 39,
      "startLineNumber" : 121,
      "startColumnNumber" : 22,
      "endLineNumber" : 121,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 121,
        "startColumnNumber" : 10,
        "endLineNumber" : 121,
        "endColumnNumber" : 62
      },
      "nodeContext" : "push(stack,collector.combiner().apply(left,right))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 121,
        "startColumnNumber" : 10,
        "endLineNumber" : 121,
        "endColumnNumber" : 63
      },
      "nodeContext" : "push(stack,collector.combiner().apply(left,right));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 118,
        "startColumnNumber" : 33,
        "endLineNumber" : 122,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  A right=pop(stack);\n  A left=pop(stack);\n  push(stack,collector.combiner().apply(left,right));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 167,
        "startLineNumber" : 118,
        "startColumnNumber" : 8,
        "endLineNumber" : 122,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (stack.size() > 1) {\n  A right=pop(stack);\n  A left=pop(stack);\n  push(stack,collector.combiner().apply(left,right));\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 500,
        "startLineNumber" : 110,
        "startColumnNumber" : 81,
        "endLineNumber" : 124,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  List<A> stack=new ArrayList<>();\n  for (  T input : inputs) {\n    A newAccum=collector.supplier().get();\n    collector.accumulator().accept(newAccum,input);\n    push(stack,newAccum);\n  }\n  push(stack,collector.supplier().get());\n  while (stack.size() > 1) {\n    A right=pop(stack);\n    A left=pop(stack);\n    push(stack,collector.combiner().apply(left,right));\n  }\n  return pop(stack);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 90,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 592,
        "startLineNumber" : 109,
        "startColumnNumber" : 6,
        "endLineNumber" : 124,
        "endColumnNumber" : 7
      },
      "nodeContext" : "@Override final <T,A,R>A result(Collector<T,A,R> collector,Iterable<T> inputs){\n  List<A> stack=new ArrayList<>();\n  for (  T input : inputs) {\n    A newAccum=collector.supplier().get();\n    collector.accumulator().accept(newAccum,input);\n    push(stack,newAccum);\n  }\n  push(stack,collector.supplier().get());\n  while (stack.size() > 1) {\n    A right=pop(stack);\n    A left=pop(stack);\n    push(stack,collector.combiner().apply(left,right));\n  }\n  return pop(stack);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 121,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 121,
        "startColumnNumber" : 10,
        "endLineNumber" : 121,
        "endColumnNumber" : 63
      },
      "nodeContext" : "push(stack,collector.combiner().apply(left,right));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "A"
  } ],
  "positionList" : [ {
    "charLength" : 39,
    "startLineNumber" : 121,
    "startColumnNumber" : 22,
    "endLineNumber" : 121,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ ]
}