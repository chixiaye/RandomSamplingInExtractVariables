{
  "id" : 170,
  "expression" : "slave.getComputer()",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/test/src/test/java/jenkins/security/Security218Test.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "slave.getComputer()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 108,
      "startColumnNumber" : 24,
      "endLineNumber" : 108,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 108,
        "startColumnNumber" : 24,
        "endLineNumber" : 108,
        "endColumnNumber" : 56
      },
      "nodeContext" : "slave.getComputer().getJnlpMac()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 108,
        "startColumnNumber" : 15,
        "endLineNumber" : 108,
        "endColumnNumber" : 56
      },
      "nodeContext" : "secret=slave.getComputer().getJnlpMac()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 108,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 57
      },
      "nodeContext" : "String secret=slave.getComputer().getJnlpMac();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1054,
        "startLineNumber" : 106,
        "startColumnNumber" : 65,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  j.createWebClient().goTo(\"computer/\" + slave.getNodeName() + \"/slave-agent.jnlp?encrypt=true\",\"application/octet-stream\");\n  String secret=slave.getComputer().getJnlpMac();\n  File slaveJar=tmp.newFile();\n  FileUtils.copyURLToFile(new Slave.JnlpJar(\"slave.jar\").getURL(),slaveJar);\n  ProcessBuilder pb=new ProcessBuilder(JavaEnvUtils.getJreExecutable(\"java\"),\"-jar\",slaveJar.getAbsolutePath(),\"-jnlpUrl\",j.getURL() + \"computer/\" + slave.getNodeName()+ \"/slave-agent.jnlp\",\"-secret\",secret);\n  pb.inheritIO();\n  System.err.println(\"Running: \" + pb.command());\n  jnlp=pb.start();\n  for (int i=0; i < 600; i++) {\n    if (slave.getComputer().isOnline()) {\n      return slave.getComputer().getChannel();\n    }\n    Thread.sleep(100);\n  }\n  throw new AssertionError(\"The JNLP agent failed to connect\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1205,
        "startLineNumber" : 103,
        "startColumnNumber" : 4,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Launch a JNLP agent created by  {@link #createJnlpSlave(String)}\n */\npublic Channel launchJnlpSlave(Slave slave) throws Exception {\n  j.createWebClient().goTo(\"computer/\" + slave.getNodeName() + \"/slave-agent.jnlp?encrypt=true\",\"application/octet-stream\");\n  String secret=slave.getComputer().getJnlpMac();\n  File slaveJar=tmp.newFile();\n  FileUtils.copyURLToFile(new Slave.JnlpJar(\"slave.jar\").getURL(),slaveJar);\n  ProcessBuilder pb=new ProcessBuilder(JavaEnvUtils.getJreExecutable(\"java\"),\"-jar\",slaveJar.getAbsolutePath(),\"-jnlpUrl\",j.getURL() + \"computer/\" + slave.getNodeName()+ \"/slave-agent.jnlp\",\"-secret\",secret);\n  pb.inheritIO();\n  System.err.println(\"Running: \" + pb.command());\n  jnlp=pb.start();\n  for (int i=0; i < 600; i++) {\n    if (slave.getComputer().isOnline()) {\n      return slave.getComputer().getChannel();\n    }\n    Thread.sleep(100);\n  }\n  throw new AssertionError(\"The JNLP agent failed to connect\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 141,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 108,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 57
      },
      "nodeContext" : "String secret=slave.getComputer().getJnlpMac();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "hudson.slaves.SlaveComputer"
  }, {
    "nodeContext" : "slave.getComputer()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 122,
      "startColumnNumber" : 16,
      "endLineNumber" : 122,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 122,
        "startColumnNumber" : 16,
        "endLineNumber" : 122,
        "endColumnNumber" : 46
      },
      "nodeContext" : "slave.getComputer().isOnline()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 122,
        "startColumnNumber" : 12,
        "endLineNumber" : 124,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (slave.getComputer().isOnline()) {\n  return slave.getComputer().getChannel();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 121,
        "startColumnNumber" : 54,
        "endLineNumber" : 126,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (slave.getComputer().isOnline()) {\n    return slave.getComputer().getChannel();\n  }\n  Thread.sleep(100);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 214,
        "startLineNumber" : 121,
        "startColumnNumber" : 8,
        "endLineNumber" : 126,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 600; i++) {\n  if (slave.getComputer().isOnline()) {\n    return slave.getComputer().getChannel();\n  }\n  Thread.sleep(100);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 30,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1054,
        "startLineNumber" : 106,
        "startColumnNumber" : 65,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  j.createWebClient().goTo(\"computer/\" + slave.getNodeName() + \"/slave-agent.jnlp?encrypt=true\",\"application/octet-stream\");\n  String secret=slave.getComputer().getJnlpMac();\n  File slaveJar=tmp.newFile();\n  FileUtils.copyURLToFile(new Slave.JnlpJar(\"slave.jar\").getURL(),slaveJar);\n  ProcessBuilder pb=new ProcessBuilder(JavaEnvUtils.getJreExecutable(\"java\"),\"-jar\",slaveJar.getAbsolutePath(),\"-jnlpUrl\",j.getURL() + \"computer/\" + slave.getNodeName()+ \"/slave-agent.jnlp\",\"-secret\",secret);\n  pb.inheritIO();\n  System.err.println(\"Running: \" + pb.command());\n  jnlp=pb.start();\n  for (int i=0; i < 600; i++) {\n    if (slave.getComputer().isOnline()) {\n      return slave.getComputer().getChannel();\n    }\n    Thread.sleep(100);\n  }\n  throw new AssertionError(\"The JNLP agent failed to connect\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1205,
        "startLineNumber" : 103,
        "startColumnNumber" : 4,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Launch a JNLP agent created by  {@link #createJnlpSlave(String)}\n */\npublic Channel launchJnlpSlave(Slave slave) throws Exception {\n  j.createWebClient().goTo(\"computer/\" + slave.getNodeName() + \"/slave-agent.jnlp?encrypt=true\",\"application/octet-stream\");\n  String secret=slave.getComputer().getJnlpMac();\n  File slaveJar=tmp.newFile();\n  FileUtils.copyURLToFile(new Slave.JnlpJar(\"slave.jar\").getURL(),slaveJar);\n  ProcessBuilder pb=new ProcessBuilder(JavaEnvUtils.getJreExecutable(\"java\"),\"-jar\",slaveJar.getAbsolutePath(),\"-jnlpUrl\",j.getURL() + \"computer/\" + slave.getNodeName()+ \"/slave-agent.jnlp\",\"-secret\",secret);\n  pb.inheritIO();\n  System.err.println(\"Running: \" + pb.command());\n  jnlp=pb.start();\n  for (int i=0; i < 600; i++) {\n    if (slave.getComputer().isOnline()) {\n      return slave.getComputer().getChannel();\n    }\n    Thread.sleep(100);\n  }\n  throw new AssertionError(\"The JNLP agent failed to connect\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 141,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 122,
        "startColumnNumber" : 16,
        "endLineNumber" : 122,
        "endColumnNumber" : 46
      },
      "nodeContext" : "slave.getComputer().isOnline()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "hudson.slaves.SlaveComputer"
  }, {
    "nodeContext" : "slave.getComputer()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 123,
      "startColumnNumber" : 23,
      "endLineNumber" : 123,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 123,
        "startColumnNumber" : 23,
        "endLineNumber" : 123,
        "endColumnNumber" : 55
      },
      "nodeContext" : "slave.getComputer().getChannel()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 123,
        "startColumnNumber" : 16,
        "endLineNumber" : 123,
        "endColumnNumber" : 56
      },
      "nodeContext" : "return slave.getComputer().getChannel();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 122,
        "startColumnNumber" : 48,
        "endLineNumber" : 124,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  return slave.getComputer().getChannel();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 122,
        "startColumnNumber" : 12,
        "endLineNumber" : 124,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (slave.getComputer().isOnline()) {\n  return slave.getComputer().getChannel();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 121,
        "startColumnNumber" : 54,
        "endLineNumber" : 126,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (slave.getComputer().isOnline()) {\n    return slave.getComputer().getChannel();\n  }\n  Thread.sleep(100);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 214,
        "startLineNumber" : 121,
        "startColumnNumber" : 8,
        "endLineNumber" : 126,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 600; i++) {\n  if (slave.getComputer().isOnline()) {\n    return slave.getComputer().getChannel();\n  }\n  Thread.sleep(100);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 30,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1054,
        "startLineNumber" : 106,
        "startColumnNumber" : 65,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  j.createWebClient().goTo(\"computer/\" + slave.getNodeName() + \"/slave-agent.jnlp?encrypt=true\",\"application/octet-stream\");\n  String secret=slave.getComputer().getJnlpMac();\n  File slaveJar=tmp.newFile();\n  FileUtils.copyURLToFile(new Slave.JnlpJar(\"slave.jar\").getURL(),slaveJar);\n  ProcessBuilder pb=new ProcessBuilder(JavaEnvUtils.getJreExecutable(\"java\"),\"-jar\",slaveJar.getAbsolutePath(),\"-jnlpUrl\",j.getURL() + \"computer/\" + slave.getNodeName()+ \"/slave-agent.jnlp\",\"-secret\",secret);\n  pb.inheritIO();\n  System.err.println(\"Running: \" + pb.command());\n  jnlp=pb.start();\n  for (int i=0; i < 600; i++) {\n    if (slave.getComputer().isOnline()) {\n      return slave.getComputer().getChannel();\n    }\n    Thread.sleep(100);\n  }\n  throw new AssertionError(\"The JNLP agent failed to connect\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1205,
        "startLineNumber" : 103,
        "startColumnNumber" : 4,
        "endLineNumber" : 129,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Launch a JNLP agent created by  {@link #createJnlpSlave(String)}\n */\npublic Channel launchJnlpSlave(Slave slave) throws Exception {\n  j.createWebClient().goTo(\"computer/\" + slave.getNodeName() + \"/slave-agent.jnlp?encrypt=true\",\"application/octet-stream\");\n  String secret=slave.getComputer().getJnlpMac();\n  File slaveJar=tmp.newFile();\n  FileUtils.copyURLToFile(new Slave.JnlpJar(\"slave.jar\").getURL(),slaveJar);\n  ProcessBuilder pb=new ProcessBuilder(JavaEnvUtils.getJreExecutable(\"java\"),\"-jar\",slaveJar.getAbsolutePath(),\"-jnlpUrl\",j.getURL() + \"computer/\" + slave.getNodeName()+ \"/slave-agent.jnlp\",\"-secret\",secret);\n  pb.inheritIO();\n  System.err.println(\"Running: \" + pb.command());\n  jnlp=pb.start();\n  for (int i=0; i < 600; i++) {\n    if (slave.getComputer().isOnline()) {\n      return slave.getComputer().getChannel();\n    }\n    Thread.sleep(100);\n  }\n  throw new AssertionError(\"The JNLP agent failed to connect\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 141,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 123,
        "startColumnNumber" : 16,
        "endLineNumber" : 123,
        "endColumnNumber" : 56
      },
      "nodeContext" : "return slave.getComputer().getChannel();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "hudson.slaves.SlaveComputer"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 108,
    "startColumnNumber" : 24,
    "endLineNumber" : 108,
    "endColumnNumber" : 43
  }, {
    "charLength" : 19,
    "startLineNumber" : 122,
    "startColumnNumber" : 16,
    "endLineNumber" : 122,
    "endColumnNumber" : 35
  }, {
    "charLength" : 19,
    "startLineNumber" : 123,
    "startColumnNumber" : 23,
    "endLineNumber" : 123,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  } ]
}