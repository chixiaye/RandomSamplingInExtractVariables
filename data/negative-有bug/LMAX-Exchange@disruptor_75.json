{
  "id" : 75,
  "expression" : "new Future[NUM_PUBLISHERS]",
  "projectName" : "LMAX-Exchange@disruptor",
  "commitID" : "6d8500d39ac15cc2fdbc3dbf2e3a97fbe425b8fa",
  "filePath" : "/src/perftest/java/com/lmax/disruptor/ThreePublisherToOneProcessorSequencedThroughputTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new Future[NUM_PUBLISHERS]",
    "nodeType" : "ArrayCreation",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 152,
      "startColumnNumber" : 30,
      "endLineNumber" : 152,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 6,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 152,
        "startColumnNumber" : 20,
        "endLineNumber" : 152,
        "endColumnNumber" : 56
      },
      "nodeContext" : "futures=new Future[NUM_PUBLISHERS]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 152,
        "startColumnNumber" : 8,
        "endLineNumber" : 152,
        "endColumnNumber" : 57
      },
      "nodeContext" : "Future<?>[] futures=new Future[NUM_PUBLISHERS];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 762,
        "startLineNumber" : 148,
        "startColumnNumber" : 4,
        "endLineNumber" : 174,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final CountDownLatch latch=new CountDownLatch(1);\n  queueProcessor.reset(latch);\n  Future<?>[] futures=new Future[NUM_PUBLISHERS];\n  for (int i=0; i < NUM_PUBLISHERS; i++) {\n    futures[i]=EXECUTOR.submit(valueQueuePublishers[i]);\n  }\n  Future<?> processorFuture=EXECUTOR.submit(queueProcessor);\n  long start=System.currentTimeMillis();\n  cyclicBarrier.await();\n  for (int i=0; i < NUM_PUBLISHERS; i++) {\n    futures[i].get();\n  }\n  latch.await();\n  long opsPerSecond=(ITERATIONS * 1000L) / (System.currentTimeMillis() - start);\n  queueProcessor.halt();\n  processorFuture.cancel(true);\n  return opsPerSecond;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 827,
        "startLineNumber" : 146,
        "startColumnNumber" : 4,
        "endLineNumber" : 174,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected long runQueuePass() throws Exception {\n  final CountDownLatch latch=new CountDownLatch(1);\n  queueProcessor.reset(latch);\n  Future<?>[] futures=new Future[NUM_PUBLISHERS];\n  for (int i=0; i < NUM_PUBLISHERS; i++) {\n    futures[i]=EXECUTOR.submit(valueQueuePublishers[i]);\n  }\n  Future<?> processorFuture=EXECUTOR.submit(queueProcessor);\n  long start=System.currentTimeMillis();\n  cyclicBarrier.await();\n  for (int i=0; i < NUM_PUBLISHERS; i++) {\n    futures[i].get();\n  }\n  latch.await();\n  long opsPerSecond=(ITERATIONS * 1000L) / (System.currentTimeMillis() - start);\n  queueProcessor.halt();\n  processorFuture.cancel(true);\n  return opsPerSecond;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 132,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 152,
        "startColumnNumber" : 8,
        "endLineNumber" : 152,
        "endColumnNumber" : 57
      },
      "nodeContext" : "Future<?>[] futures=new Future[NUM_PUBLISHERS];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "java.util.concurrent.Future[]"
  } ],
  "positionList" : [ {
    "charLength" : 26,
    "startLineNumber" : 152,
    "startColumnNumber" : 30,
    "endLineNumber" : 152,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}