{
  "id" : 430,
  "expression" : "\"Change event's size should equal to one or there must be some assertion failed in change listener\"",
  "projectName" : "apolloconfig@apollo",
  "commitID" : "7b7d753f78e444f9cf97b0f238f7e33f585cb277",
  "filePath" : "/apollo-client/src/test/java/com/ctrip/framework/apollo/integration/ConfigIntegrationTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Change event's size should equal to one or there must be some assertion failed in change listener\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 99,
      "startLineNumber" : 237,
      "startColumnNumber" : 8,
      "endLineNumber" : 237,
      "endColumnNumber" : 107
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 161,
        "startLineNumber" : 236,
        "startColumnNumber" : 4,
        "endLineNumber" : 238,
        "endColumnNumber" : 40
      },
      "nodeContext" : "assertThat(\"Change event's size should equal to one or there must be some assertion failed in change listener\",1,equalTo(changeEvents.size()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 236,
        "startColumnNumber" : 4,
        "endLineNumber" : 238,
        "endColumnNumber" : 41
      },
      "nodeContext" : "assertThat(\"Change event's size should equal to one or there must be some assertion failed in change listener\",1,equalTo(changeEvents.size()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1935,
        "startLineNumber" : 192,
        "startColumnNumber" : 51,
        "endLineNumber" : 240,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final String someKey=\"someKey\";\n  final String someValue=\"someValue\";\n  final String anotherValue=\"anotherValue\";\n  int someRefreshInterval=500;\n  TimeUnit someRefreshTimeUnit=TimeUnit.MILLISECONDS;\n  setRefreshInterval(someRefreshInterval);\n  setRefreshTimeUnit(someRefreshTimeUnit);\n  Map<String,String> configurations=Maps.newHashMap();\n  configurations.put(someKey,someValue);\n  ApolloConfig apolloConfig=assembleApolloConfig(configurations);\n  ContextHandler handler=mockConfigServerHandler(HttpServletResponse.SC_OK,apolloConfig);\n  startServerWithHandlers(handler);\n  Config config=ConfigService.getAppConfig();\n  final List<ConfigChangeEvent> changeEvents=Lists.newArrayList();\n  final SettableFuture<Boolean> refreshFinished=SettableFuture.create();\n  config.addChangeListener(new ConfigChangeListener(){\n    AtomicInteger counter=new AtomicInteger(0);\n    @Override public void onChange(    ConfigChangeEvent changeEvent){\n      if (counter.incrementAndGet() > 1) {\n        return;\n      }\n      assertEquals(1,changeEvent.changedKeys().size());\n      assertTrue(changeEvent.isChanged(someKey));\n      assertEquals(someValue,changeEvent.getChange(someKey).getOldValue());\n      assertEquals(anotherValue,changeEvent.getChange(someKey).getNewValue());\n      changeEvents.add(changeEvent);\n      refreshFinished.set(true);\n    }\n  }\n);\n  apolloConfig.getConfigurations().put(someKey,anotherValue);\n  refreshFinished.get(someRefreshInterval * 5,someRefreshTimeUnit);\n  assertThat(\"Change event's size should equal to one or there must be some assertion failed in change listener\",1,equalTo(changeEvents.size()));\n  assertEquals(anotherValue,config.getProperty(someKey,null));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1992,
        "startLineNumber" : 191,
        "startColumnNumber" : 2,
        "endLineNumber" : 240,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testRefreshConfig() throws Exception {\n  final String someKey=\"someKey\";\n  final String someValue=\"someValue\";\n  final String anotherValue=\"anotherValue\";\n  int someRefreshInterval=500;\n  TimeUnit someRefreshTimeUnit=TimeUnit.MILLISECONDS;\n  setRefreshInterval(someRefreshInterval);\n  setRefreshTimeUnit(someRefreshTimeUnit);\n  Map<String,String> configurations=Maps.newHashMap();\n  configurations.put(someKey,someValue);\n  ApolloConfig apolloConfig=assembleApolloConfig(configurations);\n  ContextHandler handler=mockConfigServerHandler(HttpServletResponse.SC_OK,apolloConfig);\n  startServerWithHandlers(handler);\n  Config config=ConfigService.getAppConfig();\n  final List<ConfigChangeEvent> changeEvents=Lists.newArrayList();\n  final SettableFuture<Boolean> refreshFinished=SettableFuture.create();\n  config.addChangeListener(new ConfigChangeListener(){\n    AtomicInteger counter=new AtomicInteger(0);\n    @Override public void onChange(    ConfigChangeEvent changeEvent){\n      if (counter.incrementAndGet() > 1) {\n        return;\n      }\n      assertEquals(1,changeEvent.changedKeys().size());\n      assertTrue(changeEvent.isChanged(someKey));\n      assertEquals(someValue,changeEvent.getChange(someKey).getOldValue());\n      assertEquals(anotherValue,changeEvent.getChange(someKey).getNewValue());\n      changeEvents.add(changeEvent);\n      refreshFinished.set(true);\n    }\n  }\n);\n  apolloConfig.getConfigurations().put(someKey,anotherValue);\n  refreshFinished.get(someRefreshInterval * 5,someRefreshTimeUnit);\n  assertThat(\"Change event's size should equal to one or there must be some assertion failed in change listener\",1,equalTo(changeEvents.size()));\n  assertEquals(anotherValue,config.getProperty(someKey,null));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 242,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 161,
        "startLineNumber" : 236,
        "startColumnNumber" : 4,
        "endLineNumber" : 238,
        "endColumnNumber" : 40
      },
      "nodeContext" : "assertThat(\"Change event's size should equal to one or there must be some assertion failed in change listener\",1,equalTo(changeEvents.size()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 18,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 99,
    "startLineNumber" : 237,
    "startColumnNumber" : 8,
    "endLineNumber" : 237,
    "endColumnNumber" : 107
  } ],
  "layoutRelationDataList" : [ ]
}