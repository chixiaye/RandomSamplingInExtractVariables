{
  "id" : 143,
  "expression" : "n.y + n.height / 2f",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/ui/dialogs/ResearchDialog.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "n.y + n.height / 2f",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 211,
      "startColumnNumber" : 28,
      "endLineNumber" : 211,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 9,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 211,
        "startColumnNumber" : 19,
        "endLineNumber" : 211,
        "endColumnNumber" : 52
      },
      "nodeContext" : "Math.max(n.y + n.height / 2f,maxy)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 211,
        "startColumnNumber" : 12,
        "endLineNumber" : 211,
        "endColumnNumber" : 52
      },
      "nodeContext" : "maxy=Math.max(n.y + n.height / 2f,maxy)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 211,
        "startColumnNumber" : 12,
        "endLineNumber" : 211,
        "endColumnNumber" : 53
      },
      "nodeContext" : "maxy=Math.max(n.y + n.height / 2f,maxy);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 262,
        "startLineNumber" : 206,
        "startColumnNumber" : 35,
        "endLineNumber" : 212,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (!n.visible)   continue;\n  minx=Math.min(n.x - n.width / 2f,minx);\n  maxx=Math.max(n.x + n.width / 2f,maxx);\n  miny=Math.min(n.y - n.height / 2f,miny);\n  maxy=Math.max(n.y + n.height / 2f,maxy);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 71,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 289,
        "startLineNumber" : 206,
        "startColumnNumber" : 8,
        "endLineNumber" : 212,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (TechTreeNode n : nodes) {\n  if (!n.visible)   continue;\n  minx=Math.min(n.x - n.width / 2f,minx);\n  maxx=Math.max(n.x + n.width / 2f,maxx);\n  miny=Math.min(n.y - n.height / 2f,miny);\n  maxy=Math.max(n.y + n.height / 2f,maxy);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 77,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1426,
        "startLineNumber" : 175,
        "startColumnNumber" : 21,
        "endLineNumber" : 215,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  float spacing=20f;\n  LayoutNode node=new LayoutNode(root,null);\n  LayoutNode[] children=node.children;\n  LayoutNode[] leftHalf=Arrays.copyOfRange(node.children,0,Mathf.ceil(node.children.length / 2f));\n  LayoutNode[] rightHalf=Arrays.copyOfRange(node.children,Mathf.ceil(node.children.length / 2f),node.children.length);\n  node.children=leftHalf;\n  new BranchTreeLayout(){\n{\n      gapBetweenLevels=gapBetweenNodes=spacing;\n      rootLocation=TreeLocation.top;\n    }\n  }\n.layout(node);\n  float lastY=node.y;\n  if (rightHalf.length > 0) {\n    node.children=rightHalf;\n    new BranchTreeLayout(){\n{\n        gapBetweenLevels=gapBetweenNodes=spacing;\n        rootLocation=TreeLocation.bottom;\n      }\n    }\n.layout(node);\n    shift(leftHalf,node.y - lastY);\n  }\n  node.children=children;\n  float minx=0f, miny=0f, maxx=0f, maxy=0f;\n  copyInfo(node);\n  for (  TechTreeNode n : nodes) {\n    if (!n.visible)     continue;\n    minx=Math.min(n.x - n.width / 2f,minx);\n    maxx=Math.max(n.x + n.width / 2f,maxx);\n    miny=Math.min(n.y - n.height / 2f,miny);\n    maxy=Math.max(n.y + n.height / 2f,maxy);\n  }\n  bounds=new Rect(minx,miny,maxx - minx,maxy - miny);\n  bounds.y+=nodeSize * 1.5f;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 280,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1443,
        "startLineNumber" : 175,
        "startColumnNumber" : 4,
        "endLineNumber" : 215,
        "endColumnNumber" : 5
      },
      "nodeContext" : "void treeLayout(){\n  float spacing=20f;\n  LayoutNode node=new LayoutNode(root,null);\n  LayoutNode[] children=node.children;\n  LayoutNode[] leftHalf=Arrays.copyOfRange(node.children,0,Mathf.ceil(node.children.length / 2f));\n  LayoutNode[] rightHalf=Arrays.copyOfRange(node.children,Mathf.ceil(node.children.length / 2f),node.children.length);\n  node.children=leftHalf;\n  new BranchTreeLayout(){\n{\n      gapBetweenLevels=gapBetweenNodes=spacing;\n      rootLocation=TreeLocation.top;\n    }\n  }\n.layout(node);\n  float lastY=node.y;\n  if (rightHalf.length > 0) {\n    node.children=rightHalf;\n    new BranchTreeLayout(){\n{\n        gapBetweenLevels=gapBetweenNodes=spacing;\n        rootLocation=TreeLocation.bottom;\n      }\n    }\n.layout(node);\n    shift(leftHalf,node.y - lastY);\n  }\n  node.children=children;\n  float minx=0f, miny=0f, maxx=0f, maxy=0f;\n  copyInfo(node);\n  for (  TechTreeNode n : nodes) {\n    if (!n.visible)     continue;\n    minx=Math.min(n.x - n.width / 2f,minx);\n    maxx=Math.max(n.x + n.width / 2f,maxx);\n    miny=Math.min(n.y - n.height / 2f,miny);\n    maxy=Math.max(n.y + n.height / 2f,maxy);\n  }\n  bounds=new Rect(minx,miny,maxx - minx,maxy - miny);\n  bounds.y+=nodeSize * 1.5f;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 283,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 211,
        "startColumnNumber" : 12,
        "endLineNumber" : 211,
        "endColumnNumber" : 53
      },
      "nodeContext" : "maxy=Math.max(n.y + n.height / 2f,maxy);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    },
    "tokenLength" : 7,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 211,
    "startColumnNumber" : 28,
    "endLineNumber" : 211,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ ]
}