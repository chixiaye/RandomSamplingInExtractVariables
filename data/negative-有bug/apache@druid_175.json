{
  "id" : 175,
  "expression" : "\"strpos\"",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/sql/src/main/java/org/apache/druid/sql/calcite/expression/builtin/PositionOperatorConversion.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"strpos\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 68,
      "startColumnNumber" : 22,
      "endLineNumber" : 68,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 191,
        "startLineNumber" : 67,
        "startColumnNumber" : 18,
        "endLineNumber" : 70,
        "endColumnNumber" : 19
      },
      "nodeContext" : "DruidExpression.functionCall(\"strpos\",ImmutableList.of(druidExpressions.get(1),druidExpressions.get(0),fromIndexExpression))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 275,
        "startLineNumber" : 65,
        "startColumnNumber" : 14,
        "endLineNumber" : 71,
        "endColumnNumber" : 15
      },
      "nodeContext" : "StringUtils.format(\"(%s + 1)\",DruidExpression.functionCall(\"strpos\",ImmutableList.of(druidExpressions.get(1),druidExpressions.get(0),fromIndexExpression)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 333,
        "startLineNumber" : 64,
        "startColumnNumber" : 17,
        "endLineNumber" : 72,
        "endColumnNumber" : 11
      },
      "nodeContext" : "DruidExpression.fromExpression(StringUtils.format(\"(%s + 1)\",DruidExpression.functionCall(\"strpos\",ImmutableList.of(druidExpressions.get(1),druidExpressions.get(0),fromIndexExpression))))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 341,
        "startLineNumber" : 64,
        "startColumnNumber" : 10,
        "endLineNumber" : 72,
        "endColumnNumber" : 12
      },
      "nodeContext" : "return DruidExpression.fromExpression(StringUtils.format(\"(%s + 1)\",DruidExpression.functionCall(\"strpos\",ImmutableList.of(druidExpressions.get(1),druidExpressions.get(0),fromIndexExpression))));\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 702,
        "startLineNumber" : 54,
        "startColumnNumber" : 28,
        "endLineNumber" : 73,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final DruidExpression fromIndexExpression;\n  if (druidExpressions.size() > 2) {\n    fromIndexExpression=DruidExpression.fromExpression(StringUtils.format(\"(%s - 1)\",druidExpressions.get(2).getExpression()));\n  }\n else {\n    fromIndexExpression=ZERO;\n  }\n  return DruidExpression.fromExpression(StringUtils.format(\"(%s + 1)\",DruidExpression.functionCall(\"strpos\",ImmutableList.of(druidExpressions.get(1),druidExpressions.get(0),fromIndexExpression))));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 59,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 722,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 73,
        "endColumnNumber" : 9
      },
      "nodeContext" : "druidExpressions -> {\n  final DruidExpression fromIndexExpression;\n  if (druidExpressions.size() > 2) {\n    fromIndexExpression=DruidExpression.fromExpression(StringUtils.format(\"(%s - 1)\",druidExpressions.get(2).getExpression()));\n  }\n else {\n    fromIndexExpression=ZERO;\n  }\n  return DruidExpression.fromExpression(StringUtils.format(\"(%s + 1)\",DruidExpression.functionCall(\"strpos\",ImmutableList.of(druidExpressions.get(1),druidExpressions.get(0),fromIndexExpression))));\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 62,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 191,
        "startLineNumber" : 67,
        "startColumnNumber" : 18,
        "endLineNumber" : 70,
        "endColumnNumber" : 19
      },
      "nodeContext" : "DruidExpression.functionCall(\"strpos\",ImmutableList.of(druidExpressions.get(1),druidExpressions.get(0),fromIndexExpression))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 68,
    "startColumnNumber" : 22,
    "endLineNumber" : 68,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}