{
  "id" : 103,
  "expression" : "new NoRequestCacheTimeoutWithoutFallback(circuitBreaker)",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-core/src/test/java/com/netflix/hystrix/HystrixCommandTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new NoRequestCacheTimeoutWithoutFallback(circuitBreaker)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 56,
      "startLineNumber" : 1935,
      "startColumnNumber" : 50,
      "endLineNumber" : 1935,
      "endColumnNumber" : 106
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 1935,
        "startColumnNumber" : 45,
        "endLineNumber" : 1935,
        "endColumnNumber" : 106
      },
      "nodeContext" : "r1=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 1935,
        "startColumnNumber" : 8,
        "endLineNumber" : 1935,
        "endColumnNumber" : 107
      },
      "nodeContext" : "NoRequestCacheTimeoutWithoutFallback r1=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2323,
        "startLineNumber" : 1933,
        "startColumnNumber" : 78,
        "endLineNumber" : 1986,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestCircuitBreaker circuitBreaker=new TestCircuitBreaker();\n  NoRequestCacheTimeoutWithoutFallback r1=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker);\n  try {\n    System.out.println(\"r1 value: \" + r1.execute());\n    fail(\"expected a timeout\");\n  }\n catch (  HystrixRuntimeException e) {\n    assertTrue(r1.isResponseTimedOut());\n  }\n  NoRequestCacheTimeoutWithoutFallback r2=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker);\n  try {\n    r2.execute();\n    fail(\"expected a timeout\");\n  }\n catch (  HystrixRuntimeException e) {\n    assertTrue(r2.isResponseTimedOut());\n  }\n  NoRequestCacheTimeoutWithoutFallback r3=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker);\n  Future<Boolean> f3=r3.queue();\n  try {\n    f3.get();\n    fail(\"expected a timeout\");\n  }\n catch (  ExecutionException e) {\n    e.printStackTrace();\n    assertTrue(r3.isResponseTimedOut());\n  }\n  Thread.sleep(500);\n  NoRequestCacheTimeoutWithoutFallback r4=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker);\n  try {\n    r4.execute();\n    fail(\"expected a timeout\");\n  }\n catch (  HystrixRuntimeException e) {\n    assertTrue(r4.isResponseTimedOut());\n    assertFalse(r4.isResponseFromFallback());\n  }\n  assertCommandExecutionEvents(r1,HystrixEventType.TIMEOUT,HystrixEventType.FALLBACK_MISSING);\n  assertCommandExecutionEvents(r2,HystrixEventType.TIMEOUT,HystrixEventType.FALLBACK_MISSING);\n  assertCommandExecutionEvents(r3,HystrixEventType.TIMEOUT,HystrixEventType.FALLBACK_MISSING);\n  assertCommandExecutionEvents(r4,HystrixEventType.TIMEOUT,HystrixEventType.FALLBACK_MISSING);\n  assertEquals(0,circuitBreaker.metrics.getCurrentConcurrentExecutionCount());\n  assertSaneHystrixRequestLog(4);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2407,
        "startLineNumber" : 1932,
        "startColumnNumber" : 4,
        "endLineNumber" : 1986,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testNoRequestCacheOnTimeoutThrowsException() throws Exception {\n  TestCircuitBreaker circuitBreaker=new TestCircuitBreaker();\n  NoRequestCacheTimeoutWithoutFallback r1=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker);\n  try {\n    System.out.println(\"r1 value: \" + r1.execute());\n    fail(\"expected a timeout\");\n  }\n catch (  HystrixRuntimeException e) {\n    assertTrue(r1.isResponseTimedOut());\n  }\n  NoRequestCacheTimeoutWithoutFallback r2=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker);\n  try {\n    r2.execute();\n    fail(\"expected a timeout\");\n  }\n catch (  HystrixRuntimeException e) {\n    assertTrue(r2.isResponseTimedOut());\n  }\n  NoRequestCacheTimeoutWithoutFallback r3=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker);\n  Future<Boolean> f3=r3.queue();\n  try {\n    f3.get();\n    fail(\"expected a timeout\");\n  }\n catch (  ExecutionException e) {\n    e.printStackTrace();\n    assertTrue(r3.isResponseTimedOut());\n  }\n  Thread.sleep(500);\n  NoRequestCacheTimeoutWithoutFallback r4=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker);\n  try {\n    r4.execute();\n    fail(\"expected a timeout\");\n  }\n catch (  HystrixRuntimeException e) {\n    assertTrue(r4.isResponseTimedOut());\n    assertFalse(r4.isResponseFromFallback());\n  }\n  assertCommandExecutionEvents(r1,HystrixEventType.TIMEOUT,HystrixEventType.FALLBACK_MISSING);\n  assertCommandExecutionEvents(r2,HystrixEventType.TIMEOUT,HystrixEventType.FALLBACK_MISSING);\n  assertCommandExecutionEvents(r3,HystrixEventType.TIMEOUT,HystrixEventType.FALLBACK_MISSING);\n  assertCommandExecutionEvents(r4,HystrixEventType.TIMEOUT,HystrixEventType.FALLBACK_MISSING);\n  assertEquals(0,circuitBreaker.metrics.getCurrentConcurrentExecutionCount());\n  assertSaneHystrixRequestLog(4);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 227,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 1935,
        "startColumnNumber" : 8,
        "endLineNumber" : 1935,
        "endColumnNumber" : 107
      },
      "nodeContext" : "NoRequestCacheTimeoutWithoutFallback r1=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "com.netflix.hystrix.HystrixCommandTest.NoRequestCacheTimeoutWithoutFallback"
  }, {
    "nodeContext" : "new NoRequestCacheTimeoutWithoutFallback(circuitBreaker)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 56,
      "startLineNumber" : 1945,
      "startColumnNumber" : 50,
      "endLineNumber" : 1945,
      "endColumnNumber" : 106
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 1945,
        "startColumnNumber" : 45,
        "endLineNumber" : 1945,
        "endColumnNumber" : 106
      },
      "nodeContext" : "r2=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 1945,
        "startColumnNumber" : 8,
        "endLineNumber" : 1945,
        "endColumnNumber" : 107
      },
      "nodeContext" : "NoRequestCacheTimeoutWithoutFallback r2=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2323,
        "startLineNumber" : 1933,
        "startColumnNumber" : 78,
        "endLineNumber" : 1986,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestCircuitBreaker circuitBreaker=new TestCircuitBreaker();\n  NoRequestCacheTimeoutWithoutFallback r1=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker);\n  try {\n    System.out.println(\"r1 value: \" + r1.execute());\n    fail(\"expected a timeout\");\n  }\n catch (  HystrixRuntimeException e) {\n    assertTrue(r1.isResponseTimedOut());\n  }\n  NoRequestCacheTimeoutWithoutFallback r2=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker);\n  try {\n    r2.execute();\n    fail(\"expected a timeout\");\n  }\n catch (  HystrixRuntimeException e) {\n    assertTrue(r2.isResponseTimedOut());\n  }\n  NoRequestCacheTimeoutWithoutFallback r3=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker);\n  Future<Boolean> f3=r3.queue();\n  try {\n    f3.get();\n    fail(\"expected a timeout\");\n  }\n catch (  ExecutionException e) {\n    e.printStackTrace();\n    assertTrue(r3.isResponseTimedOut());\n  }\n  Thread.sleep(500);\n  NoRequestCacheTimeoutWithoutFallback r4=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker);\n  try {\n    r4.execute();\n    fail(\"expected a timeout\");\n  }\n catch (  HystrixRuntimeException e) {\n    assertTrue(r4.isResponseTimedOut());\n    assertFalse(r4.isResponseFromFallback());\n  }\n  assertCommandExecutionEvents(r1,HystrixEventType.TIMEOUT,HystrixEventType.FALLBACK_MISSING);\n  assertCommandExecutionEvents(r2,HystrixEventType.TIMEOUT,HystrixEventType.FALLBACK_MISSING);\n  assertCommandExecutionEvents(r3,HystrixEventType.TIMEOUT,HystrixEventType.FALLBACK_MISSING);\n  assertCommandExecutionEvents(r4,HystrixEventType.TIMEOUT,HystrixEventType.FALLBACK_MISSING);\n  assertEquals(0,circuitBreaker.metrics.getCurrentConcurrentExecutionCount());\n  assertSaneHystrixRequestLog(4);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2407,
        "startLineNumber" : 1932,
        "startColumnNumber" : 4,
        "endLineNumber" : 1986,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testNoRequestCacheOnTimeoutThrowsException() throws Exception {\n  TestCircuitBreaker circuitBreaker=new TestCircuitBreaker();\n  NoRequestCacheTimeoutWithoutFallback r1=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker);\n  try {\n    System.out.println(\"r1 value: \" + r1.execute());\n    fail(\"expected a timeout\");\n  }\n catch (  HystrixRuntimeException e) {\n    assertTrue(r1.isResponseTimedOut());\n  }\n  NoRequestCacheTimeoutWithoutFallback r2=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker);\n  try {\n    r2.execute();\n    fail(\"expected a timeout\");\n  }\n catch (  HystrixRuntimeException e) {\n    assertTrue(r2.isResponseTimedOut());\n  }\n  NoRequestCacheTimeoutWithoutFallback r3=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker);\n  Future<Boolean> f3=r3.queue();\n  try {\n    f3.get();\n    fail(\"expected a timeout\");\n  }\n catch (  ExecutionException e) {\n    e.printStackTrace();\n    assertTrue(r3.isResponseTimedOut());\n  }\n  Thread.sleep(500);\n  NoRequestCacheTimeoutWithoutFallback r4=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker);\n  try {\n    r4.execute();\n    fail(\"expected a timeout\");\n  }\n catch (  HystrixRuntimeException e) {\n    assertTrue(r4.isResponseTimedOut());\n    assertFalse(r4.isResponseFromFallback());\n  }\n  assertCommandExecutionEvents(r1,HystrixEventType.TIMEOUT,HystrixEventType.FALLBACK_MISSING);\n  assertCommandExecutionEvents(r2,HystrixEventType.TIMEOUT,HystrixEventType.FALLBACK_MISSING);\n  assertCommandExecutionEvents(r3,HystrixEventType.TIMEOUT,HystrixEventType.FALLBACK_MISSING);\n  assertCommandExecutionEvents(r4,HystrixEventType.TIMEOUT,HystrixEventType.FALLBACK_MISSING);\n  assertEquals(0,circuitBreaker.metrics.getCurrentConcurrentExecutionCount());\n  assertSaneHystrixRequestLog(4);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 227,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 1945,
        "startColumnNumber" : 8,
        "endLineNumber" : 1945,
        "endColumnNumber" : 107
      },
      "nodeContext" : "NoRequestCacheTimeoutWithoutFallback r2=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "com.netflix.hystrix.HystrixCommandTest.NoRequestCacheTimeoutWithoutFallback"
  }, {
    "nodeContext" : "new NoRequestCacheTimeoutWithoutFallback(circuitBreaker)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 56,
      "startLineNumber" : 1955,
      "startColumnNumber" : 50,
      "endLineNumber" : 1955,
      "endColumnNumber" : 106
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 1955,
        "startColumnNumber" : 45,
        "endLineNumber" : 1955,
        "endColumnNumber" : 106
      },
      "nodeContext" : "r3=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 1955,
        "startColumnNumber" : 8,
        "endLineNumber" : 1955,
        "endColumnNumber" : 107
      },
      "nodeContext" : "NoRequestCacheTimeoutWithoutFallback r3=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2323,
        "startLineNumber" : 1933,
        "startColumnNumber" : 78,
        "endLineNumber" : 1986,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestCircuitBreaker circuitBreaker=new TestCircuitBreaker();\n  NoRequestCacheTimeoutWithoutFallback r1=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker);\n  try {\n    System.out.println(\"r1 value: \" + r1.execute());\n    fail(\"expected a timeout\");\n  }\n catch (  HystrixRuntimeException e) {\n    assertTrue(r1.isResponseTimedOut());\n  }\n  NoRequestCacheTimeoutWithoutFallback r2=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker);\n  try {\n    r2.execute();\n    fail(\"expected a timeout\");\n  }\n catch (  HystrixRuntimeException e) {\n    assertTrue(r2.isResponseTimedOut());\n  }\n  NoRequestCacheTimeoutWithoutFallback r3=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker);\n  Future<Boolean> f3=r3.queue();\n  try {\n    f3.get();\n    fail(\"expected a timeout\");\n  }\n catch (  ExecutionException e) {\n    e.printStackTrace();\n    assertTrue(r3.isResponseTimedOut());\n  }\n  Thread.sleep(500);\n  NoRequestCacheTimeoutWithoutFallback r4=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker);\n  try {\n    r4.execute();\n    fail(\"expected a timeout\");\n  }\n catch (  HystrixRuntimeException e) {\n    assertTrue(r4.isResponseTimedOut());\n    assertFalse(r4.isResponseFromFallback());\n  }\n  assertCommandExecutionEvents(r1,HystrixEventType.TIMEOUT,HystrixEventType.FALLBACK_MISSING);\n  assertCommandExecutionEvents(r2,HystrixEventType.TIMEOUT,HystrixEventType.FALLBACK_MISSING);\n  assertCommandExecutionEvents(r3,HystrixEventType.TIMEOUT,HystrixEventType.FALLBACK_MISSING);\n  assertCommandExecutionEvents(r4,HystrixEventType.TIMEOUT,HystrixEventType.FALLBACK_MISSING);\n  assertEquals(0,circuitBreaker.metrics.getCurrentConcurrentExecutionCount());\n  assertSaneHystrixRequestLog(4);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2407,
        "startLineNumber" : 1932,
        "startColumnNumber" : 4,
        "endLineNumber" : 1986,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testNoRequestCacheOnTimeoutThrowsException() throws Exception {\n  TestCircuitBreaker circuitBreaker=new TestCircuitBreaker();\n  NoRequestCacheTimeoutWithoutFallback r1=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker);\n  try {\n    System.out.println(\"r1 value: \" + r1.execute());\n    fail(\"expected a timeout\");\n  }\n catch (  HystrixRuntimeException e) {\n    assertTrue(r1.isResponseTimedOut());\n  }\n  NoRequestCacheTimeoutWithoutFallback r2=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker);\n  try {\n    r2.execute();\n    fail(\"expected a timeout\");\n  }\n catch (  HystrixRuntimeException e) {\n    assertTrue(r2.isResponseTimedOut());\n  }\n  NoRequestCacheTimeoutWithoutFallback r3=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker);\n  Future<Boolean> f3=r3.queue();\n  try {\n    f3.get();\n    fail(\"expected a timeout\");\n  }\n catch (  ExecutionException e) {\n    e.printStackTrace();\n    assertTrue(r3.isResponseTimedOut());\n  }\n  Thread.sleep(500);\n  NoRequestCacheTimeoutWithoutFallback r4=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker);\n  try {\n    r4.execute();\n    fail(\"expected a timeout\");\n  }\n catch (  HystrixRuntimeException e) {\n    assertTrue(r4.isResponseTimedOut());\n    assertFalse(r4.isResponseFromFallback());\n  }\n  assertCommandExecutionEvents(r1,HystrixEventType.TIMEOUT,HystrixEventType.FALLBACK_MISSING);\n  assertCommandExecutionEvents(r2,HystrixEventType.TIMEOUT,HystrixEventType.FALLBACK_MISSING);\n  assertCommandExecutionEvents(r3,HystrixEventType.TIMEOUT,HystrixEventType.FALLBACK_MISSING);\n  assertCommandExecutionEvents(r4,HystrixEventType.TIMEOUT,HystrixEventType.FALLBACK_MISSING);\n  assertEquals(0,circuitBreaker.metrics.getCurrentConcurrentExecutionCount());\n  assertSaneHystrixRequestLog(4);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 227,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 1955,
        "startColumnNumber" : 8,
        "endLineNumber" : 1955,
        "endColumnNumber" : 107
      },
      "nodeContext" : "NoRequestCacheTimeoutWithoutFallback r3=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "com.netflix.hystrix.HystrixCommandTest.NoRequestCacheTimeoutWithoutFallback"
  }, {
    "nodeContext" : "new NoRequestCacheTimeoutWithoutFallback(circuitBreaker)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 56,
      "startLineNumber" : 1969,
      "startColumnNumber" : 50,
      "endLineNumber" : 1969,
      "endColumnNumber" : 106
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 1969,
        "startColumnNumber" : 45,
        "endLineNumber" : 1969,
        "endColumnNumber" : 106
      },
      "nodeContext" : "r4=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 1969,
        "startColumnNumber" : 8,
        "endLineNumber" : 1969,
        "endColumnNumber" : 107
      },
      "nodeContext" : "NoRequestCacheTimeoutWithoutFallback r4=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2323,
        "startLineNumber" : 1933,
        "startColumnNumber" : 78,
        "endLineNumber" : 1986,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TestCircuitBreaker circuitBreaker=new TestCircuitBreaker();\n  NoRequestCacheTimeoutWithoutFallback r1=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker);\n  try {\n    System.out.println(\"r1 value: \" + r1.execute());\n    fail(\"expected a timeout\");\n  }\n catch (  HystrixRuntimeException e) {\n    assertTrue(r1.isResponseTimedOut());\n  }\n  NoRequestCacheTimeoutWithoutFallback r2=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker);\n  try {\n    r2.execute();\n    fail(\"expected a timeout\");\n  }\n catch (  HystrixRuntimeException e) {\n    assertTrue(r2.isResponseTimedOut());\n  }\n  NoRequestCacheTimeoutWithoutFallback r3=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker);\n  Future<Boolean> f3=r3.queue();\n  try {\n    f3.get();\n    fail(\"expected a timeout\");\n  }\n catch (  ExecutionException e) {\n    e.printStackTrace();\n    assertTrue(r3.isResponseTimedOut());\n  }\n  Thread.sleep(500);\n  NoRequestCacheTimeoutWithoutFallback r4=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker);\n  try {\n    r4.execute();\n    fail(\"expected a timeout\");\n  }\n catch (  HystrixRuntimeException e) {\n    assertTrue(r4.isResponseTimedOut());\n    assertFalse(r4.isResponseFromFallback());\n  }\n  assertCommandExecutionEvents(r1,HystrixEventType.TIMEOUT,HystrixEventType.FALLBACK_MISSING);\n  assertCommandExecutionEvents(r2,HystrixEventType.TIMEOUT,HystrixEventType.FALLBACK_MISSING);\n  assertCommandExecutionEvents(r3,HystrixEventType.TIMEOUT,HystrixEventType.FALLBACK_MISSING);\n  assertCommandExecutionEvents(r4,HystrixEventType.TIMEOUT,HystrixEventType.FALLBACK_MISSING);\n  assertEquals(0,circuitBreaker.metrics.getCurrentConcurrentExecutionCount());\n  assertSaneHystrixRequestLog(4);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 219,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2407,
        "startLineNumber" : 1932,
        "startColumnNumber" : 4,
        "endLineNumber" : 1986,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testNoRequestCacheOnTimeoutThrowsException() throws Exception {\n  TestCircuitBreaker circuitBreaker=new TestCircuitBreaker();\n  NoRequestCacheTimeoutWithoutFallback r1=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker);\n  try {\n    System.out.println(\"r1 value: \" + r1.execute());\n    fail(\"expected a timeout\");\n  }\n catch (  HystrixRuntimeException e) {\n    assertTrue(r1.isResponseTimedOut());\n  }\n  NoRequestCacheTimeoutWithoutFallback r2=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker);\n  try {\n    r2.execute();\n    fail(\"expected a timeout\");\n  }\n catch (  HystrixRuntimeException e) {\n    assertTrue(r2.isResponseTimedOut());\n  }\n  NoRequestCacheTimeoutWithoutFallback r3=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker);\n  Future<Boolean> f3=r3.queue();\n  try {\n    f3.get();\n    fail(\"expected a timeout\");\n  }\n catch (  ExecutionException e) {\n    e.printStackTrace();\n    assertTrue(r3.isResponseTimedOut());\n  }\n  Thread.sleep(500);\n  NoRequestCacheTimeoutWithoutFallback r4=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker);\n  try {\n    r4.execute();\n    fail(\"expected a timeout\");\n  }\n catch (  HystrixRuntimeException e) {\n    assertTrue(r4.isResponseTimedOut());\n    assertFalse(r4.isResponseFromFallback());\n  }\n  assertCommandExecutionEvents(r1,HystrixEventType.TIMEOUT,HystrixEventType.FALLBACK_MISSING);\n  assertCommandExecutionEvents(r2,HystrixEventType.TIMEOUT,HystrixEventType.FALLBACK_MISSING);\n  assertCommandExecutionEvents(r3,HystrixEventType.TIMEOUT,HystrixEventType.FALLBACK_MISSING);\n  assertCommandExecutionEvents(r4,HystrixEventType.TIMEOUT,HystrixEventType.FALLBACK_MISSING);\n  assertEquals(0,circuitBreaker.metrics.getCurrentConcurrentExecutionCount());\n  assertSaneHystrixRequestLog(4);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 227,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 1969,
        "startColumnNumber" : 8,
        "endLineNumber" : 1969,
        "endColumnNumber" : 107
      },
      "nodeContext" : "NoRequestCacheTimeoutWithoutFallback r4=new NoRequestCacheTimeoutWithoutFallback(circuitBreaker);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "com.netflix.hystrix.HystrixCommandTest.NoRequestCacheTimeoutWithoutFallback"
  } ],
  "positionList" : [ {
    "charLength" : 56,
    "startLineNumber" : 1935,
    "startColumnNumber" : 50,
    "endLineNumber" : 1935,
    "endColumnNumber" : 106
  }, {
    "charLength" : 56,
    "startLineNumber" : 1945,
    "startColumnNumber" : 50,
    "endLineNumber" : 1945,
    "endColumnNumber" : 106
  }, {
    "charLength" : 56,
    "startLineNumber" : 1955,
    "startColumnNumber" : 50,
    "endLineNumber" : 1955,
    "endColumnNumber" : 106
  }, {
    "charLength" : 56,
    "startLineNumber" : 1969,
    "startColumnNumber" : 50,
    "endLineNumber" : 1969,
    "endColumnNumber" : 106
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  } ]
}