{
  "id" : 262,
  "expression" : "list",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/flowable/FlowableRangeTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "list",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 121,
      "startColumnNumber" : 12,
      "endLineNumber" : 121,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 121,
        "startColumnNumber" : 12,
        "endLineNumber" : 121,
        "endColumnNumber" : 23
      },
      "nodeContext" : "list.add(i)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 121,
        "startColumnNumber" : 12,
        "endLineNumber" : 121,
        "endColumnNumber" : 24
      },
      "nodeContext" : "list.add(i);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 120,
        "startColumnNumber" : 65,
        "endLineNumber" : 122,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  list.add(i);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 120,
        "startColumnNumber" : 8,
        "endLineNumber" : 122,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=1; i <= Flowable.bufferSize() * 2 + 1; i++) {\n  list.add(i);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 23,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 559,
        "startLineNumber" : 118,
        "startColumnNumber" : 37,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ArrayList<Integer> list=new ArrayList<Integer>(Flowable.bufferSize() * 2);\n  for (int i=1; i <= Flowable.bufferSize() * 2 + 1; i++) {\n    list.add(i);\n  }\n  Flowable<Integer> o=Flowable.range(1,list.size());\n  TestSubscriber<Integer> ts=new TestSubscriber<Integer>((Long)null);\n  ts.assertNoValues();\n  ts.request(Long.MAX_VALUE);\n  o.subscribe(ts);\n  ts.assertValueSequence(list);\n  ts.assertTerminated();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 603,
        "startLineNumber" : 117,
        "startColumnNumber" : 4,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testNoBackpressure(){\n  ArrayList<Integer> list=new ArrayList<Integer>(Flowable.bufferSize() * 2);\n  for (int i=1; i <= Flowable.bufferSize() * 2 + 1; i++) {\n    list.add(i);\n  }\n  Flowable<Integer> o=Flowable.range(1,list.size());\n  TestSubscriber<Integer> ts=new TestSubscriber<Integer>((Long)null);\n  ts.assertNoValues();\n  ts.request(Long.MAX_VALUE);\n  o.subscribe(ts);\n  ts.assertValueSequence(list);\n  ts.assertTerminated();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 107,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 121,
        "startColumnNumber" : 12,
        "endLineNumber" : 121,
        "endColumnNumber" : 24
      },
      "nodeContext" : "list.add(i);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.ArrayList<java.lang.Integer>"
  }, {
    "nodeContext" : "list",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 124,
      "startColumnNumber" : 48,
      "endLineNumber" : 124,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 124,
        "startColumnNumber" : 48,
        "endLineNumber" : 124,
        "endColumnNumber" : 59
      },
      "nodeContext" : "list.size()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 124,
        "startColumnNumber" : 30,
        "endLineNumber" : 124,
        "endColumnNumber" : 60
      },
      "nodeContext" : "Flowable.range(1,list.size())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 124,
        "startColumnNumber" : 26,
        "endLineNumber" : 124,
        "endColumnNumber" : 60
      },
      "nodeContext" : "o=Flowable.range(1,list.size())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 124,
        "startColumnNumber" : 8,
        "endLineNumber" : 124,
        "endColumnNumber" : 61
      },
      "nodeContext" : "Flowable<Integer> o=Flowable.range(1,list.size());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 559,
        "startLineNumber" : 118,
        "startColumnNumber" : 37,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ArrayList<Integer> list=new ArrayList<Integer>(Flowable.bufferSize() * 2);\n  for (int i=1; i <= Flowable.bufferSize() * 2 + 1; i++) {\n    list.add(i);\n  }\n  Flowable<Integer> o=Flowable.range(1,list.size());\n  TestSubscriber<Integer> ts=new TestSubscriber<Integer>((Long)null);\n  ts.assertNoValues();\n  ts.request(Long.MAX_VALUE);\n  o.subscribe(ts);\n  ts.assertValueSequence(list);\n  ts.assertTerminated();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 603,
        "startLineNumber" : 117,
        "startColumnNumber" : 4,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testNoBackpressure(){\n  ArrayList<Integer> list=new ArrayList<Integer>(Flowable.bufferSize() * 2);\n  for (int i=1; i <= Flowable.bufferSize() * 2 + 1; i++) {\n    list.add(i);\n  }\n  Flowable<Integer> o=Flowable.range(1,list.size());\n  TestSubscriber<Integer> ts=new TestSubscriber<Integer>((Long)null);\n  ts.assertNoValues();\n  ts.request(Long.MAX_VALUE);\n  o.subscribe(ts);\n  ts.assertValueSequence(list);\n  ts.assertTerminated();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 107,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 124,
        "startColumnNumber" : 8,
        "endLineNumber" : 124,
        "endColumnNumber" : 61
      },
      "nodeContext" : "Flowable<Integer> o=Flowable.range(1,list.size());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.ArrayList<java.lang.Integer>"
  }, {
    "nodeContext" : "list",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 133,
      "startColumnNumber" : 31,
      "endLineNumber" : 133,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 133,
        "startColumnNumber" : 8,
        "endLineNumber" : 133,
        "endColumnNumber" : 36
      },
      "nodeContext" : "ts.assertValueSequence(list)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 133,
        "startColumnNumber" : 8,
        "endLineNumber" : 133,
        "endColumnNumber" : 37
      },
      "nodeContext" : "ts.assertValueSequence(list);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 559,
        "startLineNumber" : 118,
        "startColumnNumber" : 37,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ArrayList<Integer> list=new ArrayList<Integer>(Flowable.bufferSize() * 2);\n  for (int i=1; i <= Flowable.bufferSize() * 2 + 1; i++) {\n    list.add(i);\n  }\n  Flowable<Integer> o=Flowable.range(1,list.size());\n  TestSubscriber<Integer> ts=new TestSubscriber<Integer>((Long)null);\n  ts.assertNoValues();\n  ts.request(Long.MAX_VALUE);\n  o.subscribe(ts);\n  ts.assertValueSequence(list);\n  ts.assertTerminated();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 603,
        "startLineNumber" : 117,
        "startColumnNumber" : 4,
        "endLineNumber" : 135,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testNoBackpressure(){\n  ArrayList<Integer> list=new ArrayList<Integer>(Flowable.bufferSize() * 2);\n  for (int i=1; i <= Flowable.bufferSize() * 2 + 1; i++) {\n    list.add(i);\n  }\n  Flowable<Integer> o=Flowable.range(1,list.size());\n  TestSubscriber<Integer> ts=new TestSubscriber<Integer>((Long)null);\n  ts.assertNoValues();\n  ts.request(Long.MAX_VALUE);\n  o.subscribe(ts);\n  ts.assertValueSequence(list);\n  ts.assertTerminated();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 107,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 133,
        "startColumnNumber" : 8,
        "endLineNumber" : 133,
        "endColumnNumber" : 37
      },
      "nodeContext" : "ts.assertValueSequence(list);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.ArrayList<java.lang.Integer>"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 121,
    "startColumnNumber" : 12,
    "endLineNumber" : 121,
    "endColumnNumber" : 16
  }, {
    "charLength" : 4,
    "startLineNumber" : 124,
    "startColumnNumber" : 48,
    "endLineNumber" : 124,
    "endColumnNumber" : 52
  }, {
    "charLength" : 4,
    "startLineNumber" : 133,
    "startColumnNumber" : 31,
    "endLineNumber" : 133,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}