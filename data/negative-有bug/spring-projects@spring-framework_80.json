{
  "id" : 80,
  "expression" : "SystemProfileValueSource.class",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-test/src/main/java/org/springframework/test/annotation/ProfileValueUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "SystemProfileValueSource.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 30,
      "startLineNumber" : 88,
      "startColumnNumber" : 6,
      "endLineNumber" : 88,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 88,
        "startColumnNumber" : 6,
        "endLineNumber" : 88,
        "endColumnNumber" : 62
      },
      "nodeContext" : "SystemProfileValueSource.class == profileValueSourceType",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 568,
        "startLineNumber" : 88,
        "startColumnNumber" : 2,
        "endLineNumber" : 102,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (SystemProfileValueSource.class == profileValueSourceType) {\n  profileValueSource=SystemProfileValueSource.getInstance();\n}\n else {\n  try {\n    profileValueSource=ReflectionUtils.accessibleConstructor(profileValueSourceType).newInstance();\n  }\n catch (  Exception ex) {\n    if (logger.isWarnEnabled()) {\n      logger.warn(\"Could not instantiate a ProfileValueSource of type [\" + profileValueSourceType + \"] for class [\"+ testClass.getName()+ \"]: using default.\",ex);\n    }\n    profileValueSource=SystemProfileValueSource.getInstance();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1605,
        "startLineNumber" : 64,
        "startColumnNumber" : 81,
        "endLineNumber" : 105,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Assert.notNull(testClass,\"testClass must not be null\");\n  Class<ProfileValueSourceConfiguration> annotationType=ProfileValueSourceConfiguration.class;\n  ProfileValueSourceConfiguration config=AnnotatedElementUtils.findMergedAnnotation(testClass,annotationType);\n  if (logger.isDebugEnabled()) {\n    logger.debug(\"Retrieved @ProfileValueSourceConfiguration [\" + config + \"] for test class [\"+ testClass.getName()+ \"]\");\n  }\n  Class<? extends ProfileValueSource> profileValueSourceType;\n  if (config != null) {\n    profileValueSourceType=config.value();\n  }\n else {\n    profileValueSourceType=(Class<? extends ProfileValueSource>)AnnotationUtils.getDefaultValue(annotationType);\n    Assert.state(profileValueSourceType != null,\"No default ProfileValueSource class\");\n  }\n  if (logger.isDebugEnabled()) {\n    logger.debug(\"Retrieved ProfileValueSource type [\" + profileValueSourceType + \"] for class [\"+ testClass.getName()+ \"]\");\n  }\n  ProfileValueSource profileValueSource;\n  if (SystemProfileValueSource.class == profileValueSourceType) {\n    profileValueSource=SystemProfileValueSource.getInstance();\n  }\n else {\n    try {\n      profileValueSource=ReflectionUtils.accessibleConstructor(profileValueSourceType).newInstance();\n    }\n catch (    Exception ex) {\n      if (logger.isWarnEnabled()) {\n        logger.warn(\"Could not instantiate a ProfileValueSource of type [\" + profileValueSourceType + \"] for class [\"+ testClass.getName()+ \"]: using default.\",ex);\n      }\n      profileValueSource=SystemProfileValueSource.getInstance();\n    }\n  }\n  return profileValueSource;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 167,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2475,
        "startLineNumber" : 47,
        "startColumnNumber" : 1,
        "endLineNumber" : 105,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Retrieves the  {@link ProfileValueSource} type for the specified{@link Class test class} as configured via the{@link ProfileValueSourceConfiguration &#064;ProfileValueSourceConfiguration} annotation and instantiates a newinstance of that type. <p>If  {@link ProfileValueSourceConfiguration &#064;ProfileValueSourceConfiguration} is not present on the specifiedclass or if a custom  {@link ProfileValueSource} is not declared, thedefault  {@link SystemProfileValueSource} will be returned instead.\n * @param testClass the test class for which the ProfileValueSource shouldbe retrieved\n * @return the configured (or default) ProfileValueSource for the specifiedclass\n * @see SystemProfileValueSource\n */\n@SuppressWarnings(\"unchecked\") public static ProfileValueSource retrieveProfileValueSource(Class<?> testClass){\n  Assert.notNull(testClass,\"testClass must not be null\");\n  Class<ProfileValueSourceConfiguration> annotationType=ProfileValueSourceConfiguration.class;\n  ProfileValueSourceConfiguration config=AnnotatedElementUtils.findMergedAnnotation(testClass,annotationType);\n  if (logger.isDebugEnabled()) {\n    logger.debug(\"Retrieved @ProfileValueSourceConfiguration [\" + config + \"] for test class [\"+ testClass.getName()+ \"]\");\n  }\n  Class<? extends ProfileValueSource> profileValueSourceType;\n  if (config != null) {\n    profileValueSourceType=config.value();\n  }\n else {\n    profileValueSourceType=(Class<? extends ProfileValueSource>)AnnotationUtils.getDefaultValue(annotationType);\n    Assert.state(profileValueSourceType != null,\"No default ProfileValueSource class\");\n  }\n  if (logger.isDebugEnabled()) {\n    logger.debug(\"Retrieved ProfileValueSource type [\" + profileValueSourceType + \"] for class [\"+ testClass.getName()+ \"]\");\n  }\n  ProfileValueSource profileValueSource;\n  if (SystemProfileValueSource.class == profileValueSourceType) {\n    profileValueSource=SystemProfileValueSource.getInstance();\n  }\n else {\n    try {\n      profileValueSource=ReflectionUtils.accessibleConstructor(profileValueSourceType).newInstance();\n    }\n catch (    Exception ex) {\n      if (logger.isWarnEnabled()) {\n        logger.warn(\"Could not instantiate a ProfileValueSource of type [\" + profileValueSourceType + \"] for class [\"+ testClass.getName()+ \"]: using default.\",ex);\n      }\n      profileValueSource=SystemProfileValueSource.getInstance();\n    }\n  }\n  return profileValueSource;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 183,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 88,
        "startColumnNumber" : 6,
        "endLineNumber" : 88,
        "endColumnNumber" : 62
      },
      "nodeContext" : "SystemProfileValueSource.class == profileValueSourceType",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<org.springframework.test.annotation.SystemProfileValueSource>"
  } ],
  "positionList" : [ {
    "charLength" : 30,
    "startLineNumber" : 88,
    "startColumnNumber" : 6,
    "endLineNumber" : 88,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ ]
}