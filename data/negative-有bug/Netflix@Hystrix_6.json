{
  "id" : 6,
  "expression" : "rejected1.isResponseThreadPoolRejected()",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-core/src/test/java/com/netflix/hystrix/metric/consumer/RollingCommandEventCounterStreamTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "rejected1.isResponseThreadPoolRejected()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 40,
      "startLineNumber" : 382,
      "startColumnNumber" : 19,
      "endLineNumber" : 382,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 382,
        "startColumnNumber" : 8,
        "endLineNumber" : 382,
        "endColumnNumber" : 60
      },
      "nodeContext" : "assertTrue(rejected1.isResponseThreadPoolRejected())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 382,
        "startColumnNumber" : 8,
        "endLineNumber" : 382,
        "endColumnNumber" : 61
      },
      "nodeContext" : "assertTrue(rejected1.isResponseThreadPoolRejected());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2207,
        "startLineNumber" : 341,
        "startColumnNumber" : 41,
        "endLineNumber" : 390,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HystrixCommandKey key=HystrixCommandKey.Factory.asKey(\"CMD-RollingCounter-I\");\n  stream=RollingCommandEventCounterStream.getInstance(key,10,100);\n  stream.startCachingStreamValuesIfUnstarted();\n  final CountDownLatch latch=new CountDownLatch(1);\n  stream.observe().take(10).subscribe(getSubscriber(latch));\n  List<CommandStreamTest.Command> saturators=new ArrayList<CommandStreamTest.Command>();\n  for (int i=0; i < 10; i++) {\n    saturators.add(CommandStreamTest.Command.from(groupKey,key,HystrixEventType.SUCCESS,200));\n  }\n  CommandStreamTest.Command rejected1=CommandStreamTest.Command.from(groupKey,key,HystrixEventType.SUCCESS,0);\n  CommandStreamTest.Command rejected2=CommandStreamTest.Command.from(groupKey,key,HystrixEventType.SUCCESS,0);\n  for (  final CommandStreamTest.Command saturator : saturators) {\n    saturator.observe();\n  }\n  try {\n    Thread.sleep(100);\n  }\n catch (  InterruptedException ie) {\n    fail(ie.getMessage());\n  }\n  rejected1.observe();\n  rejected2.observe();\n  try {\n    assertTrue(latch.await(10000,TimeUnit.MILLISECONDS));\n  }\n catch (  InterruptedException ex) {\n    fail(\"Interrupted ex\");\n  }\n  System.out.println(\"ReqLog : \" + HystrixRequestLog.getCurrentRequest().getExecutedCommandsAsString());\n  assertTrue(rejected1.isResponseThreadPoolRejected());\n  assertTrue(rejected2.isResponseThreadPoolRejected());\n  assertEquals(HystrixEventType.values().length,stream.getLatest().length);\n  long[] expected=new long[HystrixEventType.values().length];\n  expected[HystrixEventType.SUCCESS.ordinal()]=10;\n  expected[HystrixEventType.THREAD_POOL_REJECTED.ordinal()]=2;\n  expected[HystrixEventType.FALLBACK_SUCCESS.ordinal()]=2;\n  assertArrayEquals(expected,stream.getLatest());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 281,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2254,
        "startLineNumber" : 340,
        "startColumnNumber" : 4,
        "endLineNumber" : 390,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testThreadPoolRejected(){\n  HystrixCommandKey key=HystrixCommandKey.Factory.asKey(\"CMD-RollingCounter-I\");\n  stream=RollingCommandEventCounterStream.getInstance(key,10,100);\n  stream.startCachingStreamValuesIfUnstarted();\n  final CountDownLatch latch=new CountDownLatch(1);\n  stream.observe().take(10).subscribe(getSubscriber(latch));\n  List<CommandStreamTest.Command> saturators=new ArrayList<CommandStreamTest.Command>();\n  for (int i=0; i < 10; i++) {\n    saturators.add(CommandStreamTest.Command.from(groupKey,key,HystrixEventType.SUCCESS,200));\n  }\n  CommandStreamTest.Command rejected1=CommandStreamTest.Command.from(groupKey,key,HystrixEventType.SUCCESS,0);\n  CommandStreamTest.Command rejected2=CommandStreamTest.Command.from(groupKey,key,HystrixEventType.SUCCESS,0);\n  for (  final CommandStreamTest.Command saturator : saturators) {\n    saturator.observe();\n  }\n  try {\n    Thread.sleep(100);\n  }\n catch (  InterruptedException ie) {\n    fail(ie.getMessage());\n  }\n  rejected1.observe();\n  rejected2.observe();\n  try {\n    assertTrue(latch.await(10000,TimeUnit.MILLISECONDS));\n  }\n catch (  InterruptedException ex) {\n    fail(\"Interrupted ex\");\n  }\n  System.out.println(\"ReqLog : \" + HystrixRequestLog.getCurrentRequest().getExecutedCommandsAsString());\n  assertTrue(rejected1.isResponseThreadPoolRejected());\n  assertTrue(rejected2.isResponseThreadPoolRejected());\n  assertEquals(HystrixEventType.values().length,stream.getLatest().length);\n  long[] expected=new long[HystrixEventType.values().length];\n  expected[HystrixEventType.SUCCESS.ordinal()]=10;\n  expected[HystrixEventType.THREAD_POOL_REJECTED.ordinal()]=2;\n  expected[HystrixEventType.FALLBACK_SUCCESS.ordinal()]=2;\n  assertArrayEquals(expected,stream.getLatest());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 287,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 382,
        "startColumnNumber" : 8,
        "endLineNumber" : 382,
        "endColumnNumber" : 61
      },
      "nodeContext" : "assertTrue(rejected1.isResponseThreadPoolRejected());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 40,
    "startLineNumber" : 382,
    "startColumnNumber" : 19,
    "endLineNumber" : 382,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ ]
}