{
  "id" : 117,
  "expression" : "String.format(\"%s-%s\",manglePrefix,namespace)",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-testclient/src/main/java/org/apache/pulsar/testclient/LoadSimulationController.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "String.format(\"%s-%s\",manglePrefix,namespace)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 47,
      "startLineNumber" : 424,
      "startColumnNumber" : 56,
      "endLineNumber" : 424,
      "endColumnNumber" : 103
    },
    "astNodeNumber" : 6,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 424,
        "startColumnNumber" : 37,
        "endLineNumber" : 424,
        "endColumnNumber" : 103
      },
      "nodeContext" : "mangledNamespace=String.format(\"%s-%s\",manglePrefix,namespace)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 424,
        "startColumnNumber" : 24,
        "endLineNumber" : 424,
        "endColumnNumber" : 104
      },
      "nodeContext" : "final String mangledNamespace=String.format(\"%s-%s\",manglePrefix,namespace);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 3435,
        "startLineNumber" : 408,
        "startColumnNumber" : 98,
        "endLineNumber" : 456,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  final String bundle=entry.getKey();\n  final ResourceQuota quota=entry.getValue();\n  final int tenantStart=QUOTA_ROOT.length() + 1;\n  final int clusterStart=bundle.indexOf('/',tenantStart) + 1;\n  final String sourceTenant=bundle.substring(tenantStart,clusterStart - 1);\n  final int namespaceStart=bundle.indexOf('/',clusterStart) + 1;\n  final String sourceCluster=bundle.substring(clusterStart,namespaceStart - 1);\n  final String namespace=bundle.substring(namespaceStart,bundle.lastIndexOf('/'));\n  final String keyRangeString=bundle.substring(bundle.lastIndexOf('/') + 1);\n  final String manglePrefix=String.format(\"%s-%s-%s\",sourceCluster,sourceTenant,keyRangeString);\n  final String mangledNamespace=String.format(\"%s-%s\",manglePrefix,namespace);\n  final BundleData bundleData=initializeBundleData(quota,arguments);\n  final String oldAPITargetPath=String.format(\"/loadbalance/resource-quota/namespace/%s/%s/%s/0x00000000_0xffffffff\",tenantName,cluster,mangledNamespace);\n  final String newAPITargetPath=String.format(\"/loadbalance/bundle-data/%s/%s/%s/0x00000000_0xffffffff\",tenantName,cluster,mangledNamespace);\n  try {\n    ZkUtils.createFullPathOptimistic(targetZKClient,oldAPITargetPath,ObjectMapperFactory.getThreadLocal().writeValueAsBytes(quota),ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT);\n  }\n catch (  KeeperException.NodeExistsException e) {\n  }\ncatch (  Exception e) {\n    throw new RuntimeException(e);\n  }\n  try {\n    ZkUtils.createFullPathOptimistic(targetZKClient,newAPITargetPath,ObjectMapperFactory.getThreadLocal().writeValueAsBytes(bundleData),ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT);\n  }\n catch (  KeeperException.NodeExistsException e) {\n  }\ncatch (  Exception e) {\n    throw new RuntimeException(e);\n  }\n  try {\n    trade(arguments,makeTopic(tenantName,mangledNamespace,\"t\"),j);\n  }\n catch (  Exception e) {\n    throw new RuntimeException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 274,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3513,
        "startLineNumber" : 408,
        "startColumnNumber" : 20,
        "endLineNumber" : 456,
        "endColumnNumber" : 21
      },
      "nodeContext" : "for (final Map.Entry<String,ResourceQuota> entry : bundleToQuota.entrySet()) {\n  final String bundle=entry.getKey();\n  final ResourceQuota quota=entry.getValue();\n  final int tenantStart=QUOTA_ROOT.length() + 1;\n  final int clusterStart=bundle.indexOf('/',tenantStart) + 1;\n  final String sourceTenant=bundle.substring(tenantStart,clusterStart - 1);\n  final int namespaceStart=bundle.indexOf('/',clusterStart) + 1;\n  final String sourceCluster=bundle.substring(clusterStart,namespaceStart - 1);\n  final String namespace=bundle.substring(namespaceStart,bundle.lastIndexOf('/'));\n  final String keyRangeString=bundle.substring(bundle.lastIndexOf('/') + 1);\n  final String manglePrefix=String.format(\"%s-%s-%s\",sourceCluster,sourceTenant,keyRangeString);\n  final String mangledNamespace=String.format(\"%s-%s\",manglePrefix,namespace);\n  final BundleData bundleData=initializeBundleData(quota,arguments);\n  final String oldAPITargetPath=String.format(\"/loadbalance/resource-quota/namespace/%s/%s/%s/0x00000000_0xffffffff\",tenantName,cluster,mangledNamespace);\n  final String newAPITargetPath=String.format(\"/loadbalance/bundle-data/%s/%s/%s/0x00000000_0xffffffff\",tenantName,cluster,mangledNamespace);\n  try {\n    ZkUtils.createFullPathOptimistic(targetZKClient,oldAPITargetPath,ObjectMapperFactory.getThreadLocal().writeValueAsBytes(quota),ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT);\n  }\n catch (  KeeperException.NodeExistsException e) {\n  }\ncatch (  Exception e) {\n    throw new RuntimeException(e);\n  }\n  try {\n    ZkUtils.createFullPathOptimistic(targetZKClient,newAPITargetPath,ObjectMapperFactory.getThreadLocal().writeValueAsBytes(bundleData),ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT);\n  }\n catch (  KeeperException.NodeExistsException e) {\n  }\ncatch (  Exception e) {\n    throw new RuntimeException(e);\n  }\n  try {\n    trade(arguments,makeTopic(tenantName,mangledNamespace,\"t\"),j);\n  }\n catch (  Exception e) {\n    throw new RuntimeException(e);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 290,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 3553,
        "startLineNumber" : 407,
        "startColumnNumber" : 52,
        "endLineNumber" : 457,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  for (  final Map.Entry<String,ResourceQuota> entry : bundleToQuota.entrySet()) {\n    final String bundle=entry.getKey();\n    final ResourceQuota quota=entry.getValue();\n    final int tenantStart=QUOTA_ROOT.length() + 1;\n    final int clusterStart=bundle.indexOf('/',tenantStart) + 1;\n    final String sourceTenant=bundle.substring(tenantStart,clusterStart - 1);\n    final int namespaceStart=bundle.indexOf('/',clusterStart) + 1;\n    final String sourceCluster=bundle.substring(clusterStart,namespaceStart - 1);\n    final String namespace=bundle.substring(namespaceStart,bundle.lastIndexOf('/'));\n    final String keyRangeString=bundle.substring(bundle.lastIndexOf('/') + 1);\n    final String manglePrefix=String.format(\"%s-%s-%s\",sourceCluster,sourceTenant,keyRangeString);\n    final String mangledNamespace=String.format(\"%s-%s\",manglePrefix,namespace);\n    final BundleData bundleData=initializeBundleData(quota,arguments);\n    final String oldAPITargetPath=String.format(\"/loadbalance/resource-quota/namespace/%s/%s/%s/0x00000000_0xffffffff\",tenantName,cluster,mangledNamespace);\n    final String newAPITargetPath=String.format(\"/loadbalance/bundle-data/%s/%s/%s/0x00000000_0xffffffff\",tenantName,cluster,mangledNamespace);\n    try {\n      ZkUtils.createFullPathOptimistic(targetZKClient,oldAPITargetPath,ObjectMapperFactory.getThreadLocal().writeValueAsBytes(quota),ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT);\n    }\n catch (    KeeperException.NodeExistsException e) {\n    }\ncatch (    Exception e) {\n      throw new RuntimeException(e);\n    }\n    try {\n      ZkUtils.createFullPathOptimistic(targetZKClient,newAPITargetPath,ObjectMapperFactory.getThreadLocal().writeValueAsBytes(bundleData),ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT);\n    }\n catch (    KeeperException.NodeExistsException e) {\n    }\ncatch (    Exception e) {\n      throw new RuntimeException(e);\n    }\n    try {\n      trade(arguments,makeTopic(tenantName,mangledNamespace,\"t\"),j);\n    }\n catch (    Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 291,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 3559,
        "startLineNumber" : 407,
        "startColumnNumber" : 46,
        "endLineNumber" : 457,
        "endColumnNumber" : 17
      },
      "nodeContext" : "() -> {\n  for (  final Map.Entry<String,ResourceQuota> entry : bundleToQuota.entrySet()) {\n    final String bundle=entry.getKey();\n    final ResourceQuota quota=entry.getValue();\n    final int tenantStart=QUOTA_ROOT.length() + 1;\n    final int clusterStart=bundle.indexOf('/',tenantStart) + 1;\n    final String sourceTenant=bundle.substring(tenantStart,clusterStart - 1);\n    final int namespaceStart=bundle.indexOf('/',clusterStart) + 1;\n    final String sourceCluster=bundle.substring(clusterStart,namespaceStart - 1);\n    final String namespace=bundle.substring(namespaceStart,bundle.lastIndexOf('/'));\n    final String keyRangeString=bundle.substring(bundle.lastIndexOf('/') + 1);\n    final String manglePrefix=String.format(\"%s-%s-%s\",sourceCluster,sourceTenant,keyRangeString);\n    final String mangledNamespace=String.format(\"%s-%s\",manglePrefix,namespace);\n    final BundleData bundleData=initializeBundleData(quota,arguments);\n    final String oldAPITargetPath=String.format(\"/loadbalance/resource-quota/namespace/%s/%s/%s/0x00000000_0xffffffff\",tenantName,cluster,mangledNamespace);\n    final String newAPITargetPath=String.format(\"/loadbalance/bundle-data/%s/%s/%s/0x00000000_0xffffffff\",tenantName,cluster,mangledNamespace);\n    try {\n      ZkUtils.createFullPathOptimistic(targetZKClient,oldAPITargetPath,ObjectMapperFactory.getThreadLocal().writeValueAsBytes(quota),ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT);\n    }\n catch (    KeeperException.NodeExistsException e) {\n    }\ncatch (    Exception e) {\n      throw new RuntimeException(e);\n    }\n    try {\n      ZkUtils.createFullPathOptimistic(targetZKClient,newAPITargetPath,ObjectMapperFactory.getThreadLocal().writeValueAsBytes(bundleData),ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT);\n    }\n catch (    KeeperException.NodeExistsException e) {\n    }\ncatch (    Exception e) {\n      throw new RuntimeException(e);\n    }\n    try {\n      trade(arguments,makeTopic(tenantName,mangledNamespace,\"t\"),j);\n    }\n catch (    Exception e) {\n      throw new RuntimeException(e);\n    }\n  }\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 292,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 424,
        "startColumnNumber" : 24,
        "endLineNumber" : 424,
        "endColumnNumber" : 104
      },
      "nodeContext" : "final String mangledNamespace=String.format(\"%s-%s\",manglePrefix,namespace);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 5,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 47,
    "startLineNumber" : 424,
    "startColumnNumber" : 56,
    "endLineNumber" : 424,
    "endColumnNumber" : 103
  } ],
  "layoutRelationDataList" : [ ]
}