{
  "id" : 319,
  "expression" : "false",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-db/src/main/java/cn/hutool/db/sql/SqlBuilder.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "false",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 129,
      "startColumnNumber" : 15,
      "endLineNumber" : 129,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 129,
        "startColumnNumber" : 5,
        "endLineNumber" : 129,
        "endColumnNumber" : 20
      },
      "nodeContext" : "isFirst=false",
      "nodeType" : "Assignment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 129,
        "startColumnNumber" : 5,
        "endLineNumber" : 129,
        "endColumnNumber" : 21
      },
      "nodeContext" : "isFirst=false;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 128,
        "startColumnNumber" : 17,
        "endLineNumber" : 130,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  isFirst=false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 128,
        "startColumnNumber" : 4,
        "endLineNumber" : 134,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (isFirst) {\n  isFirst=false;\n}\n else {\n  fieldsPart.append(\", \");\n  placeHolder.append(\", \");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 526,
        "startLineNumber" : 127,
        "startColumnNumber" : 57,
        "endLineNumber" : 145,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  if (isFirst) {\n    isFirst=false;\n  }\n else {\n    fieldsPart.append(\", \");\n    placeHolder.append(\", \");\n  }\n  this.fields.add(field);\n  fieldsPart.append((null != wrapper) ? wrapper.wrap(field) : field);\n  if (isOracle && value instanceof String && StrUtil.endWithIgnoreCase((String)value,\".nextval\")) {\n    placeHolder.append(value);\n  }\n else {\n    placeHolder.append(\"?\");\n    this.paramValues.add(value);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 580,
        "startLineNumber" : 127,
        "startColumnNumber" : 3,
        "endLineNumber" : 145,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (StrUtil.isNotBlank(field)) {\n  if (isFirst) {\n    isFirst=false;\n  }\n else {\n    fieldsPart.append(\", \");\n    placeHolder.append(\", \");\n  }\n  this.fields.add(field);\n  fieldsPart.append((null != wrapper) ? wrapper.wrap(field) : field);\n  if (isOracle && value instanceof String && StrUtil.endWithIgnoreCase((String)value,\".nextval\")) {\n    placeHolder.append(value);\n  }\n else {\n    placeHolder.append(\"?\");\n    this.paramValues.add(value);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 79,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 649,
        "startLineNumber" : 124,
        "startColumnNumber" : 56,
        "endLineNumber" : 146,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  field=entry.getKey();\n  value=entry.getValue();\n  if (StrUtil.isNotBlank(field)) {\n    if (isFirst) {\n      isFirst=false;\n    }\n else {\n      fieldsPart.append(\", \");\n      placeHolder.append(\", \");\n    }\n    this.fields.add(field);\n    fieldsPart.append((null != wrapper) ? wrapper.wrap(field) : field);\n    if (isOracle && value instanceof String && StrUtil.endWithIgnoreCase((String)value,\".nextval\")) {\n      placeHolder.append(value);\n    }\n else {\n      placeHolder.append(\"?\");\n      this.paramValues.add(value);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 92,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 703,
        "startLineNumber" : 124,
        "startColumnNumber" : 2,
        "endLineNumber" : 146,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (Entry<String,Object> entry : entity.entrySet()) {\n  field=entry.getKey();\n  value=entry.getValue();\n  if (StrUtil.isNotBlank(field)) {\n    if (isFirst) {\n      isFirst=false;\n    }\n else {\n      fieldsPart.append(\", \");\n      placeHolder.append(\", \");\n    }\n    this.fields.add(field);\n    fieldsPart.append((null != wrapper) ? wrapper.wrap(field) : field);\n    if (isOracle && value instanceof String && StrUtil.endWithIgnoreCase((String)value,\".nextval\")) {\n      placeHolder.append(value);\n    }\n else {\n      placeHolder.append(\"?\");\n      this.paramValues.add(value);\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 105,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1358,
        "startLineNumber" : 107,
        "startColumnNumber" : 66,
        "endLineNumber" : 152,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  validateEntity(entity);\n  if (null != wrapper) {\n    entity.setTableName(wrapper.wrap(entity.getTableName()));\n  }\n  final boolean isOracle=ObjectUtil.equal(dialectName,DialectName.ORACLE);\n  final StringBuilder fieldsPart=new StringBuilder();\n  final StringBuilder placeHolder=new StringBuilder();\n  boolean isFirst=true;\n  String field;\n  Object value;\n  for (  Entry<String,Object> entry : entity.entrySet()) {\n    field=entry.getKey();\n    value=entry.getValue();\n    if (StrUtil.isNotBlank(field)) {\n      if (isFirst) {\n        isFirst=false;\n      }\n else {\n        fieldsPart.append(\", \");\n        placeHolder.append(\", \");\n      }\n      this.fields.add(field);\n      fieldsPart.append((null != wrapper) ? wrapper.wrap(field) : field);\n      if (isOracle && value instanceof String && StrUtil.endWithIgnoreCase((String)value,\".nextval\")) {\n        placeHolder.append(value);\n      }\n else {\n        placeHolder.append(\"?\");\n        this.paramValues.add(value);\n      }\n    }\n  }\n  sql.append(\"INSERT INTO \").append(entity.getTableName()).append(\" (\").append(fieldsPart).append(\") VALUES (\").append(placeHolder.toString()).append(\")\");\n  return this;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 199,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1584,
        "startLineNumber" : 99,
        "startColumnNumber" : 1,
        "endLineNumber" : 152,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 插入<br> 插入会忽略空的字段名及其对应值，但是对于有字段名对应值为 {@code null}的情况不忽略\n * @param entity 实体\n * @param dialectName 方言名，用于对特殊数据库特殊处理\n * @return 自己\n */\npublic SqlBuilder insert(Entity entity,DialectName dialectName){\n  validateEntity(entity);\n  if (null != wrapper) {\n    entity.setTableName(wrapper.wrap(entity.getTableName()));\n  }\n  final boolean isOracle=ObjectUtil.equal(dialectName,DialectName.ORACLE);\n  final StringBuilder fieldsPart=new StringBuilder();\n  final StringBuilder placeHolder=new StringBuilder();\n  boolean isFirst=true;\n  String field;\n  Object value;\n  for (  Entry<String,Object> entry : entity.entrySet()) {\n    field=entry.getKey();\n    value=entry.getValue();\n    if (StrUtil.isNotBlank(field)) {\n      if (isFirst) {\n        isFirst=false;\n      }\n else {\n        fieldsPart.append(\", \");\n        placeHolder.append(\", \");\n      }\n      this.fields.add(field);\n      fieldsPart.append((null != wrapper) ? wrapper.wrap(field) : field);\n      if (isOracle && value instanceof String && StrUtil.endWithIgnoreCase((String)value,\".nextval\")) {\n        placeHolder.append(value);\n      }\n else {\n        placeHolder.append(\"?\");\n        this.paramValues.add(value);\n      }\n    }\n  }\n  sql.append(\"INSERT INTO \").append(entity.getTableName()).append(\" (\").append(fieldsPart).append(\") VALUES (\").append(placeHolder.toString()).append(\")\");\n  return this;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 213,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 129,
        "startColumnNumber" : 5,
        "endLineNumber" : 129,
        "endColumnNumber" : 21
      },
      "nodeContext" : "isFirst=false;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 129,
    "startColumnNumber" : 15,
    "endLineNumber" : 129,
    "endColumnNumber" : 20
  } ],
  "layoutRelationDataList" : [ ]
}