{
  "id" : 231,
  "expression" : "3 == iterator.next()",
  "projectName" : "redisson@redisson",
  "commitID" : "62b5e68c05b7475e1e0f98b4161aacb35d376b97",
  "filePath" : "/redisson/src/test/java/org/redisson/RedissonListTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "3 == iterator.next()",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 528,
      "startColumnNumber" : 26,
      "endLineNumber" : 528,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 528,
        "startColumnNumber" : 8,
        "endLineNumber" : 528,
        "endColumnNumber" : 47
      },
      "nodeContext" : "Assert.assertTrue(3 == iterator.next())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 528,
        "startColumnNumber" : 8,
        "endLineNumber" : 528,
        "endColumnNumber" : 48
      },
      "nodeContext" : "Assert.assertTrue(3 == iterator.next());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 847,
        "startLineNumber" : 512,
        "startColumnNumber" : 45,
        "endLineNumber" : 535,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<Integer> list=new ArrayList<Integer>();\n  list.add(1);\n  list.add(2);\n  list.add(3);\n  list.add(4);\n  ListIterator<Integer> iterator=list.listIterator();\n  Assert.assertFalse(iterator.hasPrevious());\n  Assert.assertTrue(1 == iterator.next());\n  iterator.set(3);\n  assertThat(list).containsExactly(3,2,3,4);\n  Assert.assertTrue(2 == iterator.next());\n  iterator.add(31);\n  assertThat(list).containsExactly(3,2,31,3,4);\n  Assert.assertTrue(3 == iterator.next());\n  Assert.assertTrue(4 == iterator.next());\n  Assert.assertFalse(iterator.hasNext());\n  iterator.add(71);\n  assertThat(list).containsExactly(3,2,31,3,4,71);\n  iterator.add(8);\n  assertThat(list).containsExactly(3,2,31,3,4,71,8);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 162,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 898,
        "startLineNumber" : 511,
        "startColumnNumber" : 4,
        "endLineNumber" : 535,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testListIteratorGetSetList(){\n  List<Integer> list=new ArrayList<Integer>();\n  list.add(1);\n  list.add(2);\n  list.add(3);\n  list.add(4);\n  ListIterator<Integer> iterator=list.listIterator();\n  Assert.assertFalse(iterator.hasPrevious());\n  Assert.assertTrue(1 == iterator.next());\n  iterator.set(3);\n  assertThat(list).containsExactly(3,2,3,4);\n  Assert.assertTrue(2 == iterator.next());\n  iterator.add(31);\n  assertThat(list).containsExactly(3,2,31,3,4);\n  Assert.assertTrue(3 == iterator.next());\n  Assert.assertTrue(4 == iterator.next());\n  Assert.assertFalse(iterator.hasNext());\n  iterator.add(71);\n  assertThat(list).containsExactly(3,2,31,3,4,71);\n  iterator.add(8);\n  assertThat(list).containsExactly(3,2,31,3,4,71,8);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 168,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 528,
        "startColumnNumber" : 8,
        "endLineNumber" : 528,
        "endColumnNumber" : 48
      },
      "nodeContext" : "Assert.assertTrue(3 == iterator.next());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 528,
    "startColumnNumber" : 26,
    "endLineNumber" : 528,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ ]
}