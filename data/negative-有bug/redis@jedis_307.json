{
  "id" : 307,
  "expression" : "1L",
  "projectName" : "redis@jedis",
  "commitID" : "eaa5b16af93d575cd1f340c2cd23595dc29d5638",
  "filePath" : "/src/test/java/redis/clients/jedis/modules/bloom/CMSTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "1L",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 120,
      "startColumnNumber" : 23,
      "endLineNumber" : 120,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 120,
        "startColumnNumber" : 4,
        "endLineNumber" : 120,
        "endColumnNumber" : 26
      },
      "nodeContext" : "bValues.put(\"baz\",1L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 120,
        "startColumnNumber" : 4,
        "endLineNumber" : 120,
        "endColumnNumber" : 27
      },
      "nodeContext" : "bValues.put(\"baz\",1L);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1428,
        "startLineNumber" : 105,
        "startColumnNumber" : 26,
        "endLineNumber" : 152,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  client.cmsInitByDim(\"A\",1000L,5L);\n  client.cmsInitByDim(\"B\",1000L,5L);\n  client.cmsInitByDim(\"C\",1000L,5L);\n  Map<String,Long> aValues=new HashMap<>();\n  aValues.put(\"foo\",5L);\n  aValues.put(\"bar\",3L);\n  aValues.put(\"baz\",9L);\n  client.cmsIncrBy(\"A\",aValues);\n  Map<String,Long> bValues=new HashMap<>();\n  bValues.put(\"foo\",2L);\n  bValues.put(\"bar\",3L);\n  bValues.put(\"baz\",1L);\n  client.cmsIncrBy(\"B\",bValues);\n  List<Long> q1=client.cmsQuery(\"A\",\"foo\",\"bar\",\"baz\");\n  assertEquals(Arrays.asList(5L,3L,9L),q1);\n  List<Long> q2=client.cmsQuery(\"B\",\"foo\",\"bar\",\"baz\");\n  assertEquals(Arrays.asList(2L,3L,1L),q2);\n  client.cmsMerge(\"C\",\"A\",\"B\");\n  List<Long> q3=client.cmsQuery(\"C\",\"foo\",\"bar\",\"baz\");\n  assertEquals(Arrays.asList(7L,6L,10L),q3);\n  Map<String,Long> keysAndWeights=new HashMap<>();\n  keysAndWeights.put(\"A\",1L);\n  keysAndWeights.put(\"B\",2L);\n  client.cmsMerge(\"C\",keysAndWeights);\n  List<Long> q4=client.cmsQuery(\"C\",\"foo\",\"bar\",\"baz\");\n  assertEquals(Arrays.asList(9L,9L,11L),q4);\n  keysAndWeights.clear();\n  keysAndWeights.put(\"A\",2L);\n  keysAndWeights.put(\"B\",3L);\n  client.cmsMerge(\"C\",keysAndWeights);\n  List<Long> q5=client.cmsQuery(\"C\",\"foo\",\"bar\",\"baz\");\n  assertEquals(Arrays.asList(16L,15L,21L),q5);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 284,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1461,
        "startLineNumber" : 104,
        "startColumnNumber" : 2,
        "endLineNumber" : 152,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testMerge(){\n  client.cmsInitByDim(\"A\",1000L,5L);\n  client.cmsInitByDim(\"B\",1000L,5L);\n  client.cmsInitByDim(\"C\",1000L,5L);\n  Map<String,Long> aValues=new HashMap<>();\n  aValues.put(\"foo\",5L);\n  aValues.put(\"bar\",3L);\n  aValues.put(\"baz\",9L);\n  client.cmsIncrBy(\"A\",aValues);\n  Map<String,Long> bValues=new HashMap<>();\n  bValues.put(\"foo\",2L);\n  bValues.put(\"bar\",3L);\n  bValues.put(\"baz\",1L);\n  client.cmsIncrBy(\"B\",bValues);\n  List<Long> q1=client.cmsQuery(\"A\",\"foo\",\"bar\",\"baz\");\n  assertEquals(Arrays.asList(5L,3L,9L),q1);\n  List<Long> q2=client.cmsQuery(\"B\",\"foo\",\"bar\",\"baz\");\n  assertEquals(Arrays.asList(2L,3L,1L),q2);\n  client.cmsMerge(\"C\",\"A\",\"B\");\n  List<Long> q3=client.cmsQuery(\"C\",\"foo\",\"bar\",\"baz\");\n  assertEquals(Arrays.asList(7L,6L,10L),q3);\n  Map<String,Long> keysAndWeights=new HashMap<>();\n  keysAndWeights.put(\"A\",1L);\n  keysAndWeights.put(\"B\",2L);\n  client.cmsMerge(\"C\",keysAndWeights);\n  List<Long> q4=client.cmsQuery(\"C\",\"foo\",\"bar\",\"baz\");\n  assertEquals(Arrays.asList(9L,9L,11L),q4);\n  keysAndWeights.clear();\n  keysAndWeights.put(\"A\",2L);\n  keysAndWeights.put(\"B\",3L);\n  client.cmsMerge(\"C\",keysAndWeights);\n  List<Long> q5=client.cmsQuery(\"C\",\"foo\",\"bar\",\"baz\");\n  assertEquals(Arrays.asList(16L,15L,21L),q5);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 290,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 120,
        "startColumnNumber" : 4,
        "endLineNumber" : 120,
        "endColumnNumber" : 27
      },
      "nodeContext" : "bValues.put(\"baz\",1L);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "long"
  }, {
    "nodeContext" : "1L",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 128,
      "startColumnNumber" : 39,
      "endLineNumber" : 128,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 128,
        "startColumnNumber" : 17,
        "endLineNumber" : 128,
        "endColumnNumber" : 42
      },
      "nodeContext" : "Arrays.asList(2L,3L,1L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 128,
        "startColumnNumber" : 4,
        "endLineNumber" : 128,
        "endColumnNumber" : 47
      },
      "nodeContext" : "assertEquals(Arrays.asList(2L,3L,1L),q2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 128,
        "startColumnNumber" : 4,
        "endLineNumber" : 128,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertEquals(Arrays.asList(2L,3L,1L),q2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1428,
        "startLineNumber" : 105,
        "startColumnNumber" : 26,
        "endLineNumber" : 152,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  client.cmsInitByDim(\"A\",1000L,5L);\n  client.cmsInitByDim(\"B\",1000L,5L);\n  client.cmsInitByDim(\"C\",1000L,5L);\n  Map<String,Long> aValues=new HashMap<>();\n  aValues.put(\"foo\",5L);\n  aValues.put(\"bar\",3L);\n  aValues.put(\"baz\",9L);\n  client.cmsIncrBy(\"A\",aValues);\n  Map<String,Long> bValues=new HashMap<>();\n  bValues.put(\"foo\",2L);\n  bValues.put(\"bar\",3L);\n  bValues.put(\"baz\",1L);\n  client.cmsIncrBy(\"B\",bValues);\n  List<Long> q1=client.cmsQuery(\"A\",\"foo\",\"bar\",\"baz\");\n  assertEquals(Arrays.asList(5L,3L,9L),q1);\n  List<Long> q2=client.cmsQuery(\"B\",\"foo\",\"bar\",\"baz\");\n  assertEquals(Arrays.asList(2L,3L,1L),q2);\n  client.cmsMerge(\"C\",\"A\",\"B\");\n  List<Long> q3=client.cmsQuery(\"C\",\"foo\",\"bar\",\"baz\");\n  assertEquals(Arrays.asList(7L,6L,10L),q3);\n  Map<String,Long> keysAndWeights=new HashMap<>();\n  keysAndWeights.put(\"A\",1L);\n  keysAndWeights.put(\"B\",2L);\n  client.cmsMerge(\"C\",keysAndWeights);\n  List<Long> q4=client.cmsQuery(\"C\",\"foo\",\"bar\",\"baz\");\n  assertEquals(Arrays.asList(9L,9L,11L),q4);\n  keysAndWeights.clear();\n  keysAndWeights.put(\"A\",2L);\n  keysAndWeights.put(\"B\",3L);\n  client.cmsMerge(\"C\",keysAndWeights);\n  List<Long> q5=client.cmsQuery(\"C\",\"foo\",\"bar\",\"baz\");\n  assertEquals(Arrays.asList(16L,15L,21L),q5);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 284,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1461,
        "startLineNumber" : 104,
        "startColumnNumber" : 2,
        "endLineNumber" : 152,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testMerge(){\n  client.cmsInitByDim(\"A\",1000L,5L);\n  client.cmsInitByDim(\"B\",1000L,5L);\n  client.cmsInitByDim(\"C\",1000L,5L);\n  Map<String,Long> aValues=new HashMap<>();\n  aValues.put(\"foo\",5L);\n  aValues.put(\"bar\",3L);\n  aValues.put(\"baz\",9L);\n  client.cmsIncrBy(\"A\",aValues);\n  Map<String,Long> bValues=new HashMap<>();\n  bValues.put(\"foo\",2L);\n  bValues.put(\"bar\",3L);\n  bValues.put(\"baz\",1L);\n  client.cmsIncrBy(\"B\",bValues);\n  List<Long> q1=client.cmsQuery(\"A\",\"foo\",\"bar\",\"baz\");\n  assertEquals(Arrays.asList(5L,3L,9L),q1);\n  List<Long> q2=client.cmsQuery(\"B\",\"foo\",\"bar\",\"baz\");\n  assertEquals(Arrays.asList(2L,3L,1L),q2);\n  client.cmsMerge(\"C\",\"A\",\"B\");\n  List<Long> q3=client.cmsQuery(\"C\",\"foo\",\"bar\",\"baz\");\n  assertEquals(Arrays.asList(7L,6L,10L),q3);\n  Map<String,Long> keysAndWeights=new HashMap<>();\n  keysAndWeights.put(\"A\",1L);\n  keysAndWeights.put(\"B\",2L);\n  client.cmsMerge(\"C\",keysAndWeights);\n  List<Long> q4=client.cmsQuery(\"C\",\"foo\",\"bar\",\"baz\");\n  assertEquals(Arrays.asList(9L,9L,11L),q4);\n  keysAndWeights.clear();\n  keysAndWeights.put(\"A\",2L);\n  keysAndWeights.put(\"B\",3L);\n  client.cmsMerge(\"C\",keysAndWeights);\n  List<Long> q5=client.cmsQuery(\"C\",\"foo\",\"bar\",\"baz\");\n  assertEquals(Arrays.asList(16L,15L,21L),q5);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 290,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 128,
        "startColumnNumber" : 4,
        "endLineNumber" : 128,
        "endColumnNumber" : 48
      },
      "nodeContext" : "assertEquals(Arrays.asList(2L,3L,1L),q2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "long"
  }, {
    "nodeContext" : "1L",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 136,
      "startColumnNumber" : 28,
      "endLineNumber" : 136,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 136,
        "startColumnNumber" : 4,
        "endLineNumber" : 136,
        "endColumnNumber" : 31
      },
      "nodeContext" : "keysAndWeights.put(\"A\",1L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 136,
        "startColumnNumber" : 4,
        "endLineNumber" : 136,
        "endColumnNumber" : 32
      },
      "nodeContext" : "keysAndWeights.put(\"A\",1L);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1428,
        "startLineNumber" : 105,
        "startColumnNumber" : 26,
        "endLineNumber" : 152,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  client.cmsInitByDim(\"A\",1000L,5L);\n  client.cmsInitByDim(\"B\",1000L,5L);\n  client.cmsInitByDim(\"C\",1000L,5L);\n  Map<String,Long> aValues=new HashMap<>();\n  aValues.put(\"foo\",5L);\n  aValues.put(\"bar\",3L);\n  aValues.put(\"baz\",9L);\n  client.cmsIncrBy(\"A\",aValues);\n  Map<String,Long> bValues=new HashMap<>();\n  bValues.put(\"foo\",2L);\n  bValues.put(\"bar\",3L);\n  bValues.put(\"baz\",1L);\n  client.cmsIncrBy(\"B\",bValues);\n  List<Long> q1=client.cmsQuery(\"A\",\"foo\",\"bar\",\"baz\");\n  assertEquals(Arrays.asList(5L,3L,9L),q1);\n  List<Long> q2=client.cmsQuery(\"B\",\"foo\",\"bar\",\"baz\");\n  assertEquals(Arrays.asList(2L,3L,1L),q2);\n  client.cmsMerge(\"C\",\"A\",\"B\");\n  List<Long> q3=client.cmsQuery(\"C\",\"foo\",\"bar\",\"baz\");\n  assertEquals(Arrays.asList(7L,6L,10L),q3);\n  Map<String,Long> keysAndWeights=new HashMap<>();\n  keysAndWeights.put(\"A\",1L);\n  keysAndWeights.put(\"B\",2L);\n  client.cmsMerge(\"C\",keysAndWeights);\n  List<Long> q4=client.cmsQuery(\"C\",\"foo\",\"bar\",\"baz\");\n  assertEquals(Arrays.asList(9L,9L,11L),q4);\n  keysAndWeights.clear();\n  keysAndWeights.put(\"A\",2L);\n  keysAndWeights.put(\"B\",3L);\n  client.cmsMerge(\"C\",keysAndWeights);\n  List<Long> q5=client.cmsQuery(\"C\",\"foo\",\"bar\",\"baz\");\n  assertEquals(Arrays.asList(16L,15L,21L),q5);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 284,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1461,
        "startLineNumber" : 104,
        "startColumnNumber" : 2,
        "endLineNumber" : 152,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testMerge(){\n  client.cmsInitByDim(\"A\",1000L,5L);\n  client.cmsInitByDim(\"B\",1000L,5L);\n  client.cmsInitByDim(\"C\",1000L,5L);\n  Map<String,Long> aValues=new HashMap<>();\n  aValues.put(\"foo\",5L);\n  aValues.put(\"bar\",3L);\n  aValues.put(\"baz\",9L);\n  client.cmsIncrBy(\"A\",aValues);\n  Map<String,Long> bValues=new HashMap<>();\n  bValues.put(\"foo\",2L);\n  bValues.put(\"bar\",3L);\n  bValues.put(\"baz\",1L);\n  client.cmsIncrBy(\"B\",bValues);\n  List<Long> q1=client.cmsQuery(\"A\",\"foo\",\"bar\",\"baz\");\n  assertEquals(Arrays.asList(5L,3L,9L),q1);\n  List<Long> q2=client.cmsQuery(\"B\",\"foo\",\"bar\",\"baz\");\n  assertEquals(Arrays.asList(2L,3L,1L),q2);\n  client.cmsMerge(\"C\",\"A\",\"B\");\n  List<Long> q3=client.cmsQuery(\"C\",\"foo\",\"bar\",\"baz\");\n  assertEquals(Arrays.asList(7L,6L,10L),q3);\n  Map<String,Long> keysAndWeights=new HashMap<>();\n  keysAndWeights.put(\"A\",1L);\n  keysAndWeights.put(\"B\",2L);\n  client.cmsMerge(\"C\",keysAndWeights);\n  List<Long> q4=client.cmsQuery(\"C\",\"foo\",\"bar\",\"baz\");\n  assertEquals(Arrays.asList(9L,9L,11L),q4);\n  keysAndWeights.clear();\n  keysAndWeights.put(\"A\",2L);\n  keysAndWeights.put(\"B\",3L);\n  client.cmsMerge(\"C\",keysAndWeights);\n  List<Long> q5=client.cmsQuery(\"C\",\"foo\",\"bar\",\"baz\");\n  assertEquals(Arrays.asList(16L,15L,21L),q5);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 290,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 136,
        "startColumnNumber" : 4,
        "endLineNumber" : 136,
        "endColumnNumber" : 32
      },
      "nodeContext" : "keysAndWeights.put(\"A\",1L);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 120,
    "startColumnNumber" : 23,
    "endLineNumber" : 120,
    "endColumnNumber" : 25
  }, {
    "charLength" : 2,
    "startLineNumber" : 128,
    "startColumnNumber" : 39,
    "endLineNumber" : 128,
    "endColumnNumber" : 41
  }, {
    "charLength" : 2,
    "startLineNumber" : 136,
    "startColumnNumber" : 28,
    "endLineNumber" : 136,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}