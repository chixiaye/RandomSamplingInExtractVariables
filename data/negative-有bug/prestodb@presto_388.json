{
  "id" : 388,
  "expression" : "(endOffset - beginOffset)",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-main/src/main/java/com/facebook/presto/operator/repartition/MapBlockEncodingBuffer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(endOffset - beginOffset)",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 428,
      "startColumnNumber" : 20,
      "endLineNumber" : 428,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 428,
        "startColumnNumber" : 20,
        "endLineNumber" : 428,
        "endColumnNumber" : 63
      },
      "nodeContext" : "(endOffset - beginOffset) * HASH_MULTIPLIER",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 236,
        "startLineNumber" : 423,
        "startColumnNumber" : 35,
        "endLineNumber" : 428,
        "endColumnNumber" : 64
      },
      "nodeContext" : "setInts(hashTablesBuffer,hashTableBufferIndex,hashTables,beginOffset * HASH_MULTIPLIER,(endOffset - beginOffset) * HASH_MULTIPLIER)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 259,
        "startLineNumber" : 423,
        "startColumnNumber" : 12,
        "endLineNumber" : 428,
        "endColumnNumber" : 64
      },
      "nodeContext" : "hashTableBufferIndex=setInts(hashTablesBuffer,hashTableBufferIndex,hashTables,beginOffset * HASH_MULTIPLIER,(endOffset - beginOffset) * HASH_MULTIPLIER)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 260,
        "startLineNumber" : 423,
        "startColumnNumber" : 12,
        "endLineNumber" : 428,
        "endColumnNumber" : 65
      },
      "nodeContext" : "hashTableBufferIndex=setInts(hashTablesBuffer,hashTableBufferIndex,hashTables,beginOffset * HASH_MULTIPLIER,(endOffset - beginOffset) * HASH_MULTIPLIER);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 471,
        "startLineNumber" : 417,
        "startColumnNumber" : 76,
        "endLineNumber" : 429,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int position=positions[i];\n  int beginOffset=columnarMap.getAbsoluteOffset(position);\n  int endOffset=columnarMap.getAbsoluteOffset(position + 1);\n  hashTableBufferIndex=setInts(hashTablesBuffer,hashTableBufferIndex,hashTables,beginOffset * HASH_MULTIPLIER,(endOffset - beginOffset) * HASH_MULTIPLIER);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 539,
        "startLineNumber" : 417,
        "startColumnNumber" : 8,
        "endLineNumber" : 429,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=positionsOffset; i < positionsOffset + batchSize; i++) {\n  int position=positions[i];\n  int beginOffset=columnarMap.getAbsoluteOffset(position);\n  int endOffset=columnarMap.getAbsoluteOffset(position + 1);\n  hashTableBufferIndex=setInts(hashTablesBuffer,hashTableBufferIndex,hashTables,beginOffset * HASH_MULTIPLIER,(endOffset - beginOffset) * HASH_MULTIPLIER);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 56,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1388,
        "startLineNumber" : 398,
        "startColumnNumber" : 4,
        "endLineNumber" : 430,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (noHashTables) {\n    return;\n  }\n  int[] hashTables=columnarMap.getHashTables();\n  if (hashTables == null) {\n    noHashTables=true;\n    hashTableBufferIndex=0;\n    return;\n  }\n  int hashTablesSize=(offsets[positionsOffset + batchSize] - offsets[positionsOffset]) * HASH_MULTIPLIER;\n  hashTablesBuffer=ensureCapacity(hashTablesBuffer,hashTableBufferIndex + hashTablesSize * ARRAY_INT_INDEX_SCALE,estimatedHashTableBufferMaxCapacity,LARGE,PRESERVE,bufferAllocator);\n  int[] positions=getPositions();\n  for (int i=positionsOffset; i < positionsOffset + batchSize; i++) {\n    int position=positions[i];\n    int beginOffset=columnarMap.getAbsoluteOffset(position);\n    int endOffset=columnarMap.getAbsoluteOffset(position + 1);\n    hashTableBufferIndex=setInts(hashTablesBuffer,hashTableBufferIndex,hashTables,beginOffset * HASH_MULTIPLIER,(endOffset - beginOffset) * HASH_MULTIPLIER);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 123,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1424,
        "startLineNumber" : 397,
        "startColumnNumber" : 4,
        "endLineNumber" : 430,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void appendHashTables(){\n  if (noHashTables) {\n    return;\n  }\n  int[] hashTables=columnarMap.getHashTables();\n  if (hashTables == null) {\n    noHashTables=true;\n    hashTableBufferIndex=0;\n    return;\n  }\n  int hashTablesSize=(offsets[positionsOffset + batchSize] - offsets[positionsOffset]) * HASH_MULTIPLIER;\n  hashTablesBuffer=ensureCapacity(hashTablesBuffer,hashTableBufferIndex + hashTablesSize * ARRAY_INT_INDEX_SCALE,estimatedHashTableBufferMaxCapacity,LARGE,PRESERVE,bufferAllocator);\n  int[] positions=getPositions();\n  for (int i=positionsOffset; i < positionsOffset + batchSize; i++) {\n    int position=positions[i];\n    int beginOffset=columnarMap.getAbsoluteOffset(position);\n    int endOffset=columnarMap.getAbsoluteOffset(position + 1);\n    hashTableBufferIndex=setInts(hashTablesBuffer,hashTableBufferIndex,hashTables,beginOffset * HASH_MULTIPLIER,(endOffset - beginOffset) * HASH_MULTIPLIER);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 127,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 428,
        "startColumnNumber" : 20,
        "endLineNumber" : 428,
        "endColumnNumber" : 63
      },
      "nodeContext" : "(endOffset - beginOffset) * HASH_MULTIPLIER",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 428,
    "startColumnNumber" : 20,
    "endLineNumber" : 428,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ ]
}