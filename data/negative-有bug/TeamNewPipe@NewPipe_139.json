{
  "id" : 139,
  "expression" : "e instanceof TabsJsonHelper.InvalidJsonException",
  "projectName" : "TeamNewPipe@NewPipe",
  "commitID" : "d7574973e97fa7a3a21aa59967311f6091941830",
  "filePath" : "/app/src/test/java/org/schabi/newpipe/settings/tabs/TabsJsonHelperTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "e instanceof TabsJsonHelper.InvalidJsonException",
    "nodeType" : "InstanceofExpression",
    "nodePosition" : {
      "charLength" : 48,
      "startLineNumber" : 62,
      "startColumnNumber" : 46,
      "endLineNumber" : 62,
      "endColumnNumber" : 94
    },
    "astNodeNumber" : 6,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 62,
        "startColumnNumber" : 24,
        "endLineNumber" : 62,
        "endColumnNumber" : 94
      },
      "nodeContext" : "isExpectedException=e instanceof TabsJsonHelper.InvalidJsonException",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 62,
        "startColumnNumber" : 16,
        "endLineNumber" : 62,
        "endColumnNumber" : 95
      },
      "nodeContext" : "boolean isExpectedException=e instanceof TabsJsonHelper.InvalidJsonException;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 258,
        "startLineNumber" : 61,
        "startColumnNumber" : 34,
        "endLineNumber" : 65,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  boolean isExpectedException=e instanceof TabsJsonHelper.InvalidJsonException;\n  assertTrue(\"\\\"\" + e.getClass().getSimpleName() + \"\\\" is not the expected exception\",isExpectedException);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 278,
        "startLineNumber" : 61,
        "startColumnNumber" : 14,
        "endLineNumber" : 65,
        "endColumnNumber" : 13
      },
      "nodeContext" : "catch (Exception e) {\n  boolean isExpectedException=e instanceof TabsJsonHelper.InvalidJsonException;\n  assertTrue(\"\\\"\" + e.getClass().getSimpleName() + \"\\\" is not the expected exception\",isExpectedException);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 28,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 411,
        "startLineNumber" : 57,
        "startColumnNumber" : 12,
        "endLineNumber" : 65,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  TabsJsonHelper.getTabsFromJson(invalidContent);\n  fail(\"didn't throw exception\");\n}\n catch (Exception e) {\n  boolean isExpectedException=e instanceof TabsJsonHelper.InvalidJsonException;\n  assertTrue(\"\\\"\" + e.getClass().getSimpleName() + \"\\\" is not the expected exception\",isExpectedException);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 39,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 435,
        "startLineNumber" : 56,
        "startColumnNumber" : 50,
        "endLineNumber" : 66,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    TabsJsonHelper.getTabsFromJson(invalidContent);\n    fail(\"didn't throw exception\");\n  }\n catch (  Exception e) {\n    boolean isExpectedException=e instanceof TabsJsonHelper.InvalidJsonException;\n    assertTrue(\"\\\"\" + e.getClass().getSimpleName() + \"\\\" is not the expected exception\",isExpectedException);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 477,
        "startLineNumber" : 56,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (String invalidContent : invalidList) {\n  try {\n    TabsJsonHelper.getTabsFromJson(invalidContent);\n    fail(\"didn't throw exception\");\n  }\n catch (  Exception e) {\n    boolean isExpectedException=e instanceof TabsJsonHelper.InvalidJsonException;\n    assertTrue(\"\\\"\" + e.getClass().getSimpleName() + \"\\\" is not the expected exception\",isExpectedException);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 46,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 657,
        "startLineNumber" : 49,
        "startColumnNumber" : 34,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final List<String> invalidList=Arrays.asList(\"{\\\"notTabsArray\\\":[]}\",\"{invalidJSON]}\",\"{}\");\n  for (  String invalidContent : invalidList) {\n    try {\n      TabsJsonHelper.getTabsFromJson(invalidContent);\n      fail(\"didn't throw exception\");\n    }\n catch (    Exception e) {\n      boolean isExpectedException=e instanceof TabsJsonHelper.InvalidJsonException;\n      assertTrue(\"\\\"\" + e.getClass().getSimpleName() + \"\\\" is not the expected exception\",isExpectedException);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 697,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testInvalidRead(){\n  final List<String> invalidList=Arrays.asList(\"{\\\"notTabsArray\\\":[]}\",\"{invalidJSON]}\",\"{}\");\n  for (  String invalidContent : invalidList) {\n    try {\n      TabsJsonHelper.getTabsFromJson(invalidContent);\n      fail(\"didn't throw exception\");\n    }\n catch (    Exception e) {\n      boolean isExpectedException=e instanceof TabsJsonHelper.InvalidJsonException;\n      assertTrue(\"\\\"\" + e.getClass().getSimpleName() + \"\\\" is not the expected exception\",isExpectedException);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 68,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 62,
        "startColumnNumber" : 16,
        "endLineNumber" : 62,
        "endColumnNumber" : 95
      },
      "nodeContext" : "boolean isExpectedException=e instanceof TabsJsonHelper.InvalidJsonException;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 48,
    "startLineNumber" : 62,
    "startColumnNumber" : 46,
    "endLineNumber" : 62,
    "endColumnNumber" : 94
  } ],
  "layoutRelationDataList" : [ ]
}