{
  "id" : 55,
  "expression" : "actions",
  "projectName" : "java-decompiler@jd-gui",
  "commitID" : "fbc5b14d66b37b88bf1dc18386b530e874550240",
  "filePath" : "/app/src/main/java/org/jd/gui/service/actions/ContextualActionsFactoryService.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "actions",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 33,
      "startColumnNumber" : 33,
      "endLineNumber" : 33,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 380,
        "startLineNumber" : 33,
        "startColumnNumber" : 12,
        "endLineNumber" : 42,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (Action action : actions) {\n  String groupName=(String)action.getValue(ContextualActionsFactory.GROUP_NAME);\n  ArrayList<Action> list=mapActions.get(groupName);\n  if (list == null) {\n    mapActions.put(groupName,list=new ArrayList<>());\n  }\n  list.add(action);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 54,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 487,
        "startLineNumber" : 30,
        "startColumnNumber" : 60,
        "endLineNumber" : 43,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Collection<Action> actions=provider.make(api,entry,fragment);\n  for (  Action action : actions) {\n    String groupName=(String)action.getValue(ContextualActionsFactory.GROUP_NAME);\n    ArrayList<Action> list=mapActions.get(groupName);\n    if (list == null) {\n      mapActions.put(groupName,list=new ArrayList<>());\n    }\n    list.add(action);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 539,
        "startLineNumber" : 30,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (ContextualActionsFactory provider : providers) {\n  Collection<Action> actions=provider.make(api,entry,fragment);\n  for (  Action action : actions) {\n    String groupName=(String)action.getValue(ContextualActionsFactory.GROUP_NAME);\n    ArrayList<Action> list=mapActions.get(groupName);\n    if (list == null) {\n      mapActions.put(groupName,list=new ArrayList<>());\n    }\n    list.add(action);\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 75,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1426,
        "startLineNumber" : 27,
        "startColumnNumber" : 83,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HashMap<String,ArrayList<Action>> mapActions=new HashMap<>();\n  for (  ContextualActionsFactory provider : providers) {\n    Collection<Action> actions=provider.make(api,entry,fragment);\n    for (    Action action : actions) {\n      String groupName=(String)action.getValue(ContextualActionsFactory.GROUP_NAME);\n      ArrayList<Action> list=mapActions.get(groupName);\n      if (list == null) {\n        mapActions.put(groupName,list=new ArrayList<>());\n      }\n      list.add(action);\n    }\n  }\n  if (!mapActions.isEmpty()) {\n    ArrayList<Action> result=new ArrayList<>();\n    ArrayList<String> groupNames=new ArrayList<>(mapActions.keySet());\n    Collections.sort(groupNames);\n    for (    String groupName : groupNames) {\n      if (!result.isEmpty()) {\n        result.add(null);\n      }\n      ArrayList<Action> actions=mapActions.get(groupName);\n      Collections.sort(actions,COMPARATOR);\n      result.addAll(actions);\n    }\n    return result;\n  }\n else {\n    return Collections.emptyList();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 179,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1505,
        "startLineNumber" : 27,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public Collection<Action> get(API api,Container.Entry entry,String fragment){\n  HashMap<String,ArrayList<Action>> mapActions=new HashMap<>();\n  for (  ContextualActionsFactory provider : providers) {\n    Collection<Action> actions=provider.make(api,entry,fragment);\n    for (    Action action : actions) {\n      String groupName=(String)action.getValue(ContextualActionsFactory.GROUP_NAME);\n      ArrayList<Action> list=mapActions.get(groupName);\n      if (list == null) {\n        mapActions.put(groupName,list=new ArrayList<>());\n      }\n      list.add(action);\n    }\n  }\n  if (!mapActions.isEmpty()) {\n    ArrayList<Action> result=new ArrayList<>();\n    ArrayList<String> groupNames=new ArrayList<>(mapActions.keySet());\n    Collections.sort(groupNames);\n    for (    String groupName : groupNames) {\n      if (!result.isEmpty()) {\n        result.add(null);\n      }\n      ArrayList<Action> actions=mapActions.get(groupName);\n      Collections.sort(actions,COMPARATOR);\n      result.addAll(actions);\n    }\n    return result;\n  }\n else {\n    return Collections.emptyList();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 201,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 380,
        "startLineNumber" : 33,
        "startColumnNumber" : 12,
        "endLineNumber" : 42,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (Action action : actions) {\n  String groupName=(String)action.getValue(ContextualActionsFactory.GROUP_NAME);\n  ArrayList<Action> list=mapActions.get(groupName);\n  if (list == null) {\n    mapActions.put(groupName,list=new ArrayList<>());\n  }\n  list.add(action);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 54,
      "astHeight" : 11
    },
    "tokenLength" : 1,
    "type" : "java.util.Collection<javax.swing.Action>"
  }, {
    "nodeContext" : "actions",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 59,
      "startColumnNumber" : 33,
      "endLineNumber" : 59,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 59,
        "startColumnNumber" : 16,
        "endLineNumber" : 59,
        "endColumnNumber" : 53
      },
      "nodeContext" : "Collections.sort(actions,COMPARATOR)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 59,
        "startColumnNumber" : 16,
        "endLineNumber" : 59,
        "endColumnNumber" : 54
      },
      "nodeContext" : "Collections.sort(actions,COMPARATOR);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 375,
        "startLineNumber" : 52,
        "startColumnNumber" : 48,
        "endLineNumber" : 61,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (!result.isEmpty()) {\n    result.add(null);\n  }\n  ArrayList<Action> actions=mapActions.get(groupName);\n  Collections.sort(actions,COMPARATOR);\n  result.addAll(actions);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 411,
        "startLineNumber" : 52,
        "startColumnNumber" : 12,
        "endLineNumber" : 61,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (String groupName : groupNames) {\n  if (!result.isEmpty()) {\n    result.add(null);\n  }\n  ArrayList<Action> actions=mapActions.get(groupName);\n  Collections.sort(actions,COMPARATOR);\n  result.addAll(actions);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 41,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 691,
        "startLineNumber" : 45,
        "startColumnNumber" : 35,
        "endLineNumber" : 64,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ArrayList<Action> result=new ArrayList<>();\n  ArrayList<String> groupNames=new ArrayList<>(mapActions.keySet());\n  Collections.sort(groupNames);\n  for (  String groupName : groupNames) {\n    if (!result.isEmpty()) {\n      result.add(null);\n    }\n    ArrayList<Action> actions=mapActions.get(groupName);\n    Collections.sort(actions,COMPARATOR);\n    result.addAll(actions);\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 781,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!mapActions.isEmpty()) {\n  ArrayList<Action> result=new ArrayList<>();\n  ArrayList<String> groupNames=new ArrayList<>(mapActions.keySet());\n  Collections.sort(groupNames);\n  for (  String groupName : groupNames) {\n    if (!result.isEmpty()) {\n      result.add(null);\n    }\n    ArrayList<Action> actions=mapActions.get(groupName);\n    Collections.sort(actions,COMPARATOR);\n    result.addAll(actions);\n  }\n  return result;\n}\n else {\n  return Collections.emptyList();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 86,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1426,
        "startLineNumber" : 27,
        "startColumnNumber" : 83,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HashMap<String,ArrayList<Action>> mapActions=new HashMap<>();\n  for (  ContextualActionsFactory provider : providers) {\n    Collection<Action> actions=provider.make(api,entry,fragment);\n    for (    Action action : actions) {\n      String groupName=(String)action.getValue(ContextualActionsFactory.GROUP_NAME);\n      ArrayList<Action> list=mapActions.get(groupName);\n      if (list == null) {\n        mapActions.put(groupName,list=new ArrayList<>());\n      }\n      list.add(action);\n    }\n  }\n  if (!mapActions.isEmpty()) {\n    ArrayList<Action> result=new ArrayList<>();\n    ArrayList<String> groupNames=new ArrayList<>(mapActions.keySet());\n    Collections.sort(groupNames);\n    for (    String groupName : groupNames) {\n      if (!result.isEmpty()) {\n        result.add(null);\n      }\n      ArrayList<Action> actions=mapActions.get(groupName);\n      Collections.sort(actions,COMPARATOR);\n      result.addAll(actions);\n    }\n    return result;\n  }\n else {\n    return Collections.emptyList();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 179,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1505,
        "startLineNumber" : 27,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public Collection<Action> get(API api,Container.Entry entry,String fragment){\n  HashMap<String,ArrayList<Action>> mapActions=new HashMap<>();\n  for (  ContextualActionsFactory provider : providers) {\n    Collection<Action> actions=provider.make(api,entry,fragment);\n    for (    Action action : actions) {\n      String groupName=(String)action.getValue(ContextualActionsFactory.GROUP_NAME);\n      ArrayList<Action> list=mapActions.get(groupName);\n      if (list == null) {\n        mapActions.put(groupName,list=new ArrayList<>());\n      }\n      list.add(action);\n    }\n  }\n  if (!mapActions.isEmpty()) {\n    ArrayList<Action> result=new ArrayList<>();\n    ArrayList<String> groupNames=new ArrayList<>(mapActions.keySet());\n    Collections.sort(groupNames);\n    for (    String groupName : groupNames) {\n      if (!result.isEmpty()) {\n        result.add(null);\n      }\n      ArrayList<Action> actions=mapActions.get(groupName);\n      Collections.sort(actions,COMPARATOR);\n      result.addAll(actions);\n    }\n    return result;\n  }\n else {\n    return Collections.emptyList();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 201,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 59,
        "startColumnNumber" : 16,
        "endLineNumber" : 59,
        "endColumnNumber" : 54
      },
      "nodeContext" : "Collections.sort(actions,COMPARATOR);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.ArrayList<javax.swing.Action>"
  }, {
    "nodeContext" : "actions",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 60,
      "startColumnNumber" : 30,
      "endLineNumber" : 60,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 60,
        "startColumnNumber" : 16,
        "endLineNumber" : 60,
        "endColumnNumber" : 38
      },
      "nodeContext" : "result.addAll(actions)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 60,
        "startColumnNumber" : 16,
        "endLineNumber" : 60,
        "endColumnNumber" : 39
      },
      "nodeContext" : "result.addAll(actions);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 375,
        "startLineNumber" : 52,
        "startColumnNumber" : 48,
        "endLineNumber" : 61,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (!result.isEmpty()) {\n    result.add(null);\n  }\n  ArrayList<Action> actions=mapActions.get(groupName);\n  Collections.sort(actions,COMPARATOR);\n  result.addAll(actions);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 411,
        "startLineNumber" : 52,
        "startColumnNumber" : 12,
        "endLineNumber" : 61,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (String groupName : groupNames) {\n  if (!result.isEmpty()) {\n    result.add(null);\n  }\n  ArrayList<Action> actions=mapActions.get(groupName);\n  Collections.sort(actions,COMPARATOR);\n  result.addAll(actions);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 41,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 691,
        "startLineNumber" : 45,
        "startColumnNumber" : 35,
        "endLineNumber" : 64,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ArrayList<Action> result=new ArrayList<>();\n  ArrayList<String> groupNames=new ArrayList<>(mapActions.keySet());\n  Collections.sort(groupNames);\n  for (  String groupName : groupNames) {\n    if (!result.isEmpty()) {\n      result.add(null);\n    }\n    ArrayList<Action> actions=mapActions.get(groupName);\n    Collections.sort(actions,COMPARATOR);\n    result.addAll(actions);\n  }\n  return result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 781,
        "startLineNumber" : 45,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!mapActions.isEmpty()) {\n  ArrayList<Action> result=new ArrayList<>();\n  ArrayList<String> groupNames=new ArrayList<>(mapActions.keySet());\n  Collections.sort(groupNames);\n  for (  String groupName : groupNames) {\n    if (!result.isEmpty()) {\n      result.add(null);\n    }\n    ArrayList<Action> actions=mapActions.get(groupName);\n    Collections.sort(actions,COMPARATOR);\n    result.addAll(actions);\n  }\n  return result;\n}\n else {\n  return Collections.emptyList();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 86,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1426,
        "startLineNumber" : 27,
        "startColumnNumber" : 83,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  HashMap<String,ArrayList<Action>> mapActions=new HashMap<>();\n  for (  ContextualActionsFactory provider : providers) {\n    Collection<Action> actions=provider.make(api,entry,fragment);\n    for (    Action action : actions) {\n      String groupName=(String)action.getValue(ContextualActionsFactory.GROUP_NAME);\n      ArrayList<Action> list=mapActions.get(groupName);\n      if (list == null) {\n        mapActions.put(groupName,list=new ArrayList<>());\n      }\n      list.add(action);\n    }\n  }\n  if (!mapActions.isEmpty()) {\n    ArrayList<Action> result=new ArrayList<>();\n    ArrayList<String> groupNames=new ArrayList<>(mapActions.keySet());\n    Collections.sort(groupNames);\n    for (    String groupName : groupNames) {\n      if (!result.isEmpty()) {\n        result.add(null);\n      }\n      ArrayList<Action> actions=mapActions.get(groupName);\n      Collections.sort(actions,COMPARATOR);\n      result.addAll(actions);\n    }\n    return result;\n  }\n else {\n    return Collections.emptyList();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 179,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1505,
        "startLineNumber" : 27,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public Collection<Action> get(API api,Container.Entry entry,String fragment){\n  HashMap<String,ArrayList<Action>> mapActions=new HashMap<>();\n  for (  ContextualActionsFactory provider : providers) {\n    Collection<Action> actions=provider.make(api,entry,fragment);\n    for (    Action action : actions) {\n      String groupName=(String)action.getValue(ContextualActionsFactory.GROUP_NAME);\n      ArrayList<Action> list=mapActions.get(groupName);\n      if (list == null) {\n        mapActions.put(groupName,list=new ArrayList<>());\n      }\n      list.add(action);\n    }\n  }\n  if (!mapActions.isEmpty()) {\n    ArrayList<Action> result=new ArrayList<>();\n    ArrayList<String> groupNames=new ArrayList<>(mapActions.keySet());\n    Collections.sort(groupNames);\n    for (    String groupName : groupNames) {\n      if (!result.isEmpty()) {\n        result.add(null);\n      }\n      ArrayList<Action> actions=mapActions.get(groupName);\n      Collections.sort(actions,COMPARATOR);\n      result.addAll(actions);\n    }\n    return result;\n  }\n else {\n    return Collections.emptyList();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 201,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 60,
        "startColumnNumber" : 16,
        "endLineNumber" : 60,
        "endColumnNumber" : 39
      },
      "nodeContext" : "result.addAll(actions);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.ArrayList<javax.swing.Action>"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 33,
    "startColumnNumber" : 33,
    "endLineNumber" : 33,
    "endColumnNumber" : 40
  }, {
    "charLength" : 7,
    "startLineNumber" : 59,
    "startColumnNumber" : 33,
    "endLineNumber" : 59,
    "endColumnNumber" : 40
  }, {
    "charLength" : 7,
    "startLineNumber" : 60,
    "startColumnNumber" : 30,
    "endLineNumber" : 60,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}