{
  "id" : 322,
  "expression" : "StringRef",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-gui/src/main/java/jadx/gui/jobs/IndexJob.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "StringRef",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 62,
      "startColumnNumber" : 26,
      "endLineNumber" : 62,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 62,
        "startColumnNumber" : 26,
        "endLineNumber" : 62,
        "endColumnNumber" : 71
      },
      "nodeContext" : "StringRef.split(cls.getCode(),CodeWriter.NL)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 62,
        "startColumnNumber" : 18,
        "endLineNumber" : 62,
        "endColumnNumber" : 71
      },
      "nodeContext" : "lines=StringRef.split(cls.getCode(),CodeWriter.NL)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 62,
        "startColumnNumber" : 2,
        "endLineNumber" : 62,
        "endColumnNumber" : 72
      },
      "nodeContext" : "List<StringRef> lines=StringRef.split(cls.getCode(),CodeWriter.NL);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 197,
        "startLineNumber" : 61,
        "startColumnNumber" : 53,
        "endLineNumber" : 68,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  List<StringRef> lines=StringRef.split(cls.getCode(),CodeWriter.NL);\n  int size=lines.size();\n  for (int i=0; i < size; i++) {\n    lines.set(i,lines.get(i).trim());\n  }\n  return lines;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 50,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 259,
        "startLineNumber" : 60,
        "startColumnNumber" : 1,
        "endLineNumber" : 68,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@NotNull protected List<StringRef> splitLines(JavaClass cls){\n  List<StringRef> lines=StringRef.split(cls.getCode(),CodeWriter.NL);\n  int size=lines.size();\n  for (int i=0; i < size; i++) {\n    lines.set(i,lines.get(i).trim());\n  }\n  return lines;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 64,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 62,
        "startColumnNumber" : 2,
        "endLineNumber" : 62,
        "endColumnNumber" : 72
      },
      "nodeContext" : "List<StringRef> lines=StringRef.split(cls.getCode(),CodeWriter.NL);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "jadx.gui.utils.search.StringRef"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 62,
    "startColumnNumber" : 26,
    "endLineNumber" : 62,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ ]
}