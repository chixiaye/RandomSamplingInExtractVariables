{
  "id" : 226,
  "expression" : "Arrays",
  "projectName" : "eugenp@tutorials",
  "commitID" : "3c663eceea2087a494308592676e46b2a6d952f6",
  "filePath" : "/libraries-5/src/test/java/com/baeldung/streamex/StreamExMergeStreamsUnitTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Arrays",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 21,
      "startColumnNumber" : 21,
      "endLineNumber" : 21,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 21,
        "startColumnNumber" : 21,
        "endLineNumber" : 21,
        "endColumnNumber" : 52
      },
      "nodeContext" : "Arrays.asList(1,3,5,2,4,6)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 21,
        "startColumnNumber" : 8,
        "endLineNumber" : 21,
        "endColumnNumber" : 99
      },
      "nodeContext" : "assertEquals(Arrays.asList(1,3,5,2,4,6),resultingStream.collect(Collectors.toList()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 17,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 21,
        "startColumnNumber" : 8,
        "endLineNumber" : 21,
        "endColumnNumber" : 100
      },
      "nodeContext" : "assertEquals(Arrays.asList(1,3,5,2,4,6),resultingStream.collect(Collectors.toList()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 298,
        "startLineNumber" : 15,
        "startColumnNumber" : 104,
        "endLineNumber" : 22,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Stream<Integer> stream1=Stream.of(1,3,5);\n  Stream<Integer> stream2=Stream.of(2,4,6);\n  Stream<Integer> resultingStream=StreamEx.of(stream1).append(stream2);\n  assertEquals(Arrays.asList(1,3,5,2,4,6),resultingStream.collect(Collectors.toList()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 62,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 408,
        "startLineNumber" : 14,
        "startColumnNumber" : 4,
        "endLineNumber" : 22,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void givenTwoStreams_whenMergingStreams_thenResultingStreamContainsElementsFromBothStreams(){\n  Stream<Integer> stream1=Stream.of(1,3,5);\n  Stream<Integer> stream2=Stream.of(2,4,6);\n  Stream<Integer> resultingStream=StreamEx.of(stream1).append(stream2);\n  assertEquals(Arrays.asList(1,3,5,2,4,6),resultingStream.collect(Collectors.toList()));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 68,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 21,
        "startColumnNumber" : 8,
        "endLineNumber" : 21,
        "endColumnNumber" : 100
      },
      "nodeContext" : "assertEquals(Arrays.asList(1,3,5,2,4,6),resultingStream.collect(Collectors.toList()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 18,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.Arrays"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 21,
    "startColumnNumber" : 21,
    "endLineNumber" : 21,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ ]
}