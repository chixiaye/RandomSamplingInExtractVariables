{
  "id" : 448,
  "expression" : "tracks.isTypeSelected(C.TRACK_TYPE_VIDEO)",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/common/src/test/java/com/google/android/exoplayer2/TracksTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "tracks.isTypeSelected(C.TRACK_TYPE_VIDEO)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 41,
      "startLineNumber" : 112,
      "startColumnNumber" : 15,
      "endLineNumber" : 112,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 112,
        "startColumnNumber" : 4,
        "endLineNumber" : 112,
        "endColumnNumber" : 57
      },
      "nodeContext" : "assertThat(tracks.isTypeSelected(C.TRACK_TYPE_VIDEO))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 112,
        "startColumnNumber" : 4,
        "endLineNumber" : 112,
        "endColumnNumber" : 66
      },
      "nodeContext" : "assertThat(tracks.isTypeSelected(C.TRACK_TYPE_VIDEO)).isTrue()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 112,
        "startColumnNumber" : 4,
        "endLineNumber" : 112,
        "endColumnNumber" : 67
      },
      "nodeContext" : "assertThat(tracks.isTypeSelected(C.TRACK_TYPE_VIDEO)).isTrue();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2782,
        "startLineNumber" : 82,
        "startColumnNumber" : 61,
        "endLineNumber" : 128,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Tracks.Group trackGroup0=new Tracks.Group(new TrackGroup(new Format.Builder().setSampleMimeType(AUDIO_AAC).build()),false,new int[]{C.FORMAT_EXCEEDS_CAPABILITIES},new boolean[]{false});\n  Tracks.Group trackGroup1=new Tracks.Group(new TrackGroup(new Format.Builder().setSampleMimeType(VIDEO_H264).build(),new Format.Builder().setSampleMimeType(VIDEO_H264).build()),true,new int[]{C.FORMAT_UNSUPPORTED_DRM,C.FORMAT_HANDLED},new boolean[]{false,true});\n  Tracks tracks=new Tracks(ImmutableList.of(trackGroup0,trackGroup1));\n  assertThat(tracks.containsType(C.TRACK_TYPE_AUDIO)).isTrue();\n  assertThat(tracks.containsType(C.TRACK_TYPE_VIDEO)).isTrue();\n  assertThat(tracks.containsType(C.TRACK_TYPE_TEXT)).isFalse();\n  assertThat(tracks.isTypeSupported(C.TRACK_TYPE_AUDIO)).isFalse();\n  assertThat(tracks.isTypeSupported(C.TRACK_TYPE_VIDEO)).isTrue();\n  assertThat(tracks.isTypeSupported(C.TRACK_TYPE_TEXT)).isFalse();\n  assertThat(tracks.isTypeSupported(C.TRACK_TYPE_AUDIO,true)).isTrue();\n  assertThat(tracks.isTypeSupported(C.TRACK_TYPE_VIDEO,true)).isTrue();\n  assertThat(tracks.isTypeSupported(C.TRACK_TYPE_TEXT,true)).isFalse();\n  assertThat(tracks.isTypeSelected(C.TRACK_TYPE_AUDIO)).isFalse();\n  assertThat(tracks.isTypeSelected(C.TRACK_TYPE_VIDEO)).isTrue();\n  ImmutableList<Tracks.Group> trackGroups=tracks.getGroups();\n  assertThat(trackGroups).hasSize(2);\n  assertThat(trackGroups.get(0)).isSameInstanceAs(trackGroup0);\n  assertThat(trackGroups.get(1)).isSameInstanceAs(trackGroup1);\n  assertThat(trackGroups.get(0).isTrackSupported(0)).isFalse();\n  assertThat(trackGroups.get(1).isTrackSupported(0)).isFalse();\n  assertThat(trackGroups.get(1).isTrackSupported(1)).isTrue();\n  assertThat(trackGroups.get(0).getTrackSupport(0)).isEqualTo(C.FORMAT_EXCEEDS_CAPABILITIES);\n  assertThat(trackGroups.get(1).getTrackSupport(0)).isEqualTo(C.FORMAT_UNSUPPORTED_DRM);\n  assertThat(trackGroups.get(1).getTrackSupport(1)).isEqualTo(C.FORMAT_HANDLED);\n  assertThat(trackGroups.get(0).isTrackSelected(0)).isFalse();\n  assertThat(trackGroups.get(1).isTrackSelected(0)).isFalse();\n  assertThat(trackGroups.get(1).isTrackSelected(1)).isTrue();\n  assertThat(trackGroups.get(0).getType()).isEqualTo(C.TRACK_TYPE_AUDIO);\n  assertThat(trackGroups.get(1).getType()).isEqualTo(C.TRACK_TYPE_VIDEO);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 417,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2850,
        "startLineNumber" : 81,
        "startColumnNumber" : 2,
        "endLineNumber" : 128,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void getters_ofComplexTracks_returnExpectedValues(){\n  Tracks.Group trackGroup0=new Tracks.Group(new TrackGroup(new Format.Builder().setSampleMimeType(AUDIO_AAC).build()),false,new int[]{C.FORMAT_EXCEEDS_CAPABILITIES},new boolean[]{false});\n  Tracks.Group trackGroup1=new Tracks.Group(new TrackGroup(new Format.Builder().setSampleMimeType(VIDEO_H264).build(),new Format.Builder().setSampleMimeType(VIDEO_H264).build()),true,new int[]{C.FORMAT_UNSUPPORTED_DRM,C.FORMAT_HANDLED},new boolean[]{false,true});\n  Tracks tracks=new Tracks(ImmutableList.of(trackGroup0,trackGroup1));\n  assertThat(tracks.containsType(C.TRACK_TYPE_AUDIO)).isTrue();\n  assertThat(tracks.containsType(C.TRACK_TYPE_VIDEO)).isTrue();\n  assertThat(tracks.containsType(C.TRACK_TYPE_TEXT)).isFalse();\n  assertThat(tracks.isTypeSupported(C.TRACK_TYPE_AUDIO)).isFalse();\n  assertThat(tracks.isTypeSupported(C.TRACK_TYPE_VIDEO)).isTrue();\n  assertThat(tracks.isTypeSupported(C.TRACK_TYPE_TEXT)).isFalse();\n  assertThat(tracks.isTypeSupported(C.TRACK_TYPE_AUDIO,true)).isTrue();\n  assertThat(tracks.isTypeSupported(C.TRACK_TYPE_VIDEO,true)).isTrue();\n  assertThat(tracks.isTypeSupported(C.TRACK_TYPE_TEXT,true)).isFalse();\n  assertThat(tracks.isTypeSelected(C.TRACK_TYPE_AUDIO)).isFalse();\n  assertThat(tracks.isTypeSelected(C.TRACK_TYPE_VIDEO)).isTrue();\n  ImmutableList<Tracks.Group> trackGroups=tracks.getGroups();\n  assertThat(trackGroups).hasSize(2);\n  assertThat(trackGroups.get(0)).isSameInstanceAs(trackGroup0);\n  assertThat(trackGroups.get(1)).isSameInstanceAs(trackGroup1);\n  assertThat(trackGroups.get(0).isTrackSupported(0)).isFalse();\n  assertThat(trackGroups.get(1).isTrackSupported(0)).isFalse();\n  assertThat(trackGroups.get(1).isTrackSupported(1)).isTrue();\n  assertThat(trackGroups.get(0).getTrackSupport(0)).isEqualTo(C.FORMAT_EXCEEDS_CAPABILITIES);\n  assertThat(trackGroups.get(1).getTrackSupport(0)).isEqualTo(C.FORMAT_UNSUPPORTED_DRM);\n  assertThat(trackGroups.get(1).getTrackSupport(1)).isEqualTo(C.FORMAT_HANDLED);\n  assertThat(trackGroups.get(0).isTrackSelected(0)).isFalse();\n  assertThat(trackGroups.get(1).isTrackSelected(0)).isFalse();\n  assertThat(trackGroups.get(1).isTrackSelected(1)).isTrue();\n  assertThat(trackGroups.get(0).getType()).isEqualTo(C.TRACK_TYPE_AUDIO);\n  assertThat(trackGroups.get(1).getType()).isEqualTo(C.TRACK_TYPE_VIDEO);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 423,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 112,
        "startColumnNumber" : 4,
        "endLineNumber" : 112,
        "endColumnNumber" : 67
      },
      "nodeContext" : "assertThat(tracks.isTypeSelected(C.TRACK_TYPE_VIDEO)).isTrue();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 6,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 41,
    "startLineNumber" : 112,
    "startColumnNumber" : 15,
    "endLineNumber" : 112,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}