{
  "id" : 108,
  "expression" : "big",
  "projectName" : "TheAlgorithms@Java",
  "commitID" : "8b243667d736be7d0413cc77159378aa02459db0",
  "filePath" : "/src/main/java/com/thealgorithms/others/BFPRT.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "big",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 84,
      "startColumnNumber" : 22,
      "endLineNumber" : 84,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 84,
        "startColumnNumber" : 15,
        "endLineNumber" : 84,
        "endColumnNumber" : 25
      },
      "nodeContext" : "cur != big",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 253,
        "startLineNumber" : 84,
        "startColumnNumber" : 8,
        "endLineNumber" : 92,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (cur != big) {\n  if (arr[cur] < num) {\n    swap(arr,++small,cur++);\n  }\n else   if (arr[cur] > num) {\n    swap(arr,--big,cur);\n  }\n else {\n    cur++;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 38,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 495,
        "startLineNumber" : 80,
        "startColumnNumber" : 74,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int small=begin - 1;\n  int cur=begin;\n  int big=end + 1;\n  while (cur != big) {\n    if (arr[cur] < num) {\n      swap(arr,++small,cur++);\n    }\n else     if (arr[cur] > num) {\n      swap(arr,--big,cur);\n    }\n else {\n      cur++;\n    }\n  }\n  int[] pivotRange=new int[2];\n  pivotRange[0]=small + 1;\n  pivotRange[1]=big - 1;\n  return pivotRange;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 565,
        "startLineNumber" : 80,
        "startColumnNumber" : 4,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static int[] partition(int[] arr,int begin,int end,int num){\n  int small=begin - 1;\n  int cur=begin;\n  int big=end + 1;\n  while (cur != big) {\n    if (arr[cur] < num) {\n      swap(arr,++small,cur++);\n    }\n else     if (arr[cur] > num) {\n      swap(arr,--big,cur);\n    }\n else {\n      cur++;\n    }\n  }\n  int[] pivotRange=new int[2];\n  pivotRange[0]=small + 1;\n  pivotRange[1]=big - 1;\n  return pivotRange;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 84,
        "startColumnNumber" : 15,
        "endLineNumber" : 84,
        "endColumnNumber" : 25
      },
      "nodeContext" : "cur != big",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "big",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 95,
      "startColumnNumber" : 24,
      "endLineNumber" : 95,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 95,
        "startColumnNumber" : 24,
        "endLineNumber" : 95,
        "endColumnNumber" : 31
      },
      "nodeContext" : "big - 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 95,
        "startColumnNumber" : 8,
        "endLineNumber" : 95,
        "endColumnNumber" : 31
      },
      "nodeContext" : "pivotRange[1]=big - 1",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 95,
        "startColumnNumber" : 8,
        "endLineNumber" : 95,
        "endColumnNumber" : 32
      },
      "nodeContext" : "pivotRange[1]=big - 1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 495,
        "startLineNumber" : 80,
        "startColumnNumber" : 74,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int small=begin - 1;\n  int cur=begin;\n  int big=end + 1;\n  while (cur != big) {\n    if (arr[cur] < num) {\n      swap(arr,++small,cur++);\n    }\n else     if (arr[cur] > num) {\n      swap(arr,--big,cur);\n    }\n else {\n      cur++;\n    }\n  }\n  int[] pivotRange=new int[2];\n  pivotRange[0]=small + 1;\n  pivotRange[1]=big - 1;\n  return pivotRange;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 565,
        "startLineNumber" : 80,
        "startColumnNumber" : 4,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static int[] partition(int[] arr,int begin,int end,int num){\n  int small=begin - 1;\n  int cur=begin;\n  int big=end + 1;\n  while (cur != big) {\n    if (arr[cur] < num) {\n      swap(arr,++small,cur++);\n    }\n else     if (arr[cur] > num) {\n      swap(arr,--big,cur);\n    }\n else {\n      cur++;\n    }\n  }\n  int[] pivotRange=new int[2];\n  pivotRange[0]=small + 1;\n  pivotRange[1]=big - 1;\n  return pivotRange;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 95,
        "startColumnNumber" : 8,
        "endLineNumber" : 95,
        "endColumnNumber" : 32
      },
      "nodeContext" : "pivotRange[1]=big - 1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 84,
    "startColumnNumber" : 22,
    "endLineNumber" : 84,
    "endColumnNumber" : 25
  }, {
    "charLength" : 3,
    "startLineNumber" : 95,
    "startColumnNumber" : 24,
    "endLineNumber" : 95,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}