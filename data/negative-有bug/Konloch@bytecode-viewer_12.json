{
  "id" : 12,
  "expression" : "decompiler.equalsIgnoreCase(\"jd-gui\")",
  "projectName" : "Konloch@bytecode-viewer",
  "commitID" : "9ab8ec7f8c061fb1d9b1db3e901034d162a211ff",
  "filePath" : "/src/main/java/the/bytecode/club/bytecodeviewer/CommandLineInput.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "decompiler.equalsIgnoreCase(\"jd-gui\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 163,
      "startColumnNumber" : 33,
      "endLineNumber" : 163,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 163,
        "startColumnNumber" : 32,
        "endLineNumber" : 163,
        "endColumnNumber" : 70
      },
      "nodeContext" : "!decompiler.equalsIgnoreCase(\"jd-gui\")",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 477,
        "startLineNumber" : 157,
        "startColumnNumber" : 24,
        "endLineNumber" : 163,
        "endColumnNumber" : 70
      },
      "nodeContext" : "decompiler != null && !decompiler.equalsIgnoreCase(\"procyon\") && !decompiler.equalsIgnoreCase(\"cfr\") && !decompiler.equalsIgnoreCase(\"fernflower\") && !decompiler.equalsIgnoreCase(\"krakatau\") && !decompiler.equalsIgnoreCase(\"krakatau-bytecode\") && !decompiler.equalsIgnoreCase(\"jd-gui\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 39,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 550,
        "startLineNumber" : 157,
        "startColumnNumber" : 24,
        "endLineNumber" : 164,
        "endColumnNumber" : 69
      },
      "nodeContext" : "decompiler != null && !decompiler.equalsIgnoreCase(\"procyon\") && !decompiler.equalsIgnoreCase(\"cfr\") && !decompiler.equalsIgnoreCase(\"fernflower\") && !decompiler.equalsIgnoreCase(\"krakatau\") && !decompiler.equalsIgnoreCase(\"krakatau-bytecode\") && !decompiler.equalsIgnoreCase(\"jd-gui\") && !decompiler.equalsIgnoreCase(\"smali\")",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 45,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 784,
        "startLineNumber" : 156,
        "startColumnNumber" : 16,
        "endLineNumber" : 168,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (decompiler != null && !decompiler.equalsIgnoreCase(\"procyon\") && !decompiler.equalsIgnoreCase(\"cfr\") && !decompiler.equalsIgnoreCase(\"fernflower\") && !decompiler.equalsIgnoreCase(\"krakatau\") && !decompiler.equalsIgnoreCase(\"krakatau-bytecode\") && !decompiler.equalsIgnoreCase(\"jd-gui\") && !decompiler.equalsIgnoreCase(\"smali\")) {\n  System.out.println(\"Error, no decompiler called '\" + decompiler + \"' found. Type -decompiler-list\"+ \" for the list\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 58,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2194,
        "startLineNumber" : 124,
        "startColumnNumber" : 19,
        "endLineNumber" : 175,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (cmd.getOptionValue(\"i\") == null) {\n    System.err.println(\"Set the input with -i\");\n    return STOP;\n  }\n  if (cmd.getOptionValue(\"o\") == null) {\n    System.err.println(\"Set the output with -o\");\n    return STOP;\n  }\n  if (cmd.getOptionValue(\"t\") == null) {\n    System.err.println(\"Set the target with -t\");\n    return STOP;\n  }\n  File input=new File(cmd.getOptionValue(\"i\"));\n  File output=new File(cmd.getOptionValue(\"o\"));\n  String decompiler=cmd.getOptionValue(\"decompiler\");\n  if (!input.exists()) {\n    System.err.println(input.getAbsolutePath() + \" does not exist.\");\n    return STOP;\n  }\n  if (output.exists()) {\n    System.err.println(\"WARNING: Deleted old \" + output.getAbsolutePath() + \".\");\n    output.delete();\n  }\n  if (decompiler != null && !decompiler.equalsIgnoreCase(\"procyon\") && !decompiler.equalsIgnoreCase(\"cfr\") && !decompiler.equalsIgnoreCase(\"fernflower\") && !decompiler.equalsIgnoreCase(\"krakatau\") && !decompiler.equalsIgnoreCase(\"krakatau-bytecode\") && !decompiler.equalsIgnoreCase(\"jd-gui\") && !decompiler.equalsIgnoreCase(\"smali\")) {\n    System.out.println(\"Error, no decompiler called '\" + decompiler + \"' found. Type -decompiler-list\"+ \" for the list\");\n  }\n  if (!cmd.hasOption(\"nowait\"))   Thread.sleep(5 * 1000);\n  return CLI;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 198,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3229,
        "startLineNumber" : 110,
        "startColumnNumber" : 19,
        "endLineNumber" : 175,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (cmd.hasOption(\"help\")) {\n  for (  String s : new String[]{\"-help                         Displays the help menu\",\"-clean                        Deletes BCV directory\",\"-english                      Forces English language translations\",\"-list                         Displays the available decompilers\",\"-decompiler <decompiler>      Selects the decompiler, procyon by default\",\"-i <input file>               Selects the input file\",\"-o <output file>              Selects the output file\",\"-t <target classname>         Must either be the fully qualified classname or \\\"all\\\" to decompile all as zip\",\"-nowait                       Doesn't wait for the user to read the CLI messages\"})   System.out.println(s);\n  return STOP;\n}\n else {\n  if (cmd.getOptionValue(\"i\") == null) {\n    System.err.println(\"Set the input with -i\");\n    return STOP;\n  }\n  if (cmd.getOptionValue(\"o\") == null) {\n    System.err.println(\"Set the output with -o\");\n    return STOP;\n  }\n  if (cmd.getOptionValue(\"t\") == null) {\n    System.err.println(\"Set the target with -t\");\n    return STOP;\n  }\n  File input=new File(cmd.getOptionValue(\"i\"));\n  File output=new File(cmd.getOptionValue(\"o\"));\n  String decompiler=cmd.getOptionValue(\"decompiler\");\n  if (!input.exists()) {\n    System.err.println(input.getAbsolutePath() + \" does not exist.\");\n    return STOP;\n  }\n  if (output.exists()) {\n    System.err.println(\"WARNING: Deleted old \" + output.getAbsolutePath() + \".\");\n    output.delete();\n  }\n  if (decompiler != null && !decompiler.equalsIgnoreCase(\"procyon\") && !decompiler.equalsIgnoreCase(\"cfr\") && !decompiler.equalsIgnoreCase(\"fernflower\") && !decompiler.equalsIgnoreCase(\"krakatau\") && !decompiler.equalsIgnoreCase(\"krakatau-bytecode\") && !decompiler.equalsIgnoreCase(\"jd-gui\") && !decompiler.equalsIgnoreCase(\"smali\")) {\n    System.out.println(\"Error, no decompiler called '\" + decompiler + \"' found. Type -decompiler-list\"+ \" for the list\");\n  }\n  if (!cmd.hasOption(\"nowait\"))   Thread.sleep(5 * 1000);\n  return CLI;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 233,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3367,
        "startLineNumber" : 107,
        "startColumnNumber" : 19,
        "endLineNumber" : 175,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (cmd.hasOption(\"english\")) {\n  Configuration.language=Language.ENGLISH;\n  return GUI;\n}\n else if (cmd.hasOption(\"help\")) {\n  for (  String s : new String[]{\"-help                         Displays the help menu\",\"-clean                        Deletes BCV directory\",\"-english                      Forces English language translations\",\"-list                         Displays the available decompilers\",\"-decompiler <decompiler>      Selects the decompiler, procyon by default\",\"-i <input file>               Selects the input file\",\"-o <output file>              Selects the output file\",\"-t <target classname>         Must either be the fully qualified classname or \\\"all\\\" to decompile all as zip\",\"-nowait                       Doesn't wait for the user to read the CLI messages\"})   System.out.println(s);\n  return STOP;\n}\n else {\n  if (cmd.getOptionValue(\"i\") == null) {\n    System.err.println(\"Set the input with -i\");\n    return STOP;\n  }\n  if (cmd.getOptionValue(\"o\") == null) {\n    System.err.println(\"Set the output with -o\");\n    return STOP;\n  }\n  if (cmd.getOptionValue(\"t\") == null) {\n    System.err.println(\"Set the target with -t\");\n    return STOP;\n  }\n  File input=new File(cmd.getOptionValue(\"i\"));\n  File output=new File(cmd.getOptionValue(\"o\"));\n  String decompiler=cmd.getOptionValue(\"decompiler\");\n  if (!input.exists()) {\n    System.err.println(input.getAbsolutePath() + \" does not exist.\");\n    return STOP;\n  }\n  if (output.exists()) {\n    System.err.println(\"WARNING: Deleted old \" + output.getAbsolutePath() + \".\");\n    output.delete();\n  }\n  if (decompiler != null && !decompiler.equalsIgnoreCase(\"procyon\") && !decompiler.equalsIgnoreCase(\"cfr\") && !decompiler.equalsIgnoreCase(\"fernflower\") && !decompiler.equalsIgnoreCase(\"krakatau\") && !decompiler.equalsIgnoreCase(\"krakatau-bytecode\") && !decompiler.equalsIgnoreCase(\"jd-gui\") && !decompiler.equalsIgnoreCase(\"smali\")) {\n    System.out.println(\"Error, no decompiler called '\" + decompiler + \"' found. Type -decompiler-list\"+ \" for the list\");\n  }\n  if (!cmd.hasOption(\"nowait\"))   Thread.sleep(5 * 1000);\n  return CLI;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 249,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 3658,
        "startLineNumber" : 102,
        "startColumnNumber" : 19,
        "endLineNumber" : 175,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (cmd.hasOption(\"clean\")) {\n  new File(Constants.getBCVDirectory()).delete();\n  if (cmd.getOptionValue(\"i\") == null && cmd.getOptionValue(\"o\") == null && cmd.getOptionValue(\"t\") == null)   return GUI;\n}\n else if (cmd.hasOption(\"english\")) {\n  Configuration.language=Language.ENGLISH;\n  return GUI;\n}\n else if (cmd.hasOption(\"help\")) {\n  for (  String s : new String[]{\"-help                         Displays the help menu\",\"-clean                        Deletes BCV directory\",\"-english                      Forces English language translations\",\"-list                         Displays the available decompilers\",\"-decompiler <decompiler>      Selects the decompiler, procyon by default\",\"-i <input file>               Selects the input file\",\"-o <output file>              Selects the output file\",\"-t <target classname>         Must either be the fully qualified classname or \\\"all\\\" to decompile all as zip\",\"-nowait                       Doesn't wait for the user to read the CLI messages\"})   System.out.println(s);\n  return STOP;\n}\n else {\n  if (cmd.getOptionValue(\"i\") == null) {\n    System.err.println(\"Set the input with -i\");\n    return STOP;\n  }\n  if (cmd.getOptionValue(\"o\") == null) {\n    System.err.println(\"Set the output with -o\");\n    return STOP;\n  }\n  if (cmd.getOptionValue(\"t\") == null) {\n    System.err.println(\"Set the target with -t\");\n    return STOP;\n  }\n  File input=new File(cmd.getOptionValue(\"i\"));\n  File output=new File(cmd.getOptionValue(\"o\"));\n  String decompiler=cmd.getOptionValue(\"decompiler\");\n  if (!input.exists()) {\n    System.err.println(input.getAbsolutePath() + \" does not exist.\");\n    return STOP;\n  }\n  if (output.exists()) {\n    System.err.println(\"WARNING: Deleted old \" + output.getAbsolutePath() + \".\");\n    output.delete();\n  }\n  if (decompiler != null && !decompiler.equalsIgnoreCase(\"procyon\") && !decompiler.equalsIgnoreCase(\"cfr\") && !decompiler.equalsIgnoreCase(\"fernflower\") && !decompiler.equalsIgnoreCase(\"krakatau\") && !decompiler.equalsIgnoreCase(\"krakatau-bytecode\") && !decompiler.equalsIgnoreCase(\"jd-gui\") && !decompiler.equalsIgnoreCase(\"smali\")) {\n    System.out.println(\"Error, no decompiler called '\" + decompiler + \"' found. Type -decompiler-list\"+ \" for the list\");\n  }\n  if (!cmd.hasOption(\"nowait\"))   Thread.sleep(5 * 1000);\n  return CLI;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 287,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4071,
        "startLineNumber" : 93,
        "startColumnNumber" : 12,
        "endLineNumber" : 175,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (cmd.hasOption(\"list\")) {\n  System.out.println(\"Procyon\");\n  System.out.println(\"CFR\");\n  System.out.println(\"FernFlower\");\n  System.out.println(\"Krakatau\");\n  System.out.println(\"Krakatau-Bytecode\");\n  System.out.println(\"JD-GUI\");\n  System.out.println(\"Smali\");\n  return STOP;\n}\n else if (cmd.hasOption(\"clean\")) {\n  new File(Constants.getBCVDirectory()).delete();\n  if (cmd.getOptionValue(\"i\") == null && cmd.getOptionValue(\"o\") == null && cmd.getOptionValue(\"t\") == null)   return GUI;\n}\n else if (cmd.hasOption(\"english\")) {\n  Configuration.language=Language.ENGLISH;\n  return GUI;\n}\n else if (cmd.hasOption(\"help\")) {\n  for (  String s : new String[]{\"-help                         Displays the help menu\",\"-clean                        Deletes BCV directory\",\"-english                      Forces English language translations\",\"-list                         Displays the available decompilers\",\"-decompiler <decompiler>      Selects the decompiler, procyon by default\",\"-i <input file>               Selects the input file\",\"-o <output file>              Selects the output file\",\"-t <target classname>         Must either be the fully qualified classname or \\\"all\\\" to decompile all as zip\",\"-nowait                       Doesn't wait for the user to read the CLI messages\"})   System.out.println(s);\n  return STOP;\n}\n else {\n  if (cmd.getOptionValue(\"i\") == null) {\n    System.err.println(\"Set the input with -i\");\n    return STOP;\n  }\n  if (cmd.getOptionValue(\"o\") == null) {\n    System.err.println(\"Set the output with -o\");\n    return STOP;\n  }\n  if (cmd.getOptionValue(\"t\") == null) {\n    System.err.println(\"Set the target with -t\");\n    return STOP;\n  }\n  File input=new File(cmd.getOptionValue(\"i\"));\n  File output=new File(cmd.getOptionValue(\"o\"));\n  String decompiler=cmd.getOptionValue(\"decompiler\");\n  if (!input.exists()) {\n    System.err.println(input.getAbsolutePath() + \" does not exist.\");\n    return STOP;\n  }\n  if (output.exists()) {\n    System.err.println(\"WARNING: Deleted old \" + output.getAbsolutePath() + \".\");\n    output.delete();\n  }\n  if (decompiler != null && !decompiler.equalsIgnoreCase(\"procyon\") && !decompiler.equalsIgnoreCase(\"cfr\") && !decompiler.equalsIgnoreCase(\"fernflower\") && !decompiler.equalsIgnoreCase(\"krakatau\") && !decompiler.equalsIgnoreCase(\"krakatau-bytecode\") && !decompiler.equalsIgnoreCase(\"jd-gui\") && !decompiler.equalsIgnoreCase(\"smali\")) {\n    System.out.println(\"Error, no decompiler called '\" + decompiler + \"' found. Type -decompiler-list\"+ \" for the list\");\n  }\n  if (!cmd.hasOption(\"nowait\"))   Thread.sleep(5 * 1000);\n  return CLI;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 344,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 4154,
        "startLineNumber" : 91,
        "startColumnNumber" : 12,
        "endLineNumber" : 176,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  CommandLine cmd=parser.parse(options,args);\n  if (cmd.hasOption(\"list\")) {\n    System.out.println(\"Procyon\");\n    System.out.println(\"CFR\");\n    System.out.println(\"FernFlower\");\n    System.out.println(\"Krakatau\");\n    System.out.println(\"Krakatau-Bytecode\");\n    System.out.println(\"JD-GUI\");\n    System.out.println(\"Smali\");\n    return STOP;\n  }\n else   if (cmd.hasOption(\"clean\")) {\n    new File(Constants.getBCVDirectory()).delete();\n    if (cmd.getOptionValue(\"i\") == null && cmd.getOptionValue(\"o\") == null && cmd.getOptionValue(\"t\") == null)     return GUI;\n  }\n else   if (cmd.hasOption(\"english\")) {\n    Configuration.language=Language.ENGLISH;\n    return GUI;\n  }\n else   if (cmd.hasOption(\"help\")) {\n    for (    String s : new String[]{\"-help                         Displays the help menu\",\"-clean                        Deletes BCV directory\",\"-english                      Forces English language translations\",\"-list                         Displays the available decompilers\",\"-decompiler <decompiler>      Selects the decompiler, procyon by default\",\"-i <input file>               Selects the input file\",\"-o <output file>              Selects the output file\",\"-t <target classname>         Must either be the fully qualified classname or \\\"all\\\" to decompile all as zip\",\"-nowait                       Doesn't wait for the user to read the CLI messages\"})     System.out.println(s);\n    return STOP;\n  }\n else {\n    if (cmd.getOptionValue(\"i\") == null) {\n      System.err.println(\"Set the input with -i\");\n      return STOP;\n    }\n    if (cmd.getOptionValue(\"o\") == null) {\n      System.err.println(\"Set the output with -o\");\n      return STOP;\n    }\n    if (cmd.getOptionValue(\"t\") == null) {\n      System.err.println(\"Set the target with -t\");\n      return STOP;\n    }\n    File input=new File(cmd.getOptionValue(\"i\"));\n    File output=new File(cmd.getOptionValue(\"o\"));\n    String decompiler=cmd.getOptionValue(\"decompiler\");\n    if (!input.exists()) {\n      System.err.println(input.getAbsolutePath() + \" does not exist.\");\n      return STOP;\n    }\n    if (output.exists()) {\n      System.err.println(\"WARNING: Deleted old \" + output.getAbsolutePath() + \".\");\n      output.delete();\n    }\n    if (decompiler != null && !decompiler.equalsIgnoreCase(\"procyon\") && !decompiler.equalsIgnoreCase(\"cfr\") && !decompiler.equalsIgnoreCase(\"fernflower\") && !decompiler.equalsIgnoreCase(\"krakatau\") && !decompiler.equalsIgnoreCase(\"krakatau-bytecode\") && !decompiler.equalsIgnoreCase(\"jd-gui\") && !decompiler.equalsIgnoreCase(\"smali\")) {\n      System.out.println(\"Error, no decompiler called '\" + decompiler + \"' found. Type -decompiler-list\"+ \" for the list\");\n    }\n    if (!cmd.hasOption(\"nowait\"))     Thread.sleep(5 * 1000);\n    return CLI;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 355,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4237,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 178,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  CommandLine cmd=parser.parse(options,args);\n  if (cmd.hasOption(\"list\")) {\n    System.out.println(\"Procyon\");\n    System.out.println(\"CFR\");\n    System.out.println(\"FernFlower\");\n    System.out.println(\"Krakatau\");\n    System.out.println(\"Krakatau-Bytecode\");\n    System.out.println(\"JD-GUI\");\n    System.out.println(\"Smali\");\n    return STOP;\n  }\n else   if (cmd.hasOption(\"clean\")) {\n    new File(Constants.getBCVDirectory()).delete();\n    if (cmd.getOptionValue(\"i\") == null && cmd.getOptionValue(\"o\") == null && cmd.getOptionValue(\"t\") == null)     return GUI;\n  }\n else   if (cmd.hasOption(\"english\")) {\n    Configuration.language=Language.ENGLISH;\n    return GUI;\n  }\n else   if (cmd.hasOption(\"help\")) {\n    for (    String s : new String[]{\"-help                         Displays the help menu\",\"-clean                        Deletes BCV directory\",\"-english                      Forces English language translations\",\"-list                         Displays the available decompilers\",\"-decompiler <decompiler>      Selects the decompiler, procyon by default\",\"-i <input file>               Selects the input file\",\"-o <output file>              Selects the output file\",\"-t <target classname>         Must either be the fully qualified classname or \\\"all\\\" to decompile all as zip\",\"-nowait                       Doesn't wait for the user to read the CLI messages\"})     System.out.println(s);\n    return STOP;\n  }\n else {\n    if (cmd.getOptionValue(\"i\") == null) {\n      System.err.println(\"Set the input with -i\");\n      return STOP;\n    }\n    if (cmd.getOptionValue(\"o\") == null) {\n      System.err.println(\"Set the output with -o\");\n      return STOP;\n    }\n    if (cmd.getOptionValue(\"t\") == null) {\n      System.err.println(\"Set the target with -t\");\n      return STOP;\n    }\n    File input=new File(cmd.getOptionValue(\"i\"));\n    File output=new File(cmd.getOptionValue(\"o\"));\n    String decompiler=cmd.getOptionValue(\"decompiler\");\n    if (!input.exists()) {\n      System.err.println(input.getAbsolutePath() + \" does not exist.\");\n      return STOP;\n    }\n    if (output.exists()) {\n      System.err.println(\"WARNING: Deleted old \" + output.getAbsolutePath() + \".\");\n      output.delete();\n    }\n    if (decompiler != null && !decompiler.equalsIgnoreCase(\"procyon\") && !decompiler.equalsIgnoreCase(\"cfr\") && !decompiler.equalsIgnoreCase(\"fernflower\") && !decompiler.equalsIgnoreCase(\"krakatau\") && !decompiler.equalsIgnoreCase(\"krakatau-bytecode\") && !decompiler.equalsIgnoreCase(\"jd-gui\") && !decompiler.equalsIgnoreCase(\"smali\")) {\n      System.out.println(\"Error, no decompiler called '\" + decompiler + \"' found. Type -decompiler-list\"+ \" for the list\");\n    }\n    if (!cmd.hasOption(\"nowait\"))     Thread.sleep(5 * 1000);\n    return CLI;\n  }\n}\n catch (Exception e) {\n  BytecodeViewer.handleException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 367,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4334,
        "startLineNumber" : 88,
        "startColumnNumber" : 54,
        "endLineNumber" : 181,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!containsCommand(args))   return GUI;\n  try {\n    CommandLine cmd=parser.parse(options,args);\n    if (cmd.hasOption(\"list\")) {\n      System.out.println(\"Procyon\");\n      System.out.println(\"CFR\");\n      System.out.println(\"FernFlower\");\n      System.out.println(\"Krakatau\");\n      System.out.println(\"Krakatau-Bytecode\");\n      System.out.println(\"JD-GUI\");\n      System.out.println(\"Smali\");\n      return STOP;\n    }\n else     if (cmd.hasOption(\"clean\")) {\n      new File(Constants.getBCVDirectory()).delete();\n      if (cmd.getOptionValue(\"i\") == null && cmd.getOptionValue(\"o\") == null && cmd.getOptionValue(\"t\") == null)       return GUI;\n    }\n else     if (cmd.hasOption(\"english\")) {\n      Configuration.language=Language.ENGLISH;\n      return GUI;\n    }\n else     if (cmd.hasOption(\"help\")) {\n      for (      String s : new String[]{\"-help                         Displays the help menu\",\"-clean                        Deletes BCV directory\",\"-english                      Forces English language translations\",\"-list                         Displays the available decompilers\",\"-decompiler <decompiler>      Selects the decompiler, procyon by default\",\"-i <input file>               Selects the input file\",\"-o <output file>              Selects the output file\",\"-t <target classname>         Must either be the fully qualified classname or \\\"all\\\" to decompile all as zip\",\"-nowait                       Doesn't wait for the user to read the CLI messages\"})       System.out.println(s);\n      return STOP;\n    }\n else {\n      if (cmd.getOptionValue(\"i\") == null) {\n        System.err.println(\"Set the input with -i\");\n        return STOP;\n      }\n      if (cmd.getOptionValue(\"o\") == null) {\n        System.err.println(\"Set the output with -o\");\n        return STOP;\n      }\n      if (cmd.getOptionValue(\"t\") == null) {\n        System.err.println(\"Set the target with -t\");\n        return STOP;\n      }\n      File input=new File(cmd.getOptionValue(\"i\"));\n      File output=new File(cmd.getOptionValue(\"o\"));\n      String decompiler=cmd.getOptionValue(\"decompiler\");\n      if (!input.exists()) {\n        System.err.println(input.getAbsolutePath() + \" does not exist.\");\n        return STOP;\n      }\n      if (output.exists()) {\n        System.err.println(\"WARNING: Deleted old \" + output.getAbsolutePath() + \".\");\n        output.delete();\n      }\n      if (decompiler != null && !decompiler.equalsIgnoreCase(\"procyon\") && !decompiler.equalsIgnoreCase(\"cfr\") && !decompiler.equalsIgnoreCase(\"fernflower\") && !decompiler.equalsIgnoreCase(\"krakatau\") && !decompiler.equalsIgnoreCase(\"krakatau-bytecode\") && !decompiler.equalsIgnoreCase(\"jd-gui\") && !decompiler.equalsIgnoreCase(\"smali\")) {\n        System.out.println(\"Error, no decompiler called '\" + decompiler + \"' found. Type -decompiler-list\"+ \" for the list\");\n      }\n      if (!cmd.hasOption(\"nowait\"))       Thread.sleep(5 * 1000);\n      return CLI;\n    }\n  }\n catch (  Exception e) {\n    BytecodeViewer.handleException(e);\n  }\n  return GUI;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 377,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4384,
        "startLineNumber" : 88,
        "startColumnNumber" : 4,
        "endLineNumber" : 181,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static int parseCommandLine(String[] args){\n  if (!containsCommand(args))   return GUI;\n  try {\n    CommandLine cmd=parser.parse(options,args);\n    if (cmd.hasOption(\"list\")) {\n      System.out.println(\"Procyon\");\n      System.out.println(\"CFR\");\n      System.out.println(\"FernFlower\");\n      System.out.println(\"Krakatau\");\n      System.out.println(\"Krakatau-Bytecode\");\n      System.out.println(\"JD-GUI\");\n      System.out.println(\"Smali\");\n      return STOP;\n    }\n else     if (cmd.hasOption(\"clean\")) {\n      new File(Constants.getBCVDirectory()).delete();\n      if (cmd.getOptionValue(\"i\") == null && cmd.getOptionValue(\"o\") == null && cmd.getOptionValue(\"t\") == null)       return GUI;\n    }\n else     if (cmd.hasOption(\"english\")) {\n      Configuration.language=Language.ENGLISH;\n      return GUI;\n    }\n else     if (cmd.hasOption(\"help\")) {\n      for (      String s : new String[]{\"-help                         Displays the help menu\",\"-clean                        Deletes BCV directory\",\"-english                      Forces English language translations\",\"-list                         Displays the available decompilers\",\"-decompiler <decompiler>      Selects the decompiler, procyon by default\",\"-i <input file>               Selects the input file\",\"-o <output file>              Selects the output file\",\"-t <target classname>         Must either be the fully qualified classname or \\\"all\\\" to decompile all as zip\",\"-nowait                       Doesn't wait for the user to read the CLI messages\"})       System.out.println(s);\n      return STOP;\n    }\n else {\n      if (cmd.getOptionValue(\"i\") == null) {\n        System.err.println(\"Set the input with -i\");\n        return STOP;\n      }\n      if (cmd.getOptionValue(\"o\") == null) {\n        System.err.println(\"Set the output with -o\");\n        return STOP;\n      }\n      if (cmd.getOptionValue(\"t\") == null) {\n        System.err.println(\"Set the target with -t\");\n        return STOP;\n      }\n      File input=new File(cmd.getOptionValue(\"i\"));\n      File output=new File(cmd.getOptionValue(\"o\"));\n      String decompiler=cmd.getOptionValue(\"decompiler\");\n      if (!input.exists()) {\n        System.err.println(input.getAbsolutePath() + \" does not exist.\");\n        return STOP;\n      }\n      if (output.exists()) {\n        System.err.println(\"WARNING: Deleted old \" + output.getAbsolutePath() + \".\");\n        output.delete();\n      }\n      if (decompiler != null && !decompiler.equalsIgnoreCase(\"procyon\") && !decompiler.equalsIgnoreCase(\"cfr\") && !decompiler.equalsIgnoreCase(\"fernflower\") && !decompiler.equalsIgnoreCase(\"krakatau\") && !decompiler.equalsIgnoreCase(\"krakatau-bytecode\") && !decompiler.equalsIgnoreCase(\"jd-gui\") && !decompiler.equalsIgnoreCase(\"smali\")) {\n        System.out.println(\"Error, no decompiler called '\" + decompiler + \"' found. Type -decompiler-list\"+ \" for the list\");\n      }\n      if (!cmd.hasOption(\"nowait\"))       Thread.sleep(5 * 1000);\n      return CLI;\n    }\n  }\n catch (  Exception e) {\n    BytecodeViewer.handleException(e);\n  }\n  return GUI;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 388,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 163,
        "startColumnNumber" : 32,
        "endLineNumber" : 163,
        "endColumnNumber" : 70
      },
      "nodeContext" : "!decompiler.equalsIgnoreCase(\"jd-gui\")",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 37,
    "startLineNumber" : 163,
    "startColumnNumber" : 33,
    "endLineNumber" : 163,
    "endColumnNumber" : 70
  } ],
  "layoutRelationDataList" : [ ]
}