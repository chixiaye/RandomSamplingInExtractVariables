{
  "id" : 362,
  "expression" : "hermes",
  "projectName" : "apolloconfig@apollo",
  "commitID" : "7b7d753f78e444f9cf97b0f238f7e33f585cb277",
  "filePath" : "/apollo-portal/src/test/java/com/ctrip/framework/apollo/portal/service/NamespaceServiceTest.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "hermes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 64,
      "startColumnNumber" : 4,
      "endLineNumber" : 64,
      "endColumnNumber" : 10
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 64,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 19
      },
      "nodeContext" : "hermes.setId(2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 64,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 20
      },
      "nodeContext" : "hermes.setId(2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2470,
        "startLineNumber" : 49,
        "startColumnNumber" : 34,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String appId=\"6666\";\n  String clusterName=\"default\";\n  String namespaceName=\"application\";\n  AppNamespace applicationAppNamespace=mock(AppNamespace.class);\n  AppNamespace hermesAppNamespace=mock(AppNamespace.class);\n  NamespaceDTO application=new NamespaceDTO();\n  application.setId(1);\n  application.setClusterName(clusterName);\n  application.setAppId(appId);\n  application.setNamespaceName(namespaceName);\n  NamespaceDTO hermes=new NamespaceDTO();\n  hermes.setId(2);\n  hermes.setClusterName(\"default\");\n  hermes.setAppId(appId);\n  hermes.setNamespaceName(\"hermes\");\n  List<NamespaceDTO> namespaces=Arrays.asList(application,hermes);\n  ReleaseDTO someRelease=new ReleaseDTO();\n  someRelease.setConfigurations(\"{\\\"a\\\":\\\"123\\\",\\\"b\\\":\\\"123\\\"}\");\n  ItemDTO i1=new ItemDTO(\"a\",\"123\",\"\",1);\n  ItemDTO i2=new ItemDTO(\"b\",\"1\",\"\",2);\n  ItemDTO i3=new ItemDTO(\"\",\"\",\"#dddd\",3);\n  ItemDTO i4=new ItemDTO(\"c\",\"1\",\"\",4);\n  List<ItemDTO> someItems=Arrays.asList(i1,i2,i3,i4);\n  when(applicationAppNamespace.getFormat()).thenReturn(ConfigFileFormat.Properties.getValue());\n  when(hermesAppNamespace.getFormat()).thenReturn(ConfigFileFormat.XML.getValue());\n  when(appNamespaceService.findByAppIdAndName(appId,namespaceName)).thenReturn(applicationAppNamespace);\n  when(appNamespaceService.findPublicAppNamespace(\"hermes\")).thenReturn(hermesAppNamespace);\n  when(namespaceAPI.findNamespaceByCluster(appId,Env.DEV,clusterName)).thenReturn(namespaces);\n  when(releaseService.loadLatestRelease(appId,Env.DEV,clusterName,namespaceName)).thenReturn(someRelease);\n  when(releaseService.loadLatestRelease(appId,Env.DEV,clusterName,\"hermes\")).thenReturn(someRelease);\n  when(itemService.findItems(appId,Env.DEV,clusterName,namespaceName)).thenReturn(someItems);\n  List<NamespaceVO> namespaceVOs=namespaceService.findNamespaces(appId,Env.DEV,clusterName);\n  assertEquals(2,namespaceVOs.size());\n  NamespaceVO namespaceVO=namespaceVOs.get(0);\n  assertEquals(4,namespaceVO.getItems().size());\n  assertEquals(\"a\",namespaceVO.getItems().get(0).getItem().getKey());\n  assertEquals(2,namespaceVO.getItemModifiedCnt());\n  assertEquals(appId,namespaceVO.getBaseInfo().getAppId());\n  assertEquals(clusterName,namespaceVO.getBaseInfo().getClusterName());\n  assertEquals(namespaceName,namespaceVO.getBaseInfo().getNamespaceName());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 379,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2510,
        "startLineNumber" : 48,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testFindNamespace(){\n  String appId=\"6666\";\n  String clusterName=\"default\";\n  String namespaceName=\"application\";\n  AppNamespace applicationAppNamespace=mock(AppNamespace.class);\n  AppNamespace hermesAppNamespace=mock(AppNamespace.class);\n  NamespaceDTO application=new NamespaceDTO();\n  application.setId(1);\n  application.setClusterName(clusterName);\n  application.setAppId(appId);\n  application.setNamespaceName(namespaceName);\n  NamespaceDTO hermes=new NamespaceDTO();\n  hermes.setId(2);\n  hermes.setClusterName(\"default\");\n  hermes.setAppId(appId);\n  hermes.setNamespaceName(\"hermes\");\n  List<NamespaceDTO> namespaces=Arrays.asList(application,hermes);\n  ReleaseDTO someRelease=new ReleaseDTO();\n  someRelease.setConfigurations(\"{\\\"a\\\":\\\"123\\\",\\\"b\\\":\\\"123\\\"}\");\n  ItemDTO i1=new ItemDTO(\"a\",\"123\",\"\",1);\n  ItemDTO i2=new ItemDTO(\"b\",\"1\",\"\",2);\n  ItemDTO i3=new ItemDTO(\"\",\"\",\"#dddd\",3);\n  ItemDTO i4=new ItemDTO(\"c\",\"1\",\"\",4);\n  List<ItemDTO> someItems=Arrays.asList(i1,i2,i3,i4);\n  when(applicationAppNamespace.getFormat()).thenReturn(ConfigFileFormat.Properties.getValue());\n  when(hermesAppNamespace.getFormat()).thenReturn(ConfigFileFormat.XML.getValue());\n  when(appNamespaceService.findByAppIdAndName(appId,namespaceName)).thenReturn(applicationAppNamespace);\n  when(appNamespaceService.findPublicAppNamespace(\"hermes\")).thenReturn(hermesAppNamespace);\n  when(namespaceAPI.findNamespaceByCluster(appId,Env.DEV,clusterName)).thenReturn(namespaces);\n  when(releaseService.loadLatestRelease(appId,Env.DEV,clusterName,namespaceName)).thenReturn(someRelease);\n  when(releaseService.loadLatestRelease(appId,Env.DEV,clusterName,\"hermes\")).thenReturn(someRelease);\n  when(itemService.findItems(appId,Env.DEV,clusterName,namespaceName)).thenReturn(someItems);\n  List<NamespaceVO> namespaceVOs=namespaceService.findNamespaces(appId,Env.DEV,clusterName);\n  assertEquals(2,namespaceVOs.size());\n  NamespaceVO namespaceVO=namespaceVOs.get(0);\n  assertEquals(4,namespaceVO.getItems().size());\n  assertEquals(\"a\",namespaceVO.getItems().get(0).getItem().getKey());\n  assertEquals(2,namespaceVO.getItemModifiedCnt());\n  assertEquals(appId,namespaceVO.getBaseInfo().getAppId());\n  assertEquals(clusterName,namespaceVO.getBaseInfo().getClusterName());\n  assertEquals(namespaceName,namespaceVO.getBaseInfo().getNamespaceName());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 385,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 64,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 20
      },
      "nodeContext" : "hermes.setId(2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.ctrip.framework.apollo.common.dto.NamespaceDTO"
  }, {
    "nodeContext" : "hermes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 65,
      "startColumnNumber" : 4,
      "endLineNumber" : 65,
      "endColumnNumber" : 10
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 36
      },
      "nodeContext" : "hermes.setClusterName(\"default\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 37
      },
      "nodeContext" : "hermes.setClusterName(\"default\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2470,
        "startLineNumber" : 49,
        "startColumnNumber" : 34,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String appId=\"6666\";\n  String clusterName=\"default\";\n  String namespaceName=\"application\";\n  AppNamespace applicationAppNamespace=mock(AppNamespace.class);\n  AppNamespace hermesAppNamespace=mock(AppNamespace.class);\n  NamespaceDTO application=new NamespaceDTO();\n  application.setId(1);\n  application.setClusterName(clusterName);\n  application.setAppId(appId);\n  application.setNamespaceName(namespaceName);\n  NamespaceDTO hermes=new NamespaceDTO();\n  hermes.setId(2);\n  hermes.setClusterName(\"default\");\n  hermes.setAppId(appId);\n  hermes.setNamespaceName(\"hermes\");\n  List<NamespaceDTO> namespaces=Arrays.asList(application,hermes);\n  ReleaseDTO someRelease=new ReleaseDTO();\n  someRelease.setConfigurations(\"{\\\"a\\\":\\\"123\\\",\\\"b\\\":\\\"123\\\"}\");\n  ItemDTO i1=new ItemDTO(\"a\",\"123\",\"\",1);\n  ItemDTO i2=new ItemDTO(\"b\",\"1\",\"\",2);\n  ItemDTO i3=new ItemDTO(\"\",\"\",\"#dddd\",3);\n  ItemDTO i4=new ItemDTO(\"c\",\"1\",\"\",4);\n  List<ItemDTO> someItems=Arrays.asList(i1,i2,i3,i4);\n  when(applicationAppNamespace.getFormat()).thenReturn(ConfigFileFormat.Properties.getValue());\n  when(hermesAppNamespace.getFormat()).thenReturn(ConfigFileFormat.XML.getValue());\n  when(appNamespaceService.findByAppIdAndName(appId,namespaceName)).thenReturn(applicationAppNamespace);\n  when(appNamespaceService.findPublicAppNamespace(\"hermes\")).thenReturn(hermesAppNamespace);\n  when(namespaceAPI.findNamespaceByCluster(appId,Env.DEV,clusterName)).thenReturn(namespaces);\n  when(releaseService.loadLatestRelease(appId,Env.DEV,clusterName,namespaceName)).thenReturn(someRelease);\n  when(releaseService.loadLatestRelease(appId,Env.DEV,clusterName,\"hermes\")).thenReturn(someRelease);\n  when(itemService.findItems(appId,Env.DEV,clusterName,namespaceName)).thenReturn(someItems);\n  List<NamespaceVO> namespaceVOs=namespaceService.findNamespaces(appId,Env.DEV,clusterName);\n  assertEquals(2,namespaceVOs.size());\n  NamespaceVO namespaceVO=namespaceVOs.get(0);\n  assertEquals(4,namespaceVO.getItems().size());\n  assertEquals(\"a\",namespaceVO.getItems().get(0).getItem().getKey());\n  assertEquals(2,namespaceVO.getItemModifiedCnt());\n  assertEquals(appId,namespaceVO.getBaseInfo().getAppId());\n  assertEquals(clusterName,namespaceVO.getBaseInfo().getClusterName());\n  assertEquals(namespaceName,namespaceVO.getBaseInfo().getNamespaceName());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 379,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2510,
        "startLineNumber" : 48,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testFindNamespace(){\n  String appId=\"6666\";\n  String clusterName=\"default\";\n  String namespaceName=\"application\";\n  AppNamespace applicationAppNamespace=mock(AppNamespace.class);\n  AppNamespace hermesAppNamespace=mock(AppNamespace.class);\n  NamespaceDTO application=new NamespaceDTO();\n  application.setId(1);\n  application.setClusterName(clusterName);\n  application.setAppId(appId);\n  application.setNamespaceName(namespaceName);\n  NamespaceDTO hermes=new NamespaceDTO();\n  hermes.setId(2);\n  hermes.setClusterName(\"default\");\n  hermes.setAppId(appId);\n  hermes.setNamespaceName(\"hermes\");\n  List<NamespaceDTO> namespaces=Arrays.asList(application,hermes);\n  ReleaseDTO someRelease=new ReleaseDTO();\n  someRelease.setConfigurations(\"{\\\"a\\\":\\\"123\\\",\\\"b\\\":\\\"123\\\"}\");\n  ItemDTO i1=new ItemDTO(\"a\",\"123\",\"\",1);\n  ItemDTO i2=new ItemDTO(\"b\",\"1\",\"\",2);\n  ItemDTO i3=new ItemDTO(\"\",\"\",\"#dddd\",3);\n  ItemDTO i4=new ItemDTO(\"c\",\"1\",\"\",4);\n  List<ItemDTO> someItems=Arrays.asList(i1,i2,i3,i4);\n  when(applicationAppNamespace.getFormat()).thenReturn(ConfigFileFormat.Properties.getValue());\n  when(hermesAppNamespace.getFormat()).thenReturn(ConfigFileFormat.XML.getValue());\n  when(appNamespaceService.findByAppIdAndName(appId,namespaceName)).thenReturn(applicationAppNamespace);\n  when(appNamespaceService.findPublicAppNamespace(\"hermes\")).thenReturn(hermesAppNamespace);\n  when(namespaceAPI.findNamespaceByCluster(appId,Env.DEV,clusterName)).thenReturn(namespaces);\n  when(releaseService.loadLatestRelease(appId,Env.DEV,clusterName,namespaceName)).thenReturn(someRelease);\n  when(releaseService.loadLatestRelease(appId,Env.DEV,clusterName,\"hermes\")).thenReturn(someRelease);\n  when(itemService.findItems(appId,Env.DEV,clusterName,namespaceName)).thenReturn(someItems);\n  List<NamespaceVO> namespaceVOs=namespaceService.findNamespaces(appId,Env.DEV,clusterName);\n  assertEquals(2,namespaceVOs.size());\n  NamespaceVO namespaceVO=namespaceVOs.get(0);\n  assertEquals(4,namespaceVO.getItems().size());\n  assertEquals(\"a\",namespaceVO.getItems().get(0).getItem().getKey());\n  assertEquals(2,namespaceVO.getItemModifiedCnt());\n  assertEquals(appId,namespaceVO.getBaseInfo().getAppId());\n  assertEquals(clusterName,namespaceVO.getBaseInfo().getClusterName());\n  assertEquals(namespaceName,namespaceVO.getBaseInfo().getNamespaceName());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 385,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 65,
        "endColumnNumber" : 37
      },
      "nodeContext" : "hermes.setClusterName(\"default\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.ctrip.framework.apollo.common.dto.NamespaceDTO"
  }, {
    "nodeContext" : "hermes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 66,
      "startColumnNumber" : 4,
      "endLineNumber" : 66,
      "endColumnNumber" : 10
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 66,
        "endColumnNumber" : 26
      },
      "nodeContext" : "hermes.setAppId(appId)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 66,
        "endColumnNumber" : 27
      },
      "nodeContext" : "hermes.setAppId(appId);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2470,
        "startLineNumber" : 49,
        "startColumnNumber" : 34,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String appId=\"6666\";\n  String clusterName=\"default\";\n  String namespaceName=\"application\";\n  AppNamespace applicationAppNamespace=mock(AppNamespace.class);\n  AppNamespace hermesAppNamespace=mock(AppNamespace.class);\n  NamespaceDTO application=new NamespaceDTO();\n  application.setId(1);\n  application.setClusterName(clusterName);\n  application.setAppId(appId);\n  application.setNamespaceName(namespaceName);\n  NamespaceDTO hermes=new NamespaceDTO();\n  hermes.setId(2);\n  hermes.setClusterName(\"default\");\n  hermes.setAppId(appId);\n  hermes.setNamespaceName(\"hermes\");\n  List<NamespaceDTO> namespaces=Arrays.asList(application,hermes);\n  ReleaseDTO someRelease=new ReleaseDTO();\n  someRelease.setConfigurations(\"{\\\"a\\\":\\\"123\\\",\\\"b\\\":\\\"123\\\"}\");\n  ItemDTO i1=new ItemDTO(\"a\",\"123\",\"\",1);\n  ItemDTO i2=new ItemDTO(\"b\",\"1\",\"\",2);\n  ItemDTO i3=new ItemDTO(\"\",\"\",\"#dddd\",3);\n  ItemDTO i4=new ItemDTO(\"c\",\"1\",\"\",4);\n  List<ItemDTO> someItems=Arrays.asList(i1,i2,i3,i4);\n  when(applicationAppNamespace.getFormat()).thenReturn(ConfigFileFormat.Properties.getValue());\n  when(hermesAppNamespace.getFormat()).thenReturn(ConfigFileFormat.XML.getValue());\n  when(appNamespaceService.findByAppIdAndName(appId,namespaceName)).thenReturn(applicationAppNamespace);\n  when(appNamespaceService.findPublicAppNamespace(\"hermes\")).thenReturn(hermesAppNamespace);\n  when(namespaceAPI.findNamespaceByCluster(appId,Env.DEV,clusterName)).thenReturn(namespaces);\n  when(releaseService.loadLatestRelease(appId,Env.DEV,clusterName,namespaceName)).thenReturn(someRelease);\n  when(releaseService.loadLatestRelease(appId,Env.DEV,clusterName,\"hermes\")).thenReturn(someRelease);\n  when(itemService.findItems(appId,Env.DEV,clusterName,namespaceName)).thenReturn(someItems);\n  List<NamespaceVO> namespaceVOs=namespaceService.findNamespaces(appId,Env.DEV,clusterName);\n  assertEquals(2,namespaceVOs.size());\n  NamespaceVO namespaceVO=namespaceVOs.get(0);\n  assertEquals(4,namespaceVO.getItems().size());\n  assertEquals(\"a\",namespaceVO.getItems().get(0).getItem().getKey());\n  assertEquals(2,namespaceVO.getItemModifiedCnt());\n  assertEquals(appId,namespaceVO.getBaseInfo().getAppId());\n  assertEquals(clusterName,namespaceVO.getBaseInfo().getClusterName());\n  assertEquals(namespaceName,namespaceVO.getBaseInfo().getNamespaceName());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 379,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2510,
        "startLineNumber" : 48,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testFindNamespace(){\n  String appId=\"6666\";\n  String clusterName=\"default\";\n  String namespaceName=\"application\";\n  AppNamespace applicationAppNamespace=mock(AppNamespace.class);\n  AppNamespace hermesAppNamespace=mock(AppNamespace.class);\n  NamespaceDTO application=new NamespaceDTO();\n  application.setId(1);\n  application.setClusterName(clusterName);\n  application.setAppId(appId);\n  application.setNamespaceName(namespaceName);\n  NamespaceDTO hermes=new NamespaceDTO();\n  hermes.setId(2);\n  hermes.setClusterName(\"default\");\n  hermes.setAppId(appId);\n  hermes.setNamespaceName(\"hermes\");\n  List<NamespaceDTO> namespaces=Arrays.asList(application,hermes);\n  ReleaseDTO someRelease=new ReleaseDTO();\n  someRelease.setConfigurations(\"{\\\"a\\\":\\\"123\\\",\\\"b\\\":\\\"123\\\"}\");\n  ItemDTO i1=new ItemDTO(\"a\",\"123\",\"\",1);\n  ItemDTO i2=new ItemDTO(\"b\",\"1\",\"\",2);\n  ItemDTO i3=new ItemDTO(\"\",\"\",\"#dddd\",3);\n  ItemDTO i4=new ItemDTO(\"c\",\"1\",\"\",4);\n  List<ItemDTO> someItems=Arrays.asList(i1,i2,i3,i4);\n  when(applicationAppNamespace.getFormat()).thenReturn(ConfigFileFormat.Properties.getValue());\n  when(hermesAppNamespace.getFormat()).thenReturn(ConfigFileFormat.XML.getValue());\n  when(appNamespaceService.findByAppIdAndName(appId,namespaceName)).thenReturn(applicationAppNamespace);\n  when(appNamespaceService.findPublicAppNamespace(\"hermes\")).thenReturn(hermesAppNamespace);\n  when(namespaceAPI.findNamespaceByCluster(appId,Env.DEV,clusterName)).thenReturn(namespaces);\n  when(releaseService.loadLatestRelease(appId,Env.DEV,clusterName,namespaceName)).thenReturn(someRelease);\n  when(releaseService.loadLatestRelease(appId,Env.DEV,clusterName,\"hermes\")).thenReturn(someRelease);\n  when(itemService.findItems(appId,Env.DEV,clusterName,namespaceName)).thenReturn(someItems);\n  List<NamespaceVO> namespaceVOs=namespaceService.findNamespaces(appId,Env.DEV,clusterName);\n  assertEquals(2,namespaceVOs.size());\n  NamespaceVO namespaceVO=namespaceVOs.get(0);\n  assertEquals(4,namespaceVO.getItems().size());\n  assertEquals(\"a\",namespaceVO.getItems().get(0).getItem().getKey());\n  assertEquals(2,namespaceVO.getItemModifiedCnt());\n  assertEquals(appId,namespaceVO.getBaseInfo().getAppId());\n  assertEquals(clusterName,namespaceVO.getBaseInfo().getClusterName());\n  assertEquals(namespaceName,namespaceVO.getBaseInfo().getNamespaceName());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 385,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 66,
        "startColumnNumber" : 4,
        "endLineNumber" : 66,
        "endColumnNumber" : 27
      },
      "nodeContext" : "hermes.setAppId(appId);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.ctrip.framework.apollo.common.dto.NamespaceDTO"
  }, {
    "nodeContext" : "hermes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 67,
      "startColumnNumber" : 4,
      "endLineNumber" : 67,
      "endColumnNumber" : 10
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 37
      },
      "nodeContext" : "hermes.setNamespaceName(\"hermes\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 38
      },
      "nodeContext" : "hermes.setNamespaceName(\"hermes\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2470,
        "startLineNumber" : 49,
        "startColumnNumber" : 34,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String appId=\"6666\";\n  String clusterName=\"default\";\n  String namespaceName=\"application\";\n  AppNamespace applicationAppNamespace=mock(AppNamespace.class);\n  AppNamespace hermesAppNamespace=mock(AppNamespace.class);\n  NamespaceDTO application=new NamespaceDTO();\n  application.setId(1);\n  application.setClusterName(clusterName);\n  application.setAppId(appId);\n  application.setNamespaceName(namespaceName);\n  NamespaceDTO hermes=new NamespaceDTO();\n  hermes.setId(2);\n  hermes.setClusterName(\"default\");\n  hermes.setAppId(appId);\n  hermes.setNamespaceName(\"hermes\");\n  List<NamespaceDTO> namespaces=Arrays.asList(application,hermes);\n  ReleaseDTO someRelease=new ReleaseDTO();\n  someRelease.setConfigurations(\"{\\\"a\\\":\\\"123\\\",\\\"b\\\":\\\"123\\\"}\");\n  ItemDTO i1=new ItemDTO(\"a\",\"123\",\"\",1);\n  ItemDTO i2=new ItemDTO(\"b\",\"1\",\"\",2);\n  ItemDTO i3=new ItemDTO(\"\",\"\",\"#dddd\",3);\n  ItemDTO i4=new ItemDTO(\"c\",\"1\",\"\",4);\n  List<ItemDTO> someItems=Arrays.asList(i1,i2,i3,i4);\n  when(applicationAppNamespace.getFormat()).thenReturn(ConfigFileFormat.Properties.getValue());\n  when(hermesAppNamespace.getFormat()).thenReturn(ConfigFileFormat.XML.getValue());\n  when(appNamespaceService.findByAppIdAndName(appId,namespaceName)).thenReturn(applicationAppNamespace);\n  when(appNamespaceService.findPublicAppNamespace(\"hermes\")).thenReturn(hermesAppNamespace);\n  when(namespaceAPI.findNamespaceByCluster(appId,Env.DEV,clusterName)).thenReturn(namespaces);\n  when(releaseService.loadLatestRelease(appId,Env.DEV,clusterName,namespaceName)).thenReturn(someRelease);\n  when(releaseService.loadLatestRelease(appId,Env.DEV,clusterName,\"hermes\")).thenReturn(someRelease);\n  when(itemService.findItems(appId,Env.DEV,clusterName,namespaceName)).thenReturn(someItems);\n  List<NamespaceVO> namespaceVOs=namespaceService.findNamespaces(appId,Env.DEV,clusterName);\n  assertEquals(2,namespaceVOs.size());\n  NamespaceVO namespaceVO=namespaceVOs.get(0);\n  assertEquals(4,namespaceVO.getItems().size());\n  assertEquals(\"a\",namespaceVO.getItems().get(0).getItem().getKey());\n  assertEquals(2,namespaceVO.getItemModifiedCnt());\n  assertEquals(appId,namespaceVO.getBaseInfo().getAppId());\n  assertEquals(clusterName,namespaceVO.getBaseInfo().getClusterName());\n  assertEquals(namespaceName,namespaceVO.getBaseInfo().getNamespaceName());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 379,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2510,
        "startLineNumber" : 48,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testFindNamespace(){\n  String appId=\"6666\";\n  String clusterName=\"default\";\n  String namespaceName=\"application\";\n  AppNamespace applicationAppNamespace=mock(AppNamespace.class);\n  AppNamespace hermesAppNamespace=mock(AppNamespace.class);\n  NamespaceDTO application=new NamespaceDTO();\n  application.setId(1);\n  application.setClusterName(clusterName);\n  application.setAppId(appId);\n  application.setNamespaceName(namespaceName);\n  NamespaceDTO hermes=new NamespaceDTO();\n  hermes.setId(2);\n  hermes.setClusterName(\"default\");\n  hermes.setAppId(appId);\n  hermes.setNamespaceName(\"hermes\");\n  List<NamespaceDTO> namespaces=Arrays.asList(application,hermes);\n  ReleaseDTO someRelease=new ReleaseDTO();\n  someRelease.setConfigurations(\"{\\\"a\\\":\\\"123\\\",\\\"b\\\":\\\"123\\\"}\");\n  ItemDTO i1=new ItemDTO(\"a\",\"123\",\"\",1);\n  ItemDTO i2=new ItemDTO(\"b\",\"1\",\"\",2);\n  ItemDTO i3=new ItemDTO(\"\",\"\",\"#dddd\",3);\n  ItemDTO i4=new ItemDTO(\"c\",\"1\",\"\",4);\n  List<ItemDTO> someItems=Arrays.asList(i1,i2,i3,i4);\n  when(applicationAppNamespace.getFormat()).thenReturn(ConfigFileFormat.Properties.getValue());\n  when(hermesAppNamespace.getFormat()).thenReturn(ConfigFileFormat.XML.getValue());\n  when(appNamespaceService.findByAppIdAndName(appId,namespaceName)).thenReturn(applicationAppNamespace);\n  when(appNamespaceService.findPublicAppNamespace(\"hermes\")).thenReturn(hermesAppNamespace);\n  when(namespaceAPI.findNamespaceByCluster(appId,Env.DEV,clusterName)).thenReturn(namespaces);\n  when(releaseService.loadLatestRelease(appId,Env.DEV,clusterName,namespaceName)).thenReturn(someRelease);\n  when(releaseService.loadLatestRelease(appId,Env.DEV,clusterName,\"hermes\")).thenReturn(someRelease);\n  when(itemService.findItems(appId,Env.DEV,clusterName,namespaceName)).thenReturn(someItems);\n  List<NamespaceVO> namespaceVOs=namespaceService.findNamespaces(appId,Env.DEV,clusterName);\n  assertEquals(2,namespaceVOs.size());\n  NamespaceVO namespaceVO=namespaceVOs.get(0);\n  assertEquals(4,namespaceVO.getItems().size());\n  assertEquals(\"a\",namespaceVO.getItems().get(0).getItem().getKey());\n  assertEquals(2,namespaceVO.getItemModifiedCnt());\n  assertEquals(appId,namespaceVO.getBaseInfo().getAppId());\n  assertEquals(clusterName,namespaceVO.getBaseInfo().getClusterName());\n  assertEquals(namespaceName,namespaceVO.getBaseInfo().getNamespaceName());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 385,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 67,
        "endColumnNumber" : 38
      },
      "nodeContext" : "hermes.setNamespaceName(\"hermes\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.ctrip.framework.apollo.common.dto.NamespaceDTO"
  }, {
    "nodeContext" : "hermes",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 68,
      "startColumnNumber" : 63,
      "endLineNumber" : 68,
      "endColumnNumber" : 69
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 68,
        "startColumnNumber" : 36,
        "endLineNumber" : 68,
        "endColumnNumber" : 70
      },
      "nodeContext" : "Arrays.asList(application,hermes)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 68,
        "startColumnNumber" : 23,
        "endLineNumber" : 68,
        "endColumnNumber" : 70
      },
      "nodeContext" : "namespaces=Arrays.asList(application,hermes)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 68,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 71
      },
      "nodeContext" : "List<NamespaceDTO> namespaces=Arrays.asList(application,hermes);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2470,
        "startLineNumber" : 49,
        "startColumnNumber" : 34,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String appId=\"6666\";\n  String clusterName=\"default\";\n  String namespaceName=\"application\";\n  AppNamespace applicationAppNamespace=mock(AppNamespace.class);\n  AppNamespace hermesAppNamespace=mock(AppNamespace.class);\n  NamespaceDTO application=new NamespaceDTO();\n  application.setId(1);\n  application.setClusterName(clusterName);\n  application.setAppId(appId);\n  application.setNamespaceName(namespaceName);\n  NamespaceDTO hermes=new NamespaceDTO();\n  hermes.setId(2);\n  hermes.setClusterName(\"default\");\n  hermes.setAppId(appId);\n  hermes.setNamespaceName(\"hermes\");\n  List<NamespaceDTO> namespaces=Arrays.asList(application,hermes);\n  ReleaseDTO someRelease=new ReleaseDTO();\n  someRelease.setConfigurations(\"{\\\"a\\\":\\\"123\\\",\\\"b\\\":\\\"123\\\"}\");\n  ItemDTO i1=new ItemDTO(\"a\",\"123\",\"\",1);\n  ItemDTO i2=new ItemDTO(\"b\",\"1\",\"\",2);\n  ItemDTO i3=new ItemDTO(\"\",\"\",\"#dddd\",3);\n  ItemDTO i4=new ItemDTO(\"c\",\"1\",\"\",4);\n  List<ItemDTO> someItems=Arrays.asList(i1,i2,i3,i4);\n  when(applicationAppNamespace.getFormat()).thenReturn(ConfigFileFormat.Properties.getValue());\n  when(hermesAppNamespace.getFormat()).thenReturn(ConfigFileFormat.XML.getValue());\n  when(appNamespaceService.findByAppIdAndName(appId,namespaceName)).thenReturn(applicationAppNamespace);\n  when(appNamespaceService.findPublicAppNamespace(\"hermes\")).thenReturn(hermesAppNamespace);\n  when(namespaceAPI.findNamespaceByCluster(appId,Env.DEV,clusterName)).thenReturn(namespaces);\n  when(releaseService.loadLatestRelease(appId,Env.DEV,clusterName,namespaceName)).thenReturn(someRelease);\n  when(releaseService.loadLatestRelease(appId,Env.DEV,clusterName,\"hermes\")).thenReturn(someRelease);\n  when(itemService.findItems(appId,Env.DEV,clusterName,namespaceName)).thenReturn(someItems);\n  List<NamespaceVO> namespaceVOs=namespaceService.findNamespaces(appId,Env.DEV,clusterName);\n  assertEquals(2,namespaceVOs.size());\n  NamespaceVO namespaceVO=namespaceVOs.get(0);\n  assertEquals(4,namespaceVO.getItems().size());\n  assertEquals(\"a\",namespaceVO.getItems().get(0).getItem().getKey());\n  assertEquals(2,namespaceVO.getItemModifiedCnt());\n  assertEquals(appId,namespaceVO.getBaseInfo().getAppId());\n  assertEquals(clusterName,namespaceVO.getBaseInfo().getClusterName());\n  assertEquals(namespaceName,namespaceVO.getBaseInfo().getNamespaceName());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 379,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2510,
        "startLineNumber" : 48,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testFindNamespace(){\n  String appId=\"6666\";\n  String clusterName=\"default\";\n  String namespaceName=\"application\";\n  AppNamespace applicationAppNamespace=mock(AppNamespace.class);\n  AppNamespace hermesAppNamespace=mock(AppNamespace.class);\n  NamespaceDTO application=new NamespaceDTO();\n  application.setId(1);\n  application.setClusterName(clusterName);\n  application.setAppId(appId);\n  application.setNamespaceName(namespaceName);\n  NamespaceDTO hermes=new NamespaceDTO();\n  hermes.setId(2);\n  hermes.setClusterName(\"default\");\n  hermes.setAppId(appId);\n  hermes.setNamespaceName(\"hermes\");\n  List<NamespaceDTO> namespaces=Arrays.asList(application,hermes);\n  ReleaseDTO someRelease=new ReleaseDTO();\n  someRelease.setConfigurations(\"{\\\"a\\\":\\\"123\\\",\\\"b\\\":\\\"123\\\"}\");\n  ItemDTO i1=new ItemDTO(\"a\",\"123\",\"\",1);\n  ItemDTO i2=new ItemDTO(\"b\",\"1\",\"\",2);\n  ItemDTO i3=new ItemDTO(\"\",\"\",\"#dddd\",3);\n  ItemDTO i4=new ItemDTO(\"c\",\"1\",\"\",4);\n  List<ItemDTO> someItems=Arrays.asList(i1,i2,i3,i4);\n  when(applicationAppNamespace.getFormat()).thenReturn(ConfigFileFormat.Properties.getValue());\n  when(hermesAppNamespace.getFormat()).thenReturn(ConfigFileFormat.XML.getValue());\n  when(appNamespaceService.findByAppIdAndName(appId,namespaceName)).thenReturn(applicationAppNamespace);\n  when(appNamespaceService.findPublicAppNamespace(\"hermes\")).thenReturn(hermesAppNamespace);\n  when(namespaceAPI.findNamespaceByCluster(appId,Env.DEV,clusterName)).thenReturn(namespaces);\n  when(releaseService.loadLatestRelease(appId,Env.DEV,clusterName,namespaceName)).thenReturn(someRelease);\n  when(releaseService.loadLatestRelease(appId,Env.DEV,clusterName,\"hermes\")).thenReturn(someRelease);\n  when(itemService.findItems(appId,Env.DEV,clusterName,namespaceName)).thenReturn(someItems);\n  List<NamespaceVO> namespaceVOs=namespaceService.findNamespaces(appId,Env.DEV,clusterName);\n  assertEquals(2,namespaceVOs.size());\n  NamespaceVO namespaceVO=namespaceVOs.get(0);\n  assertEquals(4,namespaceVO.getItems().size());\n  assertEquals(\"a\",namespaceVO.getItems().get(0).getItem().getKey());\n  assertEquals(2,namespaceVO.getItemModifiedCnt());\n  assertEquals(appId,namespaceVO.getBaseInfo().getAppId());\n  assertEquals(clusterName,namespaceVO.getBaseInfo().getClusterName());\n  assertEquals(namespaceName,namespaceVO.getBaseInfo().getNamespaceName());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 385,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 68,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 71
      },
      "nodeContext" : "List<NamespaceDTO> namespaces=Arrays.asList(application,hermes);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.ctrip.framework.apollo.common.dto.NamespaceDTO"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 64,
    "startColumnNumber" : 4,
    "endLineNumber" : 64,
    "endColumnNumber" : 10
  }, {
    "charLength" : 6,
    "startLineNumber" : 65,
    "startColumnNumber" : 4,
    "endLineNumber" : 65,
    "endColumnNumber" : 10
  }, {
    "charLength" : 6,
    "startLineNumber" : 66,
    "startColumnNumber" : 4,
    "endLineNumber" : 66,
    "endColumnNumber" : 10
  }, {
    "charLength" : 6,
    "startLineNumber" : 67,
    "startColumnNumber" : 4,
    "endLineNumber" : 67,
    "endColumnNumber" : 10
  }, {
    "charLength" : 6,
    "startLineNumber" : 68,
    "startColumnNumber" : 63,
    "endLineNumber" : 68,
    "endColumnNumber" : 69
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  } ]
}