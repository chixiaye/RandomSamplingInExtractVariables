{
  "id" : 72,
  "expression" : "new ColumnConverter()",
  "projectName" : "apache@shardingsphere",
  "commitID" : "897bcea9f4b0f5e33eb545470f28a35d68fccf60",
  "filePath" : "/shardingsphere-kernel/shardingsphere-sql-federation/shardingsphere-sql-federation-optimizer/src/main/java/org/apache/shardingsphere/sqlfederation/optimizer/converter/segment/projection/impl/ColumnProjectionConverter.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new ColumnConverter()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 40,
      "startColumnNumber" : 39,
      "endLineNumber" : 40,
      "endColumnNumber" : 60
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 40,
        "startColumnNumber" : 39,
        "endLineNumber" : 40,
        "endColumnNumber" : 89
      },
      "nodeContext" : "new ColumnConverter().convert(segment.getColumn())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 40,
        "startColumnNumber" : 30,
        "endLineNumber" : 40,
        "endColumnNumber" : 89
      },
      "nodeContext" : "column=new ColumnConverter().convert(segment.getColumn())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 40,
        "startColumnNumber" : 12,
        "endLineNumber" : 40,
        "endColumnNumber" : 90
      },
      "nodeContext" : "Optional<SqlNode> column=new ColumnConverter().convert(segment.getColumn());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 333,
        "startLineNumber" : 39,
        "startColumnNumber" : 44,
        "endLineNumber" : 43,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Optional<SqlNode> column=new ColumnConverter().convert(segment.getColumn());\n  SqlIdentifier alias=new SqlIdentifier(segment.getAlias().get(),SqlParserPos.ZERO);\n  return column.map(optional -> new SqlBasicCall(new SqlAsOperator(),Arrays.asList(optional,alias),SqlParserPos.ZERO));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 54,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 369,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 43,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (segment.getAlias().isPresent()) {\n  Optional<SqlNode> column=new ColumnConverter().convert(segment.getColumn());\n  SqlIdentifier alias=new SqlIdentifier(segment.getAlias().get(),SqlParserPos.ZERO);\n  return column.map(optional -> new SqlBasicCall(new SqlAsOperator(),Arrays.asList(optional,alias),SqlParserPos.ZERO));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 60,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 452,
        "startLineNumber" : 38,
        "startColumnNumber" : 76,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (segment.getAlias().isPresent()) {\n    Optional<SqlNode> column=new ColumnConverter().convert(segment.getColumn());\n    SqlIdentifier alias=new SqlIdentifier(segment.getAlias().get(),SqlParserPos.ZERO);\n    return column.map(optional -> new SqlBasicCall(new SqlAsOperator(),Arrays.asList(optional,alias),SqlParserPos.ZERO));\n  }\n  return new ColumnConverter().convert(segment.getColumn());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 538,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Optional<SqlNode> convert(final ColumnProjectionSegment segment){\n  if (segment.getAlias().isPresent()) {\n    Optional<SqlNode> column=new ColumnConverter().convert(segment.getColumn());\n    SqlIdentifier alias=new SqlIdentifier(segment.getAlias().get(),SqlParserPos.ZERO);\n    return column.map(optional -> new SqlBasicCall(new SqlAsOperator(),Arrays.asList(optional,alias),SqlParserPos.ZERO));\n  }\n  return new ColumnConverter().convert(segment.getColumn());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 85,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 40,
        "startColumnNumber" : 12,
        "endLineNumber" : 40,
        "endColumnNumber" : 90
      },
      "nodeContext" : "Optional<SqlNode> column=new ColumnConverter().convert(segment.getColumn());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "org.apache.shardingsphere.sqlfederation.optimizer.converter.segment.expression.impl.ColumnConverter"
  }, {
    "nodeContext" : "new ColumnConverter()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 44,
      "startColumnNumber" : 15,
      "endLineNumber" : 44,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 44,
        "startColumnNumber" : 15,
        "endLineNumber" : 44,
        "endColumnNumber" : 65
      },
      "nodeContext" : "new ColumnConverter().convert(segment.getColumn())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 66
      },
      "nodeContext" : "return new ColumnConverter().convert(segment.getColumn());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 452,
        "startLineNumber" : 38,
        "startColumnNumber" : 76,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (segment.getAlias().isPresent()) {\n    Optional<SqlNode> column=new ColumnConverter().convert(segment.getColumn());\n    SqlIdentifier alias=new SqlIdentifier(segment.getAlias().get(),SqlParserPos.ZERO);\n    return column.map(optional -> new SqlBasicCall(new SqlAsOperator(),Arrays.asList(optional,alias),SqlParserPos.ZERO));\n  }\n  return new ColumnConverter().convert(segment.getColumn());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 538,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 45,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Optional<SqlNode> convert(final ColumnProjectionSegment segment){\n  if (segment.getAlias().isPresent()) {\n    Optional<SqlNode> column=new ColumnConverter().convert(segment.getColumn());\n    SqlIdentifier alias=new SqlIdentifier(segment.getAlias().get(),SqlParserPos.ZERO);\n    return column.map(optional -> new SqlBasicCall(new SqlAsOperator(),Arrays.asList(optional,alias),SqlParserPos.ZERO));\n  }\n  return new ColumnConverter().convert(segment.getColumn());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 85,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 44,
        "endColumnNumber" : 66
      },
      "nodeContext" : "return new ColumnConverter().convert(segment.getColumn());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.shardingsphere.sqlfederation.optimizer.converter.segment.expression.impl.ColumnConverter"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 40,
    "startColumnNumber" : 39,
    "endLineNumber" : 40,
    "endColumnNumber" : 60
  }, {
    "charLength" : 21,
    "startLineNumber" : 44,
    "startColumnNumber" : 15,
    "endLineNumber" : 44,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}