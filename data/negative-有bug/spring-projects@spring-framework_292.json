{
  "id" : 292,
  "expression" : "expectedToBeConstant",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-expression/src/test/java/org/springframework/expression/spel/ListTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "expectedToBeConstant",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 150,
      "startColumnNumber" : 6,
      "endLineNumber" : 150,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 150,
        "startColumnNumber" : 2,
        "endLineNumber" : 155,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (expectedToBeConstant) {\n  assertTrue(inlineList.isConstant());\n}\n else {\n  assertFalse(inlineList.isConstant());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 405,
        "startLineNumber" : 144,
        "startColumnNumber" : 85,
        "endLineNumber" : 156,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  SpelExpressionParser parser=new SpelExpressionParser();\n  SpelExpression expression=(SpelExpression)parser.parseExpression(expressionText);\n  SpelNode node=expression.getAST();\n  assertTrue(node instanceof InlineList);\n  InlineList inlineList=(InlineList)node;\n  if (expectedToBeConstant) {\n    assertTrue(inlineList.isConstant());\n  }\n else {\n    assertFalse(inlineList.isConstant());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 61,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 489,
        "startLineNumber" : 144,
        "startColumnNumber" : 1,
        "endLineNumber" : 156,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private void checkConstantList(String expressionText,boolean expectedToBeConstant){\n  SpelExpressionParser parser=new SpelExpressionParser();\n  SpelExpression expression=(SpelExpression)parser.parseExpression(expressionText);\n  SpelNode node=expression.getAST();\n  assertTrue(node instanceof InlineList);\n  InlineList inlineList=(InlineList)node;\n  if (expectedToBeConstant) {\n    assertTrue(inlineList.isConstant());\n  }\n else {\n    assertFalse(inlineList.isConstant());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 72,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 150,
        "startColumnNumber" : 2,
        "endLineNumber" : 155,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (expectedToBeConstant) {\n  assertTrue(inlineList.isConstant());\n}\n else {\n  assertFalse(inlineList.isConstant());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 150,
    "startColumnNumber" : 6,
    "endLineNumber" : 150,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ ]
}