{
  "id" : 376,
  "expression" : "\"keep-alive\"",
  "projectName" : "Netflix@zuul",
  "commitID" : "f8ef3551d8dd57a512336315ec51bb6c0444c517",
  "filePath" : "/zuul-sample/src/main/java/com/netflix/zuul/sample/push/SampleSSEPushClientProtocolHandler.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"keep-alive\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 33,
      "startColumnNumber" : 42,
      "endLineNumber" : 33,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 33,
        "startColumnNumber" : 16,
        "endLineNumber" : 33,
        "endColumnNumber" : 55
      },
      "nodeContext" : "headers.add(\"Connection\",\"keep-alive\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 33,
        "startColumnNumber" : 16,
        "endLineNumber" : 33,
        "endColumnNumber" : 56
      },
      "nodeContext" : "headers.add(\"Connection\",\"keep-alive\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1276,
        "startLineNumber" : 28,
        "startColumnNumber" : 100,
        "endLineNumber" : 51,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  ctx.pipeline().fireUserEventTriggered(PushProtocol.SSE.getHandshakeCompleteEvent());\n  final DefaultHttpResponse resp=new DefaultHttpResponse(HTTP_1_1,HttpResponseStatus.OK);\n  final HttpHeaders headers=resp.headers();\n  headers.add(\"Connection\",\"keep-alive\");\n  headers.add(\"Content-Type\",\"text/event-stream\");\n  headers.add(\"Transfer-Encoding\",\"chunked\");\n  final ChannelFuture cf=ctx.channel().writeAndFlush(resp);\n  cf.addListener(future -> {\n    if (future.isSuccess()) {\n      ChannelPipeline pipeline=ctx.pipeline();\n      if (pipeline.get(HttpObjectAggregator.class) != null) {\n        pipeline.remove(HttpObjectAggregator.class);\n      }\n      if (pipeline.get(HttpContentCompressor.class) != null) {\n        pipeline.remove(HttpContentCompressor.class);\n      }\n      final String reconnetInterval=\"retry: \" + SSE_RETRY_BASE_INTERVAL.get() + \"\\r\\n\\r\\n\";\n      ctx.writeAndFlush(reconnetInterval);\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 136,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1364,
        "startLineNumber" : 28,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if ((req.method() == HttpMethod.GET) && (PushProtocol.SSE.getPath().equals(req.uri()))) {\n  ctx.pipeline().fireUserEventTriggered(PushProtocol.SSE.getHandshakeCompleteEvent());\n  final DefaultHttpResponse resp=new DefaultHttpResponse(HTTP_1_1,HttpResponseStatus.OK);\n  final HttpHeaders headers=resp.headers();\n  headers.add(\"Connection\",\"keep-alive\");\n  headers.add(\"Content-Type\",\"text/event-stream\");\n  headers.add(\"Transfer-Encoding\",\"chunked\");\n  final ChannelFuture cf=ctx.channel().writeAndFlush(resp);\n  cf.addListener(future -> {\n    if (future.isSuccess()) {\n      ChannelPipeline pipeline=ctx.pipeline();\n      if (pipeline.get(HttpObjectAggregator.class) != null) {\n        pipeline.remove(HttpObjectAggregator.class);\n      }\n      if (pipeline.get(HttpContentCompressor.class) != null) {\n        pipeline.remove(HttpContentCompressor.class);\n      }\n      final String reconnetInterval=\"retry: \" + SSE_RETRY_BASE_INTERVAL.get() + \"\\r\\n\\r\\n\";\n      ctx.writeAndFlush(reconnetInterval);\n    }\n  }\n);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 157,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1452,
        "startLineNumber" : 26,
        "startColumnNumber" : 46,
        "endLineNumber" : 52,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final FullHttpRequest req=(FullHttpRequest)mesg;\n  if ((req.method() == HttpMethod.GET) && (PushProtocol.SSE.getPath().equals(req.uri()))) {\n    ctx.pipeline().fireUserEventTriggered(PushProtocol.SSE.getHandshakeCompleteEvent());\n    final DefaultHttpResponse resp=new DefaultHttpResponse(HTTP_1_1,HttpResponseStatus.OK);\n    final HttpHeaders headers=resp.headers();\n    headers.add(\"Connection\",\"keep-alive\");\n    headers.add(\"Content-Type\",\"text/event-stream\");\n    headers.add(\"Transfer-Encoding\",\"chunked\");\n    final ChannelFuture cf=ctx.channel().writeAndFlush(resp);\n    cf.addListener(future -> {\n      if (future.isSuccess()) {\n        ChannelPipeline pipeline=ctx.pipeline();\n        if (pipeline.get(HttpObjectAggregator.class) != null) {\n          pipeline.remove(HttpObjectAggregator.class);\n        }\n        if (pipeline.get(HttpContentCompressor.class) != null) {\n          pipeline.remove(HttpContentCompressor.class);\n        }\n        final String reconnetInterval=\"retry: \" + SSE_RETRY_BASE_INTERVAL.get() + \"\\r\\n\\r\\n\";\n        ctx.writeAndFlush(reconnetInterval);\n      }\n    }\n);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 168,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1490,
        "startLineNumber" : 26,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (mesg instanceof FullHttpRequest) {\n  final FullHttpRequest req=(FullHttpRequest)mesg;\n  if ((req.method() == HttpMethod.GET) && (PushProtocol.SSE.getPath().equals(req.uri()))) {\n    ctx.pipeline().fireUserEventTriggered(PushProtocol.SSE.getHandshakeCompleteEvent());\n    final DefaultHttpResponse resp=new DefaultHttpResponse(HTTP_1_1,HttpResponseStatus.OK);\n    final HttpHeaders headers=resp.headers();\n    headers.add(\"Connection\",\"keep-alive\");\n    headers.add(\"Content-Type\",\"text/event-stream\");\n    headers.add(\"Transfer-Encoding\",\"chunked\");\n    final ChannelFuture cf=ctx.channel().writeAndFlush(resp);\n    cf.addListener(future -> {\n      if (future.isSuccess()) {\n        ChannelPipeline pipeline=ctx.pipeline();\n        if (pipeline.get(HttpObjectAggregator.class) != null) {\n          pipeline.remove(HttpObjectAggregator.class);\n        }\n        if (pipeline.get(HttpContentCompressor.class) != null) {\n          pipeline.remove(HttpContentCompressor.class);\n        }\n        final String reconnetInterval=\"retry: \" + SSE_RETRY_BASE_INTERVAL.get() + \"\\r\\n\\r\\n\";\n        ctx.writeAndFlush(reconnetInterval);\n      }\n    }\n);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 173,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1506,
        "startLineNumber" : 25,
        "startColumnNumber" : 97,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mesg instanceof FullHttpRequest) {\n    final FullHttpRequest req=(FullHttpRequest)mesg;\n    if ((req.method() == HttpMethod.GET) && (PushProtocol.SSE.getPath().equals(req.uri()))) {\n      ctx.pipeline().fireUserEventTriggered(PushProtocol.SSE.getHandshakeCompleteEvent());\n      final DefaultHttpResponse resp=new DefaultHttpResponse(HTTP_1_1,HttpResponseStatus.OK);\n      final HttpHeaders headers=resp.headers();\n      headers.add(\"Connection\",\"keep-alive\");\n      headers.add(\"Content-Type\",\"text/event-stream\");\n      headers.add(\"Transfer-Encoding\",\"chunked\");\n      final ChannelFuture cf=ctx.channel().writeAndFlush(resp);\n      cf.addListener(future -> {\n        if (future.isSuccess()) {\n          ChannelPipeline pipeline=ctx.pipeline();\n          if (pipeline.get(HttpObjectAggregator.class) != null) {\n            pipeline.remove(HttpObjectAggregator.class);\n          }\n          if (pipeline.get(HttpContentCompressor.class) != null) {\n            pipeline.remove(HttpContentCompressor.class);\n          }\n          final String reconnetInterval=\"retry: \" + SSE_RETRY_BASE_INTERVAL.get() + \"\\r\\n\\r\\n\";\n          ctx.writeAndFlush(reconnetInterval);\n        }\n      }\n);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 174,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1613,
        "startLineNumber" : 24,
        "startColumnNumber" : 4,
        "endLineNumber" : 53,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void channelRead(final ChannelHandlerContext ctx,final Object mesg) throws Exception {\n  if (mesg instanceof FullHttpRequest) {\n    final FullHttpRequest req=(FullHttpRequest)mesg;\n    if ((req.method() == HttpMethod.GET) && (PushProtocol.SSE.getPath().equals(req.uri()))) {\n      ctx.pipeline().fireUserEventTriggered(PushProtocol.SSE.getHandshakeCompleteEvent());\n      final DefaultHttpResponse resp=new DefaultHttpResponse(HTTP_1_1,HttpResponseStatus.OK);\n      final HttpHeaders headers=resp.headers();\n      headers.add(\"Connection\",\"keep-alive\");\n      headers.add(\"Content-Type\",\"text/event-stream\");\n      headers.add(\"Transfer-Encoding\",\"chunked\");\n      final ChannelFuture cf=ctx.channel().writeAndFlush(resp);\n      cf.addListener(future -> {\n        if (future.isSuccess()) {\n          ChannelPipeline pipeline=ctx.pipeline();\n          if (pipeline.get(HttpObjectAggregator.class) != null) {\n            pipeline.remove(HttpObjectAggregator.class);\n          }\n          if (pipeline.get(HttpContentCompressor.class) != null) {\n            pipeline.remove(HttpContentCompressor.class);\n          }\n          final String reconnetInterval=\"retry: \" + SSE_RETRY_BASE_INTERVAL.get() + \"\\r\\n\\r\\n\";\n          ctx.writeAndFlush(reconnetInterval);\n        }\n      }\n);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 192,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 33,
        "startColumnNumber" : 16,
        "endLineNumber" : 33,
        "endColumnNumber" : 56
      },
      "nodeContext" : "headers.add(\"Connection\",\"keep-alive\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 33,
    "startColumnNumber" : 42,
    "endLineNumber" : 33,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ ]
}