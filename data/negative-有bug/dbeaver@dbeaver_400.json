{
  "id" : 400,
  "expression" : "getWizard()",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.tasks.sql.ui/src/org/jkiss/dbeaver/tasks/ui/sql/SQLToolTaskWizardPageSettings.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "getWizard()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 231,
      "startColumnNumber" : 8,
      "endLineNumber" : 231,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 231,
        "startColumnNumber" : 8,
        "endLineNumber" : 231,
        "endColumnNumber" : 65
      },
      "nodeContext" : "getWizard().createTaskSaveButtons(controlsPanel,true,1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 231,
        "startColumnNumber" : 8,
        "endLineNumber" : 231,
        "endColumnNumber" : 66
      },
      "nodeContext" : "getWizard().createTaskSaveButtons(controlsPanel,true,1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 8389,
        "startLineNumber" : 84,
        "startColumnNumber" : 48,
        "endLineNumber" : 240,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  initializeDialogUnits(parent);\n  Composite composite=UIUtils.createComposite(parent,1);\n  composite.setLayoutData(new GridData(GridData.FILL_BOTH));\n  SashForm previewSplitter=new SashForm(composite,SWT.VERTICAL);\n  previewSplitter.setLayoutData(new GridData(GridData.FILL_BOTH));\n  SashForm settingsPanel=new SashForm(previewSplitter,SWT.HORIZONTAL);\n  Group objectsPanel;\n{\n    objectsPanel=UIUtils.createControlGroup(settingsPanel,TasksSQLUIMessages.sql_tool_task_wizard_page_settings_group_label_objects,2,GridData.FILL_BOTH,0);\n    objectsViewer=new TableViewer(objectsPanel,SWT.BORDER | SWT.MULTI | SWT.FULL_SELECTION);\n    objectsViewer.setContentProvider(new ListContentProvider());\n    objectsViewer.setLabelProvider(new ColumnLabelProvider(){\n      @Override public String getText(      Object element){\n        return DBUtils.getObjectFullName((DBPNamedObject)element,DBPEvaluationContext.UI);\n      }\n      @Override public Image getImage(      Object element){\n        return DBeaverIcons.getImage(DBValueFormatting.getObjectImage((DBPObject)element));\n      }\n    }\n);\n    GridData gd=new GridData(GridData.FILL_BOTH);\n    gd.heightHint=150;\n    gd.widthHint=200;\n    final Table objectTable=objectsViewer.getTable();\n    objectTable.setLayoutData(gd);\n    ToolBar buttonsToolbar=new ToolBar(objectsPanel,SWT.VERTICAL);\n    buttonsToolbar.setLayoutData(new GridData(GridData.VERTICAL_ALIGN_BEGINNING));\n    UIUtils.createToolItem(buttonsToolbar,TasksSQLUIMessages.sql_tool_task_wizard_page_settings_tool_item_text_add_string,UIIcon.ROW_ADD,new SelectionAdapter(){\n      @Override public void widgetSelected(      SelectionEvent e){\n        DBNProject projectNode=DBWorkbench.getPlatform().getNavigatorModel().getRoot().getProjectNode(sqlWizard.getProject());\n        SQLToolTaskObjectSelectorDialog objectListDialog=new SQLToolTaskObjectSelectorDialog(getShell(),projectNode,(TaskTypeDescriptor)sqlWizard.getTaskType());\n        if (objectListDialog.open() == IDialogConstants.OK_ID) {\n          for (          DBSObject object : objectListDialog.getSelectedObjects()) {\n            if (!selectedObjects.contains(object)) {\n              selectedObjects.add(object);\n            }\n          }\n          refreshObjects();\n          updatePageCompletion();\n        }\n      }\n    }\n);\n    ToolItem deleteItem=UIUtils.createToolItem(buttonsToolbar,TasksSQLUIMessages.sql_tool_task_wizard_page_settings_tool_item_text_remove_string,UIIcon.ROW_DELETE,new SelectionAdapter(){\n      @Override public void widgetSelected(      SelectionEvent e){\n        ISelection selection=objectsViewer.getSelection();\n        if (!selection.isEmpty() && selection instanceof IStructuredSelection) {\n          for (          Object element : ((IStructuredSelection)selection).toArray()) {\n            if (element instanceof DBSObject) {\n              selectedObjects.remove(element);\n            }\n          }\n          refreshObjects();\n          updatePageCompletion();\n        }\n      }\n    }\n);\n    UIUtils.createToolBarSeparator(buttonsToolbar,SWT.HORIZONTAL);\n    ToolItem[] moveButtons=new ToolItem[2];\n    moveButtons[0]=UIUtils.createToolItem(buttonsToolbar,TasksSQLUIMessages.sql_tool_task_wizard_page_settings_tool_item_text_move_script_up,UIIcon.ARROW_UP,new SelectionAdapter(){\n      @Override public void widgetSelected(      SelectionEvent e){\n        int selectionIndex=objectTable.getSelectionIndex();\n        if (selectionIndex > 0) {\n          DBSObject prevScript=selectedObjects.get(selectionIndex - 1);\n          selectedObjects.set(selectionIndex - 1,selectedObjects.get(selectionIndex));\n          selectedObjects.set(selectionIndex,prevScript);\n          refreshObjects();\n        }\n        moveButtons[0].setEnabled(selectionIndex > 1);\n        moveButtons[1].setEnabled(selectionIndex < objectTable.getItemCount() - 1);\n      }\n    }\n);\n    moveButtons[1]=UIUtils.createToolItem(buttonsToolbar,TasksSQLUIMessages.sql_tool_task_wizard_page_settings_tool_item_text_move_script_down,UIIcon.ARROW_DOWN,new SelectionAdapter(){\n      @Override public void widgetSelected(      SelectionEvent e){\n        int selectionIndex=objectTable.getSelectionIndex();\n        if (selectionIndex < objectTable.getItemCount() - 1) {\n          DBSObject nextScript=selectedObjects.get(selectionIndex + 1);\n          selectedObjects.set(selectionIndex + 1,selectedObjects.get(selectionIndex));\n          selectedObjects.set(selectionIndex,nextScript);\n          refreshObjects();\n        }\n        moveButtons[0].setEnabled(selectionIndex > 0);\n        moveButtons[1].setEnabled(selectionIndex < objectTable.getItemCount() - 2);\n      }\n    }\n);\n    objectsViewer.addSelectionChangedListener(event -> {\n      int selectionIndex=objectTable.getSelectionIndex();\n      deleteItem.setEnabled(selectionIndex >= 0);\n      moveButtons[0].setEnabled(selectionIndex > 0);\n      moveButtons[1].setEnabled(selectionIndex < objectTable.getItemCount() - 1);\n    }\n);\n    deleteItem.setEnabled(false);\n    moveButtons[0].setEnabled(false);\n    moveButtons[1].setEnabled(false);\n  }\n{\n    Group optionsPanel=UIUtils.createControlGroup(settingsPanel,TasksSQLUIMessages.sql_tool_task_wizard_page_settings_group_label_settings,1,GridData.FILL_BOTH,0);\n    taskOptionsViewer=new PropertyTreeViewer(optionsPanel,SWT.BORDER);\n    taskOptionsViewer.addPropertyChangeListener(event -> updateScriptPreview());\n  }\n  Composite previewPanel=UIUtils.createComposite(previewSplitter,1);\n  previewPanel.setLayout(new FillLayout());\n  serviceSQL=DBWorkbench.getService(UIServiceSQL.class);\n  if (serviceSQL != null) {\n    try {\n      sqlPreviewPanel=serviceSQL.createSQLPanel(UIUtils.getActiveWorkbenchWindow().getActivePage().getActivePart().getSite(),previewPanel,this,TasksSQLUIMessages.sql_tool_task_wizard_page_settings_sql_panel_name,true,\"\");\n    }\n catch (    DBException e) {\n      DBWorkbench.getPlatformUI().showError(TasksSQLUIMessages.sql_tool_task_wizard_page_settings_title_sql_preview_error,TasksSQLUIMessages.sql_tool_task_wizard_page_settings_message_sql_preview_panel,e);\n    }\n  }\n  Composite controlsPanel=UIUtils.createComposite(composite,2);\n  UIUtils.createDialogButton(controlsPanel,TasksSQLUIMessages.sql_tool_task_wizard_page_settings_dialog_button_label_copy,new SelectionAdapter(){\n    @Override public void widgetSelected(    SelectionEvent e){\n      String text=serviceSQL.getSQLPanelText(sqlPreviewPanel);\n      if (!CommonUtils.isEmpty(text)) {\n        UIUtils.setClipboardContents(getShell().getDisplay(),TextTransfer.getInstance(),text);\n      }\n    }\n  }\n);\n  getWizard().createTaskSaveButtons(controlsPanel,true,1);\n  loadSettings();\n  if (taskOptionsViewer.getTree().getItemCount() == 0) {\n    settingsPanel.setMaximizedControl(objectsPanel);\n  }\n  setControl(composite);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 871,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 8447,
        "startLineNumber" : 83,
        "startColumnNumber" : 4,
        "endLineNumber" : 240,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void createControl(Composite parent){\n  initializeDialogUnits(parent);\n  Composite composite=UIUtils.createComposite(parent,1);\n  composite.setLayoutData(new GridData(GridData.FILL_BOTH));\n  SashForm previewSplitter=new SashForm(composite,SWT.VERTICAL);\n  previewSplitter.setLayoutData(new GridData(GridData.FILL_BOTH));\n  SashForm settingsPanel=new SashForm(previewSplitter,SWT.HORIZONTAL);\n  Group objectsPanel;\n{\n    objectsPanel=UIUtils.createControlGroup(settingsPanel,TasksSQLUIMessages.sql_tool_task_wizard_page_settings_group_label_objects,2,GridData.FILL_BOTH,0);\n    objectsViewer=new TableViewer(objectsPanel,SWT.BORDER | SWT.MULTI | SWT.FULL_SELECTION);\n    objectsViewer.setContentProvider(new ListContentProvider());\n    objectsViewer.setLabelProvider(new ColumnLabelProvider(){\n      @Override public String getText(      Object element){\n        return DBUtils.getObjectFullName((DBPNamedObject)element,DBPEvaluationContext.UI);\n      }\n      @Override public Image getImage(      Object element){\n        return DBeaverIcons.getImage(DBValueFormatting.getObjectImage((DBPObject)element));\n      }\n    }\n);\n    GridData gd=new GridData(GridData.FILL_BOTH);\n    gd.heightHint=150;\n    gd.widthHint=200;\n    final Table objectTable=objectsViewer.getTable();\n    objectTable.setLayoutData(gd);\n    ToolBar buttonsToolbar=new ToolBar(objectsPanel,SWT.VERTICAL);\n    buttonsToolbar.setLayoutData(new GridData(GridData.VERTICAL_ALIGN_BEGINNING));\n    UIUtils.createToolItem(buttonsToolbar,TasksSQLUIMessages.sql_tool_task_wizard_page_settings_tool_item_text_add_string,UIIcon.ROW_ADD,new SelectionAdapter(){\n      @Override public void widgetSelected(      SelectionEvent e){\n        DBNProject projectNode=DBWorkbench.getPlatform().getNavigatorModel().getRoot().getProjectNode(sqlWizard.getProject());\n        SQLToolTaskObjectSelectorDialog objectListDialog=new SQLToolTaskObjectSelectorDialog(getShell(),projectNode,(TaskTypeDescriptor)sqlWizard.getTaskType());\n        if (objectListDialog.open() == IDialogConstants.OK_ID) {\n          for (          DBSObject object : objectListDialog.getSelectedObjects()) {\n            if (!selectedObjects.contains(object)) {\n              selectedObjects.add(object);\n            }\n          }\n          refreshObjects();\n          updatePageCompletion();\n        }\n      }\n    }\n);\n    ToolItem deleteItem=UIUtils.createToolItem(buttonsToolbar,TasksSQLUIMessages.sql_tool_task_wizard_page_settings_tool_item_text_remove_string,UIIcon.ROW_DELETE,new SelectionAdapter(){\n      @Override public void widgetSelected(      SelectionEvent e){\n        ISelection selection=objectsViewer.getSelection();\n        if (!selection.isEmpty() && selection instanceof IStructuredSelection) {\n          for (          Object element : ((IStructuredSelection)selection).toArray()) {\n            if (element instanceof DBSObject) {\n              selectedObjects.remove(element);\n            }\n          }\n          refreshObjects();\n          updatePageCompletion();\n        }\n      }\n    }\n);\n    UIUtils.createToolBarSeparator(buttonsToolbar,SWT.HORIZONTAL);\n    ToolItem[] moveButtons=new ToolItem[2];\n    moveButtons[0]=UIUtils.createToolItem(buttonsToolbar,TasksSQLUIMessages.sql_tool_task_wizard_page_settings_tool_item_text_move_script_up,UIIcon.ARROW_UP,new SelectionAdapter(){\n      @Override public void widgetSelected(      SelectionEvent e){\n        int selectionIndex=objectTable.getSelectionIndex();\n        if (selectionIndex > 0) {\n          DBSObject prevScript=selectedObjects.get(selectionIndex - 1);\n          selectedObjects.set(selectionIndex - 1,selectedObjects.get(selectionIndex));\n          selectedObjects.set(selectionIndex,prevScript);\n          refreshObjects();\n        }\n        moveButtons[0].setEnabled(selectionIndex > 1);\n        moveButtons[1].setEnabled(selectionIndex < objectTable.getItemCount() - 1);\n      }\n    }\n);\n    moveButtons[1]=UIUtils.createToolItem(buttonsToolbar,TasksSQLUIMessages.sql_tool_task_wizard_page_settings_tool_item_text_move_script_down,UIIcon.ARROW_DOWN,new SelectionAdapter(){\n      @Override public void widgetSelected(      SelectionEvent e){\n        int selectionIndex=objectTable.getSelectionIndex();\n        if (selectionIndex < objectTable.getItemCount() - 1) {\n          DBSObject nextScript=selectedObjects.get(selectionIndex + 1);\n          selectedObjects.set(selectionIndex + 1,selectedObjects.get(selectionIndex));\n          selectedObjects.set(selectionIndex,nextScript);\n          refreshObjects();\n        }\n        moveButtons[0].setEnabled(selectionIndex > 0);\n        moveButtons[1].setEnabled(selectionIndex < objectTable.getItemCount() - 2);\n      }\n    }\n);\n    objectsViewer.addSelectionChangedListener(event -> {\n      int selectionIndex=objectTable.getSelectionIndex();\n      deleteItem.setEnabled(selectionIndex >= 0);\n      moveButtons[0].setEnabled(selectionIndex > 0);\n      moveButtons[1].setEnabled(selectionIndex < objectTable.getItemCount() - 1);\n    }\n);\n    deleteItem.setEnabled(false);\n    moveButtons[0].setEnabled(false);\n    moveButtons[1].setEnabled(false);\n  }\n{\n    Group optionsPanel=UIUtils.createControlGroup(settingsPanel,TasksSQLUIMessages.sql_tool_task_wizard_page_settings_group_label_settings,1,GridData.FILL_BOTH,0);\n    taskOptionsViewer=new PropertyTreeViewer(optionsPanel,SWT.BORDER);\n    taskOptionsViewer.addPropertyChangeListener(event -> updateScriptPreview());\n  }\n  Composite previewPanel=UIUtils.createComposite(previewSplitter,1);\n  previewPanel.setLayout(new FillLayout());\n  serviceSQL=DBWorkbench.getService(UIServiceSQL.class);\n  if (serviceSQL != null) {\n    try {\n      sqlPreviewPanel=serviceSQL.createSQLPanel(UIUtils.getActiveWorkbenchWindow().getActivePage().getActivePart().getSite(),previewPanel,this,TasksSQLUIMessages.sql_tool_task_wizard_page_settings_sql_panel_name,true,\"\");\n    }\n catch (    DBException e) {\n      DBWorkbench.getPlatformUI().showError(TasksSQLUIMessages.sql_tool_task_wizard_page_settings_title_sql_preview_error,TasksSQLUIMessages.sql_tool_task_wizard_page_settings_message_sql_preview_panel,e);\n    }\n  }\n  Composite controlsPanel=UIUtils.createComposite(composite,2);\n  UIUtils.createDialogButton(controlsPanel,TasksSQLUIMessages.sql_tool_task_wizard_page_settings_dialog_button_label_copy,new SelectionAdapter(){\n    @Override public void widgetSelected(    SelectionEvent e){\n      String text=serviceSQL.getSQLPanelText(sqlPreviewPanel);\n      if (!CommonUtils.isEmpty(text)) {\n        UIUtils.setClipboardContents(getShell().getDisplay(),TextTransfer.getInstance(),text);\n      }\n    }\n  }\n);\n  getWizard().createTaskSaveButtons(controlsPanel,true,1);\n  loadSettings();\n  if (taskOptionsViewer.getTree().getItemCount() == 0) {\n    settingsPanel.setMaximizedControl(objectsPanel);\n  }\n  setControl(composite);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 881,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 231,
        "startColumnNumber" : 8,
        "endLineNumber" : 231,
        "endColumnNumber" : 66
      },
      "nodeContext" : "getWizard().createTaskSaveButtons(controlsPanel,true,1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.jkiss.dbeaver.tasks.ui.sql.SQLToolTaskWizard"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 231,
    "startColumnNumber" : 8,
    "endLineNumber" : 231,
    "endColumnNumber" : 19
  } ],
  "layoutRelationDataList" : [ ]
}