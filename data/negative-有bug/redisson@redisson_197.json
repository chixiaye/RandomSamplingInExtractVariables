{
  "id" : 197,
  "expression" : "isMaster",
  "projectName" : "redisson@redisson",
  "commitID" : "62b5e68c05b7475e1e0f98b4161aacb35d376b97",
  "filePath" : "/redisson-spring-data/redisson-spring-data-21/src/test/java/org/redisson/ClusterRunner.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "isMaster",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 90,
      "startColumnNumber" : 16,
      "endLineNumber" : 90,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 160,
        "startLineNumber" : 90,
        "startColumnNumber" : 12,
        "endLineNumber" : 94,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (isMaster) {\n  sb.append(\"master -\");\n}\n else {\n  sb.append(\"slave \").append(slaveMasters.get(nodeId));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1053,
        "startLineNumber" : 80,
        "startColumnNumber" : 48,
        "endLineNumber" : 107,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String nodeId=nodes.get(node);\n  StringBuilder sb=new StringBuilder();\n  String nodeAddr=node.getInitialBindAddr() + \":\" + node.getPort();\n  sb.append(nodeId).append(\" \");\n  sb.append(nodeAddr).append(\" \");\n  sb.append(me.equals(nodeAddr) ? \"myself,\" : \"\");\n  boolean isMaster=!slaveMasters.containsKey(nodeId);\n  if (isMaster) {\n    sb.append(\"master -\");\n  }\n else {\n    sb.append(\"slave \").append(slaveMasters.get(nodeId));\n  }\n  sb.append(\" \");\n  sb.append(\"0\").append(\" \");\n  sb.append(me.equals(nodeAddr) ? \"0\" : \"1\").append(\" \");\n  sb.append(c + 1).append(\" \");\n  sb.append(\"connected \");\n  if (isMaster) {\n    sb.append(getSlots(c,nodes.size() - slaveMasters.size()));\n    c++;\n  }\n  nodeConfig.add(sb.toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1093,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (RedisRunner node : nodes.keySet()) {\n  String nodeId=nodes.get(node);\n  StringBuilder sb=new StringBuilder();\n  String nodeAddr=node.getInitialBindAddr() + \":\" + node.getPort();\n  sb.append(nodeId).append(\" \");\n  sb.append(nodeAddr).append(\" \");\n  sb.append(me.equals(nodeAddr) ? \"myself,\" : \"\");\n  boolean isMaster=!slaveMasters.containsKey(nodeId);\n  if (isMaster) {\n    sb.append(\"master -\");\n  }\n else {\n    sb.append(\"slave \").append(slaveMasters.get(nodeId));\n  }\n  sb.append(\" \");\n  sb.append(\"0\").append(\" \");\n  sb.append(me.equals(nodeAddr) ? \"0\" : \"1\").append(\" \");\n  sb.append(c + 1).append(\" \");\n  sb.append(\"connected \");\n  if (isMaster) {\n    sb.append(getSlots(c,nodes.size() - slaveMasters.size()));\n    c++;\n  }\n  nodeConfig.add(sb.toString());\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 164,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1345,
        "startLineNumber" : 76,
        "startColumnNumber" : 62,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String me=runner.getInitialBindAddr() + \":\" + runner.getPort();\n  List<String> nodeConfig=new ArrayList<>();\n  int c=0;\n  for (  RedisRunner node : nodes.keySet()) {\n    String nodeId=nodes.get(node);\n    StringBuilder sb=new StringBuilder();\n    String nodeAddr=node.getInitialBindAddr() + \":\" + node.getPort();\n    sb.append(nodeId).append(\" \");\n    sb.append(nodeAddr).append(\" \");\n    sb.append(me.equals(nodeAddr) ? \"myself,\" : \"\");\n    boolean isMaster=!slaveMasters.containsKey(nodeId);\n    if (isMaster) {\n      sb.append(\"master -\");\n    }\n else {\n      sb.append(\"slave \").append(slaveMasters.get(nodeId));\n    }\n    sb.append(\" \");\n    sb.append(\"0\").append(\" \");\n    sb.append(me.equals(nodeAddr) ? \"0\" : \"1\").append(\" \");\n    sb.append(c + 1).append(\" \");\n    sb.append(\"connected \");\n    if (isMaster) {\n      sb.append(getSlots(c,nodes.size() - slaveMasters.size()));\n      c++;\n    }\n    nodeConfig.add(sb.toString());\n  }\n  nodeConfig.add(\"vars currentEpoch 0 lastVoteEpoch 0\");\n  return nodeConfig;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 202,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1403,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private List<String> getClusterConfig(RedisRunner runner){\n  String me=runner.getInitialBindAddr() + \":\" + runner.getPort();\n  List<String> nodeConfig=new ArrayList<>();\n  int c=0;\n  for (  RedisRunner node : nodes.keySet()) {\n    String nodeId=nodes.get(node);\n    StringBuilder sb=new StringBuilder();\n    String nodeAddr=node.getInitialBindAddr() + \":\" + node.getPort();\n    sb.append(nodeId).append(\" \");\n    sb.append(nodeAddr).append(\" \");\n    sb.append(me.equals(nodeAddr) ? \"myself,\" : \"\");\n    boolean isMaster=!slaveMasters.containsKey(nodeId);\n    if (isMaster) {\n      sb.append(\"master -\");\n    }\n else {\n      sb.append(\"slave \").append(slaveMasters.get(nodeId));\n    }\n    sb.append(\" \");\n    sb.append(\"0\").append(\" \");\n    sb.append(me.equals(nodeAddr) ? \"0\" : \"1\").append(\" \");\n    sb.append(c + 1).append(\" \");\n    sb.append(\"connected \");\n    if (isMaster) {\n      sb.append(getSlots(c,nodes.size() - slaveMasters.size()));\n      c++;\n    }\n    nodeConfig.add(sb.toString());\n  }\n  nodeConfig.add(\"vars currentEpoch 0 lastVoteEpoch 0\");\n  return nodeConfig;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 214,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 160,
        "startLineNumber" : 90,
        "startColumnNumber" : 12,
        "endLineNumber" : 94,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (isMaster) {\n  sb.append(\"master -\");\n}\n else {\n  sb.append(\"slave \").append(slaveMasters.get(nodeId));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "boolean"
  }, {
    "nodeContext" : "isMaster",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 102,
      "startColumnNumber" : 16,
      "endLineNumber" : 102,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 102,
        "startColumnNumber" : 12,
        "endLineNumber" : 105,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (isMaster) {\n  sb.append(getSlots(c,nodes.size() - slaveMasters.size()));\n  c++;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1053,
        "startLineNumber" : 80,
        "startColumnNumber" : 48,
        "endLineNumber" : 107,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String nodeId=nodes.get(node);\n  StringBuilder sb=new StringBuilder();\n  String nodeAddr=node.getInitialBindAddr() + \":\" + node.getPort();\n  sb.append(nodeId).append(\" \");\n  sb.append(nodeAddr).append(\" \");\n  sb.append(me.equals(nodeAddr) ? \"myself,\" : \"\");\n  boolean isMaster=!slaveMasters.containsKey(nodeId);\n  if (isMaster) {\n    sb.append(\"master -\");\n  }\n else {\n    sb.append(\"slave \").append(slaveMasters.get(nodeId));\n  }\n  sb.append(\" \");\n  sb.append(\"0\").append(\" \");\n  sb.append(me.equals(nodeAddr) ? \"0\" : \"1\").append(\" \");\n  sb.append(c + 1).append(\" \");\n  sb.append(\"connected \");\n  if (isMaster) {\n    sb.append(getSlots(c,nodes.size() - slaveMasters.size()));\n    c++;\n  }\n  nodeConfig.add(sb.toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 156,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1093,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 107,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (RedisRunner node : nodes.keySet()) {\n  String nodeId=nodes.get(node);\n  StringBuilder sb=new StringBuilder();\n  String nodeAddr=node.getInitialBindAddr() + \":\" + node.getPort();\n  sb.append(nodeId).append(\" \");\n  sb.append(nodeAddr).append(\" \");\n  sb.append(me.equals(nodeAddr) ? \"myself,\" : \"\");\n  boolean isMaster=!slaveMasters.containsKey(nodeId);\n  if (isMaster) {\n    sb.append(\"master -\");\n  }\n else {\n    sb.append(\"slave \").append(slaveMasters.get(nodeId));\n  }\n  sb.append(\" \");\n  sb.append(\"0\").append(\" \");\n  sb.append(me.equals(nodeAddr) ? \"0\" : \"1\").append(\" \");\n  sb.append(c + 1).append(\" \");\n  sb.append(\"connected \");\n  if (isMaster) {\n    sb.append(getSlots(c,nodes.size() - slaveMasters.size()));\n    c++;\n  }\n  nodeConfig.add(sb.toString());\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 164,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1345,
        "startLineNumber" : 76,
        "startColumnNumber" : 62,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String me=runner.getInitialBindAddr() + \":\" + runner.getPort();\n  List<String> nodeConfig=new ArrayList<>();\n  int c=0;\n  for (  RedisRunner node : nodes.keySet()) {\n    String nodeId=nodes.get(node);\n    StringBuilder sb=new StringBuilder();\n    String nodeAddr=node.getInitialBindAddr() + \":\" + node.getPort();\n    sb.append(nodeId).append(\" \");\n    sb.append(nodeAddr).append(\" \");\n    sb.append(me.equals(nodeAddr) ? \"myself,\" : \"\");\n    boolean isMaster=!slaveMasters.containsKey(nodeId);\n    if (isMaster) {\n      sb.append(\"master -\");\n    }\n else {\n      sb.append(\"slave \").append(slaveMasters.get(nodeId));\n    }\n    sb.append(\" \");\n    sb.append(\"0\").append(\" \");\n    sb.append(me.equals(nodeAddr) ? \"0\" : \"1\").append(\" \");\n    sb.append(c + 1).append(\" \");\n    sb.append(\"connected \");\n    if (isMaster) {\n      sb.append(getSlots(c,nodes.size() - slaveMasters.size()));\n      c++;\n    }\n    nodeConfig.add(sb.toString());\n  }\n  nodeConfig.add(\"vars currentEpoch 0 lastVoteEpoch 0\");\n  return nodeConfig;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 202,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1403,
        "startLineNumber" : 76,
        "startColumnNumber" : 4,
        "endLineNumber" : 110,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private List<String> getClusterConfig(RedisRunner runner){\n  String me=runner.getInitialBindAddr() + \":\" + runner.getPort();\n  List<String> nodeConfig=new ArrayList<>();\n  int c=0;\n  for (  RedisRunner node : nodes.keySet()) {\n    String nodeId=nodes.get(node);\n    StringBuilder sb=new StringBuilder();\n    String nodeAddr=node.getInitialBindAddr() + \":\" + node.getPort();\n    sb.append(nodeId).append(\" \");\n    sb.append(nodeAddr).append(\" \");\n    sb.append(me.equals(nodeAddr) ? \"myself,\" : \"\");\n    boolean isMaster=!slaveMasters.containsKey(nodeId);\n    if (isMaster) {\n      sb.append(\"master -\");\n    }\n else {\n      sb.append(\"slave \").append(slaveMasters.get(nodeId));\n    }\n    sb.append(\" \");\n    sb.append(\"0\").append(\" \");\n    sb.append(me.equals(nodeAddr) ? \"0\" : \"1\").append(\" \");\n    sb.append(c + 1).append(\" \");\n    sb.append(\"connected \");\n    if (isMaster) {\n      sb.append(getSlots(c,nodes.size() - slaveMasters.size()));\n      c++;\n    }\n    nodeConfig.add(sb.toString());\n  }\n  nodeConfig.add(\"vars currentEpoch 0 lastVoteEpoch 0\");\n  return nodeConfig;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 214,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 102,
        "startColumnNumber" : 12,
        "endLineNumber" : 105,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (isMaster) {\n  sb.append(getSlots(c,nodes.size() - slaveMasters.size()));\n  c++;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 90,
    "startColumnNumber" : 16,
    "endLineNumber" : 90,
    "endColumnNumber" : 24
  }, {
    "charLength" : 8,
    "startLineNumber" : 102,
    "startColumnNumber" : 16,
    "endLineNumber" : 102,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  } ]
}