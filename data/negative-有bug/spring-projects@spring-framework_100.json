{
  "id" : 100,
  "expression" : "MessageBuilder.withPayload(\"ABC\".getBytes())",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-messaging/src/test/java/org/springframework/messaging/handler/annotation/support/PayloadMethodArgumentResolverTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "MessageBuilder.withPayload(\"ABC\".getBytes())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 44,
      "startLineNumber" : 103,
      "startColumnNumber" : 23,
      "endLineNumber" : 103,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 103,
        "startColumnNumber" : 23,
        "endLineNumber" : 103,
        "endColumnNumber" : 75
      },
      "nodeContext" : "MessageBuilder.withPayload(\"ABC\".getBytes()).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 103,
        "startColumnNumber" : 13,
        "endLineNumber" : 103,
        "endColumnNumber" : 75
      },
      "nodeContext" : "message=MessageBuilder.withPayload(\"ABC\".getBytes()).build()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 103,
        "startColumnNumber" : 2,
        "endLineNumber" : 103,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Message<?> message=MessageBuilder.withPayload(\"ABC\".getBytes()).build();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 195,
        "startLineNumber" : 102,
        "startColumnNumber" : 48,
        "endLineNumber" : 107,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Message<?> message=MessageBuilder.withPayload(\"ABC\".getBytes()).build();\n  Object actual=this.resolver.resolveArgument(paramAnnotated,message);\n  assertThat(actual).isEqualTo(\"ABC\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 249,
        "startLineNumber" : 101,
        "startColumnNumber" : 1,
        "endLineNumber" : 107,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Test public void resolveRequired() throws Exception {\n  Message<?> message=MessageBuilder.withPayload(\"ABC\".getBytes()).build();\n  Object actual=this.resolver.resolveArgument(paramAnnotated,message);\n  assertThat(actual).isEqualTo(\"ABC\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 43,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 103,
        "startColumnNumber" : 2,
        "endLineNumber" : 103,
        "endColumnNumber" : 76
      },
      "nodeContext" : "Message<?> message=MessageBuilder.withPayload(\"ABC\".getBytes()).build();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "org.springframework.messaging.support.MessageBuilder<byte[]>"
  } ],
  "positionList" : [ {
    "charLength" : 44,
    "startLineNumber" : 103,
    "startColumnNumber" : 23,
    "endLineNumber" : 103,
    "endColumnNumber" : 67
  } ],
  "layoutRelationDataList" : [ ]
}