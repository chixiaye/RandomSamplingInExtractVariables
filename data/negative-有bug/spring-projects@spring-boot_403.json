{
  "id" : 403,
  "expression" : "ZipEntry.STORED",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-project/spring-boot-tools/spring-boot-loader/src/test/java/org/springframework/boot/loader/TestJarCreator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ZipEntry.STORED",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 70,
      "startColumnNumber" : 24,
      "endLineNumber" : 70,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 70,
        "startColumnNumber" : 2,
        "endLineNumber" : 70,
        "endColumnNumber" : 40
      },
      "nodeContext" : "nestedEntry.setMethod(ZipEntry.STORED)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 70,
        "startColumnNumber" : 2,
        "endLineNumber" : 70,
        "endColumnNumber" : 41
      },
      "nodeContext" : "nestedEntry.setMethod(ZipEntry.STORED);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 558,
        "startLineNumber" : 58,
        "startColumnNumber" : 66,
        "endLineNumber" : 74,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  JarEntry nestedEntry=new JarEntry(name);\n  byte[] nestedJarData=getNestedJarData();\n  nestedEntry.setSize(nestedJarData.length);\n  nestedEntry.setCompressedSize(nestedJarData.length);\n  if (unpackNested) {\n    nestedEntry.setComment(\"UNPACK:0000000000000000000000000000000000000000\");\n  }\n  CRC32 crc32=new CRC32();\n  crc32.update(nestedJarData);\n  nestedEntry.setCrc(crc32.getValue());\n  nestedEntry.setMethod(ZipEntry.STORED);\n  jarOutputStream.putNextEntry(nestedEntry);\n  jarOutputStream.write(nestedJarData);\n  jarOutputStream.closeEntry();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 696,
        "startLineNumber" : 57,
        "startColumnNumber" : 1,
        "endLineNumber" : 74,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private static void writeNestedEntry(String name,boolean unpackNested,JarOutputStream jarOutputStream) throws Exception, IOException {\n  JarEntry nestedEntry=new JarEntry(name);\n  byte[] nestedJarData=getNestedJarData();\n  nestedEntry.setSize(nestedJarData.length);\n  nestedEntry.setCompressedSize(nestedJarData.length);\n  if (unpackNested) {\n    nestedEntry.setComment(\"UNPACK:0000000000000000000000000000000000000000\");\n  }\n  CRC32 crc32=new CRC32();\n  crc32.update(nestedJarData);\n  nestedEntry.setCrc(crc32.getValue());\n  nestedEntry.setMethod(ZipEntry.STORED);\n  jarOutputStream.putNextEntry(nestedEntry);\n  jarOutputStream.write(nestedJarData);\n  jarOutputStream.closeEntry();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 101,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 70,
        "startColumnNumber" : 2,
        "endLineNumber" : 70,
        "endColumnNumber" : 41
      },
      "nodeContext" : "nestedEntry.setMethod(ZipEntry.STORED);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 70,
    "startColumnNumber" : 24,
    "endLineNumber" : 70,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ ]
}