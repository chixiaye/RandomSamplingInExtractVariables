{
  "id" : 97,
  "expression" : "cs == null",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/main/java/io/reactivex/internal/operators/completable/CompletableUsing.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "cs == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 66,
      "startColumnNumber" : 12,
      "endLineNumber" : 66,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 189,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (cs == null) {\n  s.onSubscribe(EmptyDisposable.INSTANCE);\n  s.onError(new NullPointerException(\"The completable supplied is null\"));\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2835,
        "startLineNumber" : 45,
        "startColumnNumber" : 66,
        "endLineNumber" : 137,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final R resource;\n  try {\n    resource=resourceSupplier.get();\n  }\n catch (  Throwable e) {\n    s.onSubscribe(EmptyDisposable.INSTANCE);\n    s.onError(e);\n    return;\n  }\n  CompletableConsumable cs;\n  try {\n    cs=completableFunction.apply(resource);\n  }\n catch (  Throwable e) {\n    s.onSubscribe(EmptyDisposable.INSTANCE);\n    s.onError(e);\n    return;\n  }\n  if (cs == null) {\n    s.onSubscribe(EmptyDisposable.INSTANCE);\n    s.onError(new NullPointerException(\"The completable supplied is null\"));\n    return;\n  }\n  final AtomicBoolean once=new AtomicBoolean();\n  cs.subscribe(new CompletableSubscriber(){\n    Disposable d;\n    void disposeThis(){\n      d.dispose();\n      if (once.compareAndSet(false,true)) {\n        try {\n          disposer.accept(resource);\n        }\n catch (        Throwable ex) {\n          RxJavaPlugins.onError(ex);\n        }\n      }\n    }\n    @Override public void onComplete(){\n      if (eager) {\n        if (once.compareAndSet(false,true)) {\n          try {\n            disposer.accept(resource);\n          }\n catch (          Throwable ex) {\n            s.onError(ex);\n            return;\n          }\n        }\n      }\n      s.onComplete();\n      if (!eager) {\n        disposeThis();\n      }\n    }\n    @Override public void onError(    Throwable e){\n      if (eager) {\n        if (once.compareAndSet(false,true)) {\n          try {\n            disposer.accept(resource);\n          }\n catch (          Throwable ex) {\n            e=new CompositeException(ex,e);\n          }\n        }\n      }\n      s.onError(e);\n      if (!eager) {\n        disposeThis();\n      }\n    }\n    @Override public void onSubscribe(    Disposable d){\n      this.d=d;\n      s.onSubscribe(Disposables.from(new Runnable(){\n        @Override public void run(){\n          disposeThis();\n        }\n      }\n));\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 282,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2912,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 137,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected void subscribeActual(final CompletableSubscriber s){\n  final R resource;\n  try {\n    resource=resourceSupplier.get();\n  }\n catch (  Throwable e) {\n    s.onSubscribe(EmptyDisposable.INSTANCE);\n    s.onError(e);\n    return;\n  }\n  CompletableConsumable cs;\n  try {\n    cs=completableFunction.apply(resource);\n  }\n catch (  Throwable e) {\n    s.onSubscribe(EmptyDisposable.INSTANCE);\n    s.onError(e);\n    return;\n  }\n  if (cs == null) {\n    s.onSubscribe(EmptyDisposable.INSTANCE);\n    s.onError(new NullPointerException(\"The completable supplied is null\"));\n    return;\n  }\n  final AtomicBoolean once=new AtomicBoolean();\n  cs.subscribe(new CompletableSubscriber(){\n    Disposable d;\n    void disposeThis(){\n      d.dispose();\n      if (once.compareAndSet(false,true)) {\n        try {\n          disposer.accept(resource);\n        }\n catch (        Throwable ex) {\n          RxJavaPlugins.onError(ex);\n        }\n      }\n    }\n    @Override public void onComplete(){\n      if (eager) {\n        if (once.compareAndSet(false,true)) {\n          try {\n            disposer.accept(resource);\n          }\n catch (          Throwable ex) {\n            s.onError(ex);\n            return;\n          }\n        }\n      }\n      s.onComplete();\n      if (!eager) {\n        disposeThis();\n      }\n    }\n    @Override public void onError(    Throwable e){\n      if (eager) {\n        if (once.compareAndSet(false,true)) {\n          try {\n            disposer.accept(resource);\n          }\n catch (          Throwable ex) {\n            e=new CompositeException(ex,e);\n          }\n        }\n      }\n      s.onError(e);\n      if (!eager) {\n        disposeThis();\n      }\n    }\n    @Override public void onSubscribe(    Disposable d){\n      this.d=d;\n      s.onSubscribe(Disposables.from(new Runnable(){\n        @Override public void run(){\n          disposeThis();\n        }\n      }\n));\n    }\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 293,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 189,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (cs == null) {\n  s.onSubscribe(EmptyDisposable.INSTANCE);\n  s.onError(new NullPointerException(\"The completable supplied is null\"));\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 66,
    "startColumnNumber" : 12,
    "endLineNumber" : 66,
    "endColumnNumber" : 22
  } ],
  "layoutRelationDataList" : [ ]
}