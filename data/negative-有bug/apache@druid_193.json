{
  "id" : 193,
  "expression" : "lagStats.getAvgLag()",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/server/src/test/java/org/apache/druid/indexing/NoopSupervisorSpecTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "lagStats.getAvgLag()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 56,
      "startColumnNumber" : 20,
      "endLineNumber" : 56,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 56,
        "startColumnNumber" : 11,
        "endLineNumber" : 56,
        "endColumnNumber" : 40
      },
      "nodeContext" : "avgLag=lagStats.getAvgLag()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 56,
        "startColumnNumber" : 6,
        "endLineNumber" : 56,
        "endColumnNumber" : 41
      },
      "nodeContext" : "long avgLag=lagStats.getAvgLag();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 888,
        "startLineNumber" : 38,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  NoopSupervisorSpec noopSupervisorSpec=new NoopSupervisorSpec(null,Collections.singletonList(\"datasource1\"));\n  Supervisor supervisor=noopSupervisorSpec.createSupervisor();\n  SupervisorTaskAutoScaler autoscaler=noopSupervisorSpec.createAutoscaler(supervisor);\n  Assert.assertNull(autoscaler);\n  Callable<Integer> noop=new Callable<Integer>(){\n    @Override public Integer call(){\n      return -1;\n    }\n  }\n;\n  int count=supervisor.getActiveTaskGroupsCount();\n  Assert.assertEquals(count,-1);\n  LagStats lagStats=supervisor.computeLagStats();\n  long totalLag=lagStats.getTotalLag();\n  long avgLag=lagStats.getAvgLag();\n  long maxLag=lagStats.getMaxLag();\n  Assert.assertEquals(totalLag,0);\n  Assert.assertEquals(avgLag,0);\n  Assert.assertEquals(maxLag,0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 123,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 939,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  NoopSupervisorSpec noopSupervisorSpec=new NoopSupervisorSpec(null,Collections.singletonList(\"datasource1\"));\n  Supervisor supervisor=noopSupervisorSpec.createSupervisor();\n  SupervisorTaskAutoScaler autoscaler=noopSupervisorSpec.createAutoscaler(supervisor);\n  Assert.assertNull(autoscaler);\n  Callable<Integer> noop=new Callable<Integer>(){\n    @Override public Integer call(){\n      return -1;\n    }\n  }\n;\n  int count=supervisor.getActiveTaskGroupsCount();\n  Assert.assertEquals(count,-1);\n  LagStats lagStats=supervisor.computeLagStats();\n  long totalLag=lagStats.getTotalLag();\n  long avgLag=lagStats.getAvgLag();\n  long maxLag=lagStats.getMaxLag();\n  Assert.assertEquals(totalLag,0);\n  Assert.assertEquals(avgLag,0);\n  Assert.assertEquals(maxLag,0);\n}\n catch (Exception ex) {\n  e=ex;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 134,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 999,
        "startLineNumber" : 36,
        "startColumnNumber" : 2,
        "endLineNumber" : 66,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Exception e=null;\n  try {\n    NoopSupervisorSpec noopSupervisorSpec=new NoopSupervisorSpec(null,Collections.singletonList(\"datasource1\"));\n    Supervisor supervisor=noopSupervisorSpec.createSupervisor();\n    SupervisorTaskAutoScaler autoscaler=noopSupervisorSpec.createAutoscaler(supervisor);\n    Assert.assertNull(autoscaler);\n    Callable<Integer> noop=new Callable<Integer>(){\n      @Override public Integer call(){\n        return -1;\n      }\n    }\n;\n    int count=supervisor.getActiveTaskGroupsCount();\n    Assert.assertEquals(count,-1);\n    LagStats lagStats=supervisor.computeLagStats();\n    long totalLag=lagStats.getTotalLag();\n    long avgLag=lagStats.getAvgLag();\n    long maxLag=lagStats.getMaxLag();\n    Assert.assertEquals(totalLag,0);\n    Assert.assertEquals(avgLag,0);\n    Assert.assertEquals(maxLag,0);\n  }\n catch (  Exception ex) {\n    e=ex;\n  }\n  Assert.assertNull(e);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1060,
        "startLineNumber" : 34,
        "startColumnNumber" : 2,
        "endLineNumber" : 66,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testNoopSupervisorSpecWithAutoscaler(){\n  Exception e=null;\n  try {\n    NoopSupervisorSpec noopSupervisorSpec=new NoopSupervisorSpec(null,Collections.singletonList(\"datasource1\"));\n    Supervisor supervisor=noopSupervisorSpec.createSupervisor();\n    SupervisorTaskAutoScaler autoscaler=noopSupervisorSpec.createAutoscaler(supervisor);\n    Assert.assertNull(autoscaler);\n    Callable<Integer> noop=new Callable<Integer>(){\n      @Override public Integer call(){\n        return -1;\n      }\n    }\n;\n    int count=supervisor.getActiveTaskGroupsCount();\n    Assert.assertEquals(count,-1);\n    LagStats lagStats=supervisor.computeLagStats();\n    long totalLag=lagStats.getTotalLag();\n    long avgLag=lagStats.getAvgLag();\n    long maxLag=lagStats.getMaxLag();\n    Assert.assertEquals(totalLag,0);\n    Assert.assertEquals(avgLag,0);\n    Assert.assertEquals(maxLag,0);\n  }\n catch (  Exception ex) {\n    e=ex;\n  }\n  Assert.assertNull(e);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 152,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 56,
        "startColumnNumber" : 6,
        "endLineNumber" : 56,
        "endColumnNumber" : 41
      },
      "nodeContext" : "long avgLag=lagStats.getAvgLag();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 56,
    "startColumnNumber" : 20,
    "endLineNumber" : 56,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ ]
}