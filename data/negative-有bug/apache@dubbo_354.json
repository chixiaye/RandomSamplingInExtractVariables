{
  "id" : 354,
  "expression" : "argument2",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-config/dubbo-config-api/src/test/java/org/apache/dubbo/config/bootstrap/builders/ArgumentBuilderTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "argument2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 61,
      "startColumnNumber" : 44,
      "endLineNumber" : 61,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 54
      },
      "nodeContext" : "Assertions.assertNotSame(argument1,argument2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Assertions.assertNotSame(argument1,argument2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 454,
        "startLineNumber" : 50,
        "startColumnNumber" : 17,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ArgumentBuilder builder=new ArgumentBuilder();\n  builder.index(1).type(\"int\").callback(true);\n  ArgumentConfig argument1=builder.build();\n  ArgumentConfig argument2=builder.build();\n  Assertions.assertTrue(argument1.isCallback());\n  Assertions.assertEquals(\"int\",argument1.getType());\n  Assertions.assertEquals(1,argument1.getIndex());\n  Assertions.assertNotSame(argument1,argument2);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 65,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 477,
        "startLineNumber" : 49,
        "startColumnNumber" : 4,
        "endLineNumber" : 62,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test void build(){\n  ArgumentBuilder builder=new ArgumentBuilder();\n  builder.index(1).type(\"int\").callback(true);\n  ArgumentConfig argument1=builder.build();\n  ArgumentConfig argument2=builder.build();\n  Assertions.assertTrue(argument1.isCallback());\n  Assertions.assertEquals(\"int\",argument1.getType());\n  Assertions.assertEquals(1,argument1.getIndex());\n  Assertions.assertNotSame(argument1,argument2);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 70,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Assertions.assertNotSame(argument1,argument2);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.config.ArgumentConfig"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 61,
    "startColumnNumber" : 44,
    "endLineNumber" : 61,
    "endColumnNumber" : 53
  } ],
  "layoutRelationDataList" : [ ]
}