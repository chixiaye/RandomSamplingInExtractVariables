{
  "id" : 370,
  "expression" : "Arrays.asList(mediaSources)",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/core/src/main/java/com/google/android/exoplayer2/source/MergingMediaSource.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Arrays.asList(mediaSources)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 149,
      "startColumnNumber" : 45,
      "endLineNumber" : 149,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 149,
        "startColumnNumber" : 29,
        "endLineNumber" : 149,
        "endColumnNumber" : 73
      },
      "nodeContext" : "new ArrayList<>(Arrays.asList(mediaSources))",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 149,
        "startColumnNumber" : 4,
        "endLineNumber" : 149,
        "endColumnNumber" : 73
      },
      "nodeContext" : "pendingTimelineSources=new ArrayList<>(Arrays.asList(mediaSources))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 149,
        "startColumnNumber" : 4,
        "endLineNumber" : 149,
        "endColumnNumber" : 74
      },
      "nodeContext" : "pendingTimelineSources=new ArrayList<>(Arrays.asList(mediaSources));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 552,
        "startLineNumber" : 144,
        "startColumnNumber" : 35,
        "endLineNumber" : 155,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  this.adjustPeriodTimeOffsets=adjustPeriodTimeOffsets;\n  this.clipDurations=clipDurations;\n  this.mediaSources=mediaSources;\n  this.compositeSequenceableLoaderFactory=compositeSequenceableLoaderFactory;\n  pendingTimelineSources=new ArrayList<>(Arrays.asList(mediaSources));\n  periodCount=PERIOD_COUNT_UNSET;\n  timelines=new Timeline[mediaSources.length];\n  periodTimeOffsetsUs=new long[0][];\n  clippedDurationsUs=new HashMap<>();\n  clippedMediaPeriods=MultimapBuilder.hashKeys().arrayListValues().build();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1342,
        "startLineNumber" : 128,
        "startColumnNumber" : 2,
        "endLineNumber" : 155,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Creates a merging media source.\n * @param adjustPeriodTimeOffsets Whether to adjust timestamps of the merged media sources to allstart at the same time.\n * @param clipDurations Whether to clip the durations of the media sources to match the shortestduration.\n * @param compositeSequenceableLoaderFactory A factory to create composite {@link SequenceableLoader}s for when this media source loads data from multiple streams (video, audio etc...).\n * @param mediaSources The {@link MediaSource MediaSources} to merge.\n */\npublic MergingMediaSource(boolean adjustPeriodTimeOffsets,boolean clipDurations,CompositeSequenceableLoaderFactory compositeSequenceableLoaderFactory,MediaSource... mediaSources){\n  this.adjustPeriodTimeOffsets=adjustPeriodTimeOffsets;\n  this.clipDurations=clipDurations;\n  this.mediaSources=mediaSources;\n  this.compositeSequenceableLoaderFactory=compositeSequenceableLoaderFactory;\n  pendingTimelineSources=new ArrayList<>(Arrays.asList(mediaSources));\n  periodCount=PERIOD_COUNT_UNSET;\n  timelines=new Timeline[mediaSources.length];\n  periodTimeOffsetsUs=new long[0][];\n  clippedDurationsUs=new HashMap<>();\n  clippedMediaPeriods=MultimapBuilder.hashKeys().arrayListValues().build();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 95,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 149,
        "startColumnNumber" : 4,
        "endLineNumber" : 149,
        "endColumnNumber" : 74
      },
      "nodeContext" : "pendingTimelineSources=new ArrayList<>(Arrays.asList(mediaSources));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "java.util.List<com.google.android.exoplayer2.source.MediaSource>"
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 149,
    "startColumnNumber" : 45,
    "endLineNumber" : 149,
    "endColumnNumber" : 72
  } ],
  "layoutRelationDataList" : [ ]
}