{
  "id" : 268,
  "expression" : "fold",
  "projectName" : "java-decompiler@jd-gui",
  "commitID" : "fbc5b14d66b37b88bf1dc18386b530e874550240",
  "filePath" : "/services/src/main/java/org/jd/gui/view/component/CustomLineNumbersPage.java",
  "occurrences" : 6,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "fold",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 223,
      "startColumnNumber" : 29,
      "endLineNumber" : 223,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 223,
        "startColumnNumber" : 29,
        "endLineNumber" : 223,
        "endColumnNumber" : 41
      },
      "nodeContext" : "fold != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 223,
        "startColumnNumber" : 28,
        "endLineNumber" : 223,
        "endColumnNumber" : 42
      },
      "nodeContext" : "(fold != null)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 223,
        "startColumnNumber" : 28,
        "endLineNumber" : 223,
        "endColumnNumber" : 64
      },
      "nodeContext" : "(fold != null) && fold.isCollapsed()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 140,
        "startLineNumber" : 223,
        "startColumnNumber" : 24,
        "endLineNumber" : 225,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if ((fold != null) && fold.isCollapsed()) {\n  topLine+=fold.getCollapsedLineCount();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 255,
        "startLineNumber" : 221,
        "startColumnNumber" : 36,
        "endLineNumber" : 226,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  Fold fold=fm.getFoldForLine(topLine);\n  if ((fold != null) && fold.isCollapsed()) {\n    topLine+=fold.getCollapsedLineCount();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 271,
        "startLineNumber" : 221,
        "startColumnNumber" : 20,
        "endLineNumber" : 226,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (fm != null) {\n  Fold fold=fm.getFoldForLine(topLine);\n  if ((fold != null) && fold.isCollapsed()) {\n    topLine+=fold.getCollapsedLineCount();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 30,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 906,
        "startLineNumber" : 209,
        "startColumnNumber" : 42,
        "endLineNumber" : 231,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  r=getChildViewBounds(v,topLine,visibleEditorRect);\n  paintLineNumber(g,metrics,rhs,y + ascent,topLine + 1);\n  y+=r.height;\n  if (fm != null) {\n    Fold fold=fm.getFoldForLine(topLine);\n    if ((fold != null) && fold.isCollapsed()) {\n      topLine+=fold.getCollapsedLineCount();\n    }\n  }\n  if (++topLine >= lineCount) {\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 932,
        "startLineNumber" : 209,
        "startColumnNumber" : 16,
        "endLineNumber" : 231,
        "endColumnNumber" : 17
      },
      "nodeContext" : "while (y < visibleBottom) {\n  r=getChildViewBounds(v,topLine,visibleEditorRect);\n  paintLineNumber(g,metrics,rhs,y + ascent,topLine + 1);\n  y+=r.height;\n  if (fm != null) {\n    Fold fold=fm.getFoldForLine(topLine);\n    if ((fold != null) && fold.isCollapsed()) {\n      topLine+=fold.getCollapsedLineCount();\n    }\n  }\n  if (++topLine >= lineCount) {\n    break;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 68,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1813,
        "startLineNumber" : 193,
        "startColumnNumber" : 41,
        "endLineNumber" : 232,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  SourceSyntaxTextAreaUI ui=(SourceSyntaxTextAreaUI)rTextArea.getUI();\n  View v=ui.getRootView(rTextArea).getView(0);\n  Element root=rTextArea.getDocument().getDefaultRootElement();\n  int lineCount=root.getElementCount();\n  int topPosition=rTextArea.viewToModel(visibleRect.getLocation());\n  int topLine=root.getElementIndex(topPosition);\n  Rectangle visibleEditorRect=ui.getVisibleEditorRect();\n  Rectangle r=LineNumberList.getChildViewBounds(v,topLine,visibleEditorRect);\n  int y=r.y;\n  int visibleBottom=visibleRect.y + visibleRect.height;\n  while (y < visibleBottom) {\n    r=getChildViewBounds(v,topLine,visibleEditorRect);\n    paintLineNumber(g,metrics,rhs,y + ascent,topLine + 1);\n    y+=r.height;\n    if (fm != null) {\n      Fold fold=fm.getFoldForLine(topLine);\n      if ((fold != null) && fold.isCollapsed()) {\n        topLine+=fold.getCollapsedLineCount();\n      }\n    }\n    if (++topLine >= lineCount) {\n      break;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 164,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3805,
        "startLineNumber" : 193,
        "startColumnNumber" : 12,
        "endLineNumber" : 275,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (rTextArea.getLineWrap()) {\n  SourceSyntaxTextAreaUI ui=(SourceSyntaxTextAreaUI)rTextArea.getUI();\n  View v=ui.getRootView(rTextArea).getView(0);\n  Element root=rTextArea.getDocument().getDefaultRootElement();\n  int lineCount=root.getElementCount();\n  int topPosition=rTextArea.viewToModel(visibleRect.getLocation());\n  int topLine=root.getElementIndex(topPosition);\n  Rectangle visibleEditorRect=ui.getVisibleEditorRect();\n  Rectangle r=LineNumberList.getChildViewBounds(v,topLine,visibleEditorRect);\n  int y=r.y;\n  int visibleBottom=visibleRect.y + visibleRect.height;\n  while (y < visibleBottom) {\n    r=getChildViewBounds(v,topLine,visibleEditorRect);\n    paintLineNumber(g,metrics,rhs,y + ascent,topLine + 1);\n    y+=r.height;\n    if (fm != null) {\n      Fold fold=fm.getFoldForLine(topLine);\n      if ((fold != null) && fold.isCollapsed()) {\n        topLine+=fold.getCollapsedLineCount();\n      }\n    }\n    if (++topLine >= lineCount) {\n      break;\n    }\n  }\n}\n else {\n  textAreaInsets=rTextArea.getInsets(textAreaInsets);\n  if (visibleRect.y < textAreaInsets.top) {\n    visibleRect.height-=(textAreaInsets.top - visibleRect.y);\n    visibleRect.y=textAreaInsets.top;\n  }\n  int topLine=(visibleRect.y - textAreaInsets.top) / cellHeight;\n  int actualTopY=topLine * cellHeight + textAreaInsets.top;\n  int y=actualTopY + ascent;\n  topLine+=fm.getHiddenLineCountAbove(topLine,true);\n  g.setColor(getForeground());\n  int line=topLine + 1;\n  while ((y < visibleRect.y + visibleRect.height + ascent) && (line <= rTextArea.getLineCount())) {\n    paintLineNumber(g,metrics,rhs,y,line);\n    y+=cellHeight;\n    if (fm != null) {\n      Fold fold=fm.getFoldForLine(line - 1);\n      while ((fold != null) && fold.isCollapsed()) {\n        int hiddenLineCount=fold.getLineCount();\n        if (hiddenLineCount == 0) {\n          break;\n        }\n        line+=hiddenLineCount;\n        fold=fm.getFoldForLine(line - 1);\n      }\n    }\n    line++;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 346,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4928,
        "startLineNumber" : 162,
        "startColumnNumber" : 50,
        "endLineNumber" : 276,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  visibleRect=g.getClipBounds(visibleRect);\n  if (visibleRect == null) {\n    visibleRect=getVisibleRect();\n  }\n  if (visibleRect == null) {\n    return;\n  }\n  int cellWidth=getPreferredSize().width;\n  int cellHeight=rTextArea.getLineHeight();\n  int ascent=rTextArea.getMaxAscent();\n  FoldManager fm=((RSyntaxTextArea)rTextArea).getFoldManager();\n  int RHS_BORDER_WIDTH=getRhsBorderWidth();\n  FontMetrics metrics=g.getFontMetrics();\n  int rhs=getWidth() - RHS_BORDER_WIDTH;\n  if (getParent() instanceof Gutter) {\n    g.setColor(getParent().getBackground());\n  }\n else {\n    g.setColor(getBackground());\n  }\n  g.fillRect(0,visibleRect.y,cellWidth,visibleRect.height);\n  g.setFont(getFont());\n  if (aaHints != null) {\n    ((Graphics2D)g).addRenderingHints(aaHints);\n  }\n  if (rTextArea.getLineWrap()) {\n    SourceSyntaxTextAreaUI ui=(SourceSyntaxTextAreaUI)rTextArea.getUI();\n    View v=ui.getRootView(rTextArea).getView(0);\n    Element root=rTextArea.getDocument().getDefaultRootElement();\n    int lineCount=root.getElementCount();\n    int topPosition=rTextArea.viewToModel(visibleRect.getLocation());\n    int topLine=root.getElementIndex(topPosition);\n    Rectangle visibleEditorRect=ui.getVisibleEditorRect();\n    Rectangle r=LineNumberList.getChildViewBounds(v,topLine,visibleEditorRect);\n    int y=r.y;\n    int visibleBottom=visibleRect.y + visibleRect.height;\n    while (y < visibleBottom) {\n      r=getChildViewBounds(v,topLine,visibleEditorRect);\n      paintLineNumber(g,metrics,rhs,y + ascent,topLine + 1);\n      y+=r.height;\n      if (fm != null) {\n        Fold fold=fm.getFoldForLine(topLine);\n        if ((fold != null) && fold.isCollapsed()) {\n          topLine+=fold.getCollapsedLineCount();\n        }\n      }\n      if (++topLine >= lineCount) {\n        break;\n      }\n    }\n  }\n else {\n    textAreaInsets=rTextArea.getInsets(textAreaInsets);\n    if (visibleRect.y < textAreaInsets.top) {\n      visibleRect.height-=(textAreaInsets.top - visibleRect.y);\n      visibleRect.y=textAreaInsets.top;\n    }\n    int topLine=(visibleRect.y - textAreaInsets.top) / cellHeight;\n    int actualTopY=topLine * cellHeight + textAreaInsets.top;\n    int y=actualTopY + ascent;\n    topLine+=fm.getHiddenLineCountAbove(topLine,true);\n    g.setColor(getForeground());\n    int line=topLine + 1;\n    while ((y < visibleRect.y + visibleRect.height + ascent) && (line <= rTextArea.getLineCount())) {\n      paintLineNumber(g,metrics,rhs,y,line);\n      y+=cellHeight;\n      if (fm != null) {\n        Fold fold=fm.getFoldForLine(line - 1);\n        while ((fold != null) && fold.isCollapsed()) {\n          int hiddenLineCount=fold.getLineCount();\n          if (hiddenLineCount == 0) {\n            break;\n          }\n          line+=hiddenLineCount;\n          fold=fm.getFoldForLine(line - 1);\n        }\n      }\n      line++;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 480,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5103,
        "startLineNumber" : 158,
        "startColumnNumber" : 8,
        "endLineNumber" : 276,
        "endColumnNumber" : 9
      },
      "nodeContext" : "/** \n * @see org.fife.ui.rtextarea.LineNumberList#paintComponent(java.awt.Graphics)\n */\n@Override protected void paintComponent(Graphics g){\n  visibleRect=g.getClipBounds(visibleRect);\n  if (visibleRect == null) {\n    visibleRect=getVisibleRect();\n  }\n  if (visibleRect == null) {\n    return;\n  }\n  int cellWidth=getPreferredSize().width;\n  int cellHeight=rTextArea.getLineHeight();\n  int ascent=rTextArea.getMaxAscent();\n  FoldManager fm=((RSyntaxTextArea)rTextArea).getFoldManager();\n  int RHS_BORDER_WIDTH=getRhsBorderWidth();\n  FontMetrics metrics=g.getFontMetrics();\n  int rhs=getWidth() - RHS_BORDER_WIDTH;\n  if (getParent() instanceof Gutter) {\n    g.setColor(getParent().getBackground());\n  }\n else {\n    g.setColor(getBackground());\n  }\n  g.fillRect(0,visibleRect.y,cellWidth,visibleRect.height);\n  g.setFont(getFont());\n  if (aaHints != null) {\n    ((Graphics2D)g).addRenderingHints(aaHints);\n  }\n  if (rTextArea.getLineWrap()) {\n    SourceSyntaxTextAreaUI ui=(SourceSyntaxTextAreaUI)rTextArea.getUI();\n    View v=ui.getRootView(rTextArea).getView(0);\n    Element root=rTextArea.getDocument().getDefaultRootElement();\n    int lineCount=root.getElementCount();\n    int topPosition=rTextArea.viewToModel(visibleRect.getLocation());\n    int topLine=root.getElementIndex(topPosition);\n    Rectangle visibleEditorRect=ui.getVisibleEditorRect();\n    Rectangle r=LineNumberList.getChildViewBounds(v,topLine,visibleEditorRect);\n    int y=r.y;\n    int visibleBottom=visibleRect.y + visibleRect.height;\n    while (y < visibleBottom) {\n      r=getChildViewBounds(v,topLine,visibleEditorRect);\n      paintLineNumber(g,metrics,rhs,y + ascent,topLine + 1);\n      y+=r.height;\n      if (fm != null) {\n        Fold fold=fm.getFoldForLine(topLine);\n        if ((fold != null) && fold.isCollapsed()) {\n          topLine+=fold.getCollapsedLineCount();\n        }\n      }\n      if (++topLine >= lineCount) {\n        break;\n      }\n    }\n  }\n else {\n    textAreaInsets=rTextArea.getInsets(textAreaInsets);\n    if (visibleRect.y < textAreaInsets.top) {\n      visibleRect.height-=(textAreaInsets.top - visibleRect.y);\n      visibleRect.y=textAreaInsets.top;\n    }\n    int topLine=(visibleRect.y - textAreaInsets.top) / cellHeight;\n    int actualTopY=topLine * cellHeight + textAreaInsets.top;\n    int y=actualTopY + ascent;\n    topLine+=fm.getHiddenLineCountAbove(topLine,true);\n    g.setColor(getForeground());\n    int line=topLine + 1;\n    while ((y < visibleRect.y + visibleRect.height + ascent) && (line <= rTextArea.getLineCount())) {\n      paintLineNumber(g,metrics,rhs,y,line);\n      y+=cellHeight;\n      if (fm != null) {\n        Fold fold=fm.getFoldForLine(line - 1);\n        while ((fold != null) && fold.isCollapsed()) {\n          int hiddenLineCount=fold.getLineCount();\n          if (hiddenLineCount == 0) {\n            break;\n          }\n          line+=hiddenLineCount;\n          fold=fm.getFoldForLine(line - 1);\n        }\n      }\n      line++;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 491,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 223,
        "startColumnNumber" : 28,
        "endLineNumber" : 223,
        "endColumnNumber" : 64
      },
      "nodeContext" : "(fold != null) && fold.isCollapsed()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.jd.gui.view.component.Fold"
  }, {
    "nodeContext" : "fold",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 223,
      "startColumnNumber" : 46,
      "endLineNumber" : 223,
      "endColumnNumber" : 50
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 223,
        "startColumnNumber" : 46,
        "endLineNumber" : 223,
        "endColumnNumber" : 64
      },
      "nodeContext" : "fold.isCollapsed()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 223,
        "startColumnNumber" : 28,
        "endLineNumber" : 223,
        "endColumnNumber" : 64
      },
      "nodeContext" : "(fold != null) && fold.isCollapsed()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 140,
        "startLineNumber" : 223,
        "startColumnNumber" : 24,
        "endLineNumber" : 225,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if ((fold != null) && fold.isCollapsed()) {\n  topLine+=fold.getCollapsedLineCount();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 255,
        "startLineNumber" : 221,
        "startColumnNumber" : 36,
        "endLineNumber" : 226,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  Fold fold=fm.getFoldForLine(topLine);\n  if ((fold != null) && fold.isCollapsed()) {\n    topLine+=fold.getCollapsedLineCount();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 271,
        "startLineNumber" : 221,
        "startColumnNumber" : 20,
        "endLineNumber" : 226,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (fm != null) {\n  Fold fold=fm.getFoldForLine(topLine);\n  if ((fold != null) && fold.isCollapsed()) {\n    topLine+=fold.getCollapsedLineCount();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 30,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 906,
        "startLineNumber" : 209,
        "startColumnNumber" : 42,
        "endLineNumber" : 231,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  r=getChildViewBounds(v,topLine,visibleEditorRect);\n  paintLineNumber(g,metrics,rhs,y + ascent,topLine + 1);\n  y+=r.height;\n  if (fm != null) {\n    Fold fold=fm.getFoldForLine(topLine);\n    if ((fold != null) && fold.isCollapsed()) {\n      topLine+=fold.getCollapsedLineCount();\n    }\n  }\n  if (++topLine >= lineCount) {\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 932,
        "startLineNumber" : 209,
        "startColumnNumber" : 16,
        "endLineNumber" : 231,
        "endColumnNumber" : 17
      },
      "nodeContext" : "while (y < visibleBottom) {\n  r=getChildViewBounds(v,topLine,visibleEditorRect);\n  paintLineNumber(g,metrics,rhs,y + ascent,topLine + 1);\n  y+=r.height;\n  if (fm != null) {\n    Fold fold=fm.getFoldForLine(topLine);\n    if ((fold != null) && fold.isCollapsed()) {\n      topLine+=fold.getCollapsedLineCount();\n    }\n  }\n  if (++topLine >= lineCount) {\n    break;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 68,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1813,
        "startLineNumber" : 193,
        "startColumnNumber" : 41,
        "endLineNumber" : 232,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  SourceSyntaxTextAreaUI ui=(SourceSyntaxTextAreaUI)rTextArea.getUI();\n  View v=ui.getRootView(rTextArea).getView(0);\n  Element root=rTextArea.getDocument().getDefaultRootElement();\n  int lineCount=root.getElementCount();\n  int topPosition=rTextArea.viewToModel(visibleRect.getLocation());\n  int topLine=root.getElementIndex(topPosition);\n  Rectangle visibleEditorRect=ui.getVisibleEditorRect();\n  Rectangle r=LineNumberList.getChildViewBounds(v,topLine,visibleEditorRect);\n  int y=r.y;\n  int visibleBottom=visibleRect.y + visibleRect.height;\n  while (y < visibleBottom) {\n    r=getChildViewBounds(v,topLine,visibleEditorRect);\n    paintLineNumber(g,metrics,rhs,y + ascent,topLine + 1);\n    y+=r.height;\n    if (fm != null) {\n      Fold fold=fm.getFoldForLine(topLine);\n      if ((fold != null) && fold.isCollapsed()) {\n        topLine+=fold.getCollapsedLineCount();\n      }\n    }\n    if (++topLine >= lineCount) {\n      break;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 164,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3805,
        "startLineNumber" : 193,
        "startColumnNumber" : 12,
        "endLineNumber" : 275,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (rTextArea.getLineWrap()) {\n  SourceSyntaxTextAreaUI ui=(SourceSyntaxTextAreaUI)rTextArea.getUI();\n  View v=ui.getRootView(rTextArea).getView(0);\n  Element root=rTextArea.getDocument().getDefaultRootElement();\n  int lineCount=root.getElementCount();\n  int topPosition=rTextArea.viewToModel(visibleRect.getLocation());\n  int topLine=root.getElementIndex(topPosition);\n  Rectangle visibleEditorRect=ui.getVisibleEditorRect();\n  Rectangle r=LineNumberList.getChildViewBounds(v,topLine,visibleEditorRect);\n  int y=r.y;\n  int visibleBottom=visibleRect.y + visibleRect.height;\n  while (y < visibleBottom) {\n    r=getChildViewBounds(v,topLine,visibleEditorRect);\n    paintLineNumber(g,metrics,rhs,y + ascent,topLine + 1);\n    y+=r.height;\n    if (fm != null) {\n      Fold fold=fm.getFoldForLine(topLine);\n      if ((fold != null) && fold.isCollapsed()) {\n        topLine+=fold.getCollapsedLineCount();\n      }\n    }\n    if (++topLine >= lineCount) {\n      break;\n    }\n  }\n}\n else {\n  textAreaInsets=rTextArea.getInsets(textAreaInsets);\n  if (visibleRect.y < textAreaInsets.top) {\n    visibleRect.height-=(textAreaInsets.top - visibleRect.y);\n    visibleRect.y=textAreaInsets.top;\n  }\n  int topLine=(visibleRect.y - textAreaInsets.top) / cellHeight;\n  int actualTopY=topLine * cellHeight + textAreaInsets.top;\n  int y=actualTopY + ascent;\n  topLine+=fm.getHiddenLineCountAbove(topLine,true);\n  g.setColor(getForeground());\n  int line=topLine + 1;\n  while ((y < visibleRect.y + visibleRect.height + ascent) && (line <= rTextArea.getLineCount())) {\n    paintLineNumber(g,metrics,rhs,y,line);\n    y+=cellHeight;\n    if (fm != null) {\n      Fold fold=fm.getFoldForLine(line - 1);\n      while ((fold != null) && fold.isCollapsed()) {\n        int hiddenLineCount=fold.getLineCount();\n        if (hiddenLineCount == 0) {\n          break;\n        }\n        line+=hiddenLineCount;\n        fold=fm.getFoldForLine(line - 1);\n      }\n    }\n    line++;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 346,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4928,
        "startLineNumber" : 162,
        "startColumnNumber" : 50,
        "endLineNumber" : 276,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  visibleRect=g.getClipBounds(visibleRect);\n  if (visibleRect == null) {\n    visibleRect=getVisibleRect();\n  }\n  if (visibleRect == null) {\n    return;\n  }\n  int cellWidth=getPreferredSize().width;\n  int cellHeight=rTextArea.getLineHeight();\n  int ascent=rTextArea.getMaxAscent();\n  FoldManager fm=((RSyntaxTextArea)rTextArea).getFoldManager();\n  int RHS_BORDER_WIDTH=getRhsBorderWidth();\n  FontMetrics metrics=g.getFontMetrics();\n  int rhs=getWidth() - RHS_BORDER_WIDTH;\n  if (getParent() instanceof Gutter) {\n    g.setColor(getParent().getBackground());\n  }\n else {\n    g.setColor(getBackground());\n  }\n  g.fillRect(0,visibleRect.y,cellWidth,visibleRect.height);\n  g.setFont(getFont());\n  if (aaHints != null) {\n    ((Graphics2D)g).addRenderingHints(aaHints);\n  }\n  if (rTextArea.getLineWrap()) {\n    SourceSyntaxTextAreaUI ui=(SourceSyntaxTextAreaUI)rTextArea.getUI();\n    View v=ui.getRootView(rTextArea).getView(0);\n    Element root=rTextArea.getDocument().getDefaultRootElement();\n    int lineCount=root.getElementCount();\n    int topPosition=rTextArea.viewToModel(visibleRect.getLocation());\n    int topLine=root.getElementIndex(topPosition);\n    Rectangle visibleEditorRect=ui.getVisibleEditorRect();\n    Rectangle r=LineNumberList.getChildViewBounds(v,topLine,visibleEditorRect);\n    int y=r.y;\n    int visibleBottom=visibleRect.y + visibleRect.height;\n    while (y < visibleBottom) {\n      r=getChildViewBounds(v,topLine,visibleEditorRect);\n      paintLineNumber(g,metrics,rhs,y + ascent,topLine + 1);\n      y+=r.height;\n      if (fm != null) {\n        Fold fold=fm.getFoldForLine(topLine);\n        if ((fold != null) && fold.isCollapsed()) {\n          topLine+=fold.getCollapsedLineCount();\n        }\n      }\n      if (++topLine >= lineCount) {\n        break;\n      }\n    }\n  }\n else {\n    textAreaInsets=rTextArea.getInsets(textAreaInsets);\n    if (visibleRect.y < textAreaInsets.top) {\n      visibleRect.height-=(textAreaInsets.top - visibleRect.y);\n      visibleRect.y=textAreaInsets.top;\n    }\n    int topLine=(visibleRect.y - textAreaInsets.top) / cellHeight;\n    int actualTopY=topLine * cellHeight + textAreaInsets.top;\n    int y=actualTopY + ascent;\n    topLine+=fm.getHiddenLineCountAbove(topLine,true);\n    g.setColor(getForeground());\n    int line=topLine + 1;\n    while ((y < visibleRect.y + visibleRect.height + ascent) && (line <= rTextArea.getLineCount())) {\n      paintLineNumber(g,metrics,rhs,y,line);\n      y+=cellHeight;\n      if (fm != null) {\n        Fold fold=fm.getFoldForLine(line - 1);\n        while ((fold != null) && fold.isCollapsed()) {\n          int hiddenLineCount=fold.getLineCount();\n          if (hiddenLineCount == 0) {\n            break;\n          }\n          line+=hiddenLineCount;\n          fold=fm.getFoldForLine(line - 1);\n        }\n      }\n      line++;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 480,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5103,
        "startLineNumber" : 158,
        "startColumnNumber" : 8,
        "endLineNumber" : 276,
        "endColumnNumber" : 9
      },
      "nodeContext" : "/** \n * @see org.fife.ui.rtextarea.LineNumberList#paintComponent(java.awt.Graphics)\n */\n@Override protected void paintComponent(Graphics g){\n  visibleRect=g.getClipBounds(visibleRect);\n  if (visibleRect == null) {\n    visibleRect=getVisibleRect();\n  }\n  if (visibleRect == null) {\n    return;\n  }\n  int cellWidth=getPreferredSize().width;\n  int cellHeight=rTextArea.getLineHeight();\n  int ascent=rTextArea.getMaxAscent();\n  FoldManager fm=((RSyntaxTextArea)rTextArea).getFoldManager();\n  int RHS_BORDER_WIDTH=getRhsBorderWidth();\n  FontMetrics metrics=g.getFontMetrics();\n  int rhs=getWidth() - RHS_BORDER_WIDTH;\n  if (getParent() instanceof Gutter) {\n    g.setColor(getParent().getBackground());\n  }\n else {\n    g.setColor(getBackground());\n  }\n  g.fillRect(0,visibleRect.y,cellWidth,visibleRect.height);\n  g.setFont(getFont());\n  if (aaHints != null) {\n    ((Graphics2D)g).addRenderingHints(aaHints);\n  }\n  if (rTextArea.getLineWrap()) {\n    SourceSyntaxTextAreaUI ui=(SourceSyntaxTextAreaUI)rTextArea.getUI();\n    View v=ui.getRootView(rTextArea).getView(0);\n    Element root=rTextArea.getDocument().getDefaultRootElement();\n    int lineCount=root.getElementCount();\n    int topPosition=rTextArea.viewToModel(visibleRect.getLocation());\n    int topLine=root.getElementIndex(topPosition);\n    Rectangle visibleEditorRect=ui.getVisibleEditorRect();\n    Rectangle r=LineNumberList.getChildViewBounds(v,topLine,visibleEditorRect);\n    int y=r.y;\n    int visibleBottom=visibleRect.y + visibleRect.height;\n    while (y < visibleBottom) {\n      r=getChildViewBounds(v,topLine,visibleEditorRect);\n      paintLineNumber(g,metrics,rhs,y + ascent,topLine + 1);\n      y+=r.height;\n      if (fm != null) {\n        Fold fold=fm.getFoldForLine(topLine);\n        if ((fold != null) && fold.isCollapsed()) {\n          topLine+=fold.getCollapsedLineCount();\n        }\n      }\n      if (++topLine >= lineCount) {\n        break;\n      }\n    }\n  }\n else {\n    textAreaInsets=rTextArea.getInsets(textAreaInsets);\n    if (visibleRect.y < textAreaInsets.top) {\n      visibleRect.height-=(textAreaInsets.top - visibleRect.y);\n      visibleRect.y=textAreaInsets.top;\n    }\n    int topLine=(visibleRect.y - textAreaInsets.top) / cellHeight;\n    int actualTopY=topLine * cellHeight + textAreaInsets.top;\n    int y=actualTopY + ascent;\n    topLine+=fm.getHiddenLineCountAbove(topLine,true);\n    g.setColor(getForeground());\n    int line=topLine + 1;\n    while ((y < visibleRect.y + visibleRect.height + ascent) && (line <= rTextArea.getLineCount())) {\n      paintLineNumber(g,metrics,rhs,y,line);\n      y+=cellHeight;\n      if (fm != null) {\n        Fold fold=fm.getFoldForLine(line - 1);\n        while ((fold != null) && fold.isCollapsed()) {\n          int hiddenLineCount=fold.getLineCount();\n          if (hiddenLineCount == 0) {\n            break;\n          }\n          line+=hiddenLineCount;\n          fold=fm.getFoldForLine(line - 1);\n        }\n      }\n      line++;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 491,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 223,
        "startColumnNumber" : 28,
        "endLineNumber" : 223,
        "endColumnNumber" : 64
      },
      "nodeContext" : "(fold != null) && fold.isCollapsed()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.jd.gui.view.component.Fold"
  }, {
    "nodeContext" : "fold",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 224,
      "startColumnNumber" : 39,
      "endLineNumber" : 224,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 224,
        "startColumnNumber" : 39,
        "endLineNumber" : 224,
        "endColumnNumber" : 67
      },
      "nodeContext" : "fold.getCollapsedLineCount()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 224,
        "startColumnNumber" : 28,
        "endLineNumber" : 224,
        "endColumnNumber" : 67
      },
      "nodeContext" : "topLine+=fold.getCollapsedLineCount()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 224,
        "startColumnNumber" : 28,
        "endLineNumber" : 224,
        "endColumnNumber" : 68
      },
      "nodeContext" : "topLine+=fold.getCollapsedLineCount();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 223,
        "startColumnNumber" : 66,
        "endLineNumber" : 225,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  topLine+=fold.getCollapsedLineCount();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 140,
        "startLineNumber" : 223,
        "startColumnNumber" : 24,
        "endLineNumber" : 225,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if ((fold != null) && fold.isCollapsed()) {\n  topLine+=fold.getCollapsedLineCount();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 255,
        "startLineNumber" : 221,
        "startColumnNumber" : 36,
        "endLineNumber" : 226,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  Fold fold=fm.getFoldForLine(topLine);\n  if ((fold != null) && fold.isCollapsed()) {\n    topLine+=fold.getCollapsedLineCount();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 271,
        "startLineNumber" : 221,
        "startColumnNumber" : 20,
        "endLineNumber" : 226,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (fm != null) {\n  Fold fold=fm.getFoldForLine(topLine);\n  if ((fold != null) && fold.isCollapsed()) {\n    topLine+=fold.getCollapsedLineCount();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 30,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 906,
        "startLineNumber" : 209,
        "startColumnNumber" : 42,
        "endLineNumber" : 231,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  r=getChildViewBounds(v,topLine,visibleEditorRect);\n  paintLineNumber(g,metrics,rhs,y + ascent,topLine + 1);\n  y+=r.height;\n  if (fm != null) {\n    Fold fold=fm.getFoldForLine(topLine);\n    if ((fold != null) && fold.isCollapsed()) {\n      topLine+=fold.getCollapsedLineCount();\n    }\n  }\n  if (++topLine >= lineCount) {\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 932,
        "startLineNumber" : 209,
        "startColumnNumber" : 16,
        "endLineNumber" : 231,
        "endColumnNumber" : 17
      },
      "nodeContext" : "while (y < visibleBottom) {\n  r=getChildViewBounds(v,topLine,visibleEditorRect);\n  paintLineNumber(g,metrics,rhs,y + ascent,topLine + 1);\n  y+=r.height;\n  if (fm != null) {\n    Fold fold=fm.getFoldForLine(topLine);\n    if ((fold != null) && fold.isCollapsed()) {\n      topLine+=fold.getCollapsedLineCount();\n    }\n  }\n  if (++topLine >= lineCount) {\n    break;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 68,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1813,
        "startLineNumber" : 193,
        "startColumnNumber" : 41,
        "endLineNumber" : 232,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  SourceSyntaxTextAreaUI ui=(SourceSyntaxTextAreaUI)rTextArea.getUI();\n  View v=ui.getRootView(rTextArea).getView(0);\n  Element root=rTextArea.getDocument().getDefaultRootElement();\n  int lineCount=root.getElementCount();\n  int topPosition=rTextArea.viewToModel(visibleRect.getLocation());\n  int topLine=root.getElementIndex(topPosition);\n  Rectangle visibleEditorRect=ui.getVisibleEditorRect();\n  Rectangle r=LineNumberList.getChildViewBounds(v,topLine,visibleEditorRect);\n  int y=r.y;\n  int visibleBottom=visibleRect.y + visibleRect.height;\n  while (y < visibleBottom) {\n    r=getChildViewBounds(v,topLine,visibleEditorRect);\n    paintLineNumber(g,metrics,rhs,y + ascent,topLine + 1);\n    y+=r.height;\n    if (fm != null) {\n      Fold fold=fm.getFoldForLine(topLine);\n      if ((fold != null) && fold.isCollapsed()) {\n        topLine+=fold.getCollapsedLineCount();\n      }\n    }\n    if (++topLine >= lineCount) {\n      break;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 164,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3805,
        "startLineNumber" : 193,
        "startColumnNumber" : 12,
        "endLineNumber" : 275,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (rTextArea.getLineWrap()) {\n  SourceSyntaxTextAreaUI ui=(SourceSyntaxTextAreaUI)rTextArea.getUI();\n  View v=ui.getRootView(rTextArea).getView(0);\n  Element root=rTextArea.getDocument().getDefaultRootElement();\n  int lineCount=root.getElementCount();\n  int topPosition=rTextArea.viewToModel(visibleRect.getLocation());\n  int topLine=root.getElementIndex(topPosition);\n  Rectangle visibleEditorRect=ui.getVisibleEditorRect();\n  Rectangle r=LineNumberList.getChildViewBounds(v,topLine,visibleEditorRect);\n  int y=r.y;\n  int visibleBottom=visibleRect.y + visibleRect.height;\n  while (y < visibleBottom) {\n    r=getChildViewBounds(v,topLine,visibleEditorRect);\n    paintLineNumber(g,metrics,rhs,y + ascent,topLine + 1);\n    y+=r.height;\n    if (fm != null) {\n      Fold fold=fm.getFoldForLine(topLine);\n      if ((fold != null) && fold.isCollapsed()) {\n        topLine+=fold.getCollapsedLineCount();\n      }\n    }\n    if (++topLine >= lineCount) {\n      break;\n    }\n  }\n}\n else {\n  textAreaInsets=rTextArea.getInsets(textAreaInsets);\n  if (visibleRect.y < textAreaInsets.top) {\n    visibleRect.height-=(textAreaInsets.top - visibleRect.y);\n    visibleRect.y=textAreaInsets.top;\n  }\n  int topLine=(visibleRect.y - textAreaInsets.top) / cellHeight;\n  int actualTopY=topLine * cellHeight + textAreaInsets.top;\n  int y=actualTopY + ascent;\n  topLine+=fm.getHiddenLineCountAbove(topLine,true);\n  g.setColor(getForeground());\n  int line=topLine + 1;\n  while ((y < visibleRect.y + visibleRect.height + ascent) && (line <= rTextArea.getLineCount())) {\n    paintLineNumber(g,metrics,rhs,y,line);\n    y+=cellHeight;\n    if (fm != null) {\n      Fold fold=fm.getFoldForLine(line - 1);\n      while ((fold != null) && fold.isCollapsed()) {\n        int hiddenLineCount=fold.getLineCount();\n        if (hiddenLineCount == 0) {\n          break;\n        }\n        line+=hiddenLineCount;\n        fold=fm.getFoldForLine(line - 1);\n      }\n    }\n    line++;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 346,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4928,
        "startLineNumber" : 162,
        "startColumnNumber" : 50,
        "endLineNumber" : 276,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  visibleRect=g.getClipBounds(visibleRect);\n  if (visibleRect == null) {\n    visibleRect=getVisibleRect();\n  }\n  if (visibleRect == null) {\n    return;\n  }\n  int cellWidth=getPreferredSize().width;\n  int cellHeight=rTextArea.getLineHeight();\n  int ascent=rTextArea.getMaxAscent();\n  FoldManager fm=((RSyntaxTextArea)rTextArea).getFoldManager();\n  int RHS_BORDER_WIDTH=getRhsBorderWidth();\n  FontMetrics metrics=g.getFontMetrics();\n  int rhs=getWidth() - RHS_BORDER_WIDTH;\n  if (getParent() instanceof Gutter) {\n    g.setColor(getParent().getBackground());\n  }\n else {\n    g.setColor(getBackground());\n  }\n  g.fillRect(0,visibleRect.y,cellWidth,visibleRect.height);\n  g.setFont(getFont());\n  if (aaHints != null) {\n    ((Graphics2D)g).addRenderingHints(aaHints);\n  }\n  if (rTextArea.getLineWrap()) {\n    SourceSyntaxTextAreaUI ui=(SourceSyntaxTextAreaUI)rTextArea.getUI();\n    View v=ui.getRootView(rTextArea).getView(0);\n    Element root=rTextArea.getDocument().getDefaultRootElement();\n    int lineCount=root.getElementCount();\n    int topPosition=rTextArea.viewToModel(visibleRect.getLocation());\n    int topLine=root.getElementIndex(topPosition);\n    Rectangle visibleEditorRect=ui.getVisibleEditorRect();\n    Rectangle r=LineNumberList.getChildViewBounds(v,topLine,visibleEditorRect);\n    int y=r.y;\n    int visibleBottom=visibleRect.y + visibleRect.height;\n    while (y < visibleBottom) {\n      r=getChildViewBounds(v,topLine,visibleEditorRect);\n      paintLineNumber(g,metrics,rhs,y + ascent,topLine + 1);\n      y+=r.height;\n      if (fm != null) {\n        Fold fold=fm.getFoldForLine(topLine);\n        if ((fold != null) && fold.isCollapsed()) {\n          topLine+=fold.getCollapsedLineCount();\n        }\n      }\n      if (++topLine >= lineCount) {\n        break;\n      }\n    }\n  }\n else {\n    textAreaInsets=rTextArea.getInsets(textAreaInsets);\n    if (visibleRect.y < textAreaInsets.top) {\n      visibleRect.height-=(textAreaInsets.top - visibleRect.y);\n      visibleRect.y=textAreaInsets.top;\n    }\n    int topLine=(visibleRect.y - textAreaInsets.top) / cellHeight;\n    int actualTopY=topLine * cellHeight + textAreaInsets.top;\n    int y=actualTopY + ascent;\n    topLine+=fm.getHiddenLineCountAbove(topLine,true);\n    g.setColor(getForeground());\n    int line=topLine + 1;\n    while ((y < visibleRect.y + visibleRect.height + ascent) && (line <= rTextArea.getLineCount())) {\n      paintLineNumber(g,metrics,rhs,y,line);\n      y+=cellHeight;\n      if (fm != null) {\n        Fold fold=fm.getFoldForLine(line - 1);\n        while ((fold != null) && fold.isCollapsed()) {\n          int hiddenLineCount=fold.getLineCount();\n          if (hiddenLineCount == 0) {\n            break;\n          }\n          line+=hiddenLineCount;\n          fold=fm.getFoldForLine(line - 1);\n        }\n      }\n      line++;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 480,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5103,
        "startLineNumber" : 158,
        "startColumnNumber" : 8,
        "endLineNumber" : 276,
        "endColumnNumber" : 9
      },
      "nodeContext" : "/** \n * @see org.fife.ui.rtextarea.LineNumberList#paintComponent(java.awt.Graphics)\n */\n@Override protected void paintComponent(Graphics g){\n  visibleRect=g.getClipBounds(visibleRect);\n  if (visibleRect == null) {\n    visibleRect=getVisibleRect();\n  }\n  if (visibleRect == null) {\n    return;\n  }\n  int cellWidth=getPreferredSize().width;\n  int cellHeight=rTextArea.getLineHeight();\n  int ascent=rTextArea.getMaxAscent();\n  FoldManager fm=((RSyntaxTextArea)rTextArea).getFoldManager();\n  int RHS_BORDER_WIDTH=getRhsBorderWidth();\n  FontMetrics metrics=g.getFontMetrics();\n  int rhs=getWidth() - RHS_BORDER_WIDTH;\n  if (getParent() instanceof Gutter) {\n    g.setColor(getParent().getBackground());\n  }\n else {\n    g.setColor(getBackground());\n  }\n  g.fillRect(0,visibleRect.y,cellWidth,visibleRect.height);\n  g.setFont(getFont());\n  if (aaHints != null) {\n    ((Graphics2D)g).addRenderingHints(aaHints);\n  }\n  if (rTextArea.getLineWrap()) {\n    SourceSyntaxTextAreaUI ui=(SourceSyntaxTextAreaUI)rTextArea.getUI();\n    View v=ui.getRootView(rTextArea).getView(0);\n    Element root=rTextArea.getDocument().getDefaultRootElement();\n    int lineCount=root.getElementCount();\n    int topPosition=rTextArea.viewToModel(visibleRect.getLocation());\n    int topLine=root.getElementIndex(topPosition);\n    Rectangle visibleEditorRect=ui.getVisibleEditorRect();\n    Rectangle r=LineNumberList.getChildViewBounds(v,topLine,visibleEditorRect);\n    int y=r.y;\n    int visibleBottom=visibleRect.y + visibleRect.height;\n    while (y < visibleBottom) {\n      r=getChildViewBounds(v,topLine,visibleEditorRect);\n      paintLineNumber(g,metrics,rhs,y + ascent,topLine + 1);\n      y+=r.height;\n      if (fm != null) {\n        Fold fold=fm.getFoldForLine(topLine);\n        if ((fold != null) && fold.isCollapsed()) {\n          topLine+=fold.getCollapsedLineCount();\n        }\n      }\n      if (++topLine >= lineCount) {\n        break;\n      }\n    }\n  }\n else {\n    textAreaInsets=rTextArea.getInsets(textAreaInsets);\n    if (visibleRect.y < textAreaInsets.top) {\n      visibleRect.height-=(textAreaInsets.top - visibleRect.y);\n      visibleRect.y=textAreaInsets.top;\n    }\n    int topLine=(visibleRect.y - textAreaInsets.top) / cellHeight;\n    int actualTopY=topLine * cellHeight + textAreaInsets.top;\n    int y=actualTopY + ascent;\n    topLine+=fm.getHiddenLineCountAbove(topLine,true);\n    g.setColor(getForeground());\n    int line=topLine + 1;\n    while ((y < visibleRect.y + visibleRect.height + ascent) && (line <= rTextArea.getLineCount())) {\n      paintLineNumber(g,metrics,rhs,y,line);\n      y+=cellHeight;\n      if (fm != null) {\n        Fold fold=fm.getFoldForLine(line - 1);\n        while ((fold != null) && fold.isCollapsed()) {\n          int hiddenLineCount=fold.getLineCount();\n          if (hiddenLineCount == 0) {\n            break;\n          }\n          line+=hiddenLineCount;\n          fold=fm.getFoldForLine(line - 1);\n        }\n      }\n      line++;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 491,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 224,
        "startColumnNumber" : 28,
        "endLineNumber" : 224,
        "endColumnNumber" : 68
      },
      "nodeContext" : "topLine+=fold.getCollapsedLineCount();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.jd.gui.view.component.Fold"
  }, {
    "nodeContext" : "fold",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 261,
      "startColumnNumber" : 32,
      "endLineNumber" : 261,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 261,
        "startColumnNumber" : 32,
        "endLineNumber" : 261,
        "endColumnNumber" : 44
      },
      "nodeContext" : "fold != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 261,
        "startColumnNumber" : 31,
        "endLineNumber" : 261,
        "endColumnNumber" : 45
      },
      "nodeContext" : "(fold != null)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 261,
        "startColumnNumber" : 31,
        "endLineNumber" : 261,
        "endColumnNumber" : 67
      },
      "nodeContext" : "(fold != null) && fold.isCollapsed()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 565,
        "startLineNumber" : 261,
        "startColumnNumber" : 24,
        "endLineNumber" : 270,
        "endColumnNumber" : 25
      },
      "nodeContext" : "while ((fold != null) && fold.isCollapsed()) {\n  int hiddenLineCount=fold.getLineCount();\n  if (hiddenLineCount == 0) {\n    break;\n  }\n  line+=hiddenLineCount;\n  fold=fm.getFoldForLine(line - 1);\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 846,
        "startLineNumber" : 257,
        "startColumnNumber" : 36,
        "endLineNumber" : 271,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  Fold fold=fm.getFoldForLine(line - 1);\n  while ((fold != null) && fold.isCollapsed()) {\n    int hiddenLineCount=fold.getLineCount();\n    if (hiddenLineCount == 0) {\n      break;\n    }\n    line+=hiddenLineCount;\n    fold=fm.getFoldForLine(line - 1);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 862,
        "startLineNumber" : 257,
        "startColumnNumber" : 20,
        "endLineNumber" : 271,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (fm != null) {\n  Fold fold=fm.getFoldForLine(line - 1);\n  while ((fold != null) && fold.isCollapsed()) {\n    int hiddenLineCount=fold.getLineCount();\n    if (hiddenLineCount == 0) {\n      break;\n    }\n    line+=hiddenLineCount;\n    fold=fm.getFoldForLine(line - 1);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 52,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1041,
        "startLineNumber" : 252,
        "startColumnNumber" : 112,
        "endLineNumber" : 274,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  paintLineNumber(g,metrics,rhs,y,line);\n  y+=cellHeight;\n  if (fm != null) {\n    Fold fold=fm.getFoldForLine(line - 1);\n    while ((fold != null) && fold.isCollapsed()) {\n      int hiddenLineCount=fold.getLineCount();\n      if (hiddenLineCount == 0) {\n        break;\n      }\n      line+=hiddenLineCount;\n      fold=fm.getFoldForLine(line - 1);\n    }\n  }\n  line++;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1137,
        "startLineNumber" : 252,
        "startColumnNumber" : 16,
        "endLineNumber" : 274,
        "endColumnNumber" : 17
      },
      "nodeContext" : "while ((y < visibleRect.y + visibleRect.height + ascent) && (line <= rTextArea.getLineCount())) {\n  paintLineNumber(g,metrics,rhs,y,line);\n  y+=cellHeight;\n  if (fm != null) {\n    Fold fold=fm.getFoldForLine(line - 1);\n    while ((fold != null) && fold.isCollapsed()) {\n      int hiddenLineCount=fold.getLineCount();\n      if (hiddenLineCount == 0) {\n        break;\n      }\n      line+=hiddenLineCount;\n      fold=fm.getFoldForLine(line - 1);\n    }\n  }\n  line++;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 87,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1957,
        "startLineNumber" : 232,
        "startColumnNumber" : 19,
        "endLineNumber" : 275,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  textAreaInsets=rTextArea.getInsets(textAreaInsets);\n  if (visibleRect.y < textAreaInsets.top) {\n    visibleRect.height-=(textAreaInsets.top - visibleRect.y);\n    visibleRect.y=textAreaInsets.top;\n  }\n  int topLine=(visibleRect.y - textAreaInsets.top) / cellHeight;\n  int actualTopY=topLine * cellHeight + textAreaInsets.top;\n  int y=actualTopY + ascent;\n  topLine+=fm.getHiddenLineCountAbove(topLine,true);\n  g.setColor(getForeground());\n  int line=topLine + 1;\n  while ((y < visibleRect.y + visibleRect.height + ascent) && (line <= rTextArea.getLineCount())) {\n    paintLineNumber(g,metrics,rhs,y,line);\n    y+=cellHeight;\n    if (fm != null) {\n      Fold fold=fm.getFoldForLine(line - 1);\n      while ((fold != null) && fold.isCollapsed()) {\n        int hiddenLineCount=fold.getLineCount();\n        if (hiddenLineCount == 0) {\n          break;\n        }\n        line+=hiddenLineCount;\n        fold=fm.getFoldForLine(line - 1);\n      }\n    }\n    line++;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 178,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3805,
        "startLineNumber" : 193,
        "startColumnNumber" : 12,
        "endLineNumber" : 275,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (rTextArea.getLineWrap()) {\n  SourceSyntaxTextAreaUI ui=(SourceSyntaxTextAreaUI)rTextArea.getUI();\n  View v=ui.getRootView(rTextArea).getView(0);\n  Element root=rTextArea.getDocument().getDefaultRootElement();\n  int lineCount=root.getElementCount();\n  int topPosition=rTextArea.viewToModel(visibleRect.getLocation());\n  int topLine=root.getElementIndex(topPosition);\n  Rectangle visibleEditorRect=ui.getVisibleEditorRect();\n  Rectangle r=LineNumberList.getChildViewBounds(v,topLine,visibleEditorRect);\n  int y=r.y;\n  int visibleBottom=visibleRect.y + visibleRect.height;\n  while (y < visibleBottom) {\n    r=getChildViewBounds(v,topLine,visibleEditorRect);\n    paintLineNumber(g,metrics,rhs,y + ascent,topLine + 1);\n    y+=r.height;\n    if (fm != null) {\n      Fold fold=fm.getFoldForLine(topLine);\n      if ((fold != null) && fold.isCollapsed()) {\n        topLine+=fold.getCollapsedLineCount();\n      }\n    }\n    if (++topLine >= lineCount) {\n      break;\n    }\n  }\n}\n else {\n  textAreaInsets=rTextArea.getInsets(textAreaInsets);\n  if (visibleRect.y < textAreaInsets.top) {\n    visibleRect.height-=(textAreaInsets.top - visibleRect.y);\n    visibleRect.y=textAreaInsets.top;\n  }\n  int topLine=(visibleRect.y - textAreaInsets.top) / cellHeight;\n  int actualTopY=topLine * cellHeight + textAreaInsets.top;\n  int y=actualTopY + ascent;\n  topLine+=fm.getHiddenLineCountAbove(topLine,true);\n  g.setColor(getForeground());\n  int line=topLine + 1;\n  while ((y < visibleRect.y + visibleRect.height + ascent) && (line <= rTextArea.getLineCount())) {\n    paintLineNumber(g,metrics,rhs,y,line);\n    y+=cellHeight;\n    if (fm != null) {\n      Fold fold=fm.getFoldForLine(line - 1);\n      while ((fold != null) && fold.isCollapsed()) {\n        int hiddenLineCount=fold.getLineCount();\n        if (hiddenLineCount == 0) {\n          break;\n        }\n        line+=hiddenLineCount;\n        fold=fm.getFoldForLine(line - 1);\n      }\n    }\n    line++;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 346,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4928,
        "startLineNumber" : 162,
        "startColumnNumber" : 50,
        "endLineNumber" : 276,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  visibleRect=g.getClipBounds(visibleRect);\n  if (visibleRect == null) {\n    visibleRect=getVisibleRect();\n  }\n  if (visibleRect == null) {\n    return;\n  }\n  int cellWidth=getPreferredSize().width;\n  int cellHeight=rTextArea.getLineHeight();\n  int ascent=rTextArea.getMaxAscent();\n  FoldManager fm=((RSyntaxTextArea)rTextArea).getFoldManager();\n  int RHS_BORDER_WIDTH=getRhsBorderWidth();\n  FontMetrics metrics=g.getFontMetrics();\n  int rhs=getWidth() - RHS_BORDER_WIDTH;\n  if (getParent() instanceof Gutter) {\n    g.setColor(getParent().getBackground());\n  }\n else {\n    g.setColor(getBackground());\n  }\n  g.fillRect(0,visibleRect.y,cellWidth,visibleRect.height);\n  g.setFont(getFont());\n  if (aaHints != null) {\n    ((Graphics2D)g).addRenderingHints(aaHints);\n  }\n  if (rTextArea.getLineWrap()) {\n    SourceSyntaxTextAreaUI ui=(SourceSyntaxTextAreaUI)rTextArea.getUI();\n    View v=ui.getRootView(rTextArea).getView(0);\n    Element root=rTextArea.getDocument().getDefaultRootElement();\n    int lineCount=root.getElementCount();\n    int topPosition=rTextArea.viewToModel(visibleRect.getLocation());\n    int topLine=root.getElementIndex(topPosition);\n    Rectangle visibleEditorRect=ui.getVisibleEditorRect();\n    Rectangle r=LineNumberList.getChildViewBounds(v,topLine,visibleEditorRect);\n    int y=r.y;\n    int visibleBottom=visibleRect.y + visibleRect.height;\n    while (y < visibleBottom) {\n      r=getChildViewBounds(v,topLine,visibleEditorRect);\n      paintLineNumber(g,metrics,rhs,y + ascent,topLine + 1);\n      y+=r.height;\n      if (fm != null) {\n        Fold fold=fm.getFoldForLine(topLine);\n        if ((fold != null) && fold.isCollapsed()) {\n          topLine+=fold.getCollapsedLineCount();\n        }\n      }\n      if (++topLine >= lineCount) {\n        break;\n      }\n    }\n  }\n else {\n    textAreaInsets=rTextArea.getInsets(textAreaInsets);\n    if (visibleRect.y < textAreaInsets.top) {\n      visibleRect.height-=(textAreaInsets.top - visibleRect.y);\n      visibleRect.y=textAreaInsets.top;\n    }\n    int topLine=(visibleRect.y - textAreaInsets.top) / cellHeight;\n    int actualTopY=topLine * cellHeight + textAreaInsets.top;\n    int y=actualTopY + ascent;\n    topLine+=fm.getHiddenLineCountAbove(topLine,true);\n    g.setColor(getForeground());\n    int line=topLine + 1;\n    while ((y < visibleRect.y + visibleRect.height + ascent) && (line <= rTextArea.getLineCount())) {\n      paintLineNumber(g,metrics,rhs,y,line);\n      y+=cellHeight;\n      if (fm != null) {\n        Fold fold=fm.getFoldForLine(line - 1);\n        while ((fold != null) && fold.isCollapsed()) {\n          int hiddenLineCount=fold.getLineCount();\n          if (hiddenLineCount == 0) {\n            break;\n          }\n          line+=hiddenLineCount;\n          fold=fm.getFoldForLine(line - 1);\n        }\n      }\n      line++;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 480,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5103,
        "startLineNumber" : 158,
        "startColumnNumber" : 8,
        "endLineNumber" : 276,
        "endColumnNumber" : 9
      },
      "nodeContext" : "/** \n * @see org.fife.ui.rtextarea.LineNumberList#paintComponent(java.awt.Graphics)\n */\n@Override protected void paintComponent(Graphics g){\n  visibleRect=g.getClipBounds(visibleRect);\n  if (visibleRect == null) {\n    visibleRect=getVisibleRect();\n  }\n  if (visibleRect == null) {\n    return;\n  }\n  int cellWidth=getPreferredSize().width;\n  int cellHeight=rTextArea.getLineHeight();\n  int ascent=rTextArea.getMaxAscent();\n  FoldManager fm=((RSyntaxTextArea)rTextArea).getFoldManager();\n  int RHS_BORDER_WIDTH=getRhsBorderWidth();\n  FontMetrics metrics=g.getFontMetrics();\n  int rhs=getWidth() - RHS_BORDER_WIDTH;\n  if (getParent() instanceof Gutter) {\n    g.setColor(getParent().getBackground());\n  }\n else {\n    g.setColor(getBackground());\n  }\n  g.fillRect(0,visibleRect.y,cellWidth,visibleRect.height);\n  g.setFont(getFont());\n  if (aaHints != null) {\n    ((Graphics2D)g).addRenderingHints(aaHints);\n  }\n  if (rTextArea.getLineWrap()) {\n    SourceSyntaxTextAreaUI ui=(SourceSyntaxTextAreaUI)rTextArea.getUI();\n    View v=ui.getRootView(rTextArea).getView(0);\n    Element root=rTextArea.getDocument().getDefaultRootElement();\n    int lineCount=root.getElementCount();\n    int topPosition=rTextArea.viewToModel(visibleRect.getLocation());\n    int topLine=root.getElementIndex(topPosition);\n    Rectangle visibleEditorRect=ui.getVisibleEditorRect();\n    Rectangle r=LineNumberList.getChildViewBounds(v,topLine,visibleEditorRect);\n    int y=r.y;\n    int visibleBottom=visibleRect.y + visibleRect.height;\n    while (y < visibleBottom) {\n      r=getChildViewBounds(v,topLine,visibleEditorRect);\n      paintLineNumber(g,metrics,rhs,y + ascent,topLine + 1);\n      y+=r.height;\n      if (fm != null) {\n        Fold fold=fm.getFoldForLine(topLine);\n        if ((fold != null) && fold.isCollapsed()) {\n          topLine+=fold.getCollapsedLineCount();\n        }\n      }\n      if (++topLine >= lineCount) {\n        break;\n      }\n    }\n  }\n else {\n    textAreaInsets=rTextArea.getInsets(textAreaInsets);\n    if (visibleRect.y < textAreaInsets.top) {\n      visibleRect.height-=(textAreaInsets.top - visibleRect.y);\n      visibleRect.y=textAreaInsets.top;\n    }\n    int topLine=(visibleRect.y - textAreaInsets.top) / cellHeight;\n    int actualTopY=topLine * cellHeight + textAreaInsets.top;\n    int y=actualTopY + ascent;\n    topLine+=fm.getHiddenLineCountAbove(topLine,true);\n    g.setColor(getForeground());\n    int line=topLine + 1;\n    while ((y < visibleRect.y + visibleRect.height + ascent) && (line <= rTextArea.getLineCount())) {\n      paintLineNumber(g,metrics,rhs,y,line);\n      y+=cellHeight;\n      if (fm != null) {\n        Fold fold=fm.getFoldForLine(line - 1);\n        while ((fold != null) && fold.isCollapsed()) {\n          int hiddenLineCount=fold.getLineCount();\n          if (hiddenLineCount == 0) {\n            break;\n          }\n          line+=hiddenLineCount;\n          fold=fm.getFoldForLine(line - 1);\n        }\n      }\n      line++;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 491,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 261,
        "startColumnNumber" : 31,
        "endLineNumber" : 261,
        "endColumnNumber" : 67
      },
      "nodeContext" : "(fold != null) && fold.isCollapsed()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.jd.gui.view.component.Fold"
  }, {
    "nodeContext" : "fold",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 261,
      "startColumnNumber" : 49,
      "endLineNumber" : 261,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 261,
        "startColumnNumber" : 49,
        "endLineNumber" : 261,
        "endColumnNumber" : 67
      },
      "nodeContext" : "fold.isCollapsed()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 261,
        "startColumnNumber" : 31,
        "endLineNumber" : 261,
        "endColumnNumber" : 67
      },
      "nodeContext" : "(fold != null) && fold.isCollapsed()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 565,
        "startLineNumber" : 261,
        "startColumnNumber" : 24,
        "endLineNumber" : 270,
        "endColumnNumber" : 25
      },
      "nodeContext" : "while ((fold != null) && fold.isCollapsed()) {\n  int hiddenLineCount=fold.getLineCount();\n  if (hiddenLineCount == 0) {\n    break;\n  }\n  line+=hiddenLineCount;\n  fold=fm.getFoldForLine(line - 1);\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 846,
        "startLineNumber" : 257,
        "startColumnNumber" : 36,
        "endLineNumber" : 271,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  Fold fold=fm.getFoldForLine(line - 1);\n  while ((fold != null) && fold.isCollapsed()) {\n    int hiddenLineCount=fold.getLineCount();\n    if (hiddenLineCount == 0) {\n      break;\n    }\n    line+=hiddenLineCount;\n    fold=fm.getFoldForLine(line - 1);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 862,
        "startLineNumber" : 257,
        "startColumnNumber" : 20,
        "endLineNumber" : 271,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (fm != null) {\n  Fold fold=fm.getFoldForLine(line - 1);\n  while ((fold != null) && fold.isCollapsed()) {\n    int hiddenLineCount=fold.getLineCount();\n    if (hiddenLineCount == 0) {\n      break;\n    }\n    line+=hiddenLineCount;\n    fold=fm.getFoldForLine(line - 1);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 52,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1041,
        "startLineNumber" : 252,
        "startColumnNumber" : 112,
        "endLineNumber" : 274,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  paintLineNumber(g,metrics,rhs,y,line);\n  y+=cellHeight;\n  if (fm != null) {\n    Fold fold=fm.getFoldForLine(line - 1);\n    while ((fold != null) && fold.isCollapsed()) {\n      int hiddenLineCount=fold.getLineCount();\n      if (hiddenLineCount == 0) {\n        break;\n      }\n      line+=hiddenLineCount;\n      fold=fm.getFoldForLine(line - 1);\n    }\n  }\n  line++;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1137,
        "startLineNumber" : 252,
        "startColumnNumber" : 16,
        "endLineNumber" : 274,
        "endColumnNumber" : 17
      },
      "nodeContext" : "while ((y < visibleRect.y + visibleRect.height + ascent) && (line <= rTextArea.getLineCount())) {\n  paintLineNumber(g,metrics,rhs,y,line);\n  y+=cellHeight;\n  if (fm != null) {\n    Fold fold=fm.getFoldForLine(line - 1);\n    while ((fold != null) && fold.isCollapsed()) {\n      int hiddenLineCount=fold.getLineCount();\n      if (hiddenLineCount == 0) {\n        break;\n      }\n      line+=hiddenLineCount;\n      fold=fm.getFoldForLine(line - 1);\n    }\n  }\n  line++;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 87,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1957,
        "startLineNumber" : 232,
        "startColumnNumber" : 19,
        "endLineNumber" : 275,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  textAreaInsets=rTextArea.getInsets(textAreaInsets);\n  if (visibleRect.y < textAreaInsets.top) {\n    visibleRect.height-=(textAreaInsets.top - visibleRect.y);\n    visibleRect.y=textAreaInsets.top;\n  }\n  int topLine=(visibleRect.y - textAreaInsets.top) / cellHeight;\n  int actualTopY=topLine * cellHeight + textAreaInsets.top;\n  int y=actualTopY + ascent;\n  topLine+=fm.getHiddenLineCountAbove(topLine,true);\n  g.setColor(getForeground());\n  int line=topLine + 1;\n  while ((y < visibleRect.y + visibleRect.height + ascent) && (line <= rTextArea.getLineCount())) {\n    paintLineNumber(g,metrics,rhs,y,line);\n    y+=cellHeight;\n    if (fm != null) {\n      Fold fold=fm.getFoldForLine(line - 1);\n      while ((fold != null) && fold.isCollapsed()) {\n        int hiddenLineCount=fold.getLineCount();\n        if (hiddenLineCount == 0) {\n          break;\n        }\n        line+=hiddenLineCount;\n        fold=fm.getFoldForLine(line - 1);\n      }\n    }\n    line++;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 178,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3805,
        "startLineNumber" : 193,
        "startColumnNumber" : 12,
        "endLineNumber" : 275,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (rTextArea.getLineWrap()) {\n  SourceSyntaxTextAreaUI ui=(SourceSyntaxTextAreaUI)rTextArea.getUI();\n  View v=ui.getRootView(rTextArea).getView(0);\n  Element root=rTextArea.getDocument().getDefaultRootElement();\n  int lineCount=root.getElementCount();\n  int topPosition=rTextArea.viewToModel(visibleRect.getLocation());\n  int topLine=root.getElementIndex(topPosition);\n  Rectangle visibleEditorRect=ui.getVisibleEditorRect();\n  Rectangle r=LineNumberList.getChildViewBounds(v,topLine,visibleEditorRect);\n  int y=r.y;\n  int visibleBottom=visibleRect.y + visibleRect.height;\n  while (y < visibleBottom) {\n    r=getChildViewBounds(v,topLine,visibleEditorRect);\n    paintLineNumber(g,metrics,rhs,y + ascent,topLine + 1);\n    y+=r.height;\n    if (fm != null) {\n      Fold fold=fm.getFoldForLine(topLine);\n      if ((fold != null) && fold.isCollapsed()) {\n        topLine+=fold.getCollapsedLineCount();\n      }\n    }\n    if (++topLine >= lineCount) {\n      break;\n    }\n  }\n}\n else {\n  textAreaInsets=rTextArea.getInsets(textAreaInsets);\n  if (visibleRect.y < textAreaInsets.top) {\n    visibleRect.height-=(textAreaInsets.top - visibleRect.y);\n    visibleRect.y=textAreaInsets.top;\n  }\n  int topLine=(visibleRect.y - textAreaInsets.top) / cellHeight;\n  int actualTopY=topLine * cellHeight + textAreaInsets.top;\n  int y=actualTopY + ascent;\n  topLine+=fm.getHiddenLineCountAbove(topLine,true);\n  g.setColor(getForeground());\n  int line=topLine + 1;\n  while ((y < visibleRect.y + visibleRect.height + ascent) && (line <= rTextArea.getLineCount())) {\n    paintLineNumber(g,metrics,rhs,y,line);\n    y+=cellHeight;\n    if (fm != null) {\n      Fold fold=fm.getFoldForLine(line - 1);\n      while ((fold != null) && fold.isCollapsed()) {\n        int hiddenLineCount=fold.getLineCount();\n        if (hiddenLineCount == 0) {\n          break;\n        }\n        line+=hiddenLineCount;\n        fold=fm.getFoldForLine(line - 1);\n      }\n    }\n    line++;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 346,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4928,
        "startLineNumber" : 162,
        "startColumnNumber" : 50,
        "endLineNumber" : 276,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  visibleRect=g.getClipBounds(visibleRect);\n  if (visibleRect == null) {\n    visibleRect=getVisibleRect();\n  }\n  if (visibleRect == null) {\n    return;\n  }\n  int cellWidth=getPreferredSize().width;\n  int cellHeight=rTextArea.getLineHeight();\n  int ascent=rTextArea.getMaxAscent();\n  FoldManager fm=((RSyntaxTextArea)rTextArea).getFoldManager();\n  int RHS_BORDER_WIDTH=getRhsBorderWidth();\n  FontMetrics metrics=g.getFontMetrics();\n  int rhs=getWidth() - RHS_BORDER_WIDTH;\n  if (getParent() instanceof Gutter) {\n    g.setColor(getParent().getBackground());\n  }\n else {\n    g.setColor(getBackground());\n  }\n  g.fillRect(0,visibleRect.y,cellWidth,visibleRect.height);\n  g.setFont(getFont());\n  if (aaHints != null) {\n    ((Graphics2D)g).addRenderingHints(aaHints);\n  }\n  if (rTextArea.getLineWrap()) {\n    SourceSyntaxTextAreaUI ui=(SourceSyntaxTextAreaUI)rTextArea.getUI();\n    View v=ui.getRootView(rTextArea).getView(0);\n    Element root=rTextArea.getDocument().getDefaultRootElement();\n    int lineCount=root.getElementCount();\n    int topPosition=rTextArea.viewToModel(visibleRect.getLocation());\n    int topLine=root.getElementIndex(topPosition);\n    Rectangle visibleEditorRect=ui.getVisibleEditorRect();\n    Rectangle r=LineNumberList.getChildViewBounds(v,topLine,visibleEditorRect);\n    int y=r.y;\n    int visibleBottom=visibleRect.y + visibleRect.height;\n    while (y < visibleBottom) {\n      r=getChildViewBounds(v,topLine,visibleEditorRect);\n      paintLineNumber(g,metrics,rhs,y + ascent,topLine + 1);\n      y+=r.height;\n      if (fm != null) {\n        Fold fold=fm.getFoldForLine(topLine);\n        if ((fold != null) && fold.isCollapsed()) {\n          topLine+=fold.getCollapsedLineCount();\n        }\n      }\n      if (++topLine >= lineCount) {\n        break;\n      }\n    }\n  }\n else {\n    textAreaInsets=rTextArea.getInsets(textAreaInsets);\n    if (visibleRect.y < textAreaInsets.top) {\n      visibleRect.height-=(textAreaInsets.top - visibleRect.y);\n      visibleRect.y=textAreaInsets.top;\n    }\n    int topLine=(visibleRect.y - textAreaInsets.top) / cellHeight;\n    int actualTopY=topLine * cellHeight + textAreaInsets.top;\n    int y=actualTopY + ascent;\n    topLine+=fm.getHiddenLineCountAbove(topLine,true);\n    g.setColor(getForeground());\n    int line=topLine + 1;\n    while ((y < visibleRect.y + visibleRect.height + ascent) && (line <= rTextArea.getLineCount())) {\n      paintLineNumber(g,metrics,rhs,y,line);\n      y+=cellHeight;\n      if (fm != null) {\n        Fold fold=fm.getFoldForLine(line - 1);\n        while ((fold != null) && fold.isCollapsed()) {\n          int hiddenLineCount=fold.getLineCount();\n          if (hiddenLineCount == 0) {\n            break;\n          }\n          line+=hiddenLineCount;\n          fold=fm.getFoldForLine(line - 1);\n        }\n      }\n      line++;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 480,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5103,
        "startLineNumber" : 158,
        "startColumnNumber" : 8,
        "endLineNumber" : 276,
        "endColumnNumber" : 9
      },
      "nodeContext" : "/** \n * @see org.fife.ui.rtextarea.LineNumberList#paintComponent(java.awt.Graphics)\n */\n@Override protected void paintComponent(Graphics g){\n  visibleRect=g.getClipBounds(visibleRect);\n  if (visibleRect == null) {\n    visibleRect=getVisibleRect();\n  }\n  if (visibleRect == null) {\n    return;\n  }\n  int cellWidth=getPreferredSize().width;\n  int cellHeight=rTextArea.getLineHeight();\n  int ascent=rTextArea.getMaxAscent();\n  FoldManager fm=((RSyntaxTextArea)rTextArea).getFoldManager();\n  int RHS_BORDER_WIDTH=getRhsBorderWidth();\n  FontMetrics metrics=g.getFontMetrics();\n  int rhs=getWidth() - RHS_BORDER_WIDTH;\n  if (getParent() instanceof Gutter) {\n    g.setColor(getParent().getBackground());\n  }\n else {\n    g.setColor(getBackground());\n  }\n  g.fillRect(0,visibleRect.y,cellWidth,visibleRect.height);\n  g.setFont(getFont());\n  if (aaHints != null) {\n    ((Graphics2D)g).addRenderingHints(aaHints);\n  }\n  if (rTextArea.getLineWrap()) {\n    SourceSyntaxTextAreaUI ui=(SourceSyntaxTextAreaUI)rTextArea.getUI();\n    View v=ui.getRootView(rTextArea).getView(0);\n    Element root=rTextArea.getDocument().getDefaultRootElement();\n    int lineCount=root.getElementCount();\n    int topPosition=rTextArea.viewToModel(visibleRect.getLocation());\n    int topLine=root.getElementIndex(topPosition);\n    Rectangle visibleEditorRect=ui.getVisibleEditorRect();\n    Rectangle r=LineNumberList.getChildViewBounds(v,topLine,visibleEditorRect);\n    int y=r.y;\n    int visibleBottom=visibleRect.y + visibleRect.height;\n    while (y < visibleBottom) {\n      r=getChildViewBounds(v,topLine,visibleEditorRect);\n      paintLineNumber(g,metrics,rhs,y + ascent,topLine + 1);\n      y+=r.height;\n      if (fm != null) {\n        Fold fold=fm.getFoldForLine(topLine);\n        if ((fold != null) && fold.isCollapsed()) {\n          topLine+=fold.getCollapsedLineCount();\n        }\n      }\n      if (++topLine >= lineCount) {\n        break;\n      }\n    }\n  }\n else {\n    textAreaInsets=rTextArea.getInsets(textAreaInsets);\n    if (visibleRect.y < textAreaInsets.top) {\n      visibleRect.height-=(textAreaInsets.top - visibleRect.y);\n      visibleRect.y=textAreaInsets.top;\n    }\n    int topLine=(visibleRect.y - textAreaInsets.top) / cellHeight;\n    int actualTopY=topLine * cellHeight + textAreaInsets.top;\n    int y=actualTopY + ascent;\n    topLine+=fm.getHiddenLineCountAbove(topLine,true);\n    g.setColor(getForeground());\n    int line=topLine + 1;\n    while ((y < visibleRect.y + visibleRect.height + ascent) && (line <= rTextArea.getLineCount())) {\n      paintLineNumber(g,metrics,rhs,y,line);\n      y+=cellHeight;\n      if (fm != null) {\n        Fold fold=fm.getFoldForLine(line - 1);\n        while ((fold != null) && fold.isCollapsed()) {\n          int hiddenLineCount=fold.getLineCount();\n          if (hiddenLineCount == 0) {\n            break;\n          }\n          line+=hiddenLineCount;\n          fold=fm.getFoldForLine(line - 1);\n        }\n      }\n      line++;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 491,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 261,
        "startColumnNumber" : 31,
        "endLineNumber" : 261,
        "endColumnNumber" : 67
      },
      "nodeContext" : "(fold != null) && fold.isCollapsed()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.jd.gui.view.component.Fold"
  }, {
    "nodeContext" : "fold",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 262,
      "startColumnNumber" : 50,
      "endLineNumber" : 262,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 262,
        "startColumnNumber" : 50,
        "endLineNumber" : 262,
        "endColumnNumber" : 69
      },
      "nodeContext" : "fold.getLineCount()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 262,
        "startColumnNumber" : 32,
        "endLineNumber" : 262,
        "endColumnNumber" : 69
      },
      "nodeContext" : "hiddenLineCount=fold.getLineCount()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 262,
        "startColumnNumber" : 28,
        "endLineNumber" : 262,
        "endColumnNumber" : 70
      },
      "nodeContext" : "int hiddenLineCount=fold.getLineCount();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 520,
        "startLineNumber" : 261,
        "startColumnNumber" : 69,
        "endLineNumber" : 270,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  int hiddenLineCount=fold.getLineCount();\n  if (hiddenLineCount == 0) {\n    break;\n  }\n  line+=hiddenLineCount;\n  fold=fm.getFoldForLine(line - 1);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 565,
        "startLineNumber" : 261,
        "startColumnNumber" : 24,
        "endLineNumber" : 270,
        "endColumnNumber" : 25
      },
      "nodeContext" : "while ((fold != null) && fold.isCollapsed()) {\n  int hiddenLineCount=fold.getLineCount();\n  if (hiddenLineCount == 0) {\n    break;\n  }\n  line+=hiddenLineCount;\n  fold=fm.getFoldForLine(line - 1);\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 846,
        "startLineNumber" : 257,
        "startColumnNumber" : 36,
        "endLineNumber" : 271,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  Fold fold=fm.getFoldForLine(line - 1);\n  while ((fold != null) && fold.isCollapsed()) {\n    int hiddenLineCount=fold.getLineCount();\n    if (hiddenLineCount == 0) {\n      break;\n    }\n    line+=hiddenLineCount;\n    fold=fm.getFoldForLine(line - 1);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 862,
        "startLineNumber" : 257,
        "startColumnNumber" : 20,
        "endLineNumber" : 271,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (fm != null) {\n  Fold fold=fm.getFoldForLine(line - 1);\n  while ((fold != null) && fold.isCollapsed()) {\n    int hiddenLineCount=fold.getLineCount();\n    if (hiddenLineCount == 0) {\n      break;\n    }\n    line+=hiddenLineCount;\n    fold=fm.getFoldForLine(line - 1);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 52,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1041,
        "startLineNumber" : 252,
        "startColumnNumber" : 112,
        "endLineNumber" : 274,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  paintLineNumber(g,metrics,rhs,y,line);\n  y+=cellHeight;\n  if (fm != null) {\n    Fold fold=fm.getFoldForLine(line - 1);\n    while ((fold != null) && fold.isCollapsed()) {\n      int hiddenLineCount=fold.getLineCount();\n      if (hiddenLineCount == 0) {\n        break;\n      }\n      line+=hiddenLineCount;\n      fold=fm.getFoldForLine(line - 1);\n    }\n  }\n  line++;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1137,
        "startLineNumber" : 252,
        "startColumnNumber" : 16,
        "endLineNumber" : 274,
        "endColumnNumber" : 17
      },
      "nodeContext" : "while ((y < visibleRect.y + visibleRect.height + ascent) && (line <= rTextArea.getLineCount())) {\n  paintLineNumber(g,metrics,rhs,y,line);\n  y+=cellHeight;\n  if (fm != null) {\n    Fold fold=fm.getFoldForLine(line - 1);\n    while ((fold != null) && fold.isCollapsed()) {\n      int hiddenLineCount=fold.getLineCount();\n      if (hiddenLineCount == 0) {\n        break;\n      }\n      line+=hiddenLineCount;\n      fold=fm.getFoldForLine(line - 1);\n    }\n  }\n  line++;\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 87,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1957,
        "startLineNumber" : 232,
        "startColumnNumber" : 19,
        "endLineNumber" : 275,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  textAreaInsets=rTextArea.getInsets(textAreaInsets);\n  if (visibleRect.y < textAreaInsets.top) {\n    visibleRect.height-=(textAreaInsets.top - visibleRect.y);\n    visibleRect.y=textAreaInsets.top;\n  }\n  int topLine=(visibleRect.y - textAreaInsets.top) / cellHeight;\n  int actualTopY=topLine * cellHeight + textAreaInsets.top;\n  int y=actualTopY + ascent;\n  topLine+=fm.getHiddenLineCountAbove(topLine,true);\n  g.setColor(getForeground());\n  int line=topLine + 1;\n  while ((y < visibleRect.y + visibleRect.height + ascent) && (line <= rTextArea.getLineCount())) {\n    paintLineNumber(g,metrics,rhs,y,line);\n    y+=cellHeight;\n    if (fm != null) {\n      Fold fold=fm.getFoldForLine(line - 1);\n      while ((fold != null) && fold.isCollapsed()) {\n        int hiddenLineCount=fold.getLineCount();\n        if (hiddenLineCount == 0) {\n          break;\n        }\n        line+=hiddenLineCount;\n        fold=fm.getFoldForLine(line - 1);\n      }\n    }\n    line++;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 178,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3805,
        "startLineNumber" : 193,
        "startColumnNumber" : 12,
        "endLineNumber" : 275,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (rTextArea.getLineWrap()) {\n  SourceSyntaxTextAreaUI ui=(SourceSyntaxTextAreaUI)rTextArea.getUI();\n  View v=ui.getRootView(rTextArea).getView(0);\n  Element root=rTextArea.getDocument().getDefaultRootElement();\n  int lineCount=root.getElementCount();\n  int topPosition=rTextArea.viewToModel(visibleRect.getLocation());\n  int topLine=root.getElementIndex(topPosition);\n  Rectangle visibleEditorRect=ui.getVisibleEditorRect();\n  Rectangle r=LineNumberList.getChildViewBounds(v,topLine,visibleEditorRect);\n  int y=r.y;\n  int visibleBottom=visibleRect.y + visibleRect.height;\n  while (y < visibleBottom) {\n    r=getChildViewBounds(v,topLine,visibleEditorRect);\n    paintLineNumber(g,metrics,rhs,y + ascent,topLine + 1);\n    y+=r.height;\n    if (fm != null) {\n      Fold fold=fm.getFoldForLine(topLine);\n      if ((fold != null) && fold.isCollapsed()) {\n        topLine+=fold.getCollapsedLineCount();\n      }\n    }\n    if (++topLine >= lineCount) {\n      break;\n    }\n  }\n}\n else {\n  textAreaInsets=rTextArea.getInsets(textAreaInsets);\n  if (visibleRect.y < textAreaInsets.top) {\n    visibleRect.height-=(textAreaInsets.top - visibleRect.y);\n    visibleRect.y=textAreaInsets.top;\n  }\n  int topLine=(visibleRect.y - textAreaInsets.top) / cellHeight;\n  int actualTopY=topLine * cellHeight + textAreaInsets.top;\n  int y=actualTopY + ascent;\n  topLine+=fm.getHiddenLineCountAbove(topLine,true);\n  g.setColor(getForeground());\n  int line=topLine + 1;\n  while ((y < visibleRect.y + visibleRect.height + ascent) && (line <= rTextArea.getLineCount())) {\n    paintLineNumber(g,metrics,rhs,y,line);\n    y+=cellHeight;\n    if (fm != null) {\n      Fold fold=fm.getFoldForLine(line - 1);\n      while ((fold != null) && fold.isCollapsed()) {\n        int hiddenLineCount=fold.getLineCount();\n        if (hiddenLineCount == 0) {\n          break;\n        }\n        line+=hiddenLineCount;\n        fold=fm.getFoldForLine(line - 1);\n      }\n    }\n    line++;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 346,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4928,
        "startLineNumber" : 162,
        "startColumnNumber" : 50,
        "endLineNumber" : 276,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  visibleRect=g.getClipBounds(visibleRect);\n  if (visibleRect == null) {\n    visibleRect=getVisibleRect();\n  }\n  if (visibleRect == null) {\n    return;\n  }\n  int cellWidth=getPreferredSize().width;\n  int cellHeight=rTextArea.getLineHeight();\n  int ascent=rTextArea.getMaxAscent();\n  FoldManager fm=((RSyntaxTextArea)rTextArea).getFoldManager();\n  int RHS_BORDER_WIDTH=getRhsBorderWidth();\n  FontMetrics metrics=g.getFontMetrics();\n  int rhs=getWidth() - RHS_BORDER_WIDTH;\n  if (getParent() instanceof Gutter) {\n    g.setColor(getParent().getBackground());\n  }\n else {\n    g.setColor(getBackground());\n  }\n  g.fillRect(0,visibleRect.y,cellWidth,visibleRect.height);\n  g.setFont(getFont());\n  if (aaHints != null) {\n    ((Graphics2D)g).addRenderingHints(aaHints);\n  }\n  if (rTextArea.getLineWrap()) {\n    SourceSyntaxTextAreaUI ui=(SourceSyntaxTextAreaUI)rTextArea.getUI();\n    View v=ui.getRootView(rTextArea).getView(0);\n    Element root=rTextArea.getDocument().getDefaultRootElement();\n    int lineCount=root.getElementCount();\n    int topPosition=rTextArea.viewToModel(visibleRect.getLocation());\n    int topLine=root.getElementIndex(topPosition);\n    Rectangle visibleEditorRect=ui.getVisibleEditorRect();\n    Rectangle r=LineNumberList.getChildViewBounds(v,topLine,visibleEditorRect);\n    int y=r.y;\n    int visibleBottom=visibleRect.y + visibleRect.height;\n    while (y < visibleBottom) {\n      r=getChildViewBounds(v,topLine,visibleEditorRect);\n      paintLineNumber(g,metrics,rhs,y + ascent,topLine + 1);\n      y+=r.height;\n      if (fm != null) {\n        Fold fold=fm.getFoldForLine(topLine);\n        if ((fold != null) && fold.isCollapsed()) {\n          topLine+=fold.getCollapsedLineCount();\n        }\n      }\n      if (++topLine >= lineCount) {\n        break;\n      }\n    }\n  }\n else {\n    textAreaInsets=rTextArea.getInsets(textAreaInsets);\n    if (visibleRect.y < textAreaInsets.top) {\n      visibleRect.height-=(textAreaInsets.top - visibleRect.y);\n      visibleRect.y=textAreaInsets.top;\n    }\n    int topLine=(visibleRect.y - textAreaInsets.top) / cellHeight;\n    int actualTopY=topLine * cellHeight + textAreaInsets.top;\n    int y=actualTopY + ascent;\n    topLine+=fm.getHiddenLineCountAbove(topLine,true);\n    g.setColor(getForeground());\n    int line=topLine + 1;\n    while ((y < visibleRect.y + visibleRect.height + ascent) && (line <= rTextArea.getLineCount())) {\n      paintLineNumber(g,metrics,rhs,y,line);\n      y+=cellHeight;\n      if (fm != null) {\n        Fold fold=fm.getFoldForLine(line - 1);\n        while ((fold != null) && fold.isCollapsed()) {\n          int hiddenLineCount=fold.getLineCount();\n          if (hiddenLineCount == 0) {\n            break;\n          }\n          line+=hiddenLineCount;\n          fold=fm.getFoldForLine(line - 1);\n        }\n      }\n      line++;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 480,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 5103,
        "startLineNumber" : 158,
        "startColumnNumber" : 8,
        "endLineNumber" : 276,
        "endColumnNumber" : 9
      },
      "nodeContext" : "/** \n * @see org.fife.ui.rtextarea.LineNumberList#paintComponent(java.awt.Graphics)\n */\n@Override protected void paintComponent(Graphics g){\n  visibleRect=g.getClipBounds(visibleRect);\n  if (visibleRect == null) {\n    visibleRect=getVisibleRect();\n  }\n  if (visibleRect == null) {\n    return;\n  }\n  int cellWidth=getPreferredSize().width;\n  int cellHeight=rTextArea.getLineHeight();\n  int ascent=rTextArea.getMaxAscent();\n  FoldManager fm=((RSyntaxTextArea)rTextArea).getFoldManager();\n  int RHS_BORDER_WIDTH=getRhsBorderWidth();\n  FontMetrics metrics=g.getFontMetrics();\n  int rhs=getWidth() - RHS_BORDER_WIDTH;\n  if (getParent() instanceof Gutter) {\n    g.setColor(getParent().getBackground());\n  }\n else {\n    g.setColor(getBackground());\n  }\n  g.fillRect(0,visibleRect.y,cellWidth,visibleRect.height);\n  g.setFont(getFont());\n  if (aaHints != null) {\n    ((Graphics2D)g).addRenderingHints(aaHints);\n  }\n  if (rTextArea.getLineWrap()) {\n    SourceSyntaxTextAreaUI ui=(SourceSyntaxTextAreaUI)rTextArea.getUI();\n    View v=ui.getRootView(rTextArea).getView(0);\n    Element root=rTextArea.getDocument().getDefaultRootElement();\n    int lineCount=root.getElementCount();\n    int topPosition=rTextArea.viewToModel(visibleRect.getLocation());\n    int topLine=root.getElementIndex(topPosition);\n    Rectangle visibleEditorRect=ui.getVisibleEditorRect();\n    Rectangle r=LineNumberList.getChildViewBounds(v,topLine,visibleEditorRect);\n    int y=r.y;\n    int visibleBottom=visibleRect.y + visibleRect.height;\n    while (y < visibleBottom) {\n      r=getChildViewBounds(v,topLine,visibleEditorRect);\n      paintLineNumber(g,metrics,rhs,y + ascent,topLine + 1);\n      y+=r.height;\n      if (fm != null) {\n        Fold fold=fm.getFoldForLine(topLine);\n        if ((fold != null) && fold.isCollapsed()) {\n          topLine+=fold.getCollapsedLineCount();\n        }\n      }\n      if (++topLine >= lineCount) {\n        break;\n      }\n    }\n  }\n else {\n    textAreaInsets=rTextArea.getInsets(textAreaInsets);\n    if (visibleRect.y < textAreaInsets.top) {\n      visibleRect.height-=(textAreaInsets.top - visibleRect.y);\n      visibleRect.y=textAreaInsets.top;\n    }\n    int topLine=(visibleRect.y - textAreaInsets.top) / cellHeight;\n    int actualTopY=topLine * cellHeight + textAreaInsets.top;\n    int y=actualTopY + ascent;\n    topLine+=fm.getHiddenLineCountAbove(topLine,true);\n    g.setColor(getForeground());\n    int line=topLine + 1;\n    while ((y < visibleRect.y + visibleRect.height + ascent) && (line <= rTextArea.getLineCount())) {\n      paintLineNumber(g,metrics,rhs,y,line);\n      y+=cellHeight;\n      if (fm != null) {\n        Fold fold=fm.getFoldForLine(line - 1);\n        while ((fold != null) && fold.isCollapsed()) {\n          int hiddenLineCount=fold.getLineCount();\n          if (hiddenLineCount == 0) {\n            break;\n          }\n          line+=hiddenLineCount;\n          fold=fm.getFoldForLine(line - 1);\n        }\n      }\n      line++;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 491,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 262,
        "startColumnNumber" : 28,
        "endLineNumber" : 262,
        "endColumnNumber" : 70
      },
      "nodeContext" : "int hiddenLineCount=fold.getLineCount();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.jd.gui.view.component.Fold"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 223,
    "startColumnNumber" : 29,
    "endLineNumber" : 223,
    "endColumnNumber" : 33
  }, {
    "charLength" : 4,
    "startLineNumber" : 223,
    "startColumnNumber" : 46,
    "endLineNumber" : 223,
    "endColumnNumber" : 50
  }, {
    "charLength" : 4,
    "startLineNumber" : 224,
    "startColumnNumber" : 39,
    "endLineNumber" : 224,
    "endColumnNumber" : 43
  }, {
    "charLength" : 4,
    "startLineNumber" : 261,
    "startColumnNumber" : 32,
    "endLineNumber" : 261,
    "endColumnNumber" : 36
  }, {
    "charLength" : 4,
    "startLineNumber" : 261,
    "startColumnNumber" : 49,
    "endLineNumber" : 261,
    "endColumnNumber" : 53
  }, {
    "charLength" : 4,
    "startLineNumber" : 262,
    "startColumnNumber" : 50,
    "endLineNumber" : 262,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 9
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 9
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 9
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 10
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 10
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 10
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 9
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 9
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 9
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 8
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 1
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 10
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 10
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 10
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 4
  } ]
}