{
  "id" : 510,
  "expression" : "SAMPLE_ISMC_1",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/smoothstreaming/src/test/java/com/google/android/exoplayer2/source/smoothstreaming/manifest/SsManifestParserTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "SAMPLE_ISMC_1",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 40,
      "startColumnNumber" : 77,
      "endLineNumber" : 40,
      "endColumnNumber" : 90
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 91
      },
      "nodeContext" : "TestUtil.getInputStream(ApplicationProvider.getApplicationContext(),SAMPLE_ISMC_1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 158,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 40,
        "endColumnNumber" : 92
      },
      "nodeContext" : "parser.parse(Uri.parse(\"https://example.com/test.ismc\"),TestUtil.getInputStream(ApplicationProvider.getApplicationContext(),SAMPLE_ISMC_1))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 159,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 40,
        "endColumnNumber" : 93
      },
      "nodeContext" : "parser.parse(Uri.parse(\"https://example.com/test.ismc\"),TestUtil.getInputStream(ApplicationProvider.getApplicationContext(),SAMPLE_ISMC_1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 387,
        "startLineNumber" : 36,
        "startColumnNumber" : 62,
        "endLineNumber" : 44,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  SsManifestParser parser=new SsManifestParser();\n  parser.parse(Uri.parse(\"https://example.com/test.ismc\"),TestUtil.getInputStream(ApplicationProvider.getApplicationContext(),SAMPLE_ISMC_1));\n  parser.parse(Uri.parse(\"https://example.com/test.ismc\"),TestUtil.getInputStream(ApplicationProvider.getApplicationContext(),SAMPLE_ISMC_2));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 550,
        "startLineNumber" : 34,
        "startColumnNumber" : 2,
        "endLineNumber" : 44,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Simple test to ensure the sample manifests parse without any exceptions being thrown. \n */\n@Test public void parseSmoothStreamingManifest() throws Exception {\n  SsManifestParser parser=new SsManifestParser();\n  parser.parse(Uri.parse(\"https://example.com/test.ismc\"),TestUtil.getInputStream(ApplicationProvider.getApplicationContext(),SAMPLE_ISMC_1));\n  parser.parse(Uri.parse(\"https://example.com/test.ismc\"),TestUtil.getInputStream(ApplicationProvider.getApplicationContext(),SAMPLE_ISMC_2));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 48,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 40,
        "endColumnNumber" : 91
      },
      "nodeContext" : "TestUtil.getInputStream(ApplicationProvider.getApplicationContext(),SAMPLE_ISMC_1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 40,
    "startColumnNumber" : 77,
    "endLineNumber" : 40,
    "endColumnNumber" : 90
  } ],
  "layoutRelationDataList" : [ ]
}