{
  "id" : 337,
  "expression" : "Files.readAllBytes(file1)",
  "projectName" : "GoogleContainerTools@jib",
  "commitID" : "a0742fd277b5490a0965dba4443f5864f1250199",
  "filePath" : "/jib-core/src/test/java/com/google/cloud/tools/jib/filesystem/FileOperationsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Files.readAllBytes(file1)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 60,
      "startColumnNumber" : 29,
      "endLineNumber" : 60,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 60,
        "endColumnNumber" : 82
      },
      "nodeContext" : "Assert.assertArrayEquals(Files.readAllBytes(file1),Files.readAllBytes(file2))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 60,
        "endColumnNumber" : 83
      },
      "nodeContext" : "Assert.assertArrayEquals(Files.readAllBytes(file1),Files.readAllBytes(file2));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 59,
        "startColumnNumber" : 75,
        "endLineNumber" : 61,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Assert.assertArrayEquals(Files.readAllBytes(file1),Files.readAllBytes(file2));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 162,
        "startLineNumber" : 59,
        "startColumnNumber" : 2,
        "endLineNumber" : 61,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void assertFilesEqual(Path file1,Path file2) throws IOException {\n  Assert.assertArrayEquals(Files.readAllBytes(file1),Files.readAllBytes(file2));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 27,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 60,
        "startColumnNumber" : 4,
        "endLineNumber" : 60,
        "endColumnNumber" : 83
      },
      "nodeContext" : "Assert.assertArrayEquals(Files.readAllBytes(file1),Files.readAllBytes(file2));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "byte[]"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 60,
    "startColumnNumber" : 29,
    "endLineNumber" : 60,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ ]
}