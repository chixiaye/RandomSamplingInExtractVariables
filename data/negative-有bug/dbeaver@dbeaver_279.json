{
  "id" : 279,
  "expression" : "false",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.ui.navigator/src/org/jkiss/dbeaver/ui/controls/ViewerColumnController.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "false",
    "nodeType" : "BooleanLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 161,
      "startColumnNumber" : 70,
      "endLineNumber" : 161,
      "endColumnNumber" : 75
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 663,
        "startLineNumber" : 161,
        "startColumnNumber" : 8,
        "endLineNumber" : 176,
        "endColumnNumber" : 26
      },
      "nodeContext" : "addColumn(name,description,style,defaultVisible,required,false,null,new ColumnLabelProvider(){\n  @Override public String getText(  Object element){\n    return labelProvider.getText((ELEMENT)element);\n  }\n  @Override public void update(  ViewerCell cell){\n    if (cell.getColumnIndex() == 0) {\n      if (defaultIcon != null) {\n        cell.setImage(DBeaverIcons.getImage(defaultIcon));\n      }\n    }\n    cell.setText(labelProvider.getText((ELEMENT)cell.getElement()));\n  }\n}\n,editingSupport)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 78,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 664,
        "startLineNumber" : 161,
        "startColumnNumber" : 8,
        "endLineNumber" : 176,
        "endColumnNumber" : 27
      },
      "nodeContext" : "addColumn(name,description,style,defaultVisible,required,false,null,new ColumnLabelProvider(){\n  @Override public String getText(  Object element){\n    return labelProvider.getText((ELEMENT)element);\n  }\n  @Override public void update(  ViewerCell cell){\n    if (cell.getColumnIndex() == 0) {\n      if (defaultIcon != null) {\n        cell.setImage(DBeaverIcons.getImage(defaultIcon));\n      }\n    }\n    cell.setText(labelProvider.getText((ELEMENT)cell.getElement()));\n  }\n}\n,editingSupport);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 79,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 680,
        "startLineNumber" : 160,
        "startColumnNumber" : 4,
        "endLineNumber" : 177,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  addColumn(name,description,style,defaultVisible,required,false,null,new ColumnLabelProvider(){\n    @Override public String getText(    Object element){\n      return labelProvider.getText((ELEMENT)element);\n    }\n    @Override public void update(    ViewerCell cell){\n      if (cell.getColumnIndex() == 0) {\n        if (defaultIcon != null) {\n          cell.setImage(DBeaverIcons.getImage(defaultIcon));\n        }\n      }\n      cell.setText(labelProvider.getText((ELEMENT)cell.getElement()));\n    }\n  }\n,editingSupport);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 80,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 924,
        "startLineNumber" : 152,
        "startColumnNumber" : 4,
        "endLineNumber" : 177,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void addColumn(String name,String description,int style,boolean defaultVisible,boolean required,IColumnTextProvider<ELEMENT> labelProvider,EditingSupport editingSupport){\n  addColumn(name,description,style,defaultVisible,required,false,null,new ColumnLabelProvider(){\n    @Override public String getText(    Object element){\n      return labelProvider.getText((ELEMENT)element);\n    }\n    @Override public void update(    ViewerCell cell){\n      if (cell.getColumnIndex() == 0) {\n        if (defaultIcon != null) {\n          cell.setImage(DBeaverIcons.getImage(defaultIcon));\n        }\n      }\n      cell.setText(labelProvider.getText((ELEMENT)cell.getElement()));\n    }\n  }\n,editingSupport);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 112,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 663,
        "startLineNumber" : 161,
        "startColumnNumber" : 8,
        "endLineNumber" : 176,
        "endColumnNumber" : 26
      },
      "nodeContext" : "addColumn(name,description,style,defaultVisible,required,false,null,new ColumnLabelProvider(){\n  @Override public String getText(  Object element){\n    return labelProvider.getText((ELEMENT)element);\n  }\n  @Override public void update(  ViewerCell cell){\n    if (cell.getColumnIndex() == 0) {\n      if (defaultIcon != null) {\n        cell.setImage(DBeaverIcons.getImage(defaultIcon));\n      }\n    }\n    cell.setText(labelProvider.getText((ELEMENT)cell.getElement()));\n  }\n}\n,editingSupport)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 78,
      "astHeight" : 13
    },
    "tokenLength" : 1,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 161,
    "startColumnNumber" : 70,
    "endLineNumber" : 161,
    "endColumnNumber" : 75
  } ],
  "layoutRelationDataList" : [ ]
}