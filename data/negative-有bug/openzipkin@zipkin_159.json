{
  "id" : 159,
  "expression" : "with128BitId1.toBuilder()",
  "projectName" : "openzipkin@zipkin",
  "commitID" : "f02a993656f506277ca83737ddf494ed45fde4b3",
  "filePath" : "/zipkin-tests/src/main/java/zipkin2/storage/ITStrictTraceIdFalse.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "with128BitId1.toBuilder()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 118,
      "startColumnNumber" : 24,
      "endLineNumber" : 118,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 118,
        "startColumnNumber" : 24,
        "endLineNumber" : 119,
        "endColumnNumber" : 53
      },
      "nodeContext" : "with128BitId1.toBuilder().traceId(with128BitId1.traceId().substring(16))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 87,
        "startLineNumber" : 118,
        "startColumnNumber" : 24,
        "endLineNumber" : 119,
        "endColumnNumber" : 61
      },
      "nodeContext" : "with128BitId1.toBuilder().traceId(with128BitId1.traceId().substring(16)).id(\"a\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 118,
        "startColumnNumber" : 24,
        "endLineNumber" : 120,
        "endColumnNumber" : 57
      },
      "nodeContext" : "with128BitId1.toBuilder().traceId(with128BitId1.traceId().substring(16)).id(\"a\").timestamp(with128BitId1.timestampAsLong() + 1000L)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 160,
        "startLineNumber" : 118,
        "startColumnNumber" : 24,
        "endLineNumber" : 121,
        "endColumnNumber" : 14
      },
      "nodeContext" : "with128BitId1.toBuilder().traceId(with128BitId1.traceId().substring(16)).id(\"a\").timestamp(with128BitId1.timestampAsLong() + 1000L).build()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 23,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 175,
        "startLineNumber" : 118,
        "startColumnNumber" : 9,
        "endLineNumber" : 121,
        "endColumnNumber" : 14
      },
      "nodeContext" : "with64BitId1=with128BitId1.toBuilder().traceId(with128BitId1.traceId().substring(16)).id(\"a\").timestamp(with128BitId1.timestampAsLong() + 1000L).build()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 181,
        "startLineNumber" : 118,
        "startColumnNumber" : 4,
        "endLineNumber" : 121,
        "endColumnNumber" : 15
      },
      "nodeContext" : "Span with64BitId1=with128BitId1.toBuilder().traceId(with128BitId1.traceId().substring(16)).id(\"a\").timestamp(with128BitId1.timestampAsLong() + 1000L).build();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 28,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1381,
        "startLineNumber" : 115,
        "startColumnNumber" : 98,
        "endLineNumber" : 149,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String testSuffix=testSuffix(testInfo);\n  Span with128BitId1=spanBuilder(testSuffix).build();\n  Span with64BitId1=with128BitId1.toBuilder().traceId(with128BitId1.traceId().substring(16)).id(\"a\").timestamp(with128BitId1.timestampAsLong() + 1000L).build();\n  Span with128BitId2=spanBuilder(testSuffix).build();\n  Span with64BitId2=with128BitId2.toBuilder().traceId(with128BitId2.traceId().substring(16)).id(\"b\").timestamp(with128BitId2.timestampAsLong() + 1000L).build();\n  Span with128BitId3=spanBuilder(testSuffix).build();\n  Span with64BitId3=with128BitId3.toBuilder().traceId(with128BitId3.traceId().substring(16)).id(\"c\").timestamp(with128BitId3.timestampAsLong() + 1000L).build();\n  accept(with128BitId1,with64BitId1,with128BitId2,with64BitId2,with128BitId3,with64BitId3);\n  List<Span>[] trace1And3=new List[]{asList(with128BitId1,with64BitId1),asList(with128BitId3,with64BitId3)};\n  assertGetTracesReturns(asList(with128BitId1.traceId(),with64BitId1.traceId(),with128BitId3.traceId(),with64BitId3.traceId()),trace1And3);\n  assertGetTracesReturns(asList(with64BitId1.traceId(),with64BitId3.traceId()),trace1And3);\n  assertGetTracesReturns(asList(with128BitId1.traceId(),with128BitId3.traceId()),trace1And3);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 198,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1543,
        "startLineNumber" : 114,
        "startColumnNumber" : 2,
        "endLineNumber" : 149,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * current implementation cannot return exact form reported \n */\n@Test protected void getTraces_retrievesBy64Or128BitTraceId(TestInfo testInfo) throws Exception {\n  String testSuffix=testSuffix(testInfo);\n  Span with128BitId1=spanBuilder(testSuffix).build();\n  Span with64BitId1=with128BitId1.toBuilder().traceId(with128BitId1.traceId().substring(16)).id(\"a\").timestamp(with128BitId1.timestampAsLong() + 1000L).build();\n  Span with128BitId2=spanBuilder(testSuffix).build();\n  Span with64BitId2=with128BitId2.toBuilder().traceId(with128BitId2.traceId().substring(16)).id(\"b\").timestamp(with128BitId2.timestampAsLong() + 1000L).build();\n  Span with128BitId3=spanBuilder(testSuffix).build();\n  Span with64BitId3=with128BitId3.toBuilder().traceId(with128BitId3.traceId().substring(16)).id(\"c\").timestamp(with128BitId3.timestampAsLong() + 1000L).build();\n  accept(with128BitId1,with64BitId1,with128BitId2,with64BitId2,with128BitId3,with64BitId3);\n  List<Span>[] trace1And3=new List[]{asList(with128BitId1,with64BitId1),asList(with128BitId3,with64BitId3)};\n  assertGetTracesReturns(asList(with128BitId1.traceId(),with64BitId1.traceId(),with128BitId3.traceId(),with64BitId3.traceId()),trace1And3);\n  assertGetTracesReturns(asList(with64BitId1.traceId(),with64BitId3.traceId()),trace1And3);\n  assertGetTracesReturns(asList(with128BitId1.traceId(),with128BitId3.traceId()),trace1And3);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 211,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 118,
        "startColumnNumber" : 24,
        "endLineNumber" : 119,
        "endColumnNumber" : 53
      },
      "nodeContext" : "with128BitId1.toBuilder().traceId(with128BitId1.traceId().substring(16))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "zipkin2.Span.Builder"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 118,
    "startColumnNumber" : 24,
    "endLineNumber" : 118,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ ]
}