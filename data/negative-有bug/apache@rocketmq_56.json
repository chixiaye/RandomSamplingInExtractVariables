{
  "id" : 56,
  "expression" : "RemotingCommand.createRequestCommand(1000,mqttHeader)",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/remoting/src/main/java/org/apache/rocketmq/remoting/transport/mqtt/dispatcher/MqttConnectEncodeDecode.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "RemotingCommand.createRequestCommand(1000,mqttHeader)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 71,
      "startLineNumber" : 58,
      "startColumnNumber" : 25,
      "endLineNumber" : 59,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 88,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 55
      },
      "nodeContext" : "requestCommand=RemotingCommand.createRequestCommand(1000,mqttHeader)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 56
      },
      "nodeContext" : "requestCommand=RemotingCommand.createRequestCommand(1000,mqttHeader);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1616,
        "startLineNumber" : 32,
        "startColumnNumber" : 59,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  RocketMQMqttConnectPayload payload=RocketMQMqttConnectPayload.fromMqttConnectPayload(((MqttConnectMessage)mqttMessage).payload());\n  RemotingCommand requestCommand=null;\n  MqttFixedHeader mqttFixedHeader=mqttMessage.fixedHeader();\n  MqttConnectVariableHeader variableHeader=(MqttConnectVariableHeader)mqttMessage.variableHeader();\n  MqttHeader mqttHeader=new MqttHeader();\n  mqttHeader.setMessageType(mqttFixedHeader.messageType().value());\n  mqttHeader.setDup(mqttFixedHeader.isDup());\n  mqttHeader.setQosLevel(mqttFixedHeader.qosLevel().value());\n  mqttHeader.setRetain(mqttFixedHeader.isRetain());\n  mqttHeader.setRemainingLength(mqttFixedHeader.remainingLength());\n  mqttHeader.setName(variableHeader.name());\n  mqttHeader.setVersion(variableHeader.version());\n  mqttHeader.setHasUserName(variableHeader.hasUserName());\n  mqttHeader.setHasPassword(variableHeader.hasPassword());\n  mqttHeader.setWillRetain(variableHeader.isWillRetain());\n  mqttHeader.setWillQos(variableHeader.willQos());\n  mqttHeader.setWillFlag(variableHeader.isWillFlag());\n  mqttHeader.setCleanSession(variableHeader.isCleanSession());\n  mqttHeader.setKeepAliveTimeSeconds(variableHeader.keepAliveTimeSeconds());\n  requestCommand=RemotingCommand.createRequestCommand(1000,mqttHeader);\n  CodecHelper.makeCustomHeaderToNet(requestCommand);\n  requestCommand.setBody(payload.encode());\n  return requestCommand;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 173,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1685,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 64,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public RemotingCommand decode(MqttMessage mqttMessage){\n  RocketMQMqttConnectPayload payload=RocketMQMqttConnectPayload.fromMqttConnectPayload(((MqttConnectMessage)mqttMessage).payload());\n  RemotingCommand requestCommand=null;\n  MqttFixedHeader mqttFixedHeader=mqttMessage.fixedHeader();\n  MqttConnectVariableHeader variableHeader=(MqttConnectVariableHeader)mqttMessage.variableHeader();\n  MqttHeader mqttHeader=new MqttHeader();\n  mqttHeader.setMessageType(mqttFixedHeader.messageType().value());\n  mqttHeader.setDup(mqttFixedHeader.isDup());\n  mqttHeader.setQosLevel(mqttFixedHeader.qosLevel().value());\n  mqttHeader.setRetain(mqttFixedHeader.isRetain());\n  mqttHeader.setRemainingLength(mqttFixedHeader.remainingLength());\n  mqttHeader.setName(variableHeader.name());\n  mqttHeader.setVersion(variableHeader.version());\n  mqttHeader.setHasUserName(variableHeader.hasUserName());\n  mqttHeader.setHasPassword(variableHeader.hasPassword());\n  mqttHeader.setWillRetain(variableHeader.isWillRetain());\n  mqttHeader.setWillQos(variableHeader.willQos());\n  mqttHeader.setWillFlag(variableHeader.isWillFlag());\n  mqttHeader.setCleanSession(variableHeader.isCleanSession());\n  mqttHeader.setKeepAliveTimeSeconds(variableHeader.keepAliveTimeSeconds());\n  requestCommand=RemotingCommand.createRequestCommand(1000,mqttHeader);\n  CodecHelper.makeCustomHeaderToNet(requestCommand);\n  requestCommand.setBody(payload.encode());\n  return requestCommand;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 184,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 56
      },
      "nodeContext" : "requestCommand=RemotingCommand.createRequestCommand(1000,mqttHeader);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "org.apache.rocketmq.remoting.protocol.RemotingCommand"
  } ],
  "positionList" : [ {
    "charLength" : 71,
    "startLineNumber" : 58,
    "startColumnNumber" : 25,
    "endLineNumber" : 59,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ ]
}