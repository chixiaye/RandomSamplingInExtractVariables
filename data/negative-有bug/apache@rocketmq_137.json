{
  "id" : 137,
  "expression" : "valueArray[0]",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/acl/src/main/java/org/apache/rocketmq/acl/plain/RemoteAddressStrategyFactory.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "valueArray[0]",
    "nodeType" : "ArrayAccess",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 146,
      "startColumnNumber" : 45,
      "endLineNumber" : 146,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 146,
        "startColumnNumber" : 29,
        "endLineNumber" : 146,
        "endColumnNumber" : 59
      },
      "nodeContext" : "Integer.valueOf(valueArray[0])",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 146,
        "startColumnNumber" : 16,
        "endLineNumber" : 146,
        "endColumnNumber" : 59
      },
      "nodeContext" : "this.start=Integer.valueOf(valueArray[0])",
      "nodeType" : "Assignment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 146,
        "startColumnNumber" : 16,
        "endLineNumber" : 146,
        "endColumnNumber" : 60
      },
      "nodeContext" : "this.start=Integer.valueOf(valueArray[0]);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 680,
        "startLineNumber" : 140,
        "startColumnNumber" : 48,
        "endLineNumber" : 151,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (value.indexOf(\"-\") == 0) {\n    throw new AclException(String.format(\"RangeRemoteAddressStrategy netaddress examine scope Exception value %s \",value));\n  }\n  String[] valueArray=StringUtils.split(value,\"-\");\n  this.start=Integer.valueOf(valueArray[0]);\n  this.end=Integer.valueOf(valueArray[1]);\n  if (!(AclUtils.isScope(end) && AclUtils.isScope(start) && start <= end)) {\n    throw new AclException(String.format(\"RangeRemoteAddressStrategy netaddress examine scope Exception start is %s , end is %s\",start,end));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 78,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 709,
        "startLineNumber" : 140,
        "startColumnNumber" : 19,
        "endLineNumber" : 151,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (AclUtils.isMinus(value)) {\n  if (value.indexOf(\"-\") == 0) {\n    throw new AclException(String.format(\"RangeRemoteAddressStrategy netaddress examine scope Exception value %s \",value));\n  }\n  String[] valueArray=StringUtils.split(value,\"-\");\n  this.start=Integer.valueOf(valueArray[0]);\n  this.end=Integer.valueOf(valueArray[1]);\n  if (!(AclUtils.isScope(end) && AclUtils.isScope(start) && start <= end)) {\n    throw new AclException(String.format(\"RangeRemoteAddressStrategy netaddress examine scope Exception start is %s , end is %s\",start,end));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 83,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 787,
        "startLineNumber" : 138,
        "startColumnNumber" : 12,
        "endLineNumber" : 151,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (\"*\".equals(value)) {\n  setValue(0,255);\n}\n else if (AclUtils.isMinus(value)) {\n  if (value.indexOf(\"-\") == 0) {\n    throw new AclException(String.format(\"RangeRemoteAddressStrategy netaddress examine scope Exception value %s \",value));\n  }\n  String[] valueArray=StringUtils.split(value,\"-\");\n  this.start=Integer.valueOf(valueArray[0]);\n  this.end=Integer.valueOf(valueArray[1]);\n  if (!(AclUtils.isScope(end) && AclUtils.isScope(start) && start <= end)) {\n    throw new AclException(String.format(\"RangeRemoteAddressStrategy netaddress examine scope Exception start is %s , end is %s\",start,end));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 94,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 942,
        "startLineNumber" : 135,
        "startColumnNumber" : 63,
        "endLineNumber" : 153,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String value=strArray[index].trim();\n  this.index=index;\n  if (\"*\".equals(value)) {\n    setValue(0,255);\n  }\n else   if (AclUtils.isMinus(value)) {\n    if (value.indexOf(\"-\") == 0) {\n      throw new AclException(String.format(\"RangeRemoteAddressStrategy netaddress examine scope Exception value %s \",value));\n    }\n    String[] valueArray=StringUtils.split(value,\"-\");\n    this.start=Integer.valueOf(valueArray[0]);\n    this.end=Integer.valueOf(valueArray[1]);\n    if (!(AclUtils.isScope(end) && AclUtils.isScope(start) && start <= end)) {\n      throw new AclException(String.format(\"RangeRemoteAddressStrategy netaddress examine scope Exception start is %s , end is %s\",start,end));\n    }\n  }\n  return this.end > 0 ? true : false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 120,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 997,
        "startLineNumber" : 135,
        "startColumnNumber" : 8,
        "endLineNumber" : 153,
        "endColumnNumber" : 9
      },
      "nodeContext" : "private boolean analysis(String[] strArray,int index){\n  String value=strArray[index].trim();\n  this.index=index;\n  if (\"*\".equals(value)) {\n    setValue(0,255);\n  }\n else   if (AclUtils.isMinus(value)) {\n    if (value.indexOf(\"-\") == 0) {\n      throw new AclException(String.format(\"RangeRemoteAddressStrategy netaddress examine scope Exception value %s \",value));\n    }\n    String[] valueArray=StringUtils.split(value,\"-\");\n    this.start=Integer.valueOf(valueArray[0]);\n    this.end=Integer.valueOf(valueArray[1]);\n    if (!(AclUtils.isScope(end) && AclUtils.isScope(start) && start <= end)) {\n      throw new AclException(String.format(\"RangeRemoteAddressStrategy netaddress examine scope Exception start is %s , end is %s\",start,end));\n    }\n  }\n  return this.end > 0 ? true : false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 133,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 146,
        "startColumnNumber" : 16,
        "endLineNumber" : 146,
        "endColumnNumber" : 60
      },
      "nodeContext" : "this.start=Integer.valueOf(valueArray[0]);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 146,
    "startColumnNumber" : 45,
    "endLineNumber" : 146,
    "endColumnNumber" : 58
  } ],
  "layoutRelationDataList" : [ ]
}