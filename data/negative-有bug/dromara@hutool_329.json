{
  "id" : 329,
  "expression" : "\"Unsupported key object type: {}\"",
  "projectName" : "dromara@hutool",
  "commitID" : "c99b48a4c4a6121eaad38ca9706953d7ce7c3a77",
  "filePath" : "/hutool-crypto/src/main/java/cn/hutool/crypto/OpensslKeyUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Unsupported key object type: {}\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 184,
      "startColumnNumber" : 29,
      "endLineNumber" : 184,
      "endColumnNumber" : 62
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 184,
        "startColumnNumber" : 9,
        "endLineNumber" : 184,
        "endColumnNumber" : 85
      },
      "nodeContext" : "new CryptoException(\"Unsupported key object type: {}\",keyObject.getClass())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 184,
        "startColumnNumber" : 3,
        "endLineNumber" : 184,
        "endColumnNumber" : 86
      },
      "nodeContext" : "throw new CryptoException(\"Unsupported key object type: {}\",keyObject.getClass());\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 182,
        "startColumnNumber" : 9,
        "endLineNumber" : 185,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  throw new CryptoException(\"Unsupported key object type: {}\",keyObject.getClass());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 290,
        "startLineNumber" : 179,
        "startColumnNumber" : 9,
        "endLineNumber" : 185,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (keyObject instanceof PKCS10CertificationRequest) {\n  return getPublicKey(((PKCS10CertificationRequest)keyObject).getSubjectPublicKeyInfo());\n}\n else {\n  throw new CryptoException(\"Unsupported key object type: {}\",keyObject.getClass());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 505,
        "startLineNumber" : 176,
        "startColumnNumber" : 9,
        "endLineNumber" : 185,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (keyObject instanceof X509TrustedCertificateBlock) {\n  return getPublicKey(((X509TrustedCertificateBlock)keyObject).getCertificateHolder().getSubjectPublicKeyInfo());\n}\n else if (keyObject instanceof PKCS10CertificationRequest) {\n  return getPublicKey(((PKCS10CertificationRequest)keyObject).getSubjectPublicKeyInfo());\n}\n else {\n  throw new CryptoException(\"Unsupported key object type: {}\",keyObject.getClass());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 43,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 677,
        "startLineNumber" : 173,
        "startColumnNumber" : 9,
        "endLineNumber" : 185,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (keyObject instanceof X509CertificateHolder) {\n  return getPublicKey(((X509CertificateHolder)keyObject).getSubjectPublicKeyInfo());\n}\n else if (keyObject instanceof X509TrustedCertificateBlock) {\n  return getPublicKey(((X509TrustedCertificateBlock)keyObject).getCertificateHolder().getSubjectPublicKeyInfo());\n}\n else if (keyObject instanceof PKCS10CertificationRequest) {\n  return getPublicKey(((PKCS10CertificationRequest)keyObject).getSubjectPublicKeyInfo());\n}\n else {\n  throw new CryptoException(\"Unsupported key object type: {}\",keyObject.getClass());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 59,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 823,
        "startLineNumber" : 170,
        "startColumnNumber" : 9,
        "endLineNumber" : 185,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (keyObject instanceof SubjectPublicKeyInfo) {\n  return getPublicKey((SubjectPublicKeyInfo)keyObject);\n}\n else if (keyObject instanceof X509CertificateHolder) {\n  return getPublicKey(((X509CertificateHolder)keyObject).getSubjectPublicKeyInfo());\n}\n else if (keyObject instanceof X509TrustedCertificateBlock) {\n  return getPublicKey(((X509TrustedCertificateBlock)keyObject).getCertificateHolder().getSubjectPublicKeyInfo());\n}\n else if (keyObject instanceof PKCS10CertificationRequest) {\n  return getPublicKey(((PKCS10CertificationRequest)keyObject).getSubjectPublicKeyInfo());\n}\n else {\n  throw new CryptoException(\"Unsupported key object type: {}\",keyObject.getClass());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 72,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1007,
        "startLineNumber" : 167,
        "startColumnNumber" : 9,
        "endLineNumber" : 185,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (keyObject instanceof PEMEncryptedKeyPair) {\n  return getPrivateKey(decrypt((PEMEncryptedKeyPair)keyObject,password).getPrivateKeyInfo());\n}\n else if (keyObject instanceof SubjectPublicKeyInfo) {\n  return getPublicKey((SubjectPublicKeyInfo)keyObject);\n}\n else if (keyObject instanceof X509CertificateHolder) {\n  return getPublicKey(((X509CertificateHolder)keyObject).getSubjectPublicKeyInfo());\n}\n else if (keyObject instanceof X509TrustedCertificateBlock) {\n  return getPublicKey(((X509TrustedCertificateBlock)keyObject).getCertificateHolder().getSubjectPublicKeyInfo());\n}\n else if (keyObject instanceof PKCS10CertificationRequest) {\n  return getPublicKey(((PKCS10CertificationRequest)keyObject).getSubjectPublicKeyInfo());\n}\n else {\n  throw new CryptoException(\"Unsupported key object type: {}\",keyObject.getClass());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 90,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1193,
        "startLineNumber" : 164,
        "startColumnNumber" : 9,
        "endLineNumber" : 185,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (keyObject instanceof PKCS8EncryptedPrivateKeyInfo) {\n  return getPrivateKey(decrypt((PKCS8EncryptedPrivateKeyInfo)keyObject,password));\n}\n else if (keyObject instanceof PEMEncryptedKeyPair) {\n  return getPrivateKey(decrypt((PEMEncryptedKeyPair)keyObject,password).getPrivateKeyInfo());\n}\n else if (keyObject instanceof SubjectPublicKeyInfo) {\n  return getPublicKey((SubjectPublicKeyInfo)keyObject);\n}\n else if (keyObject instanceof X509CertificateHolder) {\n  return getPublicKey(((X509CertificateHolder)keyObject).getSubjectPublicKeyInfo());\n}\n else if (keyObject instanceof X509TrustedCertificateBlock) {\n  return getPublicKey(((X509TrustedCertificateBlock)keyObject).getCertificateHolder().getSubjectPublicKeyInfo());\n}\n else if (keyObject instanceof PKCS10CertificationRequest) {\n  return getPublicKey(((PKCS10CertificationRequest)keyObject).getSubjectPublicKeyInfo());\n}\n else {\n  throw new CryptoException(\"Unsupported key object type: {}\",keyObject.getClass());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 106,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1320,
        "startLineNumber" : 161,
        "startColumnNumber" : 9,
        "endLineNumber" : 185,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (keyObject instanceof PEMKeyPair) {\n  return getKeyPair((PEMKeyPair)keyObject).getPrivate();\n}\n else if (keyObject instanceof PKCS8EncryptedPrivateKeyInfo) {\n  return getPrivateKey(decrypt((PKCS8EncryptedPrivateKeyInfo)keyObject,password));\n}\n else if (keyObject instanceof PEMEncryptedKeyPair) {\n  return getPrivateKey(decrypt((PEMEncryptedKeyPair)keyObject,password).getPrivateKeyInfo());\n}\n else if (keyObject instanceof SubjectPublicKeyInfo) {\n  return getPublicKey((SubjectPublicKeyInfo)keyObject);\n}\n else if (keyObject instanceof X509CertificateHolder) {\n  return getPublicKey(((X509CertificateHolder)keyObject).getSubjectPublicKeyInfo());\n}\n else if (keyObject instanceof X509TrustedCertificateBlock) {\n  return getPublicKey(((X509TrustedCertificateBlock)keyObject).getCertificateHolder().getSubjectPublicKeyInfo());\n}\n else if (keyObject instanceof PKCS10CertificationRequest) {\n  return getPublicKey(((PKCS10CertificationRequest)keyObject).getSubjectPublicKeyInfo());\n}\n else {\n  throw new CryptoException(\"Unsupported key object type: {}\",keyObject.getClass());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 121,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1449,
        "startLineNumber" : 158,
        "startColumnNumber" : 2,
        "endLineNumber" : 185,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (keyObject instanceof PrivateKeyInfo) {\n  return getPrivateKey((PrivateKeyInfo)keyObject);\n}\n else if (keyObject instanceof PEMKeyPair) {\n  return getKeyPair((PEMKeyPair)keyObject).getPrivate();\n}\n else if (keyObject instanceof PKCS8EncryptedPrivateKeyInfo) {\n  return getPrivateKey(decrypt((PKCS8EncryptedPrivateKeyInfo)keyObject,password));\n}\n else if (keyObject instanceof PEMEncryptedKeyPair) {\n  return getPrivateKey(decrypt((PEMEncryptedKeyPair)keyObject,password).getPrivateKeyInfo());\n}\n else if (keyObject instanceof SubjectPublicKeyInfo) {\n  return getPublicKey((SubjectPublicKeyInfo)keyObject);\n}\n else if (keyObject instanceof X509CertificateHolder) {\n  return getPublicKey(((X509CertificateHolder)keyObject).getSubjectPublicKeyInfo());\n}\n else if (keyObject instanceof X509TrustedCertificateBlock) {\n  return getPublicKey(((X509TrustedCertificateBlock)keyObject).getCertificateHolder().getSubjectPublicKeyInfo());\n}\n else if (keyObject instanceof PKCS10CertificationRequest) {\n  return getPublicKey(((PKCS10CertificationRequest)keyObject).getSubjectPublicKeyInfo());\n}\n else {\n  throw new CryptoException(\"Unsupported key object type: {}\",keyObject.getClass());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 134,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1458,
        "startLineNumber" : 157,
        "startColumnNumber" : 114,
        "endLineNumber" : 186,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  if (keyObject instanceof PrivateKeyInfo) {\n    return getPrivateKey((PrivateKeyInfo)keyObject);\n  }\n else   if (keyObject instanceof PEMKeyPair) {\n    return getKeyPair((PEMKeyPair)keyObject).getPrivate();\n  }\n else   if (keyObject instanceof PKCS8EncryptedPrivateKeyInfo) {\n    return getPrivateKey(decrypt((PKCS8EncryptedPrivateKeyInfo)keyObject,password));\n  }\n else   if (keyObject instanceof PEMEncryptedKeyPair) {\n    return getPrivateKey(decrypt((PEMEncryptedKeyPair)keyObject,password).getPrivateKeyInfo());\n  }\n else   if (keyObject instanceof SubjectPublicKeyInfo) {\n    return getPublicKey((SubjectPublicKeyInfo)keyObject);\n  }\n else   if (keyObject instanceof X509CertificateHolder) {\n    return getPublicKey(((X509CertificateHolder)keyObject).getSubjectPublicKeyInfo());\n  }\n else   if (keyObject instanceof X509TrustedCertificateBlock) {\n    return getPublicKey(((X509TrustedCertificateBlock)keyObject).getCertificateHolder().getSubjectPublicKeyInfo());\n  }\n else   if (keyObject instanceof PKCS10CertificationRequest) {\n    return getPublicKey(((PKCS10CertificationRequest)keyObject).getSubjectPublicKeyInfo());\n  }\n else {\n    throw new CryptoException(\"Unsupported key object type: {}\",keyObject.getClass());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2118,
        "startLineNumber" : 140,
        "startColumnNumber" : 1,
        "endLineNumber" : 186,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * 读取Pem文件中的密钥，密钥支持包括：<br> <ul> <li> {@link PrivateKeyInfo}</li> <li> {@link PEMKeyPair}，默认读取私钥</li> <li> {@link PKCS8EncryptedPrivateKeyInfo}</li> <li> {@link PEMEncryptedKeyPair}，默认读取私钥</li> <li> {@link X509CertificateHolder}</li> <li> {@link X509TrustedCertificateBlock}</li> <li> {@link PKCS10CertificationRequest}</li> </ul>\n * @param keyObject 密钥内容对象\n * @param password  密码（部分加密的pem使用）\n * @return {@link Key}\n * @throws CryptoException 读取异常或不支持的类型\n */\nprivate static Key readPemKeyFromKeyObject(final Object keyObject,final char[] password) throws CryptoException {\n  if (keyObject instanceof PrivateKeyInfo) {\n    return getPrivateKey((PrivateKeyInfo)keyObject);\n  }\n else   if (keyObject instanceof PEMKeyPair) {\n    return getKeyPair((PEMKeyPair)keyObject).getPrivate();\n  }\n else   if (keyObject instanceof PKCS8EncryptedPrivateKeyInfo) {\n    return getPrivateKey(decrypt((PKCS8EncryptedPrivateKeyInfo)keyObject,password));\n  }\n else   if (keyObject instanceof PEMEncryptedKeyPair) {\n    return getPrivateKey(decrypt((PEMEncryptedKeyPair)keyObject,password).getPrivateKeyInfo());\n  }\n else   if (keyObject instanceof SubjectPublicKeyInfo) {\n    return getPublicKey((SubjectPublicKeyInfo)keyObject);\n  }\n else   if (keyObject instanceof X509CertificateHolder) {\n    return getPublicKey(((X509CertificateHolder)keyObject).getSubjectPublicKeyInfo());\n  }\n else   if (keyObject instanceof X509TrustedCertificateBlock) {\n    return getPublicKey(((X509TrustedCertificateBlock)keyObject).getCertificateHolder().getSubjectPublicKeyInfo());\n  }\n else   if (keyObject instanceof PKCS10CertificationRequest) {\n    return getPublicKey(((PKCS10CertificationRequest)keyObject).getSubjectPublicKeyInfo());\n  }\n else {\n    throw new CryptoException(\"Unsupported key object type: {}\",keyObject.getClass());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 155,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 184,
        "startColumnNumber" : 3,
        "endLineNumber" : 184,
        "endColumnNumber" : 86
      },
      "nodeContext" : "throw new CryptoException(\"Unsupported key object type: {}\",keyObject.getClass());\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 33,
    "startLineNumber" : 184,
    "startColumnNumber" : 29,
    "endLineNumber" : 184,
    "endColumnNumber" : 62
  } ],
  "layoutRelationDataList" : [ ]
}