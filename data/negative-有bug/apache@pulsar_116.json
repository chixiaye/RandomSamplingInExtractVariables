{
  "id" : 116,
  "expression" : "data",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-common/src/test/java/org/apache/pulsar/common/compression/CompressorCodecBackwardCompatTest.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "data",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 55,
      "startColumnNumber" : 23,
      "endLineNumber" : 55,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 28
      },
      "nodeContext" : "raw.writeBytes(data)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 29
      },
      "nodeContext" : "raw.writeBytes(data);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1082,
        "startLineNumber" : 52,
        "startColumnNumber" : 93,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  byte[] data=text.getBytes();\n  ByteBuf raw=PulsarByteBufAllocator.DEFAULT.directBuffer();\n  raw.writeBytes(data);\n  ByteBuf compressed=c1.encode(raw);\n  assertEquals(raw.readableBytes(),data.length);\n  int compressedSize=compressed.readableBytes();\n  ByteBuf compressedDirect=PulsarByteBufAllocator.DEFAULT.directBuffer();\n  compressedDirect.writeBytes(compressed);\n  ByteBuf uncompressed=c2.decode(compressedDirect,data.length);\n  assertEquals(compressedDirect.readableBytes(),compressedSize);\n  assertEquals(uncompressed.readableBytes(),data.length);\n  assertEquals(uncompressed,raw);\n  raw.release();\n  compressed.release();\n  uncompressed.release();\n  compressedDirect.release();\n  assertEquals(raw.refCnt(),0);\n  assertEquals(compressedDirect.refCnt(),0);\n  assertEquals(compressedDirect.refCnt(),0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1206,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test(dataProvider=\"codecs\") void testCompressDecompress(CompressionCodec c1,CompressionCodec c2) throws IOException {\n  byte[] data=text.getBytes();\n  ByteBuf raw=PulsarByteBufAllocator.DEFAULT.directBuffer();\n  raw.writeBytes(data);\n  ByteBuf compressed=c1.encode(raw);\n  assertEquals(raw.readableBytes(),data.length);\n  int compressedSize=compressed.readableBytes();\n  ByteBuf compressedDirect=PulsarByteBufAllocator.DEFAULT.directBuffer();\n  compressedDirect.writeBytes(compressed);\n  ByteBuf uncompressed=c2.decode(compressedDirect,data.length);\n  assertEquals(compressedDirect.readableBytes(),compressedSize);\n  assertEquals(uncompressed.readableBytes(),data.length);\n  assertEquals(uncompressed,raw);\n  raw.release();\n  compressed.release();\n  uncompressed.release();\n  compressedDirect.release();\n  assertEquals(raw.refCnt(),0);\n  assertEquals(compressedDirect.refCnt(),0);\n  assertEquals(compressedDirect.refCnt(),0);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 153,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 55,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 29
      },
      "nodeContext" : "raw.writeBytes(data);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "byte[]"
  }, {
    "nodeContext" : "data",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 58,
      "startColumnNumber" : 42,
      "endLineNumber" : 58,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 58,
        "startColumnNumber" : 42,
        "endLineNumber" : 58,
        "endColumnNumber" : 53
      },
      "nodeContext" : "data.length",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 54
      },
      "nodeContext" : "assertEquals(raw.readableBytes(),data.length)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 55
      },
      "nodeContext" : "assertEquals(raw.readableBytes(),data.length);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1082,
        "startLineNumber" : 52,
        "startColumnNumber" : 93,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  byte[] data=text.getBytes();\n  ByteBuf raw=PulsarByteBufAllocator.DEFAULT.directBuffer();\n  raw.writeBytes(data);\n  ByteBuf compressed=c1.encode(raw);\n  assertEquals(raw.readableBytes(),data.length);\n  int compressedSize=compressed.readableBytes();\n  ByteBuf compressedDirect=PulsarByteBufAllocator.DEFAULT.directBuffer();\n  compressedDirect.writeBytes(compressed);\n  ByteBuf uncompressed=c2.decode(compressedDirect,data.length);\n  assertEquals(compressedDirect.readableBytes(),compressedSize);\n  assertEquals(uncompressed.readableBytes(),data.length);\n  assertEquals(uncompressed,raw);\n  raw.release();\n  compressed.release();\n  uncompressed.release();\n  compressedDirect.release();\n  assertEquals(raw.refCnt(),0);\n  assertEquals(compressedDirect.refCnt(),0);\n  assertEquals(compressedDirect.refCnt(),0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1206,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test(dataProvider=\"codecs\") void testCompressDecompress(CompressionCodec c1,CompressionCodec c2) throws IOException {\n  byte[] data=text.getBytes();\n  ByteBuf raw=PulsarByteBufAllocator.DEFAULT.directBuffer();\n  raw.writeBytes(data);\n  ByteBuf compressed=c1.encode(raw);\n  assertEquals(raw.readableBytes(),data.length);\n  int compressedSize=compressed.readableBytes();\n  ByteBuf compressedDirect=PulsarByteBufAllocator.DEFAULT.directBuffer();\n  compressedDirect.writeBytes(compressed);\n  ByteBuf uncompressed=c2.decode(compressedDirect,data.length);\n  assertEquals(compressedDirect.readableBytes(),compressedSize);\n  assertEquals(uncompressed.readableBytes(),data.length);\n  assertEquals(uncompressed,raw);\n  raw.release();\n  compressed.release();\n  uncompressed.release();\n  compressedDirect.release();\n  assertEquals(raw.refCnt(),0);\n  assertEquals(compressedDirect.refCnt(),0);\n  assertEquals(compressedDirect.refCnt(),0);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 153,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 58,
        "endColumnNumber" : 55
      },
      "nodeContext" : "assertEquals(raw.readableBytes(),data.length);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "byte[]"
  }, {
    "nodeContext" : "data",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 66,
      "startColumnNumber" : 59,
      "endLineNumber" : 66,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 66,
        "startColumnNumber" : 59,
        "endLineNumber" : 66,
        "endColumnNumber" : 70
      },
      "nodeContext" : "data.length",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 66,
        "startColumnNumber" : 31,
        "endLineNumber" : 66,
        "endColumnNumber" : 71
      },
      "nodeContext" : "c2.decode(compressedDirect,data.length)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 66,
        "startColumnNumber" : 16,
        "endLineNumber" : 66,
        "endColumnNumber" : 71
      },
      "nodeContext" : "uncompressed=c2.decode(compressedDirect,data.length)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 72
      },
      "nodeContext" : "ByteBuf uncompressed=c2.decode(compressedDirect,data.length);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1082,
        "startLineNumber" : 52,
        "startColumnNumber" : 93,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  byte[] data=text.getBytes();\n  ByteBuf raw=PulsarByteBufAllocator.DEFAULT.directBuffer();\n  raw.writeBytes(data);\n  ByteBuf compressed=c1.encode(raw);\n  assertEquals(raw.readableBytes(),data.length);\n  int compressedSize=compressed.readableBytes();\n  ByteBuf compressedDirect=PulsarByteBufAllocator.DEFAULT.directBuffer();\n  compressedDirect.writeBytes(compressed);\n  ByteBuf uncompressed=c2.decode(compressedDirect,data.length);\n  assertEquals(compressedDirect.readableBytes(),compressedSize);\n  assertEquals(uncompressed.readableBytes(),data.length);\n  assertEquals(uncompressed,raw);\n  raw.release();\n  compressed.release();\n  uncompressed.release();\n  compressedDirect.release();\n  assertEquals(raw.refCnt(),0);\n  assertEquals(compressedDirect.refCnt(),0);\n  assertEquals(compressedDirect.refCnt(),0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1206,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test(dataProvider=\"codecs\") void testCompressDecompress(CompressionCodec c1,CompressionCodec c2) throws IOException {\n  byte[] data=text.getBytes();\n  ByteBuf raw=PulsarByteBufAllocator.DEFAULT.directBuffer();\n  raw.writeBytes(data);\n  ByteBuf compressed=c1.encode(raw);\n  assertEquals(raw.readableBytes(),data.length);\n  int compressedSize=compressed.readableBytes();\n  ByteBuf compressedDirect=PulsarByteBufAllocator.DEFAULT.directBuffer();\n  compressedDirect.writeBytes(compressed);\n  ByteBuf uncompressed=c2.decode(compressedDirect,data.length);\n  assertEquals(compressedDirect.readableBytes(),compressedSize);\n  assertEquals(uncompressed.readableBytes(),data.length);\n  assertEquals(uncompressed,raw);\n  raw.release();\n  compressed.release();\n  uncompressed.release();\n  compressedDirect.release();\n  assertEquals(raw.refCnt(),0);\n  assertEquals(compressedDirect.refCnt(),0);\n  assertEquals(compressedDirect.refCnt(),0);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 153,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 72
      },
      "nodeContext" : "ByteBuf uncompressed=c2.decode(compressedDirect,data.length);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "byte[]"
  }, {
    "nodeContext" : "data",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 70,
      "startColumnNumber" : 51,
      "endLineNumber" : 70,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 70,
        "startColumnNumber" : 51,
        "endLineNumber" : 70,
        "endColumnNumber" : 62
      },
      "nodeContext" : "data.length",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 63
      },
      "nodeContext" : "assertEquals(uncompressed.readableBytes(),data.length)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 64
      },
      "nodeContext" : "assertEquals(uncompressed.readableBytes(),data.length);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1082,
        "startLineNumber" : 52,
        "startColumnNumber" : 93,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  byte[] data=text.getBytes();\n  ByteBuf raw=PulsarByteBufAllocator.DEFAULT.directBuffer();\n  raw.writeBytes(data);\n  ByteBuf compressed=c1.encode(raw);\n  assertEquals(raw.readableBytes(),data.length);\n  int compressedSize=compressed.readableBytes();\n  ByteBuf compressedDirect=PulsarByteBufAllocator.DEFAULT.directBuffer();\n  compressedDirect.writeBytes(compressed);\n  ByteBuf uncompressed=c2.decode(compressedDirect,data.length);\n  assertEquals(compressedDirect.readableBytes(),compressedSize);\n  assertEquals(uncompressed.readableBytes(),data.length);\n  assertEquals(uncompressed,raw);\n  raw.release();\n  compressed.release();\n  uncompressed.release();\n  compressedDirect.release();\n  assertEquals(raw.refCnt(),0);\n  assertEquals(compressedDirect.refCnt(),0);\n  assertEquals(compressedDirect.refCnt(),0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 135,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1206,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test(dataProvider=\"codecs\") void testCompressDecompress(CompressionCodec c1,CompressionCodec c2) throws IOException {\n  byte[] data=text.getBytes();\n  ByteBuf raw=PulsarByteBufAllocator.DEFAULT.directBuffer();\n  raw.writeBytes(data);\n  ByteBuf compressed=c1.encode(raw);\n  assertEquals(raw.readableBytes(),data.length);\n  int compressedSize=compressed.readableBytes();\n  ByteBuf compressedDirect=PulsarByteBufAllocator.DEFAULT.directBuffer();\n  compressedDirect.writeBytes(compressed);\n  ByteBuf uncompressed=c2.decode(compressedDirect,data.length);\n  assertEquals(compressedDirect.readableBytes(),compressedSize);\n  assertEquals(uncompressed.readableBytes(),data.length);\n  assertEquals(uncompressed,raw);\n  raw.release();\n  compressed.release();\n  uncompressed.release();\n  compressedDirect.release();\n  assertEquals(raw.refCnt(),0);\n  assertEquals(compressedDirect.refCnt(),0);\n  assertEquals(compressedDirect.refCnt(),0);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 153,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 70,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 64
      },
      "nodeContext" : "assertEquals(uncompressed.readableBytes(),data.length);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "byte[]"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 55,
    "startColumnNumber" : 23,
    "endLineNumber" : 55,
    "endColumnNumber" : 27
  }, {
    "charLength" : 4,
    "startLineNumber" : 58,
    "startColumnNumber" : 42,
    "endLineNumber" : 58,
    "endColumnNumber" : 46
  }, {
    "charLength" : 4,
    "startLineNumber" : 66,
    "startColumnNumber" : 59,
    "endLineNumber" : 66,
    "endColumnNumber" : 63
  }, {
    "charLength" : 4,
    "startLineNumber" : 70,
    "startColumnNumber" : 51,
    "endLineNumber" : 70,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  } ]
}