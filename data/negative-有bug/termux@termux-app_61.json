{
  "id" : 61,
  "expression" : "row < 3",
  "projectName" : "termux@termux-app",
  "commitID" : "6334470f81bdf003b8567af9e3531cec4dce560d",
  "filePath" : "/app/src/test/java/com/termux/terminal/CursorAndScreenTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "row < 3",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 29,
      "startColumnNumber" : 20,
      "endLineNumber" : 29,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 242,
        "startLineNumber" : 29,
        "startColumnNumber" : 2,
        "endLineNumber" : 35,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int row=0; row < 3; row++) {\n  for (int col=0; col < 5; col++) {\n    long s=getStyleAt(row,col);\n    Assert.assertEquals(col,TextStyle.decodeForeColor(s));\n    Assert.assertEquals(row + 2,TextStyle.decodeBackColor(s));\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 52,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1796,
        "startLineNumber" : 7,
        "startColumnNumber" : 42,
        "endLineNumber" : 51,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  int cols=5, rows=5;\n  withTerminalSized(cols,rows);\n  for (int row=0; row < 5; row++) {\n    for (int col=0; col < 5; col++) {\n      enterString(\"\\033[38;5;\" + col + \"m\");\n      enterString(\"\\033[48;5;\" + row + \"m\");\n      enterString(Character.toString((char)('A' + col + row * 5)));\n    }\n  }\n  assertLinesAre(\"ABCDE\",\"FGHIJ\",\"KLMNO\",\"PQRST\",\"UVWXY\");\n  for (int row=0; row < 5; row++) {\n    for (int col=0; col < 5; col++) {\n      long s=getStyleAt(row,col);\n      Assert.assertEquals(col,TextStyle.decodeForeColor(s));\n      Assert.assertEquals(row,TextStyle.decodeBackColor(s));\n    }\n  }\n  enterString(\"\\033[H\\033[2M\");\n  assertLinesAre(\"KLMNO\",\"PQRST\",\"UVWXY\",\"     \",\"     \");\n  for (int row=0; row < 3; row++) {\n    for (int col=0; col < 5; col++) {\n      long s=getStyleAt(row,col);\n      Assert.assertEquals(col,TextStyle.decodeForeColor(s));\n      Assert.assertEquals(row + 2,TextStyle.decodeBackColor(s));\n    }\n  }\n  enterString(\"\\033[38;5;98m\");\n  enterString(\"\\033[48;5;99m\");\n  enterString(\"\\033[B\\033[2L\");\n  assertLinesAre(\"KLMNO\",\"     \",\"     \",\"PQRST\",\"UVWXY\");\n  for (int row=0; row < 5; row++) {\n    for (int col=0; col < 5; col++) {\n      int wantedForeground=(row == 1 || row == 2) ? 98 : col;\n      int wantedBackground=(row == 1 || row == 2) ? 99 : (row == 0 ? 2 : row);\n      long s=getStyleAt(row,col);\n      Assert.assertEquals(wantedForeground,TextStyle.decodeForeColor(s));\n      Assert.assertEquals(wantedBackground,TextStyle.decodeBackColor(s));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 295,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1837,
        "startLineNumber" : 7,
        "startColumnNumber" : 1,
        "endLineNumber" : 51,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public void testDeleteLinesKeepsStyles(){\n  int cols=5, rows=5;\n  withTerminalSized(cols,rows);\n  for (int row=0; row < 5; row++) {\n    for (int col=0; col < 5; col++) {\n      enterString(\"\\033[38;5;\" + col + \"m\");\n      enterString(\"\\033[48;5;\" + row + \"m\");\n      enterString(Character.toString((char)('A' + col + row * 5)));\n    }\n  }\n  assertLinesAre(\"ABCDE\",\"FGHIJ\",\"KLMNO\",\"PQRST\",\"UVWXY\");\n  for (int row=0; row < 5; row++) {\n    for (int col=0; col < 5; col++) {\n      long s=getStyleAt(row,col);\n      Assert.assertEquals(col,TextStyle.decodeForeColor(s));\n      Assert.assertEquals(row,TextStyle.decodeBackColor(s));\n    }\n  }\n  enterString(\"\\033[H\\033[2M\");\n  assertLinesAre(\"KLMNO\",\"PQRST\",\"UVWXY\",\"     \",\"     \");\n  for (int row=0; row < 3; row++) {\n    for (int col=0; col < 5; col++) {\n      long s=getStyleAt(row,col);\n      Assert.assertEquals(col,TextStyle.decodeForeColor(s));\n      Assert.assertEquals(row + 2,TextStyle.decodeBackColor(s));\n    }\n  }\n  enterString(\"\\033[38;5;98m\");\n  enterString(\"\\033[48;5;99m\");\n  enterString(\"\\033[B\\033[2L\");\n  assertLinesAre(\"KLMNO\",\"     \",\"     \",\"PQRST\",\"UVWXY\");\n  for (int row=0; row < 5; row++) {\n    for (int col=0; col < 5; col++) {\n      int wantedForeground=(row == 1 || row == 2) ? 98 : col;\n      int wantedBackground=(row == 1 || row == 2) ? 99 : (row == 0 ? 2 : row);\n      long s=getStyleAt(row,col);\n      Assert.assertEquals(wantedForeground,TextStyle.decodeForeColor(s));\n      Assert.assertEquals(wantedBackground,TextStyle.decodeBackColor(s));\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 299,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 242,
        "startLineNumber" : 29,
        "startColumnNumber" : 2,
        "endLineNumber" : 35,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int row=0; row < 3; row++) {\n  for (int col=0; col < 5; col++) {\n    long s=getStyleAt(row,col);\n    Assert.assertEquals(col,TextStyle.decodeForeColor(s));\n    Assert.assertEquals(row + 2,TextStyle.decodeBackColor(s));\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 52,
      "astHeight" : 8
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 29,
    "startColumnNumber" : 20,
    "endLineNumber" : 29,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ ]
}