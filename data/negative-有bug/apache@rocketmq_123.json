{
  "id" : 123,
  "expression" : "new RMQNormalListener()",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/test/src/test/java/org/apache/rocketmq/test/client/producer/oneway/OneWaySendWithSelectorIT.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new RMQNormalListener()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 59,
      "startColumnNumber" : 69,
      "endLineNumber" : 59,
      "endColumnNumber" : 92
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 59,
        "startColumnNumber" : 37,
        "endLineNumber" : 59,
        "endColumnNumber" : 93
      },
      "nodeContext" : "getConsumer(nsAddr,topic,\"*\",new RMQNormalListener())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 59,
        "startColumnNumber" : 26,
        "endLineNumber" : 59,
        "endColumnNumber" : 93
      },
      "nodeContext" : "consumer=getConsumer(nsAddr,topic,\"*\",new RMQNormalListener())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 94
      },
      "nodeContext" : "RMQNormalConsumer consumer=getConsumer(nsAddr,topic,\"*\",new RMQNormalListener());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2050,
        "startLineNumber" : 56,
        "startColumnNumber" : 39,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int msgSize=20;\n  final int queueId=0;\n  RMQNormalConsumer consumer=getConsumer(nsAddr,topic,\"*\",new RMQNormalListener());\n  producer.sendOneWay(msgSize,new MessageQueueSelector(){\n    @Override public MessageQueue select(    List<MessageQueue> list,    Message message,    Object o){\n      for (      MessageQueue mq : list) {\n        if (mq.getQueueId() == queueId && mq.getBrokerName().equals(broker1Name)) {\n          return mq;\n        }\n      }\n      return list.get(0);\n    }\n  }\n);\n  assertThat(producer.getAllMsgBody().size()).isEqualTo(msgSize);\n  consumer.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n  assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody());\n  VerifyUtils.verifyMessageQueueId(queueId,consumer.getListener().getAllOriginMsg());\n  producer.clearMsg();\n  consumer.clearMsg();\n  producer.sendOneWay(msgSize,new MessageQueueSelector(){\n    @Override public MessageQueue select(    List<MessageQueue> list,    Message message,    Object o){\n      for (      MessageQueue mq : list) {\n        if (mq.getQueueId() == queueId && mq.getBrokerName().equals(broker2Name)) {\n          return mq;\n        }\n      }\n      return list.get(8);\n    }\n  }\n);\n  assertThat(producer.getAllMsgBody().size()).isEqualTo(msgSize);\n  consumer.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n  assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody());\n  VerifyUtils.verifyMessageQueueId(queueId,consumer.getListener().getAllOriginMsg());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 253,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2095,
        "startLineNumber" : 55,
        "startColumnNumber" : 4,
        "endLineNumber" : 103,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testSendWithSelector(){\n  int msgSize=20;\n  final int queueId=0;\n  RMQNormalConsumer consumer=getConsumer(nsAddr,topic,\"*\",new RMQNormalListener());\n  producer.sendOneWay(msgSize,new MessageQueueSelector(){\n    @Override public MessageQueue select(    List<MessageQueue> list,    Message message,    Object o){\n      for (      MessageQueue mq : list) {\n        if (mq.getQueueId() == queueId && mq.getBrokerName().equals(broker1Name)) {\n          return mq;\n        }\n      }\n      return list.get(0);\n    }\n  }\n);\n  assertThat(producer.getAllMsgBody().size()).isEqualTo(msgSize);\n  consumer.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n  assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody());\n  VerifyUtils.verifyMessageQueueId(queueId,consumer.getListener().getAllOriginMsg());\n  producer.clearMsg();\n  consumer.clearMsg();\n  producer.sendOneWay(msgSize,new MessageQueueSelector(){\n    @Override public MessageQueue select(    List<MessageQueue> list,    Message message,    Object o){\n      for (      MessageQueue mq : list) {\n        if (mq.getQueueId() == queueId && mq.getBrokerName().equals(broker2Name)) {\n          return mq;\n        }\n      }\n      return list.get(8);\n    }\n  }\n);\n  assertThat(producer.getAllMsgBody().size()).isEqualTo(msgSize);\n  consumer.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n  assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody());\n  VerifyUtils.verifyMessageQueueId(queueId,consumer.getListener().getAllOriginMsg());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 259,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 94
      },
      "nodeContext" : "RMQNormalConsumer consumer=getConsumer(nsAddr,topic,\"*\",new RMQNormalListener());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "org.apache.rocketmq.test.listener.rmq.concurrent.RMQNormalListener"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 59,
    "startColumnNumber" : 69,
    "endLineNumber" : 59,
    "endColumnNumber" : 92
  } ],
  "layoutRelationDataList" : [ ]
}