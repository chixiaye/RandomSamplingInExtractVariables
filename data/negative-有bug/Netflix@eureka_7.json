{
  "id" : 7,
  "expression" : "TransportClient.class",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-core/src/test/java/com/netflix/eureka2/channel/AbstractClientChannelTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "TransportClient.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 33,
      "startColumnNumber" : 47,
      "endLineNumber" : 33,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 33,
        "startColumnNumber" : 42,
        "endLineNumber" : 33,
        "endColumnNumber" : 69
      },
      "nodeContext" : "mock(TransportClient.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 33,
        "startColumnNumber" : 24,
        "endLineNumber" : 33,
        "endColumnNumber" : 69
      },
      "nodeContext" : "transportClient=mock(TransportClient.class)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 33,
        "startColumnNumber" : 8,
        "endLineNumber" : 33,
        "endColumnNumber" : 70
      },
      "nodeContext" : "TransportClient transportClient=mock(TransportClient.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 501,
        "startLineNumber" : 28,
        "startColumnNumber" : 24,
        "endLineNumber" : 37,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  messageConnection1=mock(MessageConnection.class);\n  messageConnection2=mock(MessageConnection.class);\n  List<MessageConnection> messageConnections=Arrays.asList(messageConnection1,messageConnection2);\n  TransportClient transportClient=mock(TransportClient.class);\n  when(transportClient.connect()).thenReturn(Observable.from(messageConnections));\n  channel=new RegistrationChannelImpl(transportClient,mock(RegistrationChannelMetrics.class));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 533,
        "startLineNumber" : 27,
        "startColumnNumber" : 4,
        "endLineNumber" : 37,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Before public void setUp(){\n  messageConnection1=mock(MessageConnection.class);\n  messageConnection2=mock(MessageConnection.class);\n  List<MessageConnection> messageConnections=Arrays.asList(messageConnection1,messageConnection2);\n  TransportClient transportClient=mock(TransportClient.class);\n  when(transportClient.connect()).thenReturn(Observable.from(messageConnections));\n  channel=new RegistrationChannelImpl(transportClient,mock(RegistrationChannelMetrics.class));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 70,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 62,
        "startLineNumber" : 33,
        "startColumnNumber" : 8,
        "endLineNumber" : 33,
        "endColumnNumber" : 70
      },
      "nodeContext" : "TransportClient transportClient=mock(TransportClient.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<com.netflix.eureka2.transport.TransportClient>"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 33,
    "startColumnNumber" : 47,
    "endLineNumber" : 33,
    "endColumnNumber" : 68
  } ],
  "layoutRelationDataList" : [ ]
}