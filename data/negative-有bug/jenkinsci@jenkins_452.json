{
  "id" : 452,
  "expression" : "l",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/test/src/test/java/hudson/model/queue/QueueTaskDispatcherTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "l",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 74,
      "startColumnNumber" : 18,
      "endLineNumber" : 74,
      "endColumnNumber" : 19
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 20
      },
      "nodeContext" : "cob.print(l)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 21
      },
      "nodeContext" : "cob.print(l);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 676,
        "startLineNumber" : 59,
        "startColumnNumber" : 62,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  FreeStyleProject project=r.createFreeStyleProject();\n  r.jenkins.getQueue().schedule(project,0);\n  r.getInstance().getQueue().maintain();\n  Queue.Item item=r.jenkins.getQueue().getItem(project);\n  assertNotNull(item);\n  CauseOfBlockage cob=item.getCauseOfBlockage();\n  assertNotNull(cob);\n  assertThat(cob.getShortDescription(),containsString(\"blocked by canTake\"));\n  StringWriter w=new StringWriter();\n  TaskListener l=new StreamTaskListener(w);\n  cob.print(l);\n  l.getLogger().flush();\n  assertThat(w.toString(),containsString(\"blocked by canTake\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 774,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Issue(\"JENKINS-38514\") @Test public void canTakeBlockageIsDisplayed() throws Exception {\n  FreeStyleProject project=r.createFreeStyleProject();\n  r.jenkins.getQueue().schedule(project,0);\n  r.getInstance().getQueue().maintain();\n  Queue.Item item=r.jenkins.getQueue().getItem(project);\n  assertNotNull(item);\n  CauseOfBlockage cob=item.getCauseOfBlockage();\n  assertNotNull(cob);\n  assertThat(cob.getShortDescription(),containsString(\"blocked by canTake\"));\n  StringWriter w=new StringWriter();\n  TaskListener l=new StreamTaskListener(w);\n  cob.print(l);\n  l.getLogger().flush();\n  assertThat(w.toString(),containsString(\"blocked by canTake\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 115,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 74,
        "startColumnNumber" : 8,
        "endLineNumber" : 74,
        "endColumnNumber" : 21
      },
      "nodeContext" : "cob.print(l);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "hudson.model.TaskListener"
  }, {
    "nodeContext" : "l",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 75,
      "startColumnNumber" : 8,
      "endLineNumber" : 75,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 21
      },
      "nodeContext" : "l.getLogger()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 29
      },
      "nodeContext" : "l.getLogger().flush()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 30
      },
      "nodeContext" : "l.getLogger().flush();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 676,
        "startLineNumber" : 59,
        "startColumnNumber" : 62,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  FreeStyleProject project=r.createFreeStyleProject();\n  r.jenkins.getQueue().schedule(project,0);\n  r.getInstance().getQueue().maintain();\n  Queue.Item item=r.jenkins.getQueue().getItem(project);\n  assertNotNull(item);\n  CauseOfBlockage cob=item.getCauseOfBlockage();\n  assertNotNull(cob);\n  assertThat(cob.getShortDescription(),containsString(\"blocked by canTake\"));\n  StringWriter w=new StringWriter();\n  TaskListener l=new StreamTaskListener(w);\n  cob.print(l);\n  l.getLogger().flush();\n  assertThat(w.toString(),containsString(\"blocked by canTake\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 104,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 774,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Issue(\"JENKINS-38514\") @Test public void canTakeBlockageIsDisplayed() throws Exception {\n  FreeStyleProject project=r.createFreeStyleProject();\n  r.jenkins.getQueue().schedule(project,0);\n  r.getInstance().getQueue().maintain();\n  Queue.Item item=r.jenkins.getQueue().getItem(project);\n  assertNotNull(item);\n  CauseOfBlockage cob=item.getCauseOfBlockage();\n  assertNotNull(cob);\n  assertThat(cob.getShortDescription(),containsString(\"blocked by canTake\"));\n  StringWriter w=new StringWriter();\n  TaskListener l=new StreamTaskListener(w);\n  cob.print(l);\n  l.getLogger().flush();\n  assertThat(w.toString(),containsString(\"blocked by canTake\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 115,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 30
      },
      "nodeContext" : "l.getLogger().flush();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "hudson.model.TaskListener"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 74,
    "startColumnNumber" : 18,
    "endLineNumber" : 74,
    "endColumnNumber" : 19
  }, {
    "charLength" : 1,
    "startLineNumber" : 75,
    "startColumnNumber" : 8,
    "endLineNumber" : 75,
    "endColumnNumber" : 9
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}