{
  "id" : 477,
  "expression" : "events.getOrDefault(\"dif\",emptyMap()).getOrDefault(key,new LinkedList<>())",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/streams/upgrade-system-tests-27/src/test/java/org/apache/kafka/streams/tests/SmokeTestDriver.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "events.getOrDefault(\"dif\",emptyMap()).getOrDefault(key,new LinkedList<>())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 76,
      "startLineNumber" : 495,
      "startColumnNumber" : 43,
      "endLineNumber" : 495,
      "endColumnNumber" : 119
    },
    "astNodeNumber" : 13,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 495,
        "startColumnNumber" : 28,
        "endLineNumber" : 495,
        "endColumnNumber" : 120
      },
      "nodeContext" : "indent(\"\\t\\t\",events.getOrDefault(\"dif\",emptyMap()).getOrDefault(key,new LinkedList<>()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 999,
        "startLineNumber" : 489,
        "startColumnNumber" : 24,
        "endLineNumber" : 497,
        "endColumnNumber" : 122
      },
      "nodeContext" : "resultStream.printf(\"\\t inputEvents=%n%s%n\\t\" + \"echoEvents=%n%s%n\\tmaxEvents=%n%s%n\\tminEvents=%n%s%n\\tdifEvents=%n%s%n\\tcntEvents=%n%s%n\\ttaggEvents=%n%s%n\",indent(\"\\t\\t\",observedInputEvents.get(key)),indent(\"\\t\\t\",events.getOrDefault(\"echo\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"max\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"min\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"dif\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"cnt\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"tagg\",emptyMap()).getOrDefault(key,new LinkedList<>())))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 109,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1000,
        "startLineNumber" : 489,
        "startColumnNumber" : 24,
        "endLineNumber" : 497,
        "endColumnNumber" : 123
      },
      "nodeContext" : "resultStream.printf(\"\\t inputEvents=%n%s%n\\t\" + \"echoEvents=%n%s%n\\tmaxEvents=%n%s%n\\tminEvents=%n%s%n\\tdifEvents=%n%s%n\\tcntEvents=%n%s%n\\ttaggEvents=%n%s%n\",indent(\"\\t\\t\",observedInputEvents.get(key)),indent(\"\\t\\t\",events.getOrDefault(\"echo\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"max\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"min\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"dif\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"cnt\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"tagg\",emptyMap()).getOrDefault(key,new LinkedList<>())));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 110,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1260,
        "startLineNumber" : 488,
        "startColumnNumber" : 38,
        "endLineNumber" : 501,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  resultStream.printf(\"\\t inputEvents=%n%s%n\\t\" + \"echoEvents=%n%s%n\\tmaxEvents=%n%s%n\\tminEvents=%n%s%n\\tdifEvents=%n%s%n\\tcntEvents=%n%s%n\\ttaggEvents=%n%s%n\",indent(\"\\t\\t\",observedInputEvents.get(key)),indent(\"\\t\\t\",events.getOrDefault(\"echo\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"max\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"min\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"dif\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"cnt\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"tagg\",emptyMap()).getOrDefault(key,new LinkedList<>())));\n  if (!Utils.mkSet(\"echo\",\"max\",\"min\",\"dif\",\"cnt\",\"tagg\").contains(topic))   resultStream.printf(\"%sEvents=%n%s%n\",topic,indent(\"\\t\\t\",entry.getValue()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 137,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1278,
        "startLineNumber" : 488,
        "startColumnNumber" : 20,
        "endLineNumber" : 501,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (printResults) {\n  resultStream.printf(\"\\t inputEvents=%n%s%n\\t\" + \"echoEvents=%n%s%n\\tmaxEvents=%n%s%n\\tminEvents=%n%s%n\\tdifEvents=%n%s%n\\tcntEvents=%n%s%n\\ttaggEvents=%n%s%n\",indent(\"\\t\\t\",observedInputEvents.get(key)),indent(\"\\t\\t\",events.getOrDefault(\"echo\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"max\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"min\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"dif\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"cnt\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"tagg\",emptyMap()).getOrDefault(key,new LinkedList<>())));\n  if (!Utils.mkSet(\"echo\",\"max\",\"min\",\"dif\",\"cnt\",\"tagg\").contains(topic))   resultStream.printf(\"%sEvents=%n%s%n\",topic,indent(\"\\t\\t\",entry.getValue()));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 139,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1468,
        "startLineNumber" : 485,
        "startColumnNumber" : 46,
        "endLineNumber" : 504,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  resultStream.printf(\"%s fail: key=%s actual=%s expected=%s%n\",topic,key,actual,expected);\n  if (printResults) {\n    resultStream.printf(\"\\t inputEvents=%n%s%n\\t\" + \"echoEvents=%n%s%n\\tmaxEvents=%n%s%n\\tminEvents=%n%s%n\\tdifEvents=%n%s%n\\tcntEvents=%n%s%n\\ttaggEvents=%n%s%n\",indent(\"\\t\\t\",observedInputEvents.get(key)),indent(\"\\t\\t\",events.getOrDefault(\"echo\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"max\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"min\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"dif\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"cnt\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"tagg\",emptyMap()).getOrDefault(key,new LinkedList<>())));\n    if (!Utils.mkSet(\"echo\",\"max\",\"min\",\"dif\",\"cnt\",\"tagg\").contains(topic))     resultStream.printf(\"%sEvents=%n%s%n\",topic,indent(\"\\t\\t\",entry.getValue()));\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 151,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1498,
        "startLineNumber" : 485,
        "startColumnNumber" : 16,
        "endLineNumber" : 504,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (!expected.equals(actual)) {\n  resultStream.printf(\"%s fail: key=%s actual=%s expected=%s%n\",topic,key,actual,expected);\n  if (printResults) {\n    resultStream.printf(\"\\t inputEvents=%n%s%n\\t\" + \"echoEvents=%n%s%n\\tmaxEvents=%n%s%n\\tminEvents=%n%s%n\\tdifEvents=%n%s%n\\tcntEvents=%n%s%n\\ttaggEvents=%n%s%n\",indent(\"\\t\\t\",observedInputEvents.get(key)),indent(\"\\t\\t\",events.getOrDefault(\"echo\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"max\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"min\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"dif\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"cnt\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"tagg\",emptyMap()).getOrDefault(key,new LinkedList<>())));\n    if (!Utils.mkSet(\"echo\",\"max\",\"min\",\"dif\",\"cnt\",\"tagg\").contains(topic))     resultStream.printf(\"%sEvents=%n%s%n\",topic,indent(\"\\t\\t\",entry.getValue()));\n  }\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 157,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1724,
        "startLineNumber" : 481,
        "startColumnNumber" : 118,
        "endLineNumber" : 505,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  final String key=entry.getKey();\n  final Number expected=keyToExpectation.apply(key);\n  final Number actual=entry.getValue().getLast().value();\n  if (!expected.equals(actual)) {\n    resultStream.printf(\"%s fail: key=%s actual=%s expected=%s%n\",topic,key,actual,expected);\n    if (printResults) {\n      resultStream.printf(\"\\t inputEvents=%n%s%n\\t\" + \"echoEvents=%n%s%n\\tmaxEvents=%n%s%n\\tminEvents=%n%s%n\\tdifEvents=%n%s%n\\tcntEvents=%n%s%n\\ttaggEvents=%n%s%n\",indent(\"\\t\\t\",observedInputEvents.get(key)),indent(\"\\t\\t\",events.getOrDefault(\"echo\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"max\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"min\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"dif\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"cnt\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"tagg\",emptyMap()).getOrDefault(key,new LinkedList<>())));\n      if (!Utils.mkSet(\"echo\",\"max\",\"min\",\"dif\",\"cnt\",\"tagg\").contains(topic))       resultStream.printf(\"%sEvents=%n%s%n\",topic,indent(\"\\t\\t\",entry.getValue()));\n    }\n    return false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 190,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1830,
        "startLineNumber" : 481,
        "startColumnNumber" : 12,
        "endLineNumber" : 505,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (final Map.Entry<String,LinkedList<ConsumerRecord<String,Number>>> entry : outputEvents.entrySet()) {\n  final String key=entry.getKey();\n  final Number expected=keyToExpectation.apply(key);\n  final Number actual=entry.getValue().getLast().value();\n  if (!expected.equals(actual)) {\n    resultStream.printf(\"%s fail: key=%s actual=%s expected=%s%n\",topic,key,actual,expected);\n    if (printResults) {\n      resultStream.printf(\"\\t inputEvents=%n%s%n\\t\" + \"echoEvents=%n%s%n\\tmaxEvents=%n%s%n\\tminEvents=%n%s%n\\tdifEvents=%n%s%n\\tcntEvents=%n%s%n\\ttaggEvents=%n%s%n\",indent(\"\\t\\t\",observedInputEvents.get(key)),indent(\"\\t\\t\",events.getOrDefault(\"echo\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"max\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"min\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"dif\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"cnt\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"tagg\",emptyMap()).getOrDefault(key,new LinkedList<>())));\n      if (!Utils.mkSet(\"echo\",\"max\",\"min\",\"dif\",\"cnt\",\"tagg\").contains(topic))       resultStream.printf(\"%sEvents=%n%s%n\",topic,indent(\"\\t\\t\",entry.getValue()));\n    }\n    return false;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 214,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 2301,
        "startLineNumber" : 473,
        "startColumnNumber" : 15,
        "endLineNumber" : 507,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  resultStream.printf(\"verifying %s with %d keys%n\",topic,outputEvents.size());\n  if (outputEvents.size() != inputData.size()) {\n    resultStream.printf(\"fail: resultCount=%d expectedCount=%s%n\\tresult=%s%n\\texpected=%s%n\",outputEvents.size(),inputData.size(),outputEvents.keySet(),inputData.keySet());\n    return false;\n  }\n  for (  final Map.Entry<String,LinkedList<ConsumerRecord<String,Number>>> entry : outputEvents.entrySet()) {\n    final String key=entry.getKey();\n    final Number expected=keyToExpectation.apply(key);\n    final Number actual=entry.getValue().getLast().value();\n    if (!expected.equals(actual)) {\n      resultStream.printf(\"%s fail: key=%s actual=%s expected=%s%n\",topic,key,actual,expected);\n      if (printResults) {\n        resultStream.printf(\"\\t inputEvents=%n%s%n\\t\" + \"echoEvents=%n%s%n\\tmaxEvents=%n%s%n\\tminEvents=%n%s%n\\tdifEvents=%n%s%n\\tcntEvents=%n%s%n\\ttaggEvents=%n%s%n\",indent(\"\\t\\t\",observedInputEvents.get(key)),indent(\"\\t\\t\",events.getOrDefault(\"echo\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"max\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"min\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"dif\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"cnt\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"tagg\",emptyMap()).getOrDefault(key,new LinkedList<>())));\n        if (!Utils.mkSet(\"echo\",\"max\",\"min\",\"dif\",\"cnt\",\"tagg\").contains(topic))         resultStream.printf(\"%sEvents=%n%s%n\",topic,indent(\"\\t\\t\",entry.getValue()));\n      }\n      return false;\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 254,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2427,
        "startLineNumber" : 470,
        "startColumnNumber" : 8,
        "endLineNumber" : 507,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (outputEvents.isEmpty()) {\n  resultStream.println(topic + \" is empty\");\n  return false;\n}\n else {\n  resultStream.printf(\"verifying %s with %d keys%n\",topic,outputEvents.size());\n  if (outputEvents.size() != inputData.size()) {\n    resultStream.printf(\"fail: resultCount=%d expectedCount=%s%n\\tresult=%s%n\\texpected=%s%n\",outputEvents.size(),inputData.size(),outputEvents.keySet(),inputData.keySet());\n    return false;\n  }\n  for (  final Map.Entry<String,LinkedList<ConsumerRecord<String,Number>>> entry : outputEvents.entrySet()) {\n    final String key=entry.getKey();\n    final Number expected=keyToExpectation.apply(key);\n    final Number actual=entry.getValue().getLast().value();\n    if (!expected.equals(actual)) {\n      resultStream.printf(\"%s fail: key=%s actual=%s expected=%s%n\",topic,key,actual,expected);\n      if (printResults) {\n        resultStream.printf(\"\\t inputEvents=%n%s%n\\t\" + \"echoEvents=%n%s%n\\tmaxEvents=%n%s%n\\tminEvents=%n%s%n\\tdifEvents=%n%s%n\\tcntEvents=%n%s%n\\ttaggEvents=%n%s%n\",indent(\"\\t\\t\",observedInputEvents.get(key)),indent(\"\\t\\t\",events.getOrDefault(\"echo\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"max\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"min\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"dif\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"cnt\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"tagg\",emptyMap()).getOrDefault(key,new LinkedList<>())));\n        if (!Utils.mkSet(\"echo\",\"max\",\"min\",\"dif\",\"cnt\",\"tagg\").contains(topic))         resultStream.printf(\"%sEvents=%n%s%n\",topic,indent(\"\\t\\t\",entry.getValue()));\n      }\n      return false;\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 268,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2680,
        "startLineNumber" : 467,
        "startColumnNumber" : 62,
        "endLineNumber" : 508,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final Map<String,LinkedList<ConsumerRecord<String,Number>>> observedInputEvents=events.get(\"data\");\n  final Map<String,LinkedList<ConsumerRecord<String,Number>>> outputEvents=events.getOrDefault(topic,emptyMap());\n  if (outputEvents.isEmpty()) {\n    resultStream.println(topic + \" is empty\");\n    return false;\n  }\n else {\n    resultStream.printf(\"verifying %s with %d keys%n\",topic,outputEvents.size());\n    if (outputEvents.size() != inputData.size()) {\n      resultStream.printf(\"fail: resultCount=%d expectedCount=%s%n\\tresult=%s%n\\texpected=%s%n\",outputEvents.size(),inputData.size(),outputEvents.keySet(),inputData.keySet());\n      return false;\n    }\n    for (    final Map.Entry<String,LinkedList<ConsumerRecord<String,Number>>> entry : outputEvents.entrySet()) {\n      final String key=entry.getKey();\n      final Number expected=keyToExpectation.apply(key);\n      final Number actual=entry.getValue().getLast().value();\n      if (!expected.equals(actual)) {\n        resultStream.printf(\"%s fail: key=%s actual=%s expected=%s%n\",topic,key,actual,expected);\n        if (printResults) {\n          resultStream.printf(\"\\t inputEvents=%n%s%n\\t\" + \"echoEvents=%n%s%n\\tmaxEvents=%n%s%n\\tminEvents=%n%s%n\\tdifEvents=%n%s%n\\tcntEvents=%n%s%n\\ttaggEvents=%n%s%n\",indent(\"\\t\\t\",observedInputEvents.get(key)),indent(\"\\t\\t\",events.getOrDefault(\"echo\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"max\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"min\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"dif\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"cnt\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"tagg\",emptyMap()).getOrDefault(key,new LinkedList<>())));\n          if (!Utils.mkSet(\"echo\",\"max\",\"min\",\"dif\",\"cnt\",\"tagg\").contains(topic))           resultStream.printf(\"%sEvents=%n%s%n\",topic,indent(\"\\t\\t\",entry.getValue()));\n        }\n        return false;\n      }\n    }\n    return true;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 317,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3135,
        "startLineNumber" : 462,
        "startColumnNumber" : 4,
        "endLineNumber" : 508,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private static boolean verify(final PrintStream resultStream,final String topic,final Map<String,Set<Integer>> inputData,final Map<String,Map<String,LinkedList<ConsumerRecord<String,Number>>>> events,final Function<String,Number> keyToExpectation,final boolean printResults){\n  final Map<String,LinkedList<ConsumerRecord<String,Number>>> observedInputEvents=events.get(\"data\");\n  final Map<String,LinkedList<ConsumerRecord<String,Number>>> outputEvents=events.getOrDefault(topic,emptyMap());\n  if (outputEvents.isEmpty()) {\n    resultStream.println(topic + \" is empty\");\n    return false;\n  }\n else {\n    resultStream.printf(\"verifying %s with %d keys%n\",topic,outputEvents.size());\n    if (outputEvents.size() != inputData.size()) {\n      resultStream.printf(\"fail: resultCount=%d expectedCount=%s%n\\tresult=%s%n\\texpected=%s%n\",outputEvents.size(),inputData.size(),outputEvents.keySet(),inputData.keySet());\n      return false;\n    }\n    for (    final Map.Entry<String,LinkedList<ConsumerRecord<String,Number>>> entry : outputEvents.entrySet()) {\n      final String key=entry.getKey();\n      final Number expected=keyToExpectation.apply(key);\n      final Number actual=entry.getValue().getLast().value();\n      if (!expected.equals(actual)) {\n        resultStream.printf(\"%s fail: key=%s actual=%s expected=%s%n\",topic,key,actual,expected);\n        if (printResults) {\n          resultStream.printf(\"\\t inputEvents=%n%s%n\\t\" + \"echoEvents=%n%s%n\\tmaxEvents=%n%s%n\\tminEvents=%n%s%n\\tdifEvents=%n%s%n\\tcntEvents=%n%s%n\\ttaggEvents=%n%s%n\",indent(\"\\t\\t\",observedInputEvents.get(key)),indent(\"\\t\\t\",events.getOrDefault(\"echo\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"max\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"min\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"dif\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"cnt\",emptyMap()).getOrDefault(key,new LinkedList<>())),indent(\"\\t\\t\",events.getOrDefault(\"tagg\",emptyMap()).getOrDefault(key,new LinkedList<>())));\n          if (!Utils.mkSet(\"echo\",\"max\",\"min\",\"dif\",\"cnt\",\"tagg\").contains(topic))           resultStream.printf(\"%sEvents=%n%s%n\",topic,indent(\"\\t\\t\",entry.getValue()));\n        }\n        return false;\n      }\n    }\n    return true;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 382,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 495,
        "startColumnNumber" : 28,
        "endLineNumber" : 495,
        "endColumnNumber" : 120
      },
      "nodeContext" : "indent(\"\\t\\t\",events.getOrDefault(\"dif\",emptyMap()).getOrDefault(key,new LinkedList<>()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 7,
    "type" : "java.util.LinkedList<org.apache.kafka.clients.consumer.ConsumerRecord<java.lang.String,java.lang.Number>>"
  } ],
  "positionList" : [ {
    "charLength" : 76,
    "startLineNumber" : 495,
    "startColumnNumber" : 43,
    "endLineNumber" : 495,
    "endColumnNumber" : 119
  } ],
  "layoutRelationDataList" : [ ]
}