{
  "id" : 396,
  "expression" : "sortedPositionLinks",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-main/src/main/java/com/facebook/presto/operator/SortedPositionLinks.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "sortedPositionLinks",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 124,
      "startColumnNumber" : 16,
      "endLineNumber" : 124,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 124,
        "startColumnNumber" : 16,
        "endLineNumber" : 124,
        "endColumnNumber" : 40
      },
      "nodeContext" : "sortedPositionLinks[key]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 124,
        "startColumnNumber" : 16,
        "endLineNumber" : 124,
        "endColumnNumber" : 52
      },
      "nodeContext" : "sortedPositionLinks[key]=positions",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 124,
        "startColumnNumber" : 16,
        "endLineNumber" : 124,
        "endColumnNumber" : 53
      },
      "nodeContext" : "sortedPositionLinks[key]=positions;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1146,
        "startLineNumber" : 118,
        "startColumnNumber" : 39,
        "endLineNumber" : 137,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Int2ObjectOpenHashMap.Entry<IntArrayList> entry=iterator.next();\n  int key=entry.getIntKey();\n  IntArrayList positionsList=entry.getValue();\n  int[] positions=positionsList.toIntArray();\n  sortedPositionLinks[key]=positions;\n  if (positions.length > 0) {\n    IntArrays.mergeSort(positions,0,positions.length,comparator,positionsList.elements());\n    arrayPositionLinksFactoryBuilder.link(key,positions[0]);\n    for (int i=0; i < positions.length - 1; i++) {\n      arrayPositionLinksFactoryBuilder.link(positions[i],positions[i + 1]);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 100,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1173,
        "startLineNumber" : 118,
        "startColumnNumber" : 12,
        "endLineNumber" : 137,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (iterator.hasNext()) {\n  Int2ObjectOpenHashMap.Entry<IntArrayList> entry=iterator.next();\n  int key=entry.getIntKey();\n  IntArrayList positionsList=entry.getValue();\n  int[] positions=positionsList.toIntArray();\n  sortedPositionLinks[key]=positions;\n  if (positions.length > 0) {\n    IntArrays.mergeSort(positions,0,positions.length,comparator,positionsList.elements());\n    arrayPositionLinksFactoryBuilder.link(key,positions[0]);\n    for (int i=0; i < positions.length - 1; i++) {\n      arrayPositionLinksFactoryBuilder.link(positions[i],positions[i + 1]);\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 104,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1588,
        "startLineNumber" : 113,
        "startColumnNumber" : 8,
        "endLineNumber" : 140,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ArrayPositionLinks.FactoryBuilder arrayPositionLinksFactoryBuilder=ArrayPositionLinks.builder(size);\n  int[][] sortedPositionLinks=new int[size][];\n  Iterator<Int2ObjectMap.Entry<IntArrayList>> iterator=positionLinks.int2ObjectEntrySet().fastIterator();\n  while (iterator.hasNext()) {\n    Int2ObjectOpenHashMap.Entry<IntArrayList> entry=iterator.next();\n    int key=entry.getIntKey();\n    IntArrayList positionsList=entry.getValue();\n    int[] positions=positionsList.toIntArray();\n    sortedPositionLinks[key]=positions;\n    if (positions.length > 0) {\n      IntArrays.mergeSort(positions,0,positions.length,comparator,positionsList.elements());\n      arrayPositionLinksFactoryBuilder.link(key,positions[0]);\n      for (int i=0; i < positions.length - 1; i++) {\n        arrayPositionLinksFactoryBuilder.link(positions[i],positions[i + 1]);\n      }\n    }\n  }\n  return createFactory(sortedPositionLinks,arrayPositionLinksFactoryBuilder.build());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 154,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1637,
        "startLineNumber" : 111,
        "startColumnNumber" : 8,
        "endLineNumber" : 140,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public Factory build(){\n  ArrayPositionLinks.FactoryBuilder arrayPositionLinksFactoryBuilder=ArrayPositionLinks.builder(size);\n  int[][] sortedPositionLinks=new int[size][];\n  Iterator<Int2ObjectMap.Entry<IntArrayList>> iterator=positionLinks.int2ObjectEntrySet().fastIterator();\n  while (iterator.hasNext()) {\n    Int2ObjectOpenHashMap.Entry<IntArrayList> entry=iterator.next();\n    int key=entry.getIntKey();\n    IntArrayList positionsList=entry.getValue();\n    int[] positions=positionsList.toIntArray();\n    sortedPositionLinks[key]=positions;\n    if (positions.length > 0) {\n      IntArrays.mergeSort(positions,0,positions.length,comparator,positionsList.elements());\n      arrayPositionLinksFactoryBuilder.link(key,positions[0]);\n      for (int i=0; i < positions.length - 1; i++) {\n        arrayPositionLinksFactoryBuilder.link(positions[i],positions[i + 1]);\n      }\n    }\n  }\n  return createFactory(sortedPositionLinks,arrayPositionLinksFactoryBuilder.build());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 161,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 124,
        "startColumnNumber" : 16,
        "endLineNumber" : 124,
        "endColumnNumber" : 53
      },
      "nodeContext" : "sortedPositionLinks[key]=positions;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int[][]"
  }, {
    "nodeContext" : "sortedPositionLinks",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 139,
      "startColumnNumber" : 33,
      "endLineNumber" : 139,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 139,
        "startColumnNumber" : 19,
        "endLineNumber" : 139,
        "endColumnNumber" : 95
      },
      "nodeContext" : "createFactory(sortedPositionLinks,arrayPositionLinksFactoryBuilder.build())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 139,
        "startColumnNumber" : 12,
        "endLineNumber" : 139,
        "endColumnNumber" : 96
      },
      "nodeContext" : "return createFactory(sortedPositionLinks,arrayPositionLinksFactoryBuilder.build());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1588,
        "startLineNumber" : 113,
        "startColumnNumber" : 8,
        "endLineNumber" : 140,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ArrayPositionLinks.FactoryBuilder arrayPositionLinksFactoryBuilder=ArrayPositionLinks.builder(size);\n  int[][] sortedPositionLinks=new int[size][];\n  Iterator<Int2ObjectMap.Entry<IntArrayList>> iterator=positionLinks.int2ObjectEntrySet().fastIterator();\n  while (iterator.hasNext()) {\n    Int2ObjectOpenHashMap.Entry<IntArrayList> entry=iterator.next();\n    int key=entry.getIntKey();\n    IntArrayList positionsList=entry.getValue();\n    int[] positions=positionsList.toIntArray();\n    sortedPositionLinks[key]=positions;\n    if (positions.length > 0) {\n      IntArrays.mergeSort(positions,0,positions.length,comparator,positionsList.elements());\n      arrayPositionLinksFactoryBuilder.link(key,positions[0]);\n      for (int i=0; i < positions.length - 1; i++) {\n        arrayPositionLinksFactoryBuilder.link(positions[i],positions[i + 1]);\n      }\n    }\n  }\n  return createFactory(sortedPositionLinks,arrayPositionLinksFactoryBuilder.build());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 154,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1637,
        "startLineNumber" : 111,
        "startColumnNumber" : 8,
        "endLineNumber" : 140,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public Factory build(){\n  ArrayPositionLinks.FactoryBuilder arrayPositionLinksFactoryBuilder=ArrayPositionLinks.builder(size);\n  int[][] sortedPositionLinks=new int[size][];\n  Iterator<Int2ObjectMap.Entry<IntArrayList>> iterator=positionLinks.int2ObjectEntrySet().fastIterator();\n  while (iterator.hasNext()) {\n    Int2ObjectOpenHashMap.Entry<IntArrayList> entry=iterator.next();\n    int key=entry.getIntKey();\n    IntArrayList positionsList=entry.getValue();\n    int[] positions=positionsList.toIntArray();\n    sortedPositionLinks[key]=positions;\n    if (positions.length > 0) {\n      IntArrays.mergeSort(positions,0,positions.length,comparator,positionsList.elements());\n      arrayPositionLinksFactoryBuilder.link(key,positions[0]);\n      for (int i=0; i < positions.length - 1; i++) {\n        arrayPositionLinksFactoryBuilder.link(positions[i],positions[i + 1]);\n      }\n    }\n  }\n  return createFactory(sortedPositionLinks,arrayPositionLinksFactoryBuilder.build());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 161,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 139,
        "startColumnNumber" : 12,
        "endLineNumber" : 139,
        "endColumnNumber" : 96
      },
      "nodeContext" : "return createFactory(sortedPositionLinks,arrayPositionLinksFactoryBuilder.build());\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int[][]"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 124,
    "startColumnNumber" : 16,
    "endLineNumber" : 124,
    "endColumnNumber" : 35
  }, {
    "charLength" : 19,
    "startLineNumber" : 139,
    "startColumnNumber" : 33,
    "endLineNumber" : 139,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}