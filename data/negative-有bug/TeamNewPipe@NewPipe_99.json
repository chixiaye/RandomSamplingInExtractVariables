{
  "id" : 99,
  "expression" : "compactSlot >= 0",
  "projectName" : "TeamNewPipe@NewPipe",
  "commitID" : "d7574973e97fa7a3a21aa59967311f6091941830",
  "filePath" : "/app/src/main/java/org/schabi/newpipe/player/notification/NotificationConstants.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "compactSlot >= 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 187,
      "startColumnNumber" : 16,
      "endLineNumber" : 187,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 187,
        "startColumnNumber" : 16,
        "endLineNumber" : 187,
        "endColumnNumber" : 59
      },
      "nodeContext" : "compactSlot >= 0 && compactSlot < slotCount",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 187,
        "startColumnNumber" : 12,
        "endLineNumber" : 189,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (compactSlot >= 0 && compactSlot < slotCount) {\n  compactSlots.add(compactSlot);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 594,
        "startLineNumber" : 177,
        "startColumnNumber" : 36,
        "endLineNumber" : 190,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final int compactSlot=sharedPreferences.getInt(context.getString(SLOT_COMPACT_PREF_KEYS[i]),Integer.MAX_VALUE);\n  if (compactSlot == Integer.MAX_VALUE) {\n    return new ArrayList<>(SLOT_COMPACT_DEFAULTS);\n  }\n  if (compactSlot >= 0 && compactSlot < slotCount) {\n    compactSlots.add(compactSlot);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 622,
        "startLineNumber" : 177,
        "startColumnNumber" : 8,
        "endLineNumber" : 190,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=0; i < 3; i++) {\n  final int compactSlot=sharedPreferences.getInt(context.getString(SLOT_COMPACT_PREF_KEYS[i]),Integer.MAX_VALUE);\n  if (compactSlot == Integer.MAX_VALUE) {\n    return new ArrayList<>(SLOT_COMPACT_DEFAULTS);\n  }\n  if (compactSlot >= 0 && compactSlot < slotCount) {\n    compactSlots.add(compactSlot);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 56,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 753,
        "startLineNumber" : 175,
        "startColumnNumber" : 33,
        "endLineNumber" : 192,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final SortedSet<Integer> compactSlots=new TreeSet<>();\n  for (int i=0; i < 3; i++) {\n    final int compactSlot=sharedPreferences.getInt(context.getString(SLOT_COMPACT_PREF_KEYS[i]),Integer.MAX_VALUE);\n    if (compactSlot == Integer.MAX_VALUE) {\n      return new ArrayList<>(SLOT_COMPACT_DEFAULTS);\n    }\n    if (compactSlot >= 0 && compactSlot < slotCount) {\n      compactSlots.add(compactSlot);\n    }\n  }\n  return new ArrayList<>(compactSlots);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 76,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1340,
        "startLineNumber" : 165,
        "startColumnNumber" : 4,
        "endLineNumber" : 192,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * @param context the context to use\n * @param sharedPreferences the shared preferences to query values from\n * @param slotCount remove indices >= than this value (set to {@code 5} to do nothing, or makeit lower if there are slots with empty actions)\n * @return a sorted list of the indices of the slots to use as compact slots\n */\npublic static List<Integer> getCompactSlotsFromPreferences(@NonNull final Context context,final SharedPreferences sharedPreferences,final int slotCount){\n  final SortedSet<Integer> compactSlots=new TreeSet<>();\n  for (int i=0; i < 3; i++) {\n    final int compactSlot=sharedPreferences.getInt(context.getString(SLOT_COMPACT_PREF_KEYS[i]),Integer.MAX_VALUE);\n    if (compactSlot == Integer.MAX_VALUE) {\n      return new ArrayList<>(SLOT_COMPACT_DEFAULTS);\n    }\n    if (compactSlot >= 0 && compactSlot < slotCount) {\n      compactSlots.add(compactSlot);\n    }\n  }\n  return new ArrayList<>(compactSlots);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 102,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 187,
        "startColumnNumber" : 16,
        "endLineNumber" : 187,
        "endColumnNumber" : 59
      },
      "nodeContext" : "compactSlot >= 0 && compactSlot < slotCount",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 187,
    "startColumnNumber" : 16,
    "endLineNumber" : 187,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ ]
}