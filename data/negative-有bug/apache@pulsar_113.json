{
  "id" : 113,
  "expression" : "programmedFailure(Op.SET,path)",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/testmocks/src/main/java/org/apache/zookeeper/MockZooKeeper.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "programmedFailure(Op.SET,path)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 735,
      "startColumnNumber" : 53,
      "endLineNumber" : 735,
      "endColumnNumber" : 84
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 735,
        "startColumnNumber" : 43,
        "endLineNumber" : 735,
        "endColumnNumber" : 84
      },
      "nodeContext" : "failure=programmedFailure(Op.SET,path)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 735,
        "startColumnNumber" : 12,
        "endLineNumber" : 735,
        "endColumnNumber" : 85
      },
      "nodeContext" : "Optional<KeeperException.Code> failure=programmedFailure(Op.SET,path);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 1793,
        "startLineNumber" : 730,
        "startColumnNumber" : 31,
        "endLineNumber" : 777,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final Set<Watcher> toNotify=Sets.newHashSet();\n  mutex.lock();\n  Optional<KeeperException.Code> failure=programmedFailure(Op.SET,path);\n  if (failure.isPresent()) {\n    mutex.unlock();\n    cb.processResult(failure.get().intValue(),path,ctx,null);\n    return;\n  }\n else   if (stopped) {\n    mutex.unlock();\n    cb.processResult(KeeperException.Code.CONNECTIONLOSS.intValue(),path,ctx,null);\n    return;\n  }\n  if (!tree.containsKey(path)) {\n    mutex.unlock();\n    cb.processResult(KeeperException.Code.NONODE.intValue(),path,ctx,null);\n    return;\n  }\n  int currentVersion=tree.get(path).getRight();\n  if (version != -1 && version != currentVersion) {\n    log.debug(\"[{}] Current version: {} -- Expected: {}\",path,currentVersion,version);\n    mutex.unlock();\n    cb.processResult(KeeperException.Code.BADVERSION.intValue(),path,ctx,null);\n    return;\n  }\n  int newVersion=currentVersion + 1;\n  log.debug(\"[{}] Updating -- current version: {}\",path,currentVersion);\n  tree.put(path,Pair.of(data,newVersion));\n  Stat stat=new Stat();\n  stat.setVersion(newVersion);\n  mutex.unlock();\n  cb.processResult(0,path,ctx,stat);\n  toNotify.addAll(watchers.get(path));\n  watchers.removeAll(path);\n  for (  Watcher watcher : toNotify) {\n    watcher.process(new WatchedEvent(EventType.NodeDataChanged,KeeperState.SyncConnected,path));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 233,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 1799,
        "startLineNumber" : 730,
        "startColumnNumber" : 25,
        "endLineNumber" : 777,
        "endColumnNumber" : 9
      },
      "nodeContext" : "() -> {\n  final Set<Watcher> toNotify=Sets.newHashSet();\n  mutex.lock();\n  Optional<KeeperException.Code> failure=programmedFailure(Op.SET,path);\n  if (failure.isPresent()) {\n    mutex.unlock();\n    cb.processResult(failure.get().intValue(),path,ctx,null);\n    return;\n  }\n else   if (stopped) {\n    mutex.unlock();\n    cb.processResult(KeeperException.Code.CONNECTIONLOSS.intValue(),path,ctx,null);\n    return;\n  }\n  if (!tree.containsKey(path)) {\n    mutex.unlock();\n    cb.processResult(KeeperException.Code.NONODE.intValue(),path,ctx,null);\n    return;\n  }\n  int currentVersion=tree.get(path).getRight();\n  if (version != -1 && version != currentVersion) {\n    log.debug(\"[{}] Current version: {} -- Expected: {}\",path,currentVersion,version);\n    mutex.unlock();\n    cb.processResult(KeeperException.Code.BADVERSION.intValue(),path,ctx,null);\n    return;\n  }\n  int newVersion=currentVersion + 1;\n  log.debug(\"[{}] Updating -- current version: {}\",path,currentVersion);\n  tree.put(path,Pair.of(data,newVersion));\n  Stat stat=new Stat();\n  stat.setVersion(newVersion);\n  mutex.unlock();\n  cb.processResult(0,path,ctx,stat);\n  toNotify.addAll(watchers.get(path));\n  watchers.removeAll(path);\n  for (  Watcher watcher : toNotify) {\n    watcher.process(new WatchedEvent(EventType.NodeDataChanged,KeeperState.SyncConnected,path));\n  }\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 234,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 735,
        "startColumnNumber" : 12,
        "endLineNumber" : 735,
        "endColumnNumber" : 85
      },
      "nodeContext" : "Optional<KeeperException.Code> failure=programmedFailure(Op.SET,path);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "java.util.Optional<KeeperException.Code>"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 735,
    "startColumnNumber" : 53,
    "endLineNumber" : 735,
    "endColumnNumber" : 84
  } ],
  "layoutRelationDataList" : [ ]
}