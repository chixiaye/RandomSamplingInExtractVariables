{
  "id" : 107,
  "expression" : "new AtomicInteger()",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/flowable/FlowableRepeatTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new AtomicInteger()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 39,
      "startColumnNumber" : 36,
      "endLineNumber" : 39,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 39,
        "startColumnNumber" : 28,
        "endLineNumber" : 39,
        "endColumnNumber" : 55
      },
      "nodeContext" : "count=new AtomicInteger()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 39,
        "endColumnNumber" : 56
      },
      "nodeContext" : "final AtomicInteger count=new AtomicInteger();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 489,
        "startLineNumber" : 37,
        "startColumnNumber" : 33,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int NUM=10;\n  final AtomicInteger count=new AtomicInteger();\n  int value=Flowable.create(new Publisher<Integer>(){\n    @Override public void subscribe(    final Subscriber<? super Integer> o){\n      o.onNext(count.incrementAndGet());\n      o.onComplete();\n    }\n  }\n).repeat().subscribeOn(Schedulers.computation()).take(NUM).toBlocking().last();\n  assertEquals(NUM,value);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 75,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 545,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test(timeout=2000) public void testRepetition(){\n  int NUM=10;\n  final AtomicInteger count=new AtomicInteger();\n  int value=Flowable.create(new Publisher<Integer>(){\n    @Override public void subscribe(    final Subscriber<? super Integer> o){\n      o.onNext(count.incrementAndGet());\n      o.onComplete();\n    }\n  }\n).repeat().subscribeOn(Schedulers.computation()).take(NUM).toBlocking().last();\n  assertEquals(NUM,value);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 84,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 39,
        "endColumnNumber" : 56
      },
      "nodeContext" : "final AtomicInteger count=new AtomicInteger();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.concurrent.atomic.AtomicInteger"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 39,
    "startColumnNumber" : 36,
    "endLineNumber" : 39,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ ]
}