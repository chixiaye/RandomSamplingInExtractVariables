{
  "id" : 406,
  "expression" : "Object.class",
  "projectName" : "google@gson",
  "commitID" : "c3d0f200b352f411b9ebe45c3bf49d4328b2c51f",
  "filePath" : "/gson/src/main/java/com/google/gson/internal/ReflectionAccessFilterHelper.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Object.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 74,
      "startColumnNumber" : 95,
      "endLineNumber" : 74,
      "endColumnNumber" : 107
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 74,
        "startColumnNumber" : 41,
        "endLineNumber" : 74,
        "endColumnNumber" : 108
      },
      "nodeContext" : "AccessibleObject.class.getDeclaredMethod(\"canAccess\",Object.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 74,
        "startColumnNumber" : 23,
        "endLineNumber" : 74,
        "endColumnNumber" : 108
      },
      "nodeContext" : "canAccessMethod=AccessibleObject.class.getDeclaredMethod(\"canAccess\",Object.class)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 74,
        "startColumnNumber" : 10,
        "endLineNumber" : 74,
        "endColumnNumber" : 109
      },
      "nodeContext" : "final Method canAccessMethod=AccessibleObject.class.getDeclaredMethod(\"canAccess\",Object.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 539,
        "startLineNumber" : 73,
        "startColumnNumber" : 12,
        "endLineNumber" : 84,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  final Method canAccessMethod=AccessibleObject.class.getDeclaredMethod(\"canAccess\",Object.class);\n  accessChecker=new AccessChecker(){\n    @Override public boolean canAccess(    AccessibleObject accessibleObject,    Object object){\n      try {\n        return (Boolean)canAccessMethod.invoke(accessibleObject,object);\n      }\n catch (      Exception e) {\n        throw new RuntimeException(\"Failed invoking canAccess\",e);\n      }\n    }\n  }\n;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 61,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 594,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 85,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  final Method canAccessMethod=AccessibleObject.class.getDeclaredMethod(\"canAccess\",Object.class);\n  accessChecker=new AccessChecker(){\n    @Override public boolean canAccess(    AccessibleObject accessibleObject,    Object object){\n      try {\n        return (Boolean)canAccessMethod.invoke(accessibleObject,object);\n      }\n catch (      Exception e) {\n        throw new RuntimeException(\"Failed invoking canAccess\",e);\n      }\n    }\n  }\n;\n}\n catch (NoSuchMethodException ignored) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 68,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 614,
        "startLineNumber" : 72,
        "startColumnNumber" : 40,
        "endLineNumber" : 86,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  try {\n    final Method canAccessMethod=AccessibleObject.class.getDeclaredMethod(\"canAccess\",Object.class);\n    accessChecker=new AccessChecker(){\n      @Override public boolean canAccess(      AccessibleObject accessibleObject,      Object object){\n        try {\n          return (Boolean)canAccessMethod.invoke(accessibleObject,object);\n        }\n catch (        Exception e) {\n          throw new RuntimeException(\"Failed invoking canAccess\",e);\n        }\n      }\n    }\n;\n  }\n catch (  NoSuchMethodException ignored) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 648,
        "startLineNumber" : 72,
        "startColumnNumber" : 6,
        "endLineNumber" : 86,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (JavaVersion.isJava9OrLater()) {\n  try {\n    final Method canAccessMethod=AccessibleObject.class.getDeclaredMethod(\"canAccess\",Object.class);\n    accessChecker=new AccessChecker(){\n      @Override public boolean canAccess(      AccessibleObject accessibleObject,      Object object){\n        try {\n          return (Boolean)canAccessMethod.invoke(accessibleObject,object);\n        }\n catch (        Exception e) {\n          throw new RuntimeException(\"Failed invoking canAccess\",e);\n        }\n      }\n    }\n;\n  }\n catch (  NoSuchMethodException ignored) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 73,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Initializer,body]",
      "nodePosition" : {
        "charLength" : 1161,
        "startLineNumber" : 69,
        "startColumnNumber" : 11,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  AccessChecker accessChecker=null;\n  if (JavaVersion.isJava9OrLater()) {\n    try {\n      final Method canAccessMethod=AccessibleObject.class.getDeclaredMethod(\"canAccess\",Object.class);\n      accessChecker=new AccessChecker(){\n        @Override public boolean canAccess(        AccessibleObject accessibleObject,        Object object){\n          try {\n            return (Boolean)canAccessMethod.invoke(accessibleObject,object);\n          }\n catch (          Exception e) {\n            throw new RuntimeException(\"Failed invoking canAccess\",e);\n          }\n        }\n      }\n;\n    }\n catch (    NoSuchMethodException ignored) {\n    }\n  }\n  if (accessChecker == null) {\n    accessChecker=new AccessChecker(){\n      @Override public boolean canAccess(      AccessibleObject accessibleObject,      Object object){\n        return true;\n      }\n    }\n;\n  }\n  INSTANCE=accessChecker;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1168,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 97,
        "endColumnNumber" : 5
      },
      "nodeContext" : "static {\n  AccessChecker accessChecker=null;\n  if (JavaVersion.isJava9OrLater()) {\n    try {\n      final Method canAccessMethod=AccessibleObject.class.getDeclaredMethod(\"canAccess\",Object.class);\n      accessChecker=new AccessChecker(){\n        @Override public boolean canAccess(        AccessibleObject accessibleObject,        Object object){\n          try {\n            return (Boolean)canAccessMethod.invoke(accessibleObject,object);\n          }\n catch (          Exception e) {\n            throw new RuntimeException(\"Failed invoking canAccess\",e);\n          }\n        }\n      }\n;\n    }\n catch (    NoSuchMethodException ignored) {\n    }\n  }\n  if (accessChecker == null) {\n    accessChecker=new AccessChecker(){\n      @Override public boolean canAccess(      AccessibleObject accessibleObject,      Object object){\n        return true;\n      }\n    }\n;\n  }\n  INSTANCE=accessChecker;\n}\n",
      "nodeType" : "Initializer",
      "astNodeNumber" : 115,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 74,
        "startColumnNumber" : 10,
        "endLineNumber" : 74,
        "endColumnNumber" : 109
      },
      "nodeContext" : "final Method canAccessMethod=AccessibleObject.class.getDeclaredMethod(\"canAccess\",Object.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<java.lang.Object>"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 74,
    "startColumnNumber" : 95,
    "endLineNumber" : 74,
    "endColumnNumber" : 107
  } ],
  "layoutRelationDataList" : [ ]
}