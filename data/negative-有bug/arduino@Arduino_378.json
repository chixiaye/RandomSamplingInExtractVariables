{
  "id" : 378,
  "expression" : "functionMatcher",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/arduino-core/src/processing/app/preproc/PdePreprocessor.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "functionMatcher",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 327,
      "startColumnNumber" : 11,
      "endLineNumber" : 327,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 327,
        "startColumnNumber" : 11,
        "endLineNumber" : 327,
        "endColumnNumber" : 33
      },
      "nodeContext" : "functionMatcher.find()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 327,
        "startColumnNumber" : 4,
        "endLineNumber" : 328,
        "endColumnNumber" : 58
      },
      "nodeContext" : "while (functionMatcher.find()) functionMatches.add(functionMatcher.group(0) + \";\");\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1411,
        "startLineNumber" : 310,
        "startColumnNumber" : 49,
        "endLineNumber" : 341,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  in=collapseBraces(strip(in));\n  Pattern prototypePattern=Pattern.compile(\"[\\\\w\\\\[\\\\]\\\\*]+\\\\s+[&\\\\[\\\\]\\\\*\\\\w\\\\s]+\\\\([&,\\\\[\\\\]\\\\*\\\\w\\\\s]*\\\\)(?=\\\\s*;)\");\n  Pattern functionPattern=Pattern.compile(\"[\\\\w\\\\[\\\\]\\\\*]+\\\\s+[&\\\\[\\\\]\\\\*\\\\w\\\\s]+\\\\([&,\\\\[\\\\]\\\\*\\\\w\\\\s]*\\\\)(?=\\\\s*\\\\{)\");\n  ArrayList<String> prototypeMatches=new ArrayList<String>();\n  Matcher prototypeMatcher=prototypePattern.matcher(in);\n  while (prototypeMatcher.find())   prototypeMatches.add(prototypeMatcher.group(0) + \";\");\n  ArrayList<String> functionMatches=new ArrayList<String>();\n  Matcher functionMatcher=functionPattern.matcher(in);\n  while (functionMatcher.find())   functionMatches.add(functionMatcher.group(0) + \";\");\n  for (int functionIndex=functionMatches.size() - 1; functionIndex >= 0; functionIndex--) {\n    for (int prototypeIndex=0; prototypeIndex < prototypeMatches.size(); prototypeIndex++) {\n      if ((functionMatches.get(functionIndex)).equals(prototypeMatches.get(prototypeIndex))) {\n        functionMatches.remove(functionIndex);\n        break;\n      }\n    }\n  }\n  return functionMatches;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 152,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1458,
        "startLineNumber" : 310,
        "startColumnNumber" : 2,
        "endLineNumber" : 341,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public ArrayList<String> prototypes(String in){\n  in=collapseBraces(strip(in));\n  Pattern prototypePattern=Pattern.compile(\"[\\\\w\\\\[\\\\]\\\\*]+\\\\s+[&\\\\[\\\\]\\\\*\\\\w\\\\s]+\\\\([&,\\\\[\\\\]\\\\*\\\\w\\\\s]*\\\\)(?=\\\\s*;)\");\n  Pattern functionPattern=Pattern.compile(\"[\\\\w\\\\[\\\\]\\\\*]+\\\\s+[&\\\\[\\\\]\\\\*\\\\w\\\\s]+\\\\([&,\\\\[\\\\]\\\\*\\\\w\\\\s]*\\\\)(?=\\\\s*\\\\{)\");\n  ArrayList<String> prototypeMatches=new ArrayList<String>();\n  Matcher prototypeMatcher=prototypePattern.matcher(in);\n  while (prototypeMatcher.find())   prototypeMatches.add(prototypeMatcher.group(0) + \";\");\n  ArrayList<String> functionMatches=new ArrayList<String>();\n  Matcher functionMatcher=functionPattern.matcher(in);\n  while (functionMatcher.find())   functionMatches.add(functionMatcher.group(0) + \";\");\n  for (int functionIndex=functionMatches.size() - 1; functionIndex >= 0; functionIndex--) {\n    for (int prototypeIndex=0; prototypeIndex < prototypeMatches.size(); prototypeIndex++) {\n      if ((functionMatches.get(functionIndex)).equals(prototypeMatches.get(prototypeIndex))) {\n        functionMatches.remove(functionIndex);\n        break;\n      }\n    }\n  }\n  return functionMatches;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 164,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 327,
        "startColumnNumber" : 11,
        "endLineNumber" : 327,
        "endColumnNumber" : 33
      },
      "nodeContext" : "functionMatcher.find()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.util.regex.Matcher"
  }, {
    "nodeContext" : "functionMatcher",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 328,
      "startColumnNumber" : 26,
      "endLineNumber" : 328,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 328,
        "startColumnNumber" : 26,
        "endLineNumber" : 328,
        "endColumnNumber" : 50
      },
      "nodeContext" : "functionMatcher.group(0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 328,
        "startColumnNumber" : 26,
        "endLineNumber" : 328,
        "endColumnNumber" : 56
      },
      "nodeContext" : "functionMatcher.group(0) + \";\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 328,
        "startColumnNumber" : 6,
        "endLineNumber" : 328,
        "endColumnNumber" : 57
      },
      "nodeContext" : "functionMatches.add(functionMatcher.group(0) + \";\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 328,
        "startColumnNumber" : 6,
        "endLineNumber" : 328,
        "endColumnNumber" : 58
      },
      "nodeContext" : "functionMatches.add(functionMatcher.group(0) + \";\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 89,
        "startLineNumber" : 327,
        "startColumnNumber" : 4,
        "endLineNumber" : 328,
        "endColumnNumber" : 58
      },
      "nodeContext" : "while (functionMatcher.find()) functionMatches.add(functionMatcher.group(0) + \";\");\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1411,
        "startLineNumber" : 310,
        "startColumnNumber" : 49,
        "endLineNumber" : 341,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  in=collapseBraces(strip(in));\n  Pattern prototypePattern=Pattern.compile(\"[\\\\w\\\\[\\\\]\\\\*]+\\\\s+[&\\\\[\\\\]\\\\*\\\\w\\\\s]+\\\\([&,\\\\[\\\\]\\\\*\\\\w\\\\s]*\\\\)(?=\\\\s*;)\");\n  Pattern functionPattern=Pattern.compile(\"[\\\\w\\\\[\\\\]\\\\*]+\\\\s+[&\\\\[\\\\]\\\\*\\\\w\\\\s]+\\\\([&,\\\\[\\\\]\\\\*\\\\w\\\\s]*\\\\)(?=\\\\s*\\\\{)\");\n  ArrayList<String> prototypeMatches=new ArrayList<String>();\n  Matcher prototypeMatcher=prototypePattern.matcher(in);\n  while (prototypeMatcher.find())   prototypeMatches.add(prototypeMatcher.group(0) + \";\");\n  ArrayList<String> functionMatches=new ArrayList<String>();\n  Matcher functionMatcher=functionPattern.matcher(in);\n  while (functionMatcher.find())   functionMatches.add(functionMatcher.group(0) + \";\");\n  for (int functionIndex=functionMatches.size() - 1; functionIndex >= 0; functionIndex--) {\n    for (int prototypeIndex=0; prototypeIndex < prototypeMatches.size(); prototypeIndex++) {\n      if ((functionMatches.get(functionIndex)).equals(prototypeMatches.get(prototypeIndex))) {\n        functionMatches.remove(functionIndex);\n        break;\n      }\n    }\n  }\n  return functionMatches;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 152,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1458,
        "startLineNumber" : 310,
        "startColumnNumber" : 2,
        "endLineNumber" : 341,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public ArrayList<String> prototypes(String in){\n  in=collapseBraces(strip(in));\n  Pattern prototypePattern=Pattern.compile(\"[\\\\w\\\\[\\\\]\\\\*]+\\\\s+[&\\\\[\\\\]\\\\*\\\\w\\\\s]+\\\\([&,\\\\[\\\\]\\\\*\\\\w\\\\s]*\\\\)(?=\\\\s*;)\");\n  Pattern functionPattern=Pattern.compile(\"[\\\\w\\\\[\\\\]\\\\*]+\\\\s+[&\\\\[\\\\]\\\\*\\\\w\\\\s]+\\\\([&,\\\\[\\\\]\\\\*\\\\w\\\\s]*\\\\)(?=\\\\s*\\\\{)\");\n  ArrayList<String> prototypeMatches=new ArrayList<String>();\n  Matcher prototypeMatcher=prototypePattern.matcher(in);\n  while (prototypeMatcher.find())   prototypeMatches.add(prototypeMatcher.group(0) + \";\");\n  ArrayList<String> functionMatches=new ArrayList<String>();\n  Matcher functionMatcher=functionPattern.matcher(in);\n  while (functionMatcher.find())   functionMatches.add(functionMatcher.group(0) + \";\");\n  for (int functionIndex=functionMatches.size() - 1; functionIndex >= 0; functionIndex--) {\n    for (int prototypeIndex=0; prototypeIndex < prototypeMatches.size(); prototypeIndex++) {\n      if ((functionMatches.get(functionIndex)).equals(prototypeMatches.get(prototypeIndex))) {\n        functionMatches.remove(functionIndex);\n        break;\n      }\n    }\n  }\n  return functionMatches;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 164,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 328,
        "startColumnNumber" : 6,
        "endLineNumber" : 328,
        "endColumnNumber" : 58
      },
      "nodeContext" : "functionMatches.add(functionMatcher.group(0) + \";\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.regex.Matcher"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 327,
    "startColumnNumber" : 11,
    "endLineNumber" : 327,
    "endColumnNumber" : 26
  }, {
    "charLength" : 15,
    "startLineNumber" : 328,
    "startColumnNumber" : 26,
    "endLineNumber" : 328,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  } ]
}