{
  "id" : 96,
  "expression" : "\".\"",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/arduino-core/src/processing/app/helpers/PreferencesMap.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\".\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 145,
      "startColumnNumber" : 23,
      "endLineNumber" : 145,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 145,
        "startColumnNumber" : 10,
        "endLineNumber" : 145,
        "endColumnNumber" : 27
      },
      "nodeContext" : "key.contains(\".\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 145,
        "startColumnNumber" : 6,
        "endLineNumber" : 146,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (key.contains(\".\")) continue;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 144,
        "startColumnNumber" : 32,
        "endLineNumber" : 148,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (key.contains(\".\"))   continue;\n  res.put(key,get(key));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 144,
        "startColumnNumber" : 4,
        "endLineNumber" : 148,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (String key : keySet()) {\n  if (key.contains(\".\"))   continue;\n  res.put(key,get(key));\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 185,
        "startLineNumber" : 142,
        "startColumnNumber" : 38,
        "endLineNumber" : 150,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  PreferencesMap res=new PreferencesMap();\n  for (  String key : keySet()) {\n    if (key.contains(\".\"))     continue;\n    res.put(key,get(key));\n  }\n  return res;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 707,
        "startLineNumber" : 117,
        "startColumnNumber" : 2,
        "endLineNumber" : 150,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Create a new PreferenceMap that contains all the top level pairs of the current mapping. E.g. the folowing mapping:<br /> <pre> Map ( alpha = Alpha alpha.some.keys = v1 alpha.other.keys = v2 beta = Beta beta.some.keys = v3 ) </pre> will generate the following result: <pre> Map ( alpha = Alpha beta = Beta ) </pre>\n * @return\n */\npublic PreferencesMap topLevelMap(){\n  PreferencesMap res=new PreferencesMap();\n  for (  String key : keySet()) {\n    if (key.contains(\".\"))     continue;\n    res.put(key,get(key));\n  }\n  return res;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 39,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 145,
        "startColumnNumber" : 10,
        "endLineNumber" : 145,
        "endColumnNumber" : 27
      },
      "nodeContext" : "key.contains(\".\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 145,
    "startColumnNumber" : 23,
    "endLineNumber" : 145,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ ]
}