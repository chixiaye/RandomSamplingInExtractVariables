{
  "id" : 316,
  "expression" : "-1",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava/src/com/google/common/io/LineReader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "-1",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 79,
      "startColumnNumber" : 18,
      "endLineNumber" : 79,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 79,
        "startColumnNumber" : 10,
        "endLineNumber" : 79,
        "endColumnNumber" : 20
      },
      "nodeContext" : "read == -1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 79,
        "startColumnNumber" : 6,
        "endLineNumber" : 82,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (read == -1) {\n  lineBuf.finish();\n  break;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 404,
        "startLineNumber" : 74,
        "startColumnNumber" : 33,
        "endLineNumber" : 84,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Java8Compatibility.clear(cbuf);\n  int read=(reader != null) ? reader.read(buf,0,buf.length) : readable.read(cbuf);\n  if (read == -1) {\n    lineBuf.finish();\n    break;\n  }\n  lineBuf.add(buf,0,read);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 433,
        "startLineNumber" : 74,
        "startColumnNumber" : 4,
        "endLineNumber" : 84,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (lines.peek() == null) {\n  Java8Compatibility.clear(cbuf);\n  int read=(reader != null) ? reader.read(buf,0,buf.length) : readable.read(cbuf);\n  if (read == -1) {\n    lineBuf.finish();\n    break;\n  }\n  lineBuf.add(buf,0,read);\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 51,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 471,
        "startLineNumber" : 73,
        "startColumnNumber" : 46,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  while (lines.peek() == null) {\n    Java8Compatibility.clear(cbuf);\n    int read=(reader != null) ? reader.read(buf,0,buf.length) : readable.read(cbuf);\n    if (read == -1) {\n      lineBuf.finish();\n      break;\n    }\n    lineBuf.add(buf,0,read);\n  }\n  return lines.poll();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1056,
        "startLineNumber" : 62,
        "startColumnNumber" : 2,
        "endLineNumber" : 86,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Reads a line of text. A line is considered to be terminated by any one of a line feed ( {@code '\\n'}), a carriage return ( {@code '\\r'}), or a carriage return followed immediately by a linefeed ( {@code \"\\r\\n\"}).\n * @return a {@code String} containing the contents of the line, not including anyline-termination characters, or  {@code null} if the end of the stream has been reached.\n * @throws IOException if an I/O error occurs\n */\n@CanIgnoreReturnValue @CheckForNull public String readLine() throws IOException {\n  while (lines.peek() == null) {\n    Java8Compatibility.clear(cbuf);\n    int read=(reader != null) ? reader.read(buf,0,buf.length) : readable.read(cbuf);\n    if (read == -1) {\n      lineBuf.finish();\n      break;\n    }\n    lineBuf.add(buf,0,read);\n  }\n  return lines.poll();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 68,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 79,
        "startColumnNumber" : 10,
        "endLineNumber" : 79,
        "endColumnNumber" : 20
      },
      "nodeContext" : "read == -1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 79,
    "startColumnNumber" : 18,
    "endLineNumber" : 79,
    "endColumnNumber" : 20
  } ],
  "layoutRelationDataList" : [ ]
}