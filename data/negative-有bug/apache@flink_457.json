{
  "id" : 457,
  "expression" : "JobConfigHeaders",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-runtime/src/test/java/org/apache/flink/runtime/rest/handler/job/JobConfigHandlerTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "JobConfigHeaders",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 59,
      "startColumnNumber" : 24,
      "endLineNumber" : 59,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 59,
        "startColumnNumber" : 24,
        "endLineNumber" : 59,
        "endColumnNumber" : 54
      },
      "nodeContext" : "JobConfigHeaders.getInstance()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 363,
        "startLineNumber" : 55,
        "startColumnNumber" : 16,
        "endLineNumber" : 61,
        "endColumnNumber" : 55
      },
      "nodeContext" : "new JobConfigHandler(() -> null,TestingUtils.TIMEOUT,Collections.emptyMap(),JobConfigHeaders.getInstance(),new DefaultExecutionGraphCache(TestingUtils.TIMEOUT,TestingUtils.TIMEOUT),TestingUtils.defaultExecutor())",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 26,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 398,
        "startLineNumber" : 54,
        "startColumnNumber" : 31,
        "endLineNumber" : 61,
        "endColumnNumber" : 55
      },
      "nodeContext" : "jobConfigHandler=new JobConfigHandler(() -> null,TestingUtils.TIMEOUT,Collections.emptyMap(),JobConfigHeaders.getInstance(),new DefaultExecutionGraphCache(TestingUtils.TIMEOUT,TestingUtils.TIMEOUT),TestingUtils.defaultExecutor())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 28,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 422,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 56
      },
      "nodeContext" : "final JobConfigHandler jobConfigHandler=new JobConfigHandler(() -> null,TestingUtils.TIMEOUT,Collections.emptyMap(),JobConfigHeaders.getInstance(),new DefaultExecutionGraphCache(TestingUtils.TIMEOUT,TestingUtils.TIMEOUT),TestingUtils.defaultExecutor());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 32,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1700,
        "startLineNumber" : 53,
        "startColumnNumber" : 43,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final JobConfigHandler jobConfigHandler=new JobConfigHandler(() -> null,TestingUtils.TIMEOUT,Collections.emptyMap(),JobConfigHeaders.getInstance(),new DefaultExecutionGraphCache(TestingUtils.TIMEOUT,TestingUtils.TIMEOUT),TestingUtils.defaultExecutor());\n  final Map<String,String> globalJobParameters=new HashMap<>();\n  globalJobParameters.put(\"foobar\",\"barfoo\");\n  globalJobParameters.put(\"bar.secret.foo\",\"my secret\");\n  globalJobParameters.put(\"password.to.my.safe\",\"12345\");\n  final ArchivedExecutionConfig archivedExecutionConfig=new ArchivedExecutionConfigBuilder().setGlobalJobParameters(globalJobParameters).build();\n  final AccessExecutionGraph archivedExecutionGraph=new ArchivedExecutionGraphBuilder().setArchivedExecutionConfig(archivedExecutionConfig).build();\n  final HandlerRequest<EmptyRequestBody> handlerRequest=createRequest(archivedExecutionGraph.getJobID());\n  final JobConfigInfo jobConfigInfoResponse=jobConfigHandler.handleRequest(handlerRequest,archivedExecutionGraph);\n  final Map<String,String> filteredGlobalJobParameters=filterSecretValues(globalJobParameters);\n  assertThat(jobConfigInfoResponse.getExecutionConfigInfo().getGlobalJobParameters(),is(equalTo(filteredGlobalJobParameters)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 146,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1846,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 88,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void handleRequest_executionConfigWithSecretValues_excludesSecretValuesFromResponse() throws HandlerRequestException {\n  final JobConfigHandler jobConfigHandler=new JobConfigHandler(() -> null,TestingUtils.TIMEOUT,Collections.emptyMap(),JobConfigHeaders.getInstance(),new DefaultExecutionGraphCache(TestingUtils.TIMEOUT,TestingUtils.TIMEOUT),TestingUtils.defaultExecutor());\n  final Map<String,String> globalJobParameters=new HashMap<>();\n  globalJobParameters.put(\"foobar\",\"barfoo\");\n  globalJobParameters.put(\"bar.secret.foo\",\"my secret\");\n  globalJobParameters.put(\"password.to.my.safe\",\"12345\");\n  final ArchivedExecutionConfig archivedExecutionConfig=new ArchivedExecutionConfigBuilder().setGlobalJobParameters(globalJobParameters).build();\n  final AccessExecutionGraph archivedExecutionGraph=new ArchivedExecutionGraphBuilder().setArchivedExecutionConfig(archivedExecutionConfig).build();\n  final HandlerRequest<EmptyRequestBody> handlerRequest=createRequest(archivedExecutionGraph.getJobID());\n  final JobConfigInfo jobConfigInfoResponse=jobConfigHandler.handleRequest(handlerRequest,archivedExecutionGraph);\n  final Map<String,String> filteredGlobalJobParameters=filterSecretValues(globalJobParameters);\n  assertThat(jobConfigInfoResponse.getExecutionConfigInfo().getGlobalJobParameters(),is(equalTo(filteredGlobalJobParameters)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 154,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 59,
        "startColumnNumber" : 24,
        "endLineNumber" : 59,
        "endColumnNumber" : 54
      },
      "nodeContext" : "JobConfigHeaders.getInstance()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "org.apache.flink.runtime.rest.messages.JobConfigHeaders"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 59,
    "startColumnNumber" : 24,
    "endLineNumber" : 59,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ ]
}