{
  "id" : 337,
  "expression" : "String",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/org/telegram/ui/ProfileActivity.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "String",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 1573,
      "startColumnNumber" : 39,
      "endLineNumber" : 1573,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 1573,
        "startColumnNumber" : 39,
        "endLineNumber" : 1573,
        "endColumnNumber" : 143
      },
      "nodeContext" : "String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 1573,
        "startColumnNumber" : 32,
        "endLineNumber" : 1573,
        "endColumnNumber" : 143
      },
      "nodeContext" : "text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 1573,
        "startColumnNumber" : 32,
        "endLineNumber" : 1573,
        "endColumnNumber" : 144
      },
      "nodeContext" : "text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 176,
        "startLineNumber" : 1572,
        "startColumnNumber" : 107,
        "endLineNumber" : 1574,
        "endColumnNumber" : 29
      },
      "nodeContext" : "{\n  text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 418,
        "startLineNumber" : 1572,
        "startColumnNumber" : 28,
        "endLineNumber" : 1576,
        "endColumnNumber" : 29
      },
      "nodeContext" : "if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n  text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n}\n else {\n  text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 53,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 680,
        "startLineNumber" : 1567,
        "startColumnNumber" : 42,
        "endLineNumber" : 1577,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n    text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n  }\n else {\n    text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1384,
        "startLineNumber" : 1567,
        "startColumnNumber" : 24,
        "endLineNumber" : 1587,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (user_id != 0) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n    text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n  }\n else {\n    text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n  }\n}\n else if (chat_id != 0) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  if (chat == null) {\n    return;\n  }\n  if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n    text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n  }\n else {\n    text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 148,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1927,
        "startLineNumber" : 1565,
        "startColumnNumber" : 24,
        "endLineNumber" : 1595,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  String text=null;\n  if (user_id != 0) {\n    TLRPC.User user=getMessagesController().getUser(user_id);\n    if (user == null) {\n      return;\n    }\n    if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n      text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n    }\n else {\n      text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n    }\n  }\n else   if (chat_id != 0) {\n    TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n    if (chat == null) {\n      return;\n    }\n    if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n      text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n    }\n else {\n      text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n    }\n  }\n  if (TextUtils.isEmpty(text)) {\n    return;\n  }\n  Intent intent=new Intent(Intent.ACTION_SEND);\n  intent.setType(\"text/plain\");\n  intent.putExtra(Intent.EXTRA_TEXT,text);\n  startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 203,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2013,
        "startLineNumber" : 1565,
        "startColumnNumber" : 20,
        "endLineNumber" : 1597,
        "endColumnNumber" : 21
      },
      "nodeContext" : "try {\n  String text=null;\n  if (user_id != 0) {\n    TLRPC.User user=getMessagesController().getUser(user_id);\n    if (user == null) {\n      return;\n    }\n    if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n      text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n    }\n else {\n      text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n    }\n  }\n else   if (chat_id != 0) {\n    TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n    if (chat == null) {\n      return;\n    }\n    if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n      text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n    }\n else {\n      text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n    }\n  }\n  if (TextUtils.isEmpty(text)) {\n    return;\n  }\n  Intent intent=new Intent(Intent.ACTION_SEND);\n  intent.setType(\"text/plain\");\n  intent.putExtra(Intent.EXTRA_TEXT,text);\n  startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n}\n catch (Exception e) {\n  FileLog.e(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 215,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2053,
        "startLineNumber" : 1564,
        "startColumnNumber" : 40,
        "endLineNumber" : 1598,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 216,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 14202,
        "startLineNumber" : 1564,
        "startColumnNumber" : 23,
        "endLineNumber" : 1788,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (id == share) {\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == add_shortcut) {\n  try {\n    long did;\n    if (currentEncryptedChat != null) {\n      did=((long)currentEncryptedChat.id) << 32;\n    }\n else     if (user_id != 0) {\n      did=user_id;\n    }\n else     if (chat_id != 0) {\n      did=-chat_id;\n    }\n else {\n      return;\n    }\n    getMediaDataController().installShortcut(did);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == call_item || id == video_call_item) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user != null) {\n    VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n  }\n}\n else if (id == search_members) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n  args.putBoolean(\"open_search\",true);\n  ChatUsersActivity fragment=new ChatUsersActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == add_member) {\n  openAddMember();\n}\n else if (id == statistics) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putBoolean(\"is_megagroup\",chat.megagroup);\n  StatisticActivity fragment=new StatisticActivity(args);\n  presentFragment(fragment);\n}\n else if (id == view_discussion) {\n  openDiscussion();\n}\n else if (id == start_secret_chat) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n  builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n  builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n    creatingChat=true;\n    getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  showDialog(builder.create());\n}\n else if (id == gallery_menu_save) {\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n    getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n    return;\n  }\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n  if (f.exists()) {\n    MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n      if (getParentActivity() == null) {\n        return;\n      }\n      BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n    }\n);\n  }\n}\n else if (id == edit_name) {\n  presentFragment(new ChangeNameActivity());\n}\n else if (id == logout) {\n  presentFragment(new LogoutActivity());\n}\n else if (id == set_as_main) {\n  int position=avatarsViewPager.getRealPosition();\n  TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n  if (photo == null) {\n    return;\n  }\n  avatarsViewPager.startMovePhotoToBegin(position);\n  TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n  req.id=new TLRPC.TL_inputPhoto();\n  req.id.id=photo.id;\n  req.id.access_hash=photo.access_hash;\n  req.id.file_reference=photo.file_reference;\n  UserConfig userConfig=getUserConfig();\n  getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n    avatarsViewPager.finishSettingMainPhoto();\n    if (response instanceof TLRPC.TL_photos_photo) {\n      TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n      getMessagesController().putUsers(photos_photo.users,false);\n      TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n      if (photos_photo.photo instanceof TLRPC.TL_photo) {\n        avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n        if (user != null) {\n          user.photo.photo_id=photos_photo.photo.id;\n          userConfig.setCurrentUser(user);\n          userConfig.saveConfig(true);\n        }\n      }\n    }\n  }\n));\n  undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n  TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n  TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n  if (user != null) {\n    TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n    user.photo.photo_id=photo.id;\n    user.photo.photo_small=smallSize.location;\n    user.photo.photo_big=bigSize.location;\n    userConfig.setCurrentUser(user);\n    userConfig.saveConfig(true);\n    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n    updateProfileData();\n  }\n  avatarsViewPager.commitMoveToBegin();\n}\n else if (id == edit_avatar) {\n  int position=avatarsViewPager.getRealPosition();\n  ImageLocation location=avatarsViewPager.getImageLocation(position);\n  if (location == null) {\n    return;\n  }\n  File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n  boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  String thumb;\n  if (isVideo) {\n    ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n    thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n  }\n else {\n    thumb=null;\n  }\n  imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n}\n else if (id == delete_avatar) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n  }\n else {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n  }\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (avatarsViewPager.getRealCount() == 1) {\n      setForegroundImage(true);\n    }\n    if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n      getMessagesController().deleteUserPhoto(null);\n    }\n else {\n      TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n      inputPhoto.id=photo.id;\n      inputPhoto.access_hash=photo.access_hash;\n      inputPhoto.file_reference=photo.file_reference;\n      if (inputPhoto.file_reference == null) {\n        inputPhoto.file_reference=new byte[0];\n      }\n      getMessagesController().deleteUserPhoto(inputPhoto);\n      getMessagesStorage().clearUserPhoto(user_id,photo.id);\n    }\n    if (avatarsViewPager.removePhotoAtIndex(position)) {\n      avatarsViewPager.setVisibility(View.GONE);\n      avatarImage.setForegroundAlpha(1f);\n      avatarContainer.setVisibility(View.VISIBLE);\n      doNotSetForeground=true;\n      final View view=layoutManager.findViewByPosition(0);\n      if (view != null) {\n        listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n      }\n    }\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog alertDialog=builder.create();\n  showDialog(alertDialog);\n  TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == add_photo) {\n  onWriteButtonClick();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1484,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 15852,
        "startLineNumber" : 1538,
        "startColumnNumber" : 23,
        "endLineNumber" : 1788,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (id == invite_to_group) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",2);\n  args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate((fragment1,dids,message,param) -> {\n    long did=dids.get(0);\n    Bundle args1=new Bundle();\n    args1.putBoolean(\"scrollToTopOnResume\",true);\n    args1.putInt(\"chat_id\",-(int)did);\n    if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n      return;\n    }\n    getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n    getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n    getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n    presentFragment(new ChatActivity(args1),true);\n    removeSelfFromStack();\n  }\n);\n  presentFragment(fragment);\n}\n else if (id == share) {\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == add_shortcut) {\n  try {\n    long did;\n    if (currentEncryptedChat != null) {\n      did=((long)currentEncryptedChat.id) << 32;\n    }\n else     if (user_id != 0) {\n      did=user_id;\n    }\n else     if (chat_id != 0) {\n      did=-chat_id;\n    }\n else {\n      return;\n    }\n    getMediaDataController().installShortcut(did);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == call_item || id == video_call_item) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user != null) {\n    VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n  }\n}\n else if (id == search_members) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n  args.putBoolean(\"open_search\",true);\n  ChatUsersActivity fragment=new ChatUsersActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == add_member) {\n  openAddMember();\n}\n else if (id == statistics) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putBoolean(\"is_megagroup\",chat.megagroup);\n  StatisticActivity fragment=new StatisticActivity(args);\n  presentFragment(fragment);\n}\n else if (id == view_discussion) {\n  openDiscussion();\n}\n else if (id == start_secret_chat) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n  builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n  builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n    creatingChat=true;\n    getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  showDialog(builder.create());\n}\n else if (id == gallery_menu_save) {\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n    getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n    return;\n  }\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n  if (f.exists()) {\n    MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n      if (getParentActivity() == null) {\n        return;\n      }\n      BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n    }\n);\n  }\n}\n else if (id == edit_name) {\n  presentFragment(new ChangeNameActivity());\n}\n else if (id == logout) {\n  presentFragment(new LogoutActivity());\n}\n else if (id == set_as_main) {\n  int position=avatarsViewPager.getRealPosition();\n  TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n  if (photo == null) {\n    return;\n  }\n  avatarsViewPager.startMovePhotoToBegin(position);\n  TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n  req.id=new TLRPC.TL_inputPhoto();\n  req.id.id=photo.id;\n  req.id.access_hash=photo.access_hash;\n  req.id.file_reference=photo.file_reference;\n  UserConfig userConfig=getUserConfig();\n  getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n    avatarsViewPager.finishSettingMainPhoto();\n    if (response instanceof TLRPC.TL_photos_photo) {\n      TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n      getMessagesController().putUsers(photos_photo.users,false);\n      TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n      if (photos_photo.photo instanceof TLRPC.TL_photo) {\n        avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n        if (user != null) {\n          user.photo.photo_id=photos_photo.photo.id;\n          userConfig.setCurrentUser(user);\n          userConfig.saveConfig(true);\n        }\n      }\n    }\n  }\n));\n  undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n  TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n  TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n  if (user != null) {\n    TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n    user.photo.photo_id=photo.id;\n    user.photo.photo_small=smallSize.location;\n    user.photo.photo_big=bigSize.location;\n    userConfig.setCurrentUser(user);\n    userConfig.saveConfig(true);\n    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n    updateProfileData();\n  }\n  avatarsViewPager.commitMoveToBegin();\n}\n else if (id == edit_avatar) {\n  int position=avatarsViewPager.getRealPosition();\n  ImageLocation location=avatarsViewPager.getImageLocation(position);\n  if (location == null) {\n    return;\n  }\n  File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n  boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  String thumb;\n  if (isVideo) {\n    ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n    thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n  }\n else {\n    thumb=null;\n  }\n  imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n}\n else if (id == delete_avatar) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n  }\n else {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n  }\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (avatarsViewPager.getRealCount() == 1) {\n      setForegroundImage(true);\n    }\n    if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n      getMessagesController().deleteUserPhoto(null);\n    }\n else {\n      TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n      inputPhoto.id=photo.id;\n      inputPhoto.access_hash=photo.access_hash;\n      inputPhoto.file_reference=photo.file_reference;\n      if (inputPhoto.file_reference == null) {\n        inputPhoto.file_reference=new byte[0];\n      }\n      getMessagesController().deleteUserPhoto(inputPhoto);\n      getMessagesStorage().clearUserPhoto(user_id,photo.id);\n    }\n    if (avatarsViewPager.removePhotoAtIndex(position)) {\n      avatarsViewPager.setVisibility(View.GONE);\n      avatarImage.setForegroundAlpha(1f);\n      avatarContainer.setVisibility(View.VISIBLE);\n      doNotSetForeground=true;\n      final View view=layoutManager.findViewByPosition(0);\n      if (view != null) {\n        listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n      }\n    }\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog alertDialog=builder.create();\n  showDialog(alertDialog);\n  TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == add_photo) {\n  onWriteButtonClick();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1660,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 16173,
        "startLineNumber" : 1532,
        "startColumnNumber" : 23,
        "endLineNumber" : 1788,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (id == edit_channel) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  ChatEditActivity fragment=new ChatEditActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == invite_to_group) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",2);\n  args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate((fragment1,dids,message,param) -> {\n    long did=dids.get(0);\n    Bundle args1=new Bundle();\n    args1.putBoolean(\"scrollToTopOnResume\",true);\n    args1.putInt(\"chat_id\",-(int)did);\n    if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n      return;\n    }\n    getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n    getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n    getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n    presentFragment(new ChatActivity(args1),true);\n    removeSelfFromStack();\n  }\n);\n  presentFragment(fragment);\n}\n else if (id == share) {\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == add_shortcut) {\n  try {\n    long did;\n    if (currentEncryptedChat != null) {\n      did=((long)currentEncryptedChat.id) << 32;\n    }\n else     if (user_id != 0) {\n      did=user_id;\n    }\n else     if (chat_id != 0) {\n      did=-chat_id;\n    }\n else {\n      return;\n    }\n    getMediaDataController().installShortcut(did);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == call_item || id == video_call_item) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user != null) {\n    VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n  }\n}\n else if (id == search_members) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n  args.putBoolean(\"open_search\",true);\n  ChatUsersActivity fragment=new ChatUsersActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == add_member) {\n  openAddMember();\n}\n else if (id == statistics) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putBoolean(\"is_megagroup\",chat.megagroup);\n  StatisticActivity fragment=new StatisticActivity(args);\n  presentFragment(fragment);\n}\n else if (id == view_discussion) {\n  openDiscussion();\n}\n else if (id == start_secret_chat) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n  builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n  builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n    creatingChat=true;\n    getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  showDialog(builder.create());\n}\n else if (id == gallery_menu_save) {\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n    getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n    return;\n  }\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n  if (f.exists()) {\n    MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n      if (getParentActivity() == null) {\n        return;\n      }\n      BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n    }\n);\n  }\n}\n else if (id == edit_name) {\n  presentFragment(new ChangeNameActivity());\n}\n else if (id == logout) {\n  presentFragment(new LogoutActivity());\n}\n else if (id == set_as_main) {\n  int position=avatarsViewPager.getRealPosition();\n  TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n  if (photo == null) {\n    return;\n  }\n  avatarsViewPager.startMovePhotoToBegin(position);\n  TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n  req.id=new TLRPC.TL_inputPhoto();\n  req.id.id=photo.id;\n  req.id.access_hash=photo.access_hash;\n  req.id.file_reference=photo.file_reference;\n  UserConfig userConfig=getUserConfig();\n  getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n    avatarsViewPager.finishSettingMainPhoto();\n    if (response instanceof TLRPC.TL_photos_photo) {\n      TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n      getMessagesController().putUsers(photos_photo.users,false);\n      TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n      if (photos_photo.photo instanceof TLRPC.TL_photo) {\n        avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n        if (user != null) {\n          user.photo.photo_id=photos_photo.photo.id;\n          userConfig.setCurrentUser(user);\n          userConfig.saveConfig(true);\n        }\n      }\n    }\n  }\n));\n  undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n  TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n  TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n  if (user != null) {\n    TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n    user.photo.photo_id=photo.id;\n    user.photo.photo_small=smallSize.location;\n    user.photo.photo_big=bigSize.location;\n    userConfig.setCurrentUser(user);\n    userConfig.saveConfig(true);\n    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n    updateProfileData();\n  }\n  avatarsViewPager.commitMoveToBegin();\n}\n else if (id == edit_avatar) {\n  int position=avatarsViewPager.getRealPosition();\n  ImageLocation location=avatarsViewPager.getImageLocation(position);\n  if (location == null) {\n    return;\n  }\n  File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n  boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  String thumb;\n  if (isVideo) {\n    ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n    thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n  }\n else {\n    thumb=null;\n  }\n  imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n}\n else if (id == delete_avatar) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n  }\n else {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n  }\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (avatarsViewPager.getRealCount() == 1) {\n      setForegroundImage(true);\n    }\n    if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n      getMessagesController().deleteUserPhoto(null);\n    }\n else {\n      TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n      inputPhoto.id=photo.id;\n      inputPhoto.access_hash=photo.access_hash;\n      inputPhoto.file_reference=photo.file_reference;\n      if (inputPhoto.file_reference == null) {\n        inputPhoto.file_reference=new byte[0];\n      }\n      getMessagesController().deleteUserPhoto(inputPhoto);\n      getMessagesStorage().clearUserPhoto(user_id,photo.id);\n    }\n    if (avatarsViewPager.removePhotoAtIndex(position)) {\n      avatarsViewPager.setVisibility(View.GONE);\n      avatarImage.setForegroundAlpha(1f);\n      avatarContainer.setVisibility(View.VISIBLE);\n      doNotSetForeground=true;\n      final View view=layoutManager.findViewByPosition(0);\n      if (view != null) {\n        listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n      }\n    }\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog alertDialog=builder.create();\n  showDialog(alertDialog);\n  TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == add_photo) {\n  onWriteButtonClick();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1697,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 16261,
        "startLineNumber" : 1530,
        "startColumnNumber" : 23,
        "endLineNumber" : 1788,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (id == leave_group) {\n  leaveChatPressed();\n}\n else if (id == edit_channel) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  ChatEditActivity fragment=new ChatEditActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == invite_to_group) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",2);\n  args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate((fragment1,dids,message,param) -> {\n    long did=dids.get(0);\n    Bundle args1=new Bundle();\n    args1.putBoolean(\"scrollToTopOnResume\",true);\n    args1.putInt(\"chat_id\",-(int)did);\n    if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n      return;\n    }\n    getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n    getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n    getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n    presentFragment(new ChatActivity(args1),true);\n    removeSelfFromStack();\n  }\n);\n  presentFragment(fragment);\n}\n else if (id == share) {\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == add_shortcut) {\n  try {\n    long did;\n    if (currentEncryptedChat != null) {\n      did=((long)currentEncryptedChat.id) << 32;\n    }\n else     if (user_id != 0) {\n      did=user_id;\n    }\n else     if (chat_id != 0) {\n      did=-chat_id;\n    }\n else {\n      return;\n    }\n    getMediaDataController().installShortcut(did);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == call_item || id == video_call_item) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user != null) {\n    VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n  }\n}\n else if (id == search_members) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n  args.putBoolean(\"open_search\",true);\n  ChatUsersActivity fragment=new ChatUsersActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == add_member) {\n  openAddMember();\n}\n else if (id == statistics) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putBoolean(\"is_megagroup\",chat.megagroup);\n  StatisticActivity fragment=new StatisticActivity(args);\n  presentFragment(fragment);\n}\n else if (id == view_discussion) {\n  openDiscussion();\n}\n else if (id == start_secret_chat) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n  builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n  builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n    creatingChat=true;\n    getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  showDialog(builder.create());\n}\n else if (id == gallery_menu_save) {\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n    getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n    return;\n  }\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n  if (f.exists()) {\n    MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n      if (getParentActivity() == null) {\n        return;\n      }\n      BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n    }\n);\n  }\n}\n else if (id == edit_name) {\n  presentFragment(new ChangeNameActivity());\n}\n else if (id == logout) {\n  presentFragment(new LogoutActivity());\n}\n else if (id == set_as_main) {\n  int position=avatarsViewPager.getRealPosition();\n  TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n  if (photo == null) {\n    return;\n  }\n  avatarsViewPager.startMovePhotoToBegin(position);\n  TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n  req.id=new TLRPC.TL_inputPhoto();\n  req.id.id=photo.id;\n  req.id.access_hash=photo.access_hash;\n  req.id.file_reference=photo.file_reference;\n  UserConfig userConfig=getUserConfig();\n  getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n    avatarsViewPager.finishSettingMainPhoto();\n    if (response instanceof TLRPC.TL_photos_photo) {\n      TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n      getMessagesController().putUsers(photos_photo.users,false);\n      TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n      if (photos_photo.photo instanceof TLRPC.TL_photo) {\n        avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n        if (user != null) {\n          user.photo.photo_id=photos_photo.photo.id;\n          userConfig.setCurrentUser(user);\n          userConfig.saveConfig(true);\n        }\n      }\n    }\n  }\n));\n  undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n  TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n  TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n  if (user != null) {\n    TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n    user.photo.photo_id=photo.id;\n    user.photo.photo_small=smallSize.location;\n    user.photo.photo_big=bigSize.location;\n    userConfig.setCurrentUser(user);\n    userConfig.saveConfig(true);\n    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n    updateProfileData();\n  }\n  avatarsViewPager.commitMoveToBegin();\n}\n else if (id == edit_avatar) {\n  int position=avatarsViewPager.getRealPosition();\n  ImageLocation location=avatarsViewPager.getImageLocation(position);\n  if (location == null) {\n    return;\n  }\n  File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n  boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  String thumb;\n  if (isVideo) {\n    ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n    thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n  }\n else {\n    thumb=null;\n  }\n  imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n}\n else if (id == delete_avatar) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n  }\n else {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n  }\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (avatarsViewPager.getRealCount() == 1) {\n      setForegroundImage(true);\n    }\n    if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n      getMessagesController().deleteUserPhoto(null);\n    }\n else {\n      TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n      inputPhoto.id=photo.id;\n      inputPhoto.access_hash=photo.access_hash;\n      inputPhoto.file_reference=photo.file_reference;\n      if (inputPhoto.file_reference == null) {\n        inputPhoto.file_reference=new byte[0];\n      }\n      getMessagesController().deleteUserPhoto(inputPhoto);\n      getMessagesStorage().clearUserPhoto(user_id,photo.id);\n    }\n    if (avatarsViewPager.removePhotoAtIndex(position)) {\n      avatarsViewPager.setVisibility(View.GONE);\n      avatarImage.setForegroundAlpha(1f);\n      avatarContainer.setVisibility(View.VISIBLE);\n      doNotSetForeground=true;\n      final View view=layoutManager.findViewByPosition(0);\n      if (view != null) {\n        listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n      }\n    }\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog alertDialog=builder.create();\n  showDialog(alertDialog);\n  TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == add_photo) {\n  onWriteButtonClick();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1705,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 17660,
        "startLineNumber" : 1510,
        "startColumnNumber" : 23,
        "endLineNumber" : 1788,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (id == delete_contact) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null || getParentActivity() == null) {\n    return;\n  }\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"DeleteContact\",R.string.DeleteContact));\n  builder.setMessage(LocaleController.getString(\"AreYouSureDeleteContact\",R.string.AreYouSureDeleteContact));\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    ArrayList<TLRPC.User> arrayList=new ArrayList<>();\n    arrayList.add(user);\n    getContactsController().deleteContact(arrayList);\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog dialog=builder.create();\n  showDialog(dialog);\n  TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == leave_group) {\n  leaveChatPressed();\n}\n else if (id == edit_channel) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  ChatEditActivity fragment=new ChatEditActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == invite_to_group) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",2);\n  args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate((fragment1,dids,message,param) -> {\n    long did=dids.get(0);\n    Bundle args1=new Bundle();\n    args1.putBoolean(\"scrollToTopOnResume\",true);\n    args1.putInt(\"chat_id\",-(int)did);\n    if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n      return;\n    }\n    getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n    getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n    getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n    presentFragment(new ChatActivity(args1),true);\n    removeSelfFromStack();\n  }\n);\n  presentFragment(fragment);\n}\n else if (id == share) {\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == add_shortcut) {\n  try {\n    long did;\n    if (currentEncryptedChat != null) {\n      did=((long)currentEncryptedChat.id) << 32;\n    }\n else     if (user_id != 0) {\n      did=user_id;\n    }\n else     if (chat_id != 0) {\n      did=-chat_id;\n    }\n else {\n      return;\n    }\n    getMediaDataController().installShortcut(did);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == call_item || id == video_call_item) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user != null) {\n    VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n  }\n}\n else if (id == search_members) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n  args.putBoolean(\"open_search\",true);\n  ChatUsersActivity fragment=new ChatUsersActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == add_member) {\n  openAddMember();\n}\n else if (id == statistics) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putBoolean(\"is_megagroup\",chat.megagroup);\n  StatisticActivity fragment=new StatisticActivity(args);\n  presentFragment(fragment);\n}\n else if (id == view_discussion) {\n  openDiscussion();\n}\n else if (id == start_secret_chat) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n  builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n  builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n    creatingChat=true;\n    getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  showDialog(builder.create());\n}\n else if (id == gallery_menu_save) {\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n    getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n    return;\n  }\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n  if (f.exists()) {\n    MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n      if (getParentActivity() == null) {\n        return;\n      }\n      BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n    }\n);\n  }\n}\n else if (id == edit_name) {\n  presentFragment(new ChangeNameActivity());\n}\n else if (id == logout) {\n  presentFragment(new LogoutActivity());\n}\n else if (id == set_as_main) {\n  int position=avatarsViewPager.getRealPosition();\n  TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n  if (photo == null) {\n    return;\n  }\n  avatarsViewPager.startMovePhotoToBegin(position);\n  TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n  req.id=new TLRPC.TL_inputPhoto();\n  req.id.id=photo.id;\n  req.id.access_hash=photo.access_hash;\n  req.id.file_reference=photo.file_reference;\n  UserConfig userConfig=getUserConfig();\n  getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n    avatarsViewPager.finishSettingMainPhoto();\n    if (response instanceof TLRPC.TL_photos_photo) {\n      TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n      getMessagesController().putUsers(photos_photo.users,false);\n      TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n      if (photos_photo.photo instanceof TLRPC.TL_photo) {\n        avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n        if (user != null) {\n          user.photo.photo_id=photos_photo.photo.id;\n          userConfig.setCurrentUser(user);\n          userConfig.saveConfig(true);\n        }\n      }\n    }\n  }\n));\n  undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n  TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n  TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n  if (user != null) {\n    TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n    user.photo.photo_id=photo.id;\n    user.photo.photo_small=smallSize.location;\n    user.photo.photo_big=bigSize.location;\n    userConfig.setCurrentUser(user);\n    userConfig.saveConfig(true);\n    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n    updateProfileData();\n  }\n  avatarsViewPager.commitMoveToBegin();\n}\n else if (id == edit_avatar) {\n  int position=avatarsViewPager.getRealPosition();\n  ImageLocation location=avatarsViewPager.getImageLocation(position);\n  if (location == null) {\n    return;\n  }\n  File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n  boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  String thumb;\n  if (isVideo) {\n    ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n    thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n  }\n else {\n    thumb=null;\n  }\n  imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n}\n else if (id == delete_avatar) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n  }\n else {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n  }\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (avatarsViewPager.getRealCount() == 1) {\n      setForegroundImage(true);\n    }\n    if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n      getMessagesController().deleteUserPhoto(null);\n    }\n else {\n      TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n      inputPhoto.id=photo.id;\n      inputPhoto.access_hash=photo.access_hash;\n      inputPhoto.file_reference=photo.file_reference;\n      if (inputPhoto.file_reference == null) {\n        inputPhoto.file_reference=new byte[0];\n      }\n      getMessagesController().deleteUserPhoto(inputPhoto);\n      getMessagesStorage().clearUserPhoto(user_id,photo.id);\n    }\n    if (avatarsViewPager.removePhotoAtIndex(position)) {\n      avatarsViewPager.setVisibility(View.GONE);\n      avatarImage.setForegroundAlpha(1f);\n      avatarContainer.setVisibility(View.VISIBLE);\n      doNotSetForeground=true;\n      final View view=layoutManager.findViewByPosition(0);\n      if (view != null) {\n        listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n      }\n    }\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog alertDialog=builder.create();\n  showDialog(alertDialog);\n  TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == add_photo) {\n  onWriteButtonClick();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1873,
      "astHeight" : 34
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 17877,
        "startLineNumber" : 1506,
        "startColumnNumber" : 23,
        "endLineNumber" : 1788,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (id == edit_contact) {\n  Bundle args=new Bundle();\n  args.putInt(\"user_id\",user_id);\n  presentFragment(new ContactAddActivity(args));\n}\n else if (id == delete_contact) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null || getParentActivity() == null) {\n    return;\n  }\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"DeleteContact\",R.string.DeleteContact));\n  builder.setMessage(LocaleController.getString(\"AreYouSureDeleteContact\",R.string.AreYouSureDeleteContact));\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    ArrayList<TLRPC.User> arrayList=new ArrayList<>();\n    arrayList.add(user);\n    getContactsController().deleteContact(arrayList);\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog dialog=builder.create();\n  showDialog(dialog);\n  TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == leave_group) {\n  leaveChatPressed();\n}\n else if (id == edit_channel) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  ChatEditActivity fragment=new ChatEditActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == invite_to_group) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",2);\n  args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate((fragment1,dids,message,param) -> {\n    long did=dids.get(0);\n    Bundle args1=new Bundle();\n    args1.putBoolean(\"scrollToTopOnResume\",true);\n    args1.putInt(\"chat_id\",-(int)did);\n    if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n      return;\n    }\n    getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n    getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n    getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n    presentFragment(new ChatActivity(args1),true);\n    removeSelfFromStack();\n  }\n);\n  presentFragment(fragment);\n}\n else if (id == share) {\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == add_shortcut) {\n  try {\n    long did;\n    if (currentEncryptedChat != null) {\n      did=((long)currentEncryptedChat.id) << 32;\n    }\n else     if (user_id != 0) {\n      did=user_id;\n    }\n else     if (chat_id != 0) {\n      did=-chat_id;\n    }\n else {\n      return;\n    }\n    getMediaDataController().installShortcut(did);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == call_item || id == video_call_item) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user != null) {\n    VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n  }\n}\n else if (id == search_members) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n  args.putBoolean(\"open_search\",true);\n  ChatUsersActivity fragment=new ChatUsersActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == add_member) {\n  openAddMember();\n}\n else if (id == statistics) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putBoolean(\"is_megagroup\",chat.megagroup);\n  StatisticActivity fragment=new StatisticActivity(args);\n  presentFragment(fragment);\n}\n else if (id == view_discussion) {\n  openDiscussion();\n}\n else if (id == start_secret_chat) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n  builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n  builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n    creatingChat=true;\n    getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  showDialog(builder.create());\n}\n else if (id == gallery_menu_save) {\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n    getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n    return;\n  }\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n  if (f.exists()) {\n    MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n      if (getParentActivity() == null) {\n        return;\n      }\n      BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n    }\n);\n  }\n}\n else if (id == edit_name) {\n  presentFragment(new ChangeNameActivity());\n}\n else if (id == logout) {\n  presentFragment(new LogoutActivity());\n}\n else if (id == set_as_main) {\n  int position=avatarsViewPager.getRealPosition();\n  TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n  if (photo == null) {\n    return;\n  }\n  avatarsViewPager.startMovePhotoToBegin(position);\n  TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n  req.id=new TLRPC.TL_inputPhoto();\n  req.id.id=photo.id;\n  req.id.access_hash=photo.access_hash;\n  req.id.file_reference=photo.file_reference;\n  UserConfig userConfig=getUserConfig();\n  getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n    avatarsViewPager.finishSettingMainPhoto();\n    if (response instanceof TLRPC.TL_photos_photo) {\n      TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n      getMessagesController().putUsers(photos_photo.users,false);\n      TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n      if (photos_photo.photo instanceof TLRPC.TL_photo) {\n        avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n        if (user != null) {\n          user.photo.photo_id=photos_photo.photo.id;\n          userConfig.setCurrentUser(user);\n          userConfig.saveConfig(true);\n        }\n      }\n    }\n  }\n));\n  undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n  TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n  TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n  if (user != null) {\n    TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n    user.photo.photo_id=photo.id;\n    user.photo.photo_small=smallSize.location;\n    user.photo.photo_big=bigSize.location;\n    userConfig.setCurrentUser(user);\n    userConfig.saveConfig(true);\n    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n    updateProfileData();\n  }\n  avatarsViewPager.commitMoveToBegin();\n}\n else if (id == edit_avatar) {\n  int position=avatarsViewPager.getRealPosition();\n  ImageLocation location=avatarsViewPager.getImageLocation(position);\n  if (location == null) {\n    return;\n  }\n  File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n  boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  String thumb;\n  if (isVideo) {\n    ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n    thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n  }\n else {\n    thumb=null;\n  }\n  imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n}\n else if (id == delete_avatar) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n  }\n else {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n  }\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (avatarsViewPager.getRealCount() == 1) {\n      setForegroundImage(true);\n    }\n    if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n      getMessagesController().deleteUserPhoto(null);\n    }\n else {\n      TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n      inputPhoto.id=photo.id;\n      inputPhoto.access_hash=photo.access_hash;\n      inputPhoto.file_reference=photo.file_reference;\n      if (inputPhoto.file_reference == null) {\n        inputPhoto.file_reference=new byte[0];\n      }\n      getMessagesController().deleteUserPhoto(inputPhoto);\n      getMessagesStorage().clearUserPhoto(user_id,photo.id);\n    }\n    if (avatarsViewPager.removePhotoAtIndex(position)) {\n      avatarsViewPager.setVisibility(View.GONE);\n      avatarImage.setForegroundAlpha(1f);\n      avatarContainer.setVisibility(View.VISIBLE);\n      doNotSetForeground=true;\n      final View view=layoutManager.findViewByPosition(0);\n      if (view != null) {\n        listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n      }\n    }\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog alertDialog=builder.create();\n  showDialog(alertDialog);\n  TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == add_photo) {\n  onWriteButtonClick();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1899,
      "astHeight" : 35
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 18551,
        "startLineNumber" : 1497,
        "startColumnNumber" : 23,
        "endLineNumber" : 1788,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (id == share_contact) {\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",3);\n  args.putString(\"selectAlertString\",LocaleController.getString(\"SendContactToText\",R.string.SendContactToText));\n  args.putString(\"selectAlertStringGroup\",LocaleController.getString(\"SendContactToGroupText\",R.string.SendContactToGroupText));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate(ProfileActivity.this);\n  presentFragment(fragment);\n}\n else if (id == edit_contact) {\n  Bundle args=new Bundle();\n  args.putInt(\"user_id\",user_id);\n  presentFragment(new ContactAddActivity(args));\n}\n else if (id == delete_contact) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null || getParentActivity() == null) {\n    return;\n  }\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"DeleteContact\",R.string.DeleteContact));\n  builder.setMessage(LocaleController.getString(\"AreYouSureDeleteContact\",R.string.AreYouSureDeleteContact));\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    ArrayList<TLRPC.User> arrayList=new ArrayList<>();\n    arrayList.add(user);\n    getContactsController().deleteContact(arrayList);\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog dialog=builder.create();\n  showDialog(dialog);\n  TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == leave_group) {\n  leaveChatPressed();\n}\n else if (id == edit_channel) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  ChatEditActivity fragment=new ChatEditActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == invite_to_group) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",2);\n  args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate((fragment1,dids,message,param) -> {\n    long did=dids.get(0);\n    Bundle args1=new Bundle();\n    args1.putBoolean(\"scrollToTopOnResume\",true);\n    args1.putInt(\"chat_id\",-(int)did);\n    if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n      return;\n    }\n    getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n    getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n    getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n    presentFragment(new ChatActivity(args1),true);\n    removeSelfFromStack();\n  }\n);\n  presentFragment(fragment);\n}\n else if (id == share) {\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == add_shortcut) {\n  try {\n    long did;\n    if (currentEncryptedChat != null) {\n      did=((long)currentEncryptedChat.id) << 32;\n    }\n else     if (user_id != 0) {\n      did=user_id;\n    }\n else     if (chat_id != 0) {\n      did=-chat_id;\n    }\n else {\n      return;\n    }\n    getMediaDataController().installShortcut(did);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == call_item || id == video_call_item) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user != null) {\n    VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n  }\n}\n else if (id == search_members) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n  args.putBoolean(\"open_search\",true);\n  ChatUsersActivity fragment=new ChatUsersActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == add_member) {\n  openAddMember();\n}\n else if (id == statistics) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putBoolean(\"is_megagroup\",chat.megagroup);\n  StatisticActivity fragment=new StatisticActivity(args);\n  presentFragment(fragment);\n}\n else if (id == view_discussion) {\n  openDiscussion();\n}\n else if (id == start_secret_chat) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n  builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n  builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n    creatingChat=true;\n    getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  showDialog(builder.create());\n}\n else if (id == gallery_menu_save) {\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n    getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n    return;\n  }\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n  if (f.exists()) {\n    MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n      if (getParentActivity() == null) {\n        return;\n      }\n      BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n    }\n);\n  }\n}\n else if (id == edit_name) {\n  presentFragment(new ChangeNameActivity());\n}\n else if (id == logout) {\n  presentFragment(new LogoutActivity());\n}\n else if (id == set_as_main) {\n  int position=avatarsViewPager.getRealPosition();\n  TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n  if (photo == null) {\n    return;\n  }\n  avatarsViewPager.startMovePhotoToBegin(position);\n  TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n  req.id=new TLRPC.TL_inputPhoto();\n  req.id.id=photo.id;\n  req.id.access_hash=photo.access_hash;\n  req.id.file_reference=photo.file_reference;\n  UserConfig userConfig=getUserConfig();\n  getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n    avatarsViewPager.finishSettingMainPhoto();\n    if (response instanceof TLRPC.TL_photos_photo) {\n      TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n      getMessagesController().putUsers(photos_photo.users,false);\n      TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n      if (photos_photo.photo instanceof TLRPC.TL_photo) {\n        avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n        if (user != null) {\n          user.photo.photo_id=photos_photo.photo.id;\n          userConfig.setCurrentUser(user);\n          userConfig.saveConfig(true);\n        }\n      }\n    }\n  }\n));\n  undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n  TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n  TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n  if (user != null) {\n    TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n    user.photo.photo_id=photo.id;\n    user.photo.photo_small=smallSize.location;\n    user.photo.photo_big=bigSize.location;\n    userConfig.setCurrentUser(user);\n    userConfig.saveConfig(true);\n    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n    updateProfileData();\n  }\n  avatarsViewPager.commitMoveToBegin();\n}\n else if (id == edit_avatar) {\n  int position=avatarsViewPager.getRealPosition();\n  ImageLocation location=avatarsViewPager.getImageLocation(position);\n  if (location == null) {\n    return;\n  }\n  File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n  boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  String thumb;\n  if (isVideo) {\n    ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n    thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n  }\n else {\n    thumb=null;\n  }\n  imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n}\n else if (id == delete_avatar) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n  }\n else {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n  }\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (avatarsViewPager.getRealCount() == 1) {\n      setForegroundImage(true);\n    }\n    if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n      getMessagesController().deleteUserPhoto(null);\n    }\n else {\n      TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n      inputPhoto.id=photo.id;\n      inputPhoto.access_hash=photo.access_hash;\n      inputPhoto.file_reference=photo.file_reference;\n      if (inputPhoto.file_reference == null) {\n        inputPhoto.file_reference=new byte[0];\n      }\n      getMessagesController().deleteUserPhoto(inputPhoto);\n      getMessagesStorage().clearUserPhoto(user_id,photo.id);\n    }\n    if (avatarsViewPager.removePhotoAtIndex(position)) {\n      avatarsViewPager.setVisibility(View.GONE);\n      avatarImage.setForegroundAlpha(1f);\n      avatarContainer.setVisibility(View.VISIBLE);\n      doNotSetForeground=true;\n      final View view=layoutManager.findViewByPosition(0);\n      if (view != null) {\n        listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n      }\n    }\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog alertDialog=builder.create();\n  showDialog(alertDialog);\n  TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == add_photo) {\n  onWriteButtonClick();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1971,
      "astHeight" : 36
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 18904,
        "startLineNumber" : 1491,
        "startColumnNumber" : 23,
        "endLineNumber" : 1788,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (id == add_contact) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  Bundle args=new Bundle();\n  args.putInt(\"user_id\",user.id);\n  args.putBoolean(\"addContact\",true);\n  presentFragment(new ContactAddActivity(args));\n}\n else if (id == share_contact) {\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",3);\n  args.putString(\"selectAlertString\",LocaleController.getString(\"SendContactToText\",R.string.SendContactToText));\n  args.putString(\"selectAlertStringGroup\",LocaleController.getString(\"SendContactToGroupText\",R.string.SendContactToGroupText));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate(ProfileActivity.this);\n  presentFragment(fragment);\n}\n else if (id == edit_contact) {\n  Bundle args=new Bundle();\n  args.putInt(\"user_id\",user_id);\n  presentFragment(new ContactAddActivity(args));\n}\n else if (id == delete_contact) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null || getParentActivity() == null) {\n    return;\n  }\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"DeleteContact\",R.string.DeleteContact));\n  builder.setMessage(LocaleController.getString(\"AreYouSureDeleteContact\",R.string.AreYouSureDeleteContact));\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    ArrayList<TLRPC.User> arrayList=new ArrayList<>();\n    arrayList.add(user);\n    getContactsController().deleteContact(arrayList);\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog dialog=builder.create();\n  showDialog(dialog);\n  TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == leave_group) {\n  leaveChatPressed();\n}\n else if (id == edit_channel) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  ChatEditActivity fragment=new ChatEditActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == invite_to_group) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",2);\n  args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate((fragment1,dids,message,param) -> {\n    long did=dids.get(0);\n    Bundle args1=new Bundle();\n    args1.putBoolean(\"scrollToTopOnResume\",true);\n    args1.putInt(\"chat_id\",-(int)did);\n    if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n      return;\n    }\n    getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n    getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n    getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n    presentFragment(new ChatActivity(args1),true);\n    removeSelfFromStack();\n  }\n);\n  presentFragment(fragment);\n}\n else if (id == share) {\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == add_shortcut) {\n  try {\n    long did;\n    if (currentEncryptedChat != null) {\n      did=((long)currentEncryptedChat.id) << 32;\n    }\n else     if (user_id != 0) {\n      did=user_id;\n    }\n else     if (chat_id != 0) {\n      did=-chat_id;\n    }\n else {\n      return;\n    }\n    getMediaDataController().installShortcut(did);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == call_item || id == video_call_item) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user != null) {\n    VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n  }\n}\n else if (id == search_members) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n  args.putBoolean(\"open_search\",true);\n  ChatUsersActivity fragment=new ChatUsersActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == add_member) {\n  openAddMember();\n}\n else if (id == statistics) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putBoolean(\"is_megagroup\",chat.megagroup);\n  StatisticActivity fragment=new StatisticActivity(args);\n  presentFragment(fragment);\n}\n else if (id == view_discussion) {\n  openDiscussion();\n}\n else if (id == start_secret_chat) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n  builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n  builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n    creatingChat=true;\n    getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  showDialog(builder.create());\n}\n else if (id == gallery_menu_save) {\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n    getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n    return;\n  }\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n  if (f.exists()) {\n    MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n      if (getParentActivity() == null) {\n        return;\n      }\n      BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n    }\n);\n  }\n}\n else if (id == edit_name) {\n  presentFragment(new ChangeNameActivity());\n}\n else if (id == logout) {\n  presentFragment(new LogoutActivity());\n}\n else if (id == set_as_main) {\n  int position=avatarsViewPager.getRealPosition();\n  TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n  if (photo == null) {\n    return;\n  }\n  avatarsViewPager.startMovePhotoToBegin(position);\n  TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n  req.id=new TLRPC.TL_inputPhoto();\n  req.id.id=photo.id;\n  req.id.access_hash=photo.access_hash;\n  req.id.file_reference=photo.file_reference;\n  UserConfig userConfig=getUserConfig();\n  getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n    avatarsViewPager.finishSettingMainPhoto();\n    if (response instanceof TLRPC.TL_photos_photo) {\n      TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n      getMessagesController().putUsers(photos_photo.users,false);\n      TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n      if (photos_photo.photo instanceof TLRPC.TL_photo) {\n        avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n        if (user != null) {\n          user.photo.photo_id=photos_photo.photo.id;\n          userConfig.setCurrentUser(user);\n          userConfig.saveConfig(true);\n        }\n      }\n    }\n  }\n));\n  undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n  TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n  TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n  if (user != null) {\n    TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n    user.photo.photo_id=photo.id;\n    user.photo.photo_small=smallSize.location;\n    user.photo.photo_big=bigSize.location;\n    userConfig.setCurrentUser(user);\n    userConfig.saveConfig(true);\n    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n    updateProfileData();\n  }\n  avatarsViewPager.commitMoveToBegin();\n}\n else if (id == edit_avatar) {\n  int position=avatarsViewPager.getRealPosition();\n  ImageLocation location=avatarsViewPager.getImageLocation(position);\n  if (location == null) {\n    return;\n  }\n  File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n  boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  String thumb;\n  if (isVideo) {\n    ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n    thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n  }\n else {\n    thumb=null;\n  }\n  imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n}\n else if (id == delete_avatar) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n  }\n else {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n  }\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (avatarsViewPager.getRealCount() == 1) {\n      setForegroundImage(true);\n    }\n    if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n      getMessagesController().deleteUserPhoto(null);\n    }\n else {\n      TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n      inputPhoto.id=photo.id;\n      inputPhoto.access_hash=photo.access_hash;\n      inputPhoto.file_reference=photo.file_reference;\n      if (inputPhoto.file_reference == null) {\n        inputPhoto.file_reference=new byte[0];\n      }\n      getMessagesController().deleteUserPhoto(inputPhoto);\n      getMessagesStorage().clearUserPhoto(user_id,photo.id);\n    }\n    if (avatarsViewPager.removePhotoAtIndex(position)) {\n      avatarsViewPager.setVisibility(View.GONE);\n      avatarImage.setForegroundAlpha(1f);\n      avatarContainer.setVisibility(View.VISIBLE);\n      doNotSetForeground=true;\n      final View view=layoutManager.findViewByPosition(0);\n      if (view != null) {\n        listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n      }\n    }\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog alertDialog=builder.create();\n  showDialog(alertDialog);\n  TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == add_photo) {\n  onWriteButtonClick();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 2017,
      "astHeight" : 37
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 22394,
        "startLineNumber" : 1444,
        "startColumnNumber" : 23,
        "endLineNumber" : 1788,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (id == block_contact) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  if (!isBot || MessagesController.isSupportUser(user)) {\n    if (userBlocked) {\n      getMessagesController().unblockPeer(user_id);\n      AlertsCreator.showSimpleToast(ProfileActivity.this,LocaleController.getString(\"UserUnblocked\",R.string.UserUnblocked));\n    }\n else {\n      if (reportSpam) {\n        AlertsCreator.showBlockReportSpamAlert(ProfileActivity.this,user_id,user,null,currentEncryptedChat,false,null,param -> {\n          if (param == 1) {\n            getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n            getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n            playProfileAnimation=0;\n            finishFragment();\n          }\n else {\n            getNotificationCenter().postNotificationName(NotificationCenter.peerSettingsDidLoad,(long)user_id);\n          }\n        }\n);\n      }\n else {\n        AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n        builder.setTitle(LocaleController.getString(\"BlockUser\",R.string.BlockUser));\n        builder.setMessage(AndroidUtilities.replaceTags(LocaleController.formatString(\"AreYouSureBlockContact2\",R.string.AreYouSureBlockContact2,ContactsController.formatName(user.first_name,user.last_name))));\n        builder.setPositiveButton(LocaleController.getString(\"BlockContact\",R.string.BlockContact),(dialogInterface,i) -> {\n          getMessagesController().blockPeer(user_id);\n          AlertsCreator.showSimpleToast(ProfileActivity.this,LocaleController.getString(\"UserBlocked\",R.string.UserBlocked));\n        }\n);\n        builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n        AlertDialog dialog=builder.create();\n        showDialog(dialog);\n        TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n        if (button != null) {\n          button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n        }\n      }\n    }\n  }\n else {\n    if (!userBlocked) {\n      getMessagesController().blockPeer(user_id);\n    }\n else {\n      getMessagesController().unblockPeer(user_id);\n      getSendMessagesHelper().sendMessage(\"/start\",user_id,null,null,null,false,null,null,null,true,0);\n      finishFragment();\n    }\n  }\n}\n else if (id == add_contact) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  Bundle args=new Bundle();\n  args.putInt(\"user_id\",user.id);\n  args.putBoolean(\"addContact\",true);\n  presentFragment(new ContactAddActivity(args));\n}\n else if (id == share_contact) {\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",3);\n  args.putString(\"selectAlertString\",LocaleController.getString(\"SendContactToText\",R.string.SendContactToText));\n  args.putString(\"selectAlertStringGroup\",LocaleController.getString(\"SendContactToGroupText\",R.string.SendContactToGroupText));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate(ProfileActivity.this);\n  presentFragment(fragment);\n}\n else if (id == edit_contact) {\n  Bundle args=new Bundle();\n  args.putInt(\"user_id\",user_id);\n  presentFragment(new ContactAddActivity(args));\n}\n else if (id == delete_contact) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null || getParentActivity() == null) {\n    return;\n  }\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"DeleteContact\",R.string.DeleteContact));\n  builder.setMessage(LocaleController.getString(\"AreYouSureDeleteContact\",R.string.AreYouSureDeleteContact));\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    ArrayList<TLRPC.User> arrayList=new ArrayList<>();\n    arrayList.add(user);\n    getContactsController().deleteContact(arrayList);\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog dialog=builder.create();\n  showDialog(dialog);\n  TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == leave_group) {\n  leaveChatPressed();\n}\n else if (id == edit_channel) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  ChatEditActivity fragment=new ChatEditActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == invite_to_group) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",2);\n  args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate((fragment1,dids,message,param) -> {\n    long did=dids.get(0);\n    Bundle args1=new Bundle();\n    args1.putBoolean(\"scrollToTopOnResume\",true);\n    args1.putInt(\"chat_id\",-(int)did);\n    if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n      return;\n    }\n    getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n    getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n    getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n    presentFragment(new ChatActivity(args1),true);\n    removeSelfFromStack();\n  }\n);\n  presentFragment(fragment);\n}\n else if (id == share) {\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == add_shortcut) {\n  try {\n    long did;\n    if (currentEncryptedChat != null) {\n      did=((long)currentEncryptedChat.id) << 32;\n    }\n else     if (user_id != 0) {\n      did=user_id;\n    }\n else     if (chat_id != 0) {\n      did=-chat_id;\n    }\n else {\n      return;\n    }\n    getMediaDataController().installShortcut(did);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == call_item || id == video_call_item) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user != null) {\n    VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n  }\n}\n else if (id == search_members) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n  args.putBoolean(\"open_search\",true);\n  ChatUsersActivity fragment=new ChatUsersActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == add_member) {\n  openAddMember();\n}\n else if (id == statistics) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putBoolean(\"is_megagroup\",chat.megagroup);\n  StatisticActivity fragment=new StatisticActivity(args);\n  presentFragment(fragment);\n}\n else if (id == view_discussion) {\n  openDiscussion();\n}\n else if (id == start_secret_chat) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n  builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n  builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n    creatingChat=true;\n    getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  showDialog(builder.create());\n}\n else if (id == gallery_menu_save) {\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n    getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n    return;\n  }\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n  if (f.exists()) {\n    MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n      if (getParentActivity() == null) {\n        return;\n      }\n      BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n    }\n);\n  }\n}\n else if (id == edit_name) {\n  presentFragment(new ChangeNameActivity());\n}\n else if (id == logout) {\n  presentFragment(new LogoutActivity());\n}\n else if (id == set_as_main) {\n  int position=avatarsViewPager.getRealPosition();\n  TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n  if (photo == null) {\n    return;\n  }\n  avatarsViewPager.startMovePhotoToBegin(position);\n  TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n  req.id=new TLRPC.TL_inputPhoto();\n  req.id.id=photo.id;\n  req.id.access_hash=photo.access_hash;\n  req.id.file_reference=photo.file_reference;\n  UserConfig userConfig=getUserConfig();\n  getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n    avatarsViewPager.finishSettingMainPhoto();\n    if (response instanceof TLRPC.TL_photos_photo) {\n      TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n      getMessagesController().putUsers(photos_photo.users,false);\n      TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n      if (photos_photo.photo instanceof TLRPC.TL_photo) {\n        avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n        if (user != null) {\n          user.photo.photo_id=photos_photo.photo.id;\n          userConfig.setCurrentUser(user);\n          userConfig.saveConfig(true);\n        }\n      }\n    }\n  }\n));\n  undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n  TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n  TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n  if (user != null) {\n    TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n    user.photo.photo_id=photo.id;\n    user.photo.photo_small=smallSize.location;\n    user.photo.photo_big=bigSize.location;\n    userConfig.setCurrentUser(user);\n    userConfig.saveConfig(true);\n    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n    updateProfileData();\n  }\n  avatarsViewPager.commitMoveToBegin();\n}\n else if (id == edit_avatar) {\n  int position=avatarsViewPager.getRealPosition();\n  ImageLocation location=avatarsViewPager.getImageLocation(position);\n  if (location == null) {\n    return;\n  }\n  File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n  boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  String thumb;\n  if (isVideo) {\n    ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n    thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n  }\n else {\n    thumb=null;\n  }\n  imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n}\n else if (id == delete_avatar) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n  }\n else {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n  }\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (avatarsViewPager.getRealCount() == 1) {\n      setForegroundImage(true);\n    }\n    if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n      getMessagesController().deleteUserPhoto(null);\n    }\n else {\n      TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n      inputPhoto.id=photo.id;\n      inputPhoto.access_hash=photo.access_hash;\n      inputPhoto.file_reference=photo.file_reference;\n      if (inputPhoto.file_reference == null) {\n        inputPhoto.file_reference=new byte[0];\n      }\n      getMessagesController().deleteUserPhoto(inputPhoto);\n      getMessagesStorage().clearUserPhoto(user_id,photo.id);\n    }\n    if (avatarsViewPager.removePhotoAtIndex(position)) {\n      avatarsViewPager.setVisibility(View.GONE);\n      avatarImage.setForegroundAlpha(1f);\n      avatarContainer.setVisibility(View.VISIBLE);\n      doNotSetForeground=true;\n      final View view=layoutManager.findViewByPosition(0);\n      if (view != null) {\n        listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n      }\n    }\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog alertDialog=builder.create();\n  showDialog(alertDialog);\n  TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == add_photo) {\n  onWriteButtonClick();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 2320,
      "astHeight" : 38
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22471,
        "startLineNumber" : 1442,
        "startColumnNumber" : 16,
        "endLineNumber" : 1788,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (id == -1) {\n  finishFragment();\n}\n else if (id == block_contact) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  if (!isBot || MessagesController.isSupportUser(user)) {\n    if (userBlocked) {\n      getMessagesController().unblockPeer(user_id);\n      AlertsCreator.showSimpleToast(ProfileActivity.this,LocaleController.getString(\"UserUnblocked\",R.string.UserUnblocked));\n    }\n else {\n      if (reportSpam) {\n        AlertsCreator.showBlockReportSpamAlert(ProfileActivity.this,user_id,user,null,currentEncryptedChat,false,null,param -> {\n          if (param == 1) {\n            getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n            getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n            playProfileAnimation=0;\n            finishFragment();\n          }\n else {\n            getNotificationCenter().postNotificationName(NotificationCenter.peerSettingsDidLoad,(long)user_id);\n          }\n        }\n);\n      }\n else {\n        AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n        builder.setTitle(LocaleController.getString(\"BlockUser\",R.string.BlockUser));\n        builder.setMessage(AndroidUtilities.replaceTags(LocaleController.formatString(\"AreYouSureBlockContact2\",R.string.AreYouSureBlockContact2,ContactsController.formatName(user.first_name,user.last_name))));\n        builder.setPositiveButton(LocaleController.getString(\"BlockContact\",R.string.BlockContact),(dialogInterface,i) -> {\n          getMessagesController().blockPeer(user_id);\n          AlertsCreator.showSimpleToast(ProfileActivity.this,LocaleController.getString(\"UserBlocked\",R.string.UserBlocked));\n        }\n);\n        builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n        AlertDialog dialog=builder.create();\n        showDialog(dialog);\n        TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n        if (button != null) {\n          button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n        }\n      }\n    }\n  }\n else {\n    if (!userBlocked) {\n      getMessagesController().blockPeer(user_id);\n    }\n else {\n      getMessagesController().unblockPeer(user_id);\n      getSendMessagesHelper().sendMessage(\"/start\",user_id,null,null,null,false,null,null,null,true,0);\n      finishFragment();\n    }\n  }\n}\n else if (id == add_contact) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  Bundle args=new Bundle();\n  args.putInt(\"user_id\",user.id);\n  args.putBoolean(\"addContact\",true);\n  presentFragment(new ContactAddActivity(args));\n}\n else if (id == share_contact) {\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",3);\n  args.putString(\"selectAlertString\",LocaleController.getString(\"SendContactToText\",R.string.SendContactToText));\n  args.putString(\"selectAlertStringGroup\",LocaleController.getString(\"SendContactToGroupText\",R.string.SendContactToGroupText));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate(ProfileActivity.this);\n  presentFragment(fragment);\n}\n else if (id == edit_contact) {\n  Bundle args=new Bundle();\n  args.putInt(\"user_id\",user_id);\n  presentFragment(new ContactAddActivity(args));\n}\n else if (id == delete_contact) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null || getParentActivity() == null) {\n    return;\n  }\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"DeleteContact\",R.string.DeleteContact));\n  builder.setMessage(LocaleController.getString(\"AreYouSureDeleteContact\",R.string.AreYouSureDeleteContact));\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    ArrayList<TLRPC.User> arrayList=new ArrayList<>();\n    arrayList.add(user);\n    getContactsController().deleteContact(arrayList);\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog dialog=builder.create();\n  showDialog(dialog);\n  TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == leave_group) {\n  leaveChatPressed();\n}\n else if (id == edit_channel) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  ChatEditActivity fragment=new ChatEditActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == invite_to_group) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",2);\n  args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate((fragment1,dids,message,param) -> {\n    long did=dids.get(0);\n    Bundle args1=new Bundle();\n    args1.putBoolean(\"scrollToTopOnResume\",true);\n    args1.putInt(\"chat_id\",-(int)did);\n    if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n      return;\n    }\n    getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n    getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n    getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n    presentFragment(new ChatActivity(args1),true);\n    removeSelfFromStack();\n  }\n);\n  presentFragment(fragment);\n}\n else if (id == share) {\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == add_shortcut) {\n  try {\n    long did;\n    if (currentEncryptedChat != null) {\n      did=((long)currentEncryptedChat.id) << 32;\n    }\n else     if (user_id != 0) {\n      did=user_id;\n    }\n else     if (chat_id != 0) {\n      did=-chat_id;\n    }\n else {\n      return;\n    }\n    getMediaDataController().installShortcut(did);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == call_item || id == video_call_item) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user != null) {\n    VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n  }\n}\n else if (id == search_members) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n  args.putBoolean(\"open_search\",true);\n  ChatUsersActivity fragment=new ChatUsersActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == add_member) {\n  openAddMember();\n}\n else if (id == statistics) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putBoolean(\"is_megagroup\",chat.megagroup);\n  StatisticActivity fragment=new StatisticActivity(args);\n  presentFragment(fragment);\n}\n else if (id == view_discussion) {\n  openDiscussion();\n}\n else if (id == start_secret_chat) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n  builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n  builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n    creatingChat=true;\n    getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  showDialog(builder.create());\n}\n else if (id == gallery_menu_save) {\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n    getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n    return;\n  }\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n  if (f.exists()) {\n    MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n      if (getParentActivity() == null) {\n        return;\n      }\n      BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n    }\n);\n  }\n}\n else if (id == edit_name) {\n  presentFragment(new ChangeNameActivity());\n}\n else if (id == logout) {\n  presentFragment(new LogoutActivity());\n}\n else if (id == set_as_main) {\n  int position=avatarsViewPager.getRealPosition();\n  TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n  if (photo == null) {\n    return;\n  }\n  avatarsViewPager.startMovePhotoToBegin(position);\n  TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n  req.id=new TLRPC.TL_inputPhoto();\n  req.id.id=photo.id;\n  req.id.access_hash=photo.access_hash;\n  req.id.file_reference=photo.file_reference;\n  UserConfig userConfig=getUserConfig();\n  getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n    avatarsViewPager.finishSettingMainPhoto();\n    if (response instanceof TLRPC.TL_photos_photo) {\n      TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n      getMessagesController().putUsers(photos_photo.users,false);\n      TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n      if (photos_photo.photo instanceof TLRPC.TL_photo) {\n        avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n        if (user != null) {\n          user.photo.photo_id=photos_photo.photo.id;\n          userConfig.setCurrentUser(user);\n          userConfig.saveConfig(true);\n        }\n      }\n    }\n  }\n));\n  undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n  TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n  TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n  if (user != null) {\n    TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n    user.photo.photo_id=photo.id;\n    user.photo.photo_small=smallSize.location;\n    user.photo.photo_big=bigSize.location;\n    userConfig.setCurrentUser(user);\n    userConfig.saveConfig(true);\n    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n    updateProfileData();\n  }\n  avatarsViewPager.commitMoveToBegin();\n}\n else if (id == edit_avatar) {\n  int position=avatarsViewPager.getRealPosition();\n  ImageLocation location=avatarsViewPager.getImageLocation(position);\n  if (location == null) {\n    return;\n  }\n  File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n  boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  String thumb;\n  if (isVideo) {\n    ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n    thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n  }\n else {\n    thumb=null;\n  }\n  imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n}\n else if (id == delete_avatar) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n  }\n else {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n  }\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (avatarsViewPager.getRealCount() == 1) {\n      setForegroundImage(true);\n    }\n    if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n      getMessagesController().deleteUserPhoto(null);\n    }\n else {\n      TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n      inputPhoto.id=photo.id;\n      inputPhoto.access_hash=photo.access_hash;\n      inputPhoto.file_reference=photo.file_reference;\n      if (inputPhoto.file_reference == null) {\n        inputPhoto.file_reference=new byte[0];\n      }\n      getMessagesController().deleteUserPhoto(inputPhoto);\n      getMessagesStorage().clearUserPhoto(user_id,photo.id);\n    }\n    if (avatarsViewPager.removePhotoAtIndex(position)) {\n      avatarsViewPager.setVisibility(View.GONE);\n      avatarImage.setForegroundAlpha(1f);\n      avatarContainer.setVisibility(View.VISIBLE);\n      doNotSetForeground=true;\n      final View view=layoutManager.findViewByPosition(0);\n      if (view != null) {\n        listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n      }\n    }\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog alertDialog=builder.create();\n  showDialog(alertDialog);\n  TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == add_photo) {\n  onWriteButtonClick();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 2329,
      "astHeight" : 39
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 22600,
        "startLineNumber" : 1438,
        "startColumnNumber" : 50,
        "endLineNumber" : 1789,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (id == -1) {\n    finishFragment();\n  }\n else   if (id == block_contact) {\n    TLRPC.User user=getMessagesController().getUser(user_id);\n    if (user == null) {\n      return;\n    }\n    if (!isBot || MessagesController.isSupportUser(user)) {\n      if (userBlocked) {\n        getMessagesController().unblockPeer(user_id);\n        AlertsCreator.showSimpleToast(ProfileActivity.this,LocaleController.getString(\"UserUnblocked\",R.string.UserUnblocked));\n      }\n else {\n        if (reportSpam) {\n          AlertsCreator.showBlockReportSpamAlert(ProfileActivity.this,user_id,user,null,currentEncryptedChat,false,null,param -> {\n            if (param == 1) {\n              getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n              getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n              playProfileAnimation=0;\n              finishFragment();\n            }\n else {\n              getNotificationCenter().postNotificationName(NotificationCenter.peerSettingsDidLoad,(long)user_id);\n            }\n          }\n);\n        }\n else {\n          AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n          builder.setTitle(LocaleController.getString(\"BlockUser\",R.string.BlockUser));\n          builder.setMessage(AndroidUtilities.replaceTags(LocaleController.formatString(\"AreYouSureBlockContact2\",R.string.AreYouSureBlockContact2,ContactsController.formatName(user.first_name,user.last_name))));\n          builder.setPositiveButton(LocaleController.getString(\"BlockContact\",R.string.BlockContact),(dialogInterface,i) -> {\n            getMessagesController().blockPeer(user_id);\n            AlertsCreator.showSimpleToast(ProfileActivity.this,LocaleController.getString(\"UserBlocked\",R.string.UserBlocked));\n          }\n);\n          builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n          AlertDialog dialog=builder.create();\n          showDialog(dialog);\n          TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n          if (button != null) {\n            button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n          }\n        }\n      }\n    }\n else {\n      if (!userBlocked) {\n        getMessagesController().blockPeer(user_id);\n      }\n else {\n        getMessagesController().unblockPeer(user_id);\n        getSendMessagesHelper().sendMessage(\"/start\",user_id,null,null,null,false,null,null,null,true,0);\n        finishFragment();\n      }\n    }\n  }\n else   if (id == add_contact) {\n    TLRPC.User user=getMessagesController().getUser(user_id);\n    Bundle args=new Bundle();\n    args.putInt(\"user_id\",user.id);\n    args.putBoolean(\"addContact\",true);\n    presentFragment(new ContactAddActivity(args));\n  }\n else   if (id == share_contact) {\n    Bundle args=new Bundle();\n    args.putBoolean(\"onlySelect\",true);\n    args.putInt(\"dialogsType\",3);\n    args.putString(\"selectAlertString\",LocaleController.getString(\"SendContactToText\",R.string.SendContactToText));\n    args.putString(\"selectAlertStringGroup\",LocaleController.getString(\"SendContactToGroupText\",R.string.SendContactToGroupText));\n    DialogsActivity fragment=new DialogsActivity(args);\n    fragment.setDelegate(ProfileActivity.this);\n    presentFragment(fragment);\n  }\n else   if (id == edit_contact) {\n    Bundle args=new Bundle();\n    args.putInt(\"user_id\",user_id);\n    presentFragment(new ContactAddActivity(args));\n  }\n else   if (id == delete_contact) {\n    final TLRPC.User user=getMessagesController().getUser(user_id);\n    if (user == null || getParentActivity() == null) {\n      return;\n    }\n    AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n    builder.setTitle(LocaleController.getString(\"DeleteContact\",R.string.DeleteContact));\n    builder.setMessage(LocaleController.getString(\"AreYouSureDeleteContact\",R.string.AreYouSureDeleteContact));\n    builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n      ArrayList<TLRPC.User> arrayList=new ArrayList<>();\n      arrayList.add(user);\n      getContactsController().deleteContact(arrayList);\n    }\n);\n    builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n    AlertDialog dialog=builder.create();\n    showDialog(dialog);\n    TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n    if (button != null) {\n      button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n    }\n  }\n else   if (id == leave_group) {\n    leaveChatPressed();\n  }\n else   if (id == edit_channel) {\n    Bundle args=new Bundle();\n    args.putInt(\"chat_id\",chat_id);\n    ChatEditActivity fragment=new ChatEditActivity(args);\n    fragment.setInfo(chatInfo);\n    presentFragment(fragment);\n  }\n else   if (id == invite_to_group) {\n    final TLRPC.User user=getMessagesController().getUser(user_id);\n    if (user == null) {\n      return;\n    }\n    Bundle args=new Bundle();\n    args.putBoolean(\"onlySelect\",true);\n    args.putInt(\"dialogsType\",2);\n    args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n    DialogsActivity fragment=new DialogsActivity(args);\n    fragment.setDelegate((fragment1,dids,message,param) -> {\n      long did=dids.get(0);\n      Bundle args1=new Bundle();\n      args1.putBoolean(\"scrollToTopOnResume\",true);\n      args1.putInt(\"chat_id\",-(int)did);\n      if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n        return;\n      }\n      getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n      getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n      getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n      presentFragment(new ChatActivity(args1),true);\n      removeSelfFromStack();\n    }\n);\n    presentFragment(fragment);\n  }\n else   if (id == share) {\n    try {\n      String text=null;\n      if (user_id != 0) {\n        TLRPC.User user=getMessagesController().getUser(user_id);\n        if (user == null) {\n          return;\n        }\n        if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n          text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n        }\n else {\n          text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n        }\n      }\n else       if (chat_id != 0) {\n        TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n        if (chat == null) {\n          return;\n        }\n        if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n          text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n        }\n else {\n          text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n        }\n      }\n      if (TextUtils.isEmpty(text)) {\n        return;\n      }\n      Intent intent=new Intent(Intent.ACTION_SEND);\n      intent.setType(\"text/plain\");\n      intent.putExtra(Intent.EXTRA_TEXT,text);\n      startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n    }\n catch (    Exception e) {\n      FileLog.e(e);\n    }\n  }\n else   if (id == add_shortcut) {\n    try {\n      long did;\n      if (currentEncryptedChat != null) {\n        did=((long)currentEncryptedChat.id) << 32;\n      }\n else       if (user_id != 0) {\n        did=user_id;\n      }\n else       if (chat_id != 0) {\n        did=-chat_id;\n      }\n else {\n        return;\n      }\n      getMediaDataController().installShortcut(did);\n    }\n catch (    Exception e) {\n      FileLog.e(e);\n    }\n  }\n else   if (id == call_item || id == video_call_item) {\n    TLRPC.User user=getMessagesController().getUser(user_id);\n    if (user != null) {\n      VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n    }\n  }\n else   if (id == search_members) {\n    Bundle args=new Bundle();\n    args.putInt(\"chat_id\",chat_id);\n    args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n    args.putBoolean(\"open_search\",true);\n    ChatUsersActivity fragment=new ChatUsersActivity(args);\n    fragment.setInfo(chatInfo);\n    presentFragment(fragment);\n  }\n else   if (id == add_member) {\n    openAddMember();\n  }\n else   if (id == statistics) {\n    TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n    Bundle args=new Bundle();\n    args.putInt(\"chat_id\",chat_id);\n    args.putBoolean(\"is_megagroup\",chat.megagroup);\n    StatisticActivity fragment=new StatisticActivity(args);\n    presentFragment(fragment);\n  }\n else   if (id == view_discussion) {\n    openDiscussion();\n  }\n else   if (id == start_secret_chat) {\n    AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n    builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n    builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n    builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n      creatingChat=true;\n      getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n    }\n);\n    builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n    showDialog(builder.create());\n  }\n else   if (id == gallery_menu_save) {\n    if (getParentActivity() == null) {\n      return;\n    }\n    if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n      getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n      return;\n    }\n    ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n    if (location == null) {\n      return;\n    }\n    final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n    File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n    if (f.exists()) {\n      MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n        if (getParentActivity() == null) {\n          return;\n        }\n        BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n      }\n);\n    }\n  }\n else   if (id == edit_name) {\n    presentFragment(new ChangeNameActivity());\n  }\n else   if (id == logout) {\n    presentFragment(new LogoutActivity());\n  }\n else   if (id == set_as_main) {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (photo == null) {\n      return;\n    }\n    avatarsViewPager.startMovePhotoToBegin(position);\n    TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n    req.id=new TLRPC.TL_inputPhoto();\n    req.id.id=photo.id;\n    req.id.access_hash=photo.access_hash;\n    req.id.file_reference=photo.file_reference;\n    UserConfig userConfig=getUserConfig();\n    getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n      avatarsViewPager.finishSettingMainPhoto();\n      if (response instanceof TLRPC.TL_photos_photo) {\n        TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n        getMessagesController().putUsers(photos_photo.users,false);\n        TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n        if (photos_photo.photo instanceof TLRPC.TL_photo) {\n          avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n          if (user != null) {\n            user.photo.photo_id=photos_photo.photo.id;\n            userConfig.setCurrentUser(user);\n            userConfig.saveConfig(true);\n          }\n        }\n      }\n    }\n));\n    undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n    TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n    TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n    if (user != null) {\n      TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n      user.photo.photo_id=photo.id;\n      user.photo.photo_small=smallSize.location;\n      user.photo.photo_big=bigSize.location;\n      userConfig.setCurrentUser(user);\n      userConfig.saveConfig(true);\n      NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n      updateProfileData();\n    }\n    avatarsViewPager.commitMoveToBegin();\n  }\n else   if (id == edit_avatar) {\n    int position=avatarsViewPager.getRealPosition();\n    ImageLocation location=avatarsViewPager.getImageLocation(position);\n    if (location == null) {\n      return;\n    }\n    File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n    boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n    String thumb;\n    if (isVideo) {\n      ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n      thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n    }\n else {\n      thumb=null;\n    }\n    imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n  }\n else   if (id == delete_avatar) {\n    AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n    ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n    if (location == null) {\n      return;\n    }\n    if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n      builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n      builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n    }\n else {\n      builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n      builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n    }\n    builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n      int position=avatarsViewPager.getRealPosition();\n      TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n      if (avatarsViewPager.getRealCount() == 1) {\n        setForegroundImage(true);\n      }\n      if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n        getMessagesController().deleteUserPhoto(null);\n      }\n else {\n        TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n        inputPhoto.id=photo.id;\n        inputPhoto.access_hash=photo.access_hash;\n        inputPhoto.file_reference=photo.file_reference;\n        if (inputPhoto.file_reference == null) {\n          inputPhoto.file_reference=new byte[0];\n        }\n        getMessagesController().deleteUserPhoto(inputPhoto);\n        getMessagesStorage().clearUserPhoto(user_id,photo.id);\n      }\n      if (avatarsViewPager.removePhotoAtIndex(position)) {\n        avatarsViewPager.setVisibility(View.GONE);\n        avatarImage.setForegroundAlpha(1f);\n        avatarContainer.setVisibility(View.VISIBLE);\n        doNotSetForeground=true;\n        final View view=layoutManager.findViewByPosition(0);\n        if (view != null) {\n          listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n        }\n      }\n    }\n);\n    builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n    AlertDialog alertDialog=builder.create();\n    showDialog(alertDialog);\n    TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n    if (button != null) {\n      button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n    }\n  }\n else   if (id == add_photo) {\n    onWriteButtonClick();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 2337,
      "astHeight" : 40
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 22660,
        "startLineNumber" : 1437,
        "startColumnNumber" : 12,
        "endLineNumber" : 1789,
        "endColumnNumber" : 13
      },
      "nodeContext" : "@Override public void onItemClick(final int id){\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (id == -1) {\n    finishFragment();\n  }\n else   if (id == block_contact) {\n    TLRPC.User user=getMessagesController().getUser(user_id);\n    if (user == null) {\n      return;\n    }\n    if (!isBot || MessagesController.isSupportUser(user)) {\n      if (userBlocked) {\n        getMessagesController().unblockPeer(user_id);\n        AlertsCreator.showSimpleToast(ProfileActivity.this,LocaleController.getString(\"UserUnblocked\",R.string.UserUnblocked));\n      }\n else {\n        if (reportSpam) {\n          AlertsCreator.showBlockReportSpamAlert(ProfileActivity.this,user_id,user,null,currentEncryptedChat,false,null,param -> {\n            if (param == 1) {\n              getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n              getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n              playProfileAnimation=0;\n              finishFragment();\n            }\n else {\n              getNotificationCenter().postNotificationName(NotificationCenter.peerSettingsDidLoad,(long)user_id);\n            }\n          }\n);\n        }\n else {\n          AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n          builder.setTitle(LocaleController.getString(\"BlockUser\",R.string.BlockUser));\n          builder.setMessage(AndroidUtilities.replaceTags(LocaleController.formatString(\"AreYouSureBlockContact2\",R.string.AreYouSureBlockContact2,ContactsController.formatName(user.first_name,user.last_name))));\n          builder.setPositiveButton(LocaleController.getString(\"BlockContact\",R.string.BlockContact),(dialogInterface,i) -> {\n            getMessagesController().blockPeer(user_id);\n            AlertsCreator.showSimpleToast(ProfileActivity.this,LocaleController.getString(\"UserBlocked\",R.string.UserBlocked));\n          }\n);\n          builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n          AlertDialog dialog=builder.create();\n          showDialog(dialog);\n          TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n          if (button != null) {\n            button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n          }\n        }\n      }\n    }\n else {\n      if (!userBlocked) {\n        getMessagesController().blockPeer(user_id);\n      }\n else {\n        getMessagesController().unblockPeer(user_id);\n        getSendMessagesHelper().sendMessage(\"/start\",user_id,null,null,null,false,null,null,null,true,0);\n        finishFragment();\n      }\n    }\n  }\n else   if (id == add_contact) {\n    TLRPC.User user=getMessagesController().getUser(user_id);\n    Bundle args=new Bundle();\n    args.putInt(\"user_id\",user.id);\n    args.putBoolean(\"addContact\",true);\n    presentFragment(new ContactAddActivity(args));\n  }\n else   if (id == share_contact) {\n    Bundle args=new Bundle();\n    args.putBoolean(\"onlySelect\",true);\n    args.putInt(\"dialogsType\",3);\n    args.putString(\"selectAlertString\",LocaleController.getString(\"SendContactToText\",R.string.SendContactToText));\n    args.putString(\"selectAlertStringGroup\",LocaleController.getString(\"SendContactToGroupText\",R.string.SendContactToGroupText));\n    DialogsActivity fragment=new DialogsActivity(args);\n    fragment.setDelegate(ProfileActivity.this);\n    presentFragment(fragment);\n  }\n else   if (id == edit_contact) {\n    Bundle args=new Bundle();\n    args.putInt(\"user_id\",user_id);\n    presentFragment(new ContactAddActivity(args));\n  }\n else   if (id == delete_contact) {\n    final TLRPC.User user=getMessagesController().getUser(user_id);\n    if (user == null || getParentActivity() == null) {\n      return;\n    }\n    AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n    builder.setTitle(LocaleController.getString(\"DeleteContact\",R.string.DeleteContact));\n    builder.setMessage(LocaleController.getString(\"AreYouSureDeleteContact\",R.string.AreYouSureDeleteContact));\n    builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n      ArrayList<TLRPC.User> arrayList=new ArrayList<>();\n      arrayList.add(user);\n      getContactsController().deleteContact(arrayList);\n    }\n);\n    builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n    AlertDialog dialog=builder.create();\n    showDialog(dialog);\n    TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n    if (button != null) {\n      button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n    }\n  }\n else   if (id == leave_group) {\n    leaveChatPressed();\n  }\n else   if (id == edit_channel) {\n    Bundle args=new Bundle();\n    args.putInt(\"chat_id\",chat_id);\n    ChatEditActivity fragment=new ChatEditActivity(args);\n    fragment.setInfo(chatInfo);\n    presentFragment(fragment);\n  }\n else   if (id == invite_to_group) {\n    final TLRPC.User user=getMessagesController().getUser(user_id);\n    if (user == null) {\n      return;\n    }\n    Bundle args=new Bundle();\n    args.putBoolean(\"onlySelect\",true);\n    args.putInt(\"dialogsType\",2);\n    args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n    DialogsActivity fragment=new DialogsActivity(args);\n    fragment.setDelegate((fragment1,dids,message,param) -> {\n      long did=dids.get(0);\n      Bundle args1=new Bundle();\n      args1.putBoolean(\"scrollToTopOnResume\",true);\n      args1.putInt(\"chat_id\",-(int)did);\n      if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n        return;\n      }\n      getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n      getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n      getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n      presentFragment(new ChatActivity(args1),true);\n      removeSelfFromStack();\n    }\n);\n    presentFragment(fragment);\n  }\n else   if (id == share) {\n    try {\n      String text=null;\n      if (user_id != 0) {\n        TLRPC.User user=getMessagesController().getUser(user_id);\n        if (user == null) {\n          return;\n        }\n        if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n          text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n        }\n else {\n          text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n        }\n      }\n else       if (chat_id != 0) {\n        TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n        if (chat == null) {\n          return;\n        }\n        if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n          text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n        }\n else {\n          text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n        }\n      }\n      if (TextUtils.isEmpty(text)) {\n        return;\n      }\n      Intent intent=new Intent(Intent.ACTION_SEND);\n      intent.setType(\"text/plain\");\n      intent.putExtra(Intent.EXTRA_TEXT,text);\n      startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n    }\n catch (    Exception e) {\n      FileLog.e(e);\n    }\n  }\n else   if (id == add_shortcut) {\n    try {\n      long did;\n      if (currentEncryptedChat != null) {\n        did=((long)currentEncryptedChat.id) << 32;\n      }\n else       if (user_id != 0) {\n        did=user_id;\n      }\n else       if (chat_id != 0) {\n        did=-chat_id;\n      }\n else {\n        return;\n      }\n      getMediaDataController().installShortcut(did);\n    }\n catch (    Exception e) {\n      FileLog.e(e);\n    }\n  }\n else   if (id == call_item || id == video_call_item) {\n    TLRPC.User user=getMessagesController().getUser(user_id);\n    if (user != null) {\n      VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n    }\n  }\n else   if (id == search_members) {\n    Bundle args=new Bundle();\n    args.putInt(\"chat_id\",chat_id);\n    args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n    args.putBoolean(\"open_search\",true);\n    ChatUsersActivity fragment=new ChatUsersActivity(args);\n    fragment.setInfo(chatInfo);\n    presentFragment(fragment);\n  }\n else   if (id == add_member) {\n    openAddMember();\n  }\n else   if (id == statistics) {\n    TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n    Bundle args=new Bundle();\n    args.putInt(\"chat_id\",chat_id);\n    args.putBoolean(\"is_megagroup\",chat.megagroup);\n    StatisticActivity fragment=new StatisticActivity(args);\n    presentFragment(fragment);\n  }\n else   if (id == view_discussion) {\n    openDiscussion();\n  }\n else   if (id == start_secret_chat) {\n    AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n    builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n    builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n    builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n      creatingChat=true;\n      getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n    }\n);\n    builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n    showDialog(builder.create());\n  }\n else   if (id == gallery_menu_save) {\n    if (getParentActivity() == null) {\n      return;\n    }\n    if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n      getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n      return;\n    }\n    ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n    if (location == null) {\n      return;\n    }\n    final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n    File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n    if (f.exists()) {\n      MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n        if (getParentActivity() == null) {\n          return;\n        }\n        BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n      }\n);\n    }\n  }\n else   if (id == edit_name) {\n    presentFragment(new ChangeNameActivity());\n  }\n else   if (id == logout) {\n    presentFragment(new LogoutActivity());\n  }\n else   if (id == set_as_main) {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (photo == null) {\n      return;\n    }\n    avatarsViewPager.startMovePhotoToBegin(position);\n    TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n    req.id=new TLRPC.TL_inputPhoto();\n    req.id.id=photo.id;\n    req.id.access_hash=photo.access_hash;\n    req.id.file_reference=photo.file_reference;\n    UserConfig userConfig=getUserConfig();\n    getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n      avatarsViewPager.finishSettingMainPhoto();\n      if (response instanceof TLRPC.TL_photos_photo) {\n        TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n        getMessagesController().putUsers(photos_photo.users,false);\n        TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n        if (photos_photo.photo instanceof TLRPC.TL_photo) {\n          avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n          if (user != null) {\n            user.photo.photo_id=photos_photo.photo.id;\n            userConfig.setCurrentUser(user);\n            userConfig.saveConfig(true);\n          }\n        }\n      }\n    }\n));\n    undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n    TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n    TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n    if (user != null) {\n      TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n      user.photo.photo_id=photo.id;\n      user.photo.photo_small=smallSize.location;\n      user.photo.photo_big=bigSize.location;\n      userConfig.setCurrentUser(user);\n      userConfig.saveConfig(true);\n      NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n      updateProfileData();\n    }\n    avatarsViewPager.commitMoveToBegin();\n  }\n else   if (id == edit_avatar) {\n    int position=avatarsViewPager.getRealPosition();\n    ImageLocation location=avatarsViewPager.getImageLocation(position);\n    if (location == null) {\n      return;\n    }\n    File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n    boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n    String thumb;\n    if (isVideo) {\n      ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n      thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n    }\n else {\n      thumb=null;\n    }\n    imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n  }\n else   if (id == delete_avatar) {\n    AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n    ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n    if (location == null) {\n      return;\n    }\n    if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n      builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n      builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n    }\n else {\n      builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n      builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n    }\n    builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n      int position=avatarsViewPager.getRealPosition();\n      TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n      if (avatarsViewPager.getRealCount() == 1) {\n        setForegroundImage(true);\n      }\n      if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n        getMessagesController().deleteUserPhoto(null);\n      }\n else {\n        TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n        inputPhoto.id=photo.id;\n        inputPhoto.access_hash=photo.access_hash;\n        inputPhoto.file_reference=photo.file_reference;\n        if (inputPhoto.file_reference == null) {\n          inputPhoto.file_reference=new byte[0];\n        }\n        getMessagesController().deleteUserPhoto(inputPhoto);\n        getMessagesStorage().clearUserPhoto(user_id,photo.id);\n      }\n      if (avatarsViewPager.removePhotoAtIndex(position)) {\n        avatarsViewPager.setVisibility(View.GONE);\n        avatarImage.setForegroundAlpha(1f);\n        avatarContainer.setVisibility(View.VISIBLE);\n        doNotSetForeground=true;\n        final View view=layoutManager.findViewByPosition(0);\n        if (view != null) {\n          listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n        }\n      }\n    }\n);\n    builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n    AlertDialog alertDialog=builder.create();\n    showDialog(alertDialog);\n    TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n    if (button != null) {\n      button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n    }\n  }\n else   if (id == add_photo) {\n    onWriteButtonClick();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 2347,
      "astHeight" : 41
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 1573,
        "startColumnNumber" : 32,
        "endLineNumber" : 1573,
        "endColumnNumber" : 144
      },
      "nodeContext" : "text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "String",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 1575,
      "startColumnNumber" : 39,
      "endLineNumber" : 1575,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 1575,
        "startColumnNumber" : 39,
        "endLineNumber" : 1575,
        "endColumnNumber" : 124
      },
      "nodeContext" : "String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 1575,
        "startColumnNumber" : 32,
        "endLineNumber" : 1575,
        "endColumnNumber" : 124
      },
      "nodeContext" : "text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 1575,
        "startColumnNumber" : 32,
        "endLineNumber" : 1575,
        "endColumnNumber" : 125
      },
      "nodeContext" : "text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 157,
        "startLineNumber" : 1574,
        "startColumnNumber" : 35,
        "endLineNumber" : 1576,
        "endColumnNumber" : 29
      },
      "nodeContext" : "{\n  text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 418,
        "startLineNumber" : 1572,
        "startColumnNumber" : 28,
        "endLineNumber" : 1576,
        "endColumnNumber" : 29
      },
      "nodeContext" : "if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n  text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n}\n else {\n  text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 53,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 680,
        "startLineNumber" : 1567,
        "startColumnNumber" : 42,
        "endLineNumber" : 1577,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n    text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n  }\n else {\n    text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 72,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1384,
        "startLineNumber" : 1567,
        "startColumnNumber" : 24,
        "endLineNumber" : 1587,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (user_id != 0) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n    text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n  }\n else {\n    text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n  }\n}\n else if (chat_id != 0) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  if (chat == null) {\n    return;\n  }\n  if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n    text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n  }\n else {\n    text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 148,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1927,
        "startLineNumber" : 1565,
        "startColumnNumber" : 24,
        "endLineNumber" : 1595,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  String text=null;\n  if (user_id != 0) {\n    TLRPC.User user=getMessagesController().getUser(user_id);\n    if (user == null) {\n      return;\n    }\n    if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n      text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n    }\n else {\n      text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n    }\n  }\n else   if (chat_id != 0) {\n    TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n    if (chat == null) {\n      return;\n    }\n    if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n      text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n    }\n else {\n      text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n    }\n  }\n  if (TextUtils.isEmpty(text)) {\n    return;\n  }\n  Intent intent=new Intent(Intent.ACTION_SEND);\n  intent.setType(\"text/plain\");\n  intent.putExtra(Intent.EXTRA_TEXT,text);\n  startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 203,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2013,
        "startLineNumber" : 1565,
        "startColumnNumber" : 20,
        "endLineNumber" : 1597,
        "endColumnNumber" : 21
      },
      "nodeContext" : "try {\n  String text=null;\n  if (user_id != 0) {\n    TLRPC.User user=getMessagesController().getUser(user_id);\n    if (user == null) {\n      return;\n    }\n    if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n      text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n    }\n else {\n      text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n    }\n  }\n else   if (chat_id != 0) {\n    TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n    if (chat == null) {\n      return;\n    }\n    if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n      text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n    }\n else {\n      text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n    }\n  }\n  if (TextUtils.isEmpty(text)) {\n    return;\n  }\n  Intent intent=new Intent(Intent.ACTION_SEND);\n  intent.setType(\"text/plain\");\n  intent.putExtra(Intent.EXTRA_TEXT,text);\n  startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n}\n catch (Exception e) {\n  FileLog.e(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 215,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2053,
        "startLineNumber" : 1564,
        "startColumnNumber" : 40,
        "endLineNumber" : 1598,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 216,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 14202,
        "startLineNumber" : 1564,
        "startColumnNumber" : 23,
        "endLineNumber" : 1788,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (id == share) {\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == add_shortcut) {\n  try {\n    long did;\n    if (currentEncryptedChat != null) {\n      did=((long)currentEncryptedChat.id) << 32;\n    }\n else     if (user_id != 0) {\n      did=user_id;\n    }\n else     if (chat_id != 0) {\n      did=-chat_id;\n    }\n else {\n      return;\n    }\n    getMediaDataController().installShortcut(did);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == call_item || id == video_call_item) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user != null) {\n    VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n  }\n}\n else if (id == search_members) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n  args.putBoolean(\"open_search\",true);\n  ChatUsersActivity fragment=new ChatUsersActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == add_member) {\n  openAddMember();\n}\n else if (id == statistics) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putBoolean(\"is_megagroup\",chat.megagroup);\n  StatisticActivity fragment=new StatisticActivity(args);\n  presentFragment(fragment);\n}\n else if (id == view_discussion) {\n  openDiscussion();\n}\n else if (id == start_secret_chat) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n  builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n  builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n    creatingChat=true;\n    getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  showDialog(builder.create());\n}\n else if (id == gallery_menu_save) {\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n    getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n    return;\n  }\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n  if (f.exists()) {\n    MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n      if (getParentActivity() == null) {\n        return;\n      }\n      BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n    }\n);\n  }\n}\n else if (id == edit_name) {\n  presentFragment(new ChangeNameActivity());\n}\n else if (id == logout) {\n  presentFragment(new LogoutActivity());\n}\n else if (id == set_as_main) {\n  int position=avatarsViewPager.getRealPosition();\n  TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n  if (photo == null) {\n    return;\n  }\n  avatarsViewPager.startMovePhotoToBegin(position);\n  TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n  req.id=new TLRPC.TL_inputPhoto();\n  req.id.id=photo.id;\n  req.id.access_hash=photo.access_hash;\n  req.id.file_reference=photo.file_reference;\n  UserConfig userConfig=getUserConfig();\n  getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n    avatarsViewPager.finishSettingMainPhoto();\n    if (response instanceof TLRPC.TL_photos_photo) {\n      TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n      getMessagesController().putUsers(photos_photo.users,false);\n      TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n      if (photos_photo.photo instanceof TLRPC.TL_photo) {\n        avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n        if (user != null) {\n          user.photo.photo_id=photos_photo.photo.id;\n          userConfig.setCurrentUser(user);\n          userConfig.saveConfig(true);\n        }\n      }\n    }\n  }\n));\n  undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n  TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n  TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n  if (user != null) {\n    TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n    user.photo.photo_id=photo.id;\n    user.photo.photo_small=smallSize.location;\n    user.photo.photo_big=bigSize.location;\n    userConfig.setCurrentUser(user);\n    userConfig.saveConfig(true);\n    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n    updateProfileData();\n  }\n  avatarsViewPager.commitMoveToBegin();\n}\n else if (id == edit_avatar) {\n  int position=avatarsViewPager.getRealPosition();\n  ImageLocation location=avatarsViewPager.getImageLocation(position);\n  if (location == null) {\n    return;\n  }\n  File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n  boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  String thumb;\n  if (isVideo) {\n    ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n    thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n  }\n else {\n    thumb=null;\n  }\n  imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n}\n else if (id == delete_avatar) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n  }\n else {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n  }\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (avatarsViewPager.getRealCount() == 1) {\n      setForegroundImage(true);\n    }\n    if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n      getMessagesController().deleteUserPhoto(null);\n    }\n else {\n      TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n      inputPhoto.id=photo.id;\n      inputPhoto.access_hash=photo.access_hash;\n      inputPhoto.file_reference=photo.file_reference;\n      if (inputPhoto.file_reference == null) {\n        inputPhoto.file_reference=new byte[0];\n      }\n      getMessagesController().deleteUserPhoto(inputPhoto);\n      getMessagesStorage().clearUserPhoto(user_id,photo.id);\n    }\n    if (avatarsViewPager.removePhotoAtIndex(position)) {\n      avatarsViewPager.setVisibility(View.GONE);\n      avatarImage.setForegroundAlpha(1f);\n      avatarContainer.setVisibility(View.VISIBLE);\n      doNotSetForeground=true;\n      final View view=layoutManager.findViewByPosition(0);\n      if (view != null) {\n        listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n      }\n    }\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog alertDialog=builder.create();\n  showDialog(alertDialog);\n  TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == add_photo) {\n  onWriteButtonClick();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1484,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 15852,
        "startLineNumber" : 1538,
        "startColumnNumber" : 23,
        "endLineNumber" : 1788,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (id == invite_to_group) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",2);\n  args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate((fragment1,dids,message,param) -> {\n    long did=dids.get(0);\n    Bundle args1=new Bundle();\n    args1.putBoolean(\"scrollToTopOnResume\",true);\n    args1.putInt(\"chat_id\",-(int)did);\n    if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n      return;\n    }\n    getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n    getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n    getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n    presentFragment(new ChatActivity(args1),true);\n    removeSelfFromStack();\n  }\n);\n  presentFragment(fragment);\n}\n else if (id == share) {\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == add_shortcut) {\n  try {\n    long did;\n    if (currentEncryptedChat != null) {\n      did=((long)currentEncryptedChat.id) << 32;\n    }\n else     if (user_id != 0) {\n      did=user_id;\n    }\n else     if (chat_id != 0) {\n      did=-chat_id;\n    }\n else {\n      return;\n    }\n    getMediaDataController().installShortcut(did);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == call_item || id == video_call_item) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user != null) {\n    VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n  }\n}\n else if (id == search_members) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n  args.putBoolean(\"open_search\",true);\n  ChatUsersActivity fragment=new ChatUsersActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == add_member) {\n  openAddMember();\n}\n else if (id == statistics) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putBoolean(\"is_megagroup\",chat.megagroup);\n  StatisticActivity fragment=new StatisticActivity(args);\n  presentFragment(fragment);\n}\n else if (id == view_discussion) {\n  openDiscussion();\n}\n else if (id == start_secret_chat) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n  builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n  builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n    creatingChat=true;\n    getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  showDialog(builder.create());\n}\n else if (id == gallery_menu_save) {\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n    getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n    return;\n  }\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n  if (f.exists()) {\n    MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n      if (getParentActivity() == null) {\n        return;\n      }\n      BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n    }\n);\n  }\n}\n else if (id == edit_name) {\n  presentFragment(new ChangeNameActivity());\n}\n else if (id == logout) {\n  presentFragment(new LogoutActivity());\n}\n else if (id == set_as_main) {\n  int position=avatarsViewPager.getRealPosition();\n  TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n  if (photo == null) {\n    return;\n  }\n  avatarsViewPager.startMovePhotoToBegin(position);\n  TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n  req.id=new TLRPC.TL_inputPhoto();\n  req.id.id=photo.id;\n  req.id.access_hash=photo.access_hash;\n  req.id.file_reference=photo.file_reference;\n  UserConfig userConfig=getUserConfig();\n  getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n    avatarsViewPager.finishSettingMainPhoto();\n    if (response instanceof TLRPC.TL_photos_photo) {\n      TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n      getMessagesController().putUsers(photos_photo.users,false);\n      TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n      if (photos_photo.photo instanceof TLRPC.TL_photo) {\n        avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n        if (user != null) {\n          user.photo.photo_id=photos_photo.photo.id;\n          userConfig.setCurrentUser(user);\n          userConfig.saveConfig(true);\n        }\n      }\n    }\n  }\n));\n  undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n  TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n  TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n  if (user != null) {\n    TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n    user.photo.photo_id=photo.id;\n    user.photo.photo_small=smallSize.location;\n    user.photo.photo_big=bigSize.location;\n    userConfig.setCurrentUser(user);\n    userConfig.saveConfig(true);\n    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n    updateProfileData();\n  }\n  avatarsViewPager.commitMoveToBegin();\n}\n else if (id == edit_avatar) {\n  int position=avatarsViewPager.getRealPosition();\n  ImageLocation location=avatarsViewPager.getImageLocation(position);\n  if (location == null) {\n    return;\n  }\n  File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n  boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  String thumb;\n  if (isVideo) {\n    ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n    thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n  }\n else {\n    thumb=null;\n  }\n  imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n}\n else if (id == delete_avatar) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n  }\n else {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n  }\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (avatarsViewPager.getRealCount() == 1) {\n      setForegroundImage(true);\n    }\n    if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n      getMessagesController().deleteUserPhoto(null);\n    }\n else {\n      TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n      inputPhoto.id=photo.id;\n      inputPhoto.access_hash=photo.access_hash;\n      inputPhoto.file_reference=photo.file_reference;\n      if (inputPhoto.file_reference == null) {\n        inputPhoto.file_reference=new byte[0];\n      }\n      getMessagesController().deleteUserPhoto(inputPhoto);\n      getMessagesStorage().clearUserPhoto(user_id,photo.id);\n    }\n    if (avatarsViewPager.removePhotoAtIndex(position)) {\n      avatarsViewPager.setVisibility(View.GONE);\n      avatarImage.setForegroundAlpha(1f);\n      avatarContainer.setVisibility(View.VISIBLE);\n      doNotSetForeground=true;\n      final View view=layoutManager.findViewByPosition(0);\n      if (view != null) {\n        listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n      }\n    }\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog alertDialog=builder.create();\n  showDialog(alertDialog);\n  TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == add_photo) {\n  onWriteButtonClick();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1660,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 16173,
        "startLineNumber" : 1532,
        "startColumnNumber" : 23,
        "endLineNumber" : 1788,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (id == edit_channel) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  ChatEditActivity fragment=new ChatEditActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == invite_to_group) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",2);\n  args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate((fragment1,dids,message,param) -> {\n    long did=dids.get(0);\n    Bundle args1=new Bundle();\n    args1.putBoolean(\"scrollToTopOnResume\",true);\n    args1.putInt(\"chat_id\",-(int)did);\n    if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n      return;\n    }\n    getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n    getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n    getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n    presentFragment(new ChatActivity(args1),true);\n    removeSelfFromStack();\n  }\n);\n  presentFragment(fragment);\n}\n else if (id == share) {\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == add_shortcut) {\n  try {\n    long did;\n    if (currentEncryptedChat != null) {\n      did=((long)currentEncryptedChat.id) << 32;\n    }\n else     if (user_id != 0) {\n      did=user_id;\n    }\n else     if (chat_id != 0) {\n      did=-chat_id;\n    }\n else {\n      return;\n    }\n    getMediaDataController().installShortcut(did);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == call_item || id == video_call_item) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user != null) {\n    VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n  }\n}\n else if (id == search_members) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n  args.putBoolean(\"open_search\",true);\n  ChatUsersActivity fragment=new ChatUsersActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == add_member) {\n  openAddMember();\n}\n else if (id == statistics) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putBoolean(\"is_megagroup\",chat.megagroup);\n  StatisticActivity fragment=new StatisticActivity(args);\n  presentFragment(fragment);\n}\n else if (id == view_discussion) {\n  openDiscussion();\n}\n else if (id == start_secret_chat) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n  builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n  builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n    creatingChat=true;\n    getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  showDialog(builder.create());\n}\n else if (id == gallery_menu_save) {\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n    getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n    return;\n  }\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n  if (f.exists()) {\n    MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n      if (getParentActivity() == null) {\n        return;\n      }\n      BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n    }\n);\n  }\n}\n else if (id == edit_name) {\n  presentFragment(new ChangeNameActivity());\n}\n else if (id == logout) {\n  presentFragment(new LogoutActivity());\n}\n else if (id == set_as_main) {\n  int position=avatarsViewPager.getRealPosition();\n  TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n  if (photo == null) {\n    return;\n  }\n  avatarsViewPager.startMovePhotoToBegin(position);\n  TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n  req.id=new TLRPC.TL_inputPhoto();\n  req.id.id=photo.id;\n  req.id.access_hash=photo.access_hash;\n  req.id.file_reference=photo.file_reference;\n  UserConfig userConfig=getUserConfig();\n  getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n    avatarsViewPager.finishSettingMainPhoto();\n    if (response instanceof TLRPC.TL_photos_photo) {\n      TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n      getMessagesController().putUsers(photos_photo.users,false);\n      TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n      if (photos_photo.photo instanceof TLRPC.TL_photo) {\n        avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n        if (user != null) {\n          user.photo.photo_id=photos_photo.photo.id;\n          userConfig.setCurrentUser(user);\n          userConfig.saveConfig(true);\n        }\n      }\n    }\n  }\n));\n  undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n  TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n  TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n  if (user != null) {\n    TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n    user.photo.photo_id=photo.id;\n    user.photo.photo_small=smallSize.location;\n    user.photo.photo_big=bigSize.location;\n    userConfig.setCurrentUser(user);\n    userConfig.saveConfig(true);\n    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n    updateProfileData();\n  }\n  avatarsViewPager.commitMoveToBegin();\n}\n else if (id == edit_avatar) {\n  int position=avatarsViewPager.getRealPosition();\n  ImageLocation location=avatarsViewPager.getImageLocation(position);\n  if (location == null) {\n    return;\n  }\n  File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n  boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  String thumb;\n  if (isVideo) {\n    ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n    thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n  }\n else {\n    thumb=null;\n  }\n  imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n}\n else if (id == delete_avatar) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n  }\n else {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n  }\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (avatarsViewPager.getRealCount() == 1) {\n      setForegroundImage(true);\n    }\n    if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n      getMessagesController().deleteUserPhoto(null);\n    }\n else {\n      TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n      inputPhoto.id=photo.id;\n      inputPhoto.access_hash=photo.access_hash;\n      inputPhoto.file_reference=photo.file_reference;\n      if (inputPhoto.file_reference == null) {\n        inputPhoto.file_reference=new byte[0];\n      }\n      getMessagesController().deleteUserPhoto(inputPhoto);\n      getMessagesStorage().clearUserPhoto(user_id,photo.id);\n    }\n    if (avatarsViewPager.removePhotoAtIndex(position)) {\n      avatarsViewPager.setVisibility(View.GONE);\n      avatarImage.setForegroundAlpha(1f);\n      avatarContainer.setVisibility(View.VISIBLE);\n      doNotSetForeground=true;\n      final View view=layoutManager.findViewByPosition(0);\n      if (view != null) {\n        listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n      }\n    }\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog alertDialog=builder.create();\n  showDialog(alertDialog);\n  TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == add_photo) {\n  onWriteButtonClick();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1697,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 16261,
        "startLineNumber" : 1530,
        "startColumnNumber" : 23,
        "endLineNumber" : 1788,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (id == leave_group) {\n  leaveChatPressed();\n}\n else if (id == edit_channel) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  ChatEditActivity fragment=new ChatEditActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == invite_to_group) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",2);\n  args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate((fragment1,dids,message,param) -> {\n    long did=dids.get(0);\n    Bundle args1=new Bundle();\n    args1.putBoolean(\"scrollToTopOnResume\",true);\n    args1.putInt(\"chat_id\",-(int)did);\n    if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n      return;\n    }\n    getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n    getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n    getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n    presentFragment(new ChatActivity(args1),true);\n    removeSelfFromStack();\n  }\n);\n  presentFragment(fragment);\n}\n else if (id == share) {\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == add_shortcut) {\n  try {\n    long did;\n    if (currentEncryptedChat != null) {\n      did=((long)currentEncryptedChat.id) << 32;\n    }\n else     if (user_id != 0) {\n      did=user_id;\n    }\n else     if (chat_id != 0) {\n      did=-chat_id;\n    }\n else {\n      return;\n    }\n    getMediaDataController().installShortcut(did);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == call_item || id == video_call_item) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user != null) {\n    VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n  }\n}\n else if (id == search_members) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n  args.putBoolean(\"open_search\",true);\n  ChatUsersActivity fragment=new ChatUsersActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == add_member) {\n  openAddMember();\n}\n else if (id == statistics) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putBoolean(\"is_megagroup\",chat.megagroup);\n  StatisticActivity fragment=new StatisticActivity(args);\n  presentFragment(fragment);\n}\n else if (id == view_discussion) {\n  openDiscussion();\n}\n else if (id == start_secret_chat) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n  builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n  builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n    creatingChat=true;\n    getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  showDialog(builder.create());\n}\n else if (id == gallery_menu_save) {\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n    getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n    return;\n  }\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n  if (f.exists()) {\n    MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n      if (getParentActivity() == null) {\n        return;\n      }\n      BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n    }\n);\n  }\n}\n else if (id == edit_name) {\n  presentFragment(new ChangeNameActivity());\n}\n else if (id == logout) {\n  presentFragment(new LogoutActivity());\n}\n else if (id == set_as_main) {\n  int position=avatarsViewPager.getRealPosition();\n  TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n  if (photo == null) {\n    return;\n  }\n  avatarsViewPager.startMovePhotoToBegin(position);\n  TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n  req.id=new TLRPC.TL_inputPhoto();\n  req.id.id=photo.id;\n  req.id.access_hash=photo.access_hash;\n  req.id.file_reference=photo.file_reference;\n  UserConfig userConfig=getUserConfig();\n  getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n    avatarsViewPager.finishSettingMainPhoto();\n    if (response instanceof TLRPC.TL_photos_photo) {\n      TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n      getMessagesController().putUsers(photos_photo.users,false);\n      TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n      if (photos_photo.photo instanceof TLRPC.TL_photo) {\n        avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n        if (user != null) {\n          user.photo.photo_id=photos_photo.photo.id;\n          userConfig.setCurrentUser(user);\n          userConfig.saveConfig(true);\n        }\n      }\n    }\n  }\n));\n  undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n  TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n  TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n  if (user != null) {\n    TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n    user.photo.photo_id=photo.id;\n    user.photo.photo_small=smallSize.location;\n    user.photo.photo_big=bigSize.location;\n    userConfig.setCurrentUser(user);\n    userConfig.saveConfig(true);\n    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n    updateProfileData();\n  }\n  avatarsViewPager.commitMoveToBegin();\n}\n else if (id == edit_avatar) {\n  int position=avatarsViewPager.getRealPosition();\n  ImageLocation location=avatarsViewPager.getImageLocation(position);\n  if (location == null) {\n    return;\n  }\n  File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n  boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  String thumb;\n  if (isVideo) {\n    ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n    thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n  }\n else {\n    thumb=null;\n  }\n  imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n}\n else if (id == delete_avatar) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n  }\n else {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n  }\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (avatarsViewPager.getRealCount() == 1) {\n      setForegroundImage(true);\n    }\n    if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n      getMessagesController().deleteUserPhoto(null);\n    }\n else {\n      TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n      inputPhoto.id=photo.id;\n      inputPhoto.access_hash=photo.access_hash;\n      inputPhoto.file_reference=photo.file_reference;\n      if (inputPhoto.file_reference == null) {\n        inputPhoto.file_reference=new byte[0];\n      }\n      getMessagesController().deleteUserPhoto(inputPhoto);\n      getMessagesStorage().clearUserPhoto(user_id,photo.id);\n    }\n    if (avatarsViewPager.removePhotoAtIndex(position)) {\n      avatarsViewPager.setVisibility(View.GONE);\n      avatarImage.setForegroundAlpha(1f);\n      avatarContainer.setVisibility(View.VISIBLE);\n      doNotSetForeground=true;\n      final View view=layoutManager.findViewByPosition(0);\n      if (view != null) {\n        listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n      }\n    }\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog alertDialog=builder.create();\n  showDialog(alertDialog);\n  TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == add_photo) {\n  onWriteButtonClick();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1705,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 17660,
        "startLineNumber" : 1510,
        "startColumnNumber" : 23,
        "endLineNumber" : 1788,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (id == delete_contact) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null || getParentActivity() == null) {\n    return;\n  }\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"DeleteContact\",R.string.DeleteContact));\n  builder.setMessage(LocaleController.getString(\"AreYouSureDeleteContact\",R.string.AreYouSureDeleteContact));\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    ArrayList<TLRPC.User> arrayList=new ArrayList<>();\n    arrayList.add(user);\n    getContactsController().deleteContact(arrayList);\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog dialog=builder.create();\n  showDialog(dialog);\n  TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == leave_group) {\n  leaveChatPressed();\n}\n else if (id == edit_channel) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  ChatEditActivity fragment=new ChatEditActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == invite_to_group) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",2);\n  args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate((fragment1,dids,message,param) -> {\n    long did=dids.get(0);\n    Bundle args1=new Bundle();\n    args1.putBoolean(\"scrollToTopOnResume\",true);\n    args1.putInt(\"chat_id\",-(int)did);\n    if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n      return;\n    }\n    getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n    getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n    getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n    presentFragment(new ChatActivity(args1),true);\n    removeSelfFromStack();\n  }\n);\n  presentFragment(fragment);\n}\n else if (id == share) {\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == add_shortcut) {\n  try {\n    long did;\n    if (currentEncryptedChat != null) {\n      did=((long)currentEncryptedChat.id) << 32;\n    }\n else     if (user_id != 0) {\n      did=user_id;\n    }\n else     if (chat_id != 0) {\n      did=-chat_id;\n    }\n else {\n      return;\n    }\n    getMediaDataController().installShortcut(did);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == call_item || id == video_call_item) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user != null) {\n    VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n  }\n}\n else if (id == search_members) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n  args.putBoolean(\"open_search\",true);\n  ChatUsersActivity fragment=new ChatUsersActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == add_member) {\n  openAddMember();\n}\n else if (id == statistics) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putBoolean(\"is_megagroup\",chat.megagroup);\n  StatisticActivity fragment=new StatisticActivity(args);\n  presentFragment(fragment);\n}\n else if (id == view_discussion) {\n  openDiscussion();\n}\n else if (id == start_secret_chat) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n  builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n  builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n    creatingChat=true;\n    getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  showDialog(builder.create());\n}\n else if (id == gallery_menu_save) {\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n    getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n    return;\n  }\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n  if (f.exists()) {\n    MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n      if (getParentActivity() == null) {\n        return;\n      }\n      BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n    }\n);\n  }\n}\n else if (id == edit_name) {\n  presentFragment(new ChangeNameActivity());\n}\n else if (id == logout) {\n  presentFragment(new LogoutActivity());\n}\n else if (id == set_as_main) {\n  int position=avatarsViewPager.getRealPosition();\n  TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n  if (photo == null) {\n    return;\n  }\n  avatarsViewPager.startMovePhotoToBegin(position);\n  TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n  req.id=new TLRPC.TL_inputPhoto();\n  req.id.id=photo.id;\n  req.id.access_hash=photo.access_hash;\n  req.id.file_reference=photo.file_reference;\n  UserConfig userConfig=getUserConfig();\n  getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n    avatarsViewPager.finishSettingMainPhoto();\n    if (response instanceof TLRPC.TL_photos_photo) {\n      TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n      getMessagesController().putUsers(photos_photo.users,false);\n      TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n      if (photos_photo.photo instanceof TLRPC.TL_photo) {\n        avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n        if (user != null) {\n          user.photo.photo_id=photos_photo.photo.id;\n          userConfig.setCurrentUser(user);\n          userConfig.saveConfig(true);\n        }\n      }\n    }\n  }\n));\n  undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n  TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n  TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n  if (user != null) {\n    TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n    user.photo.photo_id=photo.id;\n    user.photo.photo_small=smallSize.location;\n    user.photo.photo_big=bigSize.location;\n    userConfig.setCurrentUser(user);\n    userConfig.saveConfig(true);\n    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n    updateProfileData();\n  }\n  avatarsViewPager.commitMoveToBegin();\n}\n else if (id == edit_avatar) {\n  int position=avatarsViewPager.getRealPosition();\n  ImageLocation location=avatarsViewPager.getImageLocation(position);\n  if (location == null) {\n    return;\n  }\n  File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n  boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  String thumb;\n  if (isVideo) {\n    ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n    thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n  }\n else {\n    thumb=null;\n  }\n  imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n}\n else if (id == delete_avatar) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n  }\n else {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n  }\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (avatarsViewPager.getRealCount() == 1) {\n      setForegroundImage(true);\n    }\n    if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n      getMessagesController().deleteUserPhoto(null);\n    }\n else {\n      TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n      inputPhoto.id=photo.id;\n      inputPhoto.access_hash=photo.access_hash;\n      inputPhoto.file_reference=photo.file_reference;\n      if (inputPhoto.file_reference == null) {\n        inputPhoto.file_reference=new byte[0];\n      }\n      getMessagesController().deleteUserPhoto(inputPhoto);\n      getMessagesStorage().clearUserPhoto(user_id,photo.id);\n    }\n    if (avatarsViewPager.removePhotoAtIndex(position)) {\n      avatarsViewPager.setVisibility(View.GONE);\n      avatarImage.setForegroundAlpha(1f);\n      avatarContainer.setVisibility(View.VISIBLE);\n      doNotSetForeground=true;\n      final View view=layoutManager.findViewByPosition(0);\n      if (view != null) {\n        listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n      }\n    }\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog alertDialog=builder.create();\n  showDialog(alertDialog);\n  TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == add_photo) {\n  onWriteButtonClick();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1873,
      "astHeight" : 34
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 17877,
        "startLineNumber" : 1506,
        "startColumnNumber" : 23,
        "endLineNumber" : 1788,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (id == edit_contact) {\n  Bundle args=new Bundle();\n  args.putInt(\"user_id\",user_id);\n  presentFragment(new ContactAddActivity(args));\n}\n else if (id == delete_contact) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null || getParentActivity() == null) {\n    return;\n  }\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"DeleteContact\",R.string.DeleteContact));\n  builder.setMessage(LocaleController.getString(\"AreYouSureDeleteContact\",R.string.AreYouSureDeleteContact));\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    ArrayList<TLRPC.User> arrayList=new ArrayList<>();\n    arrayList.add(user);\n    getContactsController().deleteContact(arrayList);\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog dialog=builder.create();\n  showDialog(dialog);\n  TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == leave_group) {\n  leaveChatPressed();\n}\n else if (id == edit_channel) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  ChatEditActivity fragment=new ChatEditActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == invite_to_group) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",2);\n  args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate((fragment1,dids,message,param) -> {\n    long did=dids.get(0);\n    Bundle args1=new Bundle();\n    args1.putBoolean(\"scrollToTopOnResume\",true);\n    args1.putInt(\"chat_id\",-(int)did);\n    if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n      return;\n    }\n    getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n    getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n    getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n    presentFragment(new ChatActivity(args1),true);\n    removeSelfFromStack();\n  }\n);\n  presentFragment(fragment);\n}\n else if (id == share) {\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == add_shortcut) {\n  try {\n    long did;\n    if (currentEncryptedChat != null) {\n      did=((long)currentEncryptedChat.id) << 32;\n    }\n else     if (user_id != 0) {\n      did=user_id;\n    }\n else     if (chat_id != 0) {\n      did=-chat_id;\n    }\n else {\n      return;\n    }\n    getMediaDataController().installShortcut(did);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == call_item || id == video_call_item) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user != null) {\n    VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n  }\n}\n else if (id == search_members) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n  args.putBoolean(\"open_search\",true);\n  ChatUsersActivity fragment=new ChatUsersActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == add_member) {\n  openAddMember();\n}\n else if (id == statistics) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putBoolean(\"is_megagroup\",chat.megagroup);\n  StatisticActivity fragment=new StatisticActivity(args);\n  presentFragment(fragment);\n}\n else if (id == view_discussion) {\n  openDiscussion();\n}\n else if (id == start_secret_chat) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n  builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n  builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n    creatingChat=true;\n    getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  showDialog(builder.create());\n}\n else if (id == gallery_menu_save) {\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n    getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n    return;\n  }\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n  if (f.exists()) {\n    MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n      if (getParentActivity() == null) {\n        return;\n      }\n      BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n    }\n);\n  }\n}\n else if (id == edit_name) {\n  presentFragment(new ChangeNameActivity());\n}\n else if (id == logout) {\n  presentFragment(new LogoutActivity());\n}\n else if (id == set_as_main) {\n  int position=avatarsViewPager.getRealPosition();\n  TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n  if (photo == null) {\n    return;\n  }\n  avatarsViewPager.startMovePhotoToBegin(position);\n  TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n  req.id=new TLRPC.TL_inputPhoto();\n  req.id.id=photo.id;\n  req.id.access_hash=photo.access_hash;\n  req.id.file_reference=photo.file_reference;\n  UserConfig userConfig=getUserConfig();\n  getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n    avatarsViewPager.finishSettingMainPhoto();\n    if (response instanceof TLRPC.TL_photos_photo) {\n      TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n      getMessagesController().putUsers(photos_photo.users,false);\n      TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n      if (photos_photo.photo instanceof TLRPC.TL_photo) {\n        avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n        if (user != null) {\n          user.photo.photo_id=photos_photo.photo.id;\n          userConfig.setCurrentUser(user);\n          userConfig.saveConfig(true);\n        }\n      }\n    }\n  }\n));\n  undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n  TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n  TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n  if (user != null) {\n    TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n    user.photo.photo_id=photo.id;\n    user.photo.photo_small=smallSize.location;\n    user.photo.photo_big=bigSize.location;\n    userConfig.setCurrentUser(user);\n    userConfig.saveConfig(true);\n    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n    updateProfileData();\n  }\n  avatarsViewPager.commitMoveToBegin();\n}\n else if (id == edit_avatar) {\n  int position=avatarsViewPager.getRealPosition();\n  ImageLocation location=avatarsViewPager.getImageLocation(position);\n  if (location == null) {\n    return;\n  }\n  File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n  boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  String thumb;\n  if (isVideo) {\n    ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n    thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n  }\n else {\n    thumb=null;\n  }\n  imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n}\n else if (id == delete_avatar) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n  }\n else {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n  }\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (avatarsViewPager.getRealCount() == 1) {\n      setForegroundImage(true);\n    }\n    if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n      getMessagesController().deleteUserPhoto(null);\n    }\n else {\n      TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n      inputPhoto.id=photo.id;\n      inputPhoto.access_hash=photo.access_hash;\n      inputPhoto.file_reference=photo.file_reference;\n      if (inputPhoto.file_reference == null) {\n        inputPhoto.file_reference=new byte[0];\n      }\n      getMessagesController().deleteUserPhoto(inputPhoto);\n      getMessagesStorage().clearUserPhoto(user_id,photo.id);\n    }\n    if (avatarsViewPager.removePhotoAtIndex(position)) {\n      avatarsViewPager.setVisibility(View.GONE);\n      avatarImage.setForegroundAlpha(1f);\n      avatarContainer.setVisibility(View.VISIBLE);\n      doNotSetForeground=true;\n      final View view=layoutManager.findViewByPosition(0);\n      if (view != null) {\n        listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n      }\n    }\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog alertDialog=builder.create();\n  showDialog(alertDialog);\n  TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == add_photo) {\n  onWriteButtonClick();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1899,
      "astHeight" : 35
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 18551,
        "startLineNumber" : 1497,
        "startColumnNumber" : 23,
        "endLineNumber" : 1788,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (id == share_contact) {\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",3);\n  args.putString(\"selectAlertString\",LocaleController.getString(\"SendContactToText\",R.string.SendContactToText));\n  args.putString(\"selectAlertStringGroup\",LocaleController.getString(\"SendContactToGroupText\",R.string.SendContactToGroupText));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate(ProfileActivity.this);\n  presentFragment(fragment);\n}\n else if (id == edit_contact) {\n  Bundle args=new Bundle();\n  args.putInt(\"user_id\",user_id);\n  presentFragment(new ContactAddActivity(args));\n}\n else if (id == delete_contact) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null || getParentActivity() == null) {\n    return;\n  }\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"DeleteContact\",R.string.DeleteContact));\n  builder.setMessage(LocaleController.getString(\"AreYouSureDeleteContact\",R.string.AreYouSureDeleteContact));\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    ArrayList<TLRPC.User> arrayList=new ArrayList<>();\n    arrayList.add(user);\n    getContactsController().deleteContact(arrayList);\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog dialog=builder.create();\n  showDialog(dialog);\n  TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == leave_group) {\n  leaveChatPressed();\n}\n else if (id == edit_channel) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  ChatEditActivity fragment=new ChatEditActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == invite_to_group) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",2);\n  args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate((fragment1,dids,message,param) -> {\n    long did=dids.get(0);\n    Bundle args1=new Bundle();\n    args1.putBoolean(\"scrollToTopOnResume\",true);\n    args1.putInt(\"chat_id\",-(int)did);\n    if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n      return;\n    }\n    getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n    getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n    getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n    presentFragment(new ChatActivity(args1),true);\n    removeSelfFromStack();\n  }\n);\n  presentFragment(fragment);\n}\n else if (id == share) {\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == add_shortcut) {\n  try {\n    long did;\n    if (currentEncryptedChat != null) {\n      did=((long)currentEncryptedChat.id) << 32;\n    }\n else     if (user_id != 0) {\n      did=user_id;\n    }\n else     if (chat_id != 0) {\n      did=-chat_id;\n    }\n else {\n      return;\n    }\n    getMediaDataController().installShortcut(did);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == call_item || id == video_call_item) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user != null) {\n    VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n  }\n}\n else if (id == search_members) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n  args.putBoolean(\"open_search\",true);\n  ChatUsersActivity fragment=new ChatUsersActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == add_member) {\n  openAddMember();\n}\n else if (id == statistics) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putBoolean(\"is_megagroup\",chat.megagroup);\n  StatisticActivity fragment=new StatisticActivity(args);\n  presentFragment(fragment);\n}\n else if (id == view_discussion) {\n  openDiscussion();\n}\n else if (id == start_secret_chat) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n  builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n  builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n    creatingChat=true;\n    getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  showDialog(builder.create());\n}\n else if (id == gallery_menu_save) {\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n    getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n    return;\n  }\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n  if (f.exists()) {\n    MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n      if (getParentActivity() == null) {\n        return;\n      }\n      BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n    }\n);\n  }\n}\n else if (id == edit_name) {\n  presentFragment(new ChangeNameActivity());\n}\n else if (id == logout) {\n  presentFragment(new LogoutActivity());\n}\n else if (id == set_as_main) {\n  int position=avatarsViewPager.getRealPosition();\n  TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n  if (photo == null) {\n    return;\n  }\n  avatarsViewPager.startMovePhotoToBegin(position);\n  TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n  req.id=new TLRPC.TL_inputPhoto();\n  req.id.id=photo.id;\n  req.id.access_hash=photo.access_hash;\n  req.id.file_reference=photo.file_reference;\n  UserConfig userConfig=getUserConfig();\n  getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n    avatarsViewPager.finishSettingMainPhoto();\n    if (response instanceof TLRPC.TL_photos_photo) {\n      TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n      getMessagesController().putUsers(photos_photo.users,false);\n      TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n      if (photos_photo.photo instanceof TLRPC.TL_photo) {\n        avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n        if (user != null) {\n          user.photo.photo_id=photos_photo.photo.id;\n          userConfig.setCurrentUser(user);\n          userConfig.saveConfig(true);\n        }\n      }\n    }\n  }\n));\n  undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n  TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n  TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n  if (user != null) {\n    TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n    user.photo.photo_id=photo.id;\n    user.photo.photo_small=smallSize.location;\n    user.photo.photo_big=bigSize.location;\n    userConfig.setCurrentUser(user);\n    userConfig.saveConfig(true);\n    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n    updateProfileData();\n  }\n  avatarsViewPager.commitMoveToBegin();\n}\n else if (id == edit_avatar) {\n  int position=avatarsViewPager.getRealPosition();\n  ImageLocation location=avatarsViewPager.getImageLocation(position);\n  if (location == null) {\n    return;\n  }\n  File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n  boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  String thumb;\n  if (isVideo) {\n    ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n    thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n  }\n else {\n    thumb=null;\n  }\n  imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n}\n else if (id == delete_avatar) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n  }\n else {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n  }\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (avatarsViewPager.getRealCount() == 1) {\n      setForegroundImage(true);\n    }\n    if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n      getMessagesController().deleteUserPhoto(null);\n    }\n else {\n      TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n      inputPhoto.id=photo.id;\n      inputPhoto.access_hash=photo.access_hash;\n      inputPhoto.file_reference=photo.file_reference;\n      if (inputPhoto.file_reference == null) {\n        inputPhoto.file_reference=new byte[0];\n      }\n      getMessagesController().deleteUserPhoto(inputPhoto);\n      getMessagesStorage().clearUserPhoto(user_id,photo.id);\n    }\n    if (avatarsViewPager.removePhotoAtIndex(position)) {\n      avatarsViewPager.setVisibility(View.GONE);\n      avatarImage.setForegroundAlpha(1f);\n      avatarContainer.setVisibility(View.VISIBLE);\n      doNotSetForeground=true;\n      final View view=layoutManager.findViewByPosition(0);\n      if (view != null) {\n        listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n      }\n    }\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog alertDialog=builder.create();\n  showDialog(alertDialog);\n  TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == add_photo) {\n  onWriteButtonClick();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1971,
      "astHeight" : 36
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 18904,
        "startLineNumber" : 1491,
        "startColumnNumber" : 23,
        "endLineNumber" : 1788,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (id == add_contact) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  Bundle args=new Bundle();\n  args.putInt(\"user_id\",user.id);\n  args.putBoolean(\"addContact\",true);\n  presentFragment(new ContactAddActivity(args));\n}\n else if (id == share_contact) {\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",3);\n  args.putString(\"selectAlertString\",LocaleController.getString(\"SendContactToText\",R.string.SendContactToText));\n  args.putString(\"selectAlertStringGroup\",LocaleController.getString(\"SendContactToGroupText\",R.string.SendContactToGroupText));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate(ProfileActivity.this);\n  presentFragment(fragment);\n}\n else if (id == edit_contact) {\n  Bundle args=new Bundle();\n  args.putInt(\"user_id\",user_id);\n  presentFragment(new ContactAddActivity(args));\n}\n else if (id == delete_contact) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null || getParentActivity() == null) {\n    return;\n  }\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"DeleteContact\",R.string.DeleteContact));\n  builder.setMessage(LocaleController.getString(\"AreYouSureDeleteContact\",R.string.AreYouSureDeleteContact));\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    ArrayList<TLRPC.User> arrayList=new ArrayList<>();\n    arrayList.add(user);\n    getContactsController().deleteContact(arrayList);\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog dialog=builder.create();\n  showDialog(dialog);\n  TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == leave_group) {\n  leaveChatPressed();\n}\n else if (id == edit_channel) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  ChatEditActivity fragment=new ChatEditActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == invite_to_group) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",2);\n  args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate((fragment1,dids,message,param) -> {\n    long did=dids.get(0);\n    Bundle args1=new Bundle();\n    args1.putBoolean(\"scrollToTopOnResume\",true);\n    args1.putInt(\"chat_id\",-(int)did);\n    if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n      return;\n    }\n    getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n    getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n    getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n    presentFragment(new ChatActivity(args1),true);\n    removeSelfFromStack();\n  }\n);\n  presentFragment(fragment);\n}\n else if (id == share) {\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == add_shortcut) {\n  try {\n    long did;\n    if (currentEncryptedChat != null) {\n      did=((long)currentEncryptedChat.id) << 32;\n    }\n else     if (user_id != 0) {\n      did=user_id;\n    }\n else     if (chat_id != 0) {\n      did=-chat_id;\n    }\n else {\n      return;\n    }\n    getMediaDataController().installShortcut(did);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == call_item || id == video_call_item) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user != null) {\n    VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n  }\n}\n else if (id == search_members) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n  args.putBoolean(\"open_search\",true);\n  ChatUsersActivity fragment=new ChatUsersActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == add_member) {\n  openAddMember();\n}\n else if (id == statistics) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putBoolean(\"is_megagroup\",chat.megagroup);\n  StatisticActivity fragment=new StatisticActivity(args);\n  presentFragment(fragment);\n}\n else if (id == view_discussion) {\n  openDiscussion();\n}\n else if (id == start_secret_chat) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n  builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n  builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n    creatingChat=true;\n    getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  showDialog(builder.create());\n}\n else if (id == gallery_menu_save) {\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n    getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n    return;\n  }\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n  if (f.exists()) {\n    MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n      if (getParentActivity() == null) {\n        return;\n      }\n      BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n    }\n);\n  }\n}\n else if (id == edit_name) {\n  presentFragment(new ChangeNameActivity());\n}\n else if (id == logout) {\n  presentFragment(new LogoutActivity());\n}\n else if (id == set_as_main) {\n  int position=avatarsViewPager.getRealPosition();\n  TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n  if (photo == null) {\n    return;\n  }\n  avatarsViewPager.startMovePhotoToBegin(position);\n  TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n  req.id=new TLRPC.TL_inputPhoto();\n  req.id.id=photo.id;\n  req.id.access_hash=photo.access_hash;\n  req.id.file_reference=photo.file_reference;\n  UserConfig userConfig=getUserConfig();\n  getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n    avatarsViewPager.finishSettingMainPhoto();\n    if (response instanceof TLRPC.TL_photos_photo) {\n      TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n      getMessagesController().putUsers(photos_photo.users,false);\n      TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n      if (photos_photo.photo instanceof TLRPC.TL_photo) {\n        avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n        if (user != null) {\n          user.photo.photo_id=photos_photo.photo.id;\n          userConfig.setCurrentUser(user);\n          userConfig.saveConfig(true);\n        }\n      }\n    }\n  }\n));\n  undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n  TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n  TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n  if (user != null) {\n    TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n    user.photo.photo_id=photo.id;\n    user.photo.photo_small=smallSize.location;\n    user.photo.photo_big=bigSize.location;\n    userConfig.setCurrentUser(user);\n    userConfig.saveConfig(true);\n    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n    updateProfileData();\n  }\n  avatarsViewPager.commitMoveToBegin();\n}\n else if (id == edit_avatar) {\n  int position=avatarsViewPager.getRealPosition();\n  ImageLocation location=avatarsViewPager.getImageLocation(position);\n  if (location == null) {\n    return;\n  }\n  File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n  boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  String thumb;\n  if (isVideo) {\n    ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n    thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n  }\n else {\n    thumb=null;\n  }\n  imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n}\n else if (id == delete_avatar) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n  }\n else {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n  }\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (avatarsViewPager.getRealCount() == 1) {\n      setForegroundImage(true);\n    }\n    if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n      getMessagesController().deleteUserPhoto(null);\n    }\n else {\n      TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n      inputPhoto.id=photo.id;\n      inputPhoto.access_hash=photo.access_hash;\n      inputPhoto.file_reference=photo.file_reference;\n      if (inputPhoto.file_reference == null) {\n        inputPhoto.file_reference=new byte[0];\n      }\n      getMessagesController().deleteUserPhoto(inputPhoto);\n      getMessagesStorage().clearUserPhoto(user_id,photo.id);\n    }\n    if (avatarsViewPager.removePhotoAtIndex(position)) {\n      avatarsViewPager.setVisibility(View.GONE);\n      avatarImage.setForegroundAlpha(1f);\n      avatarContainer.setVisibility(View.VISIBLE);\n      doNotSetForeground=true;\n      final View view=layoutManager.findViewByPosition(0);\n      if (view != null) {\n        listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n      }\n    }\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog alertDialog=builder.create();\n  showDialog(alertDialog);\n  TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == add_photo) {\n  onWriteButtonClick();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 2017,
      "astHeight" : 37
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 22394,
        "startLineNumber" : 1444,
        "startColumnNumber" : 23,
        "endLineNumber" : 1788,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (id == block_contact) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  if (!isBot || MessagesController.isSupportUser(user)) {\n    if (userBlocked) {\n      getMessagesController().unblockPeer(user_id);\n      AlertsCreator.showSimpleToast(ProfileActivity.this,LocaleController.getString(\"UserUnblocked\",R.string.UserUnblocked));\n    }\n else {\n      if (reportSpam) {\n        AlertsCreator.showBlockReportSpamAlert(ProfileActivity.this,user_id,user,null,currentEncryptedChat,false,null,param -> {\n          if (param == 1) {\n            getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n            getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n            playProfileAnimation=0;\n            finishFragment();\n          }\n else {\n            getNotificationCenter().postNotificationName(NotificationCenter.peerSettingsDidLoad,(long)user_id);\n          }\n        }\n);\n      }\n else {\n        AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n        builder.setTitle(LocaleController.getString(\"BlockUser\",R.string.BlockUser));\n        builder.setMessage(AndroidUtilities.replaceTags(LocaleController.formatString(\"AreYouSureBlockContact2\",R.string.AreYouSureBlockContact2,ContactsController.formatName(user.first_name,user.last_name))));\n        builder.setPositiveButton(LocaleController.getString(\"BlockContact\",R.string.BlockContact),(dialogInterface,i) -> {\n          getMessagesController().blockPeer(user_id);\n          AlertsCreator.showSimpleToast(ProfileActivity.this,LocaleController.getString(\"UserBlocked\",R.string.UserBlocked));\n        }\n);\n        builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n        AlertDialog dialog=builder.create();\n        showDialog(dialog);\n        TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n        if (button != null) {\n          button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n        }\n      }\n    }\n  }\n else {\n    if (!userBlocked) {\n      getMessagesController().blockPeer(user_id);\n    }\n else {\n      getMessagesController().unblockPeer(user_id);\n      getSendMessagesHelper().sendMessage(\"/start\",user_id,null,null,null,false,null,null,null,true,0);\n      finishFragment();\n    }\n  }\n}\n else if (id == add_contact) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  Bundle args=new Bundle();\n  args.putInt(\"user_id\",user.id);\n  args.putBoolean(\"addContact\",true);\n  presentFragment(new ContactAddActivity(args));\n}\n else if (id == share_contact) {\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",3);\n  args.putString(\"selectAlertString\",LocaleController.getString(\"SendContactToText\",R.string.SendContactToText));\n  args.putString(\"selectAlertStringGroup\",LocaleController.getString(\"SendContactToGroupText\",R.string.SendContactToGroupText));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate(ProfileActivity.this);\n  presentFragment(fragment);\n}\n else if (id == edit_contact) {\n  Bundle args=new Bundle();\n  args.putInt(\"user_id\",user_id);\n  presentFragment(new ContactAddActivity(args));\n}\n else if (id == delete_contact) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null || getParentActivity() == null) {\n    return;\n  }\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"DeleteContact\",R.string.DeleteContact));\n  builder.setMessage(LocaleController.getString(\"AreYouSureDeleteContact\",R.string.AreYouSureDeleteContact));\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    ArrayList<TLRPC.User> arrayList=new ArrayList<>();\n    arrayList.add(user);\n    getContactsController().deleteContact(arrayList);\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog dialog=builder.create();\n  showDialog(dialog);\n  TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == leave_group) {\n  leaveChatPressed();\n}\n else if (id == edit_channel) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  ChatEditActivity fragment=new ChatEditActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == invite_to_group) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",2);\n  args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate((fragment1,dids,message,param) -> {\n    long did=dids.get(0);\n    Bundle args1=new Bundle();\n    args1.putBoolean(\"scrollToTopOnResume\",true);\n    args1.putInt(\"chat_id\",-(int)did);\n    if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n      return;\n    }\n    getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n    getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n    getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n    presentFragment(new ChatActivity(args1),true);\n    removeSelfFromStack();\n  }\n);\n  presentFragment(fragment);\n}\n else if (id == share) {\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == add_shortcut) {\n  try {\n    long did;\n    if (currentEncryptedChat != null) {\n      did=((long)currentEncryptedChat.id) << 32;\n    }\n else     if (user_id != 0) {\n      did=user_id;\n    }\n else     if (chat_id != 0) {\n      did=-chat_id;\n    }\n else {\n      return;\n    }\n    getMediaDataController().installShortcut(did);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == call_item || id == video_call_item) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user != null) {\n    VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n  }\n}\n else if (id == search_members) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n  args.putBoolean(\"open_search\",true);\n  ChatUsersActivity fragment=new ChatUsersActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == add_member) {\n  openAddMember();\n}\n else if (id == statistics) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putBoolean(\"is_megagroup\",chat.megagroup);\n  StatisticActivity fragment=new StatisticActivity(args);\n  presentFragment(fragment);\n}\n else if (id == view_discussion) {\n  openDiscussion();\n}\n else if (id == start_secret_chat) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n  builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n  builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n    creatingChat=true;\n    getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  showDialog(builder.create());\n}\n else if (id == gallery_menu_save) {\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n    getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n    return;\n  }\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n  if (f.exists()) {\n    MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n      if (getParentActivity() == null) {\n        return;\n      }\n      BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n    }\n);\n  }\n}\n else if (id == edit_name) {\n  presentFragment(new ChangeNameActivity());\n}\n else if (id == logout) {\n  presentFragment(new LogoutActivity());\n}\n else if (id == set_as_main) {\n  int position=avatarsViewPager.getRealPosition();\n  TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n  if (photo == null) {\n    return;\n  }\n  avatarsViewPager.startMovePhotoToBegin(position);\n  TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n  req.id=new TLRPC.TL_inputPhoto();\n  req.id.id=photo.id;\n  req.id.access_hash=photo.access_hash;\n  req.id.file_reference=photo.file_reference;\n  UserConfig userConfig=getUserConfig();\n  getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n    avatarsViewPager.finishSettingMainPhoto();\n    if (response instanceof TLRPC.TL_photos_photo) {\n      TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n      getMessagesController().putUsers(photos_photo.users,false);\n      TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n      if (photos_photo.photo instanceof TLRPC.TL_photo) {\n        avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n        if (user != null) {\n          user.photo.photo_id=photos_photo.photo.id;\n          userConfig.setCurrentUser(user);\n          userConfig.saveConfig(true);\n        }\n      }\n    }\n  }\n));\n  undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n  TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n  TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n  if (user != null) {\n    TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n    user.photo.photo_id=photo.id;\n    user.photo.photo_small=smallSize.location;\n    user.photo.photo_big=bigSize.location;\n    userConfig.setCurrentUser(user);\n    userConfig.saveConfig(true);\n    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n    updateProfileData();\n  }\n  avatarsViewPager.commitMoveToBegin();\n}\n else if (id == edit_avatar) {\n  int position=avatarsViewPager.getRealPosition();\n  ImageLocation location=avatarsViewPager.getImageLocation(position);\n  if (location == null) {\n    return;\n  }\n  File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n  boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  String thumb;\n  if (isVideo) {\n    ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n    thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n  }\n else {\n    thumb=null;\n  }\n  imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n}\n else if (id == delete_avatar) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n  }\n else {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n  }\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (avatarsViewPager.getRealCount() == 1) {\n      setForegroundImage(true);\n    }\n    if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n      getMessagesController().deleteUserPhoto(null);\n    }\n else {\n      TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n      inputPhoto.id=photo.id;\n      inputPhoto.access_hash=photo.access_hash;\n      inputPhoto.file_reference=photo.file_reference;\n      if (inputPhoto.file_reference == null) {\n        inputPhoto.file_reference=new byte[0];\n      }\n      getMessagesController().deleteUserPhoto(inputPhoto);\n      getMessagesStorage().clearUserPhoto(user_id,photo.id);\n    }\n    if (avatarsViewPager.removePhotoAtIndex(position)) {\n      avatarsViewPager.setVisibility(View.GONE);\n      avatarImage.setForegroundAlpha(1f);\n      avatarContainer.setVisibility(View.VISIBLE);\n      doNotSetForeground=true;\n      final View view=layoutManager.findViewByPosition(0);\n      if (view != null) {\n        listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n      }\n    }\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog alertDialog=builder.create();\n  showDialog(alertDialog);\n  TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == add_photo) {\n  onWriteButtonClick();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 2320,
      "astHeight" : 38
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22471,
        "startLineNumber" : 1442,
        "startColumnNumber" : 16,
        "endLineNumber" : 1788,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (id == -1) {\n  finishFragment();\n}\n else if (id == block_contact) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  if (!isBot || MessagesController.isSupportUser(user)) {\n    if (userBlocked) {\n      getMessagesController().unblockPeer(user_id);\n      AlertsCreator.showSimpleToast(ProfileActivity.this,LocaleController.getString(\"UserUnblocked\",R.string.UserUnblocked));\n    }\n else {\n      if (reportSpam) {\n        AlertsCreator.showBlockReportSpamAlert(ProfileActivity.this,user_id,user,null,currentEncryptedChat,false,null,param -> {\n          if (param == 1) {\n            getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n            getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n            playProfileAnimation=0;\n            finishFragment();\n          }\n else {\n            getNotificationCenter().postNotificationName(NotificationCenter.peerSettingsDidLoad,(long)user_id);\n          }\n        }\n);\n      }\n else {\n        AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n        builder.setTitle(LocaleController.getString(\"BlockUser\",R.string.BlockUser));\n        builder.setMessage(AndroidUtilities.replaceTags(LocaleController.formatString(\"AreYouSureBlockContact2\",R.string.AreYouSureBlockContact2,ContactsController.formatName(user.first_name,user.last_name))));\n        builder.setPositiveButton(LocaleController.getString(\"BlockContact\",R.string.BlockContact),(dialogInterface,i) -> {\n          getMessagesController().blockPeer(user_id);\n          AlertsCreator.showSimpleToast(ProfileActivity.this,LocaleController.getString(\"UserBlocked\",R.string.UserBlocked));\n        }\n);\n        builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n        AlertDialog dialog=builder.create();\n        showDialog(dialog);\n        TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n        if (button != null) {\n          button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n        }\n      }\n    }\n  }\n else {\n    if (!userBlocked) {\n      getMessagesController().blockPeer(user_id);\n    }\n else {\n      getMessagesController().unblockPeer(user_id);\n      getSendMessagesHelper().sendMessage(\"/start\",user_id,null,null,null,false,null,null,null,true,0);\n      finishFragment();\n    }\n  }\n}\n else if (id == add_contact) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  Bundle args=new Bundle();\n  args.putInt(\"user_id\",user.id);\n  args.putBoolean(\"addContact\",true);\n  presentFragment(new ContactAddActivity(args));\n}\n else if (id == share_contact) {\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",3);\n  args.putString(\"selectAlertString\",LocaleController.getString(\"SendContactToText\",R.string.SendContactToText));\n  args.putString(\"selectAlertStringGroup\",LocaleController.getString(\"SendContactToGroupText\",R.string.SendContactToGroupText));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate(ProfileActivity.this);\n  presentFragment(fragment);\n}\n else if (id == edit_contact) {\n  Bundle args=new Bundle();\n  args.putInt(\"user_id\",user_id);\n  presentFragment(new ContactAddActivity(args));\n}\n else if (id == delete_contact) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null || getParentActivity() == null) {\n    return;\n  }\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"DeleteContact\",R.string.DeleteContact));\n  builder.setMessage(LocaleController.getString(\"AreYouSureDeleteContact\",R.string.AreYouSureDeleteContact));\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    ArrayList<TLRPC.User> arrayList=new ArrayList<>();\n    arrayList.add(user);\n    getContactsController().deleteContact(arrayList);\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog dialog=builder.create();\n  showDialog(dialog);\n  TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == leave_group) {\n  leaveChatPressed();\n}\n else if (id == edit_channel) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  ChatEditActivity fragment=new ChatEditActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == invite_to_group) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",2);\n  args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate((fragment1,dids,message,param) -> {\n    long did=dids.get(0);\n    Bundle args1=new Bundle();\n    args1.putBoolean(\"scrollToTopOnResume\",true);\n    args1.putInt(\"chat_id\",-(int)did);\n    if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n      return;\n    }\n    getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n    getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n    getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n    presentFragment(new ChatActivity(args1),true);\n    removeSelfFromStack();\n  }\n);\n  presentFragment(fragment);\n}\n else if (id == share) {\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == add_shortcut) {\n  try {\n    long did;\n    if (currentEncryptedChat != null) {\n      did=((long)currentEncryptedChat.id) << 32;\n    }\n else     if (user_id != 0) {\n      did=user_id;\n    }\n else     if (chat_id != 0) {\n      did=-chat_id;\n    }\n else {\n      return;\n    }\n    getMediaDataController().installShortcut(did);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == call_item || id == video_call_item) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user != null) {\n    VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n  }\n}\n else if (id == search_members) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n  args.putBoolean(\"open_search\",true);\n  ChatUsersActivity fragment=new ChatUsersActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == add_member) {\n  openAddMember();\n}\n else if (id == statistics) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putBoolean(\"is_megagroup\",chat.megagroup);\n  StatisticActivity fragment=new StatisticActivity(args);\n  presentFragment(fragment);\n}\n else if (id == view_discussion) {\n  openDiscussion();\n}\n else if (id == start_secret_chat) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n  builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n  builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n    creatingChat=true;\n    getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  showDialog(builder.create());\n}\n else if (id == gallery_menu_save) {\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n    getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n    return;\n  }\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n  if (f.exists()) {\n    MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n      if (getParentActivity() == null) {\n        return;\n      }\n      BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n    }\n);\n  }\n}\n else if (id == edit_name) {\n  presentFragment(new ChangeNameActivity());\n}\n else if (id == logout) {\n  presentFragment(new LogoutActivity());\n}\n else if (id == set_as_main) {\n  int position=avatarsViewPager.getRealPosition();\n  TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n  if (photo == null) {\n    return;\n  }\n  avatarsViewPager.startMovePhotoToBegin(position);\n  TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n  req.id=new TLRPC.TL_inputPhoto();\n  req.id.id=photo.id;\n  req.id.access_hash=photo.access_hash;\n  req.id.file_reference=photo.file_reference;\n  UserConfig userConfig=getUserConfig();\n  getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n    avatarsViewPager.finishSettingMainPhoto();\n    if (response instanceof TLRPC.TL_photos_photo) {\n      TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n      getMessagesController().putUsers(photos_photo.users,false);\n      TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n      if (photos_photo.photo instanceof TLRPC.TL_photo) {\n        avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n        if (user != null) {\n          user.photo.photo_id=photos_photo.photo.id;\n          userConfig.setCurrentUser(user);\n          userConfig.saveConfig(true);\n        }\n      }\n    }\n  }\n));\n  undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n  TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n  TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n  if (user != null) {\n    TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n    user.photo.photo_id=photo.id;\n    user.photo.photo_small=smallSize.location;\n    user.photo.photo_big=bigSize.location;\n    userConfig.setCurrentUser(user);\n    userConfig.saveConfig(true);\n    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n    updateProfileData();\n  }\n  avatarsViewPager.commitMoveToBegin();\n}\n else if (id == edit_avatar) {\n  int position=avatarsViewPager.getRealPosition();\n  ImageLocation location=avatarsViewPager.getImageLocation(position);\n  if (location == null) {\n    return;\n  }\n  File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n  boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  String thumb;\n  if (isVideo) {\n    ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n    thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n  }\n else {\n    thumb=null;\n  }\n  imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n}\n else if (id == delete_avatar) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n  }\n else {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n  }\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (avatarsViewPager.getRealCount() == 1) {\n      setForegroundImage(true);\n    }\n    if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n      getMessagesController().deleteUserPhoto(null);\n    }\n else {\n      TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n      inputPhoto.id=photo.id;\n      inputPhoto.access_hash=photo.access_hash;\n      inputPhoto.file_reference=photo.file_reference;\n      if (inputPhoto.file_reference == null) {\n        inputPhoto.file_reference=new byte[0];\n      }\n      getMessagesController().deleteUserPhoto(inputPhoto);\n      getMessagesStorage().clearUserPhoto(user_id,photo.id);\n    }\n    if (avatarsViewPager.removePhotoAtIndex(position)) {\n      avatarsViewPager.setVisibility(View.GONE);\n      avatarImage.setForegroundAlpha(1f);\n      avatarContainer.setVisibility(View.VISIBLE);\n      doNotSetForeground=true;\n      final View view=layoutManager.findViewByPosition(0);\n      if (view != null) {\n        listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n      }\n    }\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog alertDialog=builder.create();\n  showDialog(alertDialog);\n  TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == add_photo) {\n  onWriteButtonClick();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 2329,
      "astHeight" : 39
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 22600,
        "startLineNumber" : 1438,
        "startColumnNumber" : 50,
        "endLineNumber" : 1789,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (id == -1) {\n    finishFragment();\n  }\n else   if (id == block_contact) {\n    TLRPC.User user=getMessagesController().getUser(user_id);\n    if (user == null) {\n      return;\n    }\n    if (!isBot || MessagesController.isSupportUser(user)) {\n      if (userBlocked) {\n        getMessagesController().unblockPeer(user_id);\n        AlertsCreator.showSimpleToast(ProfileActivity.this,LocaleController.getString(\"UserUnblocked\",R.string.UserUnblocked));\n      }\n else {\n        if (reportSpam) {\n          AlertsCreator.showBlockReportSpamAlert(ProfileActivity.this,user_id,user,null,currentEncryptedChat,false,null,param -> {\n            if (param == 1) {\n              getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n              getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n              playProfileAnimation=0;\n              finishFragment();\n            }\n else {\n              getNotificationCenter().postNotificationName(NotificationCenter.peerSettingsDidLoad,(long)user_id);\n            }\n          }\n);\n        }\n else {\n          AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n          builder.setTitle(LocaleController.getString(\"BlockUser\",R.string.BlockUser));\n          builder.setMessage(AndroidUtilities.replaceTags(LocaleController.formatString(\"AreYouSureBlockContact2\",R.string.AreYouSureBlockContact2,ContactsController.formatName(user.first_name,user.last_name))));\n          builder.setPositiveButton(LocaleController.getString(\"BlockContact\",R.string.BlockContact),(dialogInterface,i) -> {\n            getMessagesController().blockPeer(user_id);\n            AlertsCreator.showSimpleToast(ProfileActivity.this,LocaleController.getString(\"UserBlocked\",R.string.UserBlocked));\n          }\n);\n          builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n          AlertDialog dialog=builder.create();\n          showDialog(dialog);\n          TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n          if (button != null) {\n            button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n          }\n        }\n      }\n    }\n else {\n      if (!userBlocked) {\n        getMessagesController().blockPeer(user_id);\n      }\n else {\n        getMessagesController().unblockPeer(user_id);\n        getSendMessagesHelper().sendMessage(\"/start\",user_id,null,null,null,false,null,null,null,true,0);\n        finishFragment();\n      }\n    }\n  }\n else   if (id == add_contact) {\n    TLRPC.User user=getMessagesController().getUser(user_id);\n    Bundle args=new Bundle();\n    args.putInt(\"user_id\",user.id);\n    args.putBoolean(\"addContact\",true);\n    presentFragment(new ContactAddActivity(args));\n  }\n else   if (id == share_contact) {\n    Bundle args=new Bundle();\n    args.putBoolean(\"onlySelect\",true);\n    args.putInt(\"dialogsType\",3);\n    args.putString(\"selectAlertString\",LocaleController.getString(\"SendContactToText\",R.string.SendContactToText));\n    args.putString(\"selectAlertStringGroup\",LocaleController.getString(\"SendContactToGroupText\",R.string.SendContactToGroupText));\n    DialogsActivity fragment=new DialogsActivity(args);\n    fragment.setDelegate(ProfileActivity.this);\n    presentFragment(fragment);\n  }\n else   if (id == edit_contact) {\n    Bundle args=new Bundle();\n    args.putInt(\"user_id\",user_id);\n    presentFragment(new ContactAddActivity(args));\n  }\n else   if (id == delete_contact) {\n    final TLRPC.User user=getMessagesController().getUser(user_id);\n    if (user == null || getParentActivity() == null) {\n      return;\n    }\n    AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n    builder.setTitle(LocaleController.getString(\"DeleteContact\",R.string.DeleteContact));\n    builder.setMessage(LocaleController.getString(\"AreYouSureDeleteContact\",R.string.AreYouSureDeleteContact));\n    builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n      ArrayList<TLRPC.User> arrayList=new ArrayList<>();\n      arrayList.add(user);\n      getContactsController().deleteContact(arrayList);\n    }\n);\n    builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n    AlertDialog dialog=builder.create();\n    showDialog(dialog);\n    TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n    if (button != null) {\n      button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n    }\n  }\n else   if (id == leave_group) {\n    leaveChatPressed();\n  }\n else   if (id == edit_channel) {\n    Bundle args=new Bundle();\n    args.putInt(\"chat_id\",chat_id);\n    ChatEditActivity fragment=new ChatEditActivity(args);\n    fragment.setInfo(chatInfo);\n    presentFragment(fragment);\n  }\n else   if (id == invite_to_group) {\n    final TLRPC.User user=getMessagesController().getUser(user_id);\n    if (user == null) {\n      return;\n    }\n    Bundle args=new Bundle();\n    args.putBoolean(\"onlySelect\",true);\n    args.putInt(\"dialogsType\",2);\n    args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n    DialogsActivity fragment=new DialogsActivity(args);\n    fragment.setDelegate((fragment1,dids,message,param) -> {\n      long did=dids.get(0);\n      Bundle args1=new Bundle();\n      args1.putBoolean(\"scrollToTopOnResume\",true);\n      args1.putInt(\"chat_id\",-(int)did);\n      if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n        return;\n      }\n      getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n      getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n      getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n      presentFragment(new ChatActivity(args1),true);\n      removeSelfFromStack();\n    }\n);\n    presentFragment(fragment);\n  }\n else   if (id == share) {\n    try {\n      String text=null;\n      if (user_id != 0) {\n        TLRPC.User user=getMessagesController().getUser(user_id);\n        if (user == null) {\n          return;\n        }\n        if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n          text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n        }\n else {\n          text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n        }\n      }\n else       if (chat_id != 0) {\n        TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n        if (chat == null) {\n          return;\n        }\n        if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n          text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n        }\n else {\n          text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n        }\n      }\n      if (TextUtils.isEmpty(text)) {\n        return;\n      }\n      Intent intent=new Intent(Intent.ACTION_SEND);\n      intent.setType(\"text/plain\");\n      intent.putExtra(Intent.EXTRA_TEXT,text);\n      startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n    }\n catch (    Exception e) {\n      FileLog.e(e);\n    }\n  }\n else   if (id == add_shortcut) {\n    try {\n      long did;\n      if (currentEncryptedChat != null) {\n        did=((long)currentEncryptedChat.id) << 32;\n      }\n else       if (user_id != 0) {\n        did=user_id;\n      }\n else       if (chat_id != 0) {\n        did=-chat_id;\n      }\n else {\n        return;\n      }\n      getMediaDataController().installShortcut(did);\n    }\n catch (    Exception e) {\n      FileLog.e(e);\n    }\n  }\n else   if (id == call_item || id == video_call_item) {\n    TLRPC.User user=getMessagesController().getUser(user_id);\n    if (user != null) {\n      VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n    }\n  }\n else   if (id == search_members) {\n    Bundle args=new Bundle();\n    args.putInt(\"chat_id\",chat_id);\n    args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n    args.putBoolean(\"open_search\",true);\n    ChatUsersActivity fragment=new ChatUsersActivity(args);\n    fragment.setInfo(chatInfo);\n    presentFragment(fragment);\n  }\n else   if (id == add_member) {\n    openAddMember();\n  }\n else   if (id == statistics) {\n    TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n    Bundle args=new Bundle();\n    args.putInt(\"chat_id\",chat_id);\n    args.putBoolean(\"is_megagroup\",chat.megagroup);\n    StatisticActivity fragment=new StatisticActivity(args);\n    presentFragment(fragment);\n  }\n else   if (id == view_discussion) {\n    openDiscussion();\n  }\n else   if (id == start_secret_chat) {\n    AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n    builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n    builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n    builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n      creatingChat=true;\n      getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n    }\n);\n    builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n    showDialog(builder.create());\n  }\n else   if (id == gallery_menu_save) {\n    if (getParentActivity() == null) {\n      return;\n    }\n    if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n      getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n      return;\n    }\n    ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n    if (location == null) {\n      return;\n    }\n    final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n    File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n    if (f.exists()) {\n      MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n        if (getParentActivity() == null) {\n          return;\n        }\n        BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n      }\n);\n    }\n  }\n else   if (id == edit_name) {\n    presentFragment(new ChangeNameActivity());\n  }\n else   if (id == logout) {\n    presentFragment(new LogoutActivity());\n  }\n else   if (id == set_as_main) {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (photo == null) {\n      return;\n    }\n    avatarsViewPager.startMovePhotoToBegin(position);\n    TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n    req.id=new TLRPC.TL_inputPhoto();\n    req.id.id=photo.id;\n    req.id.access_hash=photo.access_hash;\n    req.id.file_reference=photo.file_reference;\n    UserConfig userConfig=getUserConfig();\n    getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n      avatarsViewPager.finishSettingMainPhoto();\n      if (response instanceof TLRPC.TL_photos_photo) {\n        TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n        getMessagesController().putUsers(photos_photo.users,false);\n        TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n        if (photos_photo.photo instanceof TLRPC.TL_photo) {\n          avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n          if (user != null) {\n            user.photo.photo_id=photos_photo.photo.id;\n            userConfig.setCurrentUser(user);\n            userConfig.saveConfig(true);\n          }\n        }\n      }\n    }\n));\n    undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n    TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n    TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n    if (user != null) {\n      TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n      user.photo.photo_id=photo.id;\n      user.photo.photo_small=smallSize.location;\n      user.photo.photo_big=bigSize.location;\n      userConfig.setCurrentUser(user);\n      userConfig.saveConfig(true);\n      NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n      updateProfileData();\n    }\n    avatarsViewPager.commitMoveToBegin();\n  }\n else   if (id == edit_avatar) {\n    int position=avatarsViewPager.getRealPosition();\n    ImageLocation location=avatarsViewPager.getImageLocation(position);\n    if (location == null) {\n      return;\n    }\n    File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n    boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n    String thumb;\n    if (isVideo) {\n      ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n      thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n    }\n else {\n      thumb=null;\n    }\n    imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n  }\n else   if (id == delete_avatar) {\n    AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n    ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n    if (location == null) {\n      return;\n    }\n    if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n      builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n      builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n    }\n else {\n      builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n      builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n    }\n    builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n      int position=avatarsViewPager.getRealPosition();\n      TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n      if (avatarsViewPager.getRealCount() == 1) {\n        setForegroundImage(true);\n      }\n      if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n        getMessagesController().deleteUserPhoto(null);\n      }\n else {\n        TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n        inputPhoto.id=photo.id;\n        inputPhoto.access_hash=photo.access_hash;\n        inputPhoto.file_reference=photo.file_reference;\n        if (inputPhoto.file_reference == null) {\n          inputPhoto.file_reference=new byte[0];\n        }\n        getMessagesController().deleteUserPhoto(inputPhoto);\n        getMessagesStorage().clearUserPhoto(user_id,photo.id);\n      }\n      if (avatarsViewPager.removePhotoAtIndex(position)) {\n        avatarsViewPager.setVisibility(View.GONE);\n        avatarImage.setForegroundAlpha(1f);\n        avatarContainer.setVisibility(View.VISIBLE);\n        doNotSetForeground=true;\n        final View view=layoutManager.findViewByPosition(0);\n        if (view != null) {\n          listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n        }\n      }\n    }\n);\n    builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n    AlertDialog alertDialog=builder.create();\n    showDialog(alertDialog);\n    TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n    if (button != null) {\n      button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n    }\n  }\n else   if (id == add_photo) {\n    onWriteButtonClick();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 2337,
      "astHeight" : 40
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 22660,
        "startLineNumber" : 1437,
        "startColumnNumber" : 12,
        "endLineNumber" : 1789,
        "endColumnNumber" : 13
      },
      "nodeContext" : "@Override public void onItemClick(final int id){\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (id == -1) {\n    finishFragment();\n  }\n else   if (id == block_contact) {\n    TLRPC.User user=getMessagesController().getUser(user_id);\n    if (user == null) {\n      return;\n    }\n    if (!isBot || MessagesController.isSupportUser(user)) {\n      if (userBlocked) {\n        getMessagesController().unblockPeer(user_id);\n        AlertsCreator.showSimpleToast(ProfileActivity.this,LocaleController.getString(\"UserUnblocked\",R.string.UserUnblocked));\n      }\n else {\n        if (reportSpam) {\n          AlertsCreator.showBlockReportSpamAlert(ProfileActivity.this,user_id,user,null,currentEncryptedChat,false,null,param -> {\n            if (param == 1) {\n              getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n              getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n              playProfileAnimation=0;\n              finishFragment();\n            }\n else {\n              getNotificationCenter().postNotificationName(NotificationCenter.peerSettingsDidLoad,(long)user_id);\n            }\n          }\n);\n        }\n else {\n          AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n          builder.setTitle(LocaleController.getString(\"BlockUser\",R.string.BlockUser));\n          builder.setMessage(AndroidUtilities.replaceTags(LocaleController.formatString(\"AreYouSureBlockContact2\",R.string.AreYouSureBlockContact2,ContactsController.formatName(user.first_name,user.last_name))));\n          builder.setPositiveButton(LocaleController.getString(\"BlockContact\",R.string.BlockContact),(dialogInterface,i) -> {\n            getMessagesController().blockPeer(user_id);\n            AlertsCreator.showSimpleToast(ProfileActivity.this,LocaleController.getString(\"UserBlocked\",R.string.UserBlocked));\n          }\n);\n          builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n          AlertDialog dialog=builder.create();\n          showDialog(dialog);\n          TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n          if (button != null) {\n            button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n          }\n        }\n      }\n    }\n else {\n      if (!userBlocked) {\n        getMessagesController().blockPeer(user_id);\n      }\n else {\n        getMessagesController().unblockPeer(user_id);\n        getSendMessagesHelper().sendMessage(\"/start\",user_id,null,null,null,false,null,null,null,true,0);\n        finishFragment();\n      }\n    }\n  }\n else   if (id == add_contact) {\n    TLRPC.User user=getMessagesController().getUser(user_id);\n    Bundle args=new Bundle();\n    args.putInt(\"user_id\",user.id);\n    args.putBoolean(\"addContact\",true);\n    presentFragment(new ContactAddActivity(args));\n  }\n else   if (id == share_contact) {\n    Bundle args=new Bundle();\n    args.putBoolean(\"onlySelect\",true);\n    args.putInt(\"dialogsType\",3);\n    args.putString(\"selectAlertString\",LocaleController.getString(\"SendContactToText\",R.string.SendContactToText));\n    args.putString(\"selectAlertStringGroup\",LocaleController.getString(\"SendContactToGroupText\",R.string.SendContactToGroupText));\n    DialogsActivity fragment=new DialogsActivity(args);\n    fragment.setDelegate(ProfileActivity.this);\n    presentFragment(fragment);\n  }\n else   if (id == edit_contact) {\n    Bundle args=new Bundle();\n    args.putInt(\"user_id\",user_id);\n    presentFragment(new ContactAddActivity(args));\n  }\n else   if (id == delete_contact) {\n    final TLRPC.User user=getMessagesController().getUser(user_id);\n    if (user == null || getParentActivity() == null) {\n      return;\n    }\n    AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n    builder.setTitle(LocaleController.getString(\"DeleteContact\",R.string.DeleteContact));\n    builder.setMessage(LocaleController.getString(\"AreYouSureDeleteContact\",R.string.AreYouSureDeleteContact));\n    builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n      ArrayList<TLRPC.User> arrayList=new ArrayList<>();\n      arrayList.add(user);\n      getContactsController().deleteContact(arrayList);\n    }\n);\n    builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n    AlertDialog dialog=builder.create();\n    showDialog(dialog);\n    TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n    if (button != null) {\n      button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n    }\n  }\n else   if (id == leave_group) {\n    leaveChatPressed();\n  }\n else   if (id == edit_channel) {\n    Bundle args=new Bundle();\n    args.putInt(\"chat_id\",chat_id);\n    ChatEditActivity fragment=new ChatEditActivity(args);\n    fragment.setInfo(chatInfo);\n    presentFragment(fragment);\n  }\n else   if (id == invite_to_group) {\n    final TLRPC.User user=getMessagesController().getUser(user_id);\n    if (user == null) {\n      return;\n    }\n    Bundle args=new Bundle();\n    args.putBoolean(\"onlySelect\",true);\n    args.putInt(\"dialogsType\",2);\n    args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n    DialogsActivity fragment=new DialogsActivity(args);\n    fragment.setDelegate((fragment1,dids,message,param) -> {\n      long did=dids.get(0);\n      Bundle args1=new Bundle();\n      args1.putBoolean(\"scrollToTopOnResume\",true);\n      args1.putInt(\"chat_id\",-(int)did);\n      if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n        return;\n      }\n      getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n      getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n      getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n      presentFragment(new ChatActivity(args1),true);\n      removeSelfFromStack();\n    }\n);\n    presentFragment(fragment);\n  }\n else   if (id == share) {\n    try {\n      String text=null;\n      if (user_id != 0) {\n        TLRPC.User user=getMessagesController().getUser(user_id);\n        if (user == null) {\n          return;\n        }\n        if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n          text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n        }\n else {\n          text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n        }\n      }\n else       if (chat_id != 0) {\n        TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n        if (chat == null) {\n          return;\n        }\n        if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n          text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n        }\n else {\n          text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n        }\n      }\n      if (TextUtils.isEmpty(text)) {\n        return;\n      }\n      Intent intent=new Intent(Intent.ACTION_SEND);\n      intent.setType(\"text/plain\");\n      intent.putExtra(Intent.EXTRA_TEXT,text);\n      startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n    }\n catch (    Exception e) {\n      FileLog.e(e);\n    }\n  }\n else   if (id == add_shortcut) {\n    try {\n      long did;\n      if (currentEncryptedChat != null) {\n        did=((long)currentEncryptedChat.id) << 32;\n      }\n else       if (user_id != 0) {\n        did=user_id;\n      }\n else       if (chat_id != 0) {\n        did=-chat_id;\n      }\n else {\n        return;\n      }\n      getMediaDataController().installShortcut(did);\n    }\n catch (    Exception e) {\n      FileLog.e(e);\n    }\n  }\n else   if (id == call_item || id == video_call_item) {\n    TLRPC.User user=getMessagesController().getUser(user_id);\n    if (user != null) {\n      VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n    }\n  }\n else   if (id == search_members) {\n    Bundle args=new Bundle();\n    args.putInt(\"chat_id\",chat_id);\n    args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n    args.putBoolean(\"open_search\",true);\n    ChatUsersActivity fragment=new ChatUsersActivity(args);\n    fragment.setInfo(chatInfo);\n    presentFragment(fragment);\n  }\n else   if (id == add_member) {\n    openAddMember();\n  }\n else   if (id == statistics) {\n    TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n    Bundle args=new Bundle();\n    args.putInt(\"chat_id\",chat_id);\n    args.putBoolean(\"is_megagroup\",chat.megagroup);\n    StatisticActivity fragment=new StatisticActivity(args);\n    presentFragment(fragment);\n  }\n else   if (id == view_discussion) {\n    openDiscussion();\n  }\n else   if (id == start_secret_chat) {\n    AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n    builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n    builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n    builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n      creatingChat=true;\n      getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n    }\n);\n    builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n    showDialog(builder.create());\n  }\n else   if (id == gallery_menu_save) {\n    if (getParentActivity() == null) {\n      return;\n    }\n    if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n      getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n      return;\n    }\n    ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n    if (location == null) {\n      return;\n    }\n    final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n    File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n    if (f.exists()) {\n      MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n        if (getParentActivity() == null) {\n          return;\n        }\n        BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n      }\n);\n    }\n  }\n else   if (id == edit_name) {\n    presentFragment(new ChangeNameActivity());\n  }\n else   if (id == logout) {\n    presentFragment(new LogoutActivity());\n  }\n else   if (id == set_as_main) {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (photo == null) {\n      return;\n    }\n    avatarsViewPager.startMovePhotoToBegin(position);\n    TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n    req.id=new TLRPC.TL_inputPhoto();\n    req.id.id=photo.id;\n    req.id.access_hash=photo.access_hash;\n    req.id.file_reference=photo.file_reference;\n    UserConfig userConfig=getUserConfig();\n    getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n      avatarsViewPager.finishSettingMainPhoto();\n      if (response instanceof TLRPC.TL_photos_photo) {\n        TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n        getMessagesController().putUsers(photos_photo.users,false);\n        TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n        if (photos_photo.photo instanceof TLRPC.TL_photo) {\n          avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n          if (user != null) {\n            user.photo.photo_id=photos_photo.photo.id;\n            userConfig.setCurrentUser(user);\n            userConfig.saveConfig(true);\n          }\n        }\n      }\n    }\n));\n    undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n    TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n    TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n    if (user != null) {\n      TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n      user.photo.photo_id=photo.id;\n      user.photo.photo_small=smallSize.location;\n      user.photo.photo_big=bigSize.location;\n      userConfig.setCurrentUser(user);\n      userConfig.saveConfig(true);\n      NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n      updateProfileData();\n    }\n    avatarsViewPager.commitMoveToBegin();\n  }\n else   if (id == edit_avatar) {\n    int position=avatarsViewPager.getRealPosition();\n    ImageLocation location=avatarsViewPager.getImageLocation(position);\n    if (location == null) {\n      return;\n    }\n    File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n    boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n    String thumb;\n    if (isVideo) {\n      ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n      thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n    }\n else {\n      thumb=null;\n    }\n    imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n  }\n else   if (id == delete_avatar) {\n    AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n    ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n    if (location == null) {\n      return;\n    }\n    if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n      builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n      builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n    }\n else {\n      builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n      builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n    }\n    builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n      int position=avatarsViewPager.getRealPosition();\n      TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n      if (avatarsViewPager.getRealCount() == 1) {\n        setForegroundImage(true);\n      }\n      if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n        getMessagesController().deleteUserPhoto(null);\n      }\n else {\n        TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n        inputPhoto.id=photo.id;\n        inputPhoto.access_hash=photo.access_hash;\n        inputPhoto.file_reference=photo.file_reference;\n        if (inputPhoto.file_reference == null) {\n          inputPhoto.file_reference=new byte[0];\n        }\n        getMessagesController().deleteUserPhoto(inputPhoto);\n        getMessagesStorage().clearUserPhoto(user_id,photo.id);\n      }\n      if (avatarsViewPager.removePhotoAtIndex(position)) {\n        avatarsViewPager.setVisibility(View.GONE);\n        avatarImage.setForegroundAlpha(1f);\n        avatarContainer.setVisibility(View.VISIBLE);\n        doNotSetForeground=true;\n        final View view=layoutManager.findViewByPosition(0);\n        if (view != null) {\n          listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n        }\n      }\n    }\n);\n    builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n    AlertDialog alertDialog=builder.create();\n    showDialog(alertDialog);\n    TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n    if (button != null) {\n      button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n    }\n  }\n else   if (id == add_photo) {\n    onWriteButtonClick();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 2347,
      "astHeight" : 41
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 1575,
        "startColumnNumber" : 32,
        "endLineNumber" : 1575,
        "endColumnNumber" : 125
      },
      "nodeContext" : "text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "String",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 1583,
      "startColumnNumber" : 39,
      "endLineNumber" : 1583,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 1583,
        "startColumnNumber" : 39,
        "endLineNumber" : 1583,
        "endColumnNumber" : 144
      },
      "nodeContext" : "String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 1583,
        "startColumnNumber" : 32,
        "endLineNumber" : 1583,
        "endColumnNumber" : 144
      },
      "nodeContext" : "text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 1583,
        "startColumnNumber" : 32,
        "endLineNumber" : 1583,
        "endColumnNumber" : 145
      },
      "nodeContext" : "text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 177,
        "startLineNumber" : 1582,
        "startColumnNumber" : 88,
        "endLineNumber" : 1584,
        "endColumnNumber" : 29
      },
      "nodeContext" : "{\n  text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 400,
        "startLineNumber" : 1582,
        "startColumnNumber" : 28,
        "endLineNumber" : 1586,
        "endColumnNumber" : 29
      },
      "nodeContext" : "if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n  text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n}\n else {\n  text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 49,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 662,
        "startLineNumber" : 1577,
        "startColumnNumber" : 49,
        "endLineNumber" : 1587,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  if (chat == null) {\n    return;\n  }\n  if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n    text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n  }\n else {\n    text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 680,
        "startLineNumber" : 1577,
        "startColumnNumber" : 31,
        "endLineNumber" : 1587,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (chat_id != 0) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  if (chat == null) {\n    return;\n  }\n  if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n    text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n  }\n else {\n    text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 72,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1384,
        "startLineNumber" : 1567,
        "startColumnNumber" : 24,
        "endLineNumber" : 1587,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (user_id != 0) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n    text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n  }\n else {\n    text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n  }\n}\n else if (chat_id != 0) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  if (chat == null) {\n    return;\n  }\n  if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n    text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n  }\n else {\n    text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 148,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1927,
        "startLineNumber" : 1565,
        "startColumnNumber" : 24,
        "endLineNumber" : 1595,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  String text=null;\n  if (user_id != 0) {\n    TLRPC.User user=getMessagesController().getUser(user_id);\n    if (user == null) {\n      return;\n    }\n    if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n      text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n    }\n else {\n      text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n    }\n  }\n else   if (chat_id != 0) {\n    TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n    if (chat == null) {\n      return;\n    }\n    if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n      text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n    }\n else {\n      text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n    }\n  }\n  if (TextUtils.isEmpty(text)) {\n    return;\n  }\n  Intent intent=new Intent(Intent.ACTION_SEND);\n  intent.setType(\"text/plain\");\n  intent.putExtra(Intent.EXTRA_TEXT,text);\n  startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 203,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2013,
        "startLineNumber" : 1565,
        "startColumnNumber" : 20,
        "endLineNumber" : 1597,
        "endColumnNumber" : 21
      },
      "nodeContext" : "try {\n  String text=null;\n  if (user_id != 0) {\n    TLRPC.User user=getMessagesController().getUser(user_id);\n    if (user == null) {\n      return;\n    }\n    if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n      text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n    }\n else {\n      text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n    }\n  }\n else   if (chat_id != 0) {\n    TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n    if (chat == null) {\n      return;\n    }\n    if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n      text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n    }\n else {\n      text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n    }\n  }\n  if (TextUtils.isEmpty(text)) {\n    return;\n  }\n  Intent intent=new Intent(Intent.ACTION_SEND);\n  intent.setType(\"text/plain\");\n  intent.putExtra(Intent.EXTRA_TEXT,text);\n  startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n}\n catch (Exception e) {\n  FileLog.e(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 215,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2053,
        "startLineNumber" : 1564,
        "startColumnNumber" : 40,
        "endLineNumber" : 1598,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 216,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 14202,
        "startLineNumber" : 1564,
        "startColumnNumber" : 23,
        "endLineNumber" : 1788,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (id == share) {\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == add_shortcut) {\n  try {\n    long did;\n    if (currentEncryptedChat != null) {\n      did=((long)currentEncryptedChat.id) << 32;\n    }\n else     if (user_id != 0) {\n      did=user_id;\n    }\n else     if (chat_id != 0) {\n      did=-chat_id;\n    }\n else {\n      return;\n    }\n    getMediaDataController().installShortcut(did);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == call_item || id == video_call_item) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user != null) {\n    VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n  }\n}\n else if (id == search_members) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n  args.putBoolean(\"open_search\",true);\n  ChatUsersActivity fragment=new ChatUsersActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == add_member) {\n  openAddMember();\n}\n else if (id == statistics) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putBoolean(\"is_megagroup\",chat.megagroup);\n  StatisticActivity fragment=new StatisticActivity(args);\n  presentFragment(fragment);\n}\n else if (id == view_discussion) {\n  openDiscussion();\n}\n else if (id == start_secret_chat) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n  builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n  builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n    creatingChat=true;\n    getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  showDialog(builder.create());\n}\n else if (id == gallery_menu_save) {\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n    getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n    return;\n  }\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n  if (f.exists()) {\n    MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n      if (getParentActivity() == null) {\n        return;\n      }\n      BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n    }\n);\n  }\n}\n else if (id == edit_name) {\n  presentFragment(new ChangeNameActivity());\n}\n else if (id == logout) {\n  presentFragment(new LogoutActivity());\n}\n else if (id == set_as_main) {\n  int position=avatarsViewPager.getRealPosition();\n  TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n  if (photo == null) {\n    return;\n  }\n  avatarsViewPager.startMovePhotoToBegin(position);\n  TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n  req.id=new TLRPC.TL_inputPhoto();\n  req.id.id=photo.id;\n  req.id.access_hash=photo.access_hash;\n  req.id.file_reference=photo.file_reference;\n  UserConfig userConfig=getUserConfig();\n  getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n    avatarsViewPager.finishSettingMainPhoto();\n    if (response instanceof TLRPC.TL_photos_photo) {\n      TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n      getMessagesController().putUsers(photos_photo.users,false);\n      TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n      if (photos_photo.photo instanceof TLRPC.TL_photo) {\n        avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n        if (user != null) {\n          user.photo.photo_id=photos_photo.photo.id;\n          userConfig.setCurrentUser(user);\n          userConfig.saveConfig(true);\n        }\n      }\n    }\n  }\n));\n  undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n  TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n  TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n  if (user != null) {\n    TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n    user.photo.photo_id=photo.id;\n    user.photo.photo_small=smallSize.location;\n    user.photo.photo_big=bigSize.location;\n    userConfig.setCurrentUser(user);\n    userConfig.saveConfig(true);\n    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n    updateProfileData();\n  }\n  avatarsViewPager.commitMoveToBegin();\n}\n else if (id == edit_avatar) {\n  int position=avatarsViewPager.getRealPosition();\n  ImageLocation location=avatarsViewPager.getImageLocation(position);\n  if (location == null) {\n    return;\n  }\n  File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n  boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  String thumb;\n  if (isVideo) {\n    ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n    thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n  }\n else {\n    thumb=null;\n  }\n  imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n}\n else if (id == delete_avatar) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n  }\n else {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n  }\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (avatarsViewPager.getRealCount() == 1) {\n      setForegroundImage(true);\n    }\n    if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n      getMessagesController().deleteUserPhoto(null);\n    }\n else {\n      TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n      inputPhoto.id=photo.id;\n      inputPhoto.access_hash=photo.access_hash;\n      inputPhoto.file_reference=photo.file_reference;\n      if (inputPhoto.file_reference == null) {\n        inputPhoto.file_reference=new byte[0];\n      }\n      getMessagesController().deleteUserPhoto(inputPhoto);\n      getMessagesStorage().clearUserPhoto(user_id,photo.id);\n    }\n    if (avatarsViewPager.removePhotoAtIndex(position)) {\n      avatarsViewPager.setVisibility(View.GONE);\n      avatarImage.setForegroundAlpha(1f);\n      avatarContainer.setVisibility(View.VISIBLE);\n      doNotSetForeground=true;\n      final View view=layoutManager.findViewByPosition(0);\n      if (view != null) {\n        listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n      }\n    }\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog alertDialog=builder.create();\n  showDialog(alertDialog);\n  TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == add_photo) {\n  onWriteButtonClick();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1484,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 15852,
        "startLineNumber" : 1538,
        "startColumnNumber" : 23,
        "endLineNumber" : 1788,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (id == invite_to_group) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",2);\n  args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate((fragment1,dids,message,param) -> {\n    long did=dids.get(0);\n    Bundle args1=new Bundle();\n    args1.putBoolean(\"scrollToTopOnResume\",true);\n    args1.putInt(\"chat_id\",-(int)did);\n    if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n      return;\n    }\n    getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n    getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n    getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n    presentFragment(new ChatActivity(args1),true);\n    removeSelfFromStack();\n  }\n);\n  presentFragment(fragment);\n}\n else if (id == share) {\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == add_shortcut) {\n  try {\n    long did;\n    if (currentEncryptedChat != null) {\n      did=((long)currentEncryptedChat.id) << 32;\n    }\n else     if (user_id != 0) {\n      did=user_id;\n    }\n else     if (chat_id != 0) {\n      did=-chat_id;\n    }\n else {\n      return;\n    }\n    getMediaDataController().installShortcut(did);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == call_item || id == video_call_item) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user != null) {\n    VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n  }\n}\n else if (id == search_members) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n  args.putBoolean(\"open_search\",true);\n  ChatUsersActivity fragment=new ChatUsersActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == add_member) {\n  openAddMember();\n}\n else if (id == statistics) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putBoolean(\"is_megagroup\",chat.megagroup);\n  StatisticActivity fragment=new StatisticActivity(args);\n  presentFragment(fragment);\n}\n else if (id == view_discussion) {\n  openDiscussion();\n}\n else if (id == start_secret_chat) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n  builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n  builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n    creatingChat=true;\n    getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  showDialog(builder.create());\n}\n else if (id == gallery_menu_save) {\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n    getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n    return;\n  }\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n  if (f.exists()) {\n    MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n      if (getParentActivity() == null) {\n        return;\n      }\n      BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n    }\n);\n  }\n}\n else if (id == edit_name) {\n  presentFragment(new ChangeNameActivity());\n}\n else if (id == logout) {\n  presentFragment(new LogoutActivity());\n}\n else if (id == set_as_main) {\n  int position=avatarsViewPager.getRealPosition();\n  TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n  if (photo == null) {\n    return;\n  }\n  avatarsViewPager.startMovePhotoToBegin(position);\n  TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n  req.id=new TLRPC.TL_inputPhoto();\n  req.id.id=photo.id;\n  req.id.access_hash=photo.access_hash;\n  req.id.file_reference=photo.file_reference;\n  UserConfig userConfig=getUserConfig();\n  getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n    avatarsViewPager.finishSettingMainPhoto();\n    if (response instanceof TLRPC.TL_photos_photo) {\n      TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n      getMessagesController().putUsers(photos_photo.users,false);\n      TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n      if (photos_photo.photo instanceof TLRPC.TL_photo) {\n        avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n        if (user != null) {\n          user.photo.photo_id=photos_photo.photo.id;\n          userConfig.setCurrentUser(user);\n          userConfig.saveConfig(true);\n        }\n      }\n    }\n  }\n));\n  undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n  TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n  TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n  if (user != null) {\n    TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n    user.photo.photo_id=photo.id;\n    user.photo.photo_small=smallSize.location;\n    user.photo.photo_big=bigSize.location;\n    userConfig.setCurrentUser(user);\n    userConfig.saveConfig(true);\n    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n    updateProfileData();\n  }\n  avatarsViewPager.commitMoveToBegin();\n}\n else if (id == edit_avatar) {\n  int position=avatarsViewPager.getRealPosition();\n  ImageLocation location=avatarsViewPager.getImageLocation(position);\n  if (location == null) {\n    return;\n  }\n  File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n  boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  String thumb;\n  if (isVideo) {\n    ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n    thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n  }\n else {\n    thumb=null;\n  }\n  imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n}\n else if (id == delete_avatar) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n  }\n else {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n  }\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (avatarsViewPager.getRealCount() == 1) {\n      setForegroundImage(true);\n    }\n    if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n      getMessagesController().deleteUserPhoto(null);\n    }\n else {\n      TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n      inputPhoto.id=photo.id;\n      inputPhoto.access_hash=photo.access_hash;\n      inputPhoto.file_reference=photo.file_reference;\n      if (inputPhoto.file_reference == null) {\n        inputPhoto.file_reference=new byte[0];\n      }\n      getMessagesController().deleteUserPhoto(inputPhoto);\n      getMessagesStorage().clearUserPhoto(user_id,photo.id);\n    }\n    if (avatarsViewPager.removePhotoAtIndex(position)) {\n      avatarsViewPager.setVisibility(View.GONE);\n      avatarImage.setForegroundAlpha(1f);\n      avatarContainer.setVisibility(View.VISIBLE);\n      doNotSetForeground=true;\n      final View view=layoutManager.findViewByPosition(0);\n      if (view != null) {\n        listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n      }\n    }\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog alertDialog=builder.create();\n  showDialog(alertDialog);\n  TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == add_photo) {\n  onWriteButtonClick();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1660,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 16173,
        "startLineNumber" : 1532,
        "startColumnNumber" : 23,
        "endLineNumber" : 1788,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (id == edit_channel) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  ChatEditActivity fragment=new ChatEditActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == invite_to_group) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",2);\n  args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate((fragment1,dids,message,param) -> {\n    long did=dids.get(0);\n    Bundle args1=new Bundle();\n    args1.putBoolean(\"scrollToTopOnResume\",true);\n    args1.putInt(\"chat_id\",-(int)did);\n    if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n      return;\n    }\n    getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n    getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n    getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n    presentFragment(new ChatActivity(args1),true);\n    removeSelfFromStack();\n  }\n);\n  presentFragment(fragment);\n}\n else if (id == share) {\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == add_shortcut) {\n  try {\n    long did;\n    if (currentEncryptedChat != null) {\n      did=((long)currentEncryptedChat.id) << 32;\n    }\n else     if (user_id != 0) {\n      did=user_id;\n    }\n else     if (chat_id != 0) {\n      did=-chat_id;\n    }\n else {\n      return;\n    }\n    getMediaDataController().installShortcut(did);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == call_item || id == video_call_item) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user != null) {\n    VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n  }\n}\n else if (id == search_members) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n  args.putBoolean(\"open_search\",true);\n  ChatUsersActivity fragment=new ChatUsersActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == add_member) {\n  openAddMember();\n}\n else if (id == statistics) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putBoolean(\"is_megagroup\",chat.megagroup);\n  StatisticActivity fragment=new StatisticActivity(args);\n  presentFragment(fragment);\n}\n else if (id == view_discussion) {\n  openDiscussion();\n}\n else if (id == start_secret_chat) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n  builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n  builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n    creatingChat=true;\n    getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  showDialog(builder.create());\n}\n else if (id == gallery_menu_save) {\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n    getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n    return;\n  }\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n  if (f.exists()) {\n    MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n      if (getParentActivity() == null) {\n        return;\n      }\n      BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n    }\n);\n  }\n}\n else if (id == edit_name) {\n  presentFragment(new ChangeNameActivity());\n}\n else if (id == logout) {\n  presentFragment(new LogoutActivity());\n}\n else if (id == set_as_main) {\n  int position=avatarsViewPager.getRealPosition();\n  TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n  if (photo == null) {\n    return;\n  }\n  avatarsViewPager.startMovePhotoToBegin(position);\n  TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n  req.id=new TLRPC.TL_inputPhoto();\n  req.id.id=photo.id;\n  req.id.access_hash=photo.access_hash;\n  req.id.file_reference=photo.file_reference;\n  UserConfig userConfig=getUserConfig();\n  getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n    avatarsViewPager.finishSettingMainPhoto();\n    if (response instanceof TLRPC.TL_photos_photo) {\n      TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n      getMessagesController().putUsers(photos_photo.users,false);\n      TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n      if (photos_photo.photo instanceof TLRPC.TL_photo) {\n        avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n        if (user != null) {\n          user.photo.photo_id=photos_photo.photo.id;\n          userConfig.setCurrentUser(user);\n          userConfig.saveConfig(true);\n        }\n      }\n    }\n  }\n));\n  undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n  TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n  TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n  if (user != null) {\n    TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n    user.photo.photo_id=photo.id;\n    user.photo.photo_small=smallSize.location;\n    user.photo.photo_big=bigSize.location;\n    userConfig.setCurrentUser(user);\n    userConfig.saveConfig(true);\n    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n    updateProfileData();\n  }\n  avatarsViewPager.commitMoveToBegin();\n}\n else if (id == edit_avatar) {\n  int position=avatarsViewPager.getRealPosition();\n  ImageLocation location=avatarsViewPager.getImageLocation(position);\n  if (location == null) {\n    return;\n  }\n  File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n  boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  String thumb;\n  if (isVideo) {\n    ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n    thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n  }\n else {\n    thumb=null;\n  }\n  imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n}\n else if (id == delete_avatar) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n  }\n else {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n  }\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (avatarsViewPager.getRealCount() == 1) {\n      setForegroundImage(true);\n    }\n    if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n      getMessagesController().deleteUserPhoto(null);\n    }\n else {\n      TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n      inputPhoto.id=photo.id;\n      inputPhoto.access_hash=photo.access_hash;\n      inputPhoto.file_reference=photo.file_reference;\n      if (inputPhoto.file_reference == null) {\n        inputPhoto.file_reference=new byte[0];\n      }\n      getMessagesController().deleteUserPhoto(inputPhoto);\n      getMessagesStorage().clearUserPhoto(user_id,photo.id);\n    }\n    if (avatarsViewPager.removePhotoAtIndex(position)) {\n      avatarsViewPager.setVisibility(View.GONE);\n      avatarImage.setForegroundAlpha(1f);\n      avatarContainer.setVisibility(View.VISIBLE);\n      doNotSetForeground=true;\n      final View view=layoutManager.findViewByPosition(0);\n      if (view != null) {\n        listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n      }\n    }\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog alertDialog=builder.create();\n  showDialog(alertDialog);\n  TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == add_photo) {\n  onWriteButtonClick();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1697,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 16261,
        "startLineNumber" : 1530,
        "startColumnNumber" : 23,
        "endLineNumber" : 1788,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (id == leave_group) {\n  leaveChatPressed();\n}\n else if (id == edit_channel) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  ChatEditActivity fragment=new ChatEditActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == invite_to_group) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",2);\n  args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate((fragment1,dids,message,param) -> {\n    long did=dids.get(0);\n    Bundle args1=new Bundle();\n    args1.putBoolean(\"scrollToTopOnResume\",true);\n    args1.putInt(\"chat_id\",-(int)did);\n    if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n      return;\n    }\n    getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n    getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n    getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n    presentFragment(new ChatActivity(args1),true);\n    removeSelfFromStack();\n  }\n);\n  presentFragment(fragment);\n}\n else if (id == share) {\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == add_shortcut) {\n  try {\n    long did;\n    if (currentEncryptedChat != null) {\n      did=((long)currentEncryptedChat.id) << 32;\n    }\n else     if (user_id != 0) {\n      did=user_id;\n    }\n else     if (chat_id != 0) {\n      did=-chat_id;\n    }\n else {\n      return;\n    }\n    getMediaDataController().installShortcut(did);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == call_item || id == video_call_item) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user != null) {\n    VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n  }\n}\n else if (id == search_members) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n  args.putBoolean(\"open_search\",true);\n  ChatUsersActivity fragment=new ChatUsersActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == add_member) {\n  openAddMember();\n}\n else if (id == statistics) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putBoolean(\"is_megagroup\",chat.megagroup);\n  StatisticActivity fragment=new StatisticActivity(args);\n  presentFragment(fragment);\n}\n else if (id == view_discussion) {\n  openDiscussion();\n}\n else if (id == start_secret_chat) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n  builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n  builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n    creatingChat=true;\n    getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  showDialog(builder.create());\n}\n else if (id == gallery_menu_save) {\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n    getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n    return;\n  }\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n  if (f.exists()) {\n    MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n      if (getParentActivity() == null) {\n        return;\n      }\n      BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n    }\n);\n  }\n}\n else if (id == edit_name) {\n  presentFragment(new ChangeNameActivity());\n}\n else if (id == logout) {\n  presentFragment(new LogoutActivity());\n}\n else if (id == set_as_main) {\n  int position=avatarsViewPager.getRealPosition();\n  TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n  if (photo == null) {\n    return;\n  }\n  avatarsViewPager.startMovePhotoToBegin(position);\n  TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n  req.id=new TLRPC.TL_inputPhoto();\n  req.id.id=photo.id;\n  req.id.access_hash=photo.access_hash;\n  req.id.file_reference=photo.file_reference;\n  UserConfig userConfig=getUserConfig();\n  getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n    avatarsViewPager.finishSettingMainPhoto();\n    if (response instanceof TLRPC.TL_photos_photo) {\n      TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n      getMessagesController().putUsers(photos_photo.users,false);\n      TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n      if (photos_photo.photo instanceof TLRPC.TL_photo) {\n        avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n        if (user != null) {\n          user.photo.photo_id=photos_photo.photo.id;\n          userConfig.setCurrentUser(user);\n          userConfig.saveConfig(true);\n        }\n      }\n    }\n  }\n));\n  undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n  TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n  TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n  if (user != null) {\n    TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n    user.photo.photo_id=photo.id;\n    user.photo.photo_small=smallSize.location;\n    user.photo.photo_big=bigSize.location;\n    userConfig.setCurrentUser(user);\n    userConfig.saveConfig(true);\n    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n    updateProfileData();\n  }\n  avatarsViewPager.commitMoveToBegin();\n}\n else if (id == edit_avatar) {\n  int position=avatarsViewPager.getRealPosition();\n  ImageLocation location=avatarsViewPager.getImageLocation(position);\n  if (location == null) {\n    return;\n  }\n  File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n  boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  String thumb;\n  if (isVideo) {\n    ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n    thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n  }\n else {\n    thumb=null;\n  }\n  imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n}\n else if (id == delete_avatar) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n  }\n else {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n  }\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (avatarsViewPager.getRealCount() == 1) {\n      setForegroundImage(true);\n    }\n    if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n      getMessagesController().deleteUserPhoto(null);\n    }\n else {\n      TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n      inputPhoto.id=photo.id;\n      inputPhoto.access_hash=photo.access_hash;\n      inputPhoto.file_reference=photo.file_reference;\n      if (inputPhoto.file_reference == null) {\n        inputPhoto.file_reference=new byte[0];\n      }\n      getMessagesController().deleteUserPhoto(inputPhoto);\n      getMessagesStorage().clearUserPhoto(user_id,photo.id);\n    }\n    if (avatarsViewPager.removePhotoAtIndex(position)) {\n      avatarsViewPager.setVisibility(View.GONE);\n      avatarImage.setForegroundAlpha(1f);\n      avatarContainer.setVisibility(View.VISIBLE);\n      doNotSetForeground=true;\n      final View view=layoutManager.findViewByPosition(0);\n      if (view != null) {\n        listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n      }\n    }\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog alertDialog=builder.create();\n  showDialog(alertDialog);\n  TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == add_photo) {\n  onWriteButtonClick();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1705,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 17660,
        "startLineNumber" : 1510,
        "startColumnNumber" : 23,
        "endLineNumber" : 1788,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (id == delete_contact) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null || getParentActivity() == null) {\n    return;\n  }\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"DeleteContact\",R.string.DeleteContact));\n  builder.setMessage(LocaleController.getString(\"AreYouSureDeleteContact\",R.string.AreYouSureDeleteContact));\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    ArrayList<TLRPC.User> arrayList=new ArrayList<>();\n    arrayList.add(user);\n    getContactsController().deleteContact(arrayList);\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog dialog=builder.create();\n  showDialog(dialog);\n  TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == leave_group) {\n  leaveChatPressed();\n}\n else if (id == edit_channel) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  ChatEditActivity fragment=new ChatEditActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == invite_to_group) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",2);\n  args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate((fragment1,dids,message,param) -> {\n    long did=dids.get(0);\n    Bundle args1=new Bundle();\n    args1.putBoolean(\"scrollToTopOnResume\",true);\n    args1.putInt(\"chat_id\",-(int)did);\n    if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n      return;\n    }\n    getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n    getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n    getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n    presentFragment(new ChatActivity(args1),true);\n    removeSelfFromStack();\n  }\n);\n  presentFragment(fragment);\n}\n else if (id == share) {\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == add_shortcut) {\n  try {\n    long did;\n    if (currentEncryptedChat != null) {\n      did=((long)currentEncryptedChat.id) << 32;\n    }\n else     if (user_id != 0) {\n      did=user_id;\n    }\n else     if (chat_id != 0) {\n      did=-chat_id;\n    }\n else {\n      return;\n    }\n    getMediaDataController().installShortcut(did);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == call_item || id == video_call_item) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user != null) {\n    VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n  }\n}\n else if (id == search_members) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n  args.putBoolean(\"open_search\",true);\n  ChatUsersActivity fragment=new ChatUsersActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == add_member) {\n  openAddMember();\n}\n else if (id == statistics) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putBoolean(\"is_megagroup\",chat.megagroup);\n  StatisticActivity fragment=new StatisticActivity(args);\n  presentFragment(fragment);\n}\n else if (id == view_discussion) {\n  openDiscussion();\n}\n else if (id == start_secret_chat) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n  builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n  builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n    creatingChat=true;\n    getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  showDialog(builder.create());\n}\n else if (id == gallery_menu_save) {\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n    getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n    return;\n  }\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n  if (f.exists()) {\n    MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n      if (getParentActivity() == null) {\n        return;\n      }\n      BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n    }\n);\n  }\n}\n else if (id == edit_name) {\n  presentFragment(new ChangeNameActivity());\n}\n else if (id == logout) {\n  presentFragment(new LogoutActivity());\n}\n else if (id == set_as_main) {\n  int position=avatarsViewPager.getRealPosition();\n  TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n  if (photo == null) {\n    return;\n  }\n  avatarsViewPager.startMovePhotoToBegin(position);\n  TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n  req.id=new TLRPC.TL_inputPhoto();\n  req.id.id=photo.id;\n  req.id.access_hash=photo.access_hash;\n  req.id.file_reference=photo.file_reference;\n  UserConfig userConfig=getUserConfig();\n  getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n    avatarsViewPager.finishSettingMainPhoto();\n    if (response instanceof TLRPC.TL_photos_photo) {\n      TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n      getMessagesController().putUsers(photos_photo.users,false);\n      TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n      if (photos_photo.photo instanceof TLRPC.TL_photo) {\n        avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n        if (user != null) {\n          user.photo.photo_id=photos_photo.photo.id;\n          userConfig.setCurrentUser(user);\n          userConfig.saveConfig(true);\n        }\n      }\n    }\n  }\n));\n  undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n  TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n  TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n  if (user != null) {\n    TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n    user.photo.photo_id=photo.id;\n    user.photo.photo_small=smallSize.location;\n    user.photo.photo_big=bigSize.location;\n    userConfig.setCurrentUser(user);\n    userConfig.saveConfig(true);\n    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n    updateProfileData();\n  }\n  avatarsViewPager.commitMoveToBegin();\n}\n else if (id == edit_avatar) {\n  int position=avatarsViewPager.getRealPosition();\n  ImageLocation location=avatarsViewPager.getImageLocation(position);\n  if (location == null) {\n    return;\n  }\n  File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n  boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  String thumb;\n  if (isVideo) {\n    ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n    thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n  }\n else {\n    thumb=null;\n  }\n  imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n}\n else if (id == delete_avatar) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n  }\n else {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n  }\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (avatarsViewPager.getRealCount() == 1) {\n      setForegroundImage(true);\n    }\n    if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n      getMessagesController().deleteUserPhoto(null);\n    }\n else {\n      TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n      inputPhoto.id=photo.id;\n      inputPhoto.access_hash=photo.access_hash;\n      inputPhoto.file_reference=photo.file_reference;\n      if (inputPhoto.file_reference == null) {\n        inputPhoto.file_reference=new byte[0];\n      }\n      getMessagesController().deleteUserPhoto(inputPhoto);\n      getMessagesStorage().clearUserPhoto(user_id,photo.id);\n    }\n    if (avatarsViewPager.removePhotoAtIndex(position)) {\n      avatarsViewPager.setVisibility(View.GONE);\n      avatarImage.setForegroundAlpha(1f);\n      avatarContainer.setVisibility(View.VISIBLE);\n      doNotSetForeground=true;\n      final View view=layoutManager.findViewByPosition(0);\n      if (view != null) {\n        listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n      }\n    }\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog alertDialog=builder.create();\n  showDialog(alertDialog);\n  TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == add_photo) {\n  onWriteButtonClick();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1873,
      "astHeight" : 34
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 17877,
        "startLineNumber" : 1506,
        "startColumnNumber" : 23,
        "endLineNumber" : 1788,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (id == edit_contact) {\n  Bundle args=new Bundle();\n  args.putInt(\"user_id\",user_id);\n  presentFragment(new ContactAddActivity(args));\n}\n else if (id == delete_contact) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null || getParentActivity() == null) {\n    return;\n  }\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"DeleteContact\",R.string.DeleteContact));\n  builder.setMessage(LocaleController.getString(\"AreYouSureDeleteContact\",R.string.AreYouSureDeleteContact));\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    ArrayList<TLRPC.User> arrayList=new ArrayList<>();\n    arrayList.add(user);\n    getContactsController().deleteContact(arrayList);\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog dialog=builder.create();\n  showDialog(dialog);\n  TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == leave_group) {\n  leaveChatPressed();\n}\n else if (id == edit_channel) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  ChatEditActivity fragment=new ChatEditActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == invite_to_group) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",2);\n  args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate((fragment1,dids,message,param) -> {\n    long did=dids.get(0);\n    Bundle args1=new Bundle();\n    args1.putBoolean(\"scrollToTopOnResume\",true);\n    args1.putInt(\"chat_id\",-(int)did);\n    if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n      return;\n    }\n    getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n    getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n    getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n    presentFragment(new ChatActivity(args1),true);\n    removeSelfFromStack();\n  }\n);\n  presentFragment(fragment);\n}\n else if (id == share) {\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == add_shortcut) {\n  try {\n    long did;\n    if (currentEncryptedChat != null) {\n      did=((long)currentEncryptedChat.id) << 32;\n    }\n else     if (user_id != 0) {\n      did=user_id;\n    }\n else     if (chat_id != 0) {\n      did=-chat_id;\n    }\n else {\n      return;\n    }\n    getMediaDataController().installShortcut(did);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == call_item || id == video_call_item) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user != null) {\n    VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n  }\n}\n else if (id == search_members) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n  args.putBoolean(\"open_search\",true);\n  ChatUsersActivity fragment=new ChatUsersActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == add_member) {\n  openAddMember();\n}\n else if (id == statistics) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putBoolean(\"is_megagroup\",chat.megagroup);\n  StatisticActivity fragment=new StatisticActivity(args);\n  presentFragment(fragment);\n}\n else if (id == view_discussion) {\n  openDiscussion();\n}\n else if (id == start_secret_chat) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n  builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n  builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n    creatingChat=true;\n    getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  showDialog(builder.create());\n}\n else if (id == gallery_menu_save) {\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n    getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n    return;\n  }\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n  if (f.exists()) {\n    MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n      if (getParentActivity() == null) {\n        return;\n      }\n      BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n    }\n);\n  }\n}\n else if (id == edit_name) {\n  presentFragment(new ChangeNameActivity());\n}\n else if (id == logout) {\n  presentFragment(new LogoutActivity());\n}\n else if (id == set_as_main) {\n  int position=avatarsViewPager.getRealPosition();\n  TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n  if (photo == null) {\n    return;\n  }\n  avatarsViewPager.startMovePhotoToBegin(position);\n  TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n  req.id=new TLRPC.TL_inputPhoto();\n  req.id.id=photo.id;\n  req.id.access_hash=photo.access_hash;\n  req.id.file_reference=photo.file_reference;\n  UserConfig userConfig=getUserConfig();\n  getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n    avatarsViewPager.finishSettingMainPhoto();\n    if (response instanceof TLRPC.TL_photos_photo) {\n      TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n      getMessagesController().putUsers(photos_photo.users,false);\n      TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n      if (photos_photo.photo instanceof TLRPC.TL_photo) {\n        avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n        if (user != null) {\n          user.photo.photo_id=photos_photo.photo.id;\n          userConfig.setCurrentUser(user);\n          userConfig.saveConfig(true);\n        }\n      }\n    }\n  }\n));\n  undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n  TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n  TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n  if (user != null) {\n    TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n    user.photo.photo_id=photo.id;\n    user.photo.photo_small=smallSize.location;\n    user.photo.photo_big=bigSize.location;\n    userConfig.setCurrentUser(user);\n    userConfig.saveConfig(true);\n    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n    updateProfileData();\n  }\n  avatarsViewPager.commitMoveToBegin();\n}\n else if (id == edit_avatar) {\n  int position=avatarsViewPager.getRealPosition();\n  ImageLocation location=avatarsViewPager.getImageLocation(position);\n  if (location == null) {\n    return;\n  }\n  File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n  boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  String thumb;\n  if (isVideo) {\n    ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n    thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n  }\n else {\n    thumb=null;\n  }\n  imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n}\n else if (id == delete_avatar) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n  }\n else {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n  }\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (avatarsViewPager.getRealCount() == 1) {\n      setForegroundImage(true);\n    }\n    if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n      getMessagesController().deleteUserPhoto(null);\n    }\n else {\n      TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n      inputPhoto.id=photo.id;\n      inputPhoto.access_hash=photo.access_hash;\n      inputPhoto.file_reference=photo.file_reference;\n      if (inputPhoto.file_reference == null) {\n        inputPhoto.file_reference=new byte[0];\n      }\n      getMessagesController().deleteUserPhoto(inputPhoto);\n      getMessagesStorage().clearUserPhoto(user_id,photo.id);\n    }\n    if (avatarsViewPager.removePhotoAtIndex(position)) {\n      avatarsViewPager.setVisibility(View.GONE);\n      avatarImage.setForegroundAlpha(1f);\n      avatarContainer.setVisibility(View.VISIBLE);\n      doNotSetForeground=true;\n      final View view=layoutManager.findViewByPosition(0);\n      if (view != null) {\n        listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n      }\n    }\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog alertDialog=builder.create();\n  showDialog(alertDialog);\n  TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == add_photo) {\n  onWriteButtonClick();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1899,
      "astHeight" : 35
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 18551,
        "startLineNumber" : 1497,
        "startColumnNumber" : 23,
        "endLineNumber" : 1788,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (id == share_contact) {\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",3);\n  args.putString(\"selectAlertString\",LocaleController.getString(\"SendContactToText\",R.string.SendContactToText));\n  args.putString(\"selectAlertStringGroup\",LocaleController.getString(\"SendContactToGroupText\",R.string.SendContactToGroupText));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate(ProfileActivity.this);\n  presentFragment(fragment);\n}\n else if (id == edit_contact) {\n  Bundle args=new Bundle();\n  args.putInt(\"user_id\",user_id);\n  presentFragment(new ContactAddActivity(args));\n}\n else if (id == delete_contact) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null || getParentActivity() == null) {\n    return;\n  }\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"DeleteContact\",R.string.DeleteContact));\n  builder.setMessage(LocaleController.getString(\"AreYouSureDeleteContact\",R.string.AreYouSureDeleteContact));\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    ArrayList<TLRPC.User> arrayList=new ArrayList<>();\n    arrayList.add(user);\n    getContactsController().deleteContact(arrayList);\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog dialog=builder.create();\n  showDialog(dialog);\n  TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == leave_group) {\n  leaveChatPressed();\n}\n else if (id == edit_channel) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  ChatEditActivity fragment=new ChatEditActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == invite_to_group) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",2);\n  args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate((fragment1,dids,message,param) -> {\n    long did=dids.get(0);\n    Bundle args1=new Bundle();\n    args1.putBoolean(\"scrollToTopOnResume\",true);\n    args1.putInt(\"chat_id\",-(int)did);\n    if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n      return;\n    }\n    getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n    getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n    getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n    presentFragment(new ChatActivity(args1),true);\n    removeSelfFromStack();\n  }\n);\n  presentFragment(fragment);\n}\n else if (id == share) {\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == add_shortcut) {\n  try {\n    long did;\n    if (currentEncryptedChat != null) {\n      did=((long)currentEncryptedChat.id) << 32;\n    }\n else     if (user_id != 0) {\n      did=user_id;\n    }\n else     if (chat_id != 0) {\n      did=-chat_id;\n    }\n else {\n      return;\n    }\n    getMediaDataController().installShortcut(did);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == call_item || id == video_call_item) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user != null) {\n    VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n  }\n}\n else if (id == search_members) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n  args.putBoolean(\"open_search\",true);\n  ChatUsersActivity fragment=new ChatUsersActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == add_member) {\n  openAddMember();\n}\n else if (id == statistics) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putBoolean(\"is_megagroup\",chat.megagroup);\n  StatisticActivity fragment=new StatisticActivity(args);\n  presentFragment(fragment);\n}\n else if (id == view_discussion) {\n  openDiscussion();\n}\n else if (id == start_secret_chat) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n  builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n  builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n    creatingChat=true;\n    getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  showDialog(builder.create());\n}\n else if (id == gallery_menu_save) {\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n    getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n    return;\n  }\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n  if (f.exists()) {\n    MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n      if (getParentActivity() == null) {\n        return;\n      }\n      BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n    }\n);\n  }\n}\n else if (id == edit_name) {\n  presentFragment(new ChangeNameActivity());\n}\n else if (id == logout) {\n  presentFragment(new LogoutActivity());\n}\n else if (id == set_as_main) {\n  int position=avatarsViewPager.getRealPosition();\n  TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n  if (photo == null) {\n    return;\n  }\n  avatarsViewPager.startMovePhotoToBegin(position);\n  TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n  req.id=new TLRPC.TL_inputPhoto();\n  req.id.id=photo.id;\n  req.id.access_hash=photo.access_hash;\n  req.id.file_reference=photo.file_reference;\n  UserConfig userConfig=getUserConfig();\n  getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n    avatarsViewPager.finishSettingMainPhoto();\n    if (response instanceof TLRPC.TL_photos_photo) {\n      TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n      getMessagesController().putUsers(photos_photo.users,false);\n      TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n      if (photos_photo.photo instanceof TLRPC.TL_photo) {\n        avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n        if (user != null) {\n          user.photo.photo_id=photos_photo.photo.id;\n          userConfig.setCurrentUser(user);\n          userConfig.saveConfig(true);\n        }\n      }\n    }\n  }\n));\n  undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n  TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n  TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n  if (user != null) {\n    TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n    user.photo.photo_id=photo.id;\n    user.photo.photo_small=smallSize.location;\n    user.photo.photo_big=bigSize.location;\n    userConfig.setCurrentUser(user);\n    userConfig.saveConfig(true);\n    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n    updateProfileData();\n  }\n  avatarsViewPager.commitMoveToBegin();\n}\n else if (id == edit_avatar) {\n  int position=avatarsViewPager.getRealPosition();\n  ImageLocation location=avatarsViewPager.getImageLocation(position);\n  if (location == null) {\n    return;\n  }\n  File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n  boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  String thumb;\n  if (isVideo) {\n    ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n    thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n  }\n else {\n    thumb=null;\n  }\n  imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n}\n else if (id == delete_avatar) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n  }\n else {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n  }\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (avatarsViewPager.getRealCount() == 1) {\n      setForegroundImage(true);\n    }\n    if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n      getMessagesController().deleteUserPhoto(null);\n    }\n else {\n      TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n      inputPhoto.id=photo.id;\n      inputPhoto.access_hash=photo.access_hash;\n      inputPhoto.file_reference=photo.file_reference;\n      if (inputPhoto.file_reference == null) {\n        inputPhoto.file_reference=new byte[0];\n      }\n      getMessagesController().deleteUserPhoto(inputPhoto);\n      getMessagesStorage().clearUserPhoto(user_id,photo.id);\n    }\n    if (avatarsViewPager.removePhotoAtIndex(position)) {\n      avatarsViewPager.setVisibility(View.GONE);\n      avatarImage.setForegroundAlpha(1f);\n      avatarContainer.setVisibility(View.VISIBLE);\n      doNotSetForeground=true;\n      final View view=layoutManager.findViewByPosition(0);\n      if (view != null) {\n        listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n      }\n    }\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog alertDialog=builder.create();\n  showDialog(alertDialog);\n  TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == add_photo) {\n  onWriteButtonClick();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1971,
      "astHeight" : 36
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 18904,
        "startLineNumber" : 1491,
        "startColumnNumber" : 23,
        "endLineNumber" : 1788,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (id == add_contact) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  Bundle args=new Bundle();\n  args.putInt(\"user_id\",user.id);\n  args.putBoolean(\"addContact\",true);\n  presentFragment(new ContactAddActivity(args));\n}\n else if (id == share_contact) {\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",3);\n  args.putString(\"selectAlertString\",LocaleController.getString(\"SendContactToText\",R.string.SendContactToText));\n  args.putString(\"selectAlertStringGroup\",LocaleController.getString(\"SendContactToGroupText\",R.string.SendContactToGroupText));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate(ProfileActivity.this);\n  presentFragment(fragment);\n}\n else if (id == edit_contact) {\n  Bundle args=new Bundle();\n  args.putInt(\"user_id\",user_id);\n  presentFragment(new ContactAddActivity(args));\n}\n else if (id == delete_contact) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null || getParentActivity() == null) {\n    return;\n  }\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"DeleteContact\",R.string.DeleteContact));\n  builder.setMessage(LocaleController.getString(\"AreYouSureDeleteContact\",R.string.AreYouSureDeleteContact));\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    ArrayList<TLRPC.User> arrayList=new ArrayList<>();\n    arrayList.add(user);\n    getContactsController().deleteContact(arrayList);\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog dialog=builder.create();\n  showDialog(dialog);\n  TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == leave_group) {\n  leaveChatPressed();\n}\n else if (id == edit_channel) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  ChatEditActivity fragment=new ChatEditActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == invite_to_group) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",2);\n  args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate((fragment1,dids,message,param) -> {\n    long did=dids.get(0);\n    Bundle args1=new Bundle();\n    args1.putBoolean(\"scrollToTopOnResume\",true);\n    args1.putInt(\"chat_id\",-(int)did);\n    if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n      return;\n    }\n    getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n    getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n    getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n    presentFragment(new ChatActivity(args1),true);\n    removeSelfFromStack();\n  }\n);\n  presentFragment(fragment);\n}\n else if (id == share) {\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == add_shortcut) {\n  try {\n    long did;\n    if (currentEncryptedChat != null) {\n      did=((long)currentEncryptedChat.id) << 32;\n    }\n else     if (user_id != 0) {\n      did=user_id;\n    }\n else     if (chat_id != 0) {\n      did=-chat_id;\n    }\n else {\n      return;\n    }\n    getMediaDataController().installShortcut(did);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == call_item || id == video_call_item) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user != null) {\n    VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n  }\n}\n else if (id == search_members) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n  args.putBoolean(\"open_search\",true);\n  ChatUsersActivity fragment=new ChatUsersActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == add_member) {\n  openAddMember();\n}\n else if (id == statistics) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putBoolean(\"is_megagroup\",chat.megagroup);\n  StatisticActivity fragment=new StatisticActivity(args);\n  presentFragment(fragment);\n}\n else if (id == view_discussion) {\n  openDiscussion();\n}\n else if (id == start_secret_chat) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n  builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n  builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n    creatingChat=true;\n    getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  showDialog(builder.create());\n}\n else if (id == gallery_menu_save) {\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n    getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n    return;\n  }\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n  if (f.exists()) {\n    MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n      if (getParentActivity() == null) {\n        return;\n      }\n      BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n    }\n);\n  }\n}\n else if (id == edit_name) {\n  presentFragment(new ChangeNameActivity());\n}\n else if (id == logout) {\n  presentFragment(new LogoutActivity());\n}\n else if (id == set_as_main) {\n  int position=avatarsViewPager.getRealPosition();\n  TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n  if (photo == null) {\n    return;\n  }\n  avatarsViewPager.startMovePhotoToBegin(position);\n  TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n  req.id=new TLRPC.TL_inputPhoto();\n  req.id.id=photo.id;\n  req.id.access_hash=photo.access_hash;\n  req.id.file_reference=photo.file_reference;\n  UserConfig userConfig=getUserConfig();\n  getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n    avatarsViewPager.finishSettingMainPhoto();\n    if (response instanceof TLRPC.TL_photos_photo) {\n      TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n      getMessagesController().putUsers(photos_photo.users,false);\n      TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n      if (photos_photo.photo instanceof TLRPC.TL_photo) {\n        avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n        if (user != null) {\n          user.photo.photo_id=photos_photo.photo.id;\n          userConfig.setCurrentUser(user);\n          userConfig.saveConfig(true);\n        }\n      }\n    }\n  }\n));\n  undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n  TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n  TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n  if (user != null) {\n    TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n    user.photo.photo_id=photo.id;\n    user.photo.photo_small=smallSize.location;\n    user.photo.photo_big=bigSize.location;\n    userConfig.setCurrentUser(user);\n    userConfig.saveConfig(true);\n    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n    updateProfileData();\n  }\n  avatarsViewPager.commitMoveToBegin();\n}\n else if (id == edit_avatar) {\n  int position=avatarsViewPager.getRealPosition();\n  ImageLocation location=avatarsViewPager.getImageLocation(position);\n  if (location == null) {\n    return;\n  }\n  File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n  boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  String thumb;\n  if (isVideo) {\n    ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n    thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n  }\n else {\n    thumb=null;\n  }\n  imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n}\n else if (id == delete_avatar) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n  }\n else {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n  }\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (avatarsViewPager.getRealCount() == 1) {\n      setForegroundImage(true);\n    }\n    if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n      getMessagesController().deleteUserPhoto(null);\n    }\n else {\n      TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n      inputPhoto.id=photo.id;\n      inputPhoto.access_hash=photo.access_hash;\n      inputPhoto.file_reference=photo.file_reference;\n      if (inputPhoto.file_reference == null) {\n        inputPhoto.file_reference=new byte[0];\n      }\n      getMessagesController().deleteUserPhoto(inputPhoto);\n      getMessagesStorage().clearUserPhoto(user_id,photo.id);\n    }\n    if (avatarsViewPager.removePhotoAtIndex(position)) {\n      avatarsViewPager.setVisibility(View.GONE);\n      avatarImage.setForegroundAlpha(1f);\n      avatarContainer.setVisibility(View.VISIBLE);\n      doNotSetForeground=true;\n      final View view=layoutManager.findViewByPosition(0);\n      if (view != null) {\n        listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n      }\n    }\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog alertDialog=builder.create();\n  showDialog(alertDialog);\n  TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == add_photo) {\n  onWriteButtonClick();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 2017,
      "astHeight" : 37
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 22394,
        "startLineNumber" : 1444,
        "startColumnNumber" : 23,
        "endLineNumber" : 1788,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (id == block_contact) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  if (!isBot || MessagesController.isSupportUser(user)) {\n    if (userBlocked) {\n      getMessagesController().unblockPeer(user_id);\n      AlertsCreator.showSimpleToast(ProfileActivity.this,LocaleController.getString(\"UserUnblocked\",R.string.UserUnblocked));\n    }\n else {\n      if (reportSpam) {\n        AlertsCreator.showBlockReportSpamAlert(ProfileActivity.this,user_id,user,null,currentEncryptedChat,false,null,param -> {\n          if (param == 1) {\n            getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n            getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n            playProfileAnimation=0;\n            finishFragment();\n          }\n else {\n            getNotificationCenter().postNotificationName(NotificationCenter.peerSettingsDidLoad,(long)user_id);\n          }\n        }\n);\n      }\n else {\n        AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n        builder.setTitle(LocaleController.getString(\"BlockUser\",R.string.BlockUser));\n        builder.setMessage(AndroidUtilities.replaceTags(LocaleController.formatString(\"AreYouSureBlockContact2\",R.string.AreYouSureBlockContact2,ContactsController.formatName(user.first_name,user.last_name))));\n        builder.setPositiveButton(LocaleController.getString(\"BlockContact\",R.string.BlockContact),(dialogInterface,i) -> {\n          getMessagesController().blockPeer(user_id);\n          AlertsCreator.showSimpleToast(ProfileActivity.this,LocaleController.getString(\"UserBlocked\",R.string.UserBlocked));\n        }\n);\n        builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n        AlertDialog dialog=builder.create();\n        showDialog(dialog);\n        TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n        if (button != null) {\n          button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n        }\n      }\n    }\n  }\n else {\n    if (!userBlocked) {\n      getMessagesController().blockPeer(user_id);\n    }\n else {\n      getMessagesController().unblockPeer(user_id);\n      getSendMessagesHelper().sendMessage(\"/start\",user_id,null,null,null,false,null,null,null,true,0);\n      finishFragment();\n    }\n  }\n}\n else if (id == add_contact) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  Bundle args=new Bundle();\n  args.putInt(\"user_id\",user.id);\n  args.putBoolean(\"addContact\",true);\n  presentFragment(new ContactAddActivity(args));\n}\n else if (id == share_contact) {\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",3);\n  args.putString(\"selectAlertString\",LocaleController.getString(\"SendContactToText\",R.string.SendContactToText));\n  args.putString(\"selectAlertStringGroup\",LocaleController.getString(\"SendContactToGroupText\",R.string.SendContactToGroupText));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate(ProfileActivity.this);\n  presentFragment(fragment);\n}\n else if (id == edit_contact) {\n  Bundle args=new Bundle();\n  args.putInt(\"user_id\",user_id);\n  presentFragment(new ContactAddActivity(args));\n}\n else if (id == delete_contact) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null || getParentActivity() == null) {\n    return;\n  }\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"DeleteContact\",R.string.DeleteContact));\n  builder.setMessage(LocaleController.getString(\"AreYouSureDeleteContact\",R.string.AreYouSureDeleteContact));\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    ArrayList<TLRPC.User> arrayList=new ArrayList<>();\n    arrayList.add(user);\n    getContactsController().deleteContact(arrayList);\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog dialog=builder.create();\n  showDialog(dialog);\n  TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == leave_group) {\n  leaveChatPressed();\n}\n else if (id == edit_channel) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  ChatEditActivity fragment=new ChatEditActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == invite_to_group) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",2);\n  args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate((fragment1,dids,message,param) -> {\n    long did=dids.get(0);\n    Bundle args1=new Bundle();\n    args1.putBoolean(\"scrollToTopOnResume\",true);\n    args1.putInt(\"chat_id\",-(int)did);\n    if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n      return;\n    }\n    getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n    getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n    getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n    presentFragment(new ChatActivity(args1),true);\n    removeSelfFromStack();\n  }\n);\n  presentFragment(fragment);\n}\n else if (id == share) {\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == add_shortcut) {\n  try {\n    long did;\n    if (currentEncryptedChat != null) {\n      did=((long)currentEncryptedChat.id) << 32;\n    }\n else     if (user_id != 0) {\n      did=user_id;\n    }\n else     if (chat_id != 0) {\n      did=-chat_id;\n    }\n else {\n      return;\n    }\n    getMediaDataController().installShortcut(did);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == call_item || id == video_call_item) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user != null) {\n    VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n  }\n}\n else if (id == search_members) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n  args.putBoolean(\"open_search\",true);\n  ChatUsersActivity fragment=new ChatUsersActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == add_member) {\n  openAddMember();\n}\n else if (id == statistics) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putBoolean(\"is_megagroup\",chat.megagroup);\n  StatisticActivity fragment=new StatisticActivity(args);\n  presentFragment(fragment);\n}\n else if (id == view_discussion) {\n  openDiscussion();\n}\n else if (id == start_secret_chat) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n  builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n  builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n    creatingChat=true;\n    getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  showDialog(builder.create());\n}\n else if (id == gallery_menu_save) {\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n    getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n    return;\n  }\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n  if (f.exists()) {\n    MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n      if (getParentActivity() == null) {\n        return;\n      }\n      BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n    }\n);\n  }\n}\n else if (id == edit_name) {\n  presentFragment(new ChangeNameActivity());\n}\n else if (id == logout) {\n  presentFragment(new LogoutActivity());\n}\n else if (id == set_as_main) {\n  int position=avatarsViewPager.getRealPosition();\n  TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n  if (photo == null) {\n    return;\n  }\n  avatarsViewPager.startMovePhotoToBegin(position);\n  TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n  req.id=new TLRPC.TL_inputPhoto();\n  req.id.id=photo.id;\n  req.id.access_hash=photo.access_hash;\n  req.id.file_reference=photo.file_reference;\n  UserConfig userConfig=getUserConfig();\n  getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n    avatarsViewPager.finishSettingMainPhoto();\n    if (response instanceof TLRPC.TL_photos_photo) {\n      TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n      getMessagesController().putUsers(photos_photo.users,false);\n      TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n      if (photos_photo.photo instanceof TLRPC.TL_photo) {\n        avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n        if (user != null) {\n          user.photo.photo_id=photos_photo.photo.id;\n          userConfig.setCurrentUser(user);\n          userConfig.saveConfig(true);\n        }\n      }\n    }\n  }\n));\n  undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n  TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n  TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n  if (user != null) {\n    TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n    user.photo.photo_id=photo.id;\n    user.photo.photo_small=smallSize.location;\n    user.photo.photo_big=bigSize.location;\n    userConfig.setCurrentUser(user);\n    userConfig.saveConfig(true);\n    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n    updateProfileData();\n  }\n  avatarsViewPager.commitMoveToBegin();\n}\n else if (id == edit_avatar) {\n  int position=avatarsViewPager.getRealPosition();\n  ImageLocation location=avatarsViewPager.getImageLocation(position);\n  if (location == null) {\n    return;\n  }\n  File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n  boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  String thumb;\n  if (isVideo) {\n    ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n    thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n  }\n else {\n    thumb=null;\n  }\n  imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n}\n else if (id == delete_avatar) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n  }\n else {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n  }\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (avatarsViewPager.getRealCount() == 1) {\n      setForegroundImage(true);\n    }\n    if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n      getMessagesController().deleteUserPhoto(null);\n    }\n else {\n      TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n      inputPhoto.id=photo.id;\n      inputPhoto.access_hash=photo.access_hash;\n      inputPhoto.file_reference=photo.file_reference;\n      if (inputPhoto.file_reference == null) {\n        inputPhoto.file_reference=new byte[0];\n      }\n      getMessagesController().deleteUserPhoto(inputPhoto);\n      getMessagesStorage().clearUserPhoto(user_id,photo.id);\n    }\n    if (avatarsViewPager.removePhotoAtIndex(position)) {\n      avatarsViewPager.setVisibility(View.GONE);\n      avatarImage.setForegroundAlpha(1f);\n      avatarContainer.setVisibility(View.VISIBLE);\n      doNotSetForeground=true;\n      final View view=layoutManager.findViewByPosition(0);\n      if (view != null) {\n        listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n      }\n    }\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog alertDialog=builder.create();\n  showDialog(alertDialog);\n  TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == add_photo) {\n  onWriteButtonClick();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 2320,
      "astHeight" : 38
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22471,
        "startLineNumber" : 1442,
        "startColumnNumber" : 16,
        "endLineNumber" : 1788,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (id == -1) {\n  finishFragment();\n}\n else if (id == block_contact) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  if (!isBot || MessagesController.isSupportUser(user)) {\n    if (userBlocked) {\n      getMessagesController().unblockPeer(user_id);\n      AlertsCreator.showSimpleToast(ProfileActivity.this,LocaleController.getString(\"UserUnblocked\",R.string.UserUnblocked));\n    }\n else {\n      if (reportSpam) {\n        AlertsCreator.showBlockReportSpamAlert(ProfileActivity.this,user_id,user,null,currentEncryptedChat,false,null,param -> {\n          if (param == 1) {\n            getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n            getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n            playProfileAnimation=0;\n            finishFragment();\n          }\n else {\n            getNotificationCenter().postNotificationName(NotificationCenter.peerSettingsDidLoad,(long)user_id);\n          }\n        }\n);\n      }\n else {\n        AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n        builder.setTitle(LocaleController.getString(\"BlockUser\",R.string.BlockUser));\n        builder.setMessage(AndroidUtilities.replaceTags(LocaleController.formatString(\"AreYouSureBlockContact2\",R.string.AreYouSureBlockContact2,ContactsController.formatName(user.first_name,user.last_name))));\n        builder.setPositiveButton(LocaleController.getString(\"BlockContact\",R.string.BlockContact),(dialogInterface,i) -> {\n          getMessagesController().blockPeer(user_id);\n          AlertsCreator.showSimpleToast(ProfileActivity.this,LocaleController.getString(\"UserBlocked\",R.string.UserBlocked));\n        }\n);\n        builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n        AlertDialog dialog=builder.create();\n        showDialog(dialog);\n        TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n        if (button != null) {\n          button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n        }\n      }\n    }\n  }\n else {\n    if (!userBlocked) {\n      getMessagesController().blockPeer(user_id);\n    }\n else {\n      getMessagesController().unblockPeer(user_id);\n      getSendMessagesHelper().sendMessage(\"/start\",user_id,null,null,null,false,null,null,null,true,0);\n      finishFragment();\n    }\n  }\n}\n else if (id == add_contact) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  Bundle args=new Bundle();\n  args.putInt(\"user_id\",user.id);\n  args.putBoolean(\"addContact\",true);\n  presentFragment(new ContactAddActivity(args));\n}\n else if (id == share_contact) {\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",3);\n  args.putString(\"selectAlertString\",LocaleController.getString(\"SendContactToText\",R.string.SendContactToText));\n  args.putString(\"selectAlertStringGroup\",LocaleController.getString(\"SendContactToGroupText\",R.string.SendContactToGroupText));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate(ProfileActivity.this);\n  presentFragment(fragment);\n}\n else if (id == edit_contact) {\n  Bundle args=new Bundle();\n  args.putInt(\"user_id\",user_id);\n  presentFragment(new ContactAddActivity(args));\n}\n else if (id == delete_contact) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null || getParentActivity() == null) {\n    return;\n  }\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"DeleteContact\",R.string.DeleteContact));\n  builder.setMessage(LocaleController.getString(\"AreYouSureDeleteContact\",R.string.AreYouSureDeleteContact));\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    ArrayList<TLRPC.User> arrayList=new ArrayList<>();\n    arrayList.add(user);\n    getContactsController().deleteContact(arrayList);\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog dialog=builder.create();\n  showDialog(dialog);\n  TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == leave_group) {\n  leaveChatPressed();\n}\n else if (id == edit_channel) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  ChatEditActivity fragment=new ChatEditActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == invite_to_group) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",2);\n  args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate((fragment1,dids,message,param) -> {\n    long did=dids.get(0);\n    Bundle args1=new Bundle();\n    args1.putBoolean(\"scrollToTopOnResume\",true);\n    args1.putInt(\"chat_id\",-(int)did);\n    if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n      return;\n    }\n    getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n    getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n    getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n    presentFragment(new ChatActivity(args1),true);\n    removeSelfFromStack();\n  }\n);\n  presentFragment(fragment);\n}\n else if (id == share) {\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == add_shortcut) {\n  try {\n    long did;\n    if (currentEncryptedChat != null) {\n      did=((long)currentEncryptedChat.id) << 32;\n    }\n else     if (user_id != 0) {\n      did=user_id;\n    }\n else     if (chat_id != 0) {\n      did=-chat_id;\n    }\n else {\n      return;\n    }\n    getMediaDataController().installShortcut(did);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == call_item || id == video_call_item) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user != null) {\n    VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n  }\n}\n else if (id == search_members) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n  args.putBoolean(\"open_search\",true);\n  ChatUsersActivity fragment=new ChatUsersActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == add_member) {\n  openAddMember();\n}\n else if (id == statistics) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putBoolean(\"is_megagroup\",chat.megagroup);\n  StatisticActivity fragment=new StatisticActivity(args);\n  presentFragment(fragment);\n}\n else if (id == view_discussion) {\n  openDiscussion();\n}\n else if (id == start_secret_chat) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n  builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n  builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n    creatingChat=true;\n    getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  showDialog(builder.create());\n}\n else if (id == gallery_menu_save) {\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n    getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n    return;\n  }\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n  if (f.exists()) {\n    MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n      if (getParentActivity() == null) {\n        return;\n      }\n      BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n    }\n);\n  }\n}\n else if (id == edit_name) {\n  presentFragment(new ChangeNameActivity());\n}\n else if (id == logout) {\n  presentFragment(new LogoutActivity());\n}\n else if (id == set_as_main) {\n  int position=avatarsViewPager.getRealPosition();\n  TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n  if (photo == null) {\n    return;\n  }\n  avatarsViewPager.startMovePhotoToBegin(position);\n  TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n  req.id=new TLRPC.TL_inputPhoto();\n  req.id.id=photo.id;\n  req.id.access_hash=photo.access_hash;\n  req.id.file_reference=photo.file_reference;\n  UserConfig userConfig=getUserConfig();\n  getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n    avatarsViewPager.finishSettingMainPhoto();\n    if (response instanceof TLRPC.TL_photos_photo) {\n      TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n      getMessagesController().putUsers(photos_photo.users,false);\n      TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n      if (photos_photo.photo instanceof TLRPC.TL_photo) {\n        avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n        if (user != null) {\n          user.photo.photo_id=photos_photo.photo.id;\n          userConfig.setCurrentUser(user);\n          userConfig.saveConfig(true);\n        }\n      }\n    }\n  }\n));\n  undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n  TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n  TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n  if (user != null) {\n    TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n    user.photo.photo_id=photo.id;\n    user.photo.photo_small=smallSize.location;\n    user.photo.photo_big=bigSize.location;\n    userConfig.setCurrentUser(user);\n    userConfig.saveConfig(true);\n    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n    updateProfileData();\n  }\n  avatarsViewPager.commitMoveToBegin();\n}\n else if (id == edit_avatar) {\n  int position=avatarsViewPager.getRealPosition();\n  ImageLocation location=avatarsViewPager.getImageLocation(position);\n  if (location == null) {\n    return;\n  }\n  File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n  boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  String thumb;\n  if (isVideo) {\n    ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n    thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n  }\n else {\n    thumb=null;\n  }\n  imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n}\n else if (id == delete_avatar) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n  }\n else {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n  }\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (avatarsViewPager.getRealCount() == 1) {\n      setForegroundImage(true);\n    }\n    if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n      getMessagesController().deleteUserPhoto(null);\n    }\n else {\n      TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n      inputPhoto.id=photo.id;\n      inputPhoto.access_hash=photo.access_hash;\n      inputPhoto.file_reference=photo.file_reference;\n      if (inputPhoto.file_reference == null) {\n        inputPhoto.file_reference=new byte[0];\n      }\n      getMessagesController().deleteUserPhoto(inputPhoto);\n      getMessagesStorage().clearUserPhoto(user_id,photo.id);\n    }\n    if (avatarsViewPager.removePhotoAtIndex(position)) {\n      avatarsViewPager.setVisibility(View.GONE);\n      avatarImage.setForegroundAlpha(1f);\n      avatarContainer.setVisibility(View.VISIBLE);\n      doNotSetForeground=true;\n      final View view=layoutManager.findViewByPosition(0);\n      if (view != null) {\n        listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n      }\n    }\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog alertDialog=builder.create();\n  showDialog(alertDialog);\n  TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == add_photo) {\n  onWriteButtonClick();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 2329,
      "astHeight" : 39
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 22600,
        "startLineNumber" : 1438,
        "startColumnNumber" : 50,
        "endLineNumber" : 1789,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (id == -1) {\n    finishFragment();\n  }\n else   if (id == block_contact) {\n    TLRPC.User user=getMessagesController().getUser(user_id);\n    if (user == null) {\n      return;\n    }\n    if (!isBot || MessagesController.isSupportUser(user)) {\n      if (userBlocked) {\n        getMessagesController().unblockPeer(user_id);\n        AlertsCreator.showSimpleToast(ProfileActivity.this,LocaleController.getString(\"UserUnblocked\",R.string.UserUnblocked));\n      }\n else {\n        if (reportSpam) {\n          AlertsCreator.showBlockReportSpamAlert(ProfileActivity.this,user_id,user,null,currentEncryptedChat,false,null,param -> {\n            if (param == 1) {\n              getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n              getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n              playProfileAnimation=0;\n              finishFragment();\n            }\n else {\n              getNotificationCenter().postNotificationName(NotificationCenter.peerSettingsDidLoad,(long)user_id);\n            }\n          }\n);\n        }\n else {\n          AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n          builder.setTitle(LocaleController.getString(\"BlockUser\",R.string.BlockUser));\n          builder.setMessage(AndroidUtilities.replaceTags(LocaleController.formatString(\"AreYouSureBlockContact2\",R.string.AreYouSureBlockContact2,ContactsController.formatName(user.first_name,user.last_name))));\n          builder.setPositiveButton(LocaleController.getString(\"BlockContact\",R.string.BlockContact),(dialogInterface,i) -> {\n            getMessagesController().blockPeer(user_id);\n            AlertsCreator.showSimpleToast(ProfileActivity.this,LocaleController.getString(\"UserBlocked\",R.string.UserBlocked));\n          }\n);\n          builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n          AlertDialog dialog=builder.create();\n          showDialog(dialog);\n          TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n          if (button != null) {\n            button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n          }\n        }\n      }\n    }\n else {\n      if (!userBlocked) {\n        getMessagesController().blockPeer(user_id);\n      }\n else {\n        getMessagesController().unblockPeer(user_id);\n        getSendMessagesHelper().sendMessage(\"/start\",user_id,null,null,null,false,null,null,null,true,0);\n        finishFragment();\n      }\n    }\n  }\n else   if (id == add_contact) {\n    TLRPC.User user=getMessagesController().getUser(user_id);\n    Bundle args=new Bundle();\n    args.putInt(\"user_id\",user.id);\n    args.putBoolean(\"addContact\",true);\n    presentFragment(new ContactAddActivity(args));\n  }\n else   if (id == share_contact) {\n    Bundle args=new Bundle();\n    args.putBoolean(\"onlySelect\",true);\n    args.putInt(\"dialogsType\",3);\n    args.putString(\"selectAlertString\",LocaleController.getString(\"SendContactToText\",R.string.SendContactToText));\n    args.putString(\"selectAlertStringGroup\",LocaleController.getString(\"SendContactToGroupText\",R.string.SendContactToGroupText));\n    DialogsActivity fragment=new DialogsActivity(args);\n    fragment.setDelegate(ProfileActivity.this);\n    presentFragment(fragment);\n  }\n else   if (id == edit_contact) {\n    Bundle args=new Bundle();\n    args.putInt(\"user_id\",user_id);\n    presentFragment(new ContactAddActivity(args));\n  }\n else   if (id == delete_contact) {\n    final TLRPC.User user=getMessagesController().getUser(user_id);\n    if (user == null || getParentActivity() == null) {\n      return;\n    }\n    AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n    builder.setTitle(LocaleController.getString(\"DeleteContact\",R.string.DeleteContact));\n    builder.setMessage(LocaleController.getString(\"AreYouSureDeleteContact\",R.string.AreYouSureDeleteContact));\n    builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n      ArrayList<TLRPC.User> arrayList=new ArrayList<>();\n      arrayList.add(user);\n      getContactsController().deleteContact(arrayList);\n    }\n);\n    builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n    AlertDialog dialog=builder.create();\n    showDialog(dialog);\n    TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n    if (button != null) {\n      button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n    }\n  }\n else   if (id == leave_group) {\n    leaveChatPressed();\n  }\n else   if (id == edit_channel) {\n    Bundle args=new Bundle();\n    args.putInt(\"chat_id\",chat_id);\n    ChatEditActivity fragment=new ChatEditActivity(args);\n    fragment.setInfo(chatInfo);\n    presentFragment(fragment);\n  }\n else   if (id == invite_to_group) {\n    final TLRPC.User user=getMessagesController().getUser(user_id);\n    if (user == null) {\n      return;\n    }\n    Bundle args=new Bundle();\n    args.putBoolean(\"onlySelect\",true);\n    args.putInt(\"dialogsType\",2);\n    args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n    DialogsActivity fragment=new DialogsActivity(args);\n    fragment.setDelegate((fragment1,dids,message,param) -> {\n      long did=dids.get(0);\n      Bundle args1=new Bundle();\n      args1.putBoolean(\"scrollToTopOnResume\",true);\n      args1.putInt(\"chat_id\",-(int)did);\n      if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n        return;\n      }\n      getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n      getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n      getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n      presentFragment(new ChatActivity(args1),true);\n      removeSelfFromStack();\n    }\n);\n    presentFragment(fragment);\n  }\n else   if (id == share) {\n    try {\n      String text=null;\n      if (user_id != 0) {\n        TLRPC.User user=getMessagesController().getUser(user_id);\n        if (user == null) {\n          return;\n        }\n        if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n          text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n        }\n else {\n          text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n        }\n      }\n else       if (chat_id != 0) {\n        TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n        if (chat == null) {\n          return;\n        }\n        if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n          text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n        }\n else {\n          text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n        }\n      }\n      if (TextUtils.isEmpty(text)) {\n        return;\n      }\n      Intent intent=new Intent(Intent.ACTION_SEND);\n      intent.setType(\"text/plain\");\n      intent.putExtra(Intent.EXTRA_TEXT,text);\n      startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n    }\n catch (    Exception e) {\n      FileLog.e(e);\n    }\n  }\n else   if (id == add_shortcut) {\n    try {\n      long did;\n      if (currentEncryptedChat != null) {\n        did=((long)currentEncryptedChat.id) << 32;\n      }\n else       if (user_id != 0) {\n        did=user_id;\n      }\n else       if (chat_id != 0) {\n        did=-chat_id;\n      }\n else {\n        return;\n      }\n      getMediaDataController().installShortcut(did);\n    }\n catch (    Exception e) {\n      FileLog.e(e);\n    }\n  }\n else   if (id == call_item || id == video_call_item) {\n    TLRPC.User user=getMessagesController().getUser(user_id);\n    if (user != null) {\n      VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n    }\n  }\n else   if (id == search_members) {\n    Bundle args=new Bundle();\n    args.putInt(\"chat_id\",chat_id);\n    args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n    args.putBoolean(\"open_search\",true);\n    ChatUsersActivity fragment=new ChatUsersActivity(args);\n    fragment.setInfo(chatInfo);\n    presentFragment(fragment);\n  }\n else   if (id == add_member) {\n    openAddMember();\n  }\n else   if (id == statistics) {\n    TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n    Bundle args=new Bundle();\n    args.putInt(\"chat_id\",chat_id);\n    args.putBoolean(\"is_megagroup\",chat.megagroup);\n    StatisticActivity fragment=new StatisticActivity(args);\n    presentFragment(fragment);\n  }\n else   if (id == view_discussion) {\n    openDiscussion();\n  }\n else   if (id == start_secret_chat) {\n    AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n    builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n    builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n    builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n      creatingChat=true;\n      getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n    }\n);\n    builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n    showDialog(builder.create());\n  }\n else   if (id == gallery_menu_save) {\n    if (getParentActivity() == null) {\n      return;\n    }\n    if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n      getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n      return;\n    }\n    ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n    if (location == null) {\n      return;\n    }\n    final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n    File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n    if (f.exists()) {\n      MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n        if (getParentActivity() == null) {\n          return;\n        }\n        BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n      }\n);\n    }\n  }\n else   if (id == edit_name) {\n    presentFragment(new ChangeNameActivity());\n  }\n else   if (id == logout) {\n    presentFragment(new LogoutActivity());\n  }\n else   if (id == set_as_main) {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (photo == null) {\n      return;\n    }\n    avatarsViewPager.startMovePhotoToBegin(position);\n    TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n    req.id=new TLRPC.TL_inputPhoto();\n    req.id.id=photo.id;\n    req.id.access_hash=photo.access_hash;\n    req.id.file_reference=photo.file_reference;\n    UserConfig userConfig=getUserConfig();\n    getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n      avatarsViewPager.finishSettingMainPhoto();\n      if (response instanceof TLRPC.TL_photos_photo) {\n        TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n        getMessagesController().putUsers(photos_photo.users,false);\n        TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n        if (photos_photo.photo instanceof TLRPC.TL_photo) {\n          avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n          if (user != null) {\n            user.photo.photo_id=photos_photo.photo.id;\n            userConfig.setCurrentUser(user);\n            userConfig.saveConfig(true);\n          }\n        }\n      }\n    }\n));\n    undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n    TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n    TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n    if (user != null) {\n      TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n      user.photo.photo_id=photo.id;\n      user.photo.photo_small=smallSize.location;\n      user.photo.photo_big=bigSize.location;\n      userConfig.setCurrentUser(user);\n      userConfig.saveConfig(true);\n      NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n      updateProfileData();\n    }\n    avatarsViewPager.commitMoveToBegin();\n  }\n else   if (id == edit_avatar) {\n    int position=avatarsViewPager.getRealPosition();\n    ImageLocation location=avatarsViewPager.getImageLocation(position);\n    if (location == null) {\n      return;\n    }\n    File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n    boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n    String thumb;\n    if (isVideo) {\n      ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n      thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n    }\n else {\n      thumb=null;\n    }\n    imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n  }\n else   if (id == delete_avatar) {\n    AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n    ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n    if (location == null) {\n      return;\n    }\n    if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n      builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n      builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n    }\n else {\n      builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n      builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n    }\n    builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n      int position=avatarsViewPager.getRealPosition();\n      TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n      if (avatarsViewPager.getRealCount() == 1) {\n        setForegroundImage(true);\n      }\n      if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n        getMessagesController().deleteUserPhoto(null);\n      }\n else {\n        TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n        inputPhoto.id=photo.id;\n        inputPhoto.access_hash=photo.access_hash;\n        inputPhoto.file_reference=photo.file_reference;\n        if (inputPhoto.file_reference == null) {\n          inputPhoto.file_reference=new byte[0];\n        }\n        getMessagesController().deleteUserPhoto(inputPhoto);\n        getMessagesStorage().clearUserPhoto(user_id,photo.id);\n      }\n      if (avatarsViewPager.removePhotoAtIndex(position)) {\n        avatarsViewPager.setVisibility(View.GONE);\n        avatarImage.setForegroundAlpha(1f);\n        avatarContainer.setVisibility(View.VISIBLE);\n        doNotSetForeground=true;\n        final View view=layoutManager.findViewByPosition(0);\n        if (view != null) {\n          listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n        }\n      }\n    }\n);\n    builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n    AlertDialog alertDialog=builder.create();\n    showDialog(alertDialog);\n    TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n    if (button != null) {\n      button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n    }\n  }\n else   if (id == add_photo) {\n    onWriteButtonClick();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 2337,
      "astHeight" : 40
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 22660,
        "startLineNumber" : 1437,
        "startColumnNumber" : 12,
        "endLineNumber" : 1789,
        "endColumnNumber" : 13
      },
      "nodeContext" : "@Override public void onItemClick(final int id){\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (id == -1) {\n    finishFragment();\n  }\n else   if (id == block_contact) {\n    TLRPC.User user=getMessagesController().getUser(user_id);\n    if (user == null) {\n      return;\n    }\n    if (!isBot || MessagesController.isSupportUser(user)) {\n      if (userBlocked) {\n        getMessagesController().unblockPeer(user_id);\n        AlertsCreator.showSimpleToast(ProfileActivity.this,LocaleController.getString(\"UserUnblocked\",R.string.UserUnblocked));\n      }\n else {\n        if (reportSpam) {\n          AlertsCreator.showBlockReportSpamAlert(ProfileActivity.this,user_id,user,null,currentEncryptedChat,false,null,param -> {\n            if (param == 1) {\n              getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n              getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n              playProfileAnimation=0;\n              finishFragment();\n            }\n else {\n              getNotificationCenter().postNotificationName(NotificationCenter.peerSettingsDidLoad,(long)user_id);\n            }\n          }\n);\n        }\n else {\n          AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n          builder.setTitle(LocaleController.getString(\"BlockUser\",R.string.BlockUser));\n          builder.setMessage(AndroidUtilities.replaceTags(LocaleController.formatString(\"AreYouSureBlockContact2\",R.string.AreYouSureBlockContact2,ContactsController.formatName(user.first_name,user.last_name))));\n          builder.setPositiveButton(LocaleController.getString(\"BlockContact\",R.string.BlockContact),(dialogInterface,i) -> {\n            getMessagesController().blockPeer(user_id);\n            AlertsCreator.showSimpleToast(ProfileActivity.this,LocaleController.getString(\"UserBlocked\",R.string.UserBlocked));\n          }\n);\n          builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n          AlertDialog dialog=builder.create();\n          showDialog(dialog);\n          TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n          if (button != null) {\n            button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n          }\n        }\n      }\n    }\n else {\n      if (!userBlocked) {\n        getMessagesController().blockPeer(user_id);\n      }\n else {\n        getMessagesController().unblockPeer(user_id);\n        getSendMessagesHelper().sendMessage(\"/start\",user_id,null,null,null,false,null,null,null,true,0);\n        finishFragment();\n      }\n    }\n  }\n else   if (id == add_contact) {\n    TLRPC.User user=getMessagesController().getUser(user_id);\n    Bundle args=new Bundle();\n    args.putInt(\"user_id\",user.id);\n    args.putBoolean(\"addContact\",true);\n    presentFragment(new ContactAddActivity(args));\n  }\n else   if (id == share_contact) {\n    Bundle args=new Bundle();\n    args.putBoolean(\"onlySelect\",true);\n    args.putInt(\"dialogsType\",3);\n    args.putString(\"selectAlertString\",LocaleController.getString(\"SendContactToText\",R.string.SendContactToText));\n    args.putString(\"selectAlertStringGroup\",LocaleController.getString(\"SendContactToGroupText\",R.string.SendContactToGroupText));\n    DialogsActivity fragment=new DialogsActivity(args);\n    fragment.setDelegate(ProfileActivity.this);\n    presentFragment(fragment);\n  }\n else   if (id == edit_contact) {\n    Bundle args=new Bundle();\n    args.putInt(\"user_id\",user_id);\n    presentFragment(new ContactAddActivity(args));\n  }\n else   if (id == delete_contact) {\n    final TLRPC.User user=getMessagesController().getUser(user_id);\n    if (user == null || getParentActivity() == null) {\n      return;\n    }\n    AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n    builder.setTitle(LocaleController.getString(\"DeleteContact\",R.string.DeleteContact));\n    builder.setMessage(LocaleController.getString(\"AreYouSureDeleteContact\",R.string.AreYouSureDeleteContact));\n    builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n      ArrayList<TLRPC.User> arrayList=new ArrayList<>();\n      arrayList.add(user);\n      getContactsController().deleteContact(arrayList);\n    }\n);\n    builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n    AlertDialog dialog=builder.create();\n    showDialog(dialog);\n    TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n    if (button != null) {\n      button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n    }\n  }\n else   if (id == leave_group) {\n    leaveChatPressed();\n  }\n else   if (id == edit_channel) {\n    Bundle args=new Bundle();\n    args.putInt(\"chat_id\",chat_id);\n    ChatEditActivity fragment=new ChatEditActivity(args);\n    fragment.setInfo(chatInfo);\n    presentFragment(fragment);\n  }\n else   if (id == invite_to_group) {\n    final TLRPC.User user=getMessagesController().getUser(user_id);\n    if (user == null) {\n      return;\n    }\n    Bundle args=new Bundle();\n    args.putBoolean(\"onlySelect\",true);\n    args.putInt(\"dialogsType\",2);\n    args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n    DialogsActivity fragment=new DialogsActivity(args);\n    fragment.setDelegate((fragment1,dids,message,param) -> {\n      long did=dids.get(0);\n      Bundle args1=new Bundle();\n      args1.putBoolean(\"scrollToTopOnResume\",true);\n      args1.putInt(\"chat_id\",-(int)did);\n      if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n        return;\n      }\n      getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n      getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n      getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n      presentFragment(new ChatActivity(args1),true);\n      removeSelfFromStack();\n    }\n);\n    presentFragment(fragment);\n  }\n else   if (id == share) {\n    try {\n      String text=null;\n      if (user_id != 0) {\n        TLRPC.User user=getMessagesController().getUser(user_id);\n        if (user == null) {\n          return;\n        }\n        if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n          text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n        }\n else {\n          text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n        }\n      }\n else       if (chat_id != 0) {\n        TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n        if (chat == null) {\n          return;\n        }\n        if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n          text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n        }\n else {\n          text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n        }\n      }\n      if (TextUtils.isEmpty(text)) {\n        return;\n      }\n      Intent intent=new Intent(Intent.ACTION_SEND);\n      intent.setType(\"text/plain\");\n      intent.putExtra(Intent.EXTRA_TEXT,text);\n      startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n    }\n catch (    Exception e) {\n      FileLog.e(e);\n    }\n  }\n else   if (id == add_shortcut) {\n    try {\n      long did;\n      if (currentEncryptedChat != null) {\n        did=((long)currentEncryptedChat.id) << 32;\n      }\n else       if (user_id != 0) {\n        did=user_id;\n      }\n else       if (chat_id != 0) {\n        did=-chat_id;\n      }\n else {\n        return;\n      }\n      getMediaDataController().installShortcut(did);\n    }\n catch (    Exception e) {\n      FileLog.e(e);\n    }\n  }\n else   if (id == call_item || id == video_call_item) {\n    TLRPC.User user=getMessagesController().getUser(user_id);\n    if (user != null) {\n      VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n    }\n  }\n else   if (id == search_members) {\n    Bundle args=new Bundle();\n    args.putInt(\"chat_id\",chat_id);\n    args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n    args.putBoolean(\"open_search\",true);\n    ChatUsersActivity fragment=new ChatUsersActivity(args);\n    fragment.setInfo(chatInfo);\n    presentFragment(fragment);\n  }\n else   if (id == add_member) {\n    openAddMember();\n  }\n else   if (id == statistics) {\n    TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n    Bundle args=new Bundle();\n    args.putInt(\"chat_id\",chat_id);\n    args.putBoolean(\"is_megagroup\",chat.megagroup);\n    StatisticActivity fragment=new StatisticActivity(args);\n    presentFragment(fragment);\n  }\n else   if (id == view_discussion) {\n    openDiscussion();\n  }\n else   if (id == start_secret_chat) {\n    AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n    builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n    builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n    builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n      creatingChat=true;\n      getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n    }\n);\n    builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n    showDialog(builder.create());\n  }\n else   if (id == gallery_menu_save) {\n    if (getParentActivity() == null) {\n      return;\n    }\n    if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n      getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n      return;\n    }\n    ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n    if (location == null) {\n      return;\n    }\n    final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n    File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n    if (f.exists()) {\n      MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n        if (getParentActivity() == null) {\n          return;\n        }\n        BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n      }\n);\n    }\n  }\n else   if (id == edit_name) {\n    presentFragment(new ChangeNameActivity());\n  }\n else   if (id == logout) {\n    presentFragment(new LogoutActivity());\n  }\n else   if (id == set_as_main) {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (photo == null) {\n      return;\n    }\n    avatarsViewPager.startMovePhotoToBegin(position);\n    TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n    req.id=new TLRPC.TL_inputPhoto();\n    req.id.id=photo.id;\n    req.id.access_hash=photo.access_hash;\n    req.id.file_reference=photo.file_reference;\n    UserConfig userConfig=getUserConfig();\n    getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n      avatarsViewPager.finishSettingMainPhoto();\n      if (response instanceof TLRPC.TL_photos_photo) {\n        TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n        getMessagesController().putUsers(photos_photo.users,false);\n        TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n        if (photos_photo.photo instanceof TLRPC.TL_photo) {\n          avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n          if (user != null) {\n            user.photo.photo_id=photos_photo.photo.id;\n            userConfig.setCurrentUser(user);\n            userConfig.saveConfig(true);\n          }\n        }\n      }\n    }\n));\n    undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n    TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n    TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n    if (user != null) {\n      TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n      user.photo.photo_id=photo.id;\n      user.photo.photo_small=smallSize.location;\n      user.photo.photo_big=bigSize.location;\n      userConfig.setCurrentUser(user);\n      userConfig.saveConfig(true);\n      NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n      updateProfileData();\n    }\n    avatarsViewPager.commitMoveToBegin();\n  }\n else   if (id == edit_avatar) {\n    int position=avatarsViewPager.getRealPosition();\n    ImageLocation location=avatarsViewPager.getImageLocation(position);\n    if (location == null) {\n      return;\n    }\n    File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n    boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n    String thumb;\n    if (isVideo) {\n      ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n      thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n    }\n else {\n      thumb=null;\n    }\n    imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n  }\n else   if (id == delete_avatar) {\n    AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n    ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n    if (location == null) {\n      return;\n    }\n    if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n      builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n      builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n    }\n else {\n      builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n      builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n    }\n    builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n      int position=avatarsViewPager.getRealPosition();\n      TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n      if (avatarsViewPager.getRealCount() == 1) {\n        setForegroundImage(true);\n      }\n      if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n        getMessagesController().deleteUserPhoto(null);\n      }\n else {\n        TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n        inputPhoto.id=photo.id;\n        inputPhoto.access_hash=photo.access_hash;\n        inputPhoto.file_reference=photo.file_reference;\n        if (inputPhoto.file_reference == null) {\n          inputPhoto.file_reference=new byte[0];\n        }\n        getMessagesController().deleteUserPhoto(inputPhoto);\n        getMessagesStorage().clearUserPhoto(user_id,photo.id);\n      }\n      if (avatarsViewPager.removePhotoAtIndex(position)) {\n        avatarsViewPager.setVisibility(View.GONE);\n        avatarImage.setForegroundAlpha(1f);\n        avatarContainer.setVisibility(View.VISIBLE);\n        doNotSetForeground=true;\n        final View view=layoutManager.findViewByPosition(0);\n        if (view != null) {\n          listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n        }\n      }\n    }\n);\n    builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n    AlertDialog alertDialog=builder.create();\n    showDialog(alertDialog);\n    TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n    if (button != null) {\n      button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n    }\n  }\n else   if (id == add_photo) {\n    onWriteButtonClick();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 2347,
      "astHeight" : 41
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 1583,
        "startColumnNumber" : 32,
        "endLineNumber" : 1583,
        "endColumnNumber" : 145
      },
      "nodeContext" : "text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "String",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 1585,
      "startColumnNumber" : 39,
      "endLineNumber" : 1585,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 1585,
        "startColumnNumber" : 39,
        "endLineNumber" : 1585,
        "endColumnNumber" : 124
      },
      "nodeContext" : "String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 1585,
        "startColumnNumber" : 32,
        "endLineNumber" : 1585,
        "endColumnNumber" : 124
      },
      "nodeContext" : "text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 1585,
        "startColumnNumber" : 32,
        "endLineNumber" : 1585,
        "endColumnNumber" : 125
      },
      "nodeContext" : "text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 157,
        "startLineNumber" : 1584,
        "startColumnNumber" : 35,
        "endLineNumber" : 1586,
        "endColumnNumber" : 29
      },
      "nodeContext" : "{\n  text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 400,
        "startLineNumber" : 1582,
        "startColumnNumber" : 28,
        "endLineNumber" : 1586,
        "endColumnNumber" : 29
      },
      "nodeContext" : "if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n  text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n}\n else {\n  text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 49,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 662,
        "startLineNumber" : 1577,
        "startColumnNumber" : 49,
        "endLineNumber" : 1587,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  if (chat == null) {\n    return;\n  }\n  if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n    text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n  }\n else {\n    text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 680,
        "startLineNumber" : 1577,
        "startColumnNumber" : 31,
        "endLineNumber" : 1587,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (chat_id != 0) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  if (chat == null) {\n    return;\n  }\n  if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n    text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n  }\n else {\n    text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 72,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1384,
        "startLineNumber" : 1567,
        "startColumnNumber" : 24,
        "endLineNumber" : 1587,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (user_id != 0) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n    text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n  }\n else {\n    text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n  }\n}\n else if (chat_id != 0) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  if (chat == null) {\n    return;\n  }\n  if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n    text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n  }\n else {\n    text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 148,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1927,
        "startLineNumber" : 1565,
        "startColumnNumber" : 24,
        "endLineNumber" : 1595,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  String text=null;\n  if (user_id != 0) {\n    TLRPC.User user=getMessagesController().getUser(user_id);\n    if (user == null) {\n      return;\n    }\n    if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n      text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n    }\n else {\n      text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n    }\n  }\n else   if (chat_id != 0) {\n    TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n    if (chat == null) {\n      return;\n    }\n    if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n      text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n    }\n else {\n      text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n    }\n  }\n  if (TextUtils.isEmpty(text)) {\n    return;\n  }\n  Intent intent=new Intent(Intent.ACTION_SEND);\n  intent.setType(\"text/plain\");\n  intent.putExtra(Intent.EXTRA_TEXT,text);\n  startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 203,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2013,
        "startLineNumber" : 1565,
        "startColumnNumber" : 20,
        "endLineNumber" : 1597,
        "endColumnNumber" : 21
      },
      "nodeContext" : "try {\n  String text=null;\n  if (user_id != 0) {\n    TLRPC.User user=getMessagesController().getUser(user_id);\n    if (user == null) {\n      return;\n    }\n    if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n      text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n    }\n else {\n      text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n    }\n  }\n else   if (chat_id != 0) {\n    TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n    if (chat == null) {\n      return;\n    }\n    if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n      text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n    }\n else {\n      text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n    }\n  }\n  if (TextUtils.isEmpty(text)) {\n    return;\n  }\n  Intent intent=new Intent(Intent.ACTION_SEND);\n  intent.setType(\"text/plain\");\n  intent.putExtra(Intent.EXTRA_TEXT,text);\n  startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n}\n catch (Exception e) {\n  FileLog.e(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 215,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2053,
        "startLineNumber" : 1564,
        "startColumnNumber" : 40,
        "endLineNumber" : 1598,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 216,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 14202,
        "startLineNumber" : 1564,
        "startColumnNumber" : 23,
        "endLineNumber" : 1788,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (id == share) {\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == add_shortcut) {\n  try {\n    long did;\n    if (currentEncryptedChat != null) {\n      did=((long)currentEncryptedChat.id) << 32;\n    }\n else     if (user_id != 0) {\n      did=user_id;\n    }\n else     if (chat_id != 0) {\n      did=-chat_id;\n    }\n else {\n      return;\n    }\n    getMediaDataController().installShortcut(did);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == call_item || id == video_call_item) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user != null) {\n    VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n  }\n}\n else if (id == search_members) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n  args.putBoolean(\"open_search\",true);\n  ChatUsersActivity fragment=new ChatUsersActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == add_member) {\n  openAddMember();\n}\n else if (id == statistics) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putBoolean(\"is_megagroup\",chat.megagroup);\n  StatisticActivity fragment=new StatisticActivity(args);\n  presentFragment(fragment);\n}\n else if (id == view_discussion) {\n  openDiscussion();\n}\n else if (id == start_secret_chat) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n  builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n  builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n    creatingChat=true;\n    getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  showDialog(builder.create());\n}\n else if (id == gallery_menu_save) {\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n    getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n    return;\n  }\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n  if (f.exists()) {\n    MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n      if (getParentActivity() == null) {\n        return;\n      }\n      BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n    }\n);\n  }\n}\n else if (id == edit_name) {\n  presentFragment(new ChangeNameActivity());\n}\n else if (id == logout) {\n  presentFragment(new LogoutActivity());\n}\n else if (id == set_as_main) {\n  int position=avatarsViewPager.getRealPosition();\n  TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n  if (photo == null) {\n    return;\n  }\n  avatarsViewPager.startMovePhotoToBegin(position);\n  TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n  req.id=new TLRPC.TL_inputPhoto();\n  req.id.id=photo.id;\n  req.id.access_hash=photo.access_hash;\n  req.id.file_reference=photo.file_reference;\n  UserConfig userConfig=getUserConfig();\n  getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n    avatarsViewPager.finishSettingMainPhoto();\n    if (response instanceof TLRPC.TL_photos_photo) {\n      TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n      getMessagesController().putUsers(photos_photo.users,false);\n      TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n      if (photos_photo.photo instanceof TLRPC.TL_photo) {\n        avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n        if (user != null) {\n          user.photo.photo_id=photos_photo.photo.id;\n          userConfig.setCurrentUser(user);\n          userConfig.saveConfig(true);\n        }\n      }\n    }\n  }\n));\n  undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n  TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n  TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n  if (user != null) {\n    TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n    user.photo.photo_id=photo.id;\n    user.photo.photo_small=smallSize.location;\n    user.photo.photo_big=bigSize.location;\n    userConfig.setCurrentUser(user);\n    userConfig.saveConfig(true);\n    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n    updateProfileData();\n  }\n  avatarsViewPager.commitMoveToBegin();\n}\n else if (id == edit_avatar) {\n  int position=avatarsViewPager.getRealPosition();\n  ImageLocation location=avatarsViewPager.getImageLocation(position);\n  if (location == null) {\n    return;\n  }\n  File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n  boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  String thumb;\n  if (isVideo) {\n    ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n    thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n  }\n else {\n    thumb=null;\n  }\n  imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n}\n else if (id == delete_avatar) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n  }\n else {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n  }\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (avatarsViewPager.getRealCount() == 1) {\n      setForegroundImage(true);\n    }\n    if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n      getMessagesController().deleteUserPhoto(null);\n    }\n else {\n      TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n      inputPhoto.id=photo.id;\n      inputPhoto.access_hash=photo.access_hash;\n      inputPhoto.file_reference=photo.file_reference;\n      if (inputPhoto.file_reference == null) {\n        inputPhoto.file_reference=new byte[0];\n      }\n      getMessagesController().deleteUserPhoto(inputPhoto);\n      getMessagesStorage().clearUserPhoto(user_id,photo.id);\n    }\n    if (avatarsViewPager.removePhotoAtIndex(position)) {\n      avatarsViewPager.setVisibility(View.GONE);\n      avatarImage.setForegroundAlpha(1f);\n      avatarContainer.setVisibility(View.VISIBLE);\n      doNotSetForeground=true;\n      final View view=layoutManager.findViewByPosition(0);\n      if (view != null) {\n        listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n      }\n    }\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog alertDialog=builder.create();\n  showDialog(alertDialog);\n  TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == add_photo) {\n  onWriteButtonClick();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1484,
      "astHeight" : 30
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 15852,
        "startLineNumber" : 1538,
        "startColumnNumber" : 23,
        "endLineNumber" : 1788,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (id == invite_to_group) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",2);\n  args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate((fragment1,dids,message,param) -> {\n    long did=dids.get(0);\n    Bundle args1=new Bundle();\n    args1.putBoolean(\"scrollToTopOnResume\",true);\n    args1.putInt(\"chat_id\",-(int)did);\n    if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n      return;\n    }\n    getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n    getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n    getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n    presentFragment(new ChatActivity(args1),true);\n    removeSelfFromStack();\n  }\n);\n  presentFragment(fragment);\n}\n else if (id == share) {\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == add_shortcut) {\n  try {\n    long did;\n    if (currentEncryptedChat != null) {\n      did=((long)currentEncryptedChat.id) << 32;\n    }\n else     if (user_id != 0) {\n      did=user_id;\n    }\n else     if (chat_id != 0) {\n      did=-chat_id;\n    }\n else {\n      return;\n    }\n    getMediaDataController().installShortcut(did);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == call_item || id == video_call_item) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user != null) {\n    VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n  }\n}\n else if (id == search_members) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n  args.putBoolean(\"open_search\",true);\n  ChatUsersActivity fragment=new ChatUsersActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == add_member) {\n  openAddMember();\n}\n else if (id == statistics) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putBoolean(\"is_megagroup\",chat.megagroup);\n  StatisticActivity fragment=new StatisticActivity(args);\n  presentFragment(fragment);\n}\n else if (id == view_discussion) {\n  openDiscussion();\n}\n else if (id == start_secret_chat) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n  builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n  builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n    creatingChat=true;\n    getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  showDialog(builder.create());\n}\n else if (id == gallery_menu_save) {\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n    getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n    return;\n  }\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n  if (f.exists()) {\n    MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n      if (getParentActivity() == null) {\n        return;\n      }\n      BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n    }\n);\n  }\n}\n else if (id == edit_name) {\n  presentFragment(new ChangeNameActivity());\n}\n else if (id == logout) {\n  presentFragment(new LogoutActivity());\n}\n else if (id == set_as_main) {\n  int position=avatarsViewPager.getRealPosition();\n  TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n  if (photo == null) {\n    return;\n  }\n  avatarsViewPager.startMovePhotoToBegin(position);\n  TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n  req.id=new TLRPC.TL_inputPhoto();\n  req.id.id=photo.id;\n  req.id.access_hash=photo.access_hash;\n  req.id.file_reference=photo.file_reference;\n  UserConfig userConfig=getUserConfig();\n  getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n    avatarsViewPager.finishSettingMainPhoto();\n    if (response instanceof TLRPC.TL_photos_photo) {\n      TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n      getMessagesController().putUsers(photos_photo.users,false);\n      TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n      if (photos_photo.photo instanceof TLRPC.TL_photo) {\n        avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n        if (user != null) {\n          user.photo.photo_id=photos_photo.photo.id;\n          userConfig.setCurrentUser(user);\n          userConfig.saveConfig(true);\n        }\n      }\n    }\n  }\n));\n  undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n  TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n  TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n  if (user != null) {\n    TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n    user.photo.photo_id=photo.id;\n    user.photo.photo_small=smallSize.location;\n    user.photo.photo_big=bigSize.location;\n    userConfig.setCurrentUser(user);\n    userConfig.saveConfig(true);\n    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n    updateProfileData();\n  }\n  avatarsViewPager.commitMoveToBegin();\n}\n else if (id == edit_avatar) {\n  int position=avatarsViewPager.getRealPosition();\n  ImageLocation location=avatarsViewPager.getImageLocation(position);\n  if (location == null) {\n    return;\n  }\n  File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n  boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  String thumb;\n  if (isVideo) {\n    ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n    thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n  }\n else {\n    thumb=null;\n  }\n  imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n}\n else if (id == delete_avatar) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n  }\n else {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n  }\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (avatarsViewPager.getRealCount() == 1) {\n      setForegroundImage(true);\n    }\n    if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n      getMessagesController().deleteUserPhoto(null);\n    }\n else {\n      TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n      inputPhoto.id=photo.id;\n      inputPhoto.access_hash=photo.access_hash;\n      inputPhoto.file_reference=photo.file_reference;\n      if (inputPhoto.file_reference == null) {\n        inputPhoto.file_reference=new byte[0];\n      }\n      getMessagesController().deleteUserPhoto(inputPhoto);\n      getMessagesStorage().clearUserPhoto(user_id,photo.id);\n    }\n    if (avatarsViewPager.removePhotoAtIndex(position)) {\n      avatarsViewPager.setVisibility(View.GONE);\n      avatarImage.setForegroundAlpha(1f);\n      avatarContainer.setVisibility(View.VISIBLE);\n      doNotSetForeground=true;\n      final View view=layoutManager.findViewByPosition(0);\n      if (view != null) {\n        listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n      }\n    }\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog alertDialog=builder.create();\n  showDialog(alertDialog);\n  TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == add_photo) {\n  onWriteButtonClick();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1660,
      "astHeight" : 31
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 16173,
        "startLineNumber" : 1532,
        "startColumnNumber" : 23,
        "endLineNumber" : 1788,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (id == edit_channel) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  ChatEditActivity fragment=new ChatEditActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == invite_to_group) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",2);\n  args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate((fragment1,dids,message,param) -> {\n    long did=dids.get(0);\n    Bundle args1=new Bundle();\n    args1.putBoolean(\"scrollToTopOnResume\",true);\n    args1.putInt(\"chat_id\",-(int)did);\n    if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n      return;\n    }\n    getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n    getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n    getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n    presentFragment(new ChatActivity(args1),true);\n    removeSelfFromStack();\n  }\n);\n  presentFragment(fragment);\n}\n else if (id == share) {\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == add_shortcut) {\n  try {\n    long did;\n    if (currentEncryptedChat != null) {\n      did=((long)currentEncryptedChat.id) << 32;\n    }\n else     if (user_id != 0) {\n      did=user_id;\n    }\n else     if (chat_id != 0) {\n      did=-chat_id;\n    }\n else {\n      return;\n    }\n    getMediaDataController().installShortcut(did);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == call_item || id == video_call_item) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user != null) {\n    VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n  }\n}\n else if (id == search_members) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n  args.putBoolean(\"open_search\",true);\n  ChatUsersActivity fragment=new ChatUsersActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == add_member) {\n  openAddMember();\n}\n else if (id == statistics) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putBoolean(\"is_megagroup\",chat.megagroup);\n  StatisticActivity fragment=new StatisticActivity(args);\n  presentFragment(fragment);\n}\n else if (id == view_discussion) {\n  openDiscussion();\n}\n else if (id == start_secret_chat) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n  builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n  builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n    creatingChat=true;\n    getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  showDialog(builder.create());\n}\n else if (id == gallery_menu_save) {\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n    getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n    return;\n  }\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n  if (f.exists()) {\n    MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n      if (getParentActivity() == null) {\n        return;\n      }\n      BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n    }\n);\n  }\n}\n else if (id == edit_name) {\n  presentFragment(new ChangeNameActivity());\n}\n else if (id == logout) {\n  presentFragment(new LogoutActivity());\n}\n else if (id == set_as_main) {\n  int position=avatarsViewPager.getRealPosition();\n  TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n  if (photo == null) {\n    return;\n  }\n  avatarsViewPager.startMovePhotoToBegin(position);\n  TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n  req.id=new TLRPC.TL_inputPhoto();\n  req.id.id=photo.id;\n  req.id.access_hash=photo.access_hash;\n  req.id.file_reference=photo.file_reference;\n  UserConfig userConfig=getUserConfig();\n  getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n    avatarsViewPager.finishSettingMainPhoto();\n    if (response instanceof TLRPC.TL_photos_photo) {\n      TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n      getMessagesController().putUsers(photos_photo.users,false);\n      TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n      if (photos_photo.photo instanceof TLRPC.TL_photo) {\n        avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n        if (user != null) {\n          user.photo.photo_id=photos_photo.photo.id;\n          userConfig.setCurrentUser(user);\n          userConfig.saveConfig(true);\n        }\n      }\n    }\n  }\n));\n  undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n  TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n  TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n  if (user != null) {\n    TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n    user.photo.photo_id=photo.id;\n    user.photo.photo_small=smallSize.location;\n    user.photo.photo_big=bigSize.location;\n    userConfig.setCurrentUser(user);\n    userConfig.saveConfig(true);\n    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n    updateProfileData();\n  }\n  avatarsViewPager.commitMoveToBegin();\n}\n else if (id == edit_avatar) {\n  int position=avatarsViewPager.getRealPosition();\n  ImageLocation location=avatarsViewPager.getImageLocation(position);\n  if (location == null) {\n    return;\n  }\n  File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n  boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  String thumb;\n  if (isVideo) {\n    ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n    thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n  }\n else {\n    thumb=null;\n  }\n  imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n}\n else if (id == delete_avatar) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n  }\n else {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n  }\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (avatarsViewPager.getRealCount() == 1) {\n      setForegroundImage(true);\n    }\n    if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n      getMessagesController().deleteUserPhoto(null);\n    }\n else {\n      TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n      inputPhoto.id=photo.id;\n      inputPhoto.access_hash=photo.access_hash;\n      inputPhoto.file_reference=photo.file_reference;\n      if (inputPhoto.file_reference == null) {\n        inputPhoto.file_reference=new byte[0];\n      }\n      getMessagesController().deleteUserPhoto(inputPhoto);\n      getMessagesStorage().clearUserPhoto(user_id,photo.id);\n    }\n    if (avatarsViewPager.removePhotoAtIndex(position)) {\n      avatarsViewPager.setVisibility(View.GONE);\n      avatarImage.setForegroundAlpha(1f);\n      avatarContainer.setVisibility(View.VISIBLE);\n      doNotSetForeground=true;\n      final View view=layoutManager.findViewByPosition(0);\n      if (view != null) {\n        listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n      }\n    }\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog alertDialog=builder.create();\n  showDialog(alertDialog);\n  TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == add_photo) {\n  onWriteButtonClick();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1697,
      "astHeight" : 32
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 16261,
        "startLineNumber" : 1530,
        "startColumnNumber" : 23,
        "endLineNumber" : 1788,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (id == leave_group) {\n  leaveChatPressed();\n}\n else if (id == edit_channel) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  ChatEditActivity fragment=new ChatEditActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == invite_to_group) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",2);\n  args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate((fragment1,dids,message,param) -> {\n    long did=dids.get(0);\n    Bundle args1=new Bundle();\n    args1.putBoolean(\"scrollToTopOnResume\",true);\n    args1.putInt(\"chat_id\",-(int)did);\n    if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n      return;\n    }\n    getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n    getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n    getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n    presentFragment(new ChatActivity(args1),true);\n    removeSelfFromStack();\n  }\n);\n  presentFragment(fragment);\n}\n else if (id == share) {\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == add_shortcut) {\n  try {\n    long did;\n    if (currentEncryptedChat != null) {\n      did=((long)currentEncryptedChat.id) << 32;\n    }\n else     if (user_id != 0) {\n      did=user_id;\n    }\n else     if (chat_id != 0) {\n      did=-chat_id;\n    }\n else {\n      return;\n    }\n    getMediaDataController().installShortcut(did);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == call_item || id == video_call_item) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user != null) {\n    VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n  }\n}\n else if (id == search_members) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n  args.putBoolean(\"open_search\",true);\n  ChatUsersActivity fragment=new ChatUsersActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == add_member) {\n  openAddMember();\n}\n else if (id == statistics) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putBoolean(\"is_megagroup\",chat.megagroup);\n  StatisticActivity fragment=new StatisticActivity(args);\n  presentFragment(fragment);\n}\n else if (id == view_discussion) {\n  openDiscussion();\n}\n else if (id == start_secret_chat) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n  builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n  builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n    creatingChat=true;\n    getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  showDialog(builder.create());\n}\n else if (id == gallery_menu_save) {\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n    getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n    return;\n  }\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n  if (f.exists()) {\n    MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n      if (getParentActivity() == null) {\n        return;\n      }\n      BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n    }\n);\n  }\n}\n else if (id == edit_name) {\n  presentFragment(new ChangeNameActivity());\n}\n else if (id == logout) {\n  presentFragment(new LogoutActivity());\n}\n else if (id == set_as_main) {\n  int position=avatarsViewPager.getRealPosition();\n  TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n  if (photo == null) {\n    return;\n  }\n  avatarsViewPager.startMovePhotoToBegin(position);\n  TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n  req.id=new TLRPC.TL_inputPhoto();\n  req.id.id=photo.id;\n  req.id.access_hash=photo.access_hash;\n  req.id.file_reference=photo.file_reference;\n  UserConfig userConfig=getUserConfig();\n  getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n    avatarsViewPager.finishSettingMainPhoto();\n    if (response instanceof TLRPC.TL_photos_photo) {\n      TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n      getMessagesController().putUsers(photos_photo.users,false);\n      TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n      if (photos_photo.photo instanceof TLRPC.TL_photo) {\n        avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n        if (user != null) {\n          user.photo.photo_id=photos_photo.photo.id;\n          userConfig.setCurrentUser(user);\n          userConfig.saveConfig(true);\n        }\n      }\n    }\n  }\n));\n  undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n  TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n  TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n  if (user != null) {\n    TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n    user.photo.photo_id=photo.id;\n    user.photo.photo_small=smallSize.location;\n    user.photo.photo_big=bigSize.location;\n    userConfig.setCurrentUser(user);\n    userConfig.saveConfig(true);\n    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n    updateProfileData();\n  }\n  avatarsViewPager.commitMoveToBegin();\n}\n else if (id == edit_avatar) {\n  int position=avatarsViewPager.getRealPosition();\n  ImageLocation location=avatarsViewPager.getImageLocation(position);\n  if (location == null) {\n    return;\n  }\n  File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n  boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  String thumb;\n  if (isVideo) {\n    ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n    thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n  }\n else {\n    thumb=null;\n  }\n  imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n}\n else if (id == delete_avatar) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n  }\n else {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n  }\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (avatarsViewPager.getRealCount() == 1) {\n      setForegroundImage(true);\n    }\n    if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n      getMessagesController().deleteUserPhoto(null);\n    }\n else {\n      TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n      inputPhoto.id=photo.id;\n      inputPhoto.access_hash=photo.access_hash;\n      inputPhoto.file_reference=photo.file_reference;\n      if (inputPhoto.file_reference == null) {\n        inputPhoto.file_reference=new byte[0];\n      }\n      getMessagesController().deleteUserPhoto(inputPhoto);\n      getMessagesStorage().clearUserPhoto(user_id,photo.id);\n    }\n    if (avatarsViewPager.removePhotoAtIndex(position)) {\n      avatarsViewPager.setVisibility(View.GONE);\n      avatarImage.setForegroundAlpha(1f);\n      avatarContainer.setVisibility(View.VISIBLE);\n      doNotSetForeground=true;\n      final View view=layoutManager.findViewByPosition(0);\n      if (view != null) {\n        listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n      }\n    }\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog alertDialog=builder.create();\n  showDialog(alertDialog);\n  TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == add_photo) {\n  onWriteButtonClick();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1705,
      "astHeight" : 33
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 17660,
        "startLineNumber" : 1510,
        "startColumnNumber" : 23,
        "endLineNumber" : 1788,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (id == delete_contact) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null || getParentActivity() == null) {\n    return;\n  }\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"DeleteContact\",R.string.DeleteContact));\n  builder.setMessage(LocaleController.getString(\"AreYouSureDeleteContact\",R.string.AreYouSureDeleteContact));\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    ArrayList<TLRPC.User> arrayList=new ArrayList<>();\n    arrayList.add(user);\n    getContactsController().deleteContact(arrayList);\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog dialog=builder.create();\n  showDialog(dialog);\n  TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == leave_group) {\n  leaveChatPressed();\n}\n else if (id == edit_channel) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  ChatEditActivity fragment=new ChatEditActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == invite_to_group) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",2);\n  args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate((fragment1,dids,message,param) -> {\n    long did=dids.get(0);\n    Bundle args1=new Bundle();\n    args1.putBoolean(\"scrollToTopOnResume\",true);\n    args1.putInt(\"chat_id\",-(int)did);\n    if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n      return;\n    }\n    getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n    getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n    getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n    presentFragment(new ChatActivity(args1),true);\n    removeSelfFromStack();\n  }\n);\n  presentFragment(fragment);\n}\n else if (id == share) {\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == add_shortcut) {\n  try {\n    long did;\n    if (currentEncryptedChat != null) {\n      did=((long)currentEncryptedChat.id) << 32;\n    }\n else     if (user_id != 0) {\n      did=user_id;\n    }\n else     if (chat_id != 0) {\n      did=-chat_id;\n    }\n else {\n      return;\n    }\n    getMediaDataController().installShortcut(did);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == call_item || id == video_call_item) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user != null) {\n    VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n  }\n}\n else if (id == search_members) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n  args.putBoolean(\"open_search\",true);\n  ChatUsersActivity fragment=new ChatUsersActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == add_member) {\n  openAddMember();\n}\n else if (id == statistics) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putBoolean(\"is_megagroup\",chat.megagroup);\n  StatisticActivity fragment=new StatisticActivity(args);\n  presentFragment(fragment);\n}\n else if (id == view_discussion) {\n  openDiscussion();\n}\n else if (id == start_secret_chat) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n  builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n  builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n    creatingChat=true;\n    getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  showDialog(builder.create());\n}\n else if (id == gallery_menu_save) {\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n    getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n    return;\n  }\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n  if (f.exists()) {\n    MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n      if (getParentActivity() == null) {\n        return;\n      }\n      BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n    }\n);\n  }\n}\n else if (id == edit_name) {\n  presentFragment(new ChangeNameActivity());\n}\n else if (id == logout) {\n  presentFragment(new LogoutActivity());\n}\n else if (id == set_as_main) {\n  int position=avatarsViewPager.getRealPosition();\n  TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n  if (photo == null) {\n    return;\n  }\n  avatarsViewPager.startMovePhotoToBegin(position);\n  TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n  req.id=new TLRPC.TL_inputPhoto();\n  req.id.id=photo.id;\n  req.id.access_hash=photo.access_hash;\n  req.id.file_reference=photo.file_reference;\n  UserConfig userConfig=getUserConfig();\n  getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n    avatarsViewPager.finishSettingMainPhoto();\n    if (response instanceof TLRPC.TL_photos_photo) {\n      TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n      getMessagesController().putUsers(photos_photo.users,false);\n      TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n      if (photos_photo.photo instanceof TLRPC.TL_photo) {\n        avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n        if (user != null) {\n          user.photo.photo_id=photos_photo.photo.id;\n          userConfig.setCurrentUser(user);\n          userConfig.saveConfig(true);\n        }\n      }\n    }\n  }\n));\n  undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n  TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n  TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n  if (user != null) {\n    TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n    user.photo.photo_id=photo.id;\n    user.photo.photo_small=smallSize.location;\n    user.photo.photo_big=bigSize.location;\n    userConfig.setCurrentUser(user);\n    userConfig.saveConfig(true);\n    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n    updateProfileData();\n  }\n  avatarsViewPager.commitMoveToBegin();\n}\n else if (id == edit_avatar) {\n  int position=avatarsViewPager.getRealPosition();\n  ImageLocation location=avatarsViewPager.getImageLocation(position);\n  if (location == null) {\n    return;\n  }\n  File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n  boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  String thumb;\n  if (isVideo) {\n    ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n    thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n  }\n else {\n    thumb=null;\n  }\n  imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n}\n else if (id == delete_avatar) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n  }\n else {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n  }\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (avatarsViewPager.getRealCount() == 1) {\n      setForegroundImage(true);\n    }\n    if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n      getMessagesController().deleteUserPhoto(null);\n    }\n else {\n      TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n      inputPhoto.id=photo.id;\n      inputPhoto.access_hash=photo.access_hash;\n      inputPhoto.file_reference=photo.file_reference;\n      if (inputPhoto.file_reference == null) {\n        inputPhoto.file_reference=new byte[0];\n      }\n      getMessagesController().deleteUserPhoto(inputPhoto);\n      getMessagesStorage().clearUserPhoto(user_id,photo.id);\n    }\n    if (avatarsViewPager.removePhotoAtIndex(position)) {\n      avatarsViewPager.setVisibility(View.GONE);\n      avatarImage.setForegroundAlpha(1f);\n      avatarContainer.setVisibility(View.VISIBLE);\n      doNotSetForeground=true;\n      final View view=layoutManager.findViewByPosition(0);\n      if (view != null) {\n        listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n      }\n    }\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog alertDialog=builder.create();\n  showDialog(alertDialog);\n  TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == add_photo) {\n  onWriteButtonClick();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1873,
      "astHeight" : 34
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 17877,
        "startLineNumber" : 1506,
        "startColumnNumber" : 23,
        "endLineNumber" : 1788,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (id == edit_contact) {\n  Bundle args=new Bundle();\n  args.putInt(\"user_id\",user_id);\n  presentFragment(new ContactAddActivity(args));\n}\n else if (id == delete_contact) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null || getParentActivity() == null) {\n    return;\n  }\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"DeleteContact\",R.string.DeleteContact));\n  builder.setMessage(LocaleController.getString(\"AreYouSureDeleteContact\",R.string.AreYouSureDeleteContact));\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    ArrayList<TLRPC.User> arrayList=new ArrayList<>();\n    arrayList.add(user);\n    getContactsController().deleteContact(arrayList);\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog dialog=builder.create();\n  showDialog(dialog);\n  TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == leave_group) {\n  leaveChatPressed();\n}\n else if (id == edit_channel) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  ChatEditActivity fragment=new ChatEditActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == invite_to_group) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",2);\n  args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate((fragment1,dids,message,param) -> {\n    long did=dids.get(0);\n    Bundle args1=new Bundle();\n    args1.putBoolean(\"scrollToTopOnResume\",true);\n    args1.putInt(\"chat_id\",-(int)did);\n    if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n      return;\n    }\n    getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n    getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n    getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n    presentFragment(new ChatActivity(args1),true);\n    removeSelfFromStack();\n  }\n);\n  presentFragment(fragment);\n}\n else if (id == share) {\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == add_shortcut) {\n  try {\n    long did;\n    if (currentEncryptedChat != null) {\n      did=((long)currentEncryptedChat.id) << 32;\n    }\n else     if (user_id != 0) {\n      did=user_id;\n    }\n else     if (chat_id != 0) {\n      did=-chat_id;\n    }\n else {\n      return;\n    }\n    getMediaDataController().installShortcut(did);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == call_item || id == video_call_item) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user != null) {\n    VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n  }\n}\n else if (id == search_members) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n  args.putBoolean(\"open_search\",true);\n  ChatUsersActivity fragment=new ChatUsersActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == add_member) {\n  openAddMember();\n}\n else if (id == statistics) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putBoolean(\"is_megagroup\",chat.megagroup);\n  StatisticActivity fragment=new StatisticActivity(args);\n  presentFragment(fragment);\n}\n else if (id == view_discussion) {\n  openDiscussion();\n}\n else if (id == start_secret_chat) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n  builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n  builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n    creatingChat=true;\n    getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  showDialog(builder.create());\n}\n else if (id == gallery_menu_save) {\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n    getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n    return;\n  }\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n  if (f.exists()) {\n    MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n      if (getParentActivity() == null) {\n        return;\n      }\n      BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n    }\n);\n  }\n}\n else if (id == edit_name) {\n  presentFragment(new ChangeNameActivity());\n}\n else if (id == logout) {\n  presentFragment(new LogoutActivity());\n}\n else if (id == set_as_main) {\n  int position=avatarsViewPager.getRealPosition();\n  TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n  if (photo == null) {\n    return;\n  }\n  avatarsViewPager.startMovePhotoToBegin(position);\n  TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n  req.id=new TLRPC.TL_inputPhoto();\n  req.id.id=photo.id;\n  req.id.access_hash=photo.access_hash;\n  req.id.file_reference=photo.file_reference;\n  UserConfig userConfig=getUserConfig();\n  getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n    avatarsViewPager.finishSettingMainPhoto();\n    if (response instanceof TLRPC.TL_photos_photo) {\n      TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n      getMessagesController().putUsers(photos_photo.users,false);\n      TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n      if (photos_photo.photo instanceof TLRPC.TL_photo) {\n        avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n        if (user != null) {\n          user.photo.photo_id=photos_photo.photo.id;\n          userConfig.setCurrentUser(user);\n          userConfig.saveConfig(true);\n        }\n      }\n    }\n  }\n));\n  undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n  TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n  TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n  if (user != null) {\n    TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n    user.photo.photo_id=photo.id;\n    user.photo.photo_small=smallSize.location;\n    user.photo.photo_big=bigSize.location;\n    userConfig.setCurrentUser(user);\n    userConfig.saveConfig(true);\n    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n    updateProfileData();\n  }\n  avatarsViewPager.commitMoveToBegin();\n}\n else if (id == edit_avatar) {\n  int position=avatarsViewPager.getRealPosition();\n  ImageLocation location=avatarsViewPager.getImageLocation(position);\n  if (location == null) {\n    return;\n  }\n  File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n  boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  String thumb;\n  if (isVideo) {\n    ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n    thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n  }\n else {\n    thumb=null;\n  }\n  imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n}\n else if (id == delete_avatar) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n  }\n else {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n  }\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (avatarsViewPager.getRealCount() == 1) {\n      setForegroundImage(true);\n    }\n    if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n      getMessagesController().deleteUserPhoto(null);\n    }\n else {\n      TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n      inputPhoto.id=photo.id;\n      inputPhoto.access_hash=photo.access_hash;\n      inputPhoto.file_reference=photo.file_reference;\n      if (inputPhoto.file_reference == null) {\n        inputPhoto.file_reference=new byte[0];\n      }\n      getMessagesController().deleteUserPhoto(inputPhoto);\n      getMessagesStorage().clearUserPhoto(user_id,photo.id);\n    }\n    if (avatarsViewPager.removePhotoAtIndex(position)) {\n      avatarsViewPager.setVisibility(View.GONE);\n      avatarImage.setForegroundAlpha(1f);\n      avatarContainer.setVisibility(View.VISIBLE);\n      doNotSetForeground=true;\n      final View view=layoutManager.findViewByPosition(0);\n      if (view != null) {\n        listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n      }\n    }\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog alertDialog=builder.create();\n  showDialog(alertDialog);\n  TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == add_photo) {\n  onWriteButtonClick();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1899,
      "astHeight" : 35
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 18551,
        "startLineNumber" : 1497,
        "startColumnNumber" : 23,
        "endLineNumber" : 1788,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (id == share_contact) {\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",3);\n  args.putString(\"selectAlertString\",LocaleController.getString(\"SendContactToText\",R.string.SendContactToText));\n  args.putString(\"selectAlertStringGroup\",LocaleController.getString(\"SendContactToGroupText\",R.string.SendContactToGroupText));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate(ProfileActivity.this);\n  presentFragment(fragment);\n}\n else if (id == edit_contact) {\n  Bundle args=new Bundle();\n  args.putInt(\"user_id\",user_id);\n  presentFragment(new ContactAddActivity(args));\n}\n else if (id == delete_contact) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null || getParentActivity() == null) {\n    return;\n  }\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"DeleteContact\",R.string.DeleteContact));\n  builder.setMessage(LocaleController.getString(\"AreYouSureDeleteContact\",R.string.AreYouSureDeleteContact));\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    ArrayList<TLRPC.User> arrayList=new ArrayList<>();\n    arrayList.add(user);\n    getContactsController().deleteContact(arrayList);\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog dialog=builder.create();\n  showDialog(dialog);\n  TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == leave_group) {\n  leaveChatPressed();\n}\n else if (id == edit_channel) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  ChatEditActivity fragment=new ChatEditActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == invite_to_group) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",2);\n  args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate((fragment1,dids,message,param) -> {\n    long did=dids.get(0);\n    Bundle args1=new Bundle();\n    args1.putBoolean(\"scrollToTopOnResume\",true);\n    args1.putInt(\"chat_id\",-(int)did);\n    if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n      return;\n    }\n    getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n    getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n    getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n    presentFragment(new ChatActivity(args1),true);\n    removeSelfFromStack();\n  }\n);\n  presentFragment(fragment);\n}\n else if (id == share) {\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == add_shortcut) {\n  try {\n    long did;\n    if (currentEncryptedChat != null) {\n      did=((long)currentEncryptedChat.id) << 32;\n    }\n else     if (user_id != 0) {\n      did=user_id;\n    }\n else     if (chat_id != 0) {\n      did=-chat_id;\n    }\n else {\n      return;\n    }\n    getMediaDataController().installShortcut(did);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == call_item || id == video_call_item) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user != null) {\n    VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n  }\n}\n else if (id == search_members) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n  args.putBoolean(\"open_search\",true);\n  ChatUsersActivity fragment=new ChatUsersActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == add_member) {\n  openAddMember();\n}\n else if (id == statistics) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putBoolean(\"is_megagroup\",chat.megagroup);\n  StatisticActivity fragment=new StatisticActivity(args);\n  presentFragment(fragment);\n}\n else if (id == view_discussion) {\n  openDiscussion();\n}\n else if (id == start_secret_chat) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n  builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n  builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n    creatingChat=true;\n    getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  showDialog(builder.create());\n}\n else if (id == gallery_menu_save) {\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n    getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n    return;\n  }\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n  if (f.exists()) {\n    MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n      if (getParentActivity() == null) {\n        return;\n      }\n      BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n    }\n);\n  }\n}\n else if (id == edit_name) {\n  presentFragment(new ChangeNameActivity());\n}\n else if (id == logout) {\n  presentFragment(new LogoutActivity());\n}\n else if (id == set_as_main) {\n  int position=avatarsViewPager.getRealPosition();\n  TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n  if (photo == null) {\n    return;\n  }\n  avatarsViewPager.startMovePhotoToBegin(position);\n  TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n  req.id=new TLRPC.TL_inputPhoto();\n  req.id.id=photo.id;\n  req.id.access_hash=photo.access_hash;\n  req.id.file_reference=photo.file_reference;\n  UserConfig userConfig=getUserConfig();\n  getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n    avatarsViewPager.finishSettingMainPhoto();\n    if (response instanceof TLRPC.TL_photos_photo) {\n      TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n      getMessagesController().putUsers(photos_photo.users,false);\n      TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n      if (photos_photo.photo instanceof TLRPC.TL_photo) {\n        avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n        if (user != null) {\n          user.photo.photo_id=photos_photo.photo.id;\n          userConfig.setCurrentUser(user);\n          userConfig.saveConfig(true);\n        }\n      }\n    }\n  }\n));\n  undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n  TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n  TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n  if (user != null) {\n    TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n    user.photo.photo_id=photo.id;\n    user.photo.photo_small=smallSize.location;\n    user.photo.photo_big=bigSize.location;\n    userConfig.setCurrentUser(user);\n    userConfig.saveConfig(true);\n    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n    updateProfileData();\n  }\n  avatarsViewPager.commitMoveToBegin();\n}\n else if (id == edit_avatar) {\n  int position=avatarsViewPager.getRealPosition();\n  ImageLocation location=avatarsViewPager.getImageLocation(position);\n  if (location == null) {\n    return;\n  }\n  File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n  boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  String thumb;\n  if (isVideo) {\n    ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n    thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n  }\n else {\n    thumb=null;\n  }\n  imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n}\n else if (id == delete_avatar) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n  }\n else {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n  }\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (avatarsViewPager.getRealCount() == 1) {\n      setForegroundImage(true);\n    }\n    if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n      getMessagesController().deleteUserPhoto(null);\n    }\n else {\n      TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n      inputPhoto.id=photo.id;\n      inputPhoto.access_hash=photo.access_hash;\n      inputPhoto.file_reference=photo.file_reference;\n      if (inputPhoto.file_reference == null) {\n        inputPhoto.file_reference=new byte[0];\n      }\n      getMessagesController().deleteUserPhoto(inputPhoto);\n      getMessagesStorage().clearUserPhoto(user_id,photo.id);\n    }\n    if (avatarsViewPager.removePhotoAtIndex(position)) {\n      avatarsViewPager.setVisibility(View.GONE);\n      avatarImage.setForegroundAlpha(1f);\n      avatarContainer.setVisibility(View.VISIBLE);\n      doNotSetForeground=true;\n      final View view=layoutManager.findViewByPosition(0);\n      if (view != null) {\n        listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n      }\n    }\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog alertDialog=builder.create();\n  showDialog(alertDialog);\n  TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == add_photo) {\n  onWriteButtonClick();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 1971,
      "astHeight" : 36
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 18904,
        "startLineNumber" : 1491,
        "startColumnNumber" : 23,
        "endLineNumber" : 1788,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (id == add_contact) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  Bundle args=new Bundle();\n  args.putInt(\"user_id\",user.id);\n  args.putBoolean(\"addContact\",true);\n  presentFragment(new ContactAddActivity(args));\n}\n else if (id == share_contact) {\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",3);\n  args.putString(\"selectAlertString\",LocaleController.getString(\"SendContactToText\",R.string.SendContactToText));\n  args.putString(\"selectAlertStringGroup\",LocaleController.getString(\"SendContactToGroupText\",R.string.SendContactToGroupText));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate(ProfileActivity.this);\n  presentFragment(fragment);\n}\n else if (id == edit_contact) {\n  Bundle args=new Bundle();\n  args.putInt(\"user_id\",user_id);\n  presentFragment(new ContactAddActivity(args));\n}\n else if (id == delete_contact) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null || getParentActivity() == null) {\n    return;\n  }\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"DeleteContact\",R.string.DeleteContact));\n  builder.setMessage(LocaleController.getString(\"AreYouSureDeleteContact\",R.string.AreYouSureDeleteContact));\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    ArrayList<TLRPC.User> arrayList=new ArrayList<>();\n    arrayList.add(user);\n    getContactsController().deleteContact(arrayList);\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog dialog=builder.create();\n  showDialog(dialog);\n  TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == leave_group) {\n  leaveChatPressed();\n}\n else if (id == edit_channel) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  ChatEditActivity fragment=new ChatEditActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == invite_to_group) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",2);\n  args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate((fragment1,dids,message,param) -> {\n    long did=dids.get(0);\n    Bundle args1=new Bundle();\n    args1.putBoolean(\"scrollToTopOnResume\",true);\n    args1.putInt(\"chat_id\",-(int)did);\n    if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n      return;\n    }\n    getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n    getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n    getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n    presentFragment(new ChatActivity(args1),true);\n    removeSelfFromStack();\n  }\n);\n  presentFragment(fragment);\n}\n else if (id == share) {\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == add_shortcut) {\n  try {\n    long did;\n    if (currentEncryptedChat != null) {\n      did=((long)currentEncryptedChat.id) << 32;\n    }\n else     if (user_id != 0) {\n      did=user_id;\n    }\n else     if (chat_id != 0) {\n      did=-chat_id;\n    }\n else {\n      return;\n    }\n    getMediaDataController().installShortcut(did);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == call_item || id == video_call_item) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user != null) {\n    VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n  }\n}\n else if (id == search_members) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n  args.putBoolean(\"open_search\",true);\n  ChatUsersActivity fragment=new ChatUsersActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == add_member) {\n  openAddMember();\n}\n else if (id == statistics) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putBoolean(\"is_megagroup\",chat.megagroup);\n  StatisticActivity fragment=new StatisticActivity(args);\n  presentFragment(fragment);\n}\n else if (id == view_discussion) {\n  openDiscussion();\n}\n else if (id == start_secret_chat) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n  builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n  builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n    creatingChat=true;\n    getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  showDialog(builder.create());\n}\n else if (id == gallery_menu_save) {\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n    getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n    return;\n  }\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n  if (f.exists()) {\n    MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n      if (getParentActivity() == null) {\n        return;\n      }\n      BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n    }\n);\n  }\n}\n else if (id == edit_name) {\n  presentFragment(new ChangeNameActivity());\n}\n else if (id == logout) {\n  presentFragment(new LogoutActivity());\n}\n else if (id == set_as_main) {\n  int position=avatarsViewPager.getRealPosition();\n  TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n  if (photo == null) {\n    return;\n  }\n  avatarsViewPager.startMovePhotoToBegin(position);\n  TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n  req.id=new TLRPC.TL_inputPhoto();\n  req.id.id=photo.id;\n  req.id.access_hash=photo.access_hash;\n  req.id.file_reference=photo.file_reference;\n  UserConfig userConfig=getUserConfig();\n  getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n    avatarsViewPager.finishSettingMainPhoto();\n    if (response instanceof TLRPC.TL_photos_photo) {\n      TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n      getMessagesController().putUsers(photos_photo.users,false);\n      TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n      if (photos_photo.photo instanceof TLRPC.TL_photo) {\n        avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n        if (user != null) {\n          user.photo.photo_id=photos_photo.photo.id;\n          userConfig.setCurrentUser(user);\n          userConfig.saveConfig(true);\n        }\n      }\n    }\n  }\n));\n  undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n  TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n  TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n  if (user != null) {\n    TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n    user.photo.photo_id=photo.id;\n    user.photo.photo_small=smallSize.location;\n    user.photo.photo_big=bigSize.location;\n    userConfig.setCurrentUser(user);\n    userConfig.saveConfig(true);\n    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n    updateProfileData();\n  }\n  avatarsViewPager.commitMoveToBegin();\n}\n else if (id == edit_avatar) {\n  int position=avatarsViewPager.getRealPosition();\n  ImageLocation location=avatarsViewPager.getImageLocation(position);\n  if (location == null) {\n    return;\n  }\n  File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n  boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  String thumb;\n  if (isVideo) {\n    ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n    thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n  }\n else {\n    thumb=null;\n  }\n  imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n}\n else if (id == delete_avatar) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n  }\n else {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n  }\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (avatarsViewPager.getRealCount() == 1) {\n      setForegroundImage(true);\n    }\n    if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n      getMessagesController().deleteUserPhoto(null);\n    }\n else {\n      TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n      inputPhoto.id=photo.id;\n      inputPhoto.access_hash=photo.access_hash;\n      inputPhoto.file_reference=photo.file_reference;\n      if (inputPhoto.file_reference == null) {\n        inputPhoto.file_reference=new byte[0];\n      }\n      getMessagesController().deleteUserPhoto(inputPhoto);\n      getMessagesStorage().clearUserPhoto(user_id,photo.id);\n    }\n    if (avatarsViewPager.removePhotoAtIndex(position)) {\n      avatarsViewPager.setVisibility(View.GONE);\n      avatarImage.setForegroundAlpha(1f);\n      avatarContainer.setVisibility(View.VISIBLE);\n      doNotSetForeground=true;\n      final View view=layoutManager.findViewByPosition(0);\n      if (view != null) {\n        listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n      }\n    }\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog alertDialog=builder.create();\n  showDialog(alertDialog);\n  TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == add_photo) {\n  onWriteButtonClick();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 2017,
      "astHeight" : 37
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 22394,
        "startLineNumber" : 1444,
        "startColumnNumber" : 23,
        "endLineNumber" : 1788,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (id == block_contact) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  if (!isBot || MessagesController.isSupportUser(user)) {\n    if (userBlocked) {\n      getMessagesController().unblockPeer(user_id);\n      AlertsCreator.showSimpleToast(ProfileActivity.this,LocaleController.getString(\"UserUnblocked\",R.string.UserUnblocked));\n    }\n else {\n      if (reportSpam) {\n        AlertsCreator.showBlockReportSpamAlert(ProfileActivity.this,user_id,user,null,currentEncryptedChat,false,null,param -> {\n          if (param == 1) {\n            getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n            getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n            playProfileAnimation=0;\n            finishFragment();\n          }\n else {\n            getNotificationCenter().postNotificationName(NotificationCenter.peerSettingsDidLoad,(long)user_id);\n          }\n        }\n);\n      }\n else {\n        AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n        builder.setTitle(LocaleController.getString(\"BlockUser\",R.string.BlockUser));\n        builder.setMessage(AndroidUtilities.replaceTags(LocaleController.formatString(\"AreYouSureBlockContact2\",R.string.AreYouSureBlockContact2,ContactsController.formatName(user.first_name,user.last_name))));\n        builder.setPositiveButton(LocaleController.getString(\"BlockContact\",R.string.BlockContact),(dialogInterface,i) -> {\n          getMessagesController().blockPeer(user_id);\n          AlertsCreator.showSimpleToast(ProfileActivity.this,LocaleController.getString(\"UserBlocked\",R.string.UserBlocked));\n        }\n);\n        builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n        AlertDialog dialog=builder.create();\n        showDialog(dialog);\n        TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n        if (button != null) {\n          button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n        }\n      }\n    }\n  }\n else {\n    if (!userBlocked) {\n      getMessagesController().blockPeer(user_id);\n    }\n else {\n      getMessagesController().unblockPeer(user_id);\n      getSendMessagesHelper().sendMessage(\"/start\",user_id,null,null,null,false,null,null,null,true,0);\n      finishFragment();\n    }\n  }\n}\n else if (id == add_contact) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  Bundle args=new Bundle();\n  args.putInt(\"user_id\",user.id);\n  args.putBoolean(\"addContact\",true);\n  presentFragment(new ContactAddActivity(args));\n}\n else if (id == share_contact) {\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",3);\n  args.putString(\"selectAlertString\",LocaleController.getString(\"SendContactToText\",R.string.SendContactToText));\n  args.putString(\"selectAlertStringGroup\",LocaleController.getString(\"SendContactToGroupText\",R.string.SendContactToGroupText));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate(ProfileActivity.this);\n  presentFragment(fragment);\n}\n else if (id == edit_contact) {\n  Bundle args=new Bundle();\n  args.putInt(\"user_id\",user_id);\n  presentFragment(new ContactAddActivity(args));\n}\n else if (id == delete_contact) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null || getParentActivity() == null) {\n    return;\n  }\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"DeleteContact\",R.string.DeleteContact));\n  builder.setMessage(LocaleController.getString(\"AreYouSureDeleteContact\",R.string.AreYouSureDeleteContact));\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    ArrayList<TLRPC.User> arrayList=new ArrayList<>();\n    arrayList.add(user);\n    getContactsController().deleteContact(arrayList);\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog dialog=builder.create();\n  showDialog(dialog);\n  TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == leave_group) {\n  leaveChatPressed();\n}\n else if (id == edit_channel) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  ChatEditActivity fragment=new ChatEditActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == invite_to_group) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",2);\n  args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate((fragment1,dids,message,param) -> {\n    long did=dids.get(0);\n    Bundle args1=new Bundle();\n    args1.putBoolean(\"scrollToTopOnResume\",true);\n    args1.putInt(\"chat_id\",-(int)did);\n    if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n      return;\n    }\n    getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n    getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n    getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n    presentFragment(new ChatActivity(args1),true);\n    removeSelfFromStack();\n  }\n);\n  presentFragment(fragment);\n}\n else if (id == share) {\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == add_shortcut) {\n  try {\n    long did;\n    if (currentEncryptedChat != null) {\n      did=((long)currentEncryptedChat.id) << 32;\n    }\n else     if (user_id != 0) {\n      did=user_id;\n    }\n else     if (chat_id != 0) {\n      did=-chat_id;\n    }\n else {\n      return;\n    }\n    getMediaDataController().installShortcut(did);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == call_item || id == video_call_item) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user != null) {\n    VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n  }\n}\n else if (id == search_members) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n  args.putBoolean(\"open_search\",true);\n  ChatUsersActivity fragment=new ChatUsersActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == add_member) {\n  openAddMember();\n}\n else if (id == statistics) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putBoolean(\"is_megagroup\",chat.megagroup);\n  StatisticActivity fragment=new StatisticActivity(args);\n  presentFragment(fragment);\n}\n else if (id == view_discussion) {\n  openDiscussion();\n}\n else if (id == start_secret_chat) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n  builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n  builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n    creatingChat=true;\n    getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  showDialog(builder.create());\n}\n else if (id == gallery_menu_save) {\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n    getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n    return;\n  }\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n  if (f.exists()) {\n    MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n      if (getParentActivity() == null) {\n        return;\n      }\n      BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n    }\n);\n  }\n}\n else if (id == edit_name) {\n  presentFragment(new ChangeNameActivity());\n}\n else if (id == logout) {\n  presentFragment(new LogoutActivity());\n}\n else if (id == set_as_main) {\n  int position=avatarsViewPager.getRealPosition();\n  TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n  if (photo == null) {\n    return;\n  }\n  avatarsViewPager.startMovePhotoToBegin(position);\n  TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n  req.id=new TLRPC.TL_inputPhoto();\n  req.id.id=photo.id;\n  req.id.access_hash=photo.access_hash;\n  req.id.file_reference=photo.file_reference;\n  UserConfig userConfig=getUserConfig();\n  getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n    avatarsViewPager.finishSettingMainPhoto();\n    if (response instanceof TLRPC.TL_photos_photo) {\n      TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n      getMessagesController().putUsers(photos_photo.users,false);\n      TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n      if (photos_photo.photo instanceof TLRPC.TL_photo) {\n        avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n        if (user != null) {\n          user.photo.photo_id=photos_photo.photo.id;\n          userConfig.setCurrentUser(user);\n          userConfig.saveConfig(true);\n        }\n      }\n    }\n  }\n));\n  undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n  TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n  TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n  if (user != null) {\n    TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n    user.photo.photo_id=photo.id;\n    user.photo.photo_small=smallSize.location;\n    user.photo.photo_big=bigSize.location;\n    userConfig.setCurrentUser(user);\n    userConfig.saveConfig(true);\n    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n    updateProfileData();\n  }\n  avatarsViewPager.commitMoveToBegin();\n}\n else if (id == edit_avatar) {\n  int position=avatarsViewPager.getRealPosition();\n  ImageLocation location=avatarsViewPager.getImageLocation(position);\n  if (location == null) {\n    return;\n  }\n  File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n  boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  String thumb;\n  if (isVideo) {\n    ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n    thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n  }\n else {\n    thumb=null;\n  }\n  imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n}\n else if (id == delete_avatar) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n  }\n else {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n  }\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (avatarsViewPager.getRealCount() == 1) {\n      setForegroundImage(true);\n    }\n    if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n      getMessagesController().deleteUserPhoto(null);\n    }\n else {\n      TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n      inputPhoto.id=photo.id;\n      inputPhoto.access_hash=photo.access_hash;\n      inputPhoto.file_reference=photo.file_reference;\n      if (inputPhoto.file_reference == null) {\n        inputPhoto.file_reference=new byte[0];\n      }\n      getMessagesController().deleteUserPhoto(inputPhoto);\n      getMessagesStorage().clearUserPhoto(user_id,photo.id);\n    }\n    if (avatarsViewPager.removePhotoAtIndex(position)) {\n      avatarsViewPager.setVisibility(View.GONE);\n      avatarImage.setForegroundAlpha(1f);\n      avatarContainer.setVisibility(View.VISIBLE);\n      doNotSetForeground=true;\n      final View view=layoutManager.findViewByPosition(0);\n      if (view != null) {\n        listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n      }\n    }\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog alertDialog=builder.create();\n  showDialog(alertDialog);\n  TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == add_photo) {\n  onWriteButtonClick();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 2320,
      "astHeight" : 38
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22471,
        "startLineNumber" : 1442,
        "startColumnNumber" : 16,
        "endLineNumber" : 1788,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (id == -1) {\n  finishFragment();\n}\n else if (id == block_contact) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  if (!isBot || MessagesController.isSupportUser(user)) {\n    if (userBlocked) {\n      getMessagesController().unblockPeer(user_id);\n      AlertsCreator.showSimpleToast(ProfileActivity.this,LocaleController.getString(\"UserUnblocked\",R.string.UserUnblocked));\n    }\n else {\n      if (reportSpam) {\n        AlertsCreator.showBlockReportSpamAlert(ProfileActivity.this,user_id,user,null,currentEncryptedChat,false,null,param -> {\n          if (param == 1) {\n            getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n            getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n            playProfileAnimation=0;\n            finishFragment();\n          }\n else {\n            getNotificationCenter().postNotificationName(NotificationCenter.peerSettingsDidLoad,(long)user_id);\n          }\n        }\n);\n      }\n else {\n        AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n        builder.setTitle(LocaleController.getString(\"BlockUser\",R.string.BlockUser));\n        builder.setMessage(AndroidUtilities.replaceTags(LocaleController.formatString(\"AreYouSureBlockContact2\",R.string.AreYouSureBlockContact2,ContactsController.formatName(user.first_name,user.last_name))));\n        builder.setPositiveButton(LocaleController.getString(\"BlockContact\",R.string.BlockContact),(dialogInterface,i) -> {\n          getMessagesController().blockPeer(user_id);\n          AlertsCreator.showSimpleToast(ProfileActivity.this,LocaleController.getString(\"UserBlocked\",R.string.UserBlocked));\n        }\n);\n        builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n        AlertDialog dialog=builder.create();\n        showDialog(dialog);\n        TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n        if (button != null) {\n          button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n        }\n      }\n    }\n  }\n else {\n    if (!userBlocked) {\n      getMessagesController().blockPeer(user_id);\n    }\n else {\n      getMessagesController().unblockPeer(user_id);\n      getSendMessagesHelper().sendMessage(\"/start\",user_id,null,null,null,false,null,null,null,true,0);\n      finishFragment();\n    }\n  }\n}\n else if (id == add_contact) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  Bundle args=new Bundle();\n  args.putInt(\"user_id\",user.id);\n  args.putBoolean(\"addContact\",true);\n  presentFragment(new ContactAddActivity(args));\n}\n else if (id == share_contact) {\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",3);\n  args.putString(\"selectAlertString\",LocaleController.getString(\"SendContactToText\",R.string.SendContactToText));\n  args.putString(\"selectAlertStringGroup\",LocaleController.getString(\"SendContactToGroupText\",R.string.SendContactToGroupText));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate(ProfileActivity.this);\n  presentFragment(fragment);\n}\n else if (id == edit_contact) {\n  Bundle args=new Bundle();\n  args.putInt(\"user_id\",user_id);\n  presentFragment(new ContactAddActivity(args));\n}\n else if (id == delete_contact) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null || getParentActivity() == null) {\n    return;\n  }\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"DeleteContact\",R.string.DeleteContact));\n  builder.setMessage(LocaleController.getString(\"AreYouSureDeleteContact\",R.string.AreYouSureDeleteContact));\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    ArrayList<TLRPC.User> arrayList=new ArrayList<>();\n    arrayList.add(user);\n    getContactsController().deleteContact(arrayList);\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog dialog=builder.create();\n  showDialog(dialog);\n  TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == leave_group) {\n  leaveChatPressed();\n}\n else if (id == edit_channel) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  ChatEditActivity fragment=new ChatEditActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == invite_to_group) {\n  final TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user == null) {\n    return;\n  }\n  Bundle args=new Bundle();\n  args.putBoolean(\"onlySelect\",true);\n  args.putInt(\"dialogsType\",2);\n  args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n  DialogsActivity fragment=new DialogsActivity(args);\n  fragment.setDelegate((fragment1,dids,message,param) -> {\n    long did=dids.get(0);\n    Bundle args1=new Bundle();\n    args1.putBoolean(\"scrollToTopOnResume\",true);\n    args1.putInt(\"chat_id\",-(int)did);\n    if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n      return;\n    }\n    getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n    getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n    getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n    presentFragment(new ChatActivity(args1),true);\n    removeSelfFromStack();\n  }\n);\n  presentFragment(fragment);\n}\n else if (id == share) {\n  try {\n    String text=null;\n    if (user_id != 0) {\n      TLRPC.User user=getMessagesController().getUser(user_id);\n      if (user == null) {\n        return;\n      }\n      if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n        text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n      }\n    }\n else     if (chat_id != 0) {\n      TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n      if (chat == null) {\n        return;\n      }\n      if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n        text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n      }\n else {\n        text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n      }\n    }\n    if (TextUtils.isEmpty(text)) {\n      return;\n    }\n    Intent intent=new Intent(Intent.ACTION_SEND);\n    intent.setType(\"text/plain\");\n    intent.putExtra(Intent.EXTRA_TEXT,text);\n    startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == add_shortcut) {\n  try {\n    long did;\n    if (currentEncryptedChat != null) {\n      did=((long)currentEncryptedChat.id) << 32;\n    }\n else     if (user_id != 0) {\n      did=user_id;\n    }\n else     if (chat_id != 0) {\n      did=-chat_id;\n    }\n else {\n      return;\n    }\n    getMediaDataController().installShortcut(did);\n  }\n catch (  Exception e) {\n    FileLog.e(e);\n  }\n}\n else if (id == call_item || id == video_call_item) {\n  TLRPC.User user=getMessagesController().getUser(user_id);\n  if (user != null) {\n    VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n  }\n}\n else if (id == search_members) {\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n  args.putBoolean(\"open_search\",true);\n  ChatUsersActivity fragment=new ChatUsersActivity(args);\n  fragment.setInfo(chatInfo);\n  presentFragment(fragment);\n}\n else if (id == add_member) {\n  openAddMember();\n}\n else if (id == statistics) {\n  TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n  Bundle args=new Bundle();\n  args.putInt(\"chat_id\",chat_id);\n  args.putBoolean(\"is_megagroup\",chat.megagroup);\n  StatisticActivity fragment=new StatisticActivity(args);\n  presentFragment(fragment);\n}\n else if (id == view_discussion) {\n  openDiscussion();\n}\n else if (id == start_secret_chat) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n  builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n  builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n    creatingChat=true;\n    getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  showDialog(builder.create());\n}\n else if (id == gallery_menu_save) {\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n    getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n    return;\n  }\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n  if (f.exists()) {\n    MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n      if (getParentActivity() == null) {\n        return;\n      }\n      BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n    }\n);\n  }\n}\n else if (id == edit_name) {\n  presentFragment(new ChangeNameActivity());\n}\n else if (id == logout) {\n  presentFragment(new LogoutActivity());\n}\n else if (id == set_as_main) {\n  int position=avatarsViewPager.getRealPosition();\n  TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n  if (photo == null) {\n    return;\n  }\n  avatarsViewPager.startMovePhotoToBegin(position);\n  TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n  req.id=new TLRPC.TL_inputPhoto();\n  req.id.id=photo.id;\n  req.id.access_hash=photo.access_hash;\n  req.id.file_reference=photo.file_reference;\n  UserConfig userConfig=getUserConfig();\n  getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n    avatarsViewPager.finishSettingMainPhoto();\n    if (response instanceof TLRPC.TL_photos_photo) {\n      TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n      getMessagesController().putUsers(photos_photo.users,false);\n      TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n      if (photos_photo.photo instanceof TLRPC.TL_photo) {\n        avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n        if (user != null) {\n          user.photo.photo_id=photos_photo.photo.id;\n          userConfig.setCurrentUser(user);\n          userConfig.saveConfig(true);\n        }\n      }\n    }\n  }\n));\n  undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n  TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n  TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n  if (user != null) {\n    TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n    user.photo.photo_id=photo.id;\n    user.photo.photo_small=smallSize.location;\n    user.photo.photo_big=bigSize.location;\n    userConfig.setCurrentUser(user);\n    userConfig.saveConfig(true);\n    NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n    updateProfileData();\n  }\n  avatarsViewPager.commitMoveToBegin();\n}\n else if (id == edit_avatar) {\n  int position=avatarsViewPager.getRealPosition();\n  ImageLocation location=avatarsViewPager.getImageLocation(position);\n  if (location == null) {\n    return;\n  }\n  File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n  boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n  String thumb;\n  if (isVideo) {\n    ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n    thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n  }\n else {\n    thumb=null;\n  }\n  imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n}\n else if (id == delete_avatar) {\n  AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n  ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n  if (location == null) {\n    return;\n  }\n  if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n  }\n else {\n    builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n    builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n  }\n  builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (avatarsViewPager.getRealCount() == 1) {\n      setForegroundImage(true);\n    }\n    if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n      getMessagesController().deleteUserPhoto(null);\n    }\n else {\n      TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n      inputPhoto.id=photo.id;\n      inputPhoto.access_hash=photo.access_hash;\n      inputPhoto.file_reference=photo.file_reference;\n      if (inputPhoto.file_reference == null) {\n        inputPhoto.file_reference=new byte[0];\n      }\n      getMessagesController().deleteUserPhoto(inputPhoto);\n      getMessagesStorage().clearUserPhoto(user_id,photo.id);\n    }\n    if (avatarsViewPager.removePhotoAtIndex(position)) {\n      avatarsViewPager.setVisibility(View.GONE);\n      avatarImage.setForegroundAlpha(1f);\n      avatarContainer.setVisibility(View.VISIBLE);\n      doNotSetForeground=true;\n      final View view=layoutManager.findViewByPosition(0);\n      if (view != null) {\n        listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n      }\n    }\n  }\n);\n  builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n  AlertDialog alertDialog=builder.create();\n  showDialog(alertDialog);\n  TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n  if (button != null) {\n    button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n  }\n}\n else if (id == add_photo) {\n  onWriteButtonClick();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 2329,
      "astHeight" : 39
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 22600,
        "startLineNumber" : 1438,
        "startColumnNumber" : 50,
        "endLineNumber" : 1789,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (id == -1) {\n    finishFragment();\n  }\n else   if (id == block_contact) {\n    TLRPC.User user=getMessagesController().getUser(user_id);\n    if (user == null) {\n      return;\n    }\n    if (!isBot || MessagesController.isSupportUser(user)) {\n      if (userBlocked) {\n        getMessagesController().unblockPeer(user_id);\n        AlertsCreator.showSimpleToast(ProfileActivity.this,LocaleController.getString(\"UserUnblocked\",R.string.UserUnblocked));\n      }\n else {\n        if (reportSpam) {\n          AlertsCreator.showBlockReportSpamAlert(ProfileActivity.this,user_id,user,null,currentEncryptedChat,false,null,param -> {\n            if (param == 1) {\n              getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n              getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n              playProfileAnimation=0;\n              finishFragment();\n            }\n else {\n              getNotificationCenter().postNotificationName(NotificationCenter.peerSettingsDidLoad,(long)user_id);\n            }\n          }\n);\n        }\n else {\n          AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n          builder.setTitle(LocaleController.getString(\"BlockUser\",R.string.BlockUser));\n          builder.setMessage(AndroidUtilities.replaceTags(LocaleController.formatString(\"AreYouSureBlockContact2\",R.string.AreYouSureBlockContact2,ContactsController.formatName(user.first_name,user.last_name))));\n          builder.setPositiveButton(LocaleController.getString(\"BlockContact\",R.string.BlockContact),(dialogInterface,i) -> {\n            getMessagesController().blockPeer(user_id);\n            AlertsCreator.showSimpleToast(ProfileActivity.this,LocaleController.getString(\"UserBlocked\",R.string.UserBlocked));\n          }\n);\n          builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n          AlertDialog dialog=builder.create();\n          showDialog(dialog);\n          TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n          if (button != null) {\n            button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n          }\n        }\n      }\n    }\n else {\n      if (!userBlocked) {\n        getMessagesController().blockPeer(user_id);\n      }\n else {\n        getMessagesController().unblockPeer(user_id);\n        getSendMessagesHelper().sendMessage(\"/start\",user_id,null,null,null,false,null,null,null,true,0);\n        finishFragment();\n      }\n    }\n  }\n else   if (id == add_contact) {\n    TLRPC.User user=getMessagesController().getUser(user_id);\n    Bundle args=new Bundle();\n    args.putInt(\"user_id\",user.id);\n    args.putBoolean(\"addContact\",true);\n    presentFragment(new ContactAddActivity(args));\n  }\n else   if (id == share_contact) {\n    Bundle args=new Bundle();\n    args.putBoolean(\"onlySelect\",true);\n    args.putInt(\"dialogsType\",3);\n    args.putString(\"selectAlertString\",LocaleController.getString(\"SendContactToText\",R.string.SendContactToText));\n    args.putString(\"selectAlertStringGroup\",LocaleController.getString(\"SendContactToGroupText\",R.string.SendContactToGroupText));\n    DialogsActivity fragment=new DialogsActivity(args);\n    fragment.setDelegate(ProfileActivity.this);\n    presentFragment(fragment);\n  }\n else   if (id == edit_contact) {\n    Bundle args=new Bundle();\n    args.putInt(\"user_id\",user_id);\n    presentFragment(new ContactAddActivity(args));\n  }\n else   if (id == delete_contact) {\n    final TLRPC.User user=getMessagesController().getUser(user_id);\n    if (user == null || getParentActivity() == null) {\n      return;\n    }\n    AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n    builder.setTitle(LocaleController.getString(\"DeleteContact\",R.string.DeleteContact));\n    builder.setMessage(LocaleController.getString(\"AreYouSureDeleteContact\",R.string.AreYouSureDeleteContact));\n    builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n      ArrayList<TLRPC.User> arrayList=new ArrayList<>();\n      arrayList.add(user);\n      getContactsController().deleteContact(arrayList);\n    }\n);\n    builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n    AlertDialog dialog=builder.create();\n    showDialog(dialog);\n    TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n    if (button != null) {\n      button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n    }\n  }\n else   if (id == leave_group) {\n    leaveChatPressed();\n  }\n else   if (id == edit_channel) {\n    Bundle args=new Bundle();\n    args.putInt(\"chat_id\",chat_id);\n    ChatEditActivity fragment=new ChatEditActivity(args);\n    fragment.setInfo(chatInfo);\n    presentFragment(fragment);\n  }\n else   if (id == invite_to_group) {\n    final TLRPC.User user=getMessagesController().getUser(user_id);\n    if (user == null) {\n      return;\n    }\n    Bundle args=new Bundle();\n    args.putBoolean(\"onlySelect\",true);\n    args.putInt(\"dialogsType\",2);\n    args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n    DialogsActivity fragment=new DialogsActivity(args);\n    fragment.setDelegate((fragment1,dids,message,param) -> {\n      long did=dids.get(0);\n      Bundle args1=new Bundle();\n      args1.putBoolean(\"scrollToTopOnResume\",true);\n      args1.putInt(\"chat_id\",-(int)did);\n      if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n        return;\n      }\n      getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n      getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n      getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n      presentFragment(new ChatActivity(args1),true);\n      removeSelfFromStack();\n    }\n);\n    presentFragment(fragment);\n  }\n else   if (id == share) {\n    try {\n      String text=null;\n      if (user_id != 0) {\n        TLRPC.User user=getMessagesController().getUser(user_id);\n        if (user == null) {\n          return;\n        }\n        if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n          text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n        }\n else {\n          text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n        }\n      }\n else       if (chat_id != 0) {\n        TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n        if (chat == null) {\n          return;\n        }\n        if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n          text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n        }\n else {\n          text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n        }\n      }\n      if (TextUtils.isEmpty(text)) {\n        return;\n      }\n      Intent intent=new Intent(Intent.ACTION_SEND);\n      intent.setType(\"text/plain\");\n      intent.putExtra(Intent.EXTRA_TEXT,text);\n      startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n    }\n catch (    Exception e) {\n      FileLog.e(e);\n    }\n  }\n else   if (id == add_shortcut) {\n    try {\n      long did;\n      if (currentEncryptedChat != null) {\n        did=((long)currentEncryptedChat.id) << 32;\n      }\n else       if (user_id != 0) {\n        did=user_id;\n      }\n else       if (chat_id != 0) {\n        did=-chat_id;\n      }\n else {\n        return;\n      }\n      getMediaDataController().installShortcut(did);\n    }\n catch (    Exception e) {\n      FileLog.e(e);\n    }\n  }\n else   if (id == call_item || id == video_call_item) {\n    TLRPC.User user=getMessagesController().getUser(user_id);\n    if (user != null) {\n      VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n    }\n  }\n else   if (id == search_members) {\n    Bundle args=new Bundle();\n    args.putInt(\"chat_id\",chat_id);\n    args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n    args.putBoolean(\"open_search\",true);\n    ChatUsersActivity fragment=new ChatUsersActivity(args);\n    fragment.setInfo(chatInfo);\n    presentFragment(fragment);\n  }\n else   if (id == add_member) {\n    openAddMember();\n  }\n else   if (id == statistics) {\n    TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n    Bundle args=new Bundle();\n    args.putInt(\"chat_id\",chat_id);\n    args.putBoolean(\"is_megagroup\",chat.megagroup);\n    StatisticActivity fragment=new StatisticActivity(args);\n    presentFragment(fragment);\n  }\n else   if (id == view_discussion) {\n    openDiscussion();\n  }\n else   if (id == start_secret_chat) {\n    AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n    builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n    builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n    builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n      creatingChat=true;\n      getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n    }\n);\n    builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n    showDialog(builder.create());\n  }\n else   if (id == gallery_menu_save) {\n    if (getParentActivity() == null) {\n      return;\n    }\n    if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n      getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n      return;\n    }\n    ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n    if (location == null) {\n      return;\n    }\n    final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n    File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n    if (f.exists()) {\n      MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n        if (getParentActivity() == null) {\n          return;\n        }\n        BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n      }\n);\n    }\n  }\n else   if (id == edit_name) {\n    presentFragment(new ChangeNameActivity());\n  }\n else   if (id == logout) {\n    presentFragment(new LogoutActivity());\n  }\n else   if (id == set_as_main) {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (photo == null) {\n      return;\n    }\n    avatarsViewPager.startMovePhotoToBegin(position);\n    TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n    req.id=new TLRPC.TL_inputPhoto();\n    req.id.id=photo.id;\n    req.id.access_hash=photo.access_hash;\n    req.id.file_reference=photo.file_reference;\n    UserConfig userConfig=getUserConfig();\n    getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n      avatarsViewPager.finishSettingMainPhoto();\n      if (response instanceof TLRPC.TL_photos_photo) {\n        TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n        getMessagesController().putUsers(photos_photo.users,false);\n        TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n        if (photos_photo.photo instanceof TLRPC.TL_photo) {\n          avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n          if (user != null) {\n            user.photo.photo_id=photos_photo.photo.id;\n            userConfig.setCurrentUser(user);\n            userConfig.saveConfig(true);\n          }\n        }\n      }\n    }\n));\n    undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n    TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n    TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n    if (user != null) {\n      TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n      user.photo.photo_id=photo.id;\n      user.photo.photo_small=smallSize.location;\n      user.photo.photo_big=bigSize.location;\n      userConfig.setCurrentUser(user);\n      userConfig.saveConfig(true);\n      NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n      updateProfileData();\n    }\n    avatarsViewPager.commitMoveToBegin();\n  }\n else   if (id == edit_avatar) {\n    int position=avatarsViewPager.getRealPosition();\n    ImageLocation location=avatarsViewPager.getImageLocation(position);\n    if (location == null) {\n      return;\n    }\n    File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n    boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n    String thumb;\n    if (isVideo) {\n      ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n      thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n    }\n else {\n      thumb=null;\n    }\n    imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n  }\n else   if (id == delete_avatar) {\n    AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n    ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n    if (location == null) {\n      return;\n    }\n    if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n      builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n      builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n    }\n else {\n      builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n      builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n    }\n    builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n      int position=avatarsViewPager.getRealPosition();\n      TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n      if (avatarsViewPager.getRealCount() == 1) {\n        setForegroundImage(true);\n      }\n      if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n        getMessagesController().deleteUserPhoto(null);\n      }\n else {\n        TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n        inputPhoto.id=photo.id;\n        inputPhoto.access_hash=photo.access_hash;\n        inputPhoto.file_reference=photo.file_reference;\n        if (inputPhoto.file_reference == null) {\n          inputPhoto.file_reference=new byte[0];\n        }\n        getMessagesController().deleteUserPhoto(inputPhoto);\n        getMessagesStorage().clearUserPhoto(user_id,photo.id);\n      }\n      if (avatarsViewPager.removePhotoAtIndex(position)) {\n        avatarsViewPager.setVisibility(View.GONE);\n        avatarImage.setForegroundAlpha(1f);\n        avatarContainer.setVisibility(View.VISIBLE);\n        doNotSetForeground=true;\n        final View view=layoutManager.findViewByPosition(0);\n        if (view != null) {\n          listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n        }\n      }\n    }\n);\n    builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n    AlertDialog alertDialog=builder.create();\n    showDialog(alertDialog);\n    TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n    if (button != null) {\n      button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n    }\n  }\n else   if (id == add_photo) {\n    onWriteButtonClick();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 2337,
      "astHeight" : 40
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 22660,
        "startLineNumber" : 1437,
        "startColumnNumber" : 12,
        "endLineNumber" : 1789,
        "endColumnNumber" : 13
      },
      "nodeContext" : "@Override public void onItemClick(final int id){\n  if (getParentActivity() == null) {\n    return;\n  }\n  if (id == -1) {\n    finishFragment();\n  }\n else   if (id == block_contact) {\n    TLRPC.User user=getMessagesController().getUser(user_id);\n    if (user == null) {\n      return;\n    }\n    if (!isBot || MessagesController.isSupportUser(user)) {\n      if (userBlocked) {\n        getMessagesController().unblockPeer(user_id);\n        AlertsCreator.showSimpleToast(ProfileActivity.this,LocaleController.getString(\"UserUnblocked\",R.string.UserUnblocked));\n      }\n else {\n        if (reportSpam) {\n          AlertsCreator.showBlockReportSpamAlert(ProfileActivity.this,user_id,user,null,currentEncryptedChat,false,null,param -> {\n            if (param == 1) {\n              getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n              getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n              playProfileAnimation=0;\n              finishFragment();\n            }\n else {\n              getNotificationCenter().postNotificationName(NotificationCenter.peerSettingsDidLoad,(long)user_id);\n            }\n          }\n);\n        }\n else {\n          AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n          builder.setTitle(LocaleController.getString(\"BlockUser\",R.string.BlockUser));\n          builder.setMessage(AndroidUtilities.replaceTags(LocaleController.formatString(\"AreYouSureBlockContact2\",R.string.AreYouSureBlockContact2,ContactsController.formatName(user.first_name,user.last_name))));\n          builder.setPositiveButton(LocaleController.getString(\"BlockContact\",R.string.BlockContact),(dialogInterface,i) -> {\n            getMessagesController().blockPeer(user_id);\n            AlertsCreator.showSimpleToast(ProfileActivity.this,LocaleController.getString(\"UserBlocked\",R.string.UserBlocked));\n          }\n);\n          builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n          AlertDialog dialog=builder.create();\n          showDialog(dialog);\n          TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n          if (button != null) {\n            button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n          }\n        }\n      }\n    }\n else {\n      if (!userBlocked) {\n        getMessagesController().blockPeer(user_id);\n      }\n else {\n        getMessagesController().unblockPeer(user_id);\n        getSendMessagesHelper().sendMessage(\"/start\",user_id,null,null,null,false,null,null,null,true,0);\n        finishFragment();\n      }\n    }\n  }\n else   if (id == add_contact) {\n    TLRPC.User user=getMessagesController().getUser(user_id);\n    Bundle args=new Bundle();\n    args.putInt(\"user_id\",user.id);\n    args.putBoolean(\"addContact\",true);\n    presentFragment(new ContactAddActivity(args));\n  }\n else   if (id == share_contact) {\n    Bundle args=new Bundle();\n    args.putBoolean(\"onlySelect\",true);\n    args.putInt(\"dialogsType\",3);\n    args.putString(\"selectAlertString\",LocaleController.getString(\"SendContactToText\",R.string.SendContactToText));\n    args.putString(\"selectAlertStringGroup\",LocaleController.getString(\"SendContactToGroupText\",R.string.SendContactToGroupText));\n    DialogsActivity fragment=new DialogsActivity(args);\n    fragment.setDelegate(ProfileActivity.this);\n    presentFragment(fragment);\n  }\n else   if (id == edit_contact) {\n    Bundle args=new Bundle();\n    args.putInt(\"user_id\",user_id);\n    presentFragment(new ContactAddActivity(args));\n  }\n else   if (id == delete_contact) {\n    final TLRPC.User user=getMessagesController().getUser(user_id);\n    if (user == null || getParentActivity() == null) {\n      return;\n    }\n    AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n    builder.setTitle(LocaleController.getString(\"DeleteContact\",R.string.DeleteContact));\n    builder.setMessage(LocaleController.getString(\"AreYouSureDeleteContact\",R.string.AreYouSureDeleteContact));\n    builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n      ArrayList<TLRPC.User> arrayList=new ArrayList<>();\n      arrayList.add(user);\n      getContactsController().deleteContact(arrayList);\n    }\n);\n    builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n    AlertDialog dialog=builder.create();\n    showDialog(dialog);\n    TextView button=(TextView)dialog.getButton(DialogInterface.BUTTON_POSITIVE);\n    if (button != null) {\n      button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n    }\n  }\n else   if (id == leave_group) {\n    leaveChatPressed();\n  }\n else   if (id == edit_channel) {\n    Bundle args=new Bundle();\n    args.putInt(\"chat_id\",chat_id);\n    ChatEditActivity fragment=new ChatEditActivity(args);\n    fragment.setInfo(chatInfo);\n    presentFragment(fragment);\n  }\n else   if (id == invite_to_group) {\n    final TLRPC.User user=getMessagesController().getUser(user_id);\n    if (user == null) {\n      return;\n    }\n    Bundle args=new Bundle();\n    args.putBoolean(\"onlySelect\",true);\n    args.putInt(\"dialogsType\",2);\n    args.putString(\"addToGroupAlertString\",LocaleController.formatString(\"AddToTheGroupAlertText\",R.string.AddToTheGroupAlertText,UserObject.getUserName(user),\"%1$s\"));\n    DialogsActivity fragment=new DialogsActivity(args);\n    fragment.setDelegate((fragment1,dids,message,param) -> {\n      long did=dids.get(0);\n      Bundle args1=new Bundle();\n      args1.putBoolean(\"scrollToTopOnResume\",true);\n      args1.putInt(\"chat_id\",-(int)did);\n      if (!getMessagesController().checkCanOpenChat(args1,fragment1)) {\n        return;\n      }\n      getNotificationCenter().removeObserver(ProfileActivity.this,NotificationCenter.closeChats);\n      getNotificationCenter().postNotificationName(NotificationCenter.closeChats);\n      getMessagesController().addUserToChat(-(int)did,user,null,0,null,ProfileActivity.this,null);\n      presentFragment(new ChatActivity(args1),true);\n      removeSelfFromStack();\n    }\n);\n    presentFragment(fragment);\n  }\n else   if (id == share) {\n    try {\n      String text=null;\n      if (user_id != 0) {\n        TLRPC.User user=getMessagesController().getUser(user_id);\n        if (user == null) {\n          return;\n        }\n        if (botInfo != null && userInfo != null && !TextUtils.isEmpty(userInfo.about)) {\n          text=String.format(\"%s https://\" + getMessagesController().linkPrefix + \"/%s\",userInfo.about,user.username);\n        }\n else {\n          text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",user.username);\n        }\n      }\n else       if (chat_id != 0) {\n        TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n        if (chat == null) {\n          return;\n        }\n        if (chatInfo != null && !TextUtils.isEmpty(chatInfo.about)) {\n          text=String.format(\"%s\\nhttps://\" + getMessagesController().linkPrefix + \"/%s\",chatInfo.about,chat.username);\n        }\n else {\n          text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n        }\n      }\n      if (TextUtils.isEmpty(text)) {\n        return;\n      }\n      Intent intent=new Intent(Intent.ACTION_SEND);\n      intent.setType(\"text/plain\");\n      intent.putExtra(Intent.EXTRA_TEXT,text);\n      startActivityForResult(Intent.createChooser(intent,LocaleController.getString(\"BotShare\",R.string.BotShare)),500);\n    }\n catch (    Exception e) {\n      FileLog.e(e);\n    }\n  }\n else   if (id == add_shortcut) {\n    try {\n      long did;\n      if (currentEncryptedChat != null) {\n        did=((long)currentEncryptedChat.id) << 32;\n      }\n else       if (user_id != 0) {\n        did=user_id;\n      }\n else       if (chat_id != 0) {\n        did=-chat_id;\n      }\n else {\n        return;\n      }\n      getMediaDataController().installShortcut(did);\n    }\n catch (    Exception e) {\n      FileLog.e(e);\n    }\n  }\n else   if (id == call_item || id == video_call_item) {\n    TLRPC.User user=getMessagesController().getUser(user_id);\n    if (user != null) {\n      VoIPHelper.startCall(user,id == video_call_item,userInfo != null && userInfo.video_calls_available,getParentActivity(),userInfo);\n    }\n  }\n else   if (id == search_members) {\n    Bundle args=new Bundle();\n    args.putInt(\"chat_id\",chat_id);\n    args.putInt(\"type\",ChatUsersActivity.TYPE_USERS);\n    args.putBoolean(\"open_search\",true);\n    ChatUsersActivity fragment=new ChatUsersActivity(args);\n    fragment.setInfo(chatInfo);\n    presentFragment(fragment);\n  }\n else   if (id == add_member) {\n    openAddMember();\n  }\n else   if (id == statistics) {\n    TLRPC.Chat chat=getMessagesController().getChat(chat_id);\n    Bundle args=new Bundle();\n    args.putInt(\"chat_id\",chat_id);\n    args.putBoolean(\"is_megagroup\",chat.megagroup);\n    StatisticActivity fragment=new StatisticActivity(args);\n    presentFragment(fragment);\n  }\n else   if (id == view_discussion) {\n    openDiscussion();\n  }\n else   if (id == start_secret_chat) {\n    AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n    builder.setTitle(LocaleController.getString(\"AreYouSureSecretChatTitle\",R.string.AreYouSureSecretChatTitle));\n    builder.setMessage(LocaleController.getString(\"AreYouSureSecretChat\",R.string.AreYouSureSecretChat));\n    builder.setPositiveButton(LocaleController.getString(\"Start\",R.string.Start),(dialogInterface,i) -> {\n      creatingChat=true;\n      getSecretChatHelper().startSecretChat(getParentActivity(),getMessagesController().getUser(user_id));\n    }\n);\n    builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n    showDialog(builder.create());\n  }\n else   if (id == gallery_menu_save) {\n    if (getParentActivity() == null) {\n      return;\n    }\n    if (Build.VERSION.SDK_INT >= 23 && getParentActivity().checkSelfPermission(Manifest.permission.WRITE_EXTERNAL_STORAGE) != PackageManager.PERMISSION_GRANTED) {\n      getParentActivity().requestPermissions(new String[]{Manifest.permission.WRITE_EXTERNAL_STORAGE},4);\n      return;\n    }\n    ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n    if (location == null) {\n      return;\n    }\n    final boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n    File f=FileLoader.getPathToAttach(location.location,isVideo ? \"mp4\" : null,true);\n    if (f.exists()) {\n      MediaController.saveFile(f.toString(),getParentActivity(),0,null,null,() -> {\n        if (getParentActivity() == null) {\n          return;\n        }\n        BulletinFactory.createSaveToGalleryBulletin(ProfileActivity.this,isVideo).show();\n      }\n);\n    }\n  }\n else   if (id == edit_name) {\n    presentFragment(new ChangeNameActivity());\n  }\n else   if (id == logout) {\n    presentFragment(new LogoutActivity());\n  }\n else   if (id == set_as_main) {\n    int position=avatarsViewPager.getRealPosition();\n    TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n    if (photo == null) {\n      return;\n    }\n    avatarsViewPager.startMovePhotoToBegin(position);\n    TLRPC.TL_photos_updateProfilePhoto req=new TLRPC.TL_photos_updateProfilePhoto();\n    req.id=new TLRPC.TL_inputPhoto();\n    req.id.id=photo.id;\n    req.id.access_hash=photo.access_hash;\n    req.id.file_reference=photo.file_reference;\n    UserConfig userConfig=getUserConfig();\n    getConnectionsManager().sendRequest(req,(response,error) -> AndroidUtilities.runOnUIThread(() -> {\n      avatarsViewPager.finishSettingMainPhoto();\n      if (response instanceof TLRPC.TL_photos_photo) {\n        TLRPC.TL_photos_photo photos_photo=(TLRPC.TL_photos_photo)response;\n        getMessagesController().putUsers(photos_photo.users,false);\n        TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n        if (photos_photo.photo instanceof TLRPC.TL_photo) {\n          avatarsViewPager.replaceFirstPhoto(photo,photos_photo.photo);\n          if (user != null) {\n            user.photo.photo_id=photos_photo.photo.id;\n            userConfig.setCurrentUser(user);\n            userConfig.saveConfig(true);\n          }\n        }\n      }\n    }\n));\n    undoView.showWithAction(user_id,UndoView.ACTION_PROFILE_PHOTO_CHANGED,photo.video_sizes.isEmpty() ? null : 1);\n    TLRPC.User user=getMessagesController().getUser(userConfig.clientUserId);\n    TLRPC.PhotoSize bigSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,800);\n    if (user != null) {\n      TLRPC.PhotoSize smallSize=FileLoader.getClosestPhotoSizeWithSize(photo.sizes,90);\n      user.photo.photo_id=photo.id;\n      user.photo.photo_small=smallSize.location;\n      user.photo.photo_big=bigSize.location;\n      userConfig.setCurrentUser(user);\n      userConfig.saveConfig(true);\n      NotificationCenter.getInstance(currentAccount).postNotificationName(NotificationCenter.mainUserInfoChanged);\n      updateProfileData();\n    }\n    avatarsViewPager.commitMoveToBegin();\n  }\n else   if (id == edit_avatar) {\n    int position=avatarsViewPager.getRealPosition();\n    ImageLocation location=avatarsViewPager.getImageLocation(position);\n    if (location == null) {\n      return;\n    }\n    File f=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(location),PhotoViewer.getFileLocationExt(location),true);\n    boolean isVideo=location.imageType == FileLoader.IMAGE_TYPE_ANIMATION;\n    String thumb;\n    if (isVideo) {\n      ImageLocation imageLocation=avatarsViewPager.getRealImageLocation(position);\n      thumb=FileLoader.getPathToAttach(PhotoViewer.getFileLocation(imageLocation),PhotoViewer.getFileLocationExt(imageLocation),true).getAbsolutePath();\n    }\n else {\n      thumb=null;\n    }\n    imageUpdater.openPhotoForEdit(f.getAbsolutePath(),thumb,0,isVideo);\n  }\n else   if (id == delete_avatar) {\n    AlertDialog.Builder builder=new AlertDialog.Builder(getParentActivity());\n    ImageLocation location=avatarsViewPager.getImageLocation(avatarsViewPager.getRealPosition());\n    if (location == null) {\n      return;\n    }\n    if (location.imageType == FileLoader.IMAGE_TYPE_ANIMATION) {\n      builder.setTitle(LocaleController.getString(\"AreYouSureDeleteVideoTitle\",R.string.AreYouSureDeleteVideoTitle));\n      builder.setMessage(LocaleController.formatString(\"AreYouSureDeleteVideo\",R.string.AreYouSureDeleteVideo));\n    }\n else {\n      builder.setTitle(LocaleController.getString(\"AreYouSureDeletePhotoTitle\",R.string.AreYouSureDeletePhotoTitle));\n      builder.setMessage(LocaleController.formatString(\"AreYouSureDeletePhoto\",R.string.AreYouSureDeletePhoto));\n    }\n    builder.setPositiveButton(LocaleController.getString(\"Delete\",R.string.Delete),(dialogInterface,i) -> {\n      int position=avatarsViewPager.getRealPosition();\n      TLRPC.Photo photo=avatarsViewPager.getPhoto(position);\n      if (avatarsViewPager.getRealCount() == 1) {\n        setForegroundImage(true);\n      }\n      if (photo == null || avatarsViewPager.getRealPosition() == 0) {\n        getMessagesController().deleteUserPhoto(null);\n      }\n else {\n        TLRPC.TL_inputPhoto inputPhoto=new TLRPC.TL_inputPhoto();\n        inputPhoto.id=photo.id;\n        inputPhoto.access_hash=photo.access_hash;\n        inputPhoto.file_reference=photo.file_reference;\n        if (inputPhoto.file_reference == null) {\n          inputPhoto.file_reference=new byte[0];\n        }\n        getMessagesController().deleteUserPhoto(inputPhoto);\n        getMessagesStorage().clearUserPhoto(user_id,photo.id);\n      }\n      if (avatarsViewPager.removePhotoAtIndex(position)) {\n        avatarsViewPager.setVisibility(View.GONE);\n        avatarImage.setForegroundAlpha(1f);\n        avatarContainer.setVisibility(View.VISIBLE);\n        doNotSetForeground=true;\n        final View view=layoutManager.findViewByPosition(0);\n        if (view != null) {\n          listView.smoothScrollBy(0,view.getTop() - AndroidUtilities.dp(88),CubicBezierInterpolator.EASE_OUT_QUINT);\n        }\n      }\n    }\n);\n    builder.setNegativeButton(LocaleController.getString(\"Cancel\",R.string.Cancel),null);\n    AlertDialog alertDialog=builder.create();\n    showDialog(alertDialog);\n    TextView button=(TextView)alertDialog.getButton(DialogInterface.BUTTON_POSITIVE);\n    if (button != null) {\n      button.setTextColor(Theme.getColor(Theme.key_dialogTextRed2));\n    }\n  }\n else   if (id == add_photo) {\n    onWriteButtonClick();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 2347,
      "astHeight" : 41
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 1585,
        "startColumnNumber" : 32,
        "endLineNumber" : 1585,
        "endColumnNumber" : 125
      },
      "nodeContext" : "text=String.format(\"https://\" + getMessagesController().linkPrefix + \"/%s\",chat.username);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 1573,
    "startColumnNumber" : 39,
    "endLineNumber" : 1573,
    "endColumnNumber" : 45
  }, {
    "charLength" : 6,
    "startLineNumber" : 1575,
    "startColumnNumber" : 39,
    "endLineNumber" : 1575,
    "endColumnNumber" : 45
  }, {
    "charLength" : 6,
    "startLineNumber" : 1583,
    "startColumnNumber" : 39,
    "endLineNumber" : 1583,
    "endColumnNumber" : 45
  }, {
    "charLength" : 6,
    "startLineNumber" : 1585,
    "startColumnNumber" : 39,
    "endLineNumber" : 1585,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  } ]
}