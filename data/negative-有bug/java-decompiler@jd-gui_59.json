{
  "id" : 59,
  "expression" : "KeyStroke",
  "projectName" : "java-decompiler@jd-gui",
  "commitID" : "fbc5b14d66b37b88bf1dc18386b530e874550240",
  "filePath" : "/app/src/main/java/org/jd/gui/view/GoToView.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "KeyStroke",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 94,
      "startColumnNumber" : 84,
      "endLineNumber" : 94,
      "endColumnNumber" : 93
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 94,
        "startColumnNumber" : 84,
        "endLineNumber" : 94,
        "endColumnNumber" : 129
      },
      "nodeContext" : "KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE,0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 141,
        "startLineNumber" : 94,
        "startColumnNumber" : 12,
        "endLineNumber" : 94,
        "endColumnNumber" : 153
      },
      "nodeContext" : "rootPane.getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT).put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE,0),\"OpenTypeView.cancel\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 94,
        "startColumnNumber" : 12,
        "endLineNumber" : 94,
        "endColumnNumber" : 154
      },
      "nodeContext" : "rootPane.getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT).put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE,0),\"OpenTypeView.cancel\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 5286,
        "startLineNumber" : 34,
        "startColumnNumber" : 36,
        "endLineNumber" : 147,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  goToDialog=new JDialog(mainFrame,\"Go to Line\",false);\n  goToDialog.setResizable(false);\n  Box vbox=Box.createVerticalBox();\n  vbox.setBorder(BorderFactory.createEmptyBorder(15,15,15,15));\n  goToDialog.add(vbox);\n  Box hbox=Box.createHorizontalBox();\n  hbox.add(goToEnterLineNumberLabel=new JLabel());\n  hbox.add(Box.createHorizontalGlue());\n  vbox.add(hbox);\n  vbox.add(Box.createVerticalStrut(10));\n  vbox.add(goToEnterLineNumberTextField=new JTextField(30));\n  vbox.add(Box.createVerticalStrut(10));\n  hbox=Box.createHorizontalBox();\n  hbox.add(goToEnterLineNumberErrorLabel=new JLabel(\" \"));\n  goToEnterLineNumberTextField.addKeyListener(new KeyAdapter(){\n    @Override public void keyTyped(    KeyEvent e){\n      if (!Character.isDigit(e.getKeyChar())) {\n        e.consume();\n      }\n    }\n  }\n);\n  hbox.add(Box.createHorizontalGlue());\n  vbox.add(hbox);\n  vbox.add(Box.createVerticalStrut(15));\n  hbox=Box.createHorizontalBox();\n  hbox.add(Box.createHorizontalGlue());\n  JButton goToOkButton=new JButton(\"   Ok   \");\n  hbox.add(goToOkButton);\n  goToOkButton.setEnabled(false);\n  goToOkButton.addActionListener(e -> {\n    okCallback.accept(Integer.valueOf(goToEnterLineNumberTextField.getText()));\n    goToDialog.setVisible(false);\n  }\n);\n  hbox.add(Box.createHorizontalStrut(5));\n  JButton goToCancelButton=new JButton(\"Cancel\");\n  hbox.add(goToCancelButton);\n  Action goToCancelActionListener=new AbstractAction(){\n    public void actionPerformed(    ActionEvent actionEvent){\n      goToDialog.setVisible(false);\n    }\n  }\n;\n  goToCancelButton.addActionListener(goToCancelActionListener);\n  vbox.add(hbox);\n  vbox.add(Box.createVerticalStrut(13));\n  JRootPane rootPane=goToDialog.getRootPane();\n  rootPane.setDefaultButton(goToOkButton);\n  rootPane.getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT).put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE,0),\"OpenTypeView.cancel\");\n  rootPane.getActionMap().put(\"OpenTypeView.cancel\",goToCancelActionListener);\n  goToEnterLineNumberTextField.getDocument().addDocumentListener(new DocumentListener(){\n    protected Color backgroundColor=UIManager.getColor(\"TextField.background\");\n    protected Color errorBackgroundColor=Color.decode(configuration.getPreferences().get(\"JdGuiPreferences.errorBackgroundColor\"));\n    @Override public void insertUpdate(    DocumentEvent e){\n      onTextChange();\n    }\n    @Override public void removeUpdate(    DocumentEvent e){\n      onTextChange();\n    }\n    @Override public void changedUpdate(    DocumentEvent e){\n      onTextChange();\n    }\n    protected void onTextChange(){\n      String text=goToEnterLineNumberTextField.getText();\n      if (text.length() == 0) {\n        goToOkButton.setEnabled(false);\n        clearErrorMessage();\n      }\n else {\n        try {\n          int lineNumber=Integer.valueOf(text);\n          if (lineNumber > navigator.getMaximumLineNumber()) {\n            goToOkButton.setEnabled(false);\n            showErrorMessage(\"Line number out of range\");\n          }\n else           if (navigator.checkLineNumber(lineNumber)) {\n            goToOkButton.setEnabled(true);\n            clearErrorMessage();\n          }\n else {\n            goToOkButton.setEnabled(false);\n            showErrorMessage(\"Line number not found\");\n          }\n        }\n catch (        NumberFormatException e) {\n          goToOkButton.setEnabled(false);\n          showErrorMessage(\"Not a number\");\n        }\n      }\n    }\n    protected void showErrorMessage(    String message){\n      goToEnterLineNumberErrorLabel.setText(message);\n      goToEnterLineNumberTextField.setBackground(errorBackgroundColor);\n    }\n    protected void clearErrorMessage(){\n      goToEnterLineNumberErrorLabel.setText(\" \");\n      goToEnterLineNumberTextField.setBackground(backgroundColor);\n    }\n  }\n);\n  goToDialog.pack();\n  goToDialog.setLocationRelativeTo(mainFrame);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 532,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 5292,
        "startLineNumber" : 34,
        "startColumnNumber" : 30,
        "endLineNumber" : 147,
        "endColumnNumber" : 9
      },
      "nodeContext" : "() -> {\n  goToDialog=new JDialog(mainFrame,\"Go to Line\",false);\n  goToDialog.setResizable(false);\n  Box vbox=Box.createVerticalBox();\n  vbox.setBorder(BorderFactory.createEmptyBorder(15,15,15,15));\n  goToDialog.add(vbox);\n  Box hbox=Box.createHorizontalBox();\n  hbox.add(goToEnterLineNumberLabel=new JLabel());\n  hbox.add(Box.createHorizontalGlue());\n  vbox.add(hbox);\n  vbox.add(Box.createVerticalStrut(10));\n  vbox.add(goToEnterLineNumberTextField=new JTextField(30));\n  vbox.add(Box.createVerticalStrut(10));\n  hbox=Box.createHorizontalBox();\n  hbox.add(goToEnterLineNumberErrorLabel=new JLabel(\" \"));\n  goToEnterLineNumberTextField.addKeyListener(new KeyAdapter(){\n    @Override public void keyTyped(    KeyEvent e){\n      if (!Character.isDigit(e.getKeyChar())) {\n        e.consume();\n      }\n    }\n  }\n);\n  hbox.add(Box.createHorizontalGlue());\n  vbox.add(hbox);\n  vbox.add(Box.createVerticalStrut(15));\n  hbox=Box.createHorizontalBox();\n  hbox.add(Box.createHorizontalGlue());\n  JButton goToOkButton=new JButton(\"   Ok   \");\n  hbox.add(goToOkButton);\n  goToOkButton.setEnabled(false);\n  goToOkButton.addActionListener(e -> {\n    okCallback.accept(Integer.valueOf(goToEnterLineNumberTextField.getText()));\n    goToDialog.setVisible(false);\n  }\n);\n  hbox.add(Box.createHorizontalStrut(5));\n  JButton goToCancelButton=new JButton(\"Cancel\");\n  hbox.add(goToCancelButton);\n  Action goToCancelActionListener=new AbstractAction(){\n    public void actionPerformed(    ActionEvent actionEvent){\n      goToDialog.setVisible(false);\n    }\n  }\n;\n  goToCancelButton.addActionListener(goToCancelActionListener);\n  vbox.add(hbox);\n  vbox.add(Box.createVerticalStrut(13));\n  JRootPane rootPane=goToDialog.getRootPane();\n  rootPane.setDefaultButton(goToOkButton);\n  rootPane.getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT).put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE,0),\"OpenTypeView.cancel\");\n  rootPane.getActionMap().put(\"OpenTypeView.cancel\",goToCancelActionListener);\n  goToEnterLineNumberTextField.getDocument().addDocumentListener(new DocumentListener(){\n    protected Color backgroundColor=UIManager.getColor(\"TextField.background\");\n    protected Color errorBackgroundColor=Color.decode(configuration.getPreferences().get(\"JdGuiPreferences.errorBackgroundColor\"));\n    @Override public void insertUpdate(    DocumentEvent e){\n      onTextChange();\n    }\n    @Override public void removeUpdate(    DocumentEvent e){\n      onTextChange();\n    }\n    @Override public void changedUpdate(    DocumentEvent e){\n      onTextChange();\n    }\n    protected void onTextChange(){\n      String text=goToEnterLineNumberTextField.getText();\n      if (text.length() == 0) {\n        goToOkButton.setEnabled(false);\n        clearErrorMessage();\n      }\n else {\n        try {\n          int lineNumber=Integer.valueOf(text);\n          if (lineNumber > navigator.getMaximumLineNumber()) {\n            goToOkButton.setEnabled(false);\n            showErrorMessage(\"Line number out of range\");\n          }\n else           if (navigator.checkLineNumber(lineNumber)) {\n            goToOkButton.setEnabled(true);\n            clearErrorMessage();\n          }\n else {\n            goToOkButton.setEnabled(false);\n            showErrorMessage(\"Line number not found\");\n          }\n        }\n catch (        NumberFormatException e) {\n          goToOkButton.setEnabled(false);\n          showErrorMessage(\"Not a number\");\n        }\n      }\n    }\n    protected void showErrorMessage(    String message){\n      goToEnterLineNumberErrorLabel.setText(message);\n      goToEnterLineNumberTextField.setBackground(errorBackgroundColor);\n    }\n    protected void clearErrorMessage(){\n      goToEnterLineNumberErrorLabel.setText(\" \");\n      goToEnterLineNumberTextField.setBackground(backgroundColor);\n    }\n  }\n);\n  goToDialog.pack();\n  goToDialog.setLocationRelativeTo(mainFrame);\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 533,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 142,
        "startLineNumber" : 94,
        "startColumnNumber" : 12,
        "endLineNumber" : 94,
        "endColumnNumber" : 154
      },
      "nodeContext" : "rootPane.getInputMap(JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT).put(KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE,0),\"OpenTypeView.cancel\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "javax.swing.KeyStroke"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 94,
    "startColumnNumber" : 84,
    "endLineNumber" : 94,
    "endColumnNumber" : 93
  } ],
  "layoutRelationDataList" : [ ]
}