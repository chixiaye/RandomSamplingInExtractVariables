{
  "id" : 169,
  "expression" : "DBUtils.findObject(cachedObjects,objectName)",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.model/src/org/jkiss/dbeaver/model/impl/sql/edit/SQLObjectEditor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "DBUtils.findObject(cachedObjects,objectName)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 45,
      "startLineNumber" : 350,
      "startColumnNumber" : 47,
      "endLineNumber" : 350,
      "endColumnNumber" : 92
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 350,
        "startColumnNumber" : 32,
        "endLineNumber" : 350,
        "endColumnNumber" : 92
      },
      "nodeContext" : "cachedObject=DBUtils.findObject(cachedObjects,objectName)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 350,
        "startColumnNumber" : 20,
        "endLineNumber" : 350,
        "endColumnNumber" : 93
      },
      "nodeContext" : "OBJECT_TYPE cachedObject=DBUtils.findObject(cachedObjects,objectName);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 736,
        "startLineNumber" : 343,
        "startColumnNumber" : 42,
        "endLineNumber" : 354,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  List<OBJECT_TYPE> cachedObjects;\n  if (objectsCache instanceof DBSCompositeCache) {\n    cachedObjects=((DBSCompositeCache)objectsCache).getCachedObjects(newObject.getParentObject());\n  }\n else {\n    cachedObjects=objectsCache.getCachedObjects();\n  }\n  OBJECT_TYPE cachedObject=DBUtils.findObject(cachedObjects,objectName);\n  if (cachedObject != null && cachedObject != newObject && cachedObject.isPersisted()) {\n    throw new DBException(DBUtils.getObjectTypeName(newObject) + \" '\" + objectName+ \"' already exists\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 70,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 762,
        "startLineNumber" : 343,
        "startColumnNumber" : 16,
        "endLineNumber" : 354,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (objectsCache != null) {\n  List<OBJECT_TYPE> cachedObjects;\n  if (objectsCache instanceof DBSCompositeCache) {\n    cachedObjects=((DBSCompositeCache)objectsCache).getCachedObjects(newObject.getParentObject());\n  }\n else {\n    cachedObjects=objectsCache.getCachedObjects();\n  }\n  OBJECT_TYPE cachedObject=DBUtils.findObject(cachedObjects,objectName);\n  if (cachedObject != null && cachedObject != newObject && cachedObject.isPersisted()) {\n    throw new DBException(DBUtils.getObjectTypeName(newObject) + \" '\" + objectName+ \"' already exists\");\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 74,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1148,
        "startLineNumber" : 337,
        "startColumnNumber" : 42,
        "endLineNumber" : 355,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  String objectName=newObject.getName();\n  if (CommonUtils.isEmpty(objectName)) {\n    throw new DBException(\"Empty \" + DBUtils.getObjectTypeName(newObject).toLowerCase() + \" name\");\n  }\n  DBSObjectCache<? extends DBSObject,OBJECT_TYPE> objectsCache=getObjectsCache(newObject);\n  if (objectsCache != null) {\n    List<OBJECT_TYPE> cachedObjects;\n    if (objectsCache instanceof DBSCompositeCache) {\n      cachedObjects=((DBSCompositeCache)objectsCache).getCachedObjects(newObject.getParentObject());\n    }\n else {\n      cachedObjects=objectsCache.getCachedObjects();\n    }\n    OBJECT_TYPE cachedObject=DBUtils.findObject(cachedObjects,objectName);\n    if (cachedObject != null && cachedObject != newObject && cachedObject.isPersisted()) {\n      throw new DBException(DBUtils.getObjectTypeName(newObject) + \" '\" + objectName+ \"' already exists\");\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 116,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1178,
        "startLineNumber" : 337,
        "startColumnNumber" : 12,
        "endLineNumber" : 355,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (!newObject.isPersisted()) {\n  String objectName=newObject.getName();\n  if (CommonUtils.isEmpty(objectName)) {\n    throw new DBException(\"Empty \" + DBUtils.getObjectTypeName(newObject).toLowerCase() + \" name\");\n  }\n  DBSObjectCache<? extends DBSObject,OBJECT_TYPE> objectsCache=getObjectsCache(newObject);\n  if (objectsCache != null) {\n    List<OBJECT_TYPE> cachedObjects;\n    if (objectsCache instanceof DBSCompositeCache) {\n      cachedObjects=((DBSCompositeCache)objectsCache).getCachedObjects(newObject.getParentObject());\n    }\n else {\n      cachedObjects=objectsCache.getCachedObjects();\n    }\n    OBJECT_TYPE cachedObject=DBUtils.findObject(cachedObjects,objectName);\n    if (cachedObject != null && cachedObject != newObject && cachedObject.isPersisted()) {\n      throw new DBException(DBUtils.getObjectTypeName(newObject) + \" '\" + objectName+ \"' already exists\");\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 121,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1251,
        "startLineNumber" : 335,
        "startColumnNumber" : 112,
        "endLineNumber" : 356,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  OBJECT_TYPE newObject=getObject();\n  if (!newObject.isPersisted()) {\n    String objectName=newObject.getName();\n    if (CommonUtils.isEmpty(objectName)) {\n      throw new DBException(\"Empty \" + DBUtils.getObjectTypeName(newObject).toLowerCase() + \" name\");\n    }\n    DBSObjectCache<? extends DBSObject,OBJECT_TYPE> objectsCache=getObjectsCache(newObject);\n    if (objectsCache != null) {\n      List<OBJECT_TYPE> cachedObjects;\n      if (objectsCache instanceof DBSCompositeCache) {\n        cachedObjects=((DBSCompositeCache)objectsCache).getCachedObjects(newObject.getParentObject());\n      }\n else {\n        cachedObjects=objectsCache.getCachedObjects();\n      }\n      OBJECT_TYPE cachedObject=DBUtils.findObject(cachedObjects,objectName);\n      if (cachedObject != null && cachedObject != newObject && cachedObject.isPersisted()) {\n        throw new DBException(DBUtils.getObjectTypeName(newObject) + \" '\" + objectName+ \"' already exists\");\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1373,
        "startLineNumber" : 334,
        "startColumnNumber" : 8,
        "endLineNumber" : 356,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public void validateCommand(DBRProgressMonitor monitor,Map<String,Object> options) throws DBException {\n  OBJECT_TYPE newObject=getObject();\n  if (!newObject.isPersisted()) {\n    String objectName=newObject.getName();\n    if (CommonUtils.isEmpty(objectName)) {\n      throw new DBException(\"Empty \" + DBUtils.getObjectTypeName(newObject).toLowerCase() + \" name\");\n    }\n    DBSObjectCache<? extends DBSObject,OBJECT_TYPE> objectsCache=getObjectsCache(newObject);\n    if (objectsCache != null) {\n      List<OBJECT_TYPE> cachedObjects;\n      if (objectsCache instanceof DBSCompositeCache) {\n        cachedObjects=((DBSCompositeCache)objectsCache).getCachedObjects(newObject.getParentObject());\n      }\n else {\n        cachedObjects=objectsCache.getCachedObjects();\n      }\n      OBJECT_TYPE cachedObject=DBUtils.findObject(cachedObjects,objectName);\n      if (cachedObject != null && cachedObject != newObject && cachedObject.isPersisted()) {\n        throw new DBException(DBUtils.getObjectTypeName(newObject) + \" '\" + objectName+ \"' already exists\");\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 150,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 350,
        "startColumnNumber" : 20,
        "endLineNumber" : 350,
        "endColumnNumber" : 93
      },
      "nodeContext" : "OBJECT_TYPE cachedObject=DBUtils.findObject(cachedObjects,objectName);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "OBJECT_TYPE"
  } ],
  "positionList" : [ {
    "charLength" : 45,
    "startLineNumber" : 350,
    "startColumnNumber" : 47,
    "endLineNumber" : 350,
    "endColumnNumber" : 92
  } ],
  "layoutRelationDataList" : [ ]
}