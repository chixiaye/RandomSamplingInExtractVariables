{
  "id" : 168,
  "expression" : "(JsonObject)json.getValue(\"config\")",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/main/generated/io/vertx/core/DeploymentOptionsConverter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(JsonObject)json.getValue(\"config\")",
    "nodeType" : "CastExpression",
    "nodePosition" : {
      "charLength" : 35,
      "startLineNumber" : 31,
      "startColumnNumber" : 21,
      "endLineNumber" : 31,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 31,
        "startColumnNumber" : 20,
        "endLineNumber" : 31,
        "endColumnNumber" : 57
      },
      "nodeContext" : "((JsonObject)json.getValue(\"config\"))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 31,
        "startColumnNumber" : 20,
        "endLineNumber" : 31,
        "endColumnNumber" : 64
      },
      "nodeContext" : "((JsonObject)json.getValue(\"config\")).copy()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 31,
        "startColumnNumber" : 6,
        "endLineNumber" : 31,
        "endColumnNumber" : 65
      },
      "nodeContext" : "obj.setConfig(((JsonObject)json.getValue(\"config\")).copy())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 31,
        "startColumnNumber" : 6,
        "endLineNumber" : 31,
        "endColumnNumber" : 66
      },
      "nodeContext" : "obj.setConfig(((JsonObject)json.getValue(\"config\")).copy());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 30,
        "startColumnNumber" : 55,
        "endLineNumber" : 32,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  obj.setConfig(((JsonObject)json.getValue(\"config\")).copy());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 30,
        "startColumnNumber" : 4,
        "endLineNumber" : 32,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (json.getValue(\"config\") instanceof JsonObject) {\n  obj.setConfig(((JsonObject)json.getValue(\"config\")).copy());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 23,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1416,
        "startLineNumber" : 29,
        "startColumnNumber" : 70,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (json.getValue(\"config\") instanceof JsonObject) {\n    obj.setConfig(((JsonObject)json.getValue(\"config\")).copy());\n  }\n  if (json.getValue(\"extraClasspath\") instanceof JsonArray) {\n    java.util.ArrayList<java.lang.String> list=new java.util.ArrayList<>();\n    json.getJsonArray(\"extraClasspath\").forEach(item -> {\n      if (item instanceof String)       list.add((String)item);\n    }\n);\n    obj.setExtraClasspath(list);\n  }\n  if (json.getValue(\"ha\") instanceof Boolean) {\n    obj.setHa((Boolean)json.getValue(\"ha\"));\n  }\n  if (json.getValue(\"instances\") instanceof Number) {\n    obj.setInstances(((Number)json.getValue(\"instances\")).intValue());\n  }\n  if (json.getValue(\"isolatedClasses\") instanceof JsonArray) {\n    java.util.ArrayList<java.lang.String> list=new java.util.ArrayList<>();\n    json.getJsonArray(\"isolatedClasses\").forEach(item -> {\n      if (item instanceof String)       list.add((String)item);\n    }\n);\n    obj.setIsolatedClasses(list);\n  }\n  if (json.getValue(\"isolationGroup\") instanceof String) {\n    obj.setIsolationGroup((String)json.getValue(\"isolationGroup\"));\n  }\n  if (json.getValue(\"multiThreaded\") instanceof Boolean) {\n    obj.setMultiThreaded((Boolean)json.getValue(\"multiThreaded\"));\n  }\n  if (json.getValue(\"worker\") instanceof Boolean) {\n    obj.setWorker((Boolean)json.getValue(\"worker\"));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 251,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1484,
        "startLineNumber" : 29,
        "startColumnNumber" : 2,
        "endLineNumber" : 64,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static void fromJson(JsonObject json,DeploymentOptions obj){\n  if (json.getValue(\"config\") instanceof JsonObject) {\n    obj.setConfig(((JsonObject)json.getValue(\"config\")).copy());\n  }\n  if (json.getValue(\"extraClasspath\") instanceof JsonArray) {\n    java.util.ArrayList<java.lang.String> list=new java.util.ArrayList<>();\n    json.getJsonArray(\"extraClasspath\").forEach(item -> {\n      if (item instanceof String)       list.add((String)item);\n    }\n);\n    obj.setExtraClasspath(list);\n  }\n  if (json.getValue(\"ha\") instanceof Boolean) {\n    obj.setHa((Boolean)json.getValue(\"ha\"));\n  }\n  if (json.getValue(\"instances\") instanceof Number) {\n    obj.setInstances(((Number)json.getValue(\"instances\")).intValue());\n  }\n  if (json.getValue(\"isolatedClasses\") instanceof JsonArray) {\n    java.util.ArrayList<java.lang.String> list=new java.util.ArrayList<>();\n    json.getJsonArray(\"isolatedClasses\").forEach(item -> {\n      if (item instanceof String)       list.add((String)item);\n    }\n);\n    obj.setIsolatedClasses(list);\n  }\n  if (json.getValue(\"isolationGroup\") instanceof String) {\n    obj.setIsolationGroup((String)json.getValue(\"isolationGroup\"));\n  }\n  if (json.getValue(\"multiThreaded\") instanceof Boolean) {\n    obj.setMultiThreaded((Boolean)json.getValue(\"multiThreaded\"));\n  }\n  if (json.getValue(\"worker\") instanceof Boolean) {\n    obj.setWorker((Boolean)json.getValue(\"worker\"));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 264,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 31,
        "startColumnNumber" : 6,
        "endLineNumber" : 31,
        "endColumnNumber" : 66
      },
      "nodeContext" : "obj.setConfig(((JsonObject)json.getValue(\"config\")).copy());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 14,
      "astHeight" : 7
    },
    "tokenLength" : 4,
    "type" : "io.vertx.core.json.JsonObject"
  } ],
  "positionList" : [ {
    "charLength" : 35,
    "startLineNumber" : 31,
    "startColumnNumber" : 21,
    "endLineNumber" : 31,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}