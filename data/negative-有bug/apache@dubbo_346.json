{
  "id" : 346,
  "expression" : "iName",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-config/dubbo-config-api/src/main/java/org/apache/dubbo/config/utils/ReferenceConfigCache.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "iName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 49,
      "startColumnNumber" : 32,
      "endLineNumber" : 49,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 49,
        "endColumnNumber" : 38
      },
      "nodeContext" : "StringUtils.isBlank(iName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 146,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (StringUtils.isBlank(iName)) {\n  Class<?> clazz=referenceConfig.getInterfaceClass();\n  iName=clazz.getName();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 763,
        "startLineNumber" : 47,
        "startColumnNumber" : 80,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String iName=referenceConfig.getInterface();\n  if (StringUtils.isBlank(iName)) {\n    Class<?> clazz=referenceConfig.getInterfaceClass();\n    iName=clazz.getName();\n  }\n  if (StringUtils.isBlank(iName)) {\n    throw new IllegalArgumentException(\"No interface info in ReferenceConfig\" + referenceConfig);\n  }\n  StringBuilder ret=new StringBuilder();\n  if (!StringUtils.isBlank(referenceConfig.getGroup())) {\n    ret.append(referenceConfig.getGroup()).append(\"/\");\n  }\n  ret.append(iName);\n  if (!StringUtils.isBlank(referenceConfig.getVersion())) {\n    ret.append(\":\").append(referenceConfig.getVersion());\n  }\n  return ret.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 782,
        "startLineNumber" : 47,
        "startColumnNumber" : 61,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "referenceConfig -> {\n  String iName=referenceConfig.getInterface();\n  if (StringUtils.isBlank(iName)) {\n    Class<?> clazz=referenceConfig.getInterfaceClass();\n    iName=clazz.getName();\n  }\n  if (StringUtils.isBlank(iName)) {\n    throw new IllegalArgumentException(\"No interface info in ReferenceConfig\" + referenceConfig);\n  }\n  StringBuilder ret=new StringBuilder();\n  if (!StringUtils.isBlank(referenceConfig.getGroup())) {\n    ret.append(referenceConfig.getGroup()).append(\"/\");\n  }\n  ret.append(iName);\n  if (!StringUtils.isBlank(referenceConfig.getVersion())) {\n    ret.append(\":\").append(referenceConfig.getVersion());\n  }\n  return ret.toString();\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 102,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 49,
        "endColumnNumber" : 38
      },
      "nodeContext" : "StringUtils.isBlank(iName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "iName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 53,
      "startColumnNumber" : 32,
      "endLineNumber" : 53,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 53,
        "startColumnNumber" : 12,
        "endLineNumber" : 53,
        "endColumnNumber" : 38
      },
      "nodeContext" : "StringUtils.isBlank(iName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (StringUtils.isBlank(iName)) {\n  throw new IllegalArgumentException(\"No interface info in ReferenceConfig\" + referenceConfig);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 763,
        "startLineNumber" : 47,
        "startColumnNumber" : 80,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String iName=referenceConfig.getInterface();\n  if (StringUtils.isBlank(iName)) {\n    Class<?> clazz=referenceConfig.getInterfaceClass();\n    iName=clazz.getName();\n  }\n  if (StringUtils.isBlank(iName)) {\n    throw new IllegalArgumentException(\"No interface info in ReferenceConfig\" + referenceConfig);\n  }\n  StringBuilder ret=new StringBuilder();\n  if (!StringUtils.isBlank(referenceConfig.getGroup())) {\n    ret.append(referenceConfig.getGroup()).append(\"/\");\n  }\n  ret.append(iName);\n  if (!StringUtils.isBlank(referenceConfig.getVersion())) {\n    ret.append(\":\").append(referenceConfig.getVersion());\n  }\n  return ret.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 782,
        "startLineNumber" : 47,
        "startColumnNumber" : 61,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "referenceConfig -> {\n  String iName=referenceConfig.getInterface();\n  if (StringUtils.isBlank(iName)) {\n    Class<?> clazz=referenceConfig.getInterfaceClass();\n    iName=clazz.getName();\n  }\n  if (StringUtils.isBlank(iName)) {\n    throw new IllegalArgumentException(\"No interface info in ReferenceConfig\" + referenceConfig);\n  }\n  StringBuilder ret=new StringBuilder();\n  if (!StringUtils.isBlank(referenceConfig.getGroup())) {\n    ret.append(referenceConfig.getGroup()).append(\"/\");\n  }\n  ret.append(iName);\n  if (!StringUtils.isBlank(referenceConfig.getVersion())) {\n    ret.append(\":\").append(referenceConfig.getVersion());\n  }\n  return ret.toString();\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 102,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 53,
        "startColumnNumber" : 12,
        "endLineNumber" : 53,
        "endColumnNumber" : 38
      },
      "nodeContext" : "StringUtils.isBlank(iName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "iName",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 61,
      "startColumnNumber" : 19,
      "endLineNumber" : 61,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 25
      },
      "nodeContext" : "ret.append(iName)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 26
      },
      "nodeContext" : "ret.append(iName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.LambdaExpression,body]",
      "nodePosition" : {
        "charLength" : 763,
        "startLineNumber" : 47,
        "startColumnNumber" : 80,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String iName=referenceConfig.getInterface();\n  if (StringUtils.isBlank(iName)) {\n    Class<?> clazz=referenceConfig.getInterfaceClass();\n    iName=clazz.getName();\n  }\n  if (StringUtils.isBlank(iName)) {\n    throw new IllegalArgumentException(\"No interface info in ReferenceConfig\" + referenceConfig);\n  }\n  StringBuilder ret=new StringBuilder();\n  if (!StringUtils.isBlank(referenceConfig.getGroup())) {\n    ret.append(referenceConfig.getGroup()).append(\"/\");\n  }\n  ret.append(iName);\n  if (!StringUtils.isBlank(referenceConfig.getVersion())) {\n    ret.append(\":\").append(referenceConfig.getVersion());\n  }\n  return ret.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 782,
        "startLineNumber" : 47,
        "startColumnNumber" : 61,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "referenceConfig -> {\n  String iName=referenceConfig.getInterface();\n  if (StringUtils.isBlank(iName)) {\n    Class<?> clazz=referenceConfig.getInterfaceClass();\n    iName=clazz.getName();\n  }\n  if (StringUtils.isBlank(iName)) {\n    throw new IllegalArgumentException(\"No interface info in ReferenceConfig\" + referenceConfig);\n  }\n  StringBuilder ret=new StringBuilder();\n  if (!StringUtils.isBlank(referenceConfig.getGroup())) {\n    ret.append(referenceConfig.getGroup()).append(\"/\");\n  }\n  ret.append(iName);\n  if (!StringUtils.isBlank(referenceConfig.getVersion())) {\n    ret.append(\":\").append(referenceConfig.getVersion());\n  }\n  return ret.toString();\n}\n",
      "nodeType" : "LambdaExpression",
      "astNodeNumber" : 102,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 61,
        "endColumnNumber" : 26
      },
      "nodeContext" : "ret.append(iName);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 49,
    "startColumnNumber" : 32,
    "endLineNumber" : 49,
    "endColumnNumber" : 37
  }, {
    "charLength" : 5,
    "startLineNumber" : 53,
    "startColumnNumber" : 32,
    "endLineNumber" : 53,
    "endColumnNumber" : 37
  }, {
    "charLength" : 5,
    "startLineNumber" : 61,
    "startColumnNumber" : 19,
    "endLineNumber" : 61,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  } ]
}