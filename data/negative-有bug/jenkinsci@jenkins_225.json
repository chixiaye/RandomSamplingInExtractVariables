{
  "id" : 225,
  "expression" : "new AbortExceptionPublisher()",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/test/src/test/java/hudson/model/FreestyleJobPublisherTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new AbortExceptionPublisher()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 60,
      "startColumnNumber" : 34,
      "endLineNumber" : 60,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 64
      },
      "nodeContext" : "p.getPublishersList().add(new AbortExceptionPublisher())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 65
      },
      "nodeContext" : "p.getPublishersList().add(new AbortExceptionPublisher());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1246,
        "startLineNumber" : 56,
        "startColumnNumber" : 71,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  FreeStyleProject p=j.createFreeStyleProject();\n  p.getPublishersList().add(new TrueFalsePublisher(true));\n  p.getPublishersList().add(new AbortExceptionPublisher());\n  p.getPublishersList().add(new ResultWriterPublisher(\"result.txt\"));\n  final ArtifactArchiver artifactArchiver=new ArtifactArchiver(\"result.txt\");\n  artifactArchiver.setOnlyIfSuccessful(false);\n  p.getPublishersList().add(artifactArchiver);\n  FreeStyleBuild b=p.scheduleBuild2(0).get();\n  assertEquals(\"Build must fail, because we used AbortExceptionPublisher\",Result.FAILURE,b.getResult());\n  j.assertLogNotContains(\"\\tat\",b);\n  j.assertLogContains(\"Threw AbortException from publisher!\",b);\n  File file=new File(b.getArtifactsDir(),\"result.txt\");\n  assertTrue(\"ArtifactArchiver is executed even prior publisher fails\",file.exists());\n  assertEquals(\"Third publisher must see FAILURE status\",FileUtils.readFileToString(file,StandardCharsets.UTF_8),Result.FAILURE.toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 128,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1442,
        "startLineNumber" : 51,
        "startColumnNumber" : 4,
        "endLineNumber" : 74,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Execute all publishers even one of them throws AbortException.\n */\n@Issue(\"JENKINS-26964\") @Test public void testFreestyleWithExceptionPublisher() throws Exception {\n  FreeStyleProject p=j.createFreeStyleProject();\n  p.getPublishersList().add(new TrueFalsePublisher(true));\n  p.getPublishersList().add(new AbortExceptionPublisher());\n  p.getPublishersList().add(new ResultWriterPublisher(\"result.txt\"));\n  final ArtifactArchiver artifactArchiver=new ArtifactArchiver(\"result.txt\");\n  artifactArchiver.setOnlyIfSuccessful(false);\n  p.getPublishersList().add(artifactArchiver);\n  FreeStyleBuild b=p.scheduleBuild2(0).get();\n  assertEquals(\"Build must fail, because we used AbortExceptionPublisher\",Result.FAILURE,b.getResult());\n  j.assertLogNotContains(\"\\tat\",b);\n  j.assertLogContains(\"Threw AbortException from publisher!\",b);\n  File file=new File(b.getArtifactsDir(),\"result.txt\");\n  assertTrue(\"ArtifactArchiver is executed even prior publisher fails\",file.exists());\n  assertEquals(\"Third publisher must see FAILURE status\",FileUtils.readFileToString(file,StandardCharsets.UTF_8),Result.FAILURE.toString());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 140,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 60,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 65
      },
      "nodeContext" : "p.getPublishersList().add(new AbortExceptionPublisher());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "hudson.model.AbortExceptionPublisher"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 60,
    "startColumnNumber" : 34,
    "endLineNumber" : 60,
    "endColumnNumber" : 63
  } ],
  "layoutRelationDataList" : [ ]
}