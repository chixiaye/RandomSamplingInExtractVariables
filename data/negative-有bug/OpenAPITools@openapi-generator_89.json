{
  "id" : 89,
  "expression" : "((Map<String,?>)value)",
  "projectName" : "OpenAPITools@openapi-generator",
  "commitID" : "9e1972bb1d3a4f1e3f47c87613f4050feada0146",
  "filePath" : "/modules/openapi-generator/src/main/java/org/openapitools/codegen/utils/JsonCacheImpl.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "((Map<String,?>)value)",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 1655,
      "startColumnNumber" : 42,
      "endLineNumber" : 1655,
      "endColumnNumber" : 66
    },
    "astNodeNumber" : 9,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 1655,
        "startColumnNumber" : 42,
        "endLineNumber" : 1655,
        "endColumnNumber" : 77
      },
      "nodeContext" : "((Map<String,?>)value).entrySet()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 150,
        "startLineNumber" : 1655,
        "startColumnNumber" : 12,
        "endLineNumber" : 1656,
        "endColumnNumber" : 83
      },
      "nodeContext" : "for (Entry<String,?> entry : ((Map<String,?>)value).entrySet()) ((ObjectNode)node).set(entry.getKey(),nodeFor(entry.getValue()));\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 212,
        "startLineNumber" : 1653,
        "startColumnNumber" : 41,
        "endLineNumber" : 1657,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  node=root.objectNode();\n  for (  Entry<String,?> entry : ((Map<String,?>)value).entrySet())   ((ObjectNode)node).set(entry.getKey(),nodeFor(entry.getValue()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1486,
        "startLineNumber" : 1653,
        "startColumnNumber" : 15,
        "endLineNumber" : 1682,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (value instanceof Map) {\n  node=root.objectNode();\n  for (  Entry<String,?> entry : ((Map<String,?>)value).entrySet())   ((ObjectNode)node).set(entry.getKey(),nodeFor(entry.getValue()));\n}\n else if (value instanceof Number) {\n  if (value instanceof Byte)   node=root.numberNode((Byte)value);\n else   if (value instanceof Short)   node=root.numberNode((Short)value);\n else   if (value instanceof Integer)   node=root.numberNode((Integer)value);\n else   if (value instanceof Long)   node=root.numberNode((Long)value);\n else   if (value instanceof Float)   node=root.numberNode((Float)value);\n else   if (value instanceof Double)   node=root.numberNode((Double)value);\n else   if (value instanceof BigInteger)   node=root.numberNode((BigInteger)value);\n else   if (value instanceof BigDecimal)   node=root.numberNode((BigDecimal)value);\n else   throw new IllegalArgumentException(\"unsupported number type: \" + value.getClass().getSimpleName());\n}\n else if (value instanceof String) {\n  node=root.textNode((String)value);\n}\n else if (value instanceof byte[]) {\n  node=root.binaryNode((byte[])value);\n}\n else {\n  node=root.pojoNode(value);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 227,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1676,
        "startLineNumber" : 1649,
        "startColumnNumber" : 15,
        "endLineNumber" : 1682,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (value instanceof List) {\n  node=root.arrayNode();\n  for (  Object element : (List<?>)value)   ((ArrayNode)node).add(nodeFor(element));\n}\n else if (value instanceof Map) {\n  node=root.objectNode();\n  for (  Entry<String,?> entry : ((Map<String,?>)value).entrySet())   ((ObjectNode)node).set(entry.getKey(),nodeFor(entry.getValue()));\n}\n else if (value instanceof Number) {\n  if (value instanceof Byte)   node=root.numberNode((Byte)value);\n else   if (value instanceof Short)   node=root.numberNode((Short)value);\n else   if (value instanceof Integer)   node=root.numberNode((Integer)value);\n else   if (value instanceof Long)   node=root.numberNode((Long)value);\n else   if (value instanceof Float)   node=root.numberNode((Float)value);\n else   if (value instanceof Double)   node=root.numberNode((Double)value);\n else   if (value instanceof BigInteger)   node=root.numberNode((BigInteger)value);\n else   if (value instanceof BigDecimal)   node=root.numberNode((BigDecimal)value);\n else   throw new IllegalArgumentException(\"unsupported number type: \" + value.getClass().getSimpleName());\n}\n else if (value instanceof String) {\n  node=root.textNode((String)value);\n}\n else if (value instanceof byte[]) {\n  node=root.binaryNode((byte[])value);\n}\n else {\n  node=root.pojoNode(value);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 261,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1777,
        "startLineNumber" : 1647,
        "startColumnNumber" : 15,
        "endLineNumber" : 1682,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (value instanceof Boolean) {\n  node=root.booleanNode((Boolean)value);\n}\n else if (value instanceof List) {\n  node=root.arrayNode();\n  for (  Object element : (List<?>)value)   ((ArrayNode)node).add(nodeFor(element));\n}\n else if (value instanceof Map) {\n  node=root.objectNode();\n  for (  Entry<String,?> entry : ((Map<String,?>)value).entrySet())   ((ObjectNode)node).set(entry.getKey(),nodeFor(entry.getValue()));\n}\n else if (value instanceof Number) {\n  if (value instanceof Byte)   node=root.numberNode((Byte)value);\n else   if (value instanceof Short)   node=root.numberNode((Short)value);\n else   if (value instanceof Integer)   node=root.numberNode((Integer)value);\n else   if (value instanceof Long)   node=root.numberNode((Long)value);\n else   if (value instanceof Float)   node=root.numberNode((Float)value);\n else   if (value instanceof Double)   node=root.numberNode((Double)value);\n else   if (value instanceof BigInteger)   node=root.numberNode((BigInteger)value);\n else   if (value instanceof BigDecimal)   node=root.numberNode((BigDecimal)value);\n else   throw new IllegalArgumentException(\"unsupported number type: \" + value.getClass().getSimpleName());\n}\n else if (value instanceof String) {\n  node=root.textNode((String)value);\n}\n else if (value instanceof byte[]) {\n  node=root.binaryNode((byte[])value);\n}\n else {\n  node=root.pojoNode(value);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 277,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1862,
        "startLineNumber" : 1645,
        "startColumnNumber" : 15,
        "endLineNumber" : 1682,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (value instanceof JsonNode) {\n  node=(JsonNode)value;\n}\n else if (value instanceof Boolean) {\n  node=root.booleanNode((Boolean)value);\n}\n else if (value instanceof List) {\n  node=root.arrayNode();\n  for (  Object element : (List<?>)value)   ((ArrayNode)node).add(nodeFor(element));\n}\n else if (value instanceof Map) {\n  node=root.objectNode();\n  for (  Entry<String,?> entry : ((Map<String,?>)value).entrySet())   ((ObjectNode)node).set(entry.getKey(),nodeFor(entry.getValue()));\n}\n else if (value instanceof Number) {\n  if (value instanceof Byte)   node=root.numberNode((Byte)value);\n else   if (value instanceof Short)   node=root.numberNode((Short)value);\n else   if (value instanceof Integer)   node=root.numberNode((Integer)value);\n else   if (value instanceof Long)   node=root.numberNode((Long)value);\n else   if (value instanceof Float)   node=root.numberNode((Float)value);\n else   if (value instanceof Double)   node=root.numberNode((Double)value);\n else   if (value instanceof BigInteger)   node=root.numberNode((BigInteger)value);\n else   if (value instanceof BigDecimal)   node=root.numberNode((BigDecimal)value);\n else   throw new IllegalArgumentException(\"unsupported number type: \" + value.getClass().getSimpleName());\n}\n else if (value instanceof String) {\n  node=root.textNode((String)value);\n}\n else if (value instanceof byte[]) {\n  node=root.binaryNode((byte[])value);\n}\n else {\n  node=root.pojoNode(value);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 290,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1934,
        "startLineNumber" : 1643,
        "startColumnNumber" : 8,
        "endLineNumber" : 1682,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (value == null) {\n  node=root.nullNode();\n}\n else if (value instanceof JsonNode) {\n  node=(JsonNode)value;\n}\n else if (value instanceof Boolean) {\n  node=root.booleanNode((Boolean)value);\n}\n else if (value instanceof List) {\n  node=root.arrayNode();\n  for (  Object element : (List<?>)value)   ((ArrayNode)node).add(nodeFor(element));\n}\n else if (value instanceof Map) {\n  node=root.objectNode();\n  for (  Entry<String,?> entry : ((Map<String,?>)value).entrySet())   ((ObjectNode)node).set(entry.getKey(),nodeFor(entry.getValue()));\n}\n else if (value instanceof Number) {\n  if (value instanceof Byte)   node=root.numberNode((Byte)value);\n else   if (value instanceof Short)   node=root.numberNode((Short)value);\n else   if (value instanceof Integer)   node=root.numberNode((Integer)value);\n else   if (value instanceof Long)   node=root.numberNode((Long)value);\n else   if (value instanceof Float)   node=root.numberNode((Float)value);\n else   if (value instanceof Double)   node=root.numberNode((Double)value);\n else   if (value instanceof BigInteger)   node=root.numberNode((BigInteger)value);\n else   if (value instanceof BigDecimal)   node=root.numberNode((BigDecimal)value);\n else   throw new IllegalArgumentException(\"unsupported number type: \" + value.getClass().getSimpleName());\n}\n else if (value instanceof String) {\n  node=root.textNode((String)value);\n}\n else if (value instanceof byte[]) {\n  node=root.binaryNode((byte[])value);\n}\n else {\n  node=root.pojoNode(value);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 301,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1994,
        "startLineNumber" : 1641,
        "startColumnNumber" : 45,
        "endLineNumber" : 1684,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  JsonNode node;\n  if (value == null) {\n    node=root.nullNode();\n  }\n else   if (value instanceof JsonNode) {\n    node=(JsonNode)value;\n  }\n else   if (value instanceof Boolean) {\n    node=root.booleanNode((Boolean)value);\n  }\n else   if (value instanceof List) {\n    node=root.arrayNode();\n    for (    Object element : (List<?>)value)     ((ArrayNode)node).add(nodeFor(element));\n  }\n else   if (value instanceof Map) {\n    node=root.objectNode();\n    for (    Entry<String,?> entry : ((Map<String,?>)value).entrySet())     ((ObjectNode)node).set(entry.getKey(),nodeFor(entry.getValue()));\n  }\n else   if (value instanceof Number) {\n    if (value instanceof Byte)     node=root.numberNode((Byte)value);\n else     if (value instanceof Short)     node=root.numberNode((Short)value);\n else     if (value instanceof Integer)     node=root.numberNode((Integer)value);\n else     if (value instanceof Long)     node=root.numberNode((Long)value);\n else     if (value instanceof Float)     node=root.numberNode((Float)value);\n else     if (value instanceof Double)     node=root.numberNode((Double)value);\n else     if (value instanceof BigInteger)     node=root.numberNode((BigInteger)value);\n else     if (value instanceof BigDecimal)     node=root.numberNode((BigDecimal)value);\n else     throw new IllegalArgumentException(\"unsupported number type: \" + value.getClass().getSimpleName());\n  }\n else   if (value instanceof String) {\n    node=root.textNode((String)value);\n  }\n else   if (value instanceof byte[]) {\n    node=root.binaryNode((byte[])value);\n  }\n else {\n    node=root.pojoNode(value);\n  }\n  return node;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 309,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2070,
        "startLineNumber" : 1640,
        "startColumnNumber" : 4,
        "endLineNumber" : 1684,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@SuppressWarnings(\"unchecked\") protected JsonNode nodeFor(Object value){\n  JsonNode node;\n  if (value == null) {\n    node=root.nullNode();\n  }\n else   if (value instanceof JsonNode) {\n    node=(JsonNode)value;\n  }\n else   if (value instanceof Boolean) {\n    node=root.booleanNode((Boolean)value);\n  }\n else   if (value instanceof List) {\n    node=root.arrayNode();\n    for (    Object element : (List<?>)value)     ((ArrayNode)node).add(nodeFor(element));\n  }\n else   if (value instanceof Map) {\n    node=root.objectNode();\n    for (    Entry<String,?> entry : ((Map<String,?>)value).entrySet())     ((ObjectNode)node).set(entry.getKey(),nodeFor(entry.getValue()));\n  }\n else   if (value instanceof Number) {\n    if (value instanceof Byte)     node=root.numberNode((Byte)value);\n else     if (value instanceof Short)     node=root.numberNode((Short)value);\n else     if (value instanceof Integer)     node=root.numberNode((Integer)value);\n else     if (value instanceof Long)     node=root.numberNode((Long)value);\n else     if (value instanceof Float)     node=root.numberNode((Float)value);\n else     if (value instanceof Double)     node=root.numberNode((Double)value);\n else     if (value instanceof BigInteger)     node=root.numberNode((BigInteger)value);\n else     if (value instanceof BigDecimal)     node=root.numberNode((BigDecimal)value);\n else     throw new IllegalArgumentException(\"unsupported number type: \" + value.getClass().getSimpleName());\n  }\n else   if (value instanceof String) {\n    node=root.textNode((String)value);\n  }\n else   if (value instanceof byte[]) {\n    node=root.binaryNode((byte[])value);\n  }\n else {\n    node=root.pojoNode(value);\n  }\n  return node;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 321,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,expression]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 1655,
        "startColumnNumber" : 42,
        "endLineNumber" : 1655,
        "endColumnNumber" : 77
      },
      "nodeContext" : "((Map<String,?>)value).entrySet()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "java.util.Map<java.lang.String,>"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 1655,
    "startColumnNumber" : 42,
    "endLineNumber" : 1655,
    "endColumnNumber" : 66
  } ],
  "layoutRelationDataList" : [ ]
}