{
  "id" : 413,
  "expression" : "System",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/graphtheory/Boruvkas.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "System",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 138,
      "startColumnNumber" : 8,
      "endLineNumber" : 138,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 138,
        "startColumnNumber" : 8,
        "endLineNumber" : 138,
        "endColumnNumber" : 18
      },
      "nodeContext" : "System.err",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 138,
        "startColumnNumber" : 8,
        "endLineNumber" : 138,
        "endColumnNumber" : 42
      },
      "nodeContext" : "System.err.println(\"Not a forest\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 138,
        "startColumnNumber" : 8,
        "endLineNumber" : 138,
        "endColumnNumber" : 43
      },
      "nodeContext" : "System.err.println(\"Not a forest\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 137,
        "startColumnNumber" : 30,
        "endLineNumber" : 140,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  System.err.println(\"Not a forest\");\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 137,
        "startColumnNumber" : 6,
        "endLineNumber" : 140,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (uf.connected(u,v)) {\n  System.err.println(\"Not a forest\");\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 135,
        "startColumnNumber" : 23,
        "endLineNumber" : 142,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int u=e.u, v=e.v;\n  if (uf.connected(u,v)) {\n    System.err.println(\"Not a forest\");\n    return false;\n  }\n  uf.union(u,v);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 35,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 182,
        "startLineNumber" : 135,
        "startColumnNumber" : 4,
        "endLineNumber" : 142,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (Edge e : mst) {\n  int u=e.u, v=e.v;\n  if (uf.connected(u,v)) {\n    System.err.println(\"Not a forest\");\n    return false;\n  }\n  uf.union(u,v);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 41,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1133,
        "startLineNumber" : 129,
        "startColumnNumber" : 26,
        "endLineNumber" : 175,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!mstExists)   return true;\n  UnionFind uf=new UnionFind(n);\n  for (  Edge e : mst) {\n    int u=e.u, v=e.v;\n    if (uf.connected(u,v)) {\n      System.err.println(\"Not a forest\");\n      return false;\n    }\n    uf.union(u,v);\n  }\n  for (  Edge e : mst) {\n    int u=e.u, v=e.v;\n    if (!uf.connected(u,v)) {\n      System.err.println(\"Not a spanning forest\");\n      return false;\n    }\n  }\n  for (  Edge e : mst) {\n    uf=new UnionFind(n);\n    for (    Edge f : mst) {\n      int x=f.u, y=f.v;\n      if (f != e)       uf.union(x,y);\n    }\n    for (    Edge f : graph) {\n      int x=f.u, y=f.v;\n      if (!uf.connected(x,y)) {\n        if (f.cost < e.cost) {\n          System.err.println(\"Edge \" + f + \" violates cut optimality conditions\");\n          return false;\n        }\n      }\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 185,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1157,
        "startLineNumber" : 129,
        "startColumnNumber" : 2,
        "endLineNumber" : 175,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private boolean check(){\n  if (!mstExists)   return true;\n  UnionFind uf=new UnionFind(n);\n  for (  Edge e : mst) {\n    int u=e.u, v=e.v;\n    if (uf.connected(u,v)) {\n      System.err.println(\"Not a forest\");\n      return false;\n    }\n    uf.union(u,v);\n  }\n  for (  Edge e : mst) {\n    int u=e.u, v=e.v;\n    if (!uf.connected(u,v)) {\n      System.err.println(\"Not a spanning forest\");\n      return false;\n    }\n  }\n  for (  Edge e : mst) {\n    uf=new UnionFind(n);\n    for (    Edge f : mst) {\n      int x=f.u, y=f.v;\n      if (f != e)       uf.union(x,y);\n    }\n    for (    Edge f : graph) {\n      int x=f.u, y=f.v;\n      if (!uf.connected(x,y)) {\n        if (f.cost < e.cost) {\n          System.err.println(\"Edge \" + f + \" violates cut optimality conditions\");\n          return false;\n        }\n      }\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 189,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 138,
        "startColumnNumber" : 8,
        "endLineNumber" : 138,
        "endColumnNumber" : 43
      },
      "nodeContext" : "System.err.println(\"Not a forest\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.System"
  }, {
    "nodeContext" : "System",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 148,
      "startColumnNumber" : 8,
      "endLineNumber" : 148,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 148,
        "startColumnNumber" : 8,
        "endLineNumber" : 148,
        "endColumnNumber" : 18
      },
      "nodeContext" : "System.err",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 148,
        "startColumnNumber" : 8,
        "endLineNumber" : 148,
        "endColumnNumber" : 51
      },
      "nodeContext" : "System.err.println(\"Not a spanning forest\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 148,
        "startColumnNumber" : 8,
        "endLineNumber" : 148,
        "endColumnNumber" : 52
      },
      "nodeContext" : "System.err.println(\"Not a spanning forest\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 147,
        "startColumnNumber" : 31,
        "endLineNumber" : 150,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  System.err.println(\"Not a spanning forest\");\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 109,
        "startLineNumber" : 147,
        "startColumnNumber" : 6,
        "endLineNumber" : 150,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (!uf.connected(u,v)) {\n  System.err.println(\"Not a spanning forest\");\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 145,
        "startColumnNumber" : 23,
        "endLineNumber" : 151,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int u=e.u, v=e.v;\n  if (!uf.connected(u,v)) {\n    System.err.println(\"Not a spanning forest\");\n    return false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 30,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 170,
        "startLineNumber" : 145,
        "startColumnNumber" : 4,
        "endLineNumber" : 151,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (Edge e : mst) {\n  int u=e.u, v=e.v;\n  if (!uf.connected(u,v)) {\n    System.err.println(\"Not a spanning forest\");\n    return false;\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 36,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1133,
        "startLineNumber" : 129,
        "startColumnNumber" : 26,
        "endLineNumber" : 175,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!mstExists)   return true;\n  UnionFind uf=new UnionFind(n);\n  for (  Edge e : mst) {\n    int u=e.u, v=e.v;\n    if (uf.connected(u,v)) {\n      System.err.println(\"Not a forest\");\n      return false;\n    }\n    uf.union(u,v);\n  }\n  for (  Edge e : mst) {\n    int u=e.u, v=e.v;\n    if (!uf.connected(u,v)) {\n      System.err.println(\"Not a spanning forest\");\n      return false;\n    }\n  }\n  for (  Edge e : mst) {\n    uf=new UnionFind(n);\n    for (    Edge f : mst) {\n      int x=f.u, y=f.v;\n      if (f != e)       uf.union(x,y);\n    }\n    for (    Edge f : graph) {\n      int x=f.u, y=f.v;\n      if (!uf.connected(x,y)) {\n        if (f.cost < e.cost) {\n          System.err.println(\"Edge \" + f + \" violates cut optimality conditions\");\n          return false;\n        }\n      }\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 185,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1157,
        "startLineNumber" : 129,
        "startColumnNumber" : 2,
        "endLineNumber" : 175,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private boolean check(){\n  if (!mstExists)   return true;\n  UnionFind uf=new UnionFind(n);\n  for (  Edge e : mst) {\n    int u=e.u, v=e.v;\n    if (uf.connected(u,v)) {\n      System.err.println(\"Not a forest\");\n      return false;\n    }\n    uf.union(u,v);\n  }\n  for (  Edge e : mst) {\n    int u=e.u, v=e.v;\n    if (!uf.connected(u,v)) {\n      System.err.println(\"Not a spanning forest\");\n      return false;\n    }\n  }\n  for (  Edge e : mst) {\n    uf=new UnionFind(n);\n    for (    Edge f : mst) {\n      int x=f.u, y=f.v;\n      if (f != e)       uf.union(x,y);\n    }\n    for (    Edge f : graph) {\n      int x=f.u, y=f.v;\n      if (!uf.connected(x,y)) {\n        if (f.cost < e.cost) {\n          System.err.println(\"Edge \" + f + \" violates cut optimality conditions\");\n          return false;\n        }\n      }\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 189,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 148,
        "startColumnNumber" : 8,
        "endLineNumber" : 148,
        "endColumnNumber" : 52
      },
      "nodeContext" : "System.err.println(\"Not a spanning forest\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.System"
  }, {
    "nodeContext" : "System",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 168,
      "startColumnNumber" : 12,
      "endLineNumber" : 168,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 168,
        "startColumnNumber" : 12,
        "endLineNumber" : 168,
        "endColumnNumber" : 22
      },
      "nodeContext" : "System.err",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 168,
        "startColumnNumber" : 12,
        "endLineNumber" : 168,
        "endColumnNumber" : 83
      },
      "nodeContext" : "System.err.println(\"Edge \" + f + \" violates cut optimality conditions\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 168,
        "startColumnNumber" : 12,
        "endLineNumber" : 168,
        "endColumnNumber" : 84
      },
      "nodeContext" : "System.err.println(\"Edge \" + f + \" violates cut optimality conditions\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 167,
        "startColumnNumber" : 31,
        "endLineNumber" : 170,
        "endColumnNumber" : 11
      },
      "nodeContext" : "{\n  System.err.println(\"Edge \" + f + \" violates cut optimality conditions\");\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 167,
        "startColumnNumber" : 10,
        "endLineNumber" : 170,
        "endColumnNumber" : 11
      },
      "nodeContext" : "if (f.cost < e.cost) {\n  System.err.println(\"Edge \" + f + \" violates cut optimality conditions\");\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 167,
        "startLineNumber" : 166,
        "startColumnNumber" : 33,
        "endLineNumber" : 171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (f.cost < e.cost) {\n    System.err.println(\"Edge \" + f + \" violates cut optimality conditions\");\n    return false;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 192,
        "startLineNumber" : 166,
        "startColumnNumber" : 8,
        "endLineNumber" : 171,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!uf.connected(x,y)) {\n  if (f.cost < e.cost) {\n    System.err.println(\"Edge \" + f + \" violates cut optimality conditions\");\n    return false;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 29,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 240,
        "startLineNumber" : 164,
        "startColumnNumber" : 27,
        "endLineNumber" : 172,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  int x=f.u, y=f.v;\n  if (!uf.connected(x,y)) {\n    if (f.cost < e.cost) {\n      System.err.println(\"Edge \" + f + \" violates cut optimality conditions\");\n      return false;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 261,
        "startLineNumber" : 164,
        "startColumnNumber" : 6,
        "endLineNumber" : 172,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (Edge f : graph) {\n  int x=f.u, y=f.v;\n  if (!uf.connected(x,y)) {\n    if (f.cost < e.cost) {\n      System.err.println(\"Edge \" + f + \" violates cut optimality conditions\");\n      return false;\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 48,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 499,
        "startLineNumber" : 154,
        "startColumnNumber" : 23,
        "endLineNumber" : 173,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  uf=new UnionFind(n);\n  for (  Edge f : mst) {\n    int x=f.u, y=f.v;\n    if (f != e)     uf.union(x,y);\n  }\n  for (  Edge f : graph) {\n    int x=f.u, y=f.v;\n    if (!uf.connected(x,y)) {\n      if (f.cost < e.cost) {\n        System.err.println(\"Edge \" + f + \" violates cut optimality conditions\");\n        return false;\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 518,
        "startLineNumber" : 154,
        "startColumnNumber" : 4,
        "endLineNumber" : 173,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (Edge e : mst) {\n  uf=new UnionFind(n);\n  for (  Edge f : mst) {\n    int x=f.u, y=f.v;\n    if (f != e)     uf.union(x,y);\n  }\n  for (  Edge f : graph) {\n    int x=f.u, y=f.v;\n    if (!uf.connected(x,y)) {\n      if (f.cost < e.cost) {\n        System.err.println(\"Edge \" + f + \" violates cut optimality conditions\");\n        return false;\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 91,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1133,
        "startLineNumber" : 129,
        "startColumnNumber" : 26,
        "endLineNumber" : 175,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!mstExists)   return true;\n  UnionFind uf=new UnionFind(n);\n  for (  Edge e : mst) {\n    int u=e.u, v=e.v;\n    if (uf.connected(u,v)) {\n      System.err.println(\"Not a forest\");\n      return false;\n    }\n    uf.union(u,v);\n  }\n  for (  Edge e : mst) {\n    int u=e.u, v=e.v;\n    if (!uf.connected(u,v)) {\n      System.err.println(\"Not a spanning forest\");\n      return false;\n    }\n  }\n  for (  Edge e : mst) {\n    uf=new UnionFind(n);\n    for (    Edge f : mst) {\n      int x=f.u, y=f.v;\n      if (f != e)       uf.union(x,y);\n    }\n    for (    Edge f : graph) {\n      int x=f.u, y=f.v;\n      if (!uf.connected(x,y)) {\n        if (f.cost < e.cost) {\n          System.err.println(\"Edge \" + f + \" violates cut optimality conditions\");\n          return false;\n        }\n      }\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 185,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1157,
        "startLineNumber" : 129,
        "startColumnNumber" : 2,
        "endLineNumber" : 175,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private boolean check(){\n  if (!mstExists)   return true;\n  UnionFind uf=new UnionFind(n);\n  for (  Edge e : mst) {\n    int u=e.u, v=e.v;\n    if (uf.connected(u,v)) {\n      System.err.println(\"Not a forest\");\n      return false;\n    }\n    uf.union(u,v);\n  }\n  for (  Edge e : mst) {\n    int u=e.u, v=e.v;\n    if (!uf.connected(u,v)) {\n      System.err.println(\"Not a spanning forest\");\n      return false;\n    }\n  }\n  for (  Edge e : mst) {\n    uf=new UnionFind(n);\n    for (    Edge f : mst) {\n      int x=f.u, y=f.v;\n      if (f != e)       uf.union(x,y);\n    }\n    for (    Edge f : graph) {\n      int x=f.u, y=f.v;\n      if (!uf.connected(x,y)) {\n        if (f.cost < e.cost) {\n          System.err.println(\"Edge \" + f + \" violates cut optimality conditions\");\n          return false;\n        }\n      }\n    }\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 189,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 168,
        "startColumnNumber" : 12,
        "endLineNumber" : 168,
        "endColumnNumber" : 84
      },
      "nodeContext" : "System.err.println(\"Edge \" + f + \" violates cut optimality conditions\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.System"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 138,
    "startColumnNumber" : 8,
    "endLineNumber" : 138,
    "endColumnNumber" : 14
  }, {
    "charLength" : 6,
    "startLineNumber" : 148,
    "startColumnNumber" : 8,
    "endLineNumber" : 148,
    "endColumnNumber" : 14
  }, {
    "charLength" : 6,
    "startLineNumber" : 168,
    "startColumnNumber" : 12,
    "endLineNumber" : 168,
    "endColumnNumber" : 18
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 11
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 11
  } ]
}