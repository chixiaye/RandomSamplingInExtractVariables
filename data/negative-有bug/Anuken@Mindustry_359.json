{
  "id" : 359,
  "expression" : "stack.item",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/maps/filters/RandomItemFilter.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "stack.item",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 24,
      "startColumnNumber" : 45,
      "endLineNumber" : 24,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 24,
        "startColumnNumber" : 24,
        "endLineNumber" : 24,
        "endColumnNumber" : 121
      },
      "nodeContext" : "tile.build.items.add(stack.item,Math.min(Mathf.random(stack.amount),tile.block().itemCapacity))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 24,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 24,
        "startColumnNumber" : 24,
        "endLineNumber" : 24,
        "endColumnNumber" : 122
      },
      "nodeContext" : "tile.build.items.add(stack.item,Math.min(Mathf.random(stack.amount),tile.block().itemCapacity));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 146,
        "startLineNumber" : 23,
        "startColumnNumber" : 44,
        "endLineNumber" : 25,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  tile.build.items.add(stack.item,Math.min(Mathf.random(stack.amount),tile.block().itemCapacity));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 170,
        "startLineNumber" : 23,
        "startColumnNumber" : 20,
        "endLineNumber" : 25,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (Mathf.chance(chance)) {\n  tile.build.items.add(stack.item,Math.min(Mathf.random(stack.amount),tile.block().itemCapacity));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 31,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 210,
        "startLineNumber" : 22,
        "startColumnNumber" : 44,
        "endLineNumber" : 26,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (Mathf.chance(chance)) {\n    tile.build.items.add(stack.item,Math.min(Mathf.random(stack.amount),tile.block().itemCapacity));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 238,
        "startLineNumber" : 22,
        "startColumnNumber" : 16,
        "endLineNumber" : 26,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (ItemStack stack : drops) {\n  if (Mathf.chance(chance)) {\n    tile.build.items.add(stack.item,Math.min(Mathf.random(stack.amount),tile.block().itemCapacity));\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 38,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 270,
        "startLineNumber" : 21,
        "startColumnNumber" : 92,
        "endLineNumber" : 27,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  for (  ItemStack stack : drops) {\n    if (Mathf.chance(chance)) {\n      tile.build.items.add(stack.item,Math.min(Mathf.random(stack.amount),tile.block().itemCapacity));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 350,
        "startLineNumber" : 21,
        "startColumnNumber" : 12,
        "endLineNumber" : 27,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (tile.block() instanceof StorageBlock && !(tile.block() instanceof CoreBlock)) {\n  for (  ItemStack stack : drops) {\n    if (Mathf.chance(chance)) {\n      tile.build.items.add(stack.item,Math.min(Mathf.random(stack.amount),tile.block().itemCapacity));\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 55,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 374,
        "startLineNumber" : 20,
        "startColumnNumber" : 30,
        "endLineNumber" : 28,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (tile.block() instanceof StorageBlock && !(tile.block() instanceof CoreBlock)) {\n    for (    ItemStack stack : drops) {\n      if (Mathf.chance(chance)) {\n        tile.build.items.add(stack.item,Math.min(Mathf.random(stack.amount),tile.block().itemCapacity));\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 56,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 396,
        "startLineNumber" : 20,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Tile tile : tiles) {\n  if (tile.block() instanceof StorageBlock && !(tile.block() instanceof CoreBlock)) {\n    for (    ItemStack stack : drops) {\n      if (Mathf.chance(chance)) {\n        tile.build.items.add(stack.item,Math.min(Mathf.random(stack.amount),tile.block().itemCapacity));\n      }\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 62,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 412,
        "startLineNumber" : 19,
        "startColumnNumber" : 52,
        "endLineNumber" : 29,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (  Tile tile : tiles) {\n    if (tile.block() instanceof StorageBlock && !(tile.block() instanceof CoreBlock)) {\n      for (      ItemStack stack : drops) {\n        if (Mathf.chance(chance)) {\n          tile.build.items.add(stack.item,Math.min(Mathf.random(stack.amount),tile.block().itemCapacity));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 63,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 474,
        "startLineNumber" : 18,
        "startColumnNumber" : 4,
        "endLineNumber" : 29,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void apply(Tiles tiles,GenerateInput in){\n  for (  Tile tile : tiles) {\n    if (tile.block() instanceof StorageBlock && !(tile.block() instanceof CoreBlock)) {\n      for (      ItemStack stack : drops) {\n        if (Mathf.chance(chance)) {\n          tile.build.items.add(stack.item,Math.min(Mathf.random(stack.amount),tile.block().itemCapacity));\n        }\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 77,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 24,
        "startColumnNumber" : 24,
        "endLineNumber" : 24,
        "endColumnNumber" : 122
      },
      "nodeContext" : "tile.build.items.add(stack.item,Math.min(Mathf.random(stack.amount),tile.block().itemCapacity));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 25,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "mindustry.type.Item"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 24,
    "startColumnNumber" : 45,
    "endLineNumber" : 24,
    "endColumnNumber" : 55
  } ],
  "layoutRelationDataList" : [ ]
}