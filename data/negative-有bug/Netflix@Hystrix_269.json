{
  "id" : 269,
  "expression" : "argumentMap.size()",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-core/src/main/java/com/netflix/hystrix/collapser/RequestBatch.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "argumentMap.size()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 80,
      "startColumnNumber" : 20,
      "endLineNumber" : 80,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 80,
        "startColumnNumber" : 20,
        "endLineNumber" : 80,
        "endColumnNumber" : 54
      },
      "nodeContext" : "argumentMap.size() >= maxBatchSize",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2221,
        "startLineNumber" : 80,
        "startColumnNumber" : 16,
        "endLineNumber" : 109,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (argumentMap.size() >= maxBatchSize) {\n  return null;\n}\n else {\n  CollapsedRequestSubject<ResponseType,RequestArgumentType> collapsedRequest=new CollapsedRequestSubject<ResponseType,RequestArgumentType>(arg,this);\n  final CollapsedRequestSubject<ResponseType,RequestArgumentType> existing=(CollapsedRequestSubject<ResponseType,RequestArgumentType>)argumentMap.putIfAbsent(arg,collapsedRequest);\n  if (existing != null) {\n    boolean requestCachingEnabled=properties.requestCacheEnabled().get();\n    if (requestCachingEnabled) {\n      return existing.toObservable();\n    }\n else {\n      return Observable.error(new IllegalArgumentException(\"Duplicate argument in collapser batch : [\" + arg + \"]  This is not supported.  Please turn request-caching on for HystrixCollapser:\"+ commandCollapser.getCollapserKey().name()+ \" or prevent duplicates from making it into the batch!\"));\n    }\n  }\n else {\n    return collapsedRequest.toObservable();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 98,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 2454,
        "startLineNumber" : 74,
        "startColumnNumber" : 16,
        "endLineNumber" : 110,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (batchStarted.get()) {\n    return null;\n  }\n  if (argumentMap.size() >= maxBatchSize) {\n    return null;\n  }\n else {\n    CollapsedRequestSubject<ResponseType,RequestArgumentType> collapsedRequest=new CollapsedRequestSubject<ResponseType,RequestArgumentType>(arg,this);\n    final CollapsedRequestSubject<ResponseType,RequestArgumentType> existing=(CollapsedRequestSubject<ResponseType,RequestArgumentType>)argumentMap.putIfAbsent(arg,collapsedRequest);\n    if (existing != null) {\n      boolean requestCachingEnabled=properties.requestCacheEnabled().get();\n      if (requestCachingEnabled) {\n        return existing.toObservable();\n      }\n else {\n        return Observable.error(new IllegalArgumentException(\"Duplicate argument in collapser batch : [\" + arg + \"]  This is not supported.  Please turn request-caching on for HystrixCollapser:\"+ commandCollapser.getCollapserKey().name()+ \" or prevent duplicates from making it into the batch!\"));\n      }\n    }\n else {\n      return collapsedRequest.toObservable();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 106,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2529,
        "startLineNumber" : 74,
        "startColumnNumber" : 12,
        "endLineNumber" : 112,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  if (batchStarted.get()) {\n    return null;\n  }\n  if (argumentMap.size() >= maxBatchSize) {\n    return null;\n  }\n else {\n    CollapsedRequestSubject<ResponseType,RequestArgumentType> collapsedRequest=new CollapsedRequestSubject<ResponseType,RequestArgumentType>(arg,this);\n    final CollapsedRequestSubject<ResponseType,RequestArgumentType> existing=(CollapsedRequestSubject<ResponseType,RequestArgumentType>)argumentMap.putIfAbsent(arg,collapsedRequest);\n    if (existing != null) {\n      boolean requestCachingEnabled=properties.requestCacheEnabled().get();\n      if (requestCachingEnabled) {\n        return existing.toObservable();\n      }\n else {\n        return Observable.error(new IllegalArgumentException(\"Duplicate argument in collapser batch : [\" + arg + \"]  This is not supported.  Please turn request-caching on for HystrixCollapser:\"+ commandCollapser.getCollapserKey().name()+ \" or prevent duplicates from making it into the batch!\"));\n      }\n    }\n else {\n      return collapsedRequest.toObservable();\n    }\n  }\n}\n  finally {\n  batchLock.readLock().unlock();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 114,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2553,
        "startLineNumber" : 73,
        "startColumnNumber" : 44,
        "endLineNumber" : 113,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    if (batchStarted.get()) {\n      return null;\n    }\n    if (argumentMap.size() >= maxBatchSize) {\n      return null;\n    }\n else {\n      CollapsedRequestSubject<ResponseType,RequestArgumentType> collapsedRequest=new CollapsedRequestSubject<ResponseType,RequestArgumentType>(arg,this);\n      final CollapsedRequestSubject<ResponseType,RequestArgumentType> existing=(CollapsedRequestSubject<ResponseType,RequestArgumentType>)argumentMap.putIfAbsent(arg,collapsedRequest);\n      if (existing != null) {\n        boolean requestCachingEnabled=properties.requestCacheEnabled().get();\n        if (requestCachingEnabled) {\n          return existing.toObservable();\n        }\n else {\n          return Observable.error(new IllegalArgumentException(\"Duplicate argument in collapser batch : [\" + arg + \"]  This is not supported.  Please turn request-caching on for HystrixCollapser:\"+ commandCollapser.getCollapserKey().name()+ \" or prevent duplicates from making it into the batch!\"));\n        }\n      }\n else {\n        return collapsedRequest.toObservable();\n      }\n    }\n  }\n  finally {\n    batchLock.readLock().unlock();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 115,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2631,
        "startLineNumber" : 73,
        "startColumnNumber" : 8,
        "endLineNumber" : 115,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (batchLock.readLock().tryLock()) {\n  try {\n    if (batchStarted.get()) {\n      return null;\n    }\n    if (argumentMap.size() >= maxBatchSize) {\n      return null;\n    }\n else {\n      CollapsedRequestSubject<ResponseType,RequestArgumentType> collapsedRequest=new CollapsedRequestSubject<ResponseType,RequestArgumentType>(arg,this);\n      final CollapsedRequestSubject<ResponseType,RequestArgumentType> existing=(CollapsedRequestSubject<ResponseType,RequestArgumentType>)argumentMap.putIfAbsent(arg,collapsedRequest);\n      if (existing != null) {\n        boolean requestCachingEnabled=properties.requestCacheEnabled().get();\n        if (requestCachingEnabled) {\n          return existing.toObservable();\n        }\n else {\n          return Observable.error(new IllegalArgumentException(\"Duplicate argument in collapser batch : [\" + arg + \"]  This is not supported.  Please turn request-caching on for HystrixCollapser:\"+ commandCollapser.getCollapserKey().name()+ \" or prevent duplicates from making it into the batch!\"));\n        }\n      }\n else {\n        return collapsedRequest.toObservable();\n      }\n    }\n  }\n  finally {\n    batchLock.readLock().unlock();\n  }\n}\n else {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 124,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2885,
        "startLineNumber" : 64,
        "startColumnNumber" : 67,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (batchStarted.get()) {\n    return null;\n  }\n  if (batchLock.readLock().tryLock()) {\n    try {\n      if (batchStarted.get()) {\n        return null;\n      }\n      if (argumentMap.size() >= maxBatchSize) {\n        return null;\n      }\n else {\n        CollapsedRequestSubject<ResponseType,RequestArgumentType> collapsedRequest=new CollapsedRequestSubject<ResponseType,RequestArgumentType>(arg,this);\n        final CollapsedRequestSubject<ResponseType,RequestArgumentType> existing=(CollapsedRequestSubject<ResponseType,RequestArgumentType>)argumentMap.putIfAbsent(arg,collapsedRequest);\n        if (existing != null) {\n          boolean requestCachingEnabled=properties.requestCacheEnabled().get();\n          if (requestCachingEnabled) {\n            return existing.toObservable();\n          }\n else {\n            return Observable.error(new IllegalArgumentException(\"Duplicate argument in collapser batch : [\" + arg + \"]  This is not supported.  Please turn request-caching on for HystrixCollapser:\"+ commandCollapser.getCollapserKey().name()+ \" or prevent duplicates from making it into the batch!\"));\n          }\n        }\n else {\n          return collapsedRequest.toObservable();\n        }\n      }\n    }\n  finally {\n      batchLock.readLock().unlock();\n    }\n  }\n else {\n    return null;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 132,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3061,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * @return Observable if offer accepted, null if batch is full, already started or completed\n */\npublic Observable<ResponseType> offer(RequestArgumentType arg){\n  if (batchStarted.get()) {\n    return null;\n  }\n  if (batchLock.readLock().tryLock()) {\n    try {\n      if (batchStarted.get()) {\n        return null;\n      }\n      if (argumentMap.size() >= maxBatchSize) {\n        return null;\n      }\n else {\n        CollapsedRequestSubject<ResponseType,RequestArgumentType> collapsedRequest=new CollapsedRequestSubject<ResponseType,RequestArgumentType>(arg,this);\n        final CollapsedRequestSubject<ResponseType,RequestArgumentType> existing=(CollapsedRequestSubject<ResponseType,RequestArgumentType>)argumentMap.putIfAbsent(arg,collapsedRequest);\n        if (existing != null) {\n          boolean requestCachingEnabled=properties.requestCacheEnabled().get();\n          if (requestCachingEnabled) {\n            return existing.toObservable();\n          }\n else {\n            return Observable.error(new IllegalArgumentException(\"Duplicate argument in collapser batch : [\" + arg + \"]  This is not supported.  Please turn request-caching on for HystrixCollapser:\"+ commandCollapser.getCollapserKey().name()+ \" or prevent duplicates from making it into the batch!\"));\n          }\n        }\n else {\n          return collapsedRequest.toObservable();\n        }\n      }\n    }\n  finally {\n      batchLock.readLock().unlock();\n    }\n  }\n else {\n    return null;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 145,
      "astHeight" : 19
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 34,
        "startLineNumber" : 80,
        "startColumnNumber" : 20,
        "endLineNumber" : 80,
        "endColumnNumber" : 54
      },
      "nodeContext" : "argumentMap.size() >= maxBatchSize",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 80,
    "startColumnNumber" : 20,
    "endLineNumber" : 80,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ ]
}