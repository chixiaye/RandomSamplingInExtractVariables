{
  "id" : 68,
  "expression" : "\"0\"",
  "projectName" : "arduino@Arduino",
  "commitID" : "cf1879f948e0c1fa9ddd91f7348fbdd07fd870cb",
  "filePath" : "/arduino-core/src/processing/app/macosx/SystemProfilerParser.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"0\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 63,
      "startColumnNumber" : 68,
      "endLineNumber" : 63,
      "endColumnNumber" : 71
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 63,
        "startColumnNumber" : 24,
        "endLineNumber" : 63,
        "endColumnNumber" : 76
      },
      "nodeContext" : "matcher.group(1).substring(2,6).replaceAll(\"0\",\"\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 63,
        "startColumnNumber" : 15,
        "endLineNumber" : 63,
        "endColumnNumber" : 76
      },
      "nodeContext" : "suffix=matcher.group(1).substring(2,6).replaceAll(\"0\",\"\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 77
      },
      "nodeContext" : "String suffix=matcher.group(1).substring(2,6).replaceAll(\"0\",\"\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 189,
        "startLineNumber" : 62,
        "startColumnNumber" : 147,
        "endLineNumber" : 66,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  String suffix=matcher.group(1).substring(2,6).replaceAll(\"0\",\"\");\n  String devicePath=devicePrefix + suffix + \"1\";\n  device.put(DEVICE_PATH,devicePath);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 33,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1100,
        "startLineNumber" : 62,
        "startColumnNumber" : 13,
        "endLineNumber" : 81,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if ((serial.startsWith(DEV_TTY_USBMODEM) || serial.startsWith(DEV_CU_USBMODEM)) && (matcher=locationRegex.matcher(line)).matches()) {\n  String suffix=matcher.group(1).substring(2,6).replaceAll(\"0\",\"\");\n  String devicePath=devicePrefix + suffix + \"1\";\n  device.put(DEVICE_PATH,devicePath);\n}\n else if ((matcher=pidRegex.matcher(line)).matches()) {\n  String pid=matcher.group(1);\n  if (pid.indexOf(\" \") > 0)   pid=pid.substring(0,pid.indexOf(\" \"));\n  device.put(PID,pid);\n}\n else if ((matcher=vidRegex.matcher(line)).matches()) {\n  String vid=matcher.group(1);\n  if (vid.indexOf(\" \") > 0)   vid=vid.substring(0,vid.indexOf(\" \"));\n  device.put(VID,vid);\n}\n else if (line.equals(\"\")) {\n  if (device.containsKey(DEVICE_PATH) && device.get(DEVICE_PATH).equals(serial)) {\n    return (device.get(VID) + \"_\" + device.get(PID)).toUpperCase();\n  }\n  device=new HashMap<String,String>();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 187,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1440,
        "startLineNumber" : 56,
        "startColumnNumber" : 6,
        "endLineNumber" : 81,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if ((matcher=serialNumberRegex.matcher(line)).matches()) {\n  device.put(SERIAL_NUMBER,matcher.group(1));\n  if ((serial.startsWith(DEV_TTY_USBSERIAL) || serial.startsWith(DEV_CU_USBSERIAL))) {\n    String devicePath=devicePrefix + matcher.group(1);\n    device.put(DEVICE_PATH,devicePath);\n  }\n}\n else if ((serial.startsWith(DEV_TTY_USBMODEM) || serial.startsWith(DEV_CU_USBMODEM)) && (matcher=locationRegex.matcher(line)).matches()) {\n  String suffix=matcher.group(1).substring(2,6).replaceAll(\"0\",\"\");\n  String devicePath=devicePrefix + suffix + \"1\";\n  device.put(DEVICE_PATH,devicePath);\n}\n else if ((matcher=pidRegex.matcher(line)).matches()) {\n  String pid=matcher.group(1);\n  if (pid.indexOf(\" \") > 0)   pid=pid.substring(0,pid.indexOf(\" \"));\n  device.put(PID,pid);\n}\n else if ((matcher=vidRegex.matcher(line)).matches()) {\n  String vid=matcher.group(1);\n  if (vid.indexOf(\" \") > 0)   vid=vid.substring(0,vid.indexOf(\" \"));\n  device.put(VID,vid);\n}\n else if (line.equals(\"\")) {\n  if (device.containsKey(DEVICE_PATH) && device.get(DEVICE_PATH).equals(serial)) {\n    return (device.get(VID) + \"_\" + device.get(PID)).toUpperCase();\n  }\n  device=new HashMap<String,String>();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 236,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 1524,
        "startLineNumber" : 52,
        "startColumnNumber" : 47,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  line=line.trim();\n  line=line.replaceAll(\"\\\\s+\",\" \");\n  if ((matcher=serialNumberRegex.matcher(line)).matches()) {\n    device.put(SERIAL_NUMBER,matcher.group(1));\n    if ((serial.startsWith(DEV_TTY_USBSERIAL) || serial.startsWith(DEV_CU_USBSERIAL))) {\n      String devicePath=devicePrefix + matcher.group(1);\n      device.put(DEVICE_PATH,devicePath);\n    }\n  }\n else   if ((serial.startsWith(DEV_TTY_USBMODEM) || serial.startsWith(DEV_CU_USBMODEM)) && (matcher=locationRegex.matcher(line)).matches()) {\n    String suffix=matcher.group(1).substring(2,6).replaceAll(\"0\",\"\");\n    String devicePath=devicePrefix + suffix + \"1\";\n    device.put(DEVICE_PATH,devicePath);\n  }\n else   if ((matcher=pidRegex.matcher(line)).matches()) {\n    String pid=matcher.group(1);\n    if (pid.indexOf(\" \") > 0)     pid=pid.substring(0,pid.indexOf(\" \"));\n    device.put(PID,pid);\n  }\n else   if ((matcher=vidRegex.matcher(line)).matches()) {\n    String vid=matcher.group(1);\n    if (vid.indexOf(\" \") > 0)     vid=vid.substring(0,vid.indexOf(\" \"));\n    device.put(VID,vid);\n  }\n else   if (line.equals(\"\")) {\n    if (device.containsKey(DEVICE_PATH) && device.get(DEVICE_PATH).equals(serial)) {\n      return (device.get(VID) + \"_\" + device.get(PID)).toUpperCase();\n    }\n    device=new HashMap<String,String>();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 251,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1567,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 82,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while ((line=reader.readLine()) != null) {\n  line=line.trim();\n  line=line.replaceAll(\"\\\\s+\",\" \");\n  if ((matcher=serialNumberRegex.matcher(line)).matches()) {\n    device.put(SERIAL_NUMBER,matcher.group(1));\n    if ((serial.startsWith(DEV_TTY_USBSERIAL) || serial.startsWith(DEV_CU_USBSERIAL))) {\n      String devicePath=devicePrefix + matcher.group(1);\n      device.put(DEVICE_PATH,devicePath);\n    }\n  }\n else   if ((serial.startsWith(DEV_TTY_USBMODEM) || serial.startsWith(DEV_CU_USBMODEM)) && (matcher=locationRegex.matcher(line)).matches()) {\n    String suffix=matcher.group(1).substring(2,6).replaceAll(\"0\",\"\");\n    String devicePath=devicePrefix + suffix + \"1\";\n    device.put(DEVICE_PATH,devicePath);\n  }\n else   if ((matcher=pidRegex.matcher(line)).matches()) {\n    String pid=matcher.group(1);\n    if (pid.indexOf(\" \") > 0)     pid=pid.substring(0,pid.indexOf(\" \"));\n    device.put(PID,pid);\n  }\n else   if ((matcher=vidRegex.matcher(line)).matches()) {\n    String vid=matcher.group(1);\n    if (vid.indexOf(\" \") > 0)     vid=vid.substring(0,vid.indexOf(\" \"));\n    device.put(VID,vid);\n  }\n else   if (line.equals(\"\")) {\n    if (device.containsKey(DEVICE_PATH) && device.get(DEVICE_PATH).equals(serial)) {\n      return (device.get(VID) + \"_\" + device.get(PID)).toUpperCase();\n    }\n    device=new HashMap<String,String>();\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 260,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2130,
        "startLineNumber" : 34,
        "startColumnNumber" : 82,
        "endLineNumber" : 85,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  BufferedReader reader=new BufferedReader(new StringReader(output));\n  String devicePrefix;\n  if (serial.startsWith(DEV_TTY_USBSERIAL)) {\n    devicePrefix=DEV_TTY_USBSERIAL;\n  }\n else   if (serial.startsWith(DEV_CU_USBSERIAL)) {\n    devicePrefix=DEV_CU_USBSERIAL;\n  }\n else   if (serial.startsWith(DEV_TTY_USBMODEM)) {\n    devicePrefix=DEV_TTY_USBMODEM;\n  }\n else {\n    devicePrefix=DEV_CU_USBMODEM;\n  }\n  Map<String,String> device=new HashMap<String,String>();\n  String line;\n  Matcher matcher;\n  while ((line=reader.readLine()) != null) {\n    line=line.trim();\n    line=line.replaceAll(\"\\\\s+\",\" \");\n    if ((matcher=serialNumberRegex.matcher(line)).matches()) {\n      device.put(SERIAL_NUMBER,matcher.group(1));\n      if ((serial.startsWith(DEV_TTY_USBSERIAL) || serial.startsWith(DEV_CU_USBSERIAL))) {\n        String devicePath=devicePrefix + matcher.group(1);\n        device.put(DEVICE_PATH,devicePath);\n      }\n    }\n else     if ((serial.startsWith(DEV_TTY_USBMODEM) || serial.startsWith(DEV_CU_USBMODEM)) && (matcher=locationRegex.matcher(line)).matches()) {\n      String suffix=matcher.group(1).substring(2,6).replaceAll(\"0\",\"\");\n      String devicePath=devicePrefix + suffix + \"1\";\n      device.put(DEVICE_PATH,devicePath);\n    }\n else     if ((matcher=pidRegex.matcher(line)).matches()) {\n      String pid=matcher.group(1);\n      if (pid.indexOf(\" \") > 0)       pid=pid.substring(0,pid.indexOf(\" \"));\n      device.put(PID,pid);\n    }\n else     if ((matcher=vidRegex.matcher(line)).matches()) {\n      String vid=matcher.group(1);\n      if (vid.indexOf(\" \") > 0)       vid=vid.substring(0,vid.indexOf(\" \"));\n      device.put(VID,vid);\n    }\n else     if (line.equals(\"\")) {\n      if (device.containsKey(DEVICE_PATH) && device.get(DEVICE_PATH).equals(serial)) {\n        return (device.get(VID) + \"_\" + device.get(PID)).toUpperCase();\n      }\n      device=new HashMap<String,String>();\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 343,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2210,
        "startLineNumber" : 34,
        "startColumnNumber" : 2,
        "endLineNumber" : 85,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public String extractVIDAndPID(String output,String serial) throws IOException {\n  BufferedReader reader=new BufferedReader(new StringReader(output));\n  String devicePrefix;\n  if (serial.startsWith(DEV_TTY_USBSERIAL)) {\n    devicePrefix=DEV_TTY_USBSERIAL;\n  }\n else   if (serial.startsWith(DEV_CU_USBSERIAL)) {\n    devicePrefix=DEV_CU_USBSERIAL;\n  }\n else   if (serial.startsWith(DEV_TTY_USBMODEM)) {\n    devicePrefix=DEV_TTY_USBMODEM;\n  }\n else {\n    devicePrefix=DEV_CU_USBMODEM;\n  }\n  Map<String,String> device=new HashMap<String,String>();\n  String line;\n  Matcher matcher;\n  while ((line=reader.readLine()) != null) {\n    line=line.trim();\n    line=line.replaceAll(\"\\\\s+\",\" \");\n    if ((matcher=serialNumberRegex.matcher(line)).matches()) {\n      device.put(SERIAL_NUMBER,matcher.group(1));\n      if ((serial.startsWith(DEV_TTY_USBSERIAL) || serial.startsWith(DEV_CU_USBSERIAL))) {\n        String devicePath=devicePrefix + matcher.group(1);\n        device.put(DEVICE_PATH,devicePath);\n      }\n    }\n else     if ((serial.startsWith(DEV_TTY_USBMODEM) || serial.startsWith(DEV_CU_USBMODEM)) && (matcher=locationRegex.matcher(line)).matches()) {\n      String suffix=matcher.group(1).substring(2,6).replaceAll(\"0\",\"\");\n      String devicePath=devicePrefix + suffix + \"1\";\n      device.put(DEVICE_PATH,devicePath);\n    }\n else     if ((matcher=pidRegex.matcher(line)).matches()) {\n      String pid=matcher.group(1);\n      if (pid.indexOf(\" \") > 0)       pid=pid.substring(0,pid.indexOf(\" \"));\n      device.put(PID,pid);\n    }\n else     if ((matcher=vidRegex.matcher(line)).matches()) {\n      String vid=matcher.group(1);\n      if (vid.indexOf(\" \") > 0)       vid=vid.substring(0,vid.indexOf(\" \"));\n      device.put(VID,vid);\n    }\n else     if (line.equals(\"\")) {\n      if (device.containsKey(DEVICE_PATH) && device.get(DEVICE_PATH).equals(serial)) {\n        return (device.get(VID) + \"_\" + device.get(PID)).toUpperCase();\n      }\n      device=new HashMap<String,String>();\n    }\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 358,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 63,
        "startColumnNumber" : 8,
        "endLineNumber" : 63,
        "endColumnNumber" : 77
      },
      "nodeContext" : "String suffix=matcher.group(1).substring(2,6).replaceAll(\"0\",\"\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 63,
    "startColumnNumber" : 68,
    "endLineNumber" : 63,
    "endColumnNumber" : 71
  } ],
  "layoutRelationDataList" : [ ]
}