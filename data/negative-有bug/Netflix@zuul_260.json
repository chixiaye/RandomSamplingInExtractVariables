{
  "id" : 260,
  "expression" : "\" ms\"",
  "projectName" : "Netflix@zuul",
  "commitID" : "f8ef3551d8dd57a512336315ec51bb6c0444c517",
  "filePath" : "/zuul-sample/src/main/java/com/netflix/zuul/sample/Bootstrap.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\" ms\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 51,
      "startColumnNumber" : 96,
      "endLineNumber" : 51,
      "endColumnNumber" : 101
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 51,
        "startColumnNumber" : 31,
        "endLineNumber" : 51,
        "endColumnNumber" : 101
      },
      "nodeContext" : "\"Zuul Sample: finished startup. Duration = \" + startupDuration + \" ms\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 102
      },
      "nodeContext" : "System.out.println(\"Zuul Sample: finished startup. Duration = \" + startupDuration + \" ms\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 103
      },
      "nodeContext" : "System.out.println(\"Zuul Sample: finished startup. Duration = \" + startupDuration + \" ms\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 548,
        "startLineNumber" : 44,
        "startColumnNumber" : 12,
        "endLineNumber" : 54,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ConfigurationManager.loadCascadedPropertiesFromResources(\"application\");\n  Injector injector=InjectorBuilder.fromModule(new ZuulSampleModule()).createInjector();\n  BaseServerStartup serverStartup=injector.getInstance(BaseServerStartup.class);\n  server=serverStartup.server();\n  long startupDuration=System.currentTimeMillis() - startTime;\n  System.out.println(\"Zuul Sample: finished startup. Duration = \" + startupDuration + \" ms\");\n  server.start(true);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 60,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 988,
        "startLineNumber" : 44,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  ConfigurationManager.loadCascadedPropertiesFromResources(\"application\");\n  Injector injector=InjectorBuilder.fromModule(new ZuulSampleModule()).createInjector();\n  BaseServerStartup serverStartup=injector.getInstance(BaseServerStartup.class);\n  server=serverStartup.server();\n  long startupDuration=System.currentTimeMillis() - startTime;\n  System.out.println(\"Zuul Sample: finished startup. Duration = \" + startupDuration + \" ms\");\n  server.start(true);\n}\n catch (Throwable t) {\n  t.printStackTrace();\n  System.err.println(\"###############\");\n  System.err.println(\"Zuul Sample: initialization failed. Forcing shutdown now.\");\n  System.err.println(\"###############\");\n  exitCode=1;\n}\n finally {\n  if (server != null)   server.stop();\n  System.exit(exitCode);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 110,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1172,
        "startLineNumber" : 37,
        "startColumnNumber" : 24,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  System.out.println(\"Zuul Sample: starting up.\");\n  long startTime=System.currentTimeMillis();\n  int exitCode=0;\n  Server server=null;\n  try {\n    ConfigurationManager.loadCascadedPropertiesFromResources(\"application\");\n    Injector injector=InjectorBuilder.fromModule(new ZuulSampleModule()).createInjector();\n    BaseServerStartup serverStartup=injector.getInstance(BaseServerStartup.class);\n    server=serverStartup.server();\n    long startupDuration=System.currentTimeMillis() - startTime;\n    System.out.println(\"Zuul Sample: finished startup. Duration = \" + startupDuration + \" ms\");\n    server.start(true);\n  }\n catch (  Throwable t) {\n    t.printStackTrace();\n    System.err.println(\"###############\");\n    System.err.println(\"Zuul Sample: initialization failed. Forcing shutdown now.\");\n    System.err.println(\"###############\");\n    exitCode=1;\n  }\n finally {\n    if (server != null)     server.stop();\n    System.exit(exitCode);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 136,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1192,
        "startLineNumber" : 37,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void start(){\n  System.out.println(\"Zuul Sample: starting up.\");\n  long startTime=System.currentTimeMillis();\n  int exitCode=0;\n  Server server=null;\n  try {\n    ConfigurationManager.loadCascadedPropertiesFromResources(\"application\");\n    Injector injector=InjectorBuilder.fromModule(new ZuulSampleModule()).createInjector();\n    BaseServerStartup serverStartup=injector.getInstance(BaseServerStartup.class);\n    server=serverStartup.server();\n    long startupDuration=System.currentTimeMillis() - startTime;\n    System.out.println(\"Zuul Sample: finished startup. Duration = \" + startupDuration + \" ms\");\n    server.start(true);\n  }\n catch (  Throwable t) {\n    t.printStackTrace();\n    System.err.println(\"###############\");\n    System.err.println(\"Zuul Sample: initialization failed. Forcing shutdown now.\");\n    System.err.println(\"###############\");\n    exitCode=1;\n  }\n finally {\n    if (server != null)     server.stop();\n    System.exit(exitCode);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 140,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 51,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 103
      },
      "nodeContext" : "System.out.println(\"Zuul Sample: finished startup. Duration = \" + startupDuration + \" ms\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 51,
    "startColumnNumber" : 96,
    "endLineNumber" : 51,
    "endColumnNumber" : 101
  } ],
  "layoutRelationDataList" : [ ]
}