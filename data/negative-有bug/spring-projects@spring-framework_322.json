{
  "id" : 322,
  "expression" : "bufferFactory",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-web/src/main/java/org/springframework/http/server/reactive/ReactorNetty2HttpHandlerAdapter.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "bufferFactory",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 59,
      "startColumnNumber" : 95,
      "endLineNumber" : 59,
      "endColumnNumber" : 108
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 59,
        "startColumnNumber" : 44,
        "endLineNumber" : 59,
        "endColumnNumber" : 109
      },
      "nodeContext" : "new ReactorNetty2ServerHttpRequest(reactorRequest,bufferFactory)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 59,
        "startColumnNumber" : 34,
        "endLineNumber" : 59,
        "endColumnNumber" : 109
      },
      "nodeContext" : "request=new ReactorNetty2ServerHttpRequest(reactorRequest,bufferFactory)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 59,
        "startColumnNumber" : 3,
        "endLineNumber" : 59,
        "endColumnNumber" : 110
      },
      "nodeContext" : "ReactorNetty2ServerHttpRequest request=new ReactorNetty2ServerHttpRequest(reactorRequest,bufferFactory);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 575,
        "startLineNumber" : 58,
        "startColumnNumber" : 6,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ReactorNetty2ServerHttpRequest request=new ReactorNetty2ServerHttpRequest(reactorRequest,bufferFactory);\n  ServerHttpResponse response=new ReactorNetty2ServerHttpResponse(reactorResponse,bufferFactory);\n  if (request.getMethod() == HttpMethod.HEAD) {\n    response=new HttpHeadResponseDecorator(response);\n  }\n  return this.httpHandler.handle(request,response).doOnError(ex -> logger.trace(request.getLogPrefix() + \"Failed to complete: \" + ex.getMessage())).doOnSuccess(aVoid -> logger.trace(request.getLogPrefix() + \"Handling completed\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 806,
        "startLineNumber" : 58,
        "startColumnNumber" : 2,
        "endLineNumber" : 76,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  ReactorNetty2ServerHttpRequest request=new ReactorNetty2ServerHttpRequest(reactorRequest,bufferFactory);\n  ServerHttpResponse response=new ReactorNetty2ServerHttpResponse(reactorResponse,bufferFactory);\n  if (request.getMethod() == HttpMethod.HEAD) {\n    response=new HttpHeadResponseDecorator(response);\n  }\n  return this.httpHandler.handle(request,response).doOnError(ex -> logger.trace(request.getLogPrefix() + \"Failed to complete: \" + ex.getMessage())).doOnSuccess(aVoid -> logger.trace(request.getLogPrefix() + \"Handling completed\"));\n}\n catch (URISyntaxException ex) {\n  if (logger.isDebugEnabled()) {\n    logger.debug(\"Failed to get request URI: \" + ex.getMessage());\n  }\n  reactorResponse.status(HttpResponseStatus.BAD_REQUEST);\n  return Mono.empty();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 106,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 909,
        "startLineNumber" : 56,
        "startColumnNumber" : 95,
        "endLineNumber" : 77,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Netty5DataBufferFactory bufferFactory=new Netty5DataBufferFactory(reactorResponse.alloc());\n  try {\n    ReactorNetty2ServerHttpRequest request=new ReactorNetty2ServerHttpRequest(reactorRequest,bufferFactory);\n    ServerHttpResponse response=new ReactorNetty2ServerHttpResponse(reactorResponse,bufferFactory);\n    if (request.getMethod() == HttpMethod.HEAD) {\n      response=new HttpHeadResponseDecorator(response);\n    }\n    return this.httpHandler.handle(request,response).doOnError(ex -> logger.trace(request.getLogPrefix() + \"Failed to complete: \" + ex.getMessage())).doOnSuccess(aVoid -> logger.trace(request.getLogPrefix() + \"Handling completed\"));\n  }\n catch (  URISyntaxException ex) {\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"Failed to get request URI: \" + ex.getMessage());\n    }\n    reactorResponse.status(HttpResponseStatus.BAD_REQUEST);\n    return Mono.empty();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1014,
        "startLineNumber" : 55,
        "startColumnNumber" : 1,
        "endLineNumber" : 77,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public Mono<Void> apply(HttpServerRequest reactorRequest,HttpServerResponse reactorResponse){\n  Netty5DataBufferFactory bufferFactory=new Netty5DataBufferFactory(reactorResponse.alloc());\n  try {\n    ReactorNetty2ServerHttpRequest request=new ReactorNetty2ServerHttpRequest(reactorRequest,bufferFactory);\n    ServerHttpResponse response=new ReactorNetty2ServerHttpResponse(reactorResponse,bufferFactory);\n    if (request.getMethod() == HttpMethod.HEAD) {\n      response=new HttpHeadResponseDecorator(response);\n    }\n    return this.httpHandler.handle(request,response).doOnError(ex -> logger.trace(request.getLogPrefix() + \"Failed to complete: \" + ex.getMessage())).doOnSuccess(aVoid -> logger.trace(request.getLogPrefix() + \"Handling completed\"));\n  }\n catch (  URISyntaxException ex) {\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"Failed to get request URI: \" + ex.getMessage());\n    }\n    reactorResponse.status(HttpResponseStatus.BAD_REQUEST);\n    return Mono.empty();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 136,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 59,
        "startColumnNumber" : 3,
        "endLineNumber" : 59,
        "endColumnNumber" : 110
      },
      "nodeContext" : "ReactorNetty2ServerHttpRequest request=new ReactorNetty2ServerHttpRequest(reactorRequest,bufferFactory);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.springframework.core.io.buffer.Netty5DataBufferFactory"
  }, {
    "nodeContext" : "bufferFactory",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 60,
      "startColumnNumber" : 86,
      "endLineNumber" : 60,
      "endColumnNumber" : 99
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 60,
        "startColumnNumber" : 33,
        "endLineNumber" : 60,
        "endColumnNumber" : 100
      },
      "nodeContext" : "new ReactorNetty2ServerHttpResponse(reactorResponse,bufferFactory)",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 60,
        "startColumnNumber" : 22,
        "endLineNumber" : 60,
        "endColumnNumber" : 100
      },
      "nodeContext" : "response=new ReactorNetty2ServerHttpResponse(reactorResponse,bufferFactory)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 60,
        "startColumnNumber" : 3,
        "endLineNumber" : 60,
        "endColumnNumber" : 101
      },
      "nodeContext" : "ServerHttpResponse response=new ReactorNetty2ServerHttpResponse(reactorResponse,bufferFactory);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 575,
        "startLineNumber" : 58,
        "startColumnNumber" : 6,
        "endLineNumber" : 69,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ReactorNetty2ServerHttpRequest request=new ReactorNetty2ServerHttpRequest(reactorRequest,bufferFactory);\n  ServerHttpResponse response=new ReactorNetty2ServerHttpResponse(reactorResponse,bufferFactory);\n  if (request.getMethod() == HttpMethod.HEAD) {\n    response=new HttpHeadResponseDecorator(response);\n  }\n  return this.httpHandler.handle(request,response).doOnError(ex -> logger.trace(request.getLogPrefix() + \"Failed to complete: \" + ex.getMessage())).doOnSuccess(aVoid -> logger.trace(request.getLogPrefix() + \"Handling completed\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 806,
        "startLineNumber" : 58,
        "startColumnNumber" : 2,
        "endLineNumber" : 76,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  ReactorNetty2ServerHttpRequest request=new ReactorNetty2ServerHttpRequest(reactorRequest,bufferFactory);\n  ServerHttpResponse response=new ReactorNetty2ServerHttpResponse(reactorResponse,bufferFactory);\n  if (request.getMethod() == HttpMethod.HEAD) {\n    response=new HttpHeadResponseDecorator(response);\n  }\n  return this.httpHandler.handle(request,response).doOnError(ex -> logger.trace(request.getLogPrefix() + \"Failed to complete: \" + ex.getMessage())).doOnSuccess(aVoid -> logger.trace(request.getLogPrefix() + \"Handling completed\"));\n}\n catch (URISyntaxException ex) {\n  if (logger.isDebugEnabled()) {\n    logger.debug(\"Failed to get request URI: \" + ex.getMessage());\n  }\n  reactorResponse.status(HttpResponseStatus.BAD_REQUEST);\n  return Mono.empty();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 106,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 909,
        "startLineNumber" : 56,
        "startColumnNumber" : 95,
        "endLineNumber" : 77,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Netty5DataBufferFactory bufferFactory=new Netty5DataBufferFactory(reactorResponse.alloc());\n  try {\n    ReactorNetty2ServerHttpRequest request=new ReactorNetty2ServerHttpRequest(reactorRequest,bufferFactory);\n    ServerHttpResponse response=new ReactorNetty2ServerHttpResponse(reactorResponse,bufferFactory);\n    if (request.getMethod() == HttpMethod.HEAD) {\n      response=new HttpHeadResponseDecorator(response);\n    }\n    return this.httpHandler.handle(request,response).doOnError(ex -> logger.trace(request.getLogPrefix() + \"Failed to complete: \" + ex.getMessage())).doOnSuccess(aVoid -> logger.trace(request.getLogPrefix() + \"Handling completed\"));\n  }\n catch (  URISyntaxException ex) {\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"Failed to get request URI: \" + ex.getMessage());\n    }\n    reactorResponse.status(HttpResponseStatus.BAD_REQUEST);\n    return Mono.empty();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1014,
        "startLineNumber" : 55,
        "startColumnNumber" : 1,
        "endLineNumber" : 77,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public Mono<Void> apply(HttpServerRequest reactorRequest,HttpServerResponse reactorResponse){\n  Netty5DataBufferFactory bufferFactory=new Netty5DataBufferFactory(reactorResponse.alloc());\n  try {\n    ReactorNetty2ServerHttpRequest request=new ReactorNetty2ServerHttpRequest(reactorRequest,bufferFactory);\n    ServerHttpResponse response=new ReactorNetty2ServerHttpResponse(reactorResponse,bufferFactory);\n    if (request.getMethod() == HttpMethod.HEAD) {\n      response=new HttpHeadResponseDecorator(response);\n    }\n    return this.httpHandler.handle(request,response).doOnError(ex -> logger.trace(request.getLogPrefix() + \"Failed to complete: \" + ex.getMessage())).doOnSuccess(aVoid -> logger.trace(request.getLogPrefix() + \"Handling completed\"));\n  }\n catch (  URISyntaxException ex) {\n    if (logger.isDebugEnabled()) {\n      logger.debug(\"Failed to get request URI: \" + ex.getMessage());\n    }\n    reactorResponse.status(HttpResponseStatus.BAD_REQUEST);\n    return Mono.empty();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 136,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 60,
        "startColumnNumber" : 3,
        "endLineNumber" : 60,
        "endColumnNumber" : 101
      },
      "nodeContext" : "ServerHttpResponse response=new ReactorNetty2ServerHttpResponse(reactorResponse,bufferFactory);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.springframework.core.io.buffer.Netty5DataBufferFactory"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 59,
    "startColumnNumber" : 95,
    "endLineNumber" : 59,
    "endColumnNumber" : 108
  }, {
    "charLength" : 13,
    "startLineNumber" : 60,
    "startColumnNumber" : 86,
    "endLineNumber" : 60,
    "endColumnNumber" : 99
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}