{
  "id" : 30,
  "expression" : "r.getValue(0)",
  "projectName" : "redis@jedis",
  "commitID" : "eaa5b16af93d575cd1f340c2cd23595dc29d5638",
  "filePath" : "/src/test/java/redis/clients/jedis/modules/graph/GraphValuesTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "r.getValue(0)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 23,
      "startColumnNumber" : 43,
      "endLineNumber" : 23,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 23,
        "startColumnNumber" : 4,
        "endLineNumber" : 23,
        "endColumnNumber" : 61
      },
      "nodeContext" : "assertEquals(Double.POSITIVE_INFINITY,r.getValue(0),0d)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 23,
        "startColumnNumber" : 4,
        "endLineNumber" : 23,
        "endColumnNumber" : 62
      },
      "nodeContext" : "assertEquals(Double.POSITIVE_INFINITY,r.getValue(0),0d);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 206,
        "startLineNumber" : 19,
        "startColumnNumber" : 30,
        "endLineNumber" : 24,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ResultSet rs=client.graphQuery(\"db\",\"RETURN 10^100000\");\n  assertEquals(1,rs.size());\n  Record r=rs.iterator().next();\n  assertEquals(Double.POSITIVE_INFINITY,r.getValue(0),0d);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 243,
        "startLineNumber" : 18,
        "startColumnNumber" : 2,
        "endLineNumber" : 24,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void parseInfinity(){\n  ResultSet rs=client.graphQuery(\"db\",\"RETURN 10^100000\");\n  assertEquals(1,rs.size());\n  Record r=rs.iterator().next();\n  assertEquals(Double.POSITIVE_INFINITY,r.getValue(0),0d);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 45,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 23,
        "startColumnNumber" : 4,
        "endLineNumber" : 23,
        "endColumnNumber" : 62
      },
      "nodeContext" : "assertEquals(Double.POSITIVE_INFINITY,r.getValue(0),0d);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.Object"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 23,
    "startColumnNumber" : 43,
    "endLineNumber" : 23,
    "endColumnNumber" : 56
  } ],
  "layoutRelationDataList" : [ ]
}