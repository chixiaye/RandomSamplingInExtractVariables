{
  "id" : 37,
  "expression" : "HystrixRequestContext.class.getSimpleName()",
  "projectName" : "Netflix@Hystrix",
  "commitID" : "45d7875c3e51f6d6152b667db31e4fe435711917",
  "filePath" : "/hystrix-core/src/main/java/com/netflix/hystrix/strategy/concurrency/HystrixRequestVariableDefault.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "HystrixRequestContext.class.getSimpleName()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 43,
      "startLineNumber" : 76,
      "startColumnNumber" : 44,
      "endLineNumber" : 76,
      "endColumnNumber" : 87
    },
    "astNodeNumber" : 5,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ClassInstanceCreation,arguments]",
      "nodePosition" : {
        "charLength" : 166,
        "startLineNumber" : 76,
        "startColumnNumber" : 44,
        "endLineNumber" : 76,
        "endColumnNumber" : 210
      },
      "nodeContext" : "HystrixRequestContext.class.getSimpleName() + \".initializeContext() must be called at the beginning of each request before RequestVariable functionality can be used.\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ThrowStatement,expression]",
      "nodePosition" : {
        "charLength" : 193,
        "startLineNumber" : 76,
        "startColumnNumber" : 18,
        "endLineNumber" : 76,
        "endColumnNumber" : 211
      },
      "nodeContext" : "new IllegalStateException(HystrixRequestContext.class.getSimpleName() + \".initializeContext() must be called at the beginning of each request before RequestVariable functionality can be used.\")",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 200,
        "startLineNumber" : 76,
        "startColumnNumber" : 12,
        "endLineNumber" : 76,
        "endColumnNumber" : 212
      },
      "nodeContext" : "throw new IllegalStateException(HystrixRequestContext.class.getSimpleName() + \".initializeContext() must be called at the beginning of each request before RequestVariable functionality can be used.\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 11,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 224,
        "startLineNumber" : 75,
        "startColumnNumber" : 72,
        "endLineNumber" : 77,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  throw new IllegalStateException(HystrixRequestContext.class.getSimpleName() + \".initializeContext() must be called at the beginning of each request before RequestVariable functionality can be used.\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 12,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 288,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (HystrixRequestContext.getContextForCurrentThread() == null) {\n  throw new IllegalStateException(HystrixRequestContext.class.getSimpleName() + \".initializeContext() must be called at the beginning of each request before RequestVariable functionality can be used.\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 18,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1714,
        "startLineNumber" : 74,
        "startColumnNumber" : 19,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (HystrixRequestContext.getContextForCurrentThread() == null) {\n    throw new IllegalStateException(HystrixRequestContext.class.getSimpleName() + \".initializeContext() must be called at the beginning of each request before RequestVariable functionality can be used.\");\n  }\n  ConcurrentHashMap<HystrixRequestVariableDefault<?>,LazyInitializer<?>> variableMap=HystrixRequestContext.getContextForCurrentThread().state;\n  LazyInitializer<?> v=variableMap.get(this);\n  if (v != null) {\n    return (T)v.get();\n  }\n  LazyInitializer<T> l=new LazyInitializer<T>(this);\n  LazyInitializer<?> existing=variableMap.putIfAbsent(this,l);\n  if (existing == null) {\n    return l.get();\n  }\n else {\n    return (T)existing.get();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2012,
        "startLineNumber" : 67,
        "startColumnNumber" : 4,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Get the current value for this variable for the current request context.\n * @return the value of the variable for the current request,or null if no value has been set and there is no initial value\n */\n@SuppressWarnings(\"unchecked\") public T get(){\n  if (HystrixRequestContext.getContextForCurrentThread() == null) {\n    throw new IllegalStateException(HystrixRequestContext.class.getSimpleName() + \".initializeContext() must be called at the beginning of each request before RequestVariable functionality can be used.\");\n  }\n  ConcurrentHashMap<HystrixRequestVariableDefault<?>,LazyInitializer<?>> variableMap=HystrixRequestContext.getContextForCurrentThread().state;\n  LazyInitializer<?> v=variableMap.get(this);\n  if (v != null) {\n    return (T)v.get();\n  }\n  LazyInitializer<T> l=new LazyInitializer<T>(this);\n  LazyInitializer<?> existing=variableMap.putIfAbsent(this,l);\n  if (existing == null) {\n    return l.get();\n  }\n else {\n    return (T)existing.get();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 114,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 200,
        "startLineNumber" : 76,
        "startColumnNumber" : 12,
        "endLineNumber" : 76,
        "endColumnNumber" : 212
      },
      "nodeContext" : "throw new IllegalStateException(HystrixRequestContext.class.getSimpleName() + \".initializeContext() must be called at the beginning of each request before RequestVariable functionality can be used.\");\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 11,
      "astHeight" : 7
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 43,
    "startLineNumber" : 76,
    "startColumnNumber" : 44,
    "endLineNumber" : 76,
    "endColumnNumber" : 87
  } ],
  "layoutRelationDataList" : [ ]
}