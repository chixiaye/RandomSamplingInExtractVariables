{
  "id" : 445,
  "expression" : "style.applyTo(items)",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-project/spring-boot-autoconfigure/src/main/java/org/springframework/boot/autoconfigure/condition/ConditionMessage.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "style.applyTo(items)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 387,
      "startColumnNumber" : 11,
      "endLineNumber" : 387,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 387,
        "startColumnNumber" : 3,
        "endLineNumber" : 387,
        "endColumnNumber" : 31
      },
      "nodeContext" : "items=style.applyTo(items)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 387,
        "startColumnNumber" : 3,
        "endLineNumber" : 387,
        "endColumnNumber" : 32
      },
      "nodeContext" : "items=style.applyTo(items);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 580,
        "startLineNumber" : 384,
        "startColumnNumber" : 66,
        "endLineNumber" : 400,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Assert.notNull(style,\"Style must not be null\");\n  StringBuilder message=new StringBuilder(this.reason);\n  items=style.applyTo(items);\n  if ((this.condition == null || items.size() <= 1) && StringUtils.hasLength(this.singular)) {\n    message.append(\" \" + this.singular);\n  }\n else   if (StringUtils.hasLength(this.plural)) {\n    message.append(\" \" + this.plural);\n  }\n  if (items != null && !items.isEmpty()) {\n    message.append(\" \" + StringUtils.collectionToDelimitedString(items,\", \"));\n  }\n  return this.condition.because(message.toString());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 999,
        "startLineNumber" : 376,
        "startColumnNumber" : 2,
        "endLineNumber" : 400,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Indicate the items with a  {@link Style}. For example {@code didNotFind(\"bean\", \"beans\").items(Style.QUOTE, Collections.singleton(\"x\")}results in the message \"did not find bean 'x'\".\n * @param style the render style\n * @param items the source of the items (may be {@code null})\n * @return a built {@link ConditionMessage}\n */\npublic ConditionMessage items(Style style,Collection<?> items){\n  Assert.notNull(style,\"Style must not be null\");\n  StringBuilder message=new StringBuilder(this.reason);\n  items=style.applyTo(items);\n  if ((this.condition == null || items.size() <= 1) && StringUtils.hasLength(this.singular)) {\n    message.append(\" \" + this.singular);\n  }\n else   if (StringUtils.hasLength(this.plural)) {\n    message.append(\" \" + this.plural);\n  }\n  if (items != null && !items.isEmpty()) {\n    message.append(\" \" + StringUtils.collectionToDelimitedString(items,\", \"));\n  }\n  return this.condition.because(message.toString());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 118,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 387,
        "startColumnNumber" : 3,
        "endLineNumber" : 387,
        "endColumnNumber" : 32
      },
      "nodeContext" : "items=style.applyTo(items);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.util.Collection<>"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 387,
    "startColumnNumber" : 11,
    "endLineNumber" : 387,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ ]
}