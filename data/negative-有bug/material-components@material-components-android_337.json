{
  "id" : 337,
  "expression" : "new WeakReference<>(runnable)",
  "projectName" : "material-components@material-components-android",
  "commitID" : "79bf9d0e8e62eea9c2f2620d4e1a0a2ca0e12017",
  "filePath" : "/catalog/java/io/material/catalog/feature/ViewScheduler.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new WeakReference<>(runnable)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 44,
      "startColumnNumber" : 23,
      "endLineNumber" : 44,
      "endColumnNumber" : 52
    },
    "astNodeNumber" : 5,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 44,
        "endColumnNumber" : 52
      },
      "nodeContext" : "this.listenerRef=new WeakReference<>(runnable)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 44,
        "endColumnNumber" : 53
      },
      "nodeContext" : "this.listenerRef=new WeakReference<>(runnable);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 388,
        "startLineNumber" : 42,
        "startColumnNumber" : 63,
        "endLineNumber" : 58,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  cancel();\n  this.listenerRef=new WeakReference<>(runnable);\n  task=scheduledExecutorService.scheduleAtFixedRate(() -> {\n    if (listenerRef == null || listenerRef.get() == null) {\n      cancel();\n      return;\n    }\n    listenerRef.get().run();\n  }\n,0,pollingIntervalMs,TimeUnit.MILLISECONDS);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 48,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 682,
        "startLineNumber" : 37,
        "startColumnNumber" : 2,
        "endLineNumber" : 58,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Run the  {@code runnable} at a fixed period of {@code pollingIntervalMs}. The runnable will be kept with a weak reference to avoid leaking any context. Keep a reference to the runnable so it's not recycled.\n */\npublic void start(Runnable runnable,long pollingIntervalMs){\n  cancel();\n  this.listenerRef=new WeakReference<>(runnable);\n  task=scheduledExecutorService.scheduleAtFixedRate(() -> {\n    if (listenerRef == null || listenerRef.get() == null) {\n      cancel();\n      return;\n    }\n    listenerRef.get().run();\n  }\n,0,pollingIntervalMs,TimeUnit.MILLISECONDS);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 60,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 44,
        "endColumnNumber" : 53
      },
      "nodeContext" : "this.listenerRef=new WeakReference<>(runnable);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "java.lang.ref.WeakReference<java.lang.Runnable>"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 44,
    "startColumnNumber" : 23,
    "endLineNumber" : 44,
    "endColumnNumber" : 52
  } ],
  "layoutRelationDataList" : [ ]
}