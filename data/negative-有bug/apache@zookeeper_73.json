{
  "id" : 73,
  "expression" : "args",
  "projectName" : "apache@zookeeper",
  "commitID" : "c6639c9842973a7954c8baa412d6825cb833d51f",
  "filePath" : "/src/java/main/org/apache/zookeeper/server/ZooKeeperServerMain.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "args",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 50,
      "startColumnNumber" : 31,
      "endLineNumber" : 50,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 50,
        "startColumnNumber" : 12,
        "endLineNumber" : 50,
        "endColumnNumber" : 36
      },
      "nodeContext" : "ServerConfig.parse(args)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 50,
        "startColumnNumber" : 12,
        "endLineNumber" : 50,
        "endColumnNumber" : 37
      },
      "nodeContext" : "ServerConfig.parse(args);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 51,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ServerConfig.parse(args);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 186,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 55,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  ServerConfig.parse(args);\n}\n catch (Exception e) {\n  LOG.fatal(\"Error in config\",e);\n  LOG.info(USAGE);\n  System.exit(2);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 29,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1157,
        "startLineNumber" : 42,
        "startColumnNumber" : 43,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    ManagedUtil.registerLog4jMBeans();\n  }\n catch (  JMException e) {\n    LOG.warn(\"Unable to register log4j JMX control\",e);\n  }\n  try {\n    ServerConfig.parse(args);\n  }\n catch (  Exception e) {\n    LOG.fatal(\"Error in config\",e);\n    LOG.info(USAGE);\n    System.exit(2);\n  }\n  runStandalone(new ZooKeeperServer.Factory(){\n    public NIOServerCnxn.Factory createConnectionFactory() throws IOException {\n      return new NIOServerCnxn.Factory(ServerConfig.getClientPort());\n    }\n    public ZooKeeperServer createServer() throws IOException {\n      ZooKeeperServer zks=new ZooKeeperServer();\n      zks.setClientPort(ServerConfig.getClientPort());\n      FileTxnSnapLog ftxn=new FileTxnSnapLog(new File(ServerConfig.getDataLogDir()),new File(ServerConfig.getDataDir()));\n      zks.setTxnLogFactory(ftxn);\n      return zks;\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1196,
        "startLineNumber" : 42,
        "startColumnNumber" : 4,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String[] args){\n  try {\n    ManagedUtil.registerLog4jMBeans();\n  }\n catch (  JMException e) {\n    LOG.warn(\"Unable to register log4j JMX control\",e);\n  }\n  try {\n    ServerConfig.parse(args);\n  }\n catch (  Exception e) {\n    LOG.fatal(\"Error in config\",e);\n    LOG.info(USAGE);\n    System.exit(2);\n  }\n  runStandalone(new ZooKeeperServer.Factory(){\n    public NIOServerCnxn.Factory createConnectionFactory() throws IOException {\n      return new NIOServerCnxn.Factory(ServerConfig.getClientPort());\n    }\n    public ZooKeeperServer createServer() throws IOException {\n      ZooKeeperServer zks=new ZooKeeperServer();\n      zks.setClientPort(ServerConfig.getClientPort());\n      FileTxnSnapLog ftxn=new FileTxnSnapLog(new File(ServerConfig.getDataLogDir()),new File(ServerConfig.getDataDir()));\n      zks.setTxnLogFactory(ftxn);\n      return zks;\n    }\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 137,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 50,
        "startColumnNumber" : 12,
        "endLineNumber" : 50,
        "endColumnNumber" : 37
      },
      "nodeContext" : "ServerConfig.parse(args);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String[]"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 50,
    "startColumnNumber" : 31,
    "endLineNumber" : 50,
    "endColumnNumber" : 35
  } ],
  "layoutRelationDataList" : [ ]
}