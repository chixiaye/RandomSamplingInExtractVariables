{
  "id" : 336,
  "expression" : "imageView.getImageReceiver()",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/org/telegram/ui/Components/PaintingOverlay.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "imageView.getImageReceiver()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 28,
      "startLineNumber" : 151,
      "startColumnNumber" : 50,
      "endLineNumber" : 151,
      "endColumnNumber" : 78
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 151,
        "startColumnNumber" : 34,
        "endLineNumber" : 151,
        "endColumnNumber" : 78
      },
      "nodeContext" : "imageReceiver=imageView.getImageReceiver()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 151,
        "startColumnNumber" : 20,
        "endLineNumber" : 151,
        "endColumnNumber" : 79
      },
      "nodeContext" : "ImageReceiver imageReceiver=imageView.getImageReceiver();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1449,
        "startLineNumber" : 148,
        "startColumnNumber" : 38,
        "endLineNumber" : 172,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  BackupImageView imageView=new BackupImageView(getContext());\n  imageView.setAspectFit(true);\n  ImageReceiver imageReceiver=imageView.getImageReceiver();\n  if (isVideo) {\n    imageReceiver.setAllowDecodeSingleFrame(true);\n    imageReceiver.setAllowStartLottieAnimation(false);\n    if (startAfterSet) {\n      imageReceiver.setDelegate((imageReceiver1,set,thumb,memCache) -> {\n        if (set && !thumb) {\n          RLottieDrawable drawable=imageReceiver1.getLottieAnimation();\n          if (drawable != null) {\n            drawable.start();\n          }\n        }\n      }\n);\n    }\n  }\n  TLRPC.PhotoSize thumb=FileLoader.getClosestPhotoSizeWithSize(entity.document.thumbs,90);\n  imageReceiver.setImage(ImageLocation.getForDocument(entity.document),null,ImageLocation.getForDocument(thumb,entity.document),null,\"webp\",entity.parentObject,1);\n  if ((entity.subType & 2) != 0) {\n    imageView.setScaleX(-1);\n  }\n  entity.view=imageView;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 139,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 3871,
        "startLineNumber" : 148,
        "startColumnNumber" : 16,
        "endLineNumber" : 215,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (entity.type == 0) {\n  BackupImageView imageView=new BackupImageView(getContext());\n  imageView.setAspectFit(true);\n  ImageReceiver imageReceiver=imageView.getImageReceiver();\n  if (isVideo) {\n    imageReceiver.setAllowDecodeSingleFrame(true);\n    imageReceiver.setAllowStartLottieAnimation(false);\n    if (startAfterSet) {\n      imageReceiver.setDelegate((imageReceiver1,set,thumb,memCache) -> {\n        if (set && !thumb) {\n          RLottieDrawable drawable=imageReceiver1.getLottieAnimation();\n          if (drawable != null) {\n            drawable.start();\n          }\n        }\n      }\n);\n    }\n  }\n  TLRPC.PhotoSize thumb=FileLoader.getClosestPhotoSizeWithSize(entity.document.thumbs,90);\n  imageReceiver.setImage(ImageLocation.getForDocument(entity.document),null,ImageLocation.getForDocument(thumb,entity.document),null,\"webp\",entity.parentObject,1);\n  if ((entity.subType & 2) != 0) {\n    imageView.setScaleX(-1);\n  }\n  entity.view=imageView;\n}\n else if (entity.type == 1) {\n  EditTextOutline editText=new EditTextOutline(getContext()){\n    @Override public boolean dispatchTouchEvent(    MotionEvent event){\n      return false;\n    }\n    @Override public boolean onTouchEvent(    MotionEvent event){\n      return false;\n    }\n  }\n;\n  editText.setBackgroundColor(Color.TRANSPARENT);\n  editText.setPadding(AndroidUtilities.dp(7),AndroidUtilities.dp(7),AndroidUtilities.dp(7),AndroidUtilities.dp(7));\n  editText.setTextSize(TypedValue.COMPLEX_UNIT_PX,entity.fontSize);\n  editText.setText(entity.text);\n  editText.setTypeface(null,Typeface.BOLD);\n  editText.setGravity(Gravity.CENTER);\n  editText.setHorizontallyScrolling(false);\n  editText.setImeOptions(EditorInfo.IME_FLAG_NO_EXTRACT_UI);\n  editText.setFocusableInTouchMode(true);\n  editText.setEnabled(false);\n  editText.setInputType(editText.getInputType() | EditorInfo.TYPE_TEXT_FLAG_CAP_SENTENCES);\n  if (Build.VERSION.SDK_INT >= 23) {\n    editText.setBreakStrategy(Layout.BREAK_STRATEGY_SIMPLE);\n  }\n  if ((entity.subType & 1) != 0) {\n    editText.setTextColor(0xffffffff);\n    editText.setStrokeColor(entity.color);\n    editText.setFrameColor(0);\n    editText.setShadowLayer(0,0,0,0);\n  }\n else   if ((entity.subType & 4) != 0) {\n    editText.setTextColor(0xff000000);\n    editText.setStrokeColor(0);\n    editText.setFrameColor(entity.color);\n    editText.setShadowLayer(0,0,0,0);\n  }\n else {\n    editText.setTextColor(entity.color);\n    editText.setStrokeColor(0);\n    editText.setFrameColor(0);\n    editText.setShadowLayer(5,0,1,0x66000000);\n  }\n  entity.view=editText;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 399,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 4101,
        "startLineNumber" : 146,
        "startColumnNumber" : 66,
        "endLineNumber" : 218,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  VideoEditedInfo.MediaEntity entity=mediaEntities.get(a);\n  if (entity.type == 0) {\n    BackupImageView imageView=new BackupImageView(getContext());\n    imageView.setAspectFit(true);\n    ImageReceiver imageReceiver=imageView.getImageReceiver();\n    if (isVideo) {\n      imageReceiver.setAllowDecodeSingleFrame(true);\n      imageReceiver.setAllowStartLottieAnimation(false);\n      if (startAfterSet) {\n        imageReceiver.setDelegate((imageReceiver1,set,thumb,memCache) -> {\n          if (set && !thumb) {\n            RLottieDrawable drawable=imageReceiver1.getLottieAnimation();\n            if (drawable != null) {\n              drawable.start();\n            }\n          }\n        }\n);\n      }\n    }\n    TLRPC.PhotoSize thumb=FileLoader.getClosestPhotoSizeWithSize(entity.document.thumbs,90);\n    imageReceiver.setImage(ImageLocation.getForDocument(entity.document),null,ImageLocation.getForDocument(thumb,entity.document),null,\"webp\",entity.parentObject,1);\n    if ((entity.subType & 2) != 0) {\n      imageView.setScaleX(-1);\n    }\n    entity.view=imageView;\n  }\n else   if (entity.type == 1) {\n    EditTextOutline editText=new EditTextOutline(getContext()){\n      @Override public boolean dispatchTouchEvent(      MotionEvent event){\n        return false;\n      }\n      @Override public boolean onTouchEvent(      MotionEvent event){\n        return false;\n      }\n    }\n;\n    editText.setBackgroundColor(Color.TRANSPARENT);\n    editText.setPadding(AndroidUtilities.dp(7),AndroidUtilities.dp(7),AndroidUtilities.dp(7),AndroidUtilities.dp(7));\n    editText.setTextSize(TypedValue.COMPLEX_UNIT_PX,entity.fontSize);\n    editText.setText(entity.text);\n    editText.setTypeface(null,Typeface.BOLD);\n    editText.setGravity(Gravity.CENTER);\n    editText.setHorizontallyScrolling(false);\n    editText.setImeOptions(EditorInfo.IME_FLAG_NO_EXTRACT_UI);\n    editText.setFocusableInTouchMode(true);\n    editText.setEnabled(false);\n    editText.setInputType(editText.getInputType() | EditorInfo.TYPE_TEXT_FLAG_CAP_SENTENCES);\n    if (Build.VERSION.SDK_INT >= 23) {\n      editText.setBreakStrategy(Layout.BREAK_STRATEGY_SIMPLE);\n    }\n    if ((entity.subType & 1) != 0) {\n      editText.setTextColor(0xffffffff);\n      editText.setStrokeColor(entity.color);\n      editText.setFrameColor(0);\n      editText.setShadowLayer(0,0,0,0);\n    }\n else     if ((entity.subType & 4) != 0) {\n      editText.setTextColor(0xff000000);\n      editText.setStrokeColor(0);\n      editText.setFrameColor(entity.color);\n      editText.setShadowLayer(0,0,0,0);\n    }\n else {\n      editText.setTextColor(entity.color);\n      editText.setStrokeColor(0);\n      editText.setFrameColor(0);\n      editText.setShadowLayer(5,0,1,0x66000000);\n    }\n    entity.view=editText;\n  }\n  addView(entity.view);\n  entity.view.setRotation((float)(-entity.rotation / Math.PI * 180));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 436,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4155,
        "startLineNumber" : 146,
        "startColumnNumber" : 12,
        "endLineNumber" : 218,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int a=0, N=mediaEntities.size(); a < N; a++) {\n  VideoEditedInfo.MediaEntity entity=mediaEntities.get(a);\n  if (entity.type == 0) {\n    BackupImageView imageView=new BackupImageView(getContext());\n    imageView.setAspectFit(true);\n    ImageReceiver imageReceiver=imageView.getImageReceiver();\n    if (isVideo) {\n      imageReceiver.setAllowDecodeSingleFrame(true);\n      imageReceiver.setAllowStartLottieAnimation(false);\n      if (startAfterSet) {\n        imageReceiver.setDelegate((imageReceiver1,set,thumb,memCache) -> {\n          if (set && !thumb) {\n            RLottieDrawable drawable=imageReceiver1.getLottieAnimation();\n            if (drawable != null) {\n              drawable.start();\n            }\n          }\n        }\n);\n      }\n    }\n    TLRPC.PhotoSize thumb=FileLoader.getClosestPhotoSizeWithSize(entity.document.thumbs,90);\n    imageReceiver.setImage(ImageLocation.getForDocument(entity.document),null,ImageLocation.getForDocument(thumb,entity.document),null,\"webp\",entity.parentObject,1);\n    if ((entity.subType & 2) != 0) {\n      imageView.setScaleX(-1);\n    }\n    entity.view=imageView;\n  }\n else   if (entity.type == 1) {\n    EditTextOutline editText=new EditTextOutline(getContext()){\n      @Override public boolean dispatchTouchEvent(      MotionEvent event){\n        return false;\n      }\n      @Override public boolean onTouchEvent(      MotionEvent event){\n        return false;\n      }\n    }\n;\n    editText.setBackgroundColor(Color.TRANSPARENT);\n    editText.setPadding(AndroidUtilities.dp(7),AndroidUtilities.dp(7),AndroidUtilities.dp(7),AndroidUtilities.dp(7));\n    editText.setTextSize(TypedValue.COMPLEX_UNIT_PX,entity.fontSize);\n    editText.setText(entity.text);\n    editText.setTypeface(null,Typeface.BOLD);\n    editText.setGravity(Gravity.CENTER);\n    editText.setHorizontallyScrolling(false);\n    editText.setImeOptions(EditorInfo.IME_FLAG_NO_EXTRACT_UI);\n    editText.setFocusableInTouchMode(true);\n    editText.setEnabled(false);\n    editText.setInputType(editText.getInputType() | EditorInfo.TYPE_TEXT_FLAG_CAP_SENTENCES);\n    if (Build.VERSION.SDK_INT >= 23) {\n      editText.setBreakStrategy(Layout.BREAK_STRATEGY_SIMPLE);\n    }\n    if ((entity.subType & 1) != 0) {\n      editText.setTextColor(0xffffffff);\n      editText.setStrokeColor(entity.color);\n      editText.setFrameColor(0);\n      editText.setShadowLayer(0,0,0,0);\n    }\n else     if ((entity.subType & 4) != 0) {\n      editText.setTextColor(0xff000000);\n      editText.setStrokeColor(0);\n      editText.setFrameColor(entity.color);\n      editText.setShadowLayer(0,0,0,0);\n    }\n else {\n      editText.setTextColor(entity.color);\n      editText.setStrokeColor(0);\n      editText.setFrameColor(0);\n      editText.setShadowLayer(5,0,1,0x66000000);\n    }\n    entity.view=editText;\n  }\n  addView(entity.view);\n  entity.view.setRotation((float)(-entity.rotation / Math.PI * 180));\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 452,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 4179,
        "startLineNumber" : 145,
        "startColumnNumber" : 53,
        "endLineNumber" : 219,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  for (int a=0, N=mediaEntities.size(); a < N; a++) {\n    VideoEditedInfo.MediaEntity entity=mediaEntities.get(a);\n    if (entity.type == 0) {\n      BackupImageView imageView=new BackupImageView(getContext());\n      imageView.setAspectFit(true);\n      ImageReceiver imageReceiver=imageView.getImageReceiver();\n      if (isVideo) {\n        imageReceiver.setAllowDecodeSingleFrame(true);\n        imageReceiver.setAllowStartLottieAnimation(false);\n        if (startAfterSet) {\n          imageReceiver.setDelegate((imageReceiver1,set,thumb,memCache) -> {\n            if (set && !thumb) {\n              RLottieDrawable drawable=imageReceiver1.getLottieAnimation();\n              if (drawable != null) {\n                drawable.start();\n              }\n            }\n          }\n);\n        }\n      }\n      TLRPC.PhotoSize thumb=FileLoader.getClosestPhotoSizeWithSize(entity.document.thumbs,90);\n      imageReceiver.setImage(ImageLocation.getForDocument(entity.document),null,ImageLocation.getForDocument(thumb,entity.document),null,\"webp\",entity.parentObject,1);\n      if ((entity.subType & 2) != 0) {\n        imageView.setScaleX(-1);\n      }\n      entity.view=imageView;\n    }\n else     if (entity.type == 1) {\n      EditTextOutline editText=new EditTextOutline(getContext()){\n        @Override public boolean dispatchTouchEvent(        MotionEvent event){\n          return false;\n        }\n        @Override public boolean onTouchEvent(        MotionEvent event){\n          return false;\n        }\n      }\n;\n      editText.setBackgroundColor(Color.TRANSPARENT);\n      editText.setPadding(AndroidUtilities.dp(7),AndroidUtilities.dp(7),AndroidUtilities.dp(7),AndroidUtilities.dp(7));\n      editText.setTextSize(TypedValue.COMPLEX_UNIT_PX,entity.fontSize);\n      editText.setText(entity.text);\n      editText.setTypeface(null,Typeface.BOLD);\n      editText.setGravity(Gravity.CENTER);\n      editText.setHorizontallyScrolling(false);\n      editText.setImeOptions(EditorInfo.IME_FLAG_NO_EXTRACT_UI);\n      editText.setFocusableInTouchMode(true);\n      editText.setEnabled(false);\n      editText.setInputType(editText.getInputType() | EditorInfo.TYPE_TEXT_FLAG_CAP_SENTENCES);\n      if (Build.VERSION.SDK_INT >= 23) {\n        editText.setBreakStrategy(Layout.BREAK_STRATEGY_SIMPLE);\n      }\n      if ((entity.subType & 1) != 0) {\n        editText.setTextColor(0xffffffff);\n        editText.setStrokeColor(entity.color);\n        editText.setFrameColor(0);\n        editText.setShadowLayer(0,0,0,0);\n      }\n else       if ((entity.subType & 4) != 0) {\n        editText.setTextColor(0xff000000);\n        editText.setStrokeColor(0);\n        editText.setFrameColor(entity.color);\n        editText.setShadowLayer(0,0,0,0);\n      }\n else {\n        editText.setTextColor(entity.color);\n        editText.setStrokeColor(0);\n        editText.setFrameColor(0);\n        editText.setShadowLayer(5,0,1,0x66000000);\n      }\n      entity.view=editText;\n    }\n    addView(entity.view);\n    entity.view.setRotation((float)(-entity.rotation / Math.PI * 180));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 453,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 4224,
        "startLineNumber" : 145,
        "startColumnNumber" : 8,
        "endLineNumber" : 219,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (entities != null && !entities.isEmpty()) {\n  for (int a=0, N=mediaEntities.size(); a < N; a++) {\n    VideoEditedInfo.MediaEntity entity=mediaEntities.get(a);\n    if (entity.type == 0) {\n      BackupImageView imageView=new BackupImageView(getContext());\n      imageView.setAspectFit(true);\n      ImageReceiver imageReceiver=imageView.getImageReceiver();\n      if (isVideo) {\n        imageReceiver.setAllowDecodeSingleFrame(true);\n        imageReceiver.setAllowStartLottieAnimation(false);\n        if (startAfterSet) {\n          imageReceiver.setDelegate((imageReceiver1,set,thumb,memCache) -> {\n            if (set && !thumb) {\n              RLottieDrawable drawable=imageReceiver1.getLottieAnimation();\n              if (drawable != null) {\n                drawable.start();\n              }\n            }\n          }\n);\n        }\n      }\n      TLRPC.PhotoSize thumb=FileLoader.getClosestPhotoSizeWithSize(entity.document.thumbs,90);\n      imageReceiver.setImage(ImageLocation.getForDocument(entity.document),null,ImageLocation.getForDocument(thumb,entity.document),null,\"webp\",entity.parentObject,1);\n      if ((entity.subType & 2) != 0) {\n        imageView.setScaleX(-1);\n      }\n      entity.view=imageView;\n    }\n else     if (entity.type == 1) {\n      EditTextOutline editText=new EditTextOutline(getContext()){\n        @Override public boolean dispatchTouchEvent(        MotionEvent event){\n          return false;\n        }\n        @Override public boolean onTouchEvent(        MotionEvent event){\n          return false;\n        }\n      }\n;\n      editText.setBackgroundColor(Color.TRANSPARENT);\n      editText.setPadding(AndroidUtilities.dp(7),AndroidUtilities.dp(7),AndroidUtilities.dp(7),AndroidUtilities.dp(7));\n      editText.setTextSize(TypedValue.COMPLEX_UNIT_PX,entity.fontSize);\n      editText.setText(entity.text);\n      editText.setTypeface(null,Typeface.BOLD);\n      editText.setGravity(Gravity.CENTER);\n      editText.setHorizontallyScrolling(false);\n      editText.setImeOptions(EditorInfo.IME_FLAG_NO_EXTRACT_UI);\n      editText.setFocusableInTouchMode(true);\n      editText.setEnabled(false);\n      editText.setInputType(editText.getInputType() | EditorInfo.TYPE_TEXT_FLAG_CAP_SENTENCES);\n      if (Build.VERSION.SDK_INT >= 23) {\n        editText.setBreakStrategy(Layout.BREAK_STRATEGY_SIMPLE);\n      }\n      if ((entity.subType & 1) != 0) {\n        editText.setTextColor(0xffffffff);\n        editText.setStrokeColor(entity.color);\n        editText.setFrameColor(0);\n        editText.setShadowLayer(0,0,0,0);\n      }\n else       if ((entity.subType & 4) != 0) {\n        editText.setTextColor(0xff000000);\n        editText.setStrokeColor(0);\n        editText.setFrameColor(entity.color);\n        editText.setShadowLayer(0,0,0,0);\n      }\n else {\n        editText.setTextColor(entity.color);\n        editText.setStrokeColor(0);\n        editText.setFrameColor(0);\n        editText.setShadowLayer(5,0,1,0x66000000);\n      }\n      entity.view=editText;\n    }\n    addView(entity.view);\n    entity.view.setRotation((float)(-entity.rotation / Math.PI * 180));\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 462,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 4300,
        "startLineNumber" : 142,
        "startColumnNumber" : 117,
        "endLineNumber" : 220,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  mediaEntities=entities;\n  removeAllViews();\n  if (entities != null && !entities.isEmpty()) {\n    for (int a=0, N=mediaEntities.size(); a < N; a++) {\n      VideoEditedInfo.MediaEntity entity=mediaEntities.get(a);\n      if (entity.type == 0) {\n        BackupImageView imageView=new BackupImageView(getContext());\n        imageView.setAspectFit(true);\n        ImageReceiver imageReceiver=imageView.getImageReceiver();\n        if (isVideo) {\n          imageReceiver.setAllowDecodeSingleFrame(true);\n          imageReceiver.setAllowStartLottieAnimation(false);\n          if (startAfterSet) {\n            imageReceiver.setDelegate((imageReceiver1,set,thumb,memCache) -> {\n              if (set && !thumb) {\n                RLottieDrawable drawable=imageReceiver1.getLottieAnimation();\n                if (drawable != null) {\n                  drawable.start();\n                }\n              }\n            }\n);\n          }\n        }\n        TLRPC.PhotoSize thumb=FileLoader.getClosestPhotoSizeWithSize(entity.document.thumbs,90);\n        imageReceiver.setImage(ImageLocation.getForDocument(entity.document),null,ImageLocation.getForDocument(thumb,entity.document),null,\"webp\",entity.parentObject,1);\n        if ((entity.subType & 2) != 0) {\n          imageView.setScaleX(-1);\n        }\n        entity.view=imageView;\n      }\n else       if (entity.type == 1) {\n        EditTextOutline editText=new EditTextOutline(getContext()){\n          @Override public boolean dispatchTouchEvent(          MotionEvent event){\n            return false;\n          }\n          @Override public boolean onTouchEvent(          MotionEvent event){\n            return false;\n          }\n        }\n;\n        editText.setBackgroundColor(Color.TRANSPARENT);\n        editText.setPadding(AndroidUtilities.dp(7),AndroidUtilities.dp(7),AndroidUtilities.dp(7),AndroidUtilities.dp(7));\n        editText.setTextSize(TypedValue.COMPLEX_UNIT_PX,entity.fontSize);\n        editText.setText(entity.text);\n        editText.setTypeface(null,Typeface.BOLD);\n        editText.setGravity(Gravity.CENTER);\n        editText.setHorizontallyScrolling(false);\n        editText.setImeOptions(EditorInfo.IME_FLAG_NO_EXTRACT_UI);\n        editText.setFocusableInTouchMode(true);\n        editText.setEnabled(false);\n        editText.setInputType(editText.getInputType() | EditorInfo.TYPE_TEXT_FLAG_CAP_SENTENCES);\n        if (Build.VERSION.SDK_INT >= 23) {\n          editText.setBreakStrategy(Layout.BREAK_STRATEGY_SIMPLE);\n        }\n        if ((entity.subType & 1) != 0) {\n          editText.setTextColor(0xffffffff);\n          editText.setStrokeColor(entity.color);\n          editText.setFrameColor(0);\n          editText.setShadowLayer(0,0,0,0);\n        }\n else         if ((entity.subType & 4) != 0) {\n          editText.setTextColor(0xff000000);\n          editText.setStrokeColor(0);\n          editText.setFrameColor(entity.color);\n          editText.setShadowLayer(0,0,0,0);\n        }\n else {\n          editText.setTextColor(entity.color);\n          editText.setStrokeColor(0);\n          editText.setFrameColor(0);\n          editText.setShadowLayer(5,0,1,0x66000000);\n        }\n        entity.view=editText;\n      }\n      addView(entity.view);\n      entity.view.setRotation((float)(-entity.rotation / Math.PI * 180));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 470,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 4413,
        "startLineNumber" : 142,
        "startColumnNumber" : 4,
        "endLineNumber" : 220,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void setEntities(ArrayList<VideoEditedInfo.MediaEntity> entities,boolean isVideo,boolean startAfterSet){\n  mediaEntities=entities;\n  removeAllViews();\n  if (entities != null && !entities.isEmpty()) {\n    for (int a=0, N=mediaEntities.size(); a < N; a++) {\n      VideoEditedInfo.MediaEntity entity=mediaEntities.get(a);\n      if (entity.type == 0) {\n        BackupImageView imageView=new BackupImageView(getContext());\n        imageView.setAspectFit(true);\n        ImageReceiver imageReceiver=imageView.getImageReceiver();\n        if (isVideo) {\n          imageReceiver.setAllowDecodeSingleFrame(true);\n          imageReceiver.setAllowStartLottieAnimation(false);\n          if (startAfterSet) {\n            imageReceiver.setDelegate((imageReceiver1,set,thumb,memCache) -> {\n              if (set && !thumb) {\n                RLottieDrawable drawable=imageReceiver1.getLottieAnimation();\n                if (drawable != null) {\n                  drawable.start();\n                }\n              }\n            }\n);\n          }\n        }\n        TLRPC.PhotoSize thumb=FileLoader.getClosestPhotoSizeWithSize(entity.document.thumbs,90);\n        imageReceiver.setImage(ImageLocation.getForDocument(entity.document),null,ImageLocation.getForDocument(thumb,entity.document),null,\"webp\",entity.parentObject,1);\n        if ((entity.subType & 2) != 0) {\n          imageView.setScaleX(-1);\n        }\n        entity.view=imageView;\n      }\n else       if (entity.type == 1) {\n        EditTextOutline editText=new EditTextOutline(getContext()){\n          @Override public boolean dispatchTouchEvent(          MotionEvent event){\n            return false;\n          }\n          @Override public boolean onTouchEvent(          MotionEvent event){\n            return false;\n          }\n        }\n;\n        editText.setBackgroundColor(Color.TRANSPARENT);\n        editText.setPadding(AndroidUtilities.dp(7),AndroidUtilities.dp(7),AndroidUtilities.dp(7),AndroidUtilities.dp(7));\n        editText.setTextSize(TypedValue.COMPLEX_UNIT_PX,entity.fontSize);\n        editText.setText(entity.text);\n        editText.setTypeface(null,Typeface.BOLD);\n        editText.setGravity(Gravity.CENTER);\n        editText.setHorizontallyScrolling(false);\n        editText.setImeOptions(EditorInfo.IME_FLAG_NO_EXTRACT_UI);\n        editText.setFocusableInTouchMode(true);\n        editText.setEnabled(false);\n        editText.setInputType(editText.getInputType() | EditorInfo.TYPE_TEXT_FLAG_CAP_SENTENCES);\n        if (Build.VERSION.SDK_INT >= 23) {\n          editText.setBreakStrategy(Layout.BREAK_STRATEGY_SIMPLE);\n        }\n        if ((entity.subType & 1) != 0) {\n          editText.setTextColor(0xffffffff);\n          editText.setStrokeColor(entity.color);\n          editText.setFrameColor(0);\n          editText.setShadowLayer(0,0,0,0);\n        }\n else         if ((entity.subType & 4) != 0) {\n          editText.setTextColor(0xff000000);\n          editText.setStrokeColor(0);\n          editText.setFrameColor(entity.color);\n          editText.setShadowLayer(0,0,0,0);\n        }\n else {\n          editText.setTextColor(entity.color);\n          editText.setStrokeColor(0);\n          editText.setFrameColor(0);\n          editText.setShadowLayer(5,0,1,0x66000000);\n        }\n        entity.view=editText;\n      }\n      addView(entity.view);\n      entity.view.setRotation((float)(-entity.rotation / Math.PI * 180));\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 489,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 151,
        "startColumnNumber" : 20,
        "endLineNumber" : 151,
        "endColumnNumber" : 79
      },
      "nodeContext" : "ImageReceiver imageReceiver=imageView.getImageReceiver();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "org.telegram.messenger.ImageReceiver"
  } ],
  "positionList" : [ {
    "charLength" : 28,
    "startLineNumber" : 151,
    "startColumnNumber" : 50,
    "endLineNumber" : 151,
    "endColumnNumber" : 78
  } ],
  "layoutRelationDataList" : [ ]
}