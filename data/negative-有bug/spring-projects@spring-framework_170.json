{
  "id" : 170,
  "expression" : "\"ClientHttpRequest already executed\"",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-web/src/main/java/org/springframework/http/client/AbstractAsyncClientHttpRequest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"ClientHttpRequest already executed\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 66,
      "startColumnNumber" : 31,
      "endLineNumber" : 66,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 66,
        "startColumnNumber" : 2,
        "endLineNumber" : 66,
        "endColumnNumber" : 68
      },
      "nodeContext" : "Assert.state(!this.executed,\"ClientHttpRequest already executed\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 66,
        "startColumnNumber" : 2,
        "endLineNumber" : 66,
        "endColumnNumber" : 69
      },
      "nodeContext" : "Assert.state(!this.executed,\"ClientHttpRequest already executed\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 65,
        "startColumnNumber" : 36,
        "endLineNumber" : 67,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  Assert.state(!this.executed,\"ClientHttpRequest already executed\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 273,
        "startLineNumber" : 61,
        "startColumnNumber" : 1,
        "endLineNumber" : 67,
        "endColumnNumber" : 2
      },
      "nodeContext" : "/** \n * Asserts that this request has not been  {@linkplain #executeAsync() executed} yet.\n * @throws IllegalStateException if this request has been executed\n */\nprotected void assertNotExecuted(){\n  Assert.state(!this.executed,\"ClientHttpRequest already executed\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 15,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 66,
        "startColumnNumber" : 2,
        "endLineNumber" : 66,
        "endColumnNumber" : 69
      },
      "nodeContext" : "Assert.state(!this.executed,\"ClientHttpRequest already executed\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 36,
    "startLineNumber" : 66,
    "startColumnNumber" : 31,
    "endLineNumber" : 66,
    "endColumnNumber" : 67
  } ],
  "layoutRelationDataList" : [ ]
}