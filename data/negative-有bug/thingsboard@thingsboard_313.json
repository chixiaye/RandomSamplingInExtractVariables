{
  "id" : 313,
  "expression" : "ComponentLifecycleEvent",
  "projectName" : "thingsboard@thingsboard",
  "commitID" : "7c2b3a9fbf84cc58aa7546029c5c7c10a662c55a",
  "filePath" : "/application/src/main/java/org/thingsboard/server/service/queue/processing/AbstractConsumerService.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "ComponentLifecycleEvent",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 164,
      "startColumnNumber" : 64,
      "endLineNumber" : 164,
      "endColumnNumber" : 87
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 164,
        "startColumnNumber" : 64,
        "endLineNumber" : 164,
        "endColumnNumber" : 95
      },
      "nodeContext" : "ComponentLifecycleEvent.UPDATED",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 164,
        "startColumnNumber" : 24,
        "endLineNumber" : 164,
        "endColumnNumber" : 96
      },
      "nodeContext" : "componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 186,
        "startLineNumber" : 164,
        "startColumnNumber" : 20,
        "endLineNumber" : 166,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n  apiUsageStateService.onTenantProfileUpdate(tenantProfileId);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 409,
        "startLineNumber" : 161,
        "startColumnNumber" : 107,
        "endLineNumber" : 167,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  TenantProfileId tenantProfileId=new TenantProfileId(componentLifecycleMsg.getEntityId().getId());\n  tenantProfileCache.evict(tenantProfileId);\n  if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n    apiUsageStateService.onTenantProfileUpdate(tenantProfileId);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2200,
        "startLineNumber" : 161,
        "startColumnNumber" : 16,
        "endLineNumber" : 184,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (EntityType.TENANT_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  TenantProfileId tenantProfileId=new TenantProfileId(componentLifecycleMsg.getEntityId().getId());\n  tenantProfileCache.evict(tenantProfileId);\n  if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n    apiUsageStateService.onTenantProfileUpdate(tenantProfileId);\n  }\n}\n else if (EntityType.TENANT.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  tenantProfileCache.evict(componentLifecycleMsg.getTenantId());\n  if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n    apiUsageStateService.onTenantUpdate(componentLifecycleMsg.getTenantId());\n  }\n else   if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.DELETED)) {\n    apiUsageStateService.onTenantDelete((TenantId)componentLifecycleMsg.getEntityId());\n  }\n}\n else if (EntityType.DEVICE_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceProfileId(componentLifecycleMsg.getEntityId().getId()));\n}\n else if (EntityType.DEVICE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceId(componentLifecycleMsg.getEntityId().getId()));\n}\n else if (EntityType.API_USAGE_STATE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  apiUsageStateService.onApiUsageStateUpdate(componentLifecycleMsg.getTenantId());\n}\n else if (EntityType.CUSTOMER.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  if (componentLifecycleMsg.getEvent() == ComponentLifecycleEvent.DELETED) {\n    apiUsageStateService.onCustomerDelete((CustomerId)componentLifecycleMsg.getEntityId());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 205,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2584,
        "startLineNumber" : 157,
        "startColumnNumber" : 59,
        "endLineNumber" : 185,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  ComponentLifecycleMsg componentLifecycleMsg=(ComponentLifecycleMsg)actorMsg;\n  log.info(\"[{}][{}][{}] Received Lifecycle event: {}\",componentLifecycleMsg.getTenantId(),componentLifecycleMsg.getEntityId().getEntityType(),componentLifecycleMsg.getEntityId(),componentLifecycleMsg.getEvent());\n  if (EntityType.TENANT_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    TenantProfileId tenantProfileId=new TenantProfileId(componentLifecycleMsg.getEntityId().getId());\n    tenantProfileCache.evict(tenantProfileId);\n    if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n      apiUsageStateService.onTenantProfileUpdate(tenantProfileId);\n    }\n  }\n else   if (EntityType.TENANT.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    tenantProfileCache.evict(componentLifecycleMsg.getTenantId());\n    if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n      apiUsageStateService.onTenantUpdate(componentLifecycleMsg.getTenantId());\n    }\n else     if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.DELETED)) {\n      apiUsageStateService.onTenantDelete((TenantId)componentLifecycleMsg.getEntityId());\n    }\n  }\n else   if (EntityType.DEVICE_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceProfileId(componentLifecycleMsg.getEntityId().getId()));\n  }\n else   if (EntityType.DEVICE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceId(componentLifecycleMsg.getEntityId().getId()));\n  }\n else   if (EntityType.API_USAGE_STATE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    apiUsageStateService.onApiUsageStateUpdate(componentLifecycleMsg.getTenantId());\n  }\n else   if (EntityType.CUSTOMER.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    if (componentLifecycleMsg.getEvent() == ComponentLifecycleEvent.DELETED) {\n      apiUsageStateService.onCustomerDelete((CustomerId)componentLifecycleMsg.getEntityId());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2631,
        "startLineNumber" : 157,
        "startColumnNumber" : 12,
        "endLineNumber" : 185,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (actorMsg instanceof ComponentLifecycleMsg) {\n  ComponentLifecycleMsg componentLifecycleMsg=(ComponentLifecycleMsg)actorMsg;\n  log.info(\"[{}][{}][{}] Received Lifecycle event: {}\",componentLifecycleMsg.getTenantId(),componentLifecycleMsg.getEntityId().getEntityType(),componentLifecycleMsg.getEntityId(),componentLifecycleMsg.getEvent());\n  if (EntityType.TENANT_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    TenantProfileId tenantProfileId=new TenantProfileId(componentLifecycleMsg.getEntityId().getId());\n    tenantProfileCache.evict(tenantProfileId);\n    if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n      apiUsageStateService.onTenantProfileUpdate(tenantProfileId);\n    }\n  }\n else   if (EntityType.TENANT.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    tenantProfileCache.evict(componentLifecycleMsg.getTenantId());\n    if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n      apiUsageStateService.onTenantUpdate(componentLifecycleMsg.getTenantId());\n    }\n else     if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.DELETED)) {\n      apiUsageStateService.onTenantDelete((TenantId)componentLifecycleMsg.getEntityId());\n    }\n  }\n else   if (EntityType.DEVICE_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceProfileId(componentLifecycleMsg.getEntityId().getId()));\n  }\n else   if (EntityType.DEVICE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceId(componentLifecycleMsg.getEntityId().getId()));\n  }\n else   if (EntityType.API_USAGE_STATE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    apiUsageStateService.onApiUsageStateUpdate(componentLifecycleMsg.getTenantId());\n  }\n else   if (EntityType.CUSTOMER.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    if (componentLifecycleMsg.getEvent() == ComponentLifecycleEvent.DELETED) {\n      apiUsageStateService.onCustomerDelete((CustomerId)componentLifecycleMsg.getEntityId());\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 239,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2845,
        "startLineNumber" : 155,
        "startColumnNumber" : 37,
        "endLineNumber" : 188,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  TbActorMsg actorMsg=actorMsgOpt.get();\n  if (actorMsg instanceof ComponentLifecycleMsg) {\n    ComponentLifecycleMsg componentLifecycleMsg=(ComponentLifecycleMsg)actorMsg;\n    log.info(\"[{}][{}][{}] Received Lifecycle event: {}\",componentLifecycleMsg.getTenantId(),componentLifecycleMsg.getEntityId().getEntityType(),componentLifecycleMsg.getEntityId(),componentLifecycleMsg.getEvent());\n    if (EntityType.TENANT_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      TenantProfileId tenantProfileId=new TenantProfileId(componentLifecycleMsg.getEntityId().getId());\n      tenantProfileCache.evict(tenantProfileId);\n      if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n        apiUsageStateService.onTenantProfileUpdate(tenantProfileId);\n      }\n    }\n else     if (EntityType.TENANT.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      tenantProfileCache.evict(componentLifecycleMsg.getTenantId());\n      if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n        apiUsageStateService.onTenantUpdate(componentLifecycleMsg.getTenantId());\n      }\n else       if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.DELETED)) {\n        apiUsageStateService.onTenantDelete((TenantId)componentLifecycleMsg.getEntityId());\n      }\n    }\n else     if (EntityType.DEVICE_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceProfileId(componentLifecycleMsg.getEntityId().getId()));\n    }\n else     if (EntityType.DEVICE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceId(componentLifecycleMsg.getEntityId().getId()));\n    }\n else     if (EntityType.API_USAGE_STATE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      apiUsageStateService.onApiUsageStateUpdate(componentLifecycleMsg.getTenantId());\n    }\n else     if (EntityType.CUSTOMER.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      if (componentLifecycleMsg.getEvent() == ComponentLifecycleEvent.DELETED) {\n        apiUsageStateService.onCustomerDelete((CustomerId)componentLifecycleMsg.getEntityId());\n      }\n    }\n  }\n  log.trace(\"[{}] Forwarding message to App Actor {}\",id,actorMsg);\n  actorContext.tellWithHighPriority(actorMsg);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 260,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2874,
        "startLineNumber" : 155,
        "startColumnNumber" : 8,
        "endLineNumber" : 188,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (actorMsgOpt.isPresent()) {\n  TbActorMsg actorMsg=actorMsgOpt.get();\n  if (actorMsg instanceof ComponentLifecycleMsg) {\n    ComponentLifecycleMsg componentLifecycleMsg=(ComponentLifecycleMsg)actorMsg;\n    log.info(\"[{}][{}][{}] Received Lifecycle event: {}\",componentLifecycleMsg.getTenantId(),componentLifecycleMsg.getEntityId().getEntityType(),componentLifecycleMsg.getEntityId(),componentLifecycleMsg.getEvent());\n    if (EntityType.TENANT_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      TenantProfileId tenantProfileId=new TenantProfileId(componentLifecycleMsg.getEntityId().getId());\n      tenantProfileCache.evict(tenantProfileId);\n      if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n        apiUsageStateService.onTenantProfileUpdate(tenantProfileId);\n      }\n    }\n else     if (EntityType.TENANT.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      tenantProfileCache.evict(componentLifecycleMsg.getTenantId());\n      if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n        apiUsageStateService.onTenantUpdate(componentLifecycleMsg.getTenantId());\n      }\n else       if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.DELETED)) {\n        apiUsageStateService.onTenantDelete((TenantId)componentLifecycleMsg.getEntityId());\n      }\n    }\n else     if (EntityType.DEVICE_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceProfileId(componentLifecycleMsg.getEntityId().getId()));\n    }\n else     if (EntityType.DEVICE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceId(componentLifecycleMsg.getEntityId().getId()));\n    }\n else     if (EntityType.API_USAGE_STATE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      apiUsageStateService.onApiUsageStateUpdate(componentLifecycleMsg.getTenantId());\n    }\n else     if (EntityType.CUSTOMER.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      if (componentLifecycleMsg.getEvent() == ComponentLifecycleEvent.DELETED) {\n        apiUsageStateService.onCustomerDelete((CustomerId)componentLifecycleMsg.getEntityId());\n      }\n    }\n  }\n  log.trace(\"[{}] Forwarding message to App Actor {}\",id,actorMsg);\n  actorContext.tellWithHighPriority(actorMsg);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 264,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2978,
        "startLineNumber" : 153,
        "startColumnNumber" : 74,
        "endLineNumber" : 189,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Optional<TbActorMsg> actorMsgOpt=encodingService.decode(nfMsg.toByteArray());\n  if (actorMsgOpt.isPresent()) {\n    TbActorMsg actorMsg=actorMsgOpt.get();\n    if (actorMsg instanceof ComponentLifecycleMsg) {\n      ComponentLifecycleMsg componentLifecycleMsg=(ComponentLifecycleMsg)actorMsg;\n      log.info(\"[{}][{}][{}] Received Lifecycle event: {}\",componentLifecycleMsg.getTenantId(),componentLifecycleMsg.getEntityId().getEntityType(),componentLifecycleMsg.getEntityId(),componentLifecycleMsg.getEvent());\n      if (EntityType.TENANT_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        TenantProfileId tenantProfileId=new TenantProfileId(componentLifecycleMsg.getEntityId().getId());\n        tenantProfileCache.evict(tenantProfileId);\n        if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n          apiUsageStateService.onTenantProfileUpdate(tenantProfileId);\n        }\n      }\n else       if (EntityType.TENANT.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        tenantProfileCache.evict(componentLifecycleMsg.getTenantId());\n        if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n          apiUsageStateService.onTenantUpdate(componentLifecycleMsg.getTenantId());\n        }\n else         if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.DELETED)) {\n          apiUsageStateService.onTenantDelete((TenantId)componentLifecycleMsg.getEntityId());\n        }\n      }\n else       if (EntityType.DEVICE_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceProfileId(componentLifecycleMsg.getEntityId().getId()));\n      }\n else       if (EntityType.DEVICE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceId(componentLifecycleMsg.getEntityId().getId()));\n      }\n else       if (EntityType.API_USAGE_STATE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        apiUsageStateService.onApiUsageStateUpdate(componentLifecycleMsg.getTenantId());\n      }\n else       if (EntityType.CUSTOMER.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        if (componentLifecycleMsg.getEvent() == ComponentLifecycleEvent.DELETED) {\n          apiUsageStateService.onCustomerDelete((CustomerId)componentLifecycleMsg.getEntityId());\n        }\n      }\n    }\n    log.trace(\"[{}] Forwarding message to App Actor {}\",id,actorMsg);\n    actorContext.tellWithHighPriority(actorMsg);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 279,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3048,
        "startLineNumber" : 153,
        "startColumnNumber" : 4,
        "endLineNumber" : 189,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected void handleComponentLifecycleMsg(UUID id,ByteString nfMsg){\n  Optional<TbActorMsg> actorMsgOpt=encodingService.decode(nfMsg.toByteArray());\n  if (actorMsgOpt.isPresent()) {\n    TbActorMsg actorMsg=actorMsgOpt.get();\n    if (actorMsg instanceof ComponentLifecycleMsg) {\n      ComponentLifecycleMsg componentLifecycleMsg=(ComponentLifecycleMsg)actorMsg;\n      log.info(\"[{}][{}][{}] Received Lifecycle event: {}\",componentLifecycleMsg.getTenantId(),componentLifecycleMsg.getEntityId().getEntityType(),componentLifecycleMsg.getEntityId(),componentLifecycleMsg.getEvent());\n      if (EntityType.TENANT_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        TenantProfileId tenantProfileId=new TenantProfileId(componentLifecycleMsg.getEntityId().getId());\n        tenantProfileCache.evict(tenantProfileId);\n        if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n          apiUsageStateService.onTenantProfileUpdate(tenantProfileId);\n        }\n      }\n else       if (EntityType.TENANT.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        tenantProfileCache.evict(componentLifecycleMsg.getTenantId());\n        if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n          apiUsageStateService.onTenantUpdate(componentLifecycleMsg.getTenantId());\n        }\n else         if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.DELETED)) {\n          apiUsageStateService.onTenantDelete((TenantId)componentLifecycleMsg.getEntityId());\n        }\n      }\n else       if (EntityType.DEVICE_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceProfileId(componentLifecycleMsg.getEntityId().getId()));\n      }\n else       if (EntityType.DEVICE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceId(componentLifecycleMsg.getEntityId().getId()));\n      }\n else       if (EntityType.API_USAGE_STATE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        apiUsageStateService.onApiUsageStateUpdate(componentLifecycleMsg.getTenantId());\n      }\n else       if (EntityType.CUSTOMER.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        if (componentLifecycleMsg.getEvent() == ComponentLifecycleEvent.DELETED) {\n          apiUsageStateService.onCustomerDelete((CustomerId)componentLifecycleMsg.getEntityId());\n        }\n      }\n    }\n    log.trace(\"[{}] Forwarding message to App Actor {}\",id,actorMsg);\n    actorContext.tellWithHighPriority(actorMsg);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 291,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 164,
        "startColumnNumber" : 24,
        "endLineNumber" : 164,
        "endColumnNumber" : 96
      },
      "nodeContext" : "componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.thingsboard.server.common.data.plugin.ComponentLifecycleEvent"
  }, {
    "nodeContext" : "ComponentLifecycleEvent",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 169,
      "startColumnNumber" : 64,
      "endLineNumber" : 169,
      "endColumnNumber" : 87
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 169,
        "startColumnNumber" : 64,
        "endLineNumber" : 169,
        "endColumnNumber" : 95
      },
      "nodeContext" : "ComponentLifecycleEvent.UPDATED",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 169,
        "startColumnNumber" : 24,
        "endLineNumber" : 169,
        "endColumnNumber" : 96
      },
      "nodeContext" : "componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 415,
        "startLineNumber" : 169,
        "startColumnNumber" : 20,
        "endLineNumber" : 173,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n  apiUsageStateService.onTenantUpdate(componentLifecycleMsg.getTenantId());\n}\n else if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.DELETED)) {\n  apiUsageStateService.onTenantDelete((TenantId)componentLifecycleMsg.getEntityId());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 37,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 538,
        "startLineNumber" : 167,
        "startColumnNumber" : 106,
        "endLineNumber" : 174,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  tenantProfileCache.evict(componentLifecycleMsg.getTenantId());\n  if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n    apiUsageStateService.onTenantUpdate(componentLifecycleMsg.getTenantId());\n  }\n else   if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.DELETED)) {\n    apiUsageStateService.onTenantDelete((TenantId)componentLifecycleMsg.getEntityId());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1694,
        "startLineNumber" : 167,
        "startColumnNumber" : 23,
        "endLineNumber" : 184,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (EntityType.TENANT.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  tenantProfileCache.evict(componentLifecycleMsg.getTenantId());\n  if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n    apiUsageStateService.onTenantUpdate(componentLifecycleMsg.getTenantId());\n  }\n else   if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.DELETED)) {\n    apiUsageStateService.onTenantDelete((TenantId)componentLifecycleMsg.getEntityId());\n  }\n}\n else if (EntityType.DEVICE_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceProfileId(componentLifecycleMsg.getEntityId().getId()));\n}\n else if (EntityType.DEVICE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceId(componentLifecycleMsg.getEntityId().getId()));\n}\n else if (EntityType.API_USAGE_STATE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  apiUsageStateService.onApiUsageStateUpdate(componentLifecycleMsg.getTenantId());\n}\n else if (EntityType.CUSTOMER.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  if (componentLifecycleMsg.getEvent() == ComponentLifecycleEvent.DELETED) {\n    apiUsageStateService.onCustomerDelete((CustomerId)componentLifecycleMsg.getEntityId());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 160,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2200,
        "startLineNumber" : 161,
        "startColumnNumber" : 16,
        "endLineNumber" : 184,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (EntityType.TENANT_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  TenantProfileId tenantProfileId=new TenantProfileId(componentLifecycleMsg.getEntityId().getId());\n  tenantProfileCache.evict(tenantProfileId);\n  if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n    apiUsageStateService.onTenantProfileUpdate(tenantProfileId);\n  }\n}\n else if (EntityType.TENANT.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  tenantProfileCache.evict(componentLifecycleMsg.getTenantId());\n  if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n    apiUsageStateService.onTenantUpdate(componentLifecycleMsg.getTenantId());\n  }\n else   if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.DELETED)) {\n    apiUsageStateService.onTenantDelete((TenantId)componentLifecycleMsg.getEntityId());\n  }\n}\n else if (EntityType.DEVICE_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceProfileId(componentLifecycleMsg.getEntityId().getId()));\n}\n else if (EntityType.DEVICE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceId(componentLifecycleMsg.getEntityId().getId()));\n}\n else if (EntityType.API_USAGE_STATE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  apiUsageStateService.onApiUsageStateUpdate(componentLifecycleMsg.getTenantId());\n}\n else if (EntityType.CUSTOMER.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  if (componentLifecycleMsg.getEvent() == ComponentLifecycleEvent.DELETED) {\n    apiUsageStateService.onCustomerDelete((CustomerId)componentLifecycleMsg.getEntityId());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 205,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2584,
        "startLineNumber" : 157,
        "startColumnNumber" : 59,
        "endLineNumber" : 185,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  ComponentLifecycleMsg componentLifecycleMsg=(ComponentLifecycleMsg)actorMsg;\n  log.info(\"[{}][{}][{}] Received Lifecycle event: {}\",componentLifecycleMsg.getTenantId(),componentLifecycleMsg.getEntityId().getEntityType(),componentLifecycleMsg.getEntityId(),componentLifecycleMsg.getEvent());\n  if (EntityType.TENANT_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    TenantProfileId tenantProfileId=new TenantProfileId(componentLifecycleMsg.getEntityId().getId());\n    tenantProfileCache.evict(tenantProfileId);\n    if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n      apiUsageStateService.onTenantProfileUpdate(tenantProfileId);\n    }\n  }\n else   if (EntityType.TENANT.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    tenantProfileCache.evict(componentLifecycleMsg.getTenantId());\n    if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n      apiUsageStateService.onTenantUpdate(componentLifecycleMsg.getTenantId());\n    }\n else     if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.DELETED)) {\n      apiUsageStateService.onTenantDelete((TenantId)componentLifecycleMsg.getEntityId());\n    }\n  }\n else   if (EntityType.DEVICE_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceProfileId(componentLifecycleMsg.getEntityId().getId()));\n  }\n else   if (EntityType.DEVICE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceId(componentLifecycleMsg.getEntityId().getId()));\n  }\n else   if (EntityType.API_USAGE_STATE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    apiUsageStateService.onApiUsageStateUpdate(componentLifecycleMsg.getTenantId());\n  }\n else   if (EntityType.CUSTOMER.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    if (componentLifecycleMsg.getEvent() == ComponentLifecycleEvent.DELETED) {\n      apiUsageStateService.onCustomerDelete((CustomerId)componentLifecycleMsg.getEntityId());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2631,
        "startLineNumber" : 157,
        "startColumnNumber" : 12,
        "endLineNumber" : 185,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (actorMsg instanceof ComponentLifecycleMsg) {\n  ComponentLifecycleMsg componentLifecycleMsg=(ComponentLifecycleMsg)actorMsg;\n  log.info(\"[{}][{}][{}] Received Lifecycle event: {}\",componentLifecycleMsg.getTenantId(),componentLifecycleMsg.getEntityId().getEntityType(),componentLifecycleMsg.getEntityId(),componentLifecycleMsg.getEvent());\n  if (EntityType.TENANT_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    TenantProfileId tenantProfileId=new TenantProfileId(componentLifecycleMsg.getEntityId().getId());\n    tenantProfileCache.evict(tenantProfileId);\n    if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n      apiUsageStateService.onTenantProfileUpdate(tenantProfileId);\n    }\n  }\n else   if (EntityType.TENANT.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    tenantProfileCache.evict(componentLifecycleMsg.getTenantId());\n    if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n      apiUsageStateService.onTenantUpdate(componentLifecycleMsg.getTenantId());\n    }\n else     if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.DELETED)) {\n      apiUsageStateService.onTenantDelete((TenantId)componentLifecycleMsg.getEntityId());\n    }\n  }\n else   if (EntityType.DEVICE_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceProfileId(componentLifecycleMsg.getEntityId().getId()));\n  }\n else   if (EntityType.DEVICE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceId(componentLifecycleMsg.getEntityId().getId()));\n  }\n else   if (EntityType.API_USAGE_STATE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    apiUsageStateService.onApiUsageStateUpdate(componentLifecycleMsg.getTenantId());\n  }\n else   if (EntityType.CUSTOMER.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    if (componentLifecycleMsg.getEvent() == ComponentLifecycleEvent.DELETED) {\n      apiUsageStateService.onCustomerDelete((CustomerId)componentLifecycleMsg.getEntityId());\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 239,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2845,
        "startLineNumber" : 155,
        "startColumnNumber" : 37,
        "endLineNumber" : 188,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  TbActorMsg actorMsg=actorMsgOpt.get();\n  if (actorMsg instanceof ComponentLifecycleMsg) {\n    ComponentLifecycleMsg componentLifecycleMsg=(ComponentLifecycleMsg)actorMsg;\n    log.info(\"[{}][{}][{}] Received Lifecycle event: {}\",componentLifecycleMsg.getTenantId(),componentLifecycleMsg.getEntityId().getEntityType(),componentLifecycleMsg.getEntityId(),componentLifecycleMsg.getEvent());\n    if (EntityType.TENANT_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      TenantProfileId tenantProfileId=new TenantProfileId(componentLifecycleMsg.getEntityId().getId());\n      tenantProfileCache.evict(tenantProfileId);\n      if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n        apiUsageStateService.onTenantProfileUpdate(tenantProfileId);\n      }\n    }\n else     if (EntityType.TENANT.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      tenantProfileCache.evict(componentLifecycleMsg.getTenantId());\n      if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n        apiUsageStateService.onTenantUpdate(componentLifecycleMsg.getTenantId());\n      }\n else       if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.DELETED)) {\n        apiUsageStateService.onTenantDelete((TenantId)componentLifecycleMsg.getEntityId());\n      }\n    }\n else     if (EntityType.DEVICE_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceProfileId(componentLifecycleMsg.getEntityId().getId()));\n    }\n else     if (EntityType.DEVICE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceId(componentLifecycleMsg.getEntityId().getId()));\n    }\n else     if (EntityType.API_USAGE_STATE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      apiUsageStateService.onApiUsageStateUpdate(componentLifecycleMsg.getTenantId());\n    }\n else     if (EntityType.CUSTOMER.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      if (componentLifecycleMsg.getEvent() == ComponentLifecycleEvent.DELETED) {\n        apiUsageStateService.onCustomerDelete((CustomerId)componentLifecycleMsg.getEntityId());\n      }\n    }\n  }\n  log.trace(\"[{}] Forwarding message to App Actor {}\",id,actorMsg);\n  actorContext.tellWithHighPriority(actorMsg);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 260,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2874,
        "startLineNumber" : 155,
        "startColumnNumber" : 8,
        "endLineNumber" : 188,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (actorMsgOpt.isPresent()) {\n  TbActorMsg actorMsg=actorMsgOpt.get();\n  if (actorMsg instanceof ComponentLifecycleMsg) {\n    ComponentLifecycleMsg componentLifecycleMsg=(ComponentLifecycleMsg)actorMsg;\n    log.info(\"[{}][{}][{}] Received Lifecycle event: {}\",componentLifecycleMsg.getTenantId(),componentLifecycleMsg.getEntityId().getEntityType(),componentLifecycleMsg.getEntityId(),componentLifecycleMsg.getEvent());\n    if (EntityType.TENANT_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      TenantProfileId tenantProfileId=new TenantProfileId(componentLifecycleMsg.getEntityId().getId());\n      tenantProfileCache.evict(tenantProfileId);\n      if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n        apiUsageStateService.onTenantProfileUpdate(tenantProfileId);\n      }\n    }\n else     if (EntityType.TENANT.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      tenantProfileCache.evict(componentLifecycleMsg.getTenantId());\n      if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n        apiUsageStateService.onTenantUpdate(componentLifecycleMsg.getTenantId());\n      }\n else       if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.DELETED)) {\n        apiUsageStateService.onTenantDelete((TenantId)componentLifecycleMsg.getEntityId());\n      }\n    }\n else     if (EntityType.DEVICE_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceProfileId(componentLifecycleMsg.getEntityId().getId()));\n    }\n else     if (EntityType.DEVICE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceId(componentLifecycleMsg.getEntityId().getId()));\n    }\n else     if (EntityType.API_USAGE_STATE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      apiUsageStateService.onApiUsageStateUpdate(componentLifecycleMsg.getTenantId());\n    }\n else     if (EntityType.CUSTOMER.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      if (componentLifecycleMsg.getEvent() == ComponentLifecycleEvent.DELETED) {\n        apiUsageStateService.onCustomerDelete((CustomerId)componentLifecycleMsg.getEntityId());\n      }\n    }\n  }\n  log.trace(\"[{}] Forwarding message to App Actor {}\",id,actorMsg);\n  actorContext.tellWithHighPriority(actorMsg);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 264,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2978,
        "startLineNumber" : 153,
        "startColumnNumber" : 74,
        "endLineNumber" : 189,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Optional<TbActorMsg> actorMsgOpt=encodingService.decode(nfMsg.toByteArray());\n  if (actorMsgOpt.isPresent()) {\n    TbActorMsg actorMsg=actorMsgOpt.get();\n    if (actorMsg instanceof ComponentLifecycleMsg) {\n      ComponentLifecycleMsg componentLifecycleMsg=(ComponentLifecycleMsg)actorMsg;\n      log.info(\"[{}][{}][{}] Received Lifecycle event: {}\",componentLifecycleMsg.getTenantId(),componentLifecycleMsg.getEntityId().getEntityType(),componentLifecycleMsg.getEntityId(),componentLifecycleMsg.getEvent());\n      if (EntityType.TENANT_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        TenantProfileId tenantProfileId=new TenantProfileId(componentLifecycleMsg.getEntityId().getId());\n        tenantProfileCache.evict(tenantProfileId);\n        if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n          apiUsageStateService.onTenantProfileUpdate(tenantProfileId);\n        }\n      }\n else       if (EntityType.TENANT.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        tenantProfileCache.evict(componentLifecycleMsg.getTenantId());\n        if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n          apiUsageStateService.onTenantUpdate(componentLifecycleMsg.getTenantId());\n        }\n else         if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.DELETED)) {\n          apiUsageStateService.onTenantDelete((TenantId)componentLifecycleMsg.getEntityId());\n        }\n      }\n else       if (EntityType.DEVICE_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceProfileId(componentLifecycleMsg.getEntityId().getId()));\n      }\n else       if (EntityType.DEVICE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceId(componentLifecycleMsg.getEntityId().getId()));\n      }\n else       if (EntityType.API_USAGE_STATE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        apiUsageStateService.onApiUsageStateUpdate(componentLifecycleMsg.getTenantId());\n      }\n else       if (EntityType.CUSTOMER.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        if (componentLifecycleMsg.getEvent() == ComponentLifecycleEvent.DELETED) {\n          apiUsageStateService.onCustomerDelete((CustomerId)componentLifecycleMsg.getEntityId());\n        }\n      }\n    }\n    log.trace(\"[{}] Forwarding message to App Actor {}\",id,actorMsg);\n    actorContext.tellWithHighPriority(actorMsg);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 279,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3048,
        "startLineNumber" : 153,
        "startColumnNumber" : 4,
        "endLineNumber" : 189,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected void handleComponentLifecycleMsg(UUID id,ByteString nfMsg){\n  Optional<TbActorMsg> actorMsgOpt=encodingService.decode(nfMsg.toByteArray());\n  if (actorMsgOpt.isPresent()) {\n    TbActorMsg actorMsg=actorMsgOpt.get();\n    if (actorMsg instanceof ComponentLifecycleMsg) {\n      ComponentLifecycleMsg componentLifecycleMsg=(ComponentLifecycleMsg)actorMsg;\n      log.info(\"[{}][{}][{}] Received Lifecycle event: {}\",componentLifecycleMsg.getTenantId(),componentLifecycleMsg.getEntityId().getEntityType(),componentLifecycleMsg.getEntityId(),componentLifecycleMsg.getEvent());\n      if (EntityType.TENANT_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        TenantProfileId tenantProfileId=new TenantProfileId(componentLifecycleMsg.getEntityId().getId());\n        tenantProfileCache.evict(tenantProfileId);\n        if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n          apiUsageStateService.onTenantProfileUpdate(tenantProfileId);\n        }\n      }\n else       if (EntityType.TENANT.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        tenantProfileCache.evict(componentLifecycleMsg.getTenantId());\n        if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n          apiUsageStateService.onTenantUpdate(componentLifecycleMsg.getTenantId());\n        }\n else         if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.DELETED)) {\n          apiUsageStateService.onTenantDelete((TenantId)componentLifecycleMsg.getEntityId());\n        }\n      }\n else       if (EntityType.DEVICE_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceProfileId(componentLifecycleMsg.getEntityId().getId()));\n      }\n else       if (EntityType.DEVICE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceId(componentLifecycleMsg.getEntityId().getId()));\n      }\n else       if (EntityType.API_USAGE_STATE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        apiUsageStateService.onApiUsageStateUpdate(componentLifecycleMsg.getTenantId());\n      }\n else       if (EntityType.CUSTOMER.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        if (componentLifecycleMsg.getEvent() == ComponentLifecycleEvent.DELETED) {\n          apiUsageStateService.onCustomerDelete((CustomerId)componentLifecycleMsg.getEntityId());\n        }\n      }\n    }\n    log.trace(\"[{}] Forwarding message to App Actor {}\",id,actorMsg);\n    actorContext.tellWithHighPriority(actorMsg);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 291,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 169,
        "startColumnNumber" : 24,
        "endLineNumber" : 169,
        "endColumnNumber" : 96
      },
      "nodeContext" : "componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.thingsboard.server.common.data.plugin.ComponentLifecycleEvent"
  }, {
    "nodeContext" : "ComponentLifecycleEvent",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 171,
      "startColumnNumber" : 71,
      "endLineNumber" : 171,
      "endColumnNumber" : 94
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 171,
        "startColumnNumber" : 71,
        "endLineNumber" : 171,
        "endColumnNumber" : 102
      },
      "nodeContext" : "ComponentLifecycleEvent.DELETED",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 171,
        "startColumnNumber" : 31,
        "endLineNumber" : 171,
        "endColumnNumber" : 103
      },
      "nodeContext" : "componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.DELETED)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 210,
        "startLineNumber" : 171,
        "startColumnNumber" : 27,
        "endLineNumber" : 173,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.DELETED)) {\n  apiUsageStateService.onTenantDelete((TenantId)componentLifecycleMsg.getEntityId());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 415,
        "startLineNumber" : 169,
        "startColumnNumber" : 20,
        "endLineNumber" : 173,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n  apiUsageStateService.onTenantUpdate(componentLifecycleMsg.getTenantId());\n}\n else if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.DELETED)) {\n  apiUsageStateService.onTenantDelete((TenantId)componentLifecycleMsg.getEntityId());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 37,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 538,
        "startLineNumber" : 167,
        "startColumnNumber" : 106,
        "endLineNumber" : 174,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  tenantProfileCache.evict(componentLifecycleMsg.getTenantId());\n  if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n    apiUsageStateService.onTenantUpdate(componentLifecycleMsg.getTenantId());\n  }\n else   if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.DELETED)) {\n    apiUsageStateService.onTenantDelete((TenantId)componentLifecycleMsg.getEntityId());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1694,
        "startLineNumber" : 167,
        "startColumnNumber" : 23,
        "endLineNumber" : 184,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (EntityType.TENANT.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  tenantProfileCache.evict(componentLifecycleMsg.getTenantId());\n  if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n    apiUsageStateService.onTenantUpdate(componentLifecycleMsg.getTenantId());\n  }\n else   if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.DELETED)) {\n    apiUsageStateService.onTenantDelete((TenantId)componentLifecycleMsg.getEntityId());\n  }\n}\n else if (EntityType.DEVICE_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceProfileId(componentLifecycleMsg.getEntityId().getId()));\n}\n else if (EntityType.DEVICE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceId(componentLifecycleMsg.getEntityId().getId()));\n}\n else if (EntityType.API_USAGE_STATE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  apiUsageStateService.onApiUsageStateUpdate(componentLifecycleMsg.getTenantId());\n}\n else if (EntityType.CUSTOMER.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  if (componentLifecycleMsg.getEvent() == ComponentLifecycleEvent.DELETED) {\n    apiUsageStateService.onCustomerDelete((CustomerId)componentLifecycleMsg.getEntityId());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 160,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2200,
        "startLineNumber" : 161,
        "startColumnNumber" : 16,
        "endLineNumber" : 184,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (EntityType.TENANT_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  TenantProfileId tenantProfileId=new TenantProfileId(componentLifecycleMsg.getEntityId().getId());\n  tenantProfileCache.evict(tenantProfileId);\n  if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n    apiUsageStateService.onTenantProfileUpdate(tenantProfileId);\n  }\n}\n else if (EntityType.TENANT.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  tenantProfileCache.evict(componentLifecycleMsg.getTenantId());\n  if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n    apiUsageStateService.onTenantUpdate(componentLifecycleMsg.getTenantId());\n  }\n else   if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.DELETED)) {\n    apiUsageStateService.onTenantDelete((TenantId)componentLifecycleMsg.getEntityId());\n  }\n}\n else if (EntityType.DEVICE_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceProfileId(componentLifecycleMsg.getEntityId().getId()));\n}\n else if (EntityType.DEVICE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceId(componentLifecycleMsg.getEntityId().getId()));\n}\n else if (EntityType.API_USAGE_STATE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  apiUsageStateService.onApiUsageStateUpdate(componentLifecycleMsg.getTenantId());\n}\n else if (EntityType.CUSTOMER.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  if (componentLifecycleMsg.getEvent() == ComponentLifecycleEvent.DELETED) {\n    apiUsageStateService.onCustomerDelete((CustomerId)componentLifecycleMsg.getEntityId());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 205,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2584,
        "startLineNumber" : 157,
        "startColumnNumber" : 59,
        "endLineNumber" : 185,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  ComponentLifecycleMsg componentLifecycleMsg=(ComponentLifecycleMsg)actorMsg;\n  log.info(\"[{}][{}][{}] Received Lifecycle event: {}\",componentLifecycleMsg.getTenantId(),componentLifecycleMsg.getEntityId().getEntityType(),componentLifecycleMsg.getEntityId(),componentLifecycleMsg.getEvent());\n  if (EntityType.TENANT_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    TenantProfileId tenantProfileId=new TenantProfileId(componentLifecycleMsg.getEntityId().getId());\n    tenantProfileCache.evict(tenantProfileId);\n    if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n      apiUsageStateService.onTenantProfileUpdate(tenantProfileId);\n    }\n  }\n else   if (EntityType.TENANT.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    tenantProfileCache.evict(componentLifecycleMsg.getTenantId());\n    if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n      apiUsageStateService.onTenantUpdate(componentLifecycleMsg.getTenantId());\n    }\n else     if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.DELETED)) {\n      apiUsageStateService.onTenantDelete((TenantId)componentLifecycleMsg.getEntityId());\n    }\n  }\n else   if (EntityType.DEVICE_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceProfileId(componentLifecycleMsg.getEntityId().getId()));\n  }\n else   if (EntityType.DEVICE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceId(componentLifecycleMsg.getEntityId().getId()));\n  }\n else   if (EntityType.API_USAGE_STATE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    apiUsageStateService.onApiUsageStateUpdate(componentLifecycleMsg.getTenantId());\n  }\n else   if (EntityType.CUSTOMER.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    if (componentLifecycleMsg.getEvent() == ComponentLifecycleEvent.DELETED) {\n      apiUsageStateService.onCustomerDelete((CustomerId)componentLifecycleMsg.getEntityId());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2631,
        "startLineNumber" : 157,
        "startColumnNumber" : 12,
        "endLineNumber" : 185,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (actorMsg instanceof ComponentLifecycleMsg) {\n  ComponentLifecycleMsg componentLifecycleMsg=(ComponentLifecycleMsg)actorMsg;\n  log.info(\"[{}][{}][{}] Received Lifecycle event: {}\",componentLifecycleMsg.getTenantId(),componentLifecycleMsg.getEntityId().getEntityType(),componentLifecycleMsg.getEntityId(),componentLifecycleMsg.getEvent());\n  if (EntityType.TENANT_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    TenantProfileId tenantProfileId=new TenantProfileId(componentLifecycleMsg.getEntityId().getId());\n    tenantProfileCache.evict(tenantProfileId);\n    if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n      apiUsageStateService.onTenantProfileUpdate(tenantProfileId);\n    }\n  }\n else   if (EntityType.TENANT.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    tenantProfileCache.evict(componentLifecycleMsg.getTenantId());\n    if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n      apiUsageStateService.onTenantUpdate(componentLifecycleMsg.getTenantId());\n    }\n else     if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.DELETED)) {\n      apiUsageStateService.onTenantDelete((TenantId)componentLifecycleMsg.getEntityId());\n    }\n  }\n else   if (EntityType.DEVICE_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceProfileId(componentLifecycleMsg.getEntityId().getId()));\n  }\n else   if (EntityType.DEVICE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceId(componentLifecycleMsg.getEntityId().getId()));\n  }\n else   if (EntityType.API_USAGE_STATE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    apiUsageStateService.onApiUsageStateUpdate(componentLifecycleMsg.getTenantId());\n  }\n else   if (EntityType.CUSTOMER.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    if (componentLifecycleMsg.getEvent() == ComponentLifecycleEvent.DELETED) {\n      apiUsageStateService.onCustomerDelete((CustomerId)componentLifecycleMsg.getEntityId());\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 239,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2845,
        "startLineNumber" : 155,
        "startColumnNumber" : 37,
        "endLineNumber" : 188,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  TbActorMsg actorMsg=actorMsgOpt.get();\n  if (actorMsg instanceof ComponentLifecycleMsg) {\n    ComponentLifecycleMsg componentLifecycleMsg=(ComponentLifecycleMsg)actorMsg;\n    log.info(\"[{}][{}][{}] Received Lifecycle event: {}\",componentLifecycleMsg.getTenantId(),componentLifecycleMsg.getEntityId().getEntityType(),componentLifecycleMsg.getEntityId(),componentLifecycleMsg.getEvent());\n    if (EntityType.TENANT_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      TenantProfileId tenantProfileId=new TenantProfileId(componentLifecycleMsg.getEntityId().getId());\n      tenantProfileCache.evict(tenantProfileId);\n      if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n        apiUsageStateService.onTenantProfileUpdate(tenantProfileId);\n      }\n    }\n else     if (EntityType.TENANT.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      tenantProfileCache.evict(componentLifecycleMsg.getTenantId());\n      if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n        apiUsageStateService.onTenantUpdate(componentLifecycleMsg.getTenantId());\n      }\n else       if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.DELETED)) {\n        apiUsageStateService.onTenantDelete((TenantId)componentLifecycleMsg.getEntityId());\n      }\n    }\n else     if (EntityType.DEVICE_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceProfileId(componentLifecycleMsg.getEntityId().getId()));\n    }\n else     if (EntityType.DEVICE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceId(componentLifecycleMsg.getEntityId().getId()));\n    }\n else     if (EntityType.API_USAGE_STATE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      apiUsageStateService.onApiUsageStateUpdate(componentLifecycleMsg.getTenantId());\n    }\n else     if (EntityType.CUSTOMER.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      if (componentLifecycleMsg.getEvent() == ComponentLifecycleEvent.DELETED) {\n        apiUsageStateService.onCustomerDelete((CustomerId)componentLifecycleMsg.getEntityId());\n      }\n    }\n  }\n  log.trace(\"[{}] Forwarding message to App Actor {}\",id,actorMsg);\n  actorContext.tellWithHighPriority(actorMsg);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 260,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2874,
        "startLineNumber" : 155,
        "startColumnNumber" : 8,
        "endLineNumber" : 188,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (actorMsgOpt.isPresent()) {\n  TbActorMsg actorMsg=actorMsgOpt.get();\n  if (actorMsg instanceof ComponentLifecycleMsg) {\n    ComponentLifecycleMsg componentLifecycleMsg=(ComponentLifecycleMsg)actorMsg;\n    log.info(\"[{}][{}][{}] Received Lifecycle event: {}\",componentLifecycleMsg.getTenantId(),componentLifecycleMsg.getEntityId().getEntityType(),componentLifecycleMsg.getEntityId(),componentLifecycleMsg.getEvent());\n    if (EntityType.TENANT_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      TenantProfileId tenantProfileId=new TenantProfileId(componentLifecycleMsg.getEntityId().getId());\n      tenantProfileCache.evict(tenantProfileId);\n      if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n        apiUsageStateService.onTenantProfileUpdate(tenantProfileId);\n      }\n    }\n else     if (EntityType.TENANT.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      tenantProfileCache.evict(componentLifecycleMsg.getTenantId());\n      if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n        apiUsageStateService.onTenantUpdate(componentLifecycleMsg.getTenantId());\n      }\n else       if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.DELETED)) {\n        apiUsageStateService.onTenantDelete((TenantId)componentLifecycleMsg.getEntityId());\n      }\n    }\n else     if (EntityType.DEVICE_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceProfileId(componentLifecycleMsg.getEntityId().getId()));\n    }\n else     if (EntityType.DEVICE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceId(componentLifecycleMsg.getEntityId().getId()));\n    }\n else     if (EntityType.API_USAGE_STATE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      apiUsageStateService.onApiUsageStateUpdate(componentLifecycleMsg.getTenantId());\n    }\n else     if (EntityType.CUSTOMER.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      if (componentLifecycleMsg.getEvent() == ComponentLifecycleEvent.DELETED) {\n        apiUsageStateService.onCustomerDelete((CustomerId)componentLifecycleMsg.getEntityId());\n      }\n    }\n  }\n  log.trace(\"[{}] Forwarding message to App Actor {}\",id,actorMsg);\n  actorContext.tellWithHighPriority(actorMsg);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 264,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2978,
        "startLineNumber" : 153,
        "startColumnNumber" : 74,
        "endLineNumber" : 189,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Optional<TbActorMsg> actorMsgOpt=encodingService.decode(nfMsg.toByteArray());\n  if (actorMsgOpt.isPresent()) {\n    TbActorMsg actorMsg=actorMsgOpt.get();\n    if (actorMsg instanceof ComponentLifecycleMsg) {\n      ComponentLifecycleMsg componentLifecycleMsg=(ComponentLifecycleMsg)actorMsg;\n      log.info(\"[{}][{}][{}] Received Lifecycle event: {}\",componentLifecycleMsg.getTenantId(),componentLifecycleMsg.getEntityId().getEntityType(),componentLifecycleMsg.getEntityId(),componentLifecycleMsg.getEvent());\n      if (EntityType.TENANT_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        TenantProfileId tenantProfileId=new TenantProfileId(componentLifecycleMsg.getEntityId().getId());\n        tenantProfileCache.evict(tenantProfileId);\n        if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n          apiUsageStateService.onTenantProfileUpdate(tenantProfileId);\n        }\n      }\n else       if (EntityType.TENANT.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        tenantProfileCache.evict(componentLifecycleMsg.getTenantId());\n        if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n          apiUsageStateService.onTenantUpdate(componentLifecycleMsg.getTenantId());\n        }\n else         if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.DELETED)) {\n          apiUsageStateService.onTenantDelete((TenantId)componentLifecycleMsg.getEntityId());\n        }\n      }\n else       if (EntityType.DEVICE_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceProfileId(componentLifecycleMsg.getEntityId().getId()));\n      }\n else       if (EntityType.DEVICE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceId(componentLifecycleMsg.getEntityId().getId()));\n      }\n else       if (EntityType.API_USAGE_STATE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        apiUsageStateService.onApiUsageStateUpdate(componentLifecycleMsg.getTenantId());\n      }\n else       if (EntityType.CUSTOMER.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        if (componentLifecycleMsg.getEvent() == ComponentLifecycleEvent.DELETED) {\n          apiUsageStateService.onCustomerDelete((CustomerId)componentLifecycleMsg.getEntityId());\n        }\n      }\n    }\n    log.trace(\"[{}] Forwarding message to App Actor {}\",id,actorMsg);\n    actorContext.tellWithHighPriority(actorMsg);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 279,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3048,
        "startLineNumber" : 153,
        "startColumnNumber" : 4,
        "endLineNumber" : 189,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected void handleComponentLifecycleMsg(UUID id,ByteString nfMsg){\n  Optional<TbActorMsg> actorMsgOpt=encodingService.decode(nfMsg.toByteArray());\n  if (actorMsgOpt.isPresent()) {\n    TbActorMsg actorMsg=actorMsgOpt.get();\n    if (actorMsg instanceof ComponentLifecycleMsg) {\n      ComponentLifecycleMsg componentLifecycleMsg=(ComponentLifecycleMsg)actorMsg;\n      log.info(\"[{}][{}][{}] Received Lifecycle event: {}\",componentLifecycleMsg.getTenantId(),componentLifecycleMsg.getEntityId().getEntityType(),componentLifecycleMsg.getEntityId(),componentLifecycleMsg.getEvent());\n      if (EntityType.TENANT_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        TenantProfileId tenantProfileId=new TenantProfileId(componentLifecycleMsg.getEntityId().getId());\n        tenantProfileCache.evict(tenantProfileId);\n        if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n          apiUsageStateService.onTenantProfileUpdate(tenantProfileId);\n        }\n      }\n else       if (EntityType.TENANT.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        tenantProfileCache.evict(componentLifecycleMsg.getTenantId());\n        if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n          apiUsageStateService.onTenantUpdate(componentLifecycleMsg.getTenantId());\n        }\n else         if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.DELETED)) {\n          apiUsageStateService.onTenantDelete((TenantId)componentLifecycleMsg.getEntityId());\n        }\n      }\n else       if (EntityType.DEVICE_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceProfileId(componentLifecycleMsg.getEntityId().getId()));\n      }\n else       if (EntityType.DEVICE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceId(componentLifecycleMsg.getEntityId().getId()));\n      }\n else       if (EntityType.API_USAGE_STATE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        apiUsageStateService.onApiUsageStateUpdate(componentLifecycleMsg.getTenantId());\n      }\n else       if (EntityType.CUSTOMER.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        if (componentLifecycleMsg.getEvent() == ComponentLifecycleEvent.DELETED) {\n          apiUsageStateService.onCustomerDelete((CustomerId)componentLifecycleMsg.getEntityId());\n        }\n      }\n    }\n    log.trace(\"[{}] Forwarding message to App Actor {}\",id,actorMsg);\n    actorContext.tellWithHighPriority(actorMsg);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 291,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 171,
        "startColumnNumber" : 31,
        "endLineNumber" : 171,
        "endColumnNumber" : 103
      },
      "nodeContext" : "componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.DELETED)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.thingsboard.server.common.data.plugin.ComponentLifecycleEvent"
  }, {
    "nodeContext" : "ComponentLifecycleEvent",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 181,
      "startColumnNumber" : 60,
      "endLineNumber" : 181,
      "endColumnNumber" : 83
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 181,
        "startColumnNumber" : 60,
        "endLineNumber" : 181,
        "endColumnNumber" : 91
      },
      "nodeContext" : "ComponentLifecycleEvent.DELETED",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 181,
        "startColumnNumber" : 24,
        "endLineNumber" : 181,
        "endColumnNumber" : 91
      },
      "nodeContext" : "componentLifecycleMsg.getEvent() == ComponentLifecycleEvent.DELETED",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 209,
        "startLineNumber" : 181,
        "startColumnNumber" : 20,
        "endLineNumber" : 183,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (componentLifecycleMsg.getEvent() == ComponentLifecycleEvent.DELETED) {\n  apiUsageStateService.onCustomerDelete((CustomerId)componentLifecycleMsg.getEntityId());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 249,
        "startLineNumber" : 180,
        "startColumnNumber" : 108,
        "endLineNumber" : 184,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (componentLifecycleMsg.getEvent() == ComponentLifecycleEvent.DELETED) {\n    apiUsageStateService.onCustomerDelete((CustomerId)componentLifecycleMsg.getEntityId());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 20,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 334,
        "startLineNumber" : 180,
        "startColumnNumber" : 23,
        "endLineNumber" : 184,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (EntityType.CUSTOMER.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  if (componentLifecycleMsg.getEvent() == ComponentLifecycleEvent.DELETED) {\n    apiUsageStateService.onCustomerDelete((CustomerId)componentLifecycleMsg.getEntityId());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 31,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 552,
        "startLineNumber" : 178,
        "startColumnNumber" : 23,
        "endLineNumber" : 184,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (EntityType.API_USAGE_STATE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  apiUsageStateService.onApiUsageStateUpdate(componentLifecycleMsg.getTenantId());\n}\n else if (EntityType.CUSTOMER.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  if (componentLifecycleMsg.getEvent() == ComponentLifecycleEvent.DELETED) {\n    apiUsageStateService.onCustomerDelete((CustomerId)componentLifecycleMsg.getEntityId());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 50,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 802,
        "startLineNumber" : 176,
        "startColumnNumber" : 23,
        "endLineNumber" : 184,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (EntityType.DEVICE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceId(componentLifecycleMsg.getEntityId().getId()));\n}\n else if (EntityType.API_USAGE_STATE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  apiUsageStateService.onApiUsageStateUpdate(componentLifecycleMsg.getTenantId());\n}\n else if (EntityType.CUSTOMER.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  if (componentLifecycleMsg.getEvent() == ComponentLifecycleEvent.DELETED) {\n    apiUsageStateService.onCustomerDelete((CustomerId)componentLifecycleMsg.getEntityId());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 77,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1067,
        "startLineNumber" : 174,
        "startColumnNumber" : 23,
        "endLineNumber" : 184,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (EntityType.DEVICE_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceProfileId(componentLifecycleMsg.getEntityId().getId()));\n}\n else if (EntityType.DEVICE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceId(componentLifecycleMsg.getEntityId().getId()));\n}\n else if (EntityType.API_USAGE_STATE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  apiUsageStateService.onApiUsageStateUpdate(componentLifecycleMsg.getTenantId());\n}\n else if (EntityType.CUSTOMER.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  if (componentLifecycleMsg.getEvent() == ComponentLifecycleEvent.DELETED) {\n    apiUsageStateService.onCustomerDelete((CustomerId)componentLifecycleMsg.getEntityId());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 104,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1694,
        "startLineNumber" : 167,
        "startColumnNumber" : 23,
        "endLineNumber" : 184,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (EntityType.TENANT.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  tenantProfileCache.evict(componentLifecycleMsg.getTenantId());\n  if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n    apiUsageStateService.onTenantUpdate(componentLifecycleMsg.getTenantId());\n  }\n else   if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.DELETED)) {\n    apiUsageStateService.onTenantDelete((TenantId)componentLifecycleMsg.getEntityId());\n  }\n}\n else if (EntityType.DEVICE_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceProfileId(componentLifecycleMsg.getEntityId().getId()));\n}\n else if (EntityType.DEVICE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceId(componentLifecycleMsg.getEntityId().getId()));\n}\n else if (EntityType.API_USAGE_STATE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  apiUsageStateService.onApiUsageStateUpdate(componentLifecycleMsg.getTenantId());\n}\n else if (EntityType.CUSTOMER.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  if (componentLifecycleMsg.getEvent() == ComponentLifecycleEvent.DELETED) {\n    apiUsageStateService.onCustomerDelete((CustomerId)componentLifecycleMsg.getEntityId());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 160,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2200,
        "startLineNumber" : 161,
        "startColumnNumber" : 16,
        "endLineNumber" : 184,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (EntityType.TENANT_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  TenantProfileId tenantProfileId=new TenantProfileId(componentLifecycleMsg.getEntityId().getId());\n  tenantProfileCache.evict(tenantProfileId);\n  if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n    apiUsageStateService.onTenantProfileUpdate(tenantProfileId);\n  }\n}\n else if (EntityType.TENANT.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  tenantProfileCache.evict(componentLifecycleMsg.getTenantId());\n  if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n    apiUsageStateService.onTenantUpdate(componentLifecycleMsg.getTenantId());\n  }\n else   if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.DELETED)) {\n    apiUsageStateService.onTenantDelete((TenantId)componentLifecycleMsg.getEntityId());\n  }\n}\n else if (EntityType.DEVICE_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceProfileId(componentLifecycleMsg.getEntityId().getId()));\n}\n else if (EntityType.DEVICE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceId(componentLifecycleMsg.getEntityId().getId()));\n}\n else if (EntityType.API_USAGE_STATE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  apiUsageStateService.onApiUsageStateUpdate(componentLifecycleMsg.getTenantId());\n}\n else if (EntityType.CUSTOMER.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n  if (componentLifecycleMsg.getEvent() == ComponentLifecycleEvent.DELETED) {\n    apiUsageStateService.onCustomerDelete((CustomerId)componentLifecycleMsg.getEntityId());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 205,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2584,
        "startLineNumber" : 157,
        "startColumnNumber" : 59,
        "endLineNumber" : 185,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  ComponentLifecycleMsg componentLifecycleMsg=(ComponentLifecycleMsg)actorMsg;\n  log.info(\"[{}][{}][{}] Received Lifecycle event: {}\",componentLifecycleMsg.getTenantId(),componentLifecycleMsg.getEntityId().getEntityType(),componentLifecycleMsg.getEntityId(),componentLifecycleMsg.getEvent());\n  if (EntityType.TENANT_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    TenantProfileId tenantProfileId=new TenantProfileId(componentLifecycleMsg.getEntityId().getId());\n    tenantProfileCache.evict(tenantProfileId);\n    if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n      apiUsageStateService.onTenantProfileUpdate(tenantProfileId);\n    }\n  }\n else   if (EntityType.TENANT.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    tenantProfileCache.evict(componentLifecycleMsg.getTenantId());\n    if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n      apiUsageStateService.onTenantUpdate(componentLifecycleMsg.getTenantId());\n    }\n else     if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.DELETED)) {\n      apiUsageStateService.onTenantDelete((TenantId)componentLifecycleMsg.getEntityId());\n    }\n  }\n else   if (EntityType.DEVICE_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceProfileId(componentLifecycleMsg.getEntityId().getId()));\n  }\n else   if (EntityType.DEVICE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceId(componentLifecycleMsg.getEntityId().getId()));\n  }\n else   if (EntityType.API_USAGE_STATE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    apiUsageStateService.onApiUsageStateUpdate(componentLifecycleMsg.getTenantId());\n  }\n else   if (EntityType.CUSTOMER.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    if (componentLifecycleMsg.getEvent() == ComponentLifecycleEvent.DELETED) {\n      apiUsageStateService.onCustomerDelete((CustomerId)componentLifecycleMsg.getEntityId());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 234,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2631,
        "startLineNumber" : 157,
        "startColumnNumber" : 12,
        "endLineNumber" : 185,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (actorMsg instanceof ComponentLifecycleMsg) {\n  ComponentLifecycleMsg componentLifecycleMsg=(ComponentLifecycleMsg)actorMsg;\n  log.info(\"[{}][{}][{}] Received Lifecycle event: {}\",componentLifecycleMsg.getTenantId(),componentLifecycleMsg.getEntityId().getEntityType(),componentLifecycleMsg.getEntityId(),componentLifecycleMsg.getEvent());\n  if (EntityType.TENANT_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    TenantProfileId tenantProfileId=new TenantProfileId(componentLifecycleMsg.getEntityId().getId());\n    tenantProfileCache.evict(tenantProfileId);\n    if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n      apiUsageStateService.onTenantProfileUpdate(tenantProfileId);\n    }\n  }\n else   if (EntityType.TENANT.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    tenantProfileCache.evict(componentLifecycleMsg.getTenantId());\n    if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n      apiUsageStateService.onTenantUpdate(componentLifecycleMsg.getTenantId());\n    }\n else     if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.DELETED)) {\n      apiUsageStateService.onTenantDelete((TenantId)componentLifecycleMsg.getEntityId());\n    }\n  }\n else   if (EntityType.DEVICE_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceProfileId(componentLifecycleMsg.getEntityId().getId()));\n  }\n else   if (EntityType.DEVICE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceId(componentLifecycleMsg.getEntityId().getId()));\n  }\n else   if (EntityType.API_USAGE_STATE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    apiUsageStateService.onApiUsageStateUpdate(componentLifecycleMsg.getTenantId());\n  }\n else   if (EntityType.CUSTOMER.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n    if (componentLifecycleMsg.getEvent() == ComponentLifecycleEvent.DELETED) {\n      apiUsageStateService.onCustomerDelete((CustomerId)componentLifecycleMsg.getEntityId());\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 239,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2845,
        "startLineNumber" : 155,
        "startColumnNumber" : 37,
        "endLineNumber" : 188,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  TbActorMsg actorMsg=actorMsgOpt.get();\n  if (actorMsg instanceof ComponentLifecycleMsg) {\n    ComponentLifecycleMsg componentLifecycleMsg=(ComponentLifecycleMsg)actorMsg;\n    log.info(\"[{}][{}][{}] Received Lifecycle event: {}\",componentLifecycleMsg.getTenantId(),componentLifecycleMsg.getEntityId().getEntityType(),componentLifecycleMsg.getEntityId(),componentLifecycleMsg.getEvent());\n    if (EntityType.TENANT_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      TenantProfileId tenantProfileId=new TenantProfileId(componentLifecycleMsg.getEntityId().getId());\n      tenantProfileCache.evict(tenantProfileId);\n      if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n        apiUsageStateService.onTenantProfileUpdate(tenantProfileId);\n      }\n    }\n else     if (EntityType.TENANT.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      tenantProfileCache.evict(componentLifecycleMsg.getTenantId());\n      if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n        apiUsageStateService.onTenantUpdate(componentLifecycleMsg.getTenantId());\n      }\n else       if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.DELETED)) {\n        apiUsageStateService.onTenantDelete((TenantId)componentLifecycleMsg.getEntityId());\n      }\n    }\n else     if (EntityType.DEVICE_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceProfileId(componentLifecycleMsg.getEntityId().getId()));\n    }\n else     if (EntityType.DEVICE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceId(componentLifecycleMsg.getEntityId().getId()));\n    }\n else     if (EntityType.API_USAGE_STATE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      apiUsageStateService.onApiUsageStateUpdate(componentLifecycleMsg.getTenantId());\n    }\n else     if (EntityType.CUSTOMER.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      if (componentLifecycleMsg.getEvent() == ComponentLifecycleEvent.DELETED) {\n        apiUsageStateService.onCustomerDelete((CustomerId)componentLifecycleMsg.getEntityId());\n      }\n    }\n  }\n  log.trace(\"[{}] Forwarding message to App Actor {}\",id,actorMsg);\n  actorContext.tellWithHighPriority(actorMsg);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 260,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2874,
        "startLineNumber" : 155,
        "startColumnNumber" : 8,
        "endLineNumber" : 188,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (actorMsgOpt.isPresent()) {\n  TbActorMsg actorMsg=actorMsgOpt.get();\n  if (actorMsg instanceof ComponentLifecycleMsg) {\n    ComponentLifecycleMsg componentLifecycleMsg=(ComponentLifecycleMsg)actorMsg;\n    log.info(\"[{}][{}][{}] Received Lifecycle event: {}\",componentLifecycleMsg.getTenantId(),componentLifecycleMsg.getEntityId().getEntityType(),componentLifecycleMsg.getEntityId(),componentLifecycleMsg.getEvent());\n    if (EntityType.TENANT_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      TenantProfileId tenantProfileId=new TenantProfileId(componentLifecycleMsg.getEntityId().getId());\n      tenantProfileCache.evict(tenantProfileId);\n      if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n        apiUsageStateService.onTenantProfileUpdate(tenantProfileId);\n      }\n    }\n else     if (EntityType.TENANT.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      tenantProfileCache.evict(componentLifecycleMsg.getTenantId());\n      if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n        apiUsageStateService.onTenantUpdate(componentLifecycleMsg.getTenantId());\n      }\n else       if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.DELETED)) {\n        apiUsageStateService.onTenantDelete((TenantId)componentLifecycleMsg.getEntityId());\n      }\n    }\n else     if (EntityType.DEVICE_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceProfileId(componentLifecycleMsg.getEntityId().getId()));\n    }\n else     if (EntityType.DEVICE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceId(componentLifecycleMsg.getEntityId().getId()));\n    }\n else     if (EntityType.API_USAGE_STATE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      apiUsageStateService.onApiUsageStateUpdate(componentLifecycleMsg.getTenantId());\n    }\n else     if (EntityType.CUSTOMER.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n      if (componentLifecycleMsg.getEvent() == ComponentLifecycleEvent.DELETED) {\n        apiUsageStateService.onCustomerDelete((CustomerId)componentLifecycleMsg.getEntityId());\n      }\n    }\n  }\n  log.trace(\"[{}] Forwarding message to App Actor {}\",id,actorMsg);\n  actorContext.tellWithHighPriority(actorMsg);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 264,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2978,
        "startLineNumber" : 153,
        "startColumnNumber" : 74,
        "endLineNumber" : 189,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Optional<TbActorMsg> actorMsgOpt=encodingService.decode(nfMsg.toByteArray());\n  if (actorMsgOpt.isPresent()) {\n    TbActorMsg actorMsg=actorMsgOpt.get();\n    if (actorMsg instanceof ComponentLifecycleMsg) {\n      ComponentLifecycleMsg componentLifecycleMsg=(ComponentLifecycleMsg)actorMsg;\n      log.info(\"[{}][{}][{}] Received Lifecycle event: {}\",componentLifecycleMsg.getTenantId(),componentLifecycleMsg.getEntityId().getEntityType(),componentLifecycleMsg.getEntityId(),componentLifecycleMsg.getEvent());\n      if (EntityType.TENANT_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        TenantProfileId tenantProfileId=new TenantProfileId(componentLifecycleMsg.getEntityId().getId());\n        tenantProfileCache.evict(tenantProfileId);\n        if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n          apiUsageStateService.onTenantProfileUpdate(tenantProfileId);\n        }\n      }\n else       if (EntityType.TENANT.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        tenantProfileCache.evict(componentLifecycleMsg.getTenantId());\n        if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n          apiUsageStateService.onTenantUpdate(componentLifecycleMsg.getTenantId());\n        }\n else         if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.DELETED)) {\n          apiUsageStateService.onTenantDelete((TenantId)componentLifecycleMsg.getEntityId());\n        }\n      }\n else       if (EntityType.DEVICE_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceProfileId(componentLifecycleMsg.getEntityId().getId()));\n      }\n else       if (EntityType.DEVICE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceId(componentLifecycleMsg.getEntityId().getId()));\n      }\n else       if (EntityType.API_USAGE_STATE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        apiUsageStateService.onApiUsageStateUpdate(componentLifecycleMsg.getTenantId());\n      }\n else       if (EntityType.CUSTOMER.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        if (componentLifecycleMsg.getEvent() == ComponentLifecycleEvent.DELETED) {\n          apiUsageStateService.onCustomerDelete((CustomerId)componentLifecycleMsg.getEntityId());\n        }\n      }\n    }\n    log.trace(\"[{}] Forwarding message to App Actor {}\",id,actorMsg);\n    actorContext.tellWithHighPriority(actorMsg);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 279,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3048,
        "startLineNumber" : 153,
        "startColumnNumber" : 4,
        "endLineNumber" : 189,
        "endColumnNumber" : 5
      },
      "nodeContext" : "protected void handleComponentLifecycleMsg(UUID id,ByteString nfMsg){\n  Optional<TbActorMsg> actorMsgOpt=encodingService.decode(nfMsg.toByteArray());\n  if (actorMsgOpt.isPresent()) {\n    TbActorMsg actorMsg=actorMsgOpt.get();\n    if (actorMsg instanceof ComponentLifecycleMsg) {\n      ComponentLifecycleMsg componentLifecycleMsg=(ComponentLifecycleMsg)actorMsg;\n      log.info(\"[{}][{}][{}] Received Lifecycle event: {}\",componentLifecycleMsg.getTenantId(),componentLifecycleMsg.getEntityId().getEntityType(),componentLifecycleMsg.getEntityId(),componentLifecycleMsg.getEvent());\n      if (EntityType.TENANT_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        TenantProfileId tenantProfileId=new TenantProfileId(componentLifecycleMsg.getEntityId().getId());\n        tenantProfileCache.evict(tenantProfileId);\n        if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n          apiUsageStateService.onTenantProfileUpdate(tenantProfileId);\n        }\n      }\n else       if (EntityType.TENANT.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        tenantProfileCache.evict(componentLifecycleMsg.getTenantId());\n        if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.UPDATED)) {\n          apiUsageStateService.onTenantUpdate(componentLifecycleMsg.getTenantId());\n        }\n else         if (componentLifecycleMsg.getEvent().equals(ComponentLifecycleEvent.DELETED)) {\n          apiUsageStateService.onTenantDelete((TenantId)componentLifecycleMsg.getEntityId());\n        }\n      }\n else       if (EntityType.DEVICE_PROFILE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceProfileId(componentLifecycleMsg.getEntityId().getId()));\n      }\n else       if (EntityType.DEVICE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        deviceProfileCache.evict(componentLifecycleMsg.getTenantId(),new DeviceId(componentLifecycleMsg.getEntityId().getId()));\n      }\n else       if (EntityType.API_USAGE_STATE.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        apiUsageStateService.onApiUsageStateUpdate(componentLifecycleMsg.getTenantId());\n      }\n else       if (EntityType.CUSTOMER.equals(componentLifecycleMsg.getEntityId().getEntityType())) {\n        if (componentLifecycleMsg.getEvent() == ComponentLifecycleEvent.DELETED) {\n          apiUsageStateService.onCustomerDelete((CustomerId)componentLifecycleMsg.getEntityId());\n        }\n      }\n    }\n    log.trace(\"[{}] Forwarding message to App Actor {}\",id,actorMsg);\n    actorContext.tellWithHighPriority(actorMsg);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 291,
      "astHeight" : 20
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 67,
        "startLineNumber" : 181,
        "startColumnNumber" : 24,
        "endLineNumber" : 181,
        "endColumnNumber" : 91
      },
      "nodeContext" : "componentLifecycleMsg.getEvent() == ComponentLifecycleEvent.DELETED",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.thingsboard.server.common.data.plugin.ComponentLifecycleEvent"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 164,
    "startColumnNumber" : 64,
    "endLineNumber" : 164,
    "endColumnNumber" : 87
  }, {
    "charLength" : 23,
    "startLineNumber" : 169,
    "startColumnNumber" : 64,
    "endLineNumber" : 169,
    "endColumnNumber" : 87
  }, {
    "charLength" : 23,
    "startLineNumber" : 171,
    "startColumnNumber" : 71,
    "endLineNumber" : 171,
    "endColumnNumber" : 94
  }, {
    "charLength" : 23,
    "startLineNumber" : 181,
    "startColumnNumber" : 60,
    "endLineNumber" : 181,
    "endColumnNumber" : 83
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 9
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 8
  } ]
}