{
  "id" : 116,
  "expression" : "rlt",
  "projectName" : "baomidou@mybatis-plus",
  "commitID" : "7815611a659da4cc8d5443f5ef4c10ca0d937582",
  "filePath" : "/mybatis-plus-core/src/test/java/com/baomidou/mybatisplus/test/mysql/UserMapperTest.java",
  "occurrences" : 15,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "rlt",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 104,
      "startColumnNumber" : 69,
      "endLineNumber" : 104,
      "endColumnNumber" : 72
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 104,
        "startColumnNumber" : 27,
        "endLineNumber" : 104,
        "endColumnNumber" : 72
      },
      "nodeContext" : "\"--------- @TableField el() --------- \" + rlt",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 104,
        "startColumnNumber" : 8,
        "endLineNumber" : 104,
        "endColumnNumber" : 73
      },
      "nodeContext" : "System.err.println(\"--------- @TableField el() --------- \" + rlt)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 104,
        "startColumnNumber" : 8,
        "endLineNumber" : 104,
        "endColumnNumber" : 74
      },
      "nodeContext" : "System.err.println(\"--------- @TableField el() --------- \" + rlt);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 8101,
        "startLineNumber" : 76,
        "startColumnNumber" : 27,
        "endLineNumber" : 309,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SqlSession session=this.sqlSessionFactory().openSession();\n  UserMapper userMapper=session.getMapper(UserMapper.class);\n  System.err.println(\" debug run 查询执行 user 表数据变化！ \");\n  userMapper.deleteAll();\n  Role role=new Role();\n  role.setId(IdWorker.getId());\n  role.setName(\"admin\");\n  User userA=new User();\n  userA.setId(IdWorker.getId());\n  userA.setName(\"junyu_shi\");\n  userA.setAge(1);\n  userA.setDesc(\"测试一把\");\n  userA.setTestType(1);\n  userA.setRole(role);\n  int rlt=userMapper.insert(userA);\n  User whereUser=userMapper.selectOne(userA);\n  print(whereUser);\n  userA.setAge(18);\n  userMapper.updateById(userA);\n  userMapper.delete(new EntityWrapper<>(userA));\n  System.err.println(\"--------- @TableField el() --------- \" + rlt);\n  rlt=userMapper.insertInjector(new User(1L,\"1\",1,1));\n  System.err.println(\"--------- insertInjector --------- \" + rlt);\n  User cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  long id=IdWorker.getId();\n  rlt=userMapper.insert(new User(id,\"abc\",18,1));\n  System.err.println(\"\\n--------------insert-------\" + rlt);\n  sleep();\n  rlt=userMapper.insert(new User(18));\n  System.err.println(\"\\n----------测试 name 字段忽略验证----insert-------\" + rlt);\n  sleep();\n  List<User> ul=new ArrayList<>();\n  ul.add(new User(11L,\"1\",1,0));\n  ul.add(new User(12L,\"2\",2,1));\n  ul.add(new User(13L,\"3\",3,1));\n  ul.add(new User(14L,\"delname\",4,0));\n  ul.add(new User(15L,\"5\",5,1));\n  ul.add(new User(16L,\"6\",6,0));\n  ul.add(new User(17L,7));\n  ul.add(new User(18L,8));\n  ul.add(new User(19L,9));\n  ul.add(new User(7));\n  ul.add(new User(20L,\"deleteByMap\",7,0));\n  ul.add(new User(\"8\",8,1));\n  ul.add(new User(\"9\",9,1));\n  for (  User u : ul) {\n    rlt=userMapper.insert(u);\n  }\n  System.err.println(\"\\n--------------insertBatch----------------\" + rlt + \"\\n\\n\");\n  System.err.println(\"\\n 自定义填充 testType=3 填充成功！\" + userMapper.selectById(18L).toString());\n  session.commit();\n  rlt=userMapper.deleteById(id);\n  System.err.println(\"---------deleteById------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  Map<String,Object> columnMap=new HashMap<>();\n  columnMap.put(\"name\",\"deleteByMap\");\n  columnMap.put(\"age\",null);\n  rlt=userMapper.deleteByMap(columnMap);\n  System.err.println(\"---------deleteByMap------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<Long> il=new ArrayList<>();\n  il.add(16L);\n  il.add(17L);\n  rlt=userMapper.deleteBatchIds(il);\n  System.err.println(\"---------deleteBatchIds------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  rlt=userMapper.delete(new EntityWrapper<>(new User(14L,\"delname\")));\n  System.err.println(\"--------------delete------------------ result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"MybatisPlus\"));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"update all column\",12,12));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.update(new User(\"55\",55,5),new EntityWrapper<>(new User(15L,\"5\")));\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  EntityWrapper<User> ew1=new EntityWrapper<>();\n  ew1.addFilter(\"test_id={0} AND name={1}\",15L,\"55\");\n  rlt=userMapper.update(new User(\"00\"),ew1);\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<User> userList=new ArrayList<>();\n  userList.add(new User(11L,\"updateBatchById-1\",1,1));\n  userList.add(new User(12L,\"updateBatchById-2\",2,1));\n  userList.add(new User(13L,\"updateBatchById-3\",3,1));\n  for (  User u : userList) {\n    rlt=userMapper.updateById(u);\n  }\n  System.err.println(\"------------------updateBatchById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  System.err.println(\"\\n------------------selectById----------------------\");\n  User user=userMapper.selectById(12L);\n  print(user);\n  System.err.println(\"\\n------------------selectBatchIds----------------------\");\n  List<Long> idList=new ArrayList<>();\n  idList.add(11L);\n  idList.add(12L);\n  List<User> ul0=userMapper.selectBatchIds(idList);\n  for (  User anUl0 : ul0) {\n    print(anUl0);\n  }\n  System.err.println(\"\\n------------------selectByMap-----满足 map 条件的数据----\");\n  Map<String,Object> cm=new HashMap<>();\n  cm.put(\"test_type\",1);\n  cm.put(\"1\",1);\n  List<User> ul1=userMapper.selectByMap(cm);\n  for (  User anUl1 : ul1) {\n    print(anUl1);\n  }\n  System.err.println(\"\\n------------------selectOne----------------------\");\n  User userOne=userMapper.selectOne(new User(\"abc\"));\n  print(userOne);\n  System.err.println(\"\\n------------------selectCount----------------------\");\n  System.err.println(\"查询 type=1 总记录数：\" + userMapper.selectCount(new EntityWrapper<>(new User(1))));\n  System.err.println(\"总记录数：\" + userMapper.selectCount(null));\n  System.err.println(\"\\n------------------selectList-----所有数据----id--DESC--排序----\");\n  List<User> ul2=userMapper.selectList(new EntityWrapper<User>(null,\"age,name\"));\n  for (  User anUl2 : ul2) {\n    print(anUl2);\n  }\n  System.err.println(\"\\n------------------list 分页查询 ----查询 testType = 1 的所有数据--id--DESC--排序--------\");\n  Page<User> page=new Page<>(1,2);\n  EntityWrapper<User> ew=new EntityWrapper<>(new User(1));\n  ew.setSqlSelect(\"age,name\");\n  ew.where(\"name like {0}\",\"'%dateBatch%'\").and(\"age={0}\",3).orderBy(\"age,name\",true);\n  List<User> paginList=userMapper.selectPage(page,ew);\n  page.setRecords(paginList);\n  for (int i=0; i < page.getRecords().size(); i++) {\n    print(page.getRecords().get(i));\n  }\n  System.err.println(\" 翻页：\" + page.toString());\n  System.err.println(\"\\n---------------xml---selectListRow 分页查询，不查询总数（此时可自定义 count 查询）----无查询条件--------------\");\n  List<User> rowList=userMapper.selectListRow(new Pagination(0,2,false));\n  for (  User aRowList : rowList) {\n    print(aRowList);\n  }\n  System.err.println(\" selectList EntityWrapper == null \\n\");\n  paginList=userMapper.selectList(null);\n  for (  User aPaginList : paginList) {\n    print(aPaginList);\n  }\n  rlt=userMapper.deleteAll();\n  System.err.println(\"清空测试数据！ rlt=\" + rlt);\n  session.commit();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1190,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 8394,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 309,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * RUN 测试 <p> <p> MybatisPlus 加载 SQL 顺序： </p> 1、加载XML中的SQL<br> 2、加载sqlProvider中的SQL<br> 3、xmlSql 与 sqlProvider不能包含相同的SQL<br> <br> 调整后的SQL优先级：xmlSql > sqlProvider > crudSql <br>\n */\n@Test public void crudTest(){\n  SqlSession session=this.sqlSessionFactory().openSession();\n  UserMapper userMapper=session.getMapper(UserMapper.class);\n  System.err.println(\" debug run 查询执行 user 表数据变化！ \");\n  userMapper.deleteAll();\n  Role role=new Role();\n  role.setId(IdWorker.getId());\n  role.setName(\"admin\");\n  User userA=new User();\n  userA.setId(IdWorker.getId());\n  userA.setName(\"junyu_shi\");\n  userA.setAge(1);\n  userA.setDesc(\"测试一把\");\n  userA.setTestType(1);\n  userA.setRole(role);\n  int rlt=userMapper.insert(userA);\n  User whereUser=userMapper.selectOne(userA);\n  print(whereUser);\n  userA.setAge(18);\n  userMapper.updateById(userA);\n  userMapper.delete(new EntityWrapper<>(userA));\n  System.err.println(\"--------- @TableField el() --------- \" + rlt);\n  rlt=userMapper.insertInjector(new User(1L,\"1\",1,1));\n  System.err.println(\"--------- insertInjector --------- \" + rlt);\n  User cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  long id=IdWorker.getId();\n  rlt=userMapper.insert(new User(id,\"abc\",18,1));\n  System.err.println(\"\\n--------------insert-------\" + rlt);\n  sleep();\n  rlt=userMapper.insert(new User(18));\n  System.err.println(\"\\n----------测试 name 字段忽略验证----insert-------\" + rlt);\n  sleep();\n  List<User> ul=new ArrayList<>();\n  ul.add(new User(11L,\"1\",1,0));\n  ul.add(new User(12L,\"2\",2,1));\n  ul.add(new User(13L,\"3\",3,1));\n  ul.add(new User(14L,\"delname\",4,0));\n  ul.add(new User(15L,\"5\",5,1));\n  ul.add(new User(16L,\"6\",6,0));\n  ul.add(new User(17L,7));\n  ul.add(new User(18L,8));\n  ul.add(new User(19L,9));\n  ul.add(new User(7));\n  ul.add(new User(20L,\"deleteByMap\",7,0));\n  ul.add(new User(\"8\",8,1));\n  ul.add(new User(\"9\",9,1));\n  for (  User u : ul) {\n    rlt=userMapper.insert(u);\n  }\n  System.err.println(\"\\n--------------insertBatch----------------\" + rlt + \"\\n\\n\");\n  System.err.println(\"\\n 自定义填充 testType=3 填充成功！\" + userMapper.selectById(18L).toString());\n  session.commit();\n  rlt=userMapper.deleteById(id);\n  System.err.println(\"---------deleteById------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  Map<String,Object> columnMap=new HashMap<>();\n  columnMap.put(\"name\",\"deleteByMap\");\n  columnMap.put(\"age\",null);\n  rlt=userMapper.deleteByMap(columnMap);\n  System.err.println(\"---------deleteByMap------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<Long> il=new ArrayList<>();\n  il.add(16L);\n  il.add(17L);\n  rlt=userMapper.deleteBatchIds(il);\n  System.err.println(\"---------deleteBatchIds------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  rlt=userMapper.delete(new EntityWrapper<>(new User(14L,\"delname\")));\n  System.err.println(\"--------------delete------------------ result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"MybatisPlus\"));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"update all column\",12,12));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.update(new User(\"55\",55,5),new EntityWrapper<>(new User(15L,\"5\")));\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  EntityWrapper<User> ew1=new EntityWrapper<>();\n  ew1.addFilter(\"test_id={0} AND name={1}\",15L,\"55\");\n  rlt=userMapper.update(new User(\"00\"),ew1);\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<User> userList=new ArrayList<>();\n  userList.add(new User(11L,\"updateBatchById-1\",1,1));\n  userList.add(new User(12L,\"updateBatchById-2\",2,1));\n  userList.add(new User(13L,\"updateBatchById-3\",3,1));\n  for (  User u : userList) {\n    rlt=userMapper.updateById(u);\n  }\n  System.err.println(\"------------------updateBatchById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  System.err.println(\"\\n------------------selectById----------------------\");\n  User user=userMapper.selectById(12L);\n  print(user);\n  System.err.println(\"\\n------------------selectBatchIds----------------------\");\n  List<Long> idList=new ArrayList<>();\n  idList.add(11L);\n  idList.add(12L);\n  List<User> ul0=userMapper.selectBatchIds(idList);\n  for (  User anUl0 : ul0) {\n    print(anUl0);\n  }\n  System.err.println(\"\\n------------------selectByMap-----满足 map 条件的数据----\");\n  Map<String,Object> cm=new HashMap<>();\n  cm.put(\"test_type\",1);\n  cm.put(\"1\",1);\n  List<User> ul1=userMapper.selectByMap(cm);\n  for (  User anUl1 : ul1) {\n    print(anUl1);\n  }\n  System.err.println(\"\\n------------------selectOne----------------------\");\n  User userOne=userMapper.selectOne(new User(\"abc\"));\n  print(userOne);\n  System.err.println(\"\\n------------------selectCount----------------------\");\n  System.err.println(\"查询 type=1 总记录数：\" + userMapper.selectCount(new EntityWrapper<>(new User(1))));\n  System.err.println(\"总记录数：\" + userMapper.selectCount(null));\n  System.err.println(\"\\n------------------selectList-----所有数据----id--DESC--排序----\");\n  List<User> ul2=userMapper.selectList(new EntityWrapper<User>(null,\"age,name\"));\n  for (  User anUl2 : ul2) {\n    print(anUl2);\n  }\n  System.err.println(\"\\n------------------list 分页查询 ----查询 testType = 1 的所有数据--id--DESC--排序--------\");\n  Page<User> page=new Page<>(1,2);\n  EntityWrapper<User> ew=new EntityWrapper<>(new User(1));\n  ew.setSqlSelect(\"age,name\");\n  ew.where(\"name like {0}\",\"'%dateBatch%'\").and(\"age={0}\",3).orderBy(\"age,name\",true);\n  List<User> paginList=userMapper.selectPage(page,ew);\n  page.setRecords(paginList);\n  for (int i=0; i < page.getRecords().size(); i++) {\n    print(page.getRecords().get(i));\n  }\n  System.err.println(\" 翻页：\" + page.toString());\n  System.err.println(\"\\n---------------xml---selectListRow 分页查询，不查询总数（此时可自定义 count 查询）----无查询条件--------------\");\n  List<User> rowList=userMapper.selectListRow(new Pagination(0,2,false));\n  for (  User aRowList : rowList) {\n    print(aRowList);\n  }\n  System.err.println(\" selectList EntityWrapper == null \\n\");\n  paginList=userMapper.selectList(null);\n  for (  User aPaginList : paginList) {\n    print(aPaginList);\n  }\n  rlt=userMapper.deleteAll();\n  System.err.println(\"清空测试数据！ rlt=\" + rlt);\n  session.commit();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1197,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 104,
        "startColumnNumber" : 8,
        "endLineNumber" : 104,
        "endColumnNumber" : 74
      },
      "nodeContext" : "System.err.println(\"--------- @TableField el() --------- \" + rlt);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "rlt",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 110,
      "startColumnNumber" : 67,
      "endLineNumber" : 110,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 110,
        "startColumnNumber" : 27,
        "endLineNumber" : 110,
        "endColumnNumber" : 70
      },
      "nodeContext" : "\"--------- insertInjector --------- \" + rlt",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 110,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 71
      },
      "nodeContext" : "System.err.println(\"--------- insertInjector --------- \" + rlt)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 110,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 72
      },
      "nodeContext" : "System.err.println(\"--------- insertInjector --------- \" + rlt);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 8101,
        "startLineNumber" : 76,
        "startColumnNumber" : 27,
        "endLineNumber" : 309,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SqlSession session=this.sqlSessionFactory().openSession();\n  UserMapper userMapper=session.getMapper(UserMapper.class);\n  System.err.println(\" debug run 查询执行 user 表数据变化！ \");\n  userMapper.deleteAll();\n  Role role=new Role();\n  role.setId(IdWorker.getId());\n  role.setName(\"admin\");\n  User userA=new User();\n  userA.setId(IdWorker.getId());\n  userA.setName(\"junyu_shi\");\n  userA.setAge(1);\n  userA.setDesc(\"测试一把\");\n  userA.setTestType(1);\n  userA.setRole(role);\n  int rlt=userMapper.insert(userA);\n  User whereUser=userMapper.selectOne(userA);\n  print(whereUser);\n  userA.setAge(18);\n  userMapper.updateById(userA);\n  userMapper.delete(new EntityWrapper<>(userA));\n  System.err.println(\"--------- @TableField el() --------- \" + rlt);\n  rlt=userMapper.insertInjector(new User(1L,\"1\",1,1));\n  System.err.println(\"--------- insertInjector --------- \" + rlt);\n  User cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  long id=IdWorker.getId();\n  rlt=userMapper.insert(new User(id,\"abc\",18,1));\n  System.err.println(\"\\n--------------insert-------\" + rlt);\n  sleep();\n  rlt=userMapper.insert(new User(18));\n  System.err.println(\"\\n----------测试 name 字段忽略验证----insert-------\" + rlt);\n  sleep();\n  List<User> ul=new ArrayList<>();\n  ul.add(new User(11L,\"1\",1,0));\n  ul.add(new User(12L,\"2\",2,1));\n  ul.add(new User(13L,\"3\",3,1));\n  ul.add(new User(14L,\"delname\",4,0));\n  ul.add(new User(15L,\"5\",5,1));\n  ul.add(new User(16L,\"6\",6,0));\n  ul.add(new User(17L,7));\n  ul.add(new User(18L,8));\n  ul.add(new User(19L,9));\n  ul.add(new User(7));\n  ul.add(new User(20L,\"deleteByMap\",7,0));\n  ul.add(new User(\"8\",8,1));\n  ul.add(new User(\"9\",9,1));\n  for (  User u : ul) {\n    rlt=userMapper.insert(u);\n  }\n  System.err.println(\"\\n--------------insertBatch----------------\" + rlt + \"\\n\\n\");\n  System.err.println(\"\\n 自定义填充 testType=3 填充成功！\" + userMapper.selectById(18L).toString());\n  session.commit();\n  rlt=userMapper.deleteById(id);\n  System.err.println(\"---------deleteById------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  Map<String,Object> columnMap=new HashMap<>();\n  columnMap.put(\"name\",\"deleteByMap\");\n  columnMap.put(\"age\",null);\n  rlt=userMapper.deleteByMap(columnMap);\n  System.err.println(\"---------deleteByMap------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<Long> il=new ArrayList<>();\n  il.add(16L);\n  il.add(17L);\n  rlt=userMapper.deleteBatchIds(il);\n  System.err.println(\"---------deleteBatchIds------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  rlt=userMapper.delete(new EntityWrapper<>(new User(14L,\"delname\")));\n  System.err.println(\"--------------delete------------------ result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"MybatisPlus\"));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"update all column\",12,12));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.update(new User(\"55\",55,5),new EntityWrapper<>(new User(15L,\"5\")));\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  EntityWrapper<User> ew1=new EntityWrapper<>();\n  ew1.addFilter(\"test_id={0} AND name={1}\",15L,\"55\");\n  rlt=userMapper.update(new User(\"00\"),ew1);\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<User> userList=new ArrayList<>();\n  userList.add(new User(11L,\"updateBatchById-1\",1,1));\n  userList.add(new User(12L,\"updateBatchById-2\",2,1));\n  userList.add(new User(13L,\"updateBatchById-3\",3,1));\n  for (  User u : userList) {\n    rlt=userMapper.updateById(u);\n  }\n  System.err.println(\"------------------updateBatchById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  System.err.println(\"\\n------------------selectById----------------------\");\n  User user=userMapper.selectById(12L);\n  print(user);\n  System.err.println(\"\\n------------------selectBatchIds----------------------\");\n  List<Long> idList=new ArrayList<>();\n  idList.add(11L);\n  idList.add(12L);\n  List<User> ul0=userMapper.selectBatchIds(idList);\n  for (  User anUl0 : ul0) {\n    print(anUl0);\n  }\n  System.err.println(\"\\n------------------selectByMap-----满足 map 条件的数据----\");\n  Map<String,Object> cm=new HashMap<>();\n  cm.put(\"test_type\",1);\n  cm.put(\"1\",1);\n  List<User> ul1=userMapper.selectByMap(cm);\n  for (  User anUl1 : ul1) {\n    print(anUl1);\n  }\n  System.err.println(\"\\n------------------selectOne----------------------\");\n  User userOne=userMapper.selectOne(new User(\"abc\"));\n  print(userOne);\n  System.err.println(\"\\n------------------selectCount----------------------\");\n  System.err.println(\"查询 type=1 总记录数：\" + userMapper.selectCount(new EntityWrapper<>(new User(1))));\n  System.err.println(\"总记录数：\" + userMapper.selectCount(null));\n  System.err.println(\"\\n------------------selectList-----所有数据----id--DESC--排序----\");\n  List<User> ul2=userMapper.selectList(new EntityWrapper<User>(null,\"age,name\"));\n  for (  User anUl2 : ul2) {\n    print(anUl2);\n  }\n  System.err.println(\"\\n------------------list 分页查询 ----查询 testType = 1 的所有数据--id--DESC--排序--------\");\n  Page<User> page=new Page<>(1,2);\n  EntityWrapper<User> ew=new EntityWrapper<>(new User(1));\n  ew.setSqlSelect(\"age,name\");\n  ew.where(\"name like {0}\",\"'%dateBatch%'\").and(\"age={0}\",3).orderBy(\"age,name\",true);\n  List<User> paginList=userMapper.selectPage(page,ew);\n  page.setRecords(paginList);\n  for (int i=0; i < page.getRecords().size(); i++) {\n    print(page.getRecords().get(i));\n  }\n  System.err.println(\" 翻页：\" + page.toString());\n  System.err.println(\"\\n---------------xml---selectListRow 分页查询，不查询总数（此时可自定义 count 查询）----无查询条件--------------\");\n  List<User> rowList=userMapper.selectListRow(new Pagination(0,2,false));\n  for (  User aRowList : rowList) {\n    print(aRowList);\n  }\n  System.err.println(\" selectList EntityWrapper == null \\n\");\n  paginList=userMapper.selectList(null);\n  for (  User aPaginList : paginList) {\n    print(aPaginList);\n  }\n  rlt=userMapper.deleteAll();\n  System.err.println(\"清空测试数据！ rlt=\" + rlt);\n  session.commit();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1190,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 8394,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 309,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * RUN 测试 <p> <p> MybatisPlus 加载 SQL 顺序： </p> 1、加载XML中的SQL<br> 2、加载sqlProvider中的SQL<br> 3、xmlSql 与 sqlProvider不能包含相同的SQL<br> <br> 调整后的SQL优先级：xmlSql > sqlProvider > crudSql <br>\n */\n@Test public void crudTest(){\n  SqlSession session=this.sqlSessionFactory().openSession();\n  UserMapper userMapper=session.getMapper(UserMapper.class);\n  System.err.println(\" debug run 查询执行 user 表数据变化！ \");\n  userMapper.deleteAll();\n  Role role=new Role();\n  role.setId(IdWorker.getId());\n  role.setName(\"admin\");\n  User userA=new User();\n  userA.setId(IdWorker.getId());\n  userA.setName(\"junyu_shi\");\n  userA.setAge(1);\n  userA.setDesc(\"测试一把\");\n  userA.setTestType(1);\n  userA.setRole(role);\n  int rlt=userMapper.insert(userA);\n  User whereUser=userMapper.selectOne(userA);\n  print(whereUser);\n  userA.setAge(18);\n  userMapper.updateById(userA);\n  userMapper.delete(new EntityWrapper<>(userA));\n  System.err.println(\"--------- @TableField el() --------- \" + rlt);\n  rlt=userMapper.insertInjector(new User(1L,\"1\",1,1));\n  System.err.println(\"--------- insertInjector --------- \" + rlt);\n  User cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  long id=IdWorker.getId();\n  rlt=userMapper.insert(new User(id,\"abc\",18,1));\n  System.err.println(\"\\n--------------insert-------\" + rlt);\n  sleep();\n  rlt=userMapper.insert(new User(18));\n  System.err.println(\"\\n----------测试 name 字段忽略验证----insert-------\" + rlt);\n  sleep();\n  List<User> ul=new ArrayList<>();\n  ul.add(new User(11L,\"1\",1,0));\n  ul.add(new User(12L,\"2\",2,1));\n  ul.add(new User(13L,\"3\",3,1));\n  ul.add(new User(14L,\"delname\",4,0));\n  ul.add(new User(15L,\"5\",5,1));\n  ul.add(new User(16L,\"6\",6,0));\n  ul.add(new User(17L,7));\n  ul.add(new User(18L,8));\n  ul.add(new User(19L,9));\n  ul.add(new User(7));\n  ul.add(new User(20L,\"deleteByMap\",7,0));\n  ul.add(new User(\"8\",8,1));\n  ul.add(new User(\"9\",9,1));\n  for (  User u : ul) {\n    rlt=userMapper.insert(u);\n  }\n  System.err.println(\"\\n--------------insertBatch----------------\" + rlt + \"\\n\\n\");\n  System.err.println(\"\\n 自定义填充 testType=3 填充成功！\" + userMapper.selectById(18L).toString());\n  session.commit();\n  rlt=userMapper.deleteById(id);\n  System.err.println(\"---------deleteById------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  Map<String,Object> columnMap=new HashMap<>();\n  columnMap.put(\"name\",\"deleteByMap\");\n  columnMap.put(\"age\",null);\n  rlt=userMapper.deleteByMap(columnMap);\n  System.err.println(\"---------deleteByMap------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<Long> il=new ArrayList<>();\n  il.add(16L);\n  il.add(17L);\n  rlt=userMapper.deleteBatchIds(il);\n  System.err.println(\"---------deleteBatchIds------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  rlt=userMapper.delete(new EntityWrapper<>(new User(14L,\"delname\")));\n  System.err.println(\"--------------delete------------------ result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"MybatisPlus\"));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"update all column\",12,12));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.update(new User(\"55\",55,5),new EntityWrapper<>(new User(15L,\"5\")));\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  EntityWrapper<User> ew1=new EntityWrapper<>();\n  ew1.addFilter(\"test_id={0} AND name={1}\",15L,\"55\");\n  rlt=userMapper.update(new User(\"00\"),ew1);\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<User> userList=new ArrayList<>();\n  userList.add(new User(11L,\"updateBatchById-1\",1,1));\n  userList.add(new User(12L,\"updateBatchById-2\",2,1));\n  userList.add(new User(13L,\"updateBatchById-3\",3,1));\n  for (  User u : userList) {\n    rlt=userMapper.updateById(u);\n  }\n  System.err.println(\"------------------updateBatchById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  System.err.println(\"\\n------------------selectById----------------------\");\n  User user=userMapper.selectById(12L);\n  print(user);\n  System.err.println(\"\\n------------------selectBatchIds----------------------\");\n  List<Long> idList=new ArrayList<>();\n  idList.add(11L);\n  idList.add(12L);\n  List<User> ul0=userMapper.selectBatchIds(idList);\n  for (  User anUl0 : ul0) {\n    print(anUl0);\n  }\n  System.err.println(\"\\n------------------selectByMap-----满足 map 条件的数据----\");\n  Map<String,Object> cm=new HashMap<>();\n  cm.put(\"test_type\",1);\n  cm.put(\"1\",1);\n  List<User> ul1=userMapper.selectByMap(cm);\n  for (  User anUl1 : ul1) {\n    print(anUl1);\n  }\n  System.err.println(\"\\n------------------selectOne----------------------\");\n  User userOne=userMapper.selectOne(new User(\"abc\"));\n  print(userOne);\n  System.err.println(\"\\n------------------selectCount----------------------\");\n  System.err.println(\"查询 type=1 总记录数：\" + userMapper.selectCount(new EntityWrapper<>(new User(1))));\n  System.err.println(\"总记录数：\" + userMapper.selectCount(null));\n  System.err.println(\"\\n------------------selectList-----所有数据----id--DESC--排序----\");\n  List<User> ul2=userMapper.selectList(new EntityWrapper<User>(null,\"age,name\"));\n  for (  User anUl2 : ul2) {\n    print(anUl2);\n  }\n  System.err.println(\"\\n------------------list 分页查询 ----查询 testType = 1 的所有数据--id--DESC--排序--------\");\n  Page<User> page=new Page<>(1,2);\n  EntityWrapper<User> ew=new EntityWrapper<>(new User(1));\n  ew.setSqlSelect(\"age,name\");\n  ew.where(\"name like {0}\",\"'%dateBatch%'\").and(\"age={0}\",3).orderBy(\"age,name\",true);\n  List<User> paginList=userMapper.selectPage(page,ew);\n  page.setRecords(paginList);\n  for (int i=0; i < page.getRecords().size(); i++) {\n    print(page.getRecords().get(i));\n  }\n  System.err.println(\" 翻页：\" + page.toString());\n  System.err.println(\"\\n---------------xml---selectListRow 分页查询，不查询总数（此时可自定义 count 查询）----无查询条件--------------\");\n  List<User> rowList=userMapper.selectListRow(new Pagination(0,2,false));\n  for (  User aRowList : rowList) {\n    print(aRowList);\n  }\n  System.err.println(\" selectList EntityWrapper == null \\n\");\n  paginList=userMapper.selectList(null);\n  for (  User aPaginList : paginList) {\n    print(aPaginList);\n  }\n  rlt=userMapper.deleteAll();\n  System.err.println(\"清空测试数据！ rlt=\" + rlt);\n  session.commit();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1197,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 110,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 72
      },
      "nodeContext" : "System.err.println(\"--------- insertInjector --------- \" + rlt);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "rlt",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 125,
      "startColumnNumber" : 61,
      "endLineNumber" : 125,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 125,
        "startColumnNumber" : 27,
        "endLineNumber" : 125,
        "endColumnNumber" : 64
      },
      "nodeContext" : "\"\\n--------------insert-------\" + rlt",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 65
      },
      "nodeContext" : "System.err.println(\"\\n--------------insert-------\" + rlt)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 66
      },
      "nodeContext" : "System.err.println(\"\\n--------------insert-------\" + rlt);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 8101,
        "startLineNumber" : 76,
        "startColumnNumber" : 27,
        "endLineNumber" : 309,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SqlSession session=this.sqlSessionFactory().openSession();\n  UserMapper userMapper=session.getMapper(UserMapper.class);\n  System.err.println(\" debug run 查询执行 user 表数据变化！ \");\n  userMapper.deleteAll();\n  Role role=new Role();\n  role.setId(IdWorker.getId());\n  role.setName(\"admin\");\n  User userA=new User();\n  userA.setId(IdWorker.getId());\n  userA.setName(\"junyu_shi\");\n  userA.setAge(1);\n  userA.setDesc(\"测试一把\");\n  userA.setTestType(1);\n  userA.setRole(role);\n  int rlt=userMapper.insert(userA);\n  User whereUser=userMapper.selectOne(userA);\n  print(whereUser);\n  userA.setAge(18);\n  userMapper.updateById(userA);\n  userMapper.delete(new EntityWrapper<>(userA));\n  System.err.println(\"--------- @TableField el() --------- \" + rlt);\n  rlt=userMapper.insertInjector(new User(1L,\"1\",1,1));\n  System.err.println(\"--------- insertInjector --------- \" + rlt);\n  User cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  long id=IdWorker.getId();\n  rlt=userMapper.insert(new User(id,\"abc\",18,1));\n  System.err.println(\"\\n--------------insert-------\" + rlt);\n  sleep();\n  rlt=userMapper.insert(new User(18));\n  System.err.println(\"\\n----------测试 name 字段忽略验证----insert-------\" + rlt);\n  sleep();\n  List<User> ul=new ArrayList<>();\n  ul.add(new User(11L,\"1\",1,0));\n  ul.add(new User(12L,\"2\",2,1));\n  ul.add(new User(13L,\"3\",3,1));\n  ul.add(new User(14L,\"delname\",4,0));\n  ul.add(new User(15L,\"5\",5,1));\n  ul.add(new User(16L,\"6\",6,0));\n  ul.add(new User(17L,7));\n  ul.add(new User(18L,8));\n  ul.add(new User(19L,9));\n  ul.add(new User(7));\n  ul.add(new User(20L,\"deleteByMap\",7,0));\n  ul.add(new User(\"8\",8,1));\n  ul.add(new User(\"9\",9,1));\n  for (  User u : ul) {\n    rlt=userMapper.insert(u);\n  }\n  System.err.println(\"\\n--------------insertBatch----------------\" + rlt + \"\\n\\n\");\n  System.err.println(\"\\n 自定义填充 testType=3 填充成功！\" + userMapper.selectById(18L).toString());\n  session.commit();\n  rlt=userMapper.deleteById(id);\n  System.err.println(\"---------deleteById------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  Map<String,Object> columnMap=new HashMap<>();\n  columnMap.put(\"name\",\"deleteByMap\");\n  columnMap.put(\"age\",null);\n  rlt=userMapper.deleteByMap(columnMap);\n  System.err.println(\"---------deleteByMap------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<Long> il=new ArrayList<>();\n  il.add(16L);\n  il.add(17L);\n  rlt=userMapper.deleteBatchIds(il);\n  System.err.println(\"---------deleteBatchIds------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  rlt=userMapper.delete(new EntityWrapper<>(new User(14L,\"delname\")));\n  System.err.println(\"--------------delete------------------ result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"MybatisPlus\"));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"update all column\",12,12));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.update(new User(\"55\",55,5),new EntityWrapper<>(new User(15L,\"5\")));\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  EntityWrapper<User> ew1=new EntityWrapper<>();\n  ew1.addFilter(\"test_id={0} AND name={1}\",15L,\"55\");\n  rlt=userMapper.update(new User(\"00\"),ew1);\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<User> userList=new ArrayList<>();\n  userList.add(new User(11L,\"updateBatchById-1\",1,1));\n  userList.add(new User(12L,\"updateBatchById-2\",2,1));\n  userList.add(new User(13L,\"updateBatchById-3\",3,1));\n  for (  User u : userList) {\n    rlt=userMapper.updateById(u);\n  }\n  System.err.println(\"------------------updateBatchById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  System.err.println(\"\\n------------------selectById----------------------\");\n  User user=userMapper.selectById(12L);\n  print(user);\n  System.err.println(\"\\n------------------selectBatchIds----------------------\");\n  List<Long> idList=new ArrayList<>();\n  idList.add(11L);\n  idList.add(12L);\n  List<User> ul0=userMapper.selectBatchIds(idList);\n  for (  User anUl0 : ul0) {\n    print(anUl0);\n  }\n  System.err.println(\"\\n------------------selectByMap-----满足 map 条件的数据----\");\n  Map<String,Object> cm=new HashMap<>();\n  cm.put(\"test_type\",1);\n  cm.put(\"1\",1);\n  List<User> ul1=userMapper.selectByMap(cm);\n  for (  User anUl1 : ul1) {\n    print(anUl1);\n  }\n  System.err.println(\"\\n------------------selectOne----------------------\");\n  User userOne=userMapper.selectOne(new User(\"abc\"));\n  print(userOne);\n  System.err.println(\"\\n------------------selectCount----------------------\");\n  System.err.println(\"查询 type=1 总记录数：\" + userMapper.selectCount(new EntityWrapper<>(new User(1))));\n  System.err.println(\"总记录数：\" + userMapper.selectCount(null));\n  System.err.println(\"\\n------------------selectList-----所有数据----id--DESC--排序----\");\n  List<User> ul2=userMapper.selectList(new EntityWrapper<User>(null,\"age,name\"));\n  for (  User anUl2 : ul2) {\n    print(anUl2);\n  }\n  System.err.println(\"\\n------------------list 分页查询 ----查询 testType = 1 的所有数据--id--DESC--排序--------\");\n  Page<User> page=new Page<>(1,2);\n  EntityWrapper<User> ew=new EntityWrapper<>(new User(1));\n  ew.setSqlSelect(\"age,name\");\n  ew.where(\"name like {0}\",\"'%dateBatch%'\").and(\"age={0}\",3).orderBy(\"age,name\",true);\n  List<User> paginList=userMapper.selectPage(page,ew);\n  page.setRecords(paginList);\n  for (int i=0; i < page.getRecords().size(); i++) {\n    print(page.getRecords().get(i));\n  }\n  System.err.println(\" 翻页：\" + page.toString());\n  System.err.println(\"\\n---------------xml---selectListRow 分页查询，不查询总数（此时可自定义 count 查询）----无查询条件--------------\");\n  List<User> rowList=userMapper.selectListRow(new Pagination(0,2,false));\n  for (  User aRowList : rowList) {\n    print(aRowList);\n  }\n  System.err.println(\" selectList EntityWrapper == null \\n\");\n  paginList=userMapper.selectList(null);\n  for (  User aPaginList : paginList) {\n    print(aPaginList);\n  }\n  rlt=userMapper.deleteAll();\n  System.err.println(\"清空测试数据！ rlt=\" + rlt);\n  session.commit();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1190,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 8394,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 309,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * RUN 测试 <p> <p> MybatisPlus 加载 SQL 顺序： </p> 1、加载XML中的SQL<br> 2、加载sqlProvider中的SQL<br> 3、xmlSql 与 sqlProvider不能包含相同的SQL<br> <br> 调整后的SQL优先级：xmlSql > sqlProvider > crudSql <br>\n */\n@Test public void crudTest(){\n  SqlSession session=this.sqlSessionFactory().openSession();\n  UserMapper userMapper=session.getMapper(UserMapper.class);\n  System.err.println(\" debug run 查询执行 user 表数据变化！ \");\n  userMapper.deleteAll();\n  Role role=new Role();\n  role.setId(IdWorker.getId());\n  role.setName(\"admin\");\n  User userA=new User();\n  userA.setId(IdWorker.getId());\n  userA.setName(\"junyu_shi\");\n  userA.setAge(1);\n  userA.setDesc(\"测试一把\");\n  userA.setTestType(1);\n  userA.setRole(role);\n  int rlt=userMapper.insert(userA);\n  User whereUser=userMapper.selectOne(userA);\n  print(whereUser);\n  userA.setAge(18);\n  userMapper.updateById(userA);\n  userMapper.delete(new EntityWrapper<>(userA));\n  System.err.println(\"--------- @TableField el() --------- \" + rlt);\n  rlt=userMapper.insertInjector(new User(1L,\"1\",1,1));\n  System.err.println(\"--------- insertInjector --------- \" + rlt);\n  User cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  long id=IdWorker.getId();\n  rlt=userMapper.insert(new User(id,\"abc\",18,1));\n  System.err.println(\"\\n--------------insert-------\" + rlt);\n  sleep();\n  rlt=userMapper.insert(new User(18));\n  System.err.println(\"\\n----------测试 name 字段忽略验证----insert-------\" + rlt);\n  sleep();\n  List<User> ul=new ArrayList<>();\n  ul.add(new User(11L,\"1\",1,0));\n  ul.add(new User(12L,\"2\",2,1));\n  ul.add(new User(13L,\"3\",3,1));\n  ul.add(new User(14L,\"delname\",4,0));\n  ul.add(new User(15L,\"5\",5,1));\n  ul.add(new User(16L,\"6\",6,0));\n  ul.add(new User(17L,7));\n  ul.add(new User(18L,8));\n  ul.add(new User(19L,9));\n  ul.add(new User(7));\n  ul.add(new User(20L,\"deleteByMap\",7,0));\n  ul.add(new User(\"8\",8,1));\n  ul.add(new User(\"9\",9,1));\n  for (  User u : ul) {\n    rlt=userMapper.insert(u);\n  }\n  System.err.println(\"\\n--------------insertBatch----------------\" + rlt + \"\\n\\n\");\n  System.err.println(\"\\n 自定义填充 testType=3 填充成功！\" + userMapper.selectById(18L).toString());\n  session.commit();\n  rlt=userMapper.deleteById(id);\n  System.err.println(\"---------deleteById------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  Map<String,Object> columnMap=new HashMap<>();\n  columnMap.put(\"name\",\"deleteByMap\");\n  columnMap.put(\"age\",null);\n  rlt=userMapper.deleteByMap(columnMap);\n  System.err.println(\"---------deleteByMap------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<Long> il=new ArrayList<>();\n  il.add(16L);\n  il.add(17L);\n  rlt=userMapper.deleteBatchIds(il);\n  System.err.println(\"---------deleteBatchIds------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  rlt=userMapper.delete(new EntityWrapper<>(new User(14L,\"delname\")));\n  System.err.println(\"--------------delete------------------ result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"MybatisPlus\"));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"update all column\",12,12));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.update(new User(\"55\",55,5),new EntityWrapper<>(new User(15L,\"5\")));\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  EntityWrapper<User> ew1=new EntityWrapper<>();\n  ew1.addFilter(\"test_id={0} AND name={1}\",15L,\"55\");\n  rlt=userMapper.update(new User(\"00\"),ew1);\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<User> userList=new ArrayList<>();\n  userList.add(new User(11L,\"updateBatchById-1\",1,1));\n  userList.add(new User(12L,\"updateBatchById-2\",2,1));\n  userList.add(new User(13L,\"updateBatchById-3\",3,1));\n  for (  User u : userList) {\n    rlt=userMapper.updateById(u);\n  }\n  System.err.println(\"------------------updateBatchById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  System.err.println(\"\\n------------------selectById----------------------\");\n  User user=userMapper.selectById(12L);\n  print(user);\n  System.err.println(\"\\n------------------selectBatchIds----------------------\");\n  List<Long> idList=new ArrayList<>();\n  idList.add(11L);\n  idList.add(12L);\n  List<User> ul0=userMapper.selectBatchIds(idList);\n  for (  User anUl0 : ul0) {\n    print(anUl0);\n  }\n  System.err.println(\"\\n------------------selectByMap-----满足 map 条件的数据----\");\n  Map<String,Object> cm=new HashMap<>();\n  cm.put(\"test_type\",1);\n  cm.put(\"1\",1);\n  List<User> ul1=userMapper.selectByMap(cm);\n  for (  User anUl1 : ul1) {\n    print(anUl1);\n  }\n  System.err.println(\"\\n------------------selectOne----------------------\");\n  User userOne=userMapper.selectOne(new User(\"abc\"));\n  print(userOne);\n  System.err.println(\"\\n------------------selectCount----------------------\");\n  System.err.println(\"查询 type=1 总记录数：\" + userMapper.selectCount(new EntityWrapper<>(new User(1))));\n  System.err.println(\"总记录数：\" + userMapper.selectCount(null));\n  System.err.println(\"\\n------------------selectList-----所有数据----id--DESC--排序----\");\n  List<User> ul2=userMapper.selectList(new EntityWrapper<User>(null,\"age,name\"));\n  for (  User anUl2 : ul2) {\n    print(anUl2);\n  }\n  System.err.println(\"\\n------------------list 分页查询 ----查询 testType = 1 的所有数据--id--DESC--排序--------\");\n  Page<User> page=new Page<>(1,2);\n  EntityWrapper<User> ew=new EntityWrapper<>(new User(1));\n  ew.setSqlSelect(\"age,name\");\n  ew.where(\"name like {0}\",\"'%dateBatch%'\").and(\"age={0}\",3).orderBy(\"age,name\",true);\n  List<User> paginList=userMapper.selectPage(page,ew);\n  page.setRecords(paginList);\n  for (int i=0; i < page.getRecords().size(); i++) {\n    print(page.getRecords().get(i));\n  }\n  System.err.println(\" 翻页：\" + page.toString());\n  System.err.println(\"\\n---------------xml---selectListRow 分页查询，不查询总数（此时可自定义 count 查询）----无查询条件--------------\");\n  List<User> rowList=userMapper.selectListRow(new Pagination(0,2,false));\n  for (  User aRowList : rowList) {\n    print(aRowList);\n  }\n  System.err.println(\" selectList EntityWrapper == null \\n\");\n  paginList=userMapper.selectList(null);\n  for (  User aPaginList : paginList) {\n    print(aPaginList);\n  }\n  rlt=userMapper.deleteAll();\n  System.err.println(\"清空测试数据！ rlt=\" + rlt);\n  session.commit();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1197,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 125,
        "startColumnNumber" : 8,
        "endLineNumber" : 125,
        "endColumnNumber" : 66
      },
      "nodeContext" : "System.err.println(\"\\n--------------insert-------\" + rlt);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "rlt",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 129,
      "startColumnNumber" : 75,
      "endLineNumber" : 129,
      "endColumnNumber" : 78
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 129,
        "startColumnNumber" : 27,
        "endLineNumber" : 129,
        "endColumnNumber" : 78
      },
      "nodeContext" : "\"\\n----------测试 name 字段忽略验证----insert-------\" + rlt",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 129,
        "startColumnNumber" : 8,
        "endLineNumber" : 129,
        "endColumnNumber" : 79
      },
      "nodeContext" : "System.err.println(\"\\n----------测试 name 字段忽略验证----insert-------\" + rlt)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 129,
        "startColumnNumber" : 8,
        "endLineNumber" : 129,
        "endColumnNumber" : 80
      },
      "nodeContext" : "System.err.println(\"\\n----------测试 name 字段忽略验证----insert-------\" + rlt);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 8101,
        "startLineNumber" : 76,
        "startColumnNumber" : 27,
        "endLineNumber" : 309,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SqlSession session=this.sqlSessionFactory().openSession();\n  UserMapper userMapper=session.getMapper(UserMapper.class);\n  System.err.println(\" debug run 查询执行 user 表数据变化！ \");\n  userMapper.deleteAll();\n  Role role=new Role();\n  role.setId(IdWorker.getId());\n  role.setName(\"admin\");\n  User userA=new User();\n  userA.setId(IdWorker.getId());\n  userA.setName(\"junyu_shi\");\n  userA.setAge(1);\n  userA.setDesc(\"测试一把\");\n  userA.setTestType(1);\n  userA.setRole(role);\n  int rlt=userMapper.insert(userA);\n  User whereUser=userMapper.selectOne(userA);\n  print(whereUser);\n  userA.setAge(18);\n  userMapper.updateById(userA);\n  userMapper.delete(new EntityWrapper<>(userA));\n  System.err.println(\"--------- @TableField el() --------- \" + rlt);\n  rlt=userMapper.insertInjector(new User(1L,\"1\",1,1));\n  System.err.println(\"--------- insertInjector --------- \" + rlt);\n  User cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  long id=IdWorker.getId();\n  rlt=userMapper.insert(new User(id,\"abc\",18,1));\n  System.err.println(\"\\n--------------insert-------\" + rlt);\n  sleep();\n  rlt=userMapper.insert(new User(18));\n  System.err.println(\"\\n----------测试 name 字段忽略验证----insert-------\" + rlt);\n  sleep();\n  List<User> ul=new ArrayList<>();\n  ul.add(new User(11L,\"1\",1,0));\n  ul.add(new User(12L,\"2\",2,1));\n  ul.add(new User(13L,\"3\",3,1));\n  ul.add(new User(14L,\"delname\",4,0));\n  ul.add(new User(15L,\"5\",5,1));\n  ul.add(new User(16L,\"6\",6,0));\n  ul.add(new User(17L,7));\n  ul.add(new User(18L,8));\n  ul.add(new User(19L,9));\n  ul.add(new User(7));\n  ul.add(new User(20L,\"deleteByMap\",7,0));\n  ul.add(new User(\"8\",8,1));\n  ul.add(new User(\"9\",9,1));\n  for (  User u : ul) {\n    rlt=userMapper.insert(u);\n  }\n  System.err.println(\"\\n--------------insertBatch----------------\" + rlt + \"\\n\\n\");\n  System.err.println(\"\\n 自定义填充 testType=3 填充成功！\" + userMapper.selectById(18L).toString());\n  session.commit();\n  rlt=userMapper.deleteById(id);\n  System.err.println(\"---------deleteById------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  Map<String,Object> columnMap=new HashMap<>();\n  columnMap.put(\"name\",\"deleteByMap\");\n  columnMap.put(\"age\",null);\n  rlt=userMapper.deleteByMap(columnMap);\n  System.err.println(\"---------deleteByMap------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<Long> il=new ArrayList<>();\n  il.add(16L);\n  il.add(17L);\n  rlt=userMapper.deleteBatchIds(il);\n  System.err.println(\"---------deleteBatchIds------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  rlt=userMapper.delete(new EntityWrapper<>(new User(14L,\"delname\")));\n  System.err.println(\"--------------delete------------------ result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"MybatisPlus\"));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"update all column\",12,12));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.update(new User(\"55\",55,5),new EntityWrapper<>(new User(15L,\"5\")));\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  EntityWrapper<User> ew1=new EntityWrapper<>();\n  ew1.addFilter(\"test_id={0} AND name={1}\",15L,\"55\");\n  rlt=userMapper.update(new User(\"00\"),ew1);\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<User> userList=new ArrayList<>();\n  userList.add(new User(11L,\"updateBatchById-1\",1,1));\n  userList.add(new User(12L,\"updateBatchById-2\",2,1));\n  userList.add(new User(13L,\"updateBatchById-3\",3,1));\n  for (  User u : userList) {\n    rlt=userMapper.updateById(u);\n  }\n  System.err.println(\"------------------updateBatchById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  System.err.println(\"\\n------------------selectById----------------------\");\n  User user=userMapper.selectById(12L);\n  print(user);\n  System.err.println(\"\\n------------------selectBatchIds----------------------\");\n  List<Long> idList=new ArrayList<>();\n  idList.add(11L);\n  idList.add(12L);\n  List<User> ul0=userMapper.selectBatchIds(idList);\n  for (  User anUl0 : ul0) {\n    print(anUl0);\n  }\n  System.err.println(\"\\n------------------selectByMap-----满足 map 条件的数据----\");\n  Map<String,Object> cm=new HashMap<>();\n  cm.put(\"test_type\",1);\n  cm.put(\"1\",1);\n  List<User> ul1=userMapper.selectByMap(cm);\n  for (  User anUl1 : ul1) {\n    print(anUl1);\n  }\n  System.err.println(\"\\n------------------selectOne----------------------\");\n  User userOne=userMapper.selectOne(new User(\"abc\"));\n  print(userOne);\n  System.err.println(\"\\n------------------selectCount----------------------\");\n  System.err.println(\"查询 type=1 总记录数：\" + userMapper.selectCount(new EntityWrapper<>(new User(1))));\n  System.err.println(\"总记录数：\" + userMapper.selectCount(null));\n  System.err.println(\"\\n------------------selectList-----所有数据----id--DESC--排序----\");\n  List<User> ul2=userMapper.selectList(new EntityWrapper<User>(null,\"age,name\"));\n  for (  User anUl2 : ul2) {\n    print(anUl2);\n  }\n  System.err.println(\"\\n------------------list 分页查询 ----查询 testType = 1 的所有数据--id--DESC--排序--------\");\n  Page<User> page=new Page<>(1,2);\n  EntityWrapper<User> ew=new EntityWrapper<>(new User(1));\n  ew.setSqlSelect(\"age,name\");\n  ew.where(\"name like {0}\",\"'%dateBatch%'\").and(\"age={0}\",3).orderBy(\"age,name\",true);\n  List<User> paginList=userMapper.selectPage(page,ew);\n  page.setRecords(paginList);\n  for (int i=0; i < page.getRecords().size(); i++) {\n    print(page.getRecords().get(i));\n  }\n  System.err.println(\" 翻页：\" + page.toString());\n  System.err.println(\"\\n---------------xml---selectListRow 分页查询，不查询总数（此时可自定义 count 查询）----无查询条件--------------\");\n  List<User> rowList=userMapper.selectListRow(new Pagination(0,2,false));\n  for (  User aRowList : rowList) {\n    print(aRowList);\n  }\n  System.err.println(\" selectList EntityWrapper == null \\n\");\n  paginList=userMapper.selectList(null);\n  for (  User aPaginList : paginList) {\n    print(aPaginList);\n  }\n  rlt=userMapper.deleteAll();\n  System.err.println(\"清空测试数据！ rlt=\" + rlt);\n  session.commit();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1190,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 8394,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 309,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * RUN 测试 <p> <p> MybatisPlus 加载 SQL 顺序： </p> 1、加载XML中的SQL<br> 2、加载sqlProvider中的SQL<br> 3、xmlSql 与 sqlProvider不能包含相同的SQL<br> <br> 调整后的SQL优先级：xmlSql > sqlProvider > crudSql <br>\n */\n@Test public void crudTest(){\n  SqlSession session=this.sqlSessionFactory().openSession();\n  UserMapper userMapper=session.getMapper(UserMapper.class);\n  System.err.println(\" debug run 查询执行 user 表数据变化！ \");\n  userMapper.deleteAll();\n  Role role=new Role();\n  role.setId(IdWorker.getId());\n  role.setName(\"admin\");\n  User userA=new User();\n  userA.setId(IdWorker.getId());\n  userA.setName(\"junyu_shi\");\n  userA.setAge(1);\n  userA.setDesc(\"测试一把\");\n  userA.setTestType(1);\n  userA.setRole(role);\n  int rlt=userMapper.insert(userA);\n  User whereUser=userMapper.selectOne(userA);\n  print(whereUser);\n  userA.setAge(18);\n  userMapper.updateById(userA);\n  userMapper.delete(new EntityWrapper<>(userA));\n  System.err.println(\"--------- @TableField el() --------- \" + rlt);\n  rlt=userMapper.insertInjector(new User(1L,\"1\",1,1));\n  System.err.println(\"--------- insertInjector --------- \" + rlt);\n  User cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  long id=IdWorker.getId();\n  rlt=userMapper.insert(new User(id,\"abc\",18,1));\n  System.err.println(\"\\n--------------insert-------\" + rlt);\n  sleep();\n  rlt=userMapper.insert(new User(18));\n  System.err.println(\"\\n----------测试 name 字段忽略验证----insert-------\" + rlt);\n  sleep();\n  List<User> ul=new ArrayList<>();\n  ul.add(new User(11L,\"1\",1,0));\n  ul.add(new User(12L,\"2\",2,1));\n  ul.add(new User(13L,\"3\",3,1));\n  ul.add(new User(14L,\"delname\",4,0));\n  ul.add(new User(15L,\"5\",5,1));\n  ul.add(new User(16L,\"6\",6,0));\n  ul.add(new User(17L,7));\n  ul.add(new User(18L,8));\n  ul.add(new User(19L,9));\n  ul.add(new User(7));\n  ul.add(new User(20L,\"deleteByMap\",7,0));\n  ul.add(new User(\"8\",8,1));\n  ul.add(new User(\"9\",9,1));\n  for (  User u : ul) {\n    rlt=userMapper.insert(u);\n  }\n  System.err.println(\"\\n--------------insertBatch----------------\" + rlt + \"\\n\\n\");\n  System.err.println(\"\\n 自定义填充 testType=3 填充成功！\" + userMapper.selectById(18L).toString());\n  session.commit();\n  rlt=userMapper.deleteById(id);\n  System.err.println(\"---------deleteById------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  Map<String,Object> columnMap=new HashMap<>();\n  columnMap.put(\"name\",\"deleteByMap\");\n  columnMap.put(\"age\",null);\n  rlt=userMapper.deleteByMap(columnMap);\n  System.err.println(\"---------deleteByMap------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<Long> il=new ArrayList<>();\n  il.add(16L);\n  il.add(17L);\n  rlt=userMapper.deleteBatchIds(il);\n  System.err.println(\"---------deleteBatchIds------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  rlt=userMapper.delete(new EntityWrapper<>(new User(14L,\"delname\")));\n  System.err.println(\"--------------delete------------------ result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"MybatisPlus\"));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"update all column\",12,12));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.update(new User(\"55\",55,5),new EntityWrapper<>(new User(15L,\"5\")));\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  EntityWrapper<User> ew1=new EntityWrapper<>();\n  ew1.addFilter(\"test_id={0} AND name={1}\",15L,\"55\");\n  rlt=userMapper.update(new User(\"00\"),ew1);\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<User> userList=new ArrayList<>();\n  userList.add(new User(11L,\"updateBatchById-1\",1,1));\n  userList.add(new User(12L,\"updateBatchById-2\",2,1));\n  userList.add(new User(13L,\"updateBatchById-3\",3,1));\n  for (  User u : userList) {\n    rlt=userMapper.updateById(u);\n  }\n  System.err.println(\"------------------updateBatchById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  System.err.println(\"\\n------------------selectById----------------------\");\n  User user=userMapper.selectById(12L);\n  print(user);\n  System.err.println(\"\\n------------------selectBatchIds----------------------\");\n  List<Long> idList=new ArrayList<>();\n  idList.add(11L);\n  idList.add(12L);\n  List<User> ul0=userMapper.selectBatchIds(idList);\n  for (  User anUl0 : ul0) {\n    print(anUl0);\n  }\n  System.err.println(\"\\n------------------selectByMap-----满足 map 条件的数据----\");\n  Map<String,Object> cm=new HashMap<>();\n  cm.put(\"test_type\",1);\n  cm.put(\"1\",1);\n  List<User> ul1=userMapper.selectByMap(cm);\n  for (  User anUl1 : ul1) {\n    print(anUl1);\n  }\n  System.err.println(\"\\n------------------selectOne----------------------\");\n  User userOne=userMapper.selectOne(new User(\"abc\"));\n  print(userOne);\n  System.err.println(\"\\n------------------selectCount----------------------\");\n  System.err.println(\"查询 type=1 总记录数：\" + userMapper.selectCount(new EntityWrapper<>(new User(1))));\n  System.err.println(\"总记录数：\" + userMapper.selectCount(null));\n  System.err.println(\"\\n------------------selectList-----所有数据----id--DESC--排序----\");\n  List<User> ul2=userMapper.selectList(new EntityWrapper<User>(null,\"age,name\"));\n  for (  User anUl2 : ul2) {\n    print(anUl2);\n  }\n  System.err.println(\"\\n------------------list 分页查询 ----查询 testType = 1 的所有数据--id--DESC--排序--------\");\n  Page<User> page=new Page<>(1,2);\n  EntityWrapper<User> ew=new EntityWrapper<>(new User(1));\n  ew.setSqlSelect(\"age,name\");\n  ew.where(\"name like {0}\",\"'%dateBatch%'\").and(\"age={0}\",3).orderBy(\"age,name\",true);\n  List<User> paginList=userMapper.selectPage(page,ew);\n  page.setRecords(paginList);\n  for (int i=0; i < page.getRecords().size(); i++) {\n    print(page.getRecords().get(i));\n  }\n  System.err.println(\" 翻页：\" + page.toString());\n  System.err.println(\"\\n---------------xml---selectListRow 分页查询，不查询总数（此时可自定义 count 查询）----无查询条件--------------\");\n  List<User> rowList=userMapper.selectListRow(new Pagination(0,2,false));\n  for (  User aRowList : rowList) {\n    print(aRowList);\n  }\n  System.err.println(\" selectList EntityWrapper == null \\n\");\n  paginList=userMapper.selectList(null);\n  for (  User aPaginList : paginList) {\n    print(aPaginList);\n  }\n  rlt=userMapper.deleteAll();\n  System.err.println(\"清空测试数据！ rlt=\" + rlt);\n  session.commit();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1197,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 129,
        "startColumnNumber" : 8,
        "endLineNumber" : 129,
        "endColumnNumber" : 80
      },
      "nodeContext" : "System.err.println(\"\\n----------测试 name 字段忽略验证----insert-------\" + rlt);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "rlt",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 155,
      "startColumnNumber" : 75,
      "endLineNumber" : 155,
      "endColumnNumber" : 78
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 155,
        "startColumnNumber" : 27,
        "endLineNumber" : 155,
        "endColumnNumber" : 87
      },
      "nodeContext" : "\"\\n--------------insertBatch----------------\" + rlt + \"\\n\\n\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 155,
        "startColumnNumber" : 8,
        "endLineNumber" : 155,
        "endColumnNumber" : 88
      },
      "nodeContext" : "System.err.println(\"\\n--------------insertBatch----------------\" + rlt + \"\\n\\n\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 155,
        "startColumnNumber" : 8,
        "endLineNumber" : 155,
        "endColumnNumber" : 89
      },
      "nodeContext" : "System.err.println(\"\\n--------------insertBatch----------------\" + rlt + \"\\n\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 8101,
        "startLineNumber" : 76,
        "startColumnNumber" : 27,
        "endLineNumber" : 309,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SqlSession session=this.sqlSessionFactory().openSession();\n  UserMapper userMapper=session.getMapper(UserMapper.class);\n  System.err.println(\" debug run 查询执行 user 表数据变化！ \");\n  userMapper.deleteAll();\n  Role role=new Role();\n  role.setId(IdWorker.getId());\n  role.setName(\"admin\");\n  User userA=new User();\n  userA.setId(IdWorker.getId());\n  userA.setName(\"junyu_shi\");\n  userA.setAge(1);\n  userA.setDesc(\"测试一把\");\n  userA.setTestType(1);\n  userA.setRole(role);\n  int rlt=userMapper.insert(userA);\n  User whereUser=userMapper.selectOne(userA);\n  print(whereUser);\n  userA.setAge(18);\n  userMapper.updateById(userA);\n  userMapper.delete(new EntityWrapper<>(userA));\n  System.err.println(\"--------- @TableField el() --------- \" + rlt);\n  rlt=userMapper.insertInjector(new User(1L,\"1\",1,1));\n  System.err.println(\"--------- insertInjector --------- \" + rlt);\n  User cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  long id=IdWorker.getId();\n  rlt=userMapper.insert(new User(id,\"abc\",18,1));\n  System.err.println(\"\\n--------------insert-------\" + rlt);\n  sleep();\n  rlt=userMapper.insert(new User(18));\n  System.err.println(\"\\n----------测试 name 字段忽略验证----insert-------\" + rlt);\n  sleep();\n  List<User> ul=new ArrayList<>();\n  ul.add(new User(11L,\"1\",1,0));\n  ul.add(new User(12L,\"2\",2,1));\n  ul.add(new User(13L,\"3\",3,1));\n  ul.add(new User(14L,\"delname\",4,0));\n  ul.add(new User(15L,\"5\",5,1));\n  ul.add(new User(16L,\"6\",6,0));\n  ul.add(new User(17L,7));\n  ul.add(new User(18L,8));\n  ul.add(new User(19L,9));\n  ul.add(new User(7));\n  ul.add(new User(20L,\"deleteByMap\",7,0));\n  ul.add(new User(\"8\",8,1));\n  ul.add(new User(\"9\",9,1));\n  for (  User u : ul) {\n    rlt=userMapper.insert(u);\n  }\n  System.err.println(\"\\n--------------insertBatch----------------\" + rlt + \"\\n\\n\");\n  System.err.println(\"\\n 自定义填充 testType=3 填充成功！\" + userMapper.selectById(18L).toString());\n  session.commit();\n  rlt=userMapper.deleteById(id);\n  System.err.println(\"---------deleteById------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  Map<String,Object> columnMap=new HashMap<>();\n  columnMap.put(\"name\",\"deleteByMap\");\n  columnMap.put(\"age\",null);\n  rlt=userMapper.deleteByMap(columnMap);\n  System.err.println(\"---------deleteByMap------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<Long> il=new ArrayList<>();\n  il.add(16L);\n  il.add(17L);\n  rlt=userMapper.deleteBatchIds(il);\n  System.err.println(\"---------deleteBatchIds------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  rlt=userMapper.delete(new EntityWrapper<>(new User(14L,\"delname\")));\n  System.err.println(\"--------------delete------------------ result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"MybatisPlus\"));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"update all column\",12,12));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.update(new User(\"55\",55,5),new EntityWrapper<>(new User(15L,\"5\")));\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  EntityWrapper<User> ew1=new EntityWrapper<>();\n  ew1.addFilter(\"test_id={0} AND name={1}\",15L,\"55\");\n  rlt=userMapper.update(new User(\"00\"),ew1);\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<User> userList=new ArrayList<>();\n  userList.add(new User(11L,\"updateBatchById-1\",1,1));\n  userList.add(new User(12L,\"updateBatchById-2\",2,1));\n  userList.add(new User(13L,\"updateBatchById-3\",3,1));\n  for (  User u : userList) {\n    rlt=userMapper.updateById(u);\n  }\n  System.err.println(\"------------------updateBatchById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  System.err.println(\"\\n------------------selectById----------------------\");\n  User user=userMapper.selectById(12L);\n  print(user);\n  System.err.println(\"\\n------------------selectBatchIds----------------------\");\n  List<Long> idList=new ArrayList<>();\n  idList.add(11L);\n  idList.add(12L);\n  List<User> ul0=userMapper.selectBatchIds(idList);\n  for (  User anUl0 : ul0) {\n    print(anUl0);\n  }\n  System.err.println(\"\\n------------------selectByMap-----满足 map 条件的数据----\");\n  Map<String,Object> cm=new HashMap<>();\n  cm.put(\"test_type\",1);\n  cm.put(\"1\",1);\n  List<User> ul1=userMapper.selectByMap(cm);\n  for (  User anUl1 : ul1) {\n    print(anUl1);\n  }\n  System.err.println(\"\\n------------------selectOne----------------------\");\n  User userOne=userMapper.selectOne(new User(\"abc\"));\n  print(userOne);\n  System.err.println(\"\\n------------------selectCount----------------------\");\n  System.err.println(\"查询 type=1 总记录数：\" + userMapper.selectCount(new EntityWrapper<>(new User(1))));\n  System.err.println(\"总记录数：\" + userMapper.selectCount(null));\n  System.err.println(\"\\n------------------selectList-----所有数据----id--DESC--排序----\");\n  List<User> ul2=userMapper.selectList(new EntityWrapper<User>(null,\"age,name\"));\n  for (  User anUl2 : ul2) {\n    print(anUl2);\n  }\n  System.err.println(\"\\n------------------list 分页查询 ----查询 testType = 1 的所有数据--id--DESC--排序--------\");\n  Page<User> page=new Page<>(1,2);\n  EntityWrapper<User> ew=new EntityWrapper<>(new User(1));\n  ew.setSqlSelect(\"age,name\");\n  ew.where(\"name like {0}\",\"'%dateBatch%'\").and(\"age={0}\",3).orderBy(\"age,name\",true);\n  List<User> paginList=userMapper.selectPage(page,ew);\n  page.setRecords(paginList);\n  for (int i=0; i < page.getRecords().size(); i++) {\n    print(page.getRecords().get(i));\n  }\n  System.err.println(\" 翻页：\" + page.toString());\n  System.err.println(\"\\n---------------xml---selectListRow 分页查询，不查询总数（此时可自定义 count 查询）----无查询条件--------------\");\n  List<User> rowList=userMapper.selectListRow(new Pagination(0,2,false));\n  for (  User aRowList : rowList) {\n    print(aRowList);\n  }\n  System.err.println(\" selectList EntityWrapper == null \\n\");\n  paginList=userMapper.selectList(null);\n  for (  User aPaginList : paginList) {\n    print(aPaginList);\n  }\n  rlt=userMapper.deleteAll();\n  System.err.println(\"清空测试数据！ rlt=\" + rlt);\n  session.commit();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1190,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 8394,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 309,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * RUN 测试 <p> <p> MybatisPlus 加载 SQL 顺序： </p> 1、加载XML中的SQL<br> 2、加载sqlProvider中的SQL<br> 3、xmlSql 与 sqlProvider不能包含相同的SQL<br> <br> 调整后的SQL优先级：xmlSql > sqlProvider > crudSql <br>\n */\n@Test public void crudTest(){\n  SqlSession session=this.sqlSessionFactory().openSession();\n  UserMapper userMapper=session.getMapper(UserMapper.class);\n  System.err.println(\" debug run 查询执行 user 表数据变化！ \");\n  userMapper.deleteAll();\n  Role role=new Role();\n  role.setId(IdWorker.getId());\n  role.setName(\"admin\");\n  User userA=new User();\n  userA.setId(IdWorker.getId());\n  userA.setName(\"junyu_shi\");\n  userA.setAge(1);\n  userA.setDesc(\"测试一把\");\n  userA.setTestType(1);\n  userA.setRole(role);\n  int rlt=userMapper.insert(userA);\n  User whereUser=userMapper.selectOne(userA);\n  print(whereUser);\n  userA.setAge(18);\n  userMapper.updateById(userA);\n  userMapper.delete(new EntityWrapper<>(userA));\n  System.err.println(\"--------- @TableField el() --------- \" + rlt);\n  rlt=userMapper.insertInjector(new User(1L,\"1\",1,1));\n  System.err.println(\"--------- insertInjector --------- \" + rlt);\n  User cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  long id=IdWorker.getId();\n  rlt=userMapper.insert(new User(id,\"abc\",18,1));\n  System.err.println(\"\\n--------------insert-------\" + rlt);\n  sleep();\n  rlt=userMapper.insert(new User(18));\n  System.err.println(\"\\n----------测试 name 字段忽略验证----insert-------\" + rlt);\n  sleep();\n  List<User> ul=new ArrayList<>();\n  ul.add(new User(11L,\"1\",1,0));\n  ul.add(new User(12L,\"2\",2,1));\n  ul.add(new User(13L,\"3\",3,1));\n  ul.add(new User(14L,\"delname\",4,0));\n  ul.add(new User(15L,\"5\",5,1));\n  ul.add(new User(16L,\"6\",6,0));\n  ul.add(new User(17L,7));\n  ul.add(new User(18L,8));\n  ul.add(new User(19L,9));\n  ul.add(new User(7));\n  ul.add(new User(20L,\"deleteByMap\",7,0));\n  ul.add(new User(\"8\",8,1));\n  ul.add(new User(\"9\",9,1));\n  for (  User u : ul) {\n    rlt=userMapper.insert(u);\n  }\n  System.err.println(\"\\n--------------insertBatch----------------\" + rlt + \"\\n\\n\");\n  System.err.println(\"\\n 自定义填充 testType=3 填充成功！\" + userMapper.selectById(18L).toString());\n  session.commit();\n  rlt=userMapper.deleteById(id);\n  System.err.println(\"---------deleteById------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  Map<String,Object> columnMap=new HashMap<>();\n  columnMap.put(\"name\",\"deleteByMap\");\n  columnMap.put(\"age\",null);\n  rlt=userMapper.deleteByMap(columnMap);\n  System.err.println(\"---------deleteByMap------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<Long> il=new ArrayList<>();\n  il.add(16L);\n  il.add(17L);\n  rlt=userMapper.deleteBatchIds(il);\n  System.err.println(\"---------deleteBatchIds------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  rlt=userMapper.delete(new EntityWrapper<>(new User(14L,\"delname\")));\n  System.err.println(\"--------------delete------------------ result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"MybatisPlus\"));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"update all column\",12,12));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.update(new User(\"55\",55,5),new EntityWrapper<>(new User(15L,\"5\")));\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  EntityWrapper<User> ew1=new EntityWrapper<>();\n  ew1.addFilter(\"test_id={0} AND name={1}\",15L,\"55\");\n  rlt=userMapper.update(new User(\"00\"),ew1);\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<User> userList=new ArrayList<>();\n  userList.add(new User(11L,\"updateBatchById-1\",1,1));\n  userList.add(new User(12L,\"updateBatchById-2\",2,1));\n  userList.add(new User(13L,\"updateBatchById-3\",3,1));\n  for (  User u : userList) {\n    rlt=userMapper.updateById(u);\n  }\n  System.err.println(\"------------------updateBatchById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  System.err.println(\"\\n------------------selectById----------------------\");\n  User user=userMapper.selectById(12L);\n  print(user);\n  System.err.println(\"\\n------------------selectBatchIds----------------------\");\n  List<Long> idList=new ArrayList<>();\n  idList.add(11L);\n  idList.add(12L);\n  List<User> ul0=userMapper.selectBatchIds(idList);\n  for (  User anUl0 : ul0) {\n    print(anUl0);\n  }\n  System.err.println(\"\\n------------------selectByMap-----满足 map 条件的数据----\");\n  Map<String,Object> cm=new HashMap<>();\n  cm.put(\"test_type\",1);\n  cm.put(\"1\",1);\n  List<User> ul1=userMapper.selectByMap(cm);\n  for (  User anUl1 : ul1) {\n    print(anUl1);\n  }\n  System.err.println(\"\\n------------------selectOne----------------------\");\n  User userOne=userMapper.selectOne(new User(\"abc\"));\n  print(userOne);\n  System.err.println(\"\\n------------------selectCount----------------------\");\n  System.err.println(\"查询 type=1 总记录数：\" + userMapper.selectCount(new EntityWrapper<>(new User(1))));\n  System.err.println(\"总记录数：\" + userMapper.selectCount(null));\n  System.err.println(\"\\n------------------selectList-----所有数据----id--DESC--排序----\");\n  List<User> ul2=userMapper.selectList(new EntityWrapper<User>(null,\"age,name\"));\n  for (  User anUl2 : ul2) {\n    print(anUl2);\n  }\n  System.err.println(\"\\n------------------list 分页查询 ----查询 testType = 1 的所有数据--id--DESC--排序--------\");\n  Page<User> page=new Page<>(1,2);\n  EntityWrapper<User> ew=new EntityWrapper<>(new User(1));\n  ew.setSqlSelect(\"age,name\");\n  ew.where(\"name like {0}\",\"'%dateBatch%'\").and(\"age={0}\",3).orderBy(\"age,name\",true);\n  List<User> paginList=userMapper.selectPage(page,ew);\n  page.setRecords(paginList);\n  for (int i=0; i < page.getRecords().size(); i++) {\n    print(page.getRecords().get(i));\n  }\n  System.err.println(\" 翻页：\" + page.toString());\n  System.err.println(\"\\n---------------xml---selectListRow 分页查询，不查询总数（此时可自定义 count 查询）----无查询条件--------------\");\n  List<User> rowList=userMapper.selectListRow(new Pagination(0,2,false));\n  for (  User aRowList : rowList) {\n    print(aRowList);\n  }\n  System.err.println(\" selectList EntityWrapper == null \\n\");\n  paginList=userMapper.selectList(null);\n  for (  User aPaginList : paginList) {\n    print(aPaginList);\n  }\n  rlt=userMapper.deleteAll();\n  System.err.println(\"清空测试数据！ rlt=\" + rlt);\n  session.commit();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1197,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 155,
        "startColumnNumber" : 8,
        "endLineNumber" : 155,
        "endColumnNumber" : 89
      },
      "nodeContext" : "System.err.println(\"\\n--------------insertBatch----------------\" + rlt + \"\\n\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "rlt",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 167,
      "startColumnNumber" : 88,
      "endLineNumber" : 167,
      "endColumnNumber" : 91
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 167,
        "startColumnNumber" : 27,
        "endLineNumber" : 167,
        "endColumnNumber" : 100
      },
      "nodeContext" : "\"---------deleteById------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 167,
        "startColumnNumber" : 8,
        "endLineNumber" : 167,
        "endColumnNumber" : 101
      },
      "nodeContext" : "System.err.println(\"---------deleteById------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 167,
        "startColumnNumber" : 8,
        "endLineNumber" : 167,
        "endColumnNumber" : 102
      },
      "nodeContext" : "System.err.println(\"---------deleteById------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 8101,
        "startLineNumber" : 76,
        "startColumnNumber" : 27,
        "endLineNumber" : 309,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SqlSession session=this.sqlSessionFactory().openSession();\n  UserMapper userMapper=session.getMapper(UserMapper.class);\n  System.err.println(\" debug run 查询执行 user 表数据变化！ \");\n  userMapper.deleteAll();\n  Role role=new Role();\n  role.setId(IdWorker.getId());\n  role.setName(\"admin\");\n  User userA=new User();\n  userA.setId(IdWorker.getId());\n  userA.setName(\"junyu_shi\");\n  userA.setAge(1);\n  userA.setDesc(\"测试一把\");\n  userA.setTestType(1);\n  userA.setRole(role);\n  int rlt=userMapper.insert(userA);\n  User whereUser=userMapper.selectOne(userA);\n  print(whereUser);\n  userA.setAge(18);\n  userMapper.updateById(userA);\n  userMapper.delete(new EntityWrapper<>(userA));\n  System.err.println(\"--------- @TableField el() --------- \" + rlt);\n  rlt=userMapper.insertInjector(new User(1L,\"1\",1,1));\n  System.err.println(\"--------- insertInjector --------- \" + rlt);\n  User cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  long id=IdWorker.getId();\n  rlt=userMapper.insert(new User(id,\"abc\",18,1));\n  System.err.println(\"\\n--------------insert-------\" + rlt);\n  sleep();\n  rlt=userMapper.insert(new User(18));\n  System.err.println(\"\\n----------测试 name 字段忽略验证----insert-------\" + rlt);\n  sleep();\n  List<User> ul=new ArrayList<>();\n  ul.add(new User(11L,\"1\",1,0));\n  ul.add(new User(12L,\"2\",2,1));\n  ul.add(new User(13L,\"3\",3,1));\n  ul.add(new User(14L,\"delname\",4,0));\n  ul.add(new User(15L,\"5\",5,1));\n  ul.add(new User(16L,\"6\",6,0));\n  ul.add(new User(17L,7));\n  ul.add(new User(18L,8));\n  ul.add(new User(19L,9));\n  ul.add(new User(7));\n  ul.add(new User(20L,\"deleteByMap\",7,0));\n  ul.add(new User(\"8\",8,1));\n  ul.add(new User(\"9\",9,1));\n  for (  User u : ul) {\n    rlt=userMapper.insert(u);\n  }\n  System.err.println(\"\\n--------------insertBatch----------------\" + rlt + \"\\n\\n\");\n  System.err.println(\"\\n 自定义填充 testType=3 填充成功！\" + userMapper.selectById(18L).toString());\n  session.commit();\n  rlt=userMapper.deleteById(id);\n  System.err.println(\"---------deleteById------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  Map<String,Object> columnMap=new HashMap<>();\n  columnMap.put(\"name\",\"deleteByMap\");\n  columnMap.put(\"age\",null);\n  rlt=userMapper.deleteByMap(columnMap);\n  System.err.println(\"---------deleteByMap------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<Long> il=new ArrayList<>();\n  il.add(16L);\n  il.add(17L);\n  rlt=userMapper.deleteBatchIds(il);\n  System.err.println(\"---------deleteBatchIds------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  rlt=userMapper.delete(new EntityWrapper<>(new User(14L,\"delname\")));\n  System.err.println(\"--------------delete------------------ result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"MybatisPlus\"));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"update all column\",12,12));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.update(new User(\"55\",55,5),new EntityWrapper<>(new User(15L,\"5\")));\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  EntityWrapper<User> ew1=new EntityWrapper<>();\n  ew1.addFilter(\"test_id={0} AND name={1}\",15L,\"55\");\n  rlt=userMapper.update(new User(\"00\"),ew1);\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<User> userList=new ArrayList<>();\n  userList.add(new User(11L,\"updateBatchById-1\",1,1));\n  userList.add(new User(12L,\"updateBatchById-2\",2,1));\n  userList.add(new User(13L,\"updateBatchById-3\",3,1));\n  for (  User u : userList) {\n    rlt=userMapper.updateById(u);\n  }\n  System.err.println(\"------------------updateBatchById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  System.err.println(\"\\n------------------selectById----------------------\");\n  User user=userMapper.selectById(12L);\n  print(user);\n  System.err.println(\"\\n------------------selectBatchIds----------------------\");\n  List<Long> idList=new ArrayList<>();\n  idList.add(11L);\n  idList.add(12L);\n  List<User> ul0=userMapper.selectBatchIds(idList);\n  for (  User anUl0 : ul0) {\n    print(anUl0);\n  }\n  System.err.println(\"\\n------------------selectByMap-----满足 map 条件的数据----\");\n  Map<String,Object> cm=new HashMap<>();\n  cm.put(\"test_type\",1);\n  cm.put(\"1\",1);\n  List<User> ul1=userMapper.selectByMap(cm);\n  for (  User anUl1 : ul1) {\n    print(anUl1);\n  }\n  System.err.println(\"\\n------------------selectOne----------------------\");\n  User userOne=userMapper.selectOne(new User(\"abc\"));\n  print(userOne);\n  System.err.println(\"\\n------------------selectCount----------------------\");\n  System.err.println(\"查询 type=1 总记录数：\" + userMapper.selectCount(new EntityWrapper<>(new User(1))));\n  System.err.println(\"总记录数：\" + userMapper.selectCount(null));\n  System.err.println(\"\\n------------------selectList-----所有数据----id--DESC--排序----\");\n  List<User> ul2=userMapper.selectList(new EntityWrapper<User>(null,\"age,name\"));\n  for (  User anUl2 : ul2) {\n    print(anUl2);\n  }\n  System.err.println(\"\\n------------------list 分页查询 ----查询 testType = 1 的所有数据--id--DESC--排序--------\");\n  Page<User> page=new Page<>(1,2);\n  EntityWrapper<User> ew=new EntityWrapper<>(new User(1));\n  ew.setSqlSelect(\"age,name\");\n  ew.where(\"name like {0}\",\"'%dateBatch%'\").and(\"age={0}\",3).orderBy(\"age,name\",true);\n  List<User> paginList=userMapper.selectPage(page,ew);\n  page.setRecords(paginList);\n  for (int i=0; i < page.getRecords().size(); i++) {\n    print(page.getRecords().get(i));\n  }\n  System.err.println(\" 翻页：\" + page.toString());\n  System.err.println(\"\\n---------------xml---selectListRow 分页查询，不查询总数（此时可自定义 count 查询）----无查询条件--------------\");\n  List<User> rowList=userMapper.selectListRow(new Pagination(0,2,false));\n  for (  User aRowList : rowList) {\n    print(aRowList);\n  }\n  System.err.println(\" selectList EntityWrapper == null \\n\");\n  paginList=userMapper.selectList(null);\n  for (  User aPaginList : paginList) {\n    print(aPaginList);\n  }\n  rlt=userMapper.deleteAll();\n  System.err.println(\"清空测试数据！ rlt=\" + rlt);\n  session.commit();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1190,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 8394,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 309,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * RUN 测试 <p> <p> MybatisPlus 加载 SQL 顺序： </p> 1、加载XML中的SQL<br> 2、加载sqlProvider中的SQL<br> 3、xmlSql 与 sqlProvider不能包含相同的SQL<br> <br> 调整后的SQL优先级：xmlSql > sqlProvider > crudSql <br>\n */\n@Test public void crudTest(){\n  SqlSession session=this.sqlSessionFactory().openSession();\n  UserMapper userMapper=session.getMapper(UserMapper.class);\n  System.err.println(\" debug run 查询执行 user 表数据变化！ \");\n  userMapper.deleteAll();\n  Role role=new Role();\n  role.setId(IdWorker.getId());\n  role.setName(\"admin\");\n  User userA=new User();\n  userA.setId(IdWorker.getId());\n  userA.setName(\"junyu_shi\");\n  userA.setAge(1);\n  userA.setDesc(\"测试一把\");\n  userA.setTestType(1);\n  userA.setRole(role);\n  int rlt=userMapper.insert(userA);\n  User whereUser=userMapper.selectOne(userA);\n  print(whereUser);\n  userA.setAge(18);\n  userMapper.updateById(userA);\n  userMapper.delete(new EntityWrapper<>(userA));\n  System.err.println(\"--------- @TableField el() --------- \" + rlt);\n  rlt=userMapper.insertInjector(new User(1L,\"1\",1,1));\n  System.err.println(\"--------- insertInjector --------- \" + rlt);\n  User cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  long id=IdWorker.getId();\n  rlt=userMapper.insert(new User(id,\"abc\",18,1));\n  System.err.println(\"\\n--------------insert-------\" + rlt);\n  sleep();\n  rlt=userMapper.insert(new User(18));\n  System.err.println(\"\\n----------测试 name 字段忽略验证----insert-------\" + rlt);\n  sleep();\n  List<User> ul=new ArrayList<>();\n  ul.add(new User(11L,\"1\",1,0));\n  ul.add(new User(12L,\"2\",2,1));\n  ul.add(new User(13L,\"3\",3,1));\n  ul.add(new User(14L,\"delname\",4,0));\n  ul.add(new User(15L,\"5\",5,1));\n  ul.add(new User(16L,\"6\",6,0));\n  ul.add(new User(17L,7));\n  ul.add(new User(18L,8));\n  ul.add(new User(19L,9));\n  ul.add(new User(7));\n  ul.add(new User(20L,\"deleteByMap\",7,0));\n  ul.add(new User(\"8\",8,1));\n  ul.add(new User(\"9\",9,1));\n  for (  User u : ul) {\n    rlt=userMapper.insert(u);\n  }\n  System.err.println(\"\\n--------------insertBatch----------------\" + rlt + \"\\n\\n\");\n  System.err.println(\"\\n 自定义填充 testType=3 填充成功！\" + userMapper.selectById(18L).toString());\n  session.commit();\n  rlt=userMapper.deleteById(id);\n  System.err.println(\"---------deleteById------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  Map<String,Object> columnMap=new HashMap<>();\n  columnMap.put(\"name\",\"deleteByMap\");\n  columnMap.put(\"age\",null);\n  rlt=userMapper.deleteByMap(columnMap);\n  System.err.println(\"---------deleteByMap------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<Long> il=new ArrayList<>();\n  il.add(16L);\n  il.add(17L);\n  rlt=userMapper.deleteBatchIds(il);\n  System.err.println(\"---------deleteBatchIds------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  rlt=userMapper.delete(new EntityWrapper<>(new User(14L,\"delname\")));\n  System.err.println(\"--------------delete------------------ result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"MybatisPlus\"));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"update all column\",12,12));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.update(new User(\"55\",55,5),new EntityWrapper<>(new User(15L,\"5\")));\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  EntityWrapper<User> ew1=new EntityWrapper<>();\n  ew1.addFilter(\"test_id={0} AND name={1}\",15L,\"55\");\n  rlt=userMapper.update(new User(\"00\"),ew1);\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<User> userList=new ArrayList<>();\n  userList.add(new User(11L,\"updateBatchById-1\",1,1));\n  userList.add(new User(12L,\"updateBatchById-2\",2,1));\n  userList.add(new User(13L,\"updateBatchById-3\",3,1));\n  for (  User u : userList) {\n    rlt=userMapper.updateById(u);\n  }\n  System.err.println(\"------------------updateBatchById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  System.err.println(\"\\n------------------selectById----------------------\");\n  User user=userMapper.selectById(12L);\n  print(user);\n  System.err.println(\"\\n------------------selectBatchIds----------------------\");\n  List<Long> idList=new ArrayList<>();\n  idList.add(11L);\n  idList.add(12L);\n  List<User> ul0=userMapper.selectBatchIds(idList);\n  for (  User anUl0 : ul0) {\n    print(anUl0);\n  }\n  System.err.println(\"\\n------------------selectByMap-----满足 map 条件的数据----\");\n  Map<String,Object> cm=new HashMap<>();\n  cm.put(\"test_type\",1);\n  cm.put(\"1\",1);\n  List<User> ul1=userMapper.selectByMap(cm);\n  for (  User anUl1 : ul1) {\n    print(anUl1);\n  }\n  System.err.println(\"\\n------------------selectOne----------------------\");\n  User userOne=userMapper.selectOne(new User(\"abc\"));\n  print(userOne);\n  System.err.println(\"\\n------------------selectCount----------------------\");\n  System.err.println(\"查询 type=1 总记录数：\" + userMapper.selectCount(new EntityWrapper<>(new User(1))));\n  System.err.println(\"总记录数：\" + userMapper.selectCount(null));\n  System.err.println(\"\\n------------------selectList-----所有数据----id--DESC--排序----\");\n  List<User> ul2=userMapper.selectList(new EntityWrapper<User>(null,\"age,name\"));\n  for (  User anUl2 : ul2) {\n    print(anUl2);\n  }\n  System.err.println(\"\\n------------------list 分页查询 ----查询 testType = 1 的所有数据--id--DESC--排序--------\");\n  Page<User> page=new Page<>(1,2);\n  EntityWrapper<User> ew=new EntityWrapper<>(new User(1));\n  ew.setSqlSelect(\"age,name\");\n  ew.where(\"name like {0}\",\"'%dateBatch%'\").and(\"age={0}\",3).orderBy(\"age,name\",true);\n  List<User> paginList=userMapper.selectPage(page,ew);\n  page.setRecords(paginList);\n  for (int i=0; i < page.getRecords().size(); i++) {\n    print(page.getRecords().get(i));\n  }\n  System.err.println(\" 翻页：\" + page.toString());\n  System.err.println(\"\\n---------------xml---selectListRow 分页查询，不查询总数（此时可自定义 count 查询）----无查询条件--------------\");\n  List<User> rowList=userMapper.selectListRow(new Pagination(0,2,false));\n  for (  User aRowList : rowList) {\n    print(aRowList);\n  }\n  System.err.println(\" selectList EntityWrapper == null \\n\");\n  paginList=userMapper.selectList(null);\n  for (  User aPaginList : paginList) {\n    print(aPaginList);\n  }\n  rlt=userMapper.deleteAll();\n  System.err.println(\"清空测试数据！ rlt=\" + rlt);\n  session.commit();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1197,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 167,
        "startColumnNumber" : 8,
        "endLineNumber" : 167,
        "endColumnNumber" : 102
      },
      "nodeContext" : "System.err.println(\"---------deleteById------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "rlt",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 174,
      "startColumnNumber" : 67,
      "endLineNumber" : 174,
      "endColumnNumber" : 70
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 174,
        "startColumnNumber" : 27,
        "endLineNumber" : 174,
        "endColumnNumber" : 79
      },
      "nodeContext" : "\"---------deleteByMap------- result=\" + rlt + \"\\n\\n\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 174,
        "startColumnNumber" : 8,
        "endLineNumber" : 174,
        "endColumnNumber" : 80
      },
      "nodeContext" : "System.err.println(\"---------deleteByMap------- result=\" + rlt + \"\\n\\n\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 174,
        "startColumnNumber" : 8,
        "endLineNumber" : 174,
        "endColumnNumber" : 81
      },
      "nodeContext" : "System.err.println(\"---------deleteByMap------- result=\" + rlt + \"\\n\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 8101,
        "startLineNumber" : 76,
        "startColumnNumber" : 27,
        "endLineNumber" : 309,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SqlSession session=this.sqlSessionFactory().openSession();\n  UserMapper userMapper=session.getMapper(UserMapper.class);\n  System.err.println(\" debug run 查询执行 user 表数据变化！ \");\n  userMapper.deleteAll();\n  Role role=new Role();\n  role.setId(IdWorker.getId());\n  role.setName(\"admin\");\n  User userA=new User();\n  userA.setId(IdWorker.getId());\n  userA.setName(\"junyu_shi\");\n  userA.setAge(1);\n  userA.setDesc(\"测试一把\");\n  userA.setTestType(1);\n  userA.setRole(role);\n  int rlt=userMapper.insert(userA);\n  User whereUser=userMapper.selectOne(userA);\n  print(whereUser);\n  userA.setAge(18);\n  userMapper.updateById(userA);\n  userMapper.delete(new EntityWrapper<>(userA));\n  System.err.println(\"--------- @TableField el() --------- \" + rlt);\n  rlt=userMapper.insertInjector(new User(1L,\"1\",1,1));\n  System.err.println(\"--------- insertInjector --------- \" + rlt);\n  User cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  long id=IdWorker.getId();\n  rlt=userMapper.insert(new User(id,\"abc\",18,1));\n  System.err.println(\"\\n--------------insert-------\" + rlt);\n  sleep();\n  rlt=userMapper.insert(new User(18));\n  System.err.println(\"\\n----------测试 name 字段忽略验证----insert-------\" + rlt);\n  sleep();\n  List<User> ul=new ArrayList<>();\n  ul.add(new User(11L,\"1\",1,0));\n  ul.add(new User(12L,\"2\",2,1));\n  ul.add(new User(13L,\"3\",3,1));\n  ul.add(new User(14L,\"delname\",4,0));\n  ul.add(new User(15L,\"5\",5,1));\n  ul.add(new User(16L,\"6\",6,0));\n  ul.add(new User(17L,7));\n  ul.add(new User(18L,8));\n  ul.add(new User(19L,9));\n  ul.add(new User(7));\n  ul.add(new User(20L,\"deleteByMap\",7,0));\n  ul.add(new User(\"8\",8,1));\n  ul.add(new User(\"9\",9,1));\n  for (  User u : ul) {\n    rlt=userMapper.insert(u);\n  }\n  System.err.println(\"\\n--------------insertBatch----------------\" + rlt + \"\\n\\n\");\n  System.err.println(\"\\n 自定义填充 testType=3 填充成功！\" + userMapper.selectById(18L).toString());\n  session.commit();\n  rlt=userMapper.deleteById(id);\n  System.err.println(\"---------deleteById------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  Map<String,Object> columnMap=new HashMap<>();\n  columnMap.put(\"name\",\"deleteByMap\");\n  columnMap.put(\"age\",null);\n  rlt=userMapper.deleteByMap(columnMap);\n  System.err.println(\"---------deleteByMap------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<Long> il=new ArrayList<>();\n  il.add(16L);\n  il.add(17L);\n  rlt=userMapper.deleteBatchIds(il);\n  System.err.println(\"---------deleteBatchIds------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  rlt=userMapper.delete(new EntityWrapper<>(new User(14L,\"delname\")));\n  System.err.println(\"--------------delete------------------ result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"MybatisPlus\"));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"update all column\",12,12));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.update(new User(\"55\",55,5),new EntityWrapper<>(new User(15L,\"5\")));\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  EntityWrapper<User> ew1=new EntityWrapper<>();\n  ew1.addFilter(\"test_id={0} AND name={1}\",15L,\"55\");\n  rlt=userMapper.update(new User(\"00\"),ew1);\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<User> userList=new ArrayList<>();\n  userList.add(new User(11L,\"updateBatchById-1\",1,1));\n  userList.add(new User(12L,\"updateBatchById-2\",2,1));\n  userList.add(new User(13L,\"updateBatchById-3\",3,1));\n  for (  User u : userList) {\n    rlt=userMapper.updateById(u);\n  }\n  System.err.println(\"------------------updateBatchById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  System.err.println(\"\\n------------------selectById----------------------\");\n  User user=userMapper.selectById(12L);\n  print(user);\n  System.err.println(\"\\n------------------selectBatchIds----------------------\");\n  List<Long> idList=new ArrayList<>();\n  idList.add(11L);\n  idList.add(12L);\n  List<User> ul0=userMapper.selectBatchIds(idList);\n  for (  User anUl0 : ul0) {\n    print(anUl0);\n  }\n  System.err.println(\"\\n------------------selectByMap-----满足 map 条件的数据----\");\n  Map<String,Object> cm=new HashMap<>();\n  cm.put(\"test_type\",1);\n  cm.put(\"1\",1);\n  List<User> ul1=userMapper.selectByMap(cm);\n  for (  User anUl1 : ul1) {\n    print(anUl1);\n  }\n  System.err.println(\"\\n------------------selectOne----------------------\");\n  User userOne=userMapper.selectOne(new User(\"abc\"));\n  print(userOne);\n  System.err.println(\"\\n------------------selectCount----------------------\");\n  System.err.println(\"查询 type=1 总记录数：\" + userMapper.selectCount(new EntityWrapper<>(new User(1))));\n  System.err.println(\"总记录数：\" + userMapper.selectCount(null));\n  System.err.println(\"\\n------------------selectList-----所有数据----id--DESC--排序----\");\n  List<User> ul2=userMapper.selectList(new EntityWrapper<User>(null,\"age,name\"));\n  for (  User anUl2 : ul2) {\n    print(anUl2);\n  }\n  System.err.println(\"\\n------------------list 分页查询 ----查询 testType = 1 的所有数据--id--DESC--排序--------\");\n  Page<User> page=new Page<>(1,2);\n  EntityWrapper<User> ew=new EntityWrapper<>(new User(1));\n  ew.setSqlSelect(\"age,name\");\n  ew.where(\"name like {0}\",\"'%dateBatch%'\").and(\"age={0}\",3).orderBy(\"age,name\",true);\n  List<User> paginList=userMapper.selectPage(page,ew);\n  page.setRecords(paginList);\n  for (int i=0; i < page.getRecords().size(); i++) {\n    print(page.getRecords().get(i));\n  }\n  System.err.println(\" 翻页：\" + page.toString());\n  System.err.println(\"\\n---------------xml---selectListRow 分页查询，不查询总数（此时可自定义 count 查询）----无查询条件--------------\");\n  List<User> rowList=userMapper.selectListRow(new Pagination(0,2,false));\n  for (  User aRowList : rowList) {\n    print(aRowList);\n  }\n  System.err.println(\" selectList EntityWrapper == null \\n\");\n  paginList=userMapper.selectList(null);\n  for (  User aPaginList : paginList) {\n    print(aPaginList);\n  }\n  rlt=userMapper.deleteAll();\n  System.err.println(\"清空测试数据！ rlt=\" + rlt);\n  session.commit();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1190,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 8394,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 309,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * RUN 测试 <p> <p> MybatisPlus 加载 SQL 顺序： </p> 1、加载XML中的SQL<br> 2、加载sqlProvider中的SQL<br> 3、xmlSql 与 sqlProvider不能包含相同的SQL<br> <br> 调整后的SQL优先级：xmlSql > sqlProvider > crudSql <br>\n */\n@Test public void crudTest(){\n  SqlSession session=this.sqlSessionFactory().openSession();\n  UserMapper userMapper=session.getMapper(UserMapper.class);\n  System.err.println(\" debug run 查询执行 user 表数据变化！ \");\n  userMapper.deleteAll();\n  Role role=new Role();\n  role.setId(IdWorker.getId());\n  role.setName(\"admin\");\n  User userA=new User();\n  userA.setId(IdWorker.getId());\n  userA.setName(\"junyu_shi\");\n  userA.setAge(1);\n  userA.setDesc(\"测试一把\");\n  userA.setTestType(1);\n  userA.setRole(role);\n  int rlt=userMapper.insert(userA);\n  User whereUser=userMapper.selectOne(userA);\n  print(whereUser);\n  userA.setAge(18);\n  userMapper.updateById(userA);\n  userMapper.delete(new EntityWrapper<>(userA));\n  System.err.println(\"--------- @TableField el() --------- \" + rlt);\n  rlt=userMapper.insertInjector(new User(1L,\"1\",1,1));\n  System.err.println(\"--------- insertInjector --------- \" + rlt);\n  User cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  long id=IdWorker.getId();\n  rlt=userMapper.insert(new User(id,\"abc\",18,1));\n  System.err.println(\"\\n--------------insert-------\" + rlt);\n  sleep();\n  rlt=userMapper.insert(new User(18));\n  System.err.println(\"\\n----------测试 name 字段忽略验证----insert-------\" + rlt);\n  sleep();\n  List<User> ul=new ArrayList<>();\n  ul.add(new User(11L,\"1\",1,0));\n  ul.add(new User(12L,\"2\",2,1));\n  ul.add(new User(13L,\"3\",3,1));\n  ul.add(new User(14L,\"delname\",4,0));\n  ul.add(new User(15L,\"5\",5,1));\n  ul.add(new User(16L,\"6\",6,0));\n  ul.add(new User(17L,7));\n  ul.add(new User(18L,8));\n  ul.add(new User(19L,9));\n  ul.add(new User(7));\n  ul.add(new User(20L,\"deleteByMap\",7,0));\n  ul.add(new User(\"8\",8,1));\n  ul.add(new User(\"9\",9,1));\n  for (  User u : ul) {\n    rlt=userMapper.insert(u);\n  }\n  System.err.println(\"\\n--------------insertBatch----------------\" + rlt + \"\\n\\n\");\n  System.err.println(\"\\n 自定义填充 testType=3 填充成功！\" + userMapper.selectById(18L).toString());\n  session.commit();\n  rlt=userMapper.deleteById(id);\n  System.err.println(\"---------deleteById------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  Map<String,Object> columnMap=new HashMap<>();\n  columnMap.put(\"name\",\"deleteByMap\");\n  columnMap.put(\"age\",null);\n  rlt=userMapper.deleteByMap(columnMap);\n  System.err.println(\"---------deleteByMap------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<Long> il=new ArrayList<>();\n  il.add(16L);\n  il.add(17L);\n  rlt=userMapper.deleteBatchIds(il);\n  System.err.println(\"---------deleteBatchIds------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  rlt=userMapper.delete(new EntityWrapper<>(new User(14L,\"delname\")));\n  System.err.println(\"--------------delete------------------ result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"MybatisPlus\"));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"update all column\",12,12));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.update(new User(\"55\",55,5),new EntityWrapper<>(new User(15L,\"5\")));\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  EntityWrapper<User> ew1=new EntityWrapper<>();\n  ew1.addFilter(\"test_id={0} AND name={1}\",15L,\"55\");\n  rlt=userMapper.update(new User(\"00\"),ew1);\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<User> userList=new ArrayList<>();\n  userList.add(new User(11L,\"updateBatchById-1\",1,1));\n  userList.add(new User(12L,\"updateBatchById-2\",2,1));\n  userList.add(new User(13L,\"updateBatchById-3\",3,1));\n  for (  User u : userList) {\n    rlt=userMapper.updateById(u);\n  }\n  System.err.println(\"------------------updateBatchById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  System.err.println(\"\\n------------------selectById----------------------\");\n  User user=userMapper.selectById(12L);\n  print(user);\n  System.err.println(\"\\n------------------selectBatchIds----------------------\");\n  List<Long> idList=new ArrayList<>();\n  idList.add(11L);\n  idList.add(12L);\n  List<User> ul0=userMapper.selectBatchIds(idList);\n  for (  User anUl0 : ul0) {\n    print(anUl0);\n  }\n  System.err.println(\"\\n------------------selectByMap-----满足 map 条件的数据----\");\n  Map<String,Object> cm=new HashMap<>();\n  cm.put(\"test_type\",1);\n  cm.put(\"1\",1);\n  List<User> ul1=userMapper.selectByMap(cm);\n  for (  User anUl1 : ul1) {\n    print(anUl1);\n  }\n  System.err.println(\"\\n------------------selectOne----------------------\");\n  User userOne=userMapper.selectOne(new User(\"abc\"));\n  print(userOne);\n  System.err.println(\"\\n------------------selectCount----------------------\");\n  System.err.println(\"查询 type=1 总记录数：\" + userMapper.selectCount(new EntityWrapper<>(new User(1))));\n  System.err.println(\"总记录数：\" + userMapper.selectCount(null));\n  System.err.println(\"\\n------------------selectList-----所有数据----id--DESC--排序----\");\n  List<User> ul2=userMapper.selectList(new EntityWrapper<User>(null,\"age,name\"));\n  for (  User anUl2 : ul2) {\n    print(anUl2);\n  }\n  System.err.println(\"\\n------------------list 分页查询 ----查询 testType = 1 的所有数据--id--DESC--排序--------\");\n  Page<User> page=new Page<>(1,2);\n  EntityWrapper<User> ew=new EntityWrapper<>(new User(1));\n  ew.setSqlSelect(\"age,name\");\n  ew.where(\"name like {0}\",\"'%dateBatch%'\").and(\"age={0}\",3).orderBy(\"age,name\",true);\n  List<User> paginList=userMapper.selectPage(page,ew);\n  page.setRecords(paginList);\n  for (int i=0; i < page.getRecords().size(); i++) {\n    print(page.getRecords().get(i));\n  }\n  System.err.println(\" 翻页：\" + page.toString());\n  System.err.println(\"\\n---------------xml---selectListRow 分页查询，不查询总数（此时可自定义 count 查询）----无查询条件--------------\");\n  List<User> rowList=userMapper.selectListRow(new Pagination(0,2,false));\n  for (  User aRowList : rowList) {\n    print(aRowList);\n  }\n  System.err.println(\" selectList EntityWrapper == null \\n\");\n  paginList=userMapper.selectList(null);\n  for (  User aPaginList : paginList) {\n    print(aPaginList);\n  }\n  rlt=userMapper.deleteAll();\n  System.err.println(\"清空测试数据！ rlt=\" + rlt);\n  session.commit();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1197,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 174,
        "startColumnNumber" : 8,
        "endLineNumber" : 174,
        "endColumnNumber" : 81
      },
      "nodeContext" : "System.err.println(\"---------deleteByMap------- result=\" + rlt + \"\\n\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "rlt",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 181,
      "startColumnNumber" : 92,
      "endLineNumber" : 181,
      "endColumnNumber" : 95
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 181,
        "startColumnNumber" : 27,
        "endLineNumber" : 181,
        "endColumnNumber" : 104
      },
      "nodeContext" : "\"---------deleteBatchIds------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 181,
        "startColumnNumber" : 8,
        "endLineNumber" : 181,
        "endColumnNumber" : 105
      },
      "nodeContext" : "System.err.println(\"---------deleteBatchIds------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 181,
        "startColumnNumber" : 8,
        "endLineNumber" : 181,
        "endColumnNumber" : 106
      },
      "nodeContext" : "System.err.println(\"---------deleteBatchIds------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 8101,
        "startLineNumber" : 76,
        "startColumnNumber" : 27,
        "endLineNumber" : 309,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SqlSession session=this.sqlSessionFactory().openSession();\n  UserMapper userMapper=session.getMapper(UserMapper.class);\n  System.err.println(\" debug run 查询执行 user 表数据变化！ \");\n  userMapper.deleteAll();\n  Role role=new Role();\n  role.setId(IdWorker.getId());\n  role.setName(\"admin\");\n  User userA=new User();\n  userA.setId(IdWorker.getId());\n  userA.setName(\"junyu_shi\");\n  userA.setAge(1);\n  userA.setDesc(\"测试一把\");\n  userA.setTestType(1);\n  userA.setRole(role);\n  int rlt=userMapper.insert(userA);\n  User whereUser=userMapper.selectOne(userA);\n  print(whereUser);\n  userA.setAge(18);\n  userMapper.updateById(userA);\n  userMapper.delete(new EntityWrapper<>(userA));\n  System.err.println(\"--------- @TableField el() --------- \" + rlt);\n  rlt=userMapper.insertInjector(new User(1L,\"1\",1,1));\n  System.err.println(\"--------- insertInjector --------- \" + rlt);\n  User cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  long id=IdWorker.getId();\n  rlt=userMapper.insert(new User(id,\"abc\",18,1));\n  System.err.println(\"\\n--------------insert-------\" + rlt);\n  sleep();\n  rlt=userMapper.insert(new User(18));\n  System.err.println(\"\\n----------测试 name 字段忽略验证----insert-------\" + rlt);\n  sleep();\n  List<User> ul=new ArrayList<>();\n  ul.add(new User(11L,\"1\",1,0));\n  ul.add(new User(12L,\"2\",2,1));\n  ul.add(new User(13L,\"3\",3,1));\n  ul.add(new User(14L,\"delname\",4,0));\n  ul.add(new User(15L,\"5\",5,1));\n  ul.add(new User(16L,\"6\",6,0));\n  ul.add(new User(17L,7));\n  ul.add(new User(18L,8));\n  ul.add(new User(19L,9));\n  ul.add(new User(7));\n  ul.add(new User(20L,\"deleteByMap\",7,0));\n  ul.add(new User(\"8\",8,1));\n  ul.add(new User(\"9\",9,1));\n  for (  User u : ul) {\n    rlt=userMapper.insert(u);\n  }\n  System.err.println(\"\\n--------------insertBatch----------------\" + rlt + \"\\n\\n\");\n  System.err.println(\"\\n 自定义填充 testType=3 填充成功！\" + userMapper.selectById(18L).toString());\n  session.commit();\n  rlt=userMapper.deleteById(id);\n  System.err.println(\"---------deleteById------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  Map<String,Object> columnMap=new HashMap<>();\n  columnMap.put(\"name\",\"deleteByMap\");\n  columnMap.put(\"age\",null);\n  rlt=userMapper.deleteByMap(columnMap);\n  System.err.println(\"---------deleteByMap------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<Long> il=new ArrayList<>();\n  il.add(16L);\n  il.add(17L);\n  rlt=userMapper.deleteBatchIds(il);\n  System.err.println(\"---------deleteBatchIds------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  rlt=userMapper.delete(new EntityWrapper<>(new User(14L,\"delname\")));\n  System.err.println(\"--------------delete------------------ result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"MybatisPlus\"));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"update all column\",12,12));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.update(new User(\"55\",55,5),new EntityWrapper<>(new User(15L,\"5\")));\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  EntityWrapper<User> ew1=new EntityWrapper<>();\n  ew1.addFilter(\"test_id={0} AND name={1}\",15L,\"55\");\n  rlt=userMapper.update(new User(\"00\"),ew1);\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<User> userList=new ArrayList<>();\n  userList.add(new User(11L,\"updateBatchById-1\",1,1));\n  userList.add(new User(12L,\"updateBatchById-2\",2,1));\n  userList.add(new User(13L,\"updateBatchById-3\",3,1));\n  for (  User u : userList) {\n    rlt=userMapper.updateById(u);\n  }\n  System.err.println(\"------------------updateBatchById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  System.err.println(\"\\n------------------selectById----------------------\");\n  User user=userMapper.selectById(12L);\n  print(user);\n  System.err.println(\"\\n------------------selectBatchIds----------------------\");\n  List<Long> idList=new ArrayList<>();\n  idList.add(11L);\n  idList.add(12L);\n  List<User> ul0=userMapper.selectBatchIds(idList);\n  for (  User anUl0 : ul0) {\n    print(anUl0);\n  }\n  System.err.println(\"\\n------------------selectByMap-----满足 map 条件的数据----\");\n  Map<String,Object> cm=new HashMap<>();\n  cm.put(\"test_type\",1);\n  cm.put(\"1\",1);\n  List<User> ul1=userMapper.selectByMap(cm);\n  for (  User anUl1 : ul1) {\n    print(anUl1);\n  }\n  System.err.println(\"\\n------------------selectOne----------------------\");\n  User userOne=userMapper.selectOne(new User(\"abc\"));\n  print(userOne);\n  System.err.println(\"\\n------------------selectCount----------------------\");\n  System.err.println(\"查询 type=1 总记录数：\" + userMapper.selectCount(new EntityWrapper<>(new User(1))));\n  System.err.println(\"总记录数：\" + userMapper.selectCount(null));\n  System.err.println(\"\\n------------------selectList-----所有数据----id--DESC--排序----\");\n  List<User> ul2=userMapper.selectList(new EntityWrapper<User>(null,\"age,name\"));\n  for (  User anUl2 : ul2) {\n    print(anUl2);\n  }\n  System.err.println(\"\\n------------------list 分页查询 ----查询 testType = 1 的所有数据--id--DESC--排序--------\");\n  Page<User> page=new Page<>(1,2);\n  EntityWrapper<User> ew=new EntityWrapper<>(new User(1));\n  ew.setSqlSelect(\"age,name\");\n  ew.where(\"name like {0}\",\"'%dateBatch%'\").and(\"age={0}\",3).orderBy(\"age,name\",true);\n  List<User> paginList=userMapper.selectPage(page,ew);\n  page.setRecords(paginList);\n  for (int i=0; i < page.getRecords().size(); i++) {\n    print(page.getRecords().get(i));\n  }\n  System.err.println(\" 翻页：\" + page.toString());\n  System.err.println(\"\\n---------------xml---selectListRow 分页查询，不查询总数（此时可自定义 count 查询）----无查询条件--------------\");\n  List<User> rowList=userMapper.selectListRow(new Pagination(0,2,false));\n  for (  User aRowList : rowList) {\n    print(aRowList);\n  }\n  System.err.println(\" selectList EntityWrapper == null \\n\");\n  paginList=userMapper.selectList(null);\n  for (  User aPaginList : paginList) {\n    print(aPaginList);\n  }\n  rlt=userMapper.deleteAll();\n  System.err.println(\"清空测试数据！ rlt=\" + rlt);\n  session.commit();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1190,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 8394,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 309,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * RUN 测试 <p> <p> MybatisPlus 加载 SQL 顺序： </p> 1、加载XML中的SQL<br> 2、加载sqlProvider中的SQL<br> 3、xmlSql 与 sqlProvider不能包含相同的SQL<br> <br> 调整后的SQL优先级：xmlSql > sqlProvider > crudSql <br>\n */\n@Test public void crudTest(){\n  SqlSession session=this.sqlSessionFactory().openSession();\n  UserMapper userMapper=session.getMapper(UserMapper.class);\n  System.err.println(\" debug run 查询执行 user 表数据变化！ \");\n  userMapper.deleteAll();\n  Role role=new Role();\n  role.setId(IdWorker.getId());\n  role.setName(\"admin\");\n  User userA=new User();\n  userA.setId(IdWorker.getId());\n  userA.setName(\"junyu_shi\");\n  userA.setAge(1);\n  userA.setDesc(\"测试一把\");\n  userA.setTestType(1);\n  userA.setRole(role);\n  int rlt=userMapper.insert(userA);\n  User whereUser=userMapper.selectOne(userA);\n  print(whereUser);\n  userA.setAge(18);\n  userMapper.updateById(userA);\n  userMapper.delete(new EntityWrapper<>(userA));\n  System.err.println(\"--------- @TableField el() --------- \" + rlt);\n  rlt=userMapper.insertInjector(new User(1L,\"1\",1,1));\n  System.err.println(\"--------- insertInjector --------- \" + rlt);\n  User cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  long id=IdWorker.getId();\n  rlt=userMapper.insert(new User(id,\"abc\",18,1));\n  System.err.println(\"\\n--------------insert-------\" + rlt);\n  sleep();\n  rlt=userMapper.insert(new User(18));\n  System.err.println(\"\\n----------测试 name 字段忽略验证----insert-------\" + rlt);\n  sleep();\n  List<User> ul=new ArrayList<>();\n  ul.add(new User(11L,\"1\",1,0));\n  ul.add(new User(12L,\"2\",2,1));\n  ul.add(new User(13L,\"3\",3,1));\n  ul.add(new User(14L,\"delname\",4,0));\n  ul.add(new User(15L,\"5\",5,1));\n  ul.add(new User(16L,\"6\",6,0));\n  ul.add(new User(17L,7));\n  ul.add(new User(18L,8));\n  ul.add(new User(19L,9));\n  ul.add(new User(7));\n  ul.add(new User(20L,\"deleteByMap\",7,0));\n  ul.add(new User(\"8\",8,1));\n  ul.add(new User(\"9\",9,1));\n  for (  User u : ul) {\n    rlt=userMapper.insert(u);\n  }\n  System.err.println(\"\\n--------------insertBatch----------------\" + rlt + \"\\n\\n\");\n  System.err.println(\"\\n 自定义填充 testType=3 填充成功！\" + userMapper.selectById(18L).toString());\n  session.commit();\n  rlt=userMapper.deleteById(id);\n  System.err.println(\"---------deleteById------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  Map<String,Object> columnMap=new HashMap<>();\n  columnMap.put(\"name\",\"deleteByMap\");\n  columnMap.put(\"age\",null);\n  rlt=userMapper.deleteByMap(columnMap);\n  System.err.println(\"---------deleteByMap------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<Long> il=new ArrayList<>();\n  il.add(16L);\n  il.add(17L);\n  rlt=userMapper.deleteBatchIds(il);\n  System.err.println(\"---------deleteBatchIds------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  rlt=userMapper.delete(new EntityWrapper<>(new User(14L,\"delname\")));\n  System.err.println(\"--------------delete------------------ result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"MybatisPlus\"));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"update all column\",12,12));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.update(new User(\"55\",55,5),new EntityWrapper<>(new User(15L,\"5\")));\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  EntityWrapper<User> ew1=new EntityWrapper<>();\n  ew1.addFilter(\"test_id={0} AND name={1}\",15L,\"55\");\n  rlt=userMapper.update(new User(\"00\"),ew1);\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<User> userList=new ArrayList<>();\n  userList.add(new User(11L,\"updateBatchById-1\",1,1));\n  userList.add(new User(12L,\"updateBatchById-2\",2,1));\n  userList.add(new User(13L,\"updateBatchById-3\",3,1));\n  for (  User u : userList) {\n    rlt=userMapper.updateById(u);\n  }\n  System.err.println(\"------------------updateBatchById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  System.err.println(\"\\n------------------selectById----------------------\");\n  User user=userMapper.selectById(12L);\n  print(user);\n  System.err.println(\"\\n------------------selectBatchIds----------------------\");\n  List<Long> idList=new ArrayList<>();\n  idList.add(11L);\n  idList.add(12L);\n  List<User> ul0=userMapper.selectBatchIds(idList);\n  for (  User anUl0 : ul0) {\n    print(anUl0);\n  }\n  System.err.println(\"\\n------------------selectByMap-----满足 map 条件的数据----\");\n  Map<String,Object> cm=new HashMap<>();\n  cm.put(\"test_type\",1);\n  cm.put(\"1\",1);\n  List<User> ul1=userMapper.selectByMap(cm);\n  for (  User anUl1 : ul1) {\n    print(anUl1);\n  }\n  System.err.println(\"\\n------------------selectOne----------------------\");\n  User userOne=userMapper.selectOne(new User(\"abc\"));\n  print(userOne);\n  System.err.println(\"\\n------------------selectCount----------------------\");\n  System.err.println(\"查询 type=1 总记录数：\" + userMapper.selectCount(new EntityWrapper<>(new User(1))));\n  System.err.println(\"总记录数：\" + userMapper.selectCount(null));\n  System.err.println(\"\\n------------------selectList-----所有数据----id--DESC--排序----\");\n  List<User> ul2=userMapper.selectList(new EntityWrapper<User>(null,\"age,name\"));\n  for (  User anUl2 : ul2) {\n    print(anUl2);\n  }\n  System.err.println(\"\\n------------------list 分页查询 ----查询 testType = 1 的所有数据--id--DESC--排序--------\");\n  Page<User> page=new Page<>(1,2);\n  EntityWrapper<User> ew=new EntityWrapper<>(new User(1));\n  ew.setSqlSelect(\"age,name\");\n  ew.where(\"name like {0}\",\"'%dateBatch%'\").and(\"age={0}\",3).orderBy(\"age,name\",true);\n  List<User> paginList=userMapper.selectPage(page,ew);\n  page.setRecords(paginList);\n  for (int i=0; i < page.getRecords().size(); i++) {\n    print(page.getRecords().get(i));\n  }\n  System.err.println(\" 翻页：\" + page.toString());\n  System.err.println(\"\\n---------------xml---selectListRow 分页查询，不查询总数（此时可自定义 count 查询）----无查询条件--------------\");\n  List<User> rowList=userMapper.selectListRow(new Pagination(0,2,false));\n  for (  User aRowList : rowList) {\n    print(aRowList);\n  }\n  System.err.println(\" selectList EntityWrapper == null \\n\");\n  paginList=userMapper.selectList(null);\n  for (  User aPaginList : paginList) {\n    print(aPaginList);\n  }\n  rlt=userMapper.deleteAll();\n  System.err.println(\"清空测试数据！ rlt=\" + rlt);\n  session.commit();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1197,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 181,
        "startColumnNumber" : 8,
        "endLineNumber" : 181,
        "endColumnNumber" : 106
      },
      "nodeContext" : "System.err.println(\"---------deleteBatchIds------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "rlt",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 185,
      "startColumnNumber" : 78,
      "endLineNumber" : 185,
      "endColumnNumber" : 81
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 185,
        "startColumnNumber" : 27,
        "endLineNumber" : 185,
        "endColumnNumber" : 90
      },
      "nodeContext" : "\"--------------delete------------------ result=\" + rlt + \"\\n\\n\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 185,
        "startColumnNumber" : 8,
        "endLineNumber" : 185,
        "endColumnNumber" : 91
      },
      "nodeContext" : "System.err.println(\"--------------delete------------------ result=\" + rlt + \"\\n\\n\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 185,
        "startColumnNumber" : 8,
        "endLineNumber" : 185,
        "endColumnNumber" : 92
      },
      "nodeContext" : "System.err.println(\"--------------delete------------------ result=\" + rlt + \"\\n\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 8101,
        "startLineNumber" : 76,
        "startColumnNumber" : 27,
        "endLineNumber" : 309,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SqlSession session=this.sqlSessionFactory().openSession();\n  UserMapper userMapper=session.getMapper(UserMapper.class);\n  System.err.println(\" debug run 查询执行 user 表数据变化！ \");\n  userMapper.deleteAll();\n  Role role=new Role();\n  role.setId(IdWorker.getId());\n  role.setName(\"admin\");\n  User userA=new User();\n  userA.setId(IdWorker.getId());\n  userA.setName(\"junyu_shi\");\n  userA.setAge(1);\n  userA.setDesc(\"测试一把\");\n  userA.setTestType(1);\n  userA.setRole(role);\n  int rlt=userMapper.insert(userA);\n  User whereUser=userMapper.selectOne(userA);\n  print(whereUser);\n  userA.setAge(18);\n  userMapper.updateById(userA);\n  userMapper.delete(new EntityWrapper<>(userA));\n  System.err.println(\"--------- @TableField el() --------- \" + rlt);\n  rlt=userMapper.insertInjector(new User(1L,\"1\",1,1));\n  System.err.println(\"--------- insertInjector --------- \" + rlt);\n  User cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  long id=IdWorker.getId();\n  rlt=userMapper.insert(new User(id,\"abc\",18,1));\n  System.err.println(\"\\n--------------insert-------\" + rlt);\n  sleep();\n  rlt=userMapper.insert(new User(18));\n  System.err.println(\"\\n----------测试 name 字段忽略验证----insert-------\" + rlt);\n  sleep();\n  List<User> ul=new ArrayList<>();\n  ul.add(new User(11L,\"1\",1,0));\n  ul.add(new User(12L,\"2\",2,1));\n  ul.add(new User(13L,\"3\",3,1));\n  ul.add(new User(14L,\"delname\",4,0));\n  ul.add(new User(15L,\"5\",5,1));\n  ul.add(new User(16L,\"6\",6,0));\n  ul.add(new User(17L,7));\n  ul.add(new User(18L,8));\n  ul.add(new User(19L,9));\n  ul.add(new User(7));\n  ul.add(new User(20L,\"deleteByMap\",7,0));\n  ul.add(new User(\"8\",8,1));\n  ul.add(new User(\"9\",9,1));\n  for (  User u : ul) {\n    rlt=userMapper.insert(u);\n  }\n  System.err.println(\"\\n--------------insertBatch----------------\" + rlt + \"\\n\\n\");\n  System.err.println(\"\\n 自定义填充 testType=3 填充成功！\" + userMapper.selectById(18L).toString());\n  session.commit();\n  rlt=userMapper.deleteById(id);\n  System.err.println(\"---------deleteById------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  Map<String,Object> columnMap=new HashMap<>();\n  columnMap.put(\"name\",\"deleteByMap\");\n  columnMap.put(\"age\",null);\n  rlt=userMapper.deleteByMap(columnMap);\n  System.err.println(\"---------deleteByMap------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<Long> il=new ArrayList<>();\n  il.add(16L);\n  il.add(17L);\n  rlt=userMapper.deleteBatchIds(il);\n  System.err.println(\"---------deleteBatchIds------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  rlt=userMapper.delete(new EntityWrapper<>(new User(14L,\"delname\")));\n  System.err.println(\"--------------delete------------------ result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"MybatisPlus\"));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"update all column\",12,12));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.update(new User(\"55\",55,5),new EntityWrapper<>(new User(15L,\"5\")));\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  EntityWrapper<User> ew1=new EntityWrapper<>();\n  ew1.addFilter(\"test_id={0} AND name={1}\",15L,\"55\");\n  rlt=userMapper.update(new User(\"00\"),ew1);\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<User> userList=new ArrayList<>();\n  userList.add(new User(11L,\"updateBatchById-1\",1,1));\n  userList.add(new User(12L,\"updateBatchById-2\",2,1));\n  userList.add(new User(13L,\"updateBatchById-3\",3,1));\n  for (  User u : userList) {\n    rlt=userMapper.updateById(u);\n  }\n  System.err.println(\"------------------updateBatchById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  System.err.println(\"\\n------------------selectById----------------------\");\n  User user=userMapper.selectById(12L);\n  print(user);\n  System.err.println(\"\\n------------------selectBatchIds----------------------\");\n  List<Long> idList=new ArrayList<>();\n  idList.add(11L);\n  idList.add(12L);\n  List<User> ul0=userMapper.selectBatchIds(idList);\n  for (  User anUl0 : ul0) {\n    print(anUl0);\n  }\n  System.err.println(\"\\n------------------selectByMap-----满足 map 条件的数据----\");\n  Map<String,Object> cm=new HashMap<>();\n  cm.put(\"test_type\",1);\n  cm.put(\"1\",1);\n  List<User> ul1=userMapper.selectByMap(cm);\n  for (  User anUl1 : ul1) {\n    print(anUl1);\n  }\n  System.err.println(\"\\n------------------selectOne----------------------\");\n  User userOne=userMapper.selectOne(new User(\"abc\"));\n  print(userOne);\n  System.err.println(\"\\n------------------selectCount----------------------\");\n  System.err.println(\"查询 type=1 总记录数：\" + userMapper.selectCount(new EntityWrapper<>(new User(1))));\n  System.err.println(\"总记录数：\" + userMapper.selectCount(null));\n  System.err.println(\"\\n------------------selectList-----所有数据----id--DESC--排序----\");\n  List<User> ul2=userMapper.selectList(new EntityWrapper<User>(null,\"age,name\"));\n  for (  User anUl2 : ul2) {\n    print(anUl2);\n  }\n  System.err.println(\"\\n------------------list 分页查询 ----查询 testType = 1 的所有数据--id--DESC--排序--------\");\n  Page<User> page=new Page<>(1,2);\n  EntityWrapper<User> ew=new EntityWrapper<>(new User(1));\n  ew.setSqlSelect(\"age,name\");\n  ew.where(\"name like {0}\",\"'%dateBatch%'\").and(\"age={0}\",3).orderBy(\"age,name\",true);\n  List<User> paginList=userMapper.selectPage(page,ew);\n  page.setRecords(paginList);\n  for (int i=0; i < page.getRecords().size(); i++) {\n    print(page.getRecords().get(i));\n  }\n  System.err.println(\" 翻页：\" + page.toString());\n  System.err.println(\"\\n---------------xml---selectListRow 分页查询，不查询总数（此时可自定义 count 查询）----无查询条件--------------\");\n  List<User> rowList=userMapper.selectListRow(new Pagination(0,2,false));\n  for (  User aRowList : rowList) {\n    print(aRowList);\n  }\n  System.err.println(\" selectList EntityWrapper == null \\n\");\n  paginList=userMapper.selectList(null);\n  for (  User aPaginList : paginList) {\n    print(aPaginList);\n  }\n  rlt=userMapper.deleteAll();\n  System.err.println(\"清空测试数据！ rlt=\" + rlt);\n  session.commit();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1190,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 8394,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 309,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * RUN 测试 <p> <p> MybatisPlus 加载 SQL 顺序： </p> 1、加载XML中的SQL<br> 2、加载sqlProvider中的SQL<br> 3、xmlSql 与 sqlProvider不能包含相同的SQL<br> <br> 调整后的SQL优先级：xmlSql > sqlProvider > crudSql <br>\n */\n@Test public void crudTest(){\n  SqlSession session=this.sqlSessionFactory().openSession();\n  UserMapper userMapper=session.getMapper(UserMapper.class);\n  System.err.println(\" debug run 查询执行 user 表数据变化！ \");\n  userMapper.deleteAll();\n  Role role=new Role();\n  role.setId(IdWorker.getId());\n  role.setName(\"admin\");\n  User userA=new User();\n  userA.setId(IdWorker.getId());\n  userA.setName(\"junyu_shi\");\n  userA.setAge(1);\n  userA.setDesc(\"测试一把\");\n  userA.setTestType(1);\n  userA.setRole(role);\n  int rlt=userMapper.insert(userA);\n  User whereUser=userMapper.selectOne(userA);\n  print(whereUser);\n  userA.setAge(18);\n  userMapper.updateById(userA);\n  userMapper.delete(new EntityWrapper<>(userA));\n  System.err.println(\"--------- @TableField el() --------- \" + rlt);\n  rlt=userMapper.insertInjector(new User(1L,\"1\",1,1));\n  System.err.println(\"--------- insertInjector --------- \" + rlt);\n  User cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  long id=IdWorker.getId();\n  rlt=userMapper.insert(new User(id,\"abc\",18,1));\n  System.err.println(\"\\n--------------insert-------\" + rlt);\n  sleep();\n  rlt=userMapper.insert(new User(18));\n  System.err.println(\"\\n----------测试 name 字段忽略验证----insert-------\" + rlt);\n  sleep();\n  List<User> ul=new ArrayList<>();\n  ul.add(new User(11L,\"1\",1,0));\n  ul.add(new User(12L,\"2\",2,1));\n  ul.add(new User(13L,\"3\",3,1));\n  ul.add(new User(14L,\"delname\",4,0));\n  ul.add(new User(15L,\"5\",5,1));\n  ul.add(new User(16L,\"6\",6,0));\n  ul.add(new User(17L,7));\n  ul.add(new User(18L,8));\n  ul.add(new User(19L,9));\n  ul.add(new User(7));\n  ul.add(new User(20L,\"deleteByMap\",7,0));\n  ul.add(new User(\"8\",8,1));\n  ul.add(new User(\"9\",9,1));\n  for (  User u : ul) {\n    rlt=userMapper.insert(u);\n  }\n  System.err.println(\"\\n--------------insertBatch----------------\" + rlt + \"\\n\\n\");\n  System.err.println(\"\\n 自定义填充 testType=3 填充成功！\" + userMapper.selectById(18L).toString());\n  session.commit();\n  rlt=userMapper.deleteById(id);\n  System.err.println(\"---------deleteById------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  Map<String,Object> columnMap=new HashMap<>();\n  columnMap.put(\"name\",\"deleteByMap\");\n  columnMap.put(\"age\",null);\n  rlt=userMapper.deleteByMap(columnMap);\n  System.err.println(\"---------deleteByMap------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<Long> il=new ArrayList<>();\n  il.add(16L);\n  il.add(17L);\n  rlt=userMapper.deleteBatchIds(il);\n  System.err.println(\"---------deleteBatchIds------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  rlt=userMapper.delete(new EntityWrapper<>(new User(14L,\"delname\")));\n  System.err.println(\"--------------delete------------------ result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"MybatisPlus\"));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"update all column\",12,12));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.update(new User(\"55\",55,5),new EntityWrapper<>(new User(15L,\"5\")));\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  EntityWrapper<User> ew1=new EntityWrapper<>();\n  ew1.addFilter(\"test_id={0} AND name={1}\",15L,\"55\");\n  rlt=userMapper.update(new User(\"00\"),ew1);\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<User> userList=new ArrayList<>();\n  userList.add(new User(11L,\"updateBatchById-1\",1,1));\n  userList.add(new User(12L,\"updateBatchById-2\",2,1));\n  userList.add(new User(13L,\"updateBatchById-3\",3,1));\n  for (  User u : userList) {\n    rlt=userMapper.updateById(u);\n  }\n  System.err.println(\"------------------updateBatchById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  System.err.println(\"\\n------------------selectById----------------------\");\n  User user=userMapper.selectById(12L);\n  print(user);\n  System.err.println(\"\\n------------------selectBatchIds----------------------\");\n  List<Long> idList=new ArrayList<>();\n  idList.add(11L);\n  idList.add(12L);\n  List<User> ul0=userMapper.selectBatchIds(idList);\n  for (  User anUl0 : ul0) {\n    print(anUl0);\n  }\n  System.err.println(\"\\n------------------selectByMap-----满足 map 条件的数据----\");\n  Map<String,Object> cm=new HashMap<>();\n  cm.put(\"test_type\",1);\n  cm.put(\"1\",1);\n  List<User> ul1=userMapper.selectByMap(cm);\n  for (  User anUl1 : ul1) {\n    print(anUl1);\n  }\n  System.err.println(\"\\n------------------selectOne----------------------\");\n  User userOne=userMapper.selectOne(new User(\"abc\"));\n  print(userOne);\n  System.err.println(\"\\n------------------selectCount----------------------\");\n  System.err.println(\"查询 type=1 总记录数：\" + userMapper.selectCount(new EntityWrapper<>(new User(1))));\n  System.err.println(\"总记录数：\" + userMapper.selectCount(null));\n  System.err.println(\"\\n------------------selectList-----所有数据----id--DESC--排序----\");\n  List<User> ul2=userMapper.selectList(new EntityWrapper<User>(null,\"age,name\"));\n  for (  User anUl2 : ul2) {\n    print(anUl2);\n  }\n  System.err.println(\"\\n------------------list 分页查询 ----查询 testType = 1 的所有数据--id--DESC--排序--------\");\n  Page<User> page=new Page<>(1,2);\n  EntityWrapper<User> ew=new EntityWrapper<>(new User(1));\n  ew.setSqlSelect(\"age,name\");\n  ew.where(\"name like {0}\",\"'%dateBatch%'\").and(\"age={0}\",3).orderBy(\"age,name\",true);\n  List<User> paginList=userMapper.selectPage(page,ew);\n  page.setRecords(paginList);\n  for (int i=0; i < page.getRecords().size(); i++) {\n    print(page.getRecords().get(i));\n  }\n  System.err.println(\" 翻页：\" + page.toString());\n  System.err.println(\"\\n---------------xml---selectListRow 分页查询，不查询总数（此时可自定义 count 查询）----无查询条件--------------\");\n  List<User> rowList=userMapper.selectListRow(new Pagination(0,2,false));\n  for (  User aRowList : rowList) {\n    print(aRowList);\n  }\n  System.err.println(\" selectList EntityWrapper == null \\n\");\n  paginList=userMapper.selectList(null);\n  for (  User aPaginList : paginList) {\n    print(aPaginList);\n  }\n  rlt=userMapper.deleteAll();\n  System.err.println(\"清空测试数据！ rlt=\" + rlt);\n  session.commit();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1197,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 185,
        "startColumnNumber" : 8,
        "endLineNumber" : 185,
        "endColumnNumber" : 92
      },
      "nodeContext" : "System.err.println(\"--------------delete------------------ result=\" + rlt + \"\\n\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "rlt",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 194,
      "startColumnNumber" : 90,
      "endLineNumber" : 194,
      "endColumnNumber" : 93
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 194,
        "startColumnNumber" : 27,
        "endLineNumber" : 194,
        "endColumnNumber" : 102
      },
      "nodeContext" : "\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 194,
        "startColumnNumber" : 8,
        "endLineNumber" : 194,
        "endColumnNumber" : 103
      },
      "nodeContext" : "System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 194,
        "startColumnNumber" : 8,
        "endLineNumber" : 194,
        "endColumnNumber" : 104
      },
      "nodeContext" : "System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 8101,
        "startLineNumber" : 76,
        "startColumnNumber" : 27,
        "endLineNumber" : 309,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SqlSession session=this.sqlSessionFactory().openSession();\n  UserMapper userMapper=session.getMapper(UserMapper.class);\n  System.err.println(\" debug run 查询执行 user 表数据变化！ \");\n  userMapper.deleteAll();\n  Role role=new Role();\n  role.setId(IdWorker.getId());\n  role.setName(\"admin\");\n  User userA=new User();\n  userA.setId(IdWorker.getId());\n  userA.setName(\"junyu_shi\");\n  userA.setAge(1);\n  userA.setDesc(\"测试一把\");\n  userA.setTestType(1);\n  userA.setRole(role);\n  int rlt=userMapper.insert(userA);\n  User whereUser=userMapper.selectOne(userA);\n  print(whereUser);\n  userA.setAge(18);\n  userMapper.updateById(userA);\n  userMapper.delete(new EntityWrapper<>(userA));\n  System.err.println(\"--------- @TableField el() --------- \" + rlt);\n  rlt=userMapper.insertInjector(new User(1L,\"1\",1,1));\n  System.err.println(\"--------- insertInjector --------- \" + rlt);\n  User cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  long id=IdWorker.getId();\n  rlt=userMapper.insert(new User(id,\"abc\",18,1));\n  System.err.println(\"\\n--------------insert-------\" + rlt);\n  sleep();\n  rlt=userMapper.insert(new User(18));\n  System.err.println(\"\\n----------测试 name 字段忽略验证----insert-------\" + rlt);\n  sleep();\n  List<User> ul=new ArrayList<>();\n  ul.add(new User(11L,\"1\",1,0));\n  ul.add(new User(12L,\"2\",2,1));\n  ul.add(new User(13L,\"3\",3,1));\n  ul.add(new User(14L,\"delname\",4,0));\n  ul.add(new User(15L,\"5\",5,1));\n  ul.add(new User(16L,\"6\",6,0));\n  ul.add(new User(17L,7));\n  ul.add(new User(18L,8));\n  ul.add(new User(19L,9));\n  ul.add(new User(7));\n  ul.add(new User(20L,\"deleteByMap\",7,0));\n  ul.add(new User(\"8\",8,1));\n  ul.add(new User(\"9\",9,1));\n  for (  User u : ul) {\n    rlt=userMapper.insert(u);\n  }\n  System.err.println(\"\\n--------------insertBatch----------------\" + rlt + \"\\n\\n\");\n  System.err.println(\"\\n 自定义填充 testType=3 填充成功！\" + userMapper.selectById(18L).toString());\n  session.commit();\n  rlt=userMapper.deleteById(id);\n  System.err.println(\"---------deleteById------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  Map<String,Object> columnMap=new HashMap<>();\n  columnMap.put(\"name\",\"deleteByMap\");\n  columnMap.put(\"age\",null);\n  rlt=userMapper.deleteByMap(columnMap);\n  System.err.println(\"---------deleteByMap------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<Long> il=new ArrayList<>();\n  il.add(16L);\n  il.add(17L);\n  rlt=userMapper.deleteBatchIds(il);\n  System.err.println(\"---------deleteBatchIds------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  rlt=userMapper.delete(new EntityWrapper<>(new User(14L,\"delname\")));\n  System.err.println(\"--------------delete------------------ result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"MybatisPlus\"));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"update all column\",12,12));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.update(new User(\"55\",55,5),new EntityWrapper<>(new User(15L,\"5\")));\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  EntityWrapper<User> ew1=new EntityWrapper<>();\n  ew1.addFilter(\"test_id={0} AND name={1}\",15L,\"55\");\n  rlt=userMapper.update(new User(\"00\"),ew1);\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<User> userList=new ArrayList<>();\n  userList.add(new User(11L,\"updateBatchById-1\",1,1));\n  userList.add(new User(12L,\"updateBatchById-2\",2,1));\n  userList.add(new User(13L,\"updateBatchById-3\",3,1));\n  for (  User u : userList) {\n    rlt=userMapper.updateById(u);\n  }\n  System.err.println(\"------------------updateBatchById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  System.err.println(\"\\n------------------selectById----------------------\");\n  User user=userMapper.selectById(12L);\n  print(user);\n  System.err.println(\"\\n------------------selectBatchIds----------------------\");\n  List<Long> idList=new ArrayList<>();\n  idList.add(11L);\n  idList.add(12L);\n  List<User> ul0=userMapper.selectBatchIds(idList);\n  for (  User anUl0 : ul0) {\n    print(anUl0);\n  }\n  System.err.println(\"\\n------------------selectByMap-----满足 map 条件的数据----\");\n  Map<String,Object> cm=new HashMap<>();\n  cm.put(\"test_type\",1);\n  cm.put(\"1\",1);\n  List<User> ul1=userMapper.selectByMap(cm);\n  for (  User anUl1 : ul1) {\n    print(anUl1);\n  }\n  System.err.println(\"\\n------------------selectOne----------------------\");\n  User userOne=userMapper.selectOne(new User(\"abc\"));\n  print(userOne);\n  System.err.println(\"\\n------------------selectCount----------------------\");\n  System.err.println(\"查询 type=1 总记录数：\" + userMapper.selectCount(new EntityWrapper<>(new User(1))));\n  System.err.println(\"总记录数：\" + userMapper.selectCount(null));\n  System.err.println(\"\\n------------------selectList-----所有数据----id--DESC--排序----\");\n  List<User> ul2=userMapper.selectList(new EntityWrapper<User>(null,\"age,name\"));\n  for (  User anUl2 : ul2) {\n    print(anUl2);\n  }\n  System.err.println(\"\\n------------------list 分页查询 ----查询 testType = 1 的所有数据--id--DESC--排序--------\");\n  Page<User> page=new Page<>(1,2);\n  EntityWrapper<User> ew=new EntityWrapper<>(new User(1));\n  ew.setSqlSelect(\"age,name\");\n  ew.where(\"name like {0}\",\"'%dateBatch%'\").and(\"age={0}\",3).orderBy(\"age,name\",true);\n  List<User> paginList=userMapper.selectPage(page,ew);\n  page.setRecords(paginList);\n  for (int i=0; i < page.getRecords().size(); i++) {\n    print(page.getRecords().get(i));\n  }\n  System.err.println(\" 翻页：\" + page.toString());\n  System.err.println(\"\\n---------------xml---selectListRow 分页查询，不查询总数（此时可自定义 count 查询）----无查询条件--------------\");\n  List<User> rowList=userMapper.selectListRow(new Pagination(0,2,false));\n  for (  User aRowList : rowList) {\n    print(aRowList);\n  }\n  System.err.println(\" selectList EntityWrapper == null \\n\");\n  paginList=userMapper.selectList(null);\n  for (  User aPaginList : paginList) {\n    print(aPaginList);\n  }\n  rlt=userMapper.deleteAll();\n  System.err.println(\"清空测试数据！ rlt=\" + rlt);\n  session.commit();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1190,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 8394,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 309,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * RUN 测试 <p> <p> MybatisPlus 加载 SQL 顺序： </p> 1、加载XML中的SQL<br> 2、加载sqlProvider中的SQL<br> 3、xmlSql 与 sqlProvider不能包含相同的SQL<br> <br> 调整后的SQL优先级：xmlSql > sqlProvider > crudSql <br>\n */\n@Test public void crudTest(){\n  SqlSession session=this.sqlSessionFactory().openSession();\n  UserMapper userMapper=session.getMapper(UserMapper.class);\n  System.err.println(\" debug run 查询执行 user 表数据变化！ \");\n  userMapper.deleteAll();\n  Role role=new Role();\n  role.setId(IdWorker.getId());\n  role.setName(\"admin\");\n  User userA=new User();\n  userA.setId(IdWorker.getId());\n  userA.setName(\"junyu_shi\");\n  userA.setAge(1);\n  userA.setDesc(\"测试一把\");\n  userA.setTestType(1);\n  userA.setRole(role);\n  int rlt=userMapper.insert(userA);\n  User whereUser=userMapper.selectOne(userA);\n  print(whereUser);\n  userA.setAge(18);\n  userMapper.updateById(userA);\n  userMapper.delete(new EntityWrapper<>(userA));\n  System.err.println(\"--------- @TableField el() --------- \" + rlt);\n  rlt=userMapper.insertInjector(new User(1L,\"1\",1,1));\n  System.err.println(\"--------- insertInjector --------- \" + rlt);\n  User cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  long id=IdWorker.getId();\n  rlt=userMapper.insert(new User(id,\"abc\",18,1));\n  System.err.println(\"\\n--------------insert-------\" + rlt);\n  sleep();\n  rlt=userMapper.insert(new User(18));\n  System.err.println(\"\\n----------测试 name 字段忽略验证----insert-------\" + rlt);\n  sleep();\n  List<User> ul=new ArrayList<>();\n  ul.add(new User(11L,\"1\",1,0));\n  ul.add(new User(12L,\"2\",2,1));\n  ul.add(new User(13L,\"3\",3,1));\n  ul.add(new User(14L,\"delname\",4,0));\n  ul.add(new User(15L,\"5\",5,1));\n  ul.add(new User(16L,\"6\",6,0));\n  ul.add(new User(17L,7));\n  ul.add(new User(18L,8));\n  ul.add(new User(19L,9));\n  ul.add(new User(7));\n  ul.add(new User(20L,\"deleteByMap\",7,0));\n  ul.add(new User(\"8\",8,1));\n  ul.add(new User(\"9\",9,1));\n  for (  User u : ul) {\n    rlt=userMapper.insert(u);\n  }\n  System.err.println(\"\\n--------------insertBatch----------------\" + rlt + \"\\n\\n\");\n  System.err.println(\"\\n 自定义填充 testType=3 填充成功！\" + userMapper.selectById(18L).toString());\n  session.commit();\n  rlt=userMapper.deleteById(id);\n  System.err.println(\"---------deleteById------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  Map<String,Object> columnMap=new HashMap<>();\n  columnMap.put(\"name\",\"deleteByMap\");\n  columnMap.put(\"age\",null);\n  rlt=userMapper.deleteByMap(columnMap);\n  System.err.println(\"---------deleteByMap------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<Long> il=new ArrayList<>();\n  il.add(16L);\n  il.add(17L);\n  rlt=userMapper.deleteBatchIds(il);\n  System.err.println(\"---------deleteBatchIds------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  rlt=userMapper.delete(new EntityWrapper<>(new User(14L,\"delname\")));\n  System.err.println(\"--------------delete------------------ result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"MybatisPlus\"));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"update all column\",12,12));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.update(new User(\"55\",55,5),new EntityWrapper<>(new User(15L,\"5\")));\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  EntityWrapper<User> ew1=new EntityWrapper<>();\n  ew1.addFilter(\"test_id={0} AND name={1}\",15L,\"55\");\n  rlt=userMapper.update(new User(\"00\"),ew1);\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<User> userList=new ArrayList<>();\n  userList.add(new User(11L,\"updateBatchById-1\",1,1));\n  userList.add(new User(12L,\"updateBatchById-2\",2,1));\n  userList.add(new User(13L,\"updateBatchById-3\",3,1));\n  for (  User u : userList) {\n    rlt=userMapper.updateById(u);\n  }\n  System.err.println(\"------------------updateBatchById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  System.err.println(\"\\n------------------selectById----------------------\");\n  User user=userMapper.selectById(12L);\n  print(user);\n  System.err.println(\"\\n------------------selectBatchIds----------------------\");\n  List<Long> idList=new ArrayList<>();\n  idList.add(11L);\n  idList.add(12L);\n  List<User> ul0=userMapper.selectBatchIds(idList);\n  for (  User anUl0 : ul0) {\n    print(anUl0);\n  }\n  System.err.println(\"\\n------------------selectByMap-----满足 map 条件的数据----\");\n  Map<String,Object> cm=new HashMap<>();\n  cm.put(\"test_type\",1);\n  cm.put(\"1\",1);\n  List<User> ul1=userMapper.selectByMap(cm);\n  for (  User anUl1 : ul1) {\n    print(anUl1);\n  }\n  System.err.println(\"\\n------------------selectOne----------------------\");\n  User userOne=userMapper.selectOne(new User(\"abc\"));\n  print(userOne);\n  System.err.println(\"\\n------------------selectCount----------------------\");\n  System.err.println(\"查询 type=1 总记录数：\" + userMapper.selectCount(new EntityWrapper<>(new User(1))));\n  System.err.println(\"总记录数：\" + userMapper.selectCount(null));\n  System.err.println(\"\\n------------------selectList-----所有数据----id--DESC--排序----\");\n  List<User> ul2=userMapper.selectList(new EntityWrapper<User>(null,\"age,name\"));\n  for (  User anUl2 : ul2) {\n    print(anUl2);\n  }\n  System.err.println(\"\\n------------------list 分页查询 ----查询 testType = 1 的所有数据--id--DESC--排序--------\");\n  Page<User> page=new Page<>(1,2);\n  EntityWrapper<User> ew=new EntityWrapper<>(new User(1));\n  ew.setSqlSelect(\"age,name\");\n  ew.where(\"name like {0}\",\"'%dateBatch%'\").and(\"age={0}\",3).orderBy(\"age,name\",true);\n  List<User> paginList=userMapper.selectPage(page,ew);\n  page.setRecords(paginList);\n  for (int i=0; i < page.getRecords().size(); i++) {\n    print(page.getRecords().get(i));\n  }\n  System.err.println(\" 翻页：\" + page.toString());\n  System.err.println(\"\\n---------------xml---selectListRow 分页查询，不查询总数（此时可自定义 count 查询）----无查询条件--------------\");\n  List<User> rowList=userMapper.selectListRow(new Pagination(0,2,false));\n  for (  User aRowList : rowList) {\n    print(aRowList);\n  }\n  System.err.println(\" selectList EntityWrapper == null \\n\");\n  paginList=userMapper.selectList(null);\n  for (  User aPaginList : paginList) {\n    print(aPaginList);\n  }\n  rlt=userMapper.deleteAll();\n  System.err.println(\"清空测试数据！ rlt=\" + rlt);\n  session.commit();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1197,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 194,
        "startColumnNumber" : 8,
        "endLineNumber" : 194,
        "endColumnNumber" : 104
      },
      "nodeContext" : "System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "rlt",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 198,
      "startColumnNumber" : 90,
      "endLineNumber" : 198,
      "endColumnNumber" : 93
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 198,
        "startColumnNumber" : 27,
        "endLineNumber" : 198,
        "endColumnNumber" : 102
      },
      "nodeContext" : "\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 198,
        "startColumnNumber" : 8,
        "endLineNumber" : 198,
        "endColumnNumber" : 103
      },
      "nodeContext" : "System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 198,
        "startColumnNumber" : 8,
        "endLineNumber" : 198,
        "endColumnNumber" : 104
      },
      "nodeContext" : "System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 8101,
        "startLineNumber" : 76,
        "startColumnNumber" : 27,
        "endLineNumber" : 309,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SqlSession session=this.sqlSessionFactory().openSession();\n  UserMapper userMapper=session.getMapper(UserMapper.class);\n  System.err.println(\" debug run 查询执行 user 表数据变化！ \");\n  userMapper.deleteAll();\n  Role role=new Role();\n  role.setId(IdWorker.getId());\n  role.setName(\"admin\");\n  User userA=new User();\n  userA.setId(IdWorker.getId());\n  userA.setName(\"junyu_shi\");\n  userA.setAge(1);\n  userA.setDesc(\"测试一把\");\n  userA.setTestType(1);\n  userA.setRole(role);\n  int rlt=userMapper.insert(userA);\n  User whereUser=userMapper.selectOne(userA);\n  print(whereUser);\n  userA.setAge(18);\n  userMapper.updateById(userA);\n  userMapper.delete(new EntityWrapper<>(userA));\n  System.err.println(\"--------- @TableField el() --------- \" + rlt);\n  rlt=userMapper.insertInjector(new User(1L,\"1\",1,1));\n  System.err.println(\"--------- insertInjector --------- \" + rlt);\n  User cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  long id=IdWorker.getId();\n  rlt=userMapper.insert(new User(id,\"abc\",18,1));\n  System.err.println(\"\\n--------------insert-------\" + rlt);\n  sleep();\n  rlt=userMapper.insert(new User(18));\n  System.err.println(\"\\n----------测试 name 字段忽略验证----insert-------\" + rlt);\n  sleep();\n  List<User> ul=new ArrayList<>();\n  ul.add(new User(11L,\"1\",1,0));\n  ul.add(new User(12L,\"2\",2,1));\n  ul.add(new User(13L,\"3\",3,1));\n  ul.add(new User(14L,\"delname\",4,0));\n  ul.add(new User(15L,\"5\",5,1));\n  ul.add(new User(16L,\"6\",6,0));\n  ul.add(new User(17L,7));\n  ul.add(new User(18L,8));\n  ul.add(new User(19L,9));\n  ul.add(new User(7));\n  ul.add(new User(20L,\"deleteByMap\",7,0));\n  ul.add(new User(\"8\",8,1));\n  ul.add(new User(\"9\",9,1));\n  for (  User u : ul) {\n    rlt=userMapper.insert(u);\n  }\n  System.err.println(\"\\n--------------insertBatch----------------\" + rlt + \"\\n\\n\");\n  System.err.println(\"\\n 自定义填充 testType=3 填充成功！\" + userMapper.selectById(18L).toString());\n  session.commit();\n  rlt=userMapper.deleteById(id);\n  System.err.println(\"---------deleteById------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  Map<String,Object> columnMap=new HashMap<>();\n  columnMap.put(\"name\",\"deleteByMap\");\n  columnMap.put(\"age\",null);\n  rlt=userMapper.deleteByMap(columnMap);\n  System.err.println(\"---------deleteByMap------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<Long> il=new ArrayList<>();\n  il.add(16L);\n  il.add(17L);\n  rlt=userMapper.deleteBatchIds(il);\n  System.err.println(\"---------deleteBatchIds------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  rlt=userMapper.delete(new EntityWrapper<>(new User(14L,\"delname\")));\n  System.err.println(\"--------------delete------------------ result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"MybatisPlus\"));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"update all column\",12,12));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.update(new User(\"55\",55,5),new EntityWrapper<>(new User(15L,\"5\")));\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  EntityWrapper<User> ew1=new EntityWrapper<>();\n  ew1.addFilter(\"test_id={0} AND name={1}\",15L,\"55\");\n  rlt=userMapper.update(new User(\"00\"),ew1);\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<User> userList=new ArrayList<>();\n  userList.add(new User(11L,\"updateBatchById-1\",1,1));\n  userList.add(new User(12L,\"updateBatchById-2\",2,1));\n  userList.add(new User(13L,\"updateBatchById-3\",3,1));\n  for (  User u : userList) {\n    rlt=userMapper.updateById(u);\n  }\n  System.err.println(\"------------------updateBatchById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  System.err.println(\"\\n------------------selectById----------------------\");\n  User user=userMapper.selectById(12L);\n  print(user);\n  System.err.println(\"\\n------------------selectBatchIds----------------------\");\n  List<Long> idList=new ArrayList<>();\n  idList.add(11L);\n  idList.add(12L);\n  List<User> ul0=userMapper.selectBatchIds(idList);\n  for (  User anUl0 : ul0) {\n    print(anUl0);\n  }\n  System.err.println(\"\\n------------------selectByMap-----满足 map 条件的数据----\");\n  Map<String,Object> cm=new HashMap<>();\n  cm.put(\"test_type\",1);\n  cm.put(\"1\",1);\n  List<User> ul1=userMapper.selectByMap(cm);\n  for (  User anUl1 : ul1) {\n    print(anUl1);\n  }\n  System.err.println(\"\\n------------------selectOne----------------------\");\n  User userOne=userMapper.selectOne(new User(\"abc\"));\n  print(userOne);\n  System.err.println(\"\\n------------------selectCount----------------------\");\n  System.err.println(\"查询 type=1 总记录数：\" + userMapper.selectCount(new EntityWrapper<>(new User(1))));\n  System.err.println(\"总记录数：\" + userMapper.selectCount(null));\n  System.err.println(\"\\n------------------selectList-----所有数据----id--DESC--排序----\");\n  List<User> ul2=userMapper.selectList(new EntityWrapper<User>(null,\"age,name\"));\n  for (  User anUl2 : ul2) {\n    print(anUl2);\n  }\n  System.err.println(\"\\n------------------list 分页查询 ----查询 testType = 1 的所有数据--id--DESC--排序--------\");\n  Page<User> page=new Page<>(1,2);\n  EntityWrapper<User> ew=new EntityWrapper<>(new User(1));\n  ew.setSqlSelect(\"age,name\");\n  ew.where(\"name like {0}\",\"'%dateBatch%'\").and(\"age={0}\",3).orderBy(\"age,name\",true);\n  List<User> paginList=userMapper.selectPage(page,ew);\n  page.setRecords(paginList);\n  for (int i=0; i < page.getRecords().size(); i++) {\n    print(page.getRecords().get(i));\n  }\n  System.err.println(\" 翻页：\" + page.toString());\n  System.err.println(\"\\n---------------xml---selectListRow 分页查询，不查询总数（此时可自定义 count 查询）----无查询条件--------------\");\n  List<User> rowList=userMapper.selectListRow(new Pagination(0,2,false));\n  for (  User aRowList : rowList) {\n    print(aRowList);\n  }\n  System.err.println(\" selectList EntityWrapper == null \\n\");\n  paginList=userMapper.selectList(null);\n  for (  User aPaginList : paginList) {\n    print(aPaginList);\n  }\n  rlt=userMapper.deleteAll();\n  System.err.println(\"清空测试数据！ rlt=\" + rlt);\n  session.commit();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1190,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 8394,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 309,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * RUN 测试 <p> <p> MybatisPlus 加载 SQL 顺序： </p> 1、加载XML中的SQL<br> 2、加载sqlProvider中的SQL<br> 3、xmlSql 与 sqlProvider不能包含相同的SQL<br> <br> 调整后的SQL优先级：xmlSql > sqlProvider > crudSql <br>\n */\n@Test public void crudTest(){\n  SqlSession session=this.sqlSessionFactory().openSession();\n  UserMapper userMapper=session.getMapper(UserMapper.class);\n  System.err.println(\" debug run 查询执行 user 表数据变化！ \");\n  userMapper.deleteAll();\n  Role role=new Role();\n  role.setId(IdWorker.getId());\n  role.setName(\"admin\");\n  User userA=new User();\n  userA.setId(IdWorker.getId());\n  userA.setName(\"junyu_shi\");\n  userA.setAge(1);\n  userA.setDesc(\"测试一把\");\n  userA.setTestType(1);\n  userA.setRole(role);\n  int rlt=userMapper.insert(userA);\n  User whereUser=userMapper.selectOne(userA);\n  print(whereUser);\n  userA.setAge(18);\n  userMapper.updateById(userA);\n  userMapper.delete(new EntityWrapper<>(userA));\n  System.err.println(\"--------- @TableField el() --------- \" + rlt);\n  rlt=userMapper.insertInjector(new User(1L,\"1\",1,1));\n  System.err.println(\"--------- insertInjector --------- \" + rlt);\n  User cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  long id=IdWorker.getId();\n  rlt=userMapper.insert(new User(id,\"abc\",18,1));\n  System.err.println(\"\\n--------------insert-------\" + rlt);\n  sleep();\n  rlt=userMapper.insert(new User(18));\n  System.err.println(\"\\n----------测试 name 字段忽略验证----insert-------\" + rlt);\n  sleep();\n  List<User> ul=new ArrayList<>();\n  ul.add(new User(11L,\"1\",1,0));\n  ul.add(new User(12L,\"2\",2,1));\n  ul.add(new User(13L,\"3\",3,1));\n  ul.add(new User(14L,\"delname\",4,0));\n  ul.add(new User(15L,\"5\",5,1));\n  ul.add(new User(16L,\"6\",6,0));\n  ul.add(new User(17L,7));\n  ul.add(new User(18L,8));\n  ul.add(new User(19L,9));\n  ul.add(new User(7));\n  ul.add(new User(20L,\"deleteByMap\",7,0));\n  ul.add(new User(\"8\",8,1));\n  ul.add(new User(\"9\",9,1));\n  for (  User u : ul) {\n    rlt=userMapper.insert(u);\n  }\n  System.err.println(\"\\n--------------insertBatch----------------\" + rlt + \"\\n\\n\");\n  System.err.println(\"\\n 自定义填充 testType=3 填充成功！\" + userMapper.selectById(18L).toString());\n  session.commit();\n  rlt=userMapper.deleteById(id);\n  System.err.println(\"---------deleteById------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  Map<String,Object> columnMap=new HashMap<>();\n  columnMap.put(\"name\",\"deleteByMap\");\n  columnMap.put(\"age\",null);\n  rlt=userMapper.deleteByMap(columnMap);\n  System.err.println(\"---------deleteByMap------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<Long> il=new ArrayList<>();\n  il.add(16L);\n  il.add(17L);\n  rlt=userMapper.deleteBatchIds(il);\n  System.err.println(\"---------deleteBatchIds------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  rlt=userMapper.delete(new EntityWrapper<>(new User(14L,\"delname\")));\n  System.err.println(\"--------------delete------------------ result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"MybatisPlus\"));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"update all column\",12,12));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.update(new User(\"55\",55,5),new EntityWrapper<>(new User(15L,\"5\")));\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  EntityWrapper<User> ew1=new EntityWrapper<>();\n  ew1.addFilter(\"test_id={0} AND name={1}\",15L,\"55\");\n  rlt=userMapper.update(new User(\"00\"),ew1);\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<User> userList=new ArrayList<>();\n  userList.add(new User(11L,\"updateBatchById-1\",1,1));\n  userList.add(new User(12L,\"updateBatchById-2\",2,1));\n  userList.add(new User(13L,\"updateBatchById-3\",3,1));\n  for (  User u : userList) {\n    rlt=userMapper.updateById(u);\n  }\n  System.err.println(\"------------------updateBatchById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  System.err.println(\"\\n------------------selectById----------------------\");\n  User user=userMapper.selectById(12L);\n  print(user);\n  System.err.println(\"\\n------------------selectBatchIds----------------------\");\n  List<Long> idList=new ArrayList<>();\n  idList.add(11L);\n  idList.add(12L);\n  List<User> ul0=userMapper.selectBatchIds(idList);\n  for (  User anUl0 : ul0) {\n    print(anUl0);\n  }\n  System.err.println(\"\\n------------------selectByMap-----满足 map 条件的数据----\");\n  Map<String,Object> cm=new HashMap<>();\n  cm.put(\"test_type\",1);\n  cm.put(\"1\",1);\n  List<User> ul1=userMapper.selectByMap(cm);\n  for (  User anUl1 : ul1) {\n    print(anUl1);\n  }\n  System.err.println(\"\\n------------------selectOne----------------------\");\n  User userOne=userMapper.selectOne(new User(\"abc\"));\n  print(userOne);\n  System.err.println(\"\\n------------------selectCount----------------------\");\n  System.err.println(\"查询 type=1 总记录数：\" + userMapper.selectCount(new EntityWrapper<>(new User(1))));\n  System.err.println(\"总记录数：\" + userMapper.selectCount(null));\n  System.err.println(\"\\n------------------selectList-----所有数据----id--DESC--排序----\");\n  List<User> ul2=userMapper.selectList(new EntityWrapper<User>(null,\"age,name\"));\n  for (  User anUl2 : ul2) {\n    print(anUl2);\n  }\n  System.err.println(\"\\n------------------list 分页查询 ----查询 testType = 1 的所有数据--id--DESC--排序--------\");\n  Page<User> page=new Page<>(1,2);\n  EntityWrapper<User> ew=new EntityWrapper<>(new User(1));\n  ew.setSqlSelect(\"age,name\");\n  ew.where(\"name like {0}\",\"'%dateBatch%'\").and(\"age={0}\",3).orderBy(\"age,name\",true);\n  List<User> paginList=userMapper.selectPage(page,ew);\n  page.setRecords(paginList);\n  for (int i=0; i < page.getRecords().size(); i++) {\n    print(page.getRecords().get(i));\n  }\n  System.err.println(\" 翻页：\" + page.toString());\n  System.err.println(\"\\n---------------xml---selectListRow 分页查询，不查询总数（此时可自定义 count 查询）----无查询条件--------------\");\n  List<User> rowList=userMapper.selectListRow(new Pagination(0,2,false));\n  for (  User aRowList : rowList) {\n    print(aRowList);\n  }\n  System.err.println(\" selectList EntityWrapper == null \\n\");\n  paginList=userMapper.selectList(null);\n  for (  User aPaginList : paginList) {\n    print(aPaginList);\n  }\n  rlt=userMapper.deleteAll();\n  System.err.println(\"清空测试数据！ rlt=\" + rlt);\n  session.commit();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1197,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 198,
        "startColumnNumber" : 8,
        "endLineNumber" : 198,
        "endColumnNumber" : 104
      },
      "nodeContext" : "System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "rlt",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 202,
      "startColumnNumber" : 86,
      "endLineNumber" : 202,
      "endColumnNumber" : 89
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 202,
        "startColumnNumber" : 27,
        "endLineNumber" : 202,
        "endColumnNumber" : 98
      },
      "nodeContext" : "\"------------------update---------------------- result=\" + rlt + \"\\n\\n\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 202,
        "startColumnNumber" : 8,
        "endLineNumber" : 202,
        "endColumnNumber" : 99
      },
      "nodeContext" : "System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 202,
        "startColumnNumber" : 8,
        "endLineNumber" : 202,
        "endColumnNumber" : 100
      },
      "nodeContext" : "System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 8101,
        "startLineNumber" : 76,
        "startColumnNumber" : 27,
        "endLineNumber" : 309,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SqlSession session=this.sqlSessionFactory().openSession();\n  UserMapper userMapper=session.getMapper(UserMapper.class);\n  System.err.println(\" debug run 查询执行 user 表数据变化！ \");\n  userMapper.deleteAll();\n  Role role=new Role();\n  role.setId(IdWorker.getId());\n  role.setName(\"admin\");\n  User userA=new User();\n  userA.setId(IdWorker.getId());\n  userA.setName(\"junyu_shi\");\n  userA.setAge(1);\n  userA.setDesc(\"测试一把\");\n  userA.setTestType(1);\n  userA.setRole(role);\n  int rlt=userMapper.insert(userA);\n  User whereUser=userMapper.selectOne(userA);\n  print(whereUser);\n  userA.setAge(18);\n  userMapper.updateById(userA);\n  userMapper.delete(new EntityWrapper<>(userA));\n  System.err.println(\"--------- @TableField el() --------- \" + rlt);\n  rlt=userMapper.insertInjector(new User(1L,\"1\",1,1));\n  System.err.println(\"--------- insertInjector --------- \" + rlt);\n  User cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  long id=IdWorker.getId();\n  rlt=userMapper.insert(new User(id,\"abc\",18,1));\n  System.err.println(\"\\n--------------insert-------\" + rlt);\n  sleep();\n  rlt=userMapper.insert(new User(18));\n  System.err.println(\"\\n----------测试 name 字段忽略验证----insert-------\" + rlt);\n  sleep();\n  List<User> ul=new ArrayList<>();\n  ul.add(new User(11L,\"1\",1,0));\n  ul.add(new User(12L,\"2\",2,1));\n  ul.add(new User(13L,\"3\",3,1));\n  ul.add(new User(14L,\"delname\",4,0));\n  ul.add(new User(15L,\"5\",5,1));\n  ul.add(new User(16L,\"6\",6,0));\n  ul.add(new User(17L,7));\n  ul.add(new User(18L,8));\n  ul.add(new User(19L,9));\n  ul.add(new User(7));\n  ul.add(new User(20L,\"deleteByMap\",7,0));\n  ul.add(new User(\"8\",8,1));\n  ul.add(new User(\"9\",9,1));\n  for (  User u : ul) {\n    rlt=userMapper.insert(u);\n  }\n  System.err.println(\"\\n--------------insertBatch----------------\" + rlt + \"\\n\\n\");\n  System.err.println(\"\\n 自定义填充 testType=3 填充成功！\" + userMapper.selectById(18L).toString());\n  session.commit();\n  rlt=userMapper.deleteById(id);\n  System.err.println(\"---------deleteById------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  Map<String,Object> columnMap=new HashMap<>();\n  columnMap.put(\"name\",\"deleteByMap\");\n  columnMap.put(\"age\",null);\n  rlt=userMapper.deleteByMap(columnMap);\n  System.err.println(\"---------deleteByMap------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<Long> il=new ArrayList<>();\n  il.add(16L);\n  il.add(17L);\n  rlt=userMapper.deleteBatchIds(il);\n  System.err.println(\"---------deleteBatchIds------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  rlt=userMapper.delete(new EntityWrapper<>(new User(14L,\"delname\")));\n  System.err.println(\"--------------delete------------------ result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"MybatisPlus\"));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"update all column\",12,12));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.update(new User(\"55\",55,5),new EntityWrapper<>(new User(15L,\"5\")));\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  EntityWrapper<User> ew1=new EntityWrapper<>();\n  ew1.addFilter(\"test_id={0} AND name={1}\",15L,\"55\");\n  rlt=userMapper.update(new User(\"00\"),ew1);\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<User> userList=new ArrayList<>();\n  userList.add(new User(11L,\"updateBatchById-1\",1,1));\n  userList.add(new User(12L,\"updateBatchById-2\",2,1));\n  userList.add(new User(13L,\"updateBatchById-3\",3,1));\n  for (  User u : userList) {\n    rlt=userMapper.updateById(u);\n  }\n  System.err.println(\"------------------updateBatchById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  System.err.println(\"\\n------------------selectById----------------------\");\n  User user=userMapper.selectById(12L);\n  print(user);\n  System.err.println(\"\\n------------------selectBatchIds----------------------\");\n  List<Long> idList=new ArrayList<>();\n  idList.add(11L);\n  idList.add(12L);\n  List<User> ul0=userMapper.selectBatchIds(idList);\n  for (  User anUl0 : ul0) {\n    print(anUl0);\n  }\n  System.err.println(\"\\n------------------selectByMap-----满足 map 条件的数据----\");\n  Map<String,Object> cm=new HashMap<>();\n  cm.put(\"test_type\",1);\n  cm.put(\"1\",1);\n  List<User> ul1=userMapper.selectByMap(cm);\n  for (  User anUl1 : ul1) {\n    print(anUl1);\n  }\n  System.err.println(\"\\n------------------selectOne----------------------\");\n  User userOne=userMapper.selectOne(new User(\"abc\"));\n  print(userOne);\n  System.err.println(\"\\n------------------selectCount----------------------\");\n  System.err.println(\"查询 type=1 总记录数：\" + userMapper.selectCount(new EntityWrapper<>(new User(1))));\n  System.err.println(\"总记录数：\" + userMapper.selectCount(null));\n  System.err.println(\"\\n------------------selectList-----所有数据----id--DESC--排序----\");\n  List<User> ul2=userMapper.selectList(new EntityWrapper<User>(null,\"age,name\"));\n  for (  User anUl2 : ul2) {\n    print(anUl2);\n  }\n  System.err.println(\"\\n------------------list 分页查询 ----查询 testType = 1 的所有数据--id--DESC--排序--------\");\n  Page<User> page=new Page<>(1,2);\n  EntityWrapper<User> ew=new EntityWrapper<>(new User(1));\n  ew.setSqlSelect(\"age,name\");\n  ew.where(\"name like {0}\",\"'%dateBatch%'\").and(\"age={0}\",3).orderBy(\"age,name\",true);\n  List<User> paginList=userMapper.selectPage(page,ew);\n  page.setRecords(paginList);\n  for (int i=0; i < page.getRecords().size(); i++) {\n    print(page.getRecords().get(i));\n  }\n  System.err.println(\" 翻页：\" + page.toString());\n  System.err.println(\"\\n---------------xml---selectListRow 分页查询，不查询总数（此时可自定义 count 查询）----无查询条件--------------\");\n  List<User> rowList=userMapper.selectListRow(new Pagination(0,2,false));\n  for (  User aRowList : rowList) {\n    print(aRowList);\n  }\n  System.err.println(\" selectList EntityWrapper == null \\n\");\n  paginList=userMapper.selectList(null);\n  for (  User aPaginList : paginList) {\n    print(aPaginList);\n  }\n  rlt=userMapper.deleteAll();\n  System.err.println(\"清空测试数据！ rlt=\" + rlt);\n  session.commit();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1190,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 8394,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 309,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * RUN 测试 <p> <p> MybatisPlus 加载 SQL 顺序： </p> 1、加载XML中的SQL<br> 2、加载sqlProvider中的SQL<br> 3、xmlSql 与 sqlProvider不能包含相同的SQL<br> <br> 调整后的SQL优先级：xmlSql > sqlProvider > crudSql <br>\n */\n@Test public void crudTest(){\n  SqlSession session=this.sqlSessionFactory().openSession();\n  UserMapper userMapper=session.getMapper(UserMapper.class);\n  System.err.println(\" debug run 查询执行 user 表数据变化！ \");\n  userMapper.deleteAll();\n  Role role=new Role();\n  role.setId(IdWorker.getId());\n  role.setName(\"admin\");\n  User userA=new User();\n  userA.setId(IdWorker.getId());\n  userA.setName(\"junyu_shi\");\n  userA.setAge(1);\n  userA.setDesc(\"测试一把\");\n  userA.setTestType(1);\n  userA.setRole(role);\n  int rlt=userMapper.insert(userA);\n  User whereUser=userMapper.selectOne(userA);\n  print(whereUser);\n  userA.setAge(18);\n  userMapper.updateById(userA);\n  userMapper.delete(new EntityWrapper<>(userA));\n  System.err.println(\"--------- @TableField el() --------- \" + rlt);\n  rlt=userMapper.insertInjector(new User(1L,\"1\",1,1));\n  System.err.println(\"--------- insertInjector --------- \" + rlt);\n  User cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  long id=IdWorker.getId();\n  rlt=userMapper.insert(new User(id,\"abc\",18,1));\n  System.err.println(\"\\n--------------insert-------\" + rlt);\n  sleep();\n  rlt=userMapper.insert(new User(18));\n  System.err.println(\"\\n----------测试 name 字段忽略验证----insert-------\" + rlt);\n  sleep();\n  List<User> ul=new ArrayList<>();\n  ul.add(new User(11L,\"1\",1,0));\n  ul.add(new User(12L,\"2\",2,1));\n  ul.add(new User(13L,\"3\",3,1));\n  ul.add(new User(14L,\"delname\",4,0));\n  ul.add(new User(15L,\"5\",5,1));\n  ul.add(new User(16L,\"6\",6,0));\n  ul.add(new User(17L,7));\n  ul.add(new User(18L,8));\n  ul.add(new User(19L,9));\n  ul.add(new User(7));\n  ul.add(new User(20L,\"deleteByMap\",7,0));\n  ul.add(new User(\"8\",8,1));\n  ul.add(new User(\"9\",9,1));\n  for (  User u : ul) {\n    rlt=userMapper.insert(u);\n  }\n  System.err.println(\"\\n--------------insertBatch----------------\" + rlt + \"\\n\\n\");\n  System.err.println(\"\\n 自定义填充 testType=3 填充成功！\" + userMapper.selectById(18L).toString());\n  session.commit();\n  rlt=userMapper.deleteById(id);\n  System.err.println(\"---------deleteById------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  Map<String,Object> columnMap=new HashMap<>();\n  columnMap.put(\"name\",\"deleteByMap\");\n  columnMap.put(\"age\",null);\n  rlt=userMapper.deleteByMap(columnMap);\n  System.err.println(\"---------deleteByMap------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<Long> il=new ArrayList<>();\n  il.add(16L);\n  il.add(17L);\n  rlt=userMapper.deleteBatchIds(il);\n  System.err.println(\"---------deleteBatchIds------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  rlt=userMapper.delete(new EntityWrapper<>(new User(14L,\"delname\")));\n  System.err.println(\"--------------delete------------------ result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"MybatisPlus\"));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"update all column\",12,12));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.update(new User(\"55\",55,5),new EntityWrapper<>(new User(15L,\"5\")));\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  EntityWrapper<User> ew1=new EntityWrapper<>();\n  ew1.addFilter(\"test_id={0} AND name={1}\",15L,\"55\");\n  rlt=userMapper.update(new User(\"00\"),ew1);\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<User> userList=new ArrayList<>();\n  userList.add(new User(11L,\"updateBatchById-1\",1,1));\n  userList.add(new User(12L,\"updateBatchById-2\",2,1));\n  userList.add(new User(13L,\"updateBatchById-3\",3,1));\n  for (  User u : userList) {\n    rlt=userMapper.updateById(u);\n  }\n  System.err.println(\"------------------updateBatchById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  System.err.println(\"\\n------------------selectById----------------------\");\n  User user=userMapper.selectById(12L);\n  print(user);\n  System.err.println(\"\\n------------------selectBatchIds----------------------\");\n  List<Long> idList=new ArrayList<>();\n  idList.add(11L);\n  idList.add(12L);\n  List<User> ul0=userMapper.selectBatchIds(idList);\n  for (  User anUl0 : ul0) {\n    print(anUl0);\n  }\n  System.err.println(\"\\n------------------selectByMap-----满足 map 条件的数据----\");\n  Map<String,Object> cm=new HashMap<>();\n  cm.put(\"test_type\",1);\n  cm.put(\"1\",1);\n  List<User> ul1=userMapper.selectByMap(cm);\n  for (  User anUl1 : ul1) {\n    print(anUl1);\n  }\n  System.err.println(\"\\n------------------selectOne----------------------\");\n  User userOne=userMapper.selectOne(new User(\"abc\"));\n  print(userOne);\n  System.err.println(\"\\n------------------selectCount----------------------\");\n  System.err.println(\"查询 type=1 总记录数：\" + userMapper.selectCount(new EntityWrapper<>(new User(1))));\n  System.err.println(\"总记录数：\" + userMapper.selectCount(null));\n  System.err.println(\"\\n------------------selectList-----所有数据----id--DESC--排序----\");\n  List<User> ul2=userMapper.selectList(new EntityWrapper<User>(null,\"age,name\"));\n  for (  User anUl2 : ul2) {\n    print(anUl2);\n  }\n  System.err.println(\"\\n------------------list 分页查询 ----查询 testType = 1 的所有数据--id--DESC--排序--------\");\n  Page<User> page=new Page<>(1,2);\n  EntityWrapper<User> ew=new EntityWrapper<>(new User(1));\n  ew.setSqlSelect(\"age,name\");\n  ew.where(\"name like {0}\",\"'%dateBatch%'\").and(\"age={0}\",3).orderBy(\"age,name\",true);\n  List<User> paginList=userMapper.selectPage(page,ew);\n  page.setRecords(paginList);\n  for (int i=0; i < page.getRecords().size(); i++) {\n    print(page.getRecords().get(i));\n  }\n  System.err.println(\" 翻页：\" + page.toString());\n  System.err.println(\"\\n---------------xml---selectListRow 分页查询，不查询总数（此时可自定义 count 查询）----无查询条件--------------\");\n  List<User> rowList=userMapper.selectListRow(new Pagination(0,2,false));\n  for (  User aRowList : rowList) {\n    print(aRowList);\n  }\n  System.err.println(\" selectList EntityWrapper == null \\n\");\n  paginList=userMapper.selectList(null);\n  for (  User aPaginList : paginList) {\n    print(aPaginList);\n  }\n  rlt=userMapper.deleteAll();\n  System.err.println(\"清空测试数据！ rlt=\" + rlt);\n  session.commit();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1197,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 202,
        "startColumnNumber" : 8,
        "endLineNumber" : 202,
        "endColumnNumber" : 100
      },
      "nodeContext" : "System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "rlt",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 208,
      "startColumnNumber" : 86,
      "endLineNumber" : 208,
      "endColumnNumber" : 89
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 71,
        "startLineNumber" : 208,
        "startColumnNumber" : 27,
        "endLineNumber" : 208,
        "endColumnNumber" : 98
      },
      "nodeContext" : "\"------------------update---------------------- result=\" + rlt + \"\\n\\n\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 91,
        "startLineNumber" : 208,
        "startColumnNumber" : 8,
        "endLineNumber" : 208,
        "endColumnNumber" : 99
      },
      "nodeContext" : "System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 208,
        "startColumnNumber" : 8,
        "endLineNumber" : 208,
        "endColumnNumber" : 100
      },
      "nodeContext" : "System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 8101,
        "startLineNumber" : 76,
        "startColumnNumber" : 27,
        "endLineNumber" : 309,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SqlSession session=this.sqlSessionFactory().openSession();\n  UserMapper userMapper=session.getMapper(UserMapper.class);\n  System.err.println(\" debug run 查询执行 user 表数据变化！ \");\n  userMapper.deleteAll();\n  Role role=new Role();\n  role.setId(IdWorker.getId());\n  role.setName(\"admin\");\n  User userA=new User();\n  userA.setId(IdWorker.getId());\n  userA.setName(\"junyu_shi\");\n  userA.setAge(1);\n  userA.setDesc(\"测试一把\");\n  userA.setTestType(1);\n  userA.setRole(role);\n  int rlt=userMapper.insert(userA);\n  User whereUser=userMapper.selectOne(userA);\n  print(whereUser);\n  userA.setAge(18);\n  userMapper.updateById(userA);\n  userMapper.delete(new EntityWrapper<>(userA));\n  System.err.println(\"--------- @TableField el() --------- \" + rlt);\n  rlt=userMapper.insertInjector(new User(1L,\"1\",1,1));\n  System.err.println(\"--------- insertInjector --------- \" + rlt);\n  User cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  long id=IdWorker.getId();\n  rlt=userMapper.insert(new User(id,\"abc\",18,1));\n  System.err.println(\"\\n--------------insert-------\" + rlt);\n  sleep();\n  rlt=userMapper.insert(new User(18));\n  System.err.println(\"\\n----------测试 name 字段忽略验证----insert-------\" + rlt);\n  sleep();\n  List<User> ul=new ArrayList<>();\n  ul.add(new User(11L,\"1\",1,0));\n  ul.add(new User(12L,\"2\",2,1));\n  ul.add(new User(13L,\"3\",3,1));\n  ul.add(new User(14L,\"delname\",4,0));\n  ul.add(new User(15L,\"5\",5,1));\n  ul.add(new User(16L,\"6\",6,0));\n  ul.add(new User(17L,7));\n  ul.add(new User(18L,8));\n  ul.add(new User(19L,9));\n  ul.add(new User(7));\n  ul.add(new User(20L,\"deleteByMap\",7,0));\n  ul.add(new User(\"8\",8,1));\n  ul.add(new User(\"9\",9,1));\n  for (  User u : ul) {\n    rlt=userMapper.insert(u);\n  }\n  System.err.println(\"\\n--------------insertBatch----------------\" + rlt + \"\\n\\n\");\n  System.err.println(\"\\n 自定义填充 testType=3 填充成功！\" + userMapper.selectById(18L).toString());\n  session.commit();\n  rlt=userMapper.deleteById(id);\n  System.err.println(\"---------deleteById------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  Map<String,Object> columnMap=new HashMap<>();\n  columnMap.put(\"name\",\"deleteByMap\");\n  columnMap.put(\"age\",null);\n  rlt=userMapper.deleteByMap(columnMap);\n  System.err.println(\"---------deleteByMap------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<Long> il=new ArrayList<>();\n  il.add(16L);\n  il.add(17L);\n  rlt=userMapper.deleteBatchIds(il);\n  System.err.println(\"---------deleteBatchIds------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  rlt=userMapper.delete(new EntityWrapper<>(new User(14L,\"delname\")));\n  System.err.println(\"--------------delete------------------ result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"MybatisPlus\"));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"update all column\",12,12));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.update(new User(\"55\",55,5),new EntityWrapper<>(new User(15L,\"5\")));\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  EntityWrapper<User> ew1=new EntityWrapper<>();\n  ew1.addFilter(\"test_id={0} AND name={1}\",15L,\"55\");\n  rlt=userMapper.update(new User(\"00\"),ew1);\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<User> userList=new ArrayList<>();\n  userList.add(new User(11L,\"updateBatchById-1\",1,1));\n  userList.add(new User(12L,\"updateBatchById-2\",2,1));\n  userList.add(new User(13L,\"updateBatchById-3\",3,1));\n  for (  User u : userList) {\n    rlt=userMapper.updateById(u);\n  }\n  System.err.println(\"------------------updateBatchById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  System.err.println(\"\\n------------------selectById----------------------\");\n  User user=userMapper.selectById(12L);\n  print(user);\n  System.err.println(\"\\n------------------selectBatchIds----------------------\");\n  List<Long> idList=new ArrayList<>();\n  idList.add(11L);\n  idList.add(12L);\n  List<User> ul0=userMapper.selectBatchIds(idList);\n  for (  User anUl0 : ul0) {\n    print(anUl0);\n  }\n  System.err.println(\"\\n------------------selectByMap-----满足 map 条件的数据----\");\n  Map<String,Object> cm=new HashMap<>();\n  cm.put(\"test_type\",1);\n  cm.put(\"1\",1);\n  List<User> ul1=userMapper.selectByMap(cm);\n  for (  User anUl1 : ul1) {\n    print(anUl1);\n  }\n  System.err.println(\"\\n------------------selectOne----------------------\");\n  User userOne=userMapper.selectOne(new User(\"abc\"));\n  print(userOne);\n  System.err.println(\"\\n------------------selectCount----------------------\");\n  System.err.println(\"查询 type=1 总记录数：\" + userMapper.selectCount(new EntityWrapper<>(new User(1))));\n  System.err.println(\"总记录数：\" + userMapper.selectCount(null));\n  System.err.println(\"\\n------------------selectList-----所有数据----id--DESC--排序----\");\n  List<User> ul2=userMapper.selectList(new EntityWrapper<User>(null,\"age,name\"));\n  for (  User anUl2 : ul2) {\n    print(anUl2);\n  }\n  System.err.println(\"\\n------------------list 分页查询 ----查询 testType = 1 的所有数据--id--DESC--排序--------\");\n  Page<User> page=new Page<>(1,2);\n  EntityWrapper<User> ew=new EntityWrapper<>(new User(1));\n  ew.setSqlSelect(\"age,name\");\n  ew.where(\"name like {0}\",\"'%dateBatch%'\").and(\"age={0}\",3).orderBy(\"age,name\",true);\n  List<User> paginList=userMapper.selectPage(page,ew);\n  page.setRecords(paginList);\n  for (int i=0; i < page.getRecords().size(); i++) {\n    print(page.getRecords().get(i));\n  }\n  System.err.println(\" 翻页：\" + page.toString());\n  System.err.println(\"\\n---------------xml---selectListRow 分页查询，不查询总数（此时可自定义 count 查询）----无查询条件--------------\");\n  List<User> rowList=userMapper.selectListRow(new Pagination(0,2,false));\n  for (  User aRowList : rowList) {\n    print(aRowList);\n  }\n  System.err.println(\" selectList EntityWrapper == null \\n\");\n  paginList=userMapper.selectList(null);\n  for (  User aPaginList : paginList) {\n    print(aPaginList);\n  }\n  rlt=userMapper.deleteAll();\n  System.err.println(\"清空测试数据！ rlt=\" + rlt);\n  session.commit();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1190,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 8394,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 309,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * RUN 测试 <p> <p> MybatisPlus 加载 SQL 顺序： </p> 1、加载XML中的SQL<br> 2、加载sqlProvider中的SQL<br> 3、xmlSql 与 sqlProvider不能包含相同的SQL<br> <br> 调整后的SQL优先级：xmlSql > sqlProvider > crudSql <br>\n */\n@Test public void crudTest(){\n  SqlSession session=this.sqlSessionFactory().openSession();\n  UserMapper userMapper=session.getMapper(UserMapper.class);\n  System.err.println(\" debug run 查询执行 user 表数据变化！ \");\n  userMapper.deleteAll();\n  Role role=new Role();\n  role.setId(IdWorker.getId());\n  role.setName(\"admin\");\n  User userA=new User();\n  userA.setId(IdWorker.getId());\n  userA.setName(\"junyu_shi\");\n  userA.setAge(1);\n  userA.setDesc(\"测试一把\");\n  userA.setTestType(1);\n  userA.setRole(role);\n  int rlt=userMapper.insert(userA);\n  User whereUser=userMapper.selectOne(userA);\n  print(whereUser);\n  userA.setAge(18);\n  userMapper.updateById(userA);\n  userMapper.delete(new EntityWrapper<>(userA));\n  System.err.println(\"--------- @TableField el() --------- \" + rlt);\n  rlt=userMapper.insertInjector(new User(1L,\"1\",1,1));\n  System.err.println(\"--------- insertInjector --------- \" + rlt);\n  User cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  long id=IdWorker.getId();\n  rlt=userMapper.insert(new User(id,\"abc\",18,1));\n  System.err.println(\"\\n--------------insert-------\" + rlt);\n  sleep();\n  rlt=userMapper.insert(new User(18));\n  System.err.println(\"\\n----------测试 name 字段忽略验证----insert-------\" + rlt);\n  sleep();\n  List<User> ul=new ArrayList<>();\n  ul.add(new User(11L,\"1\",1,0));\n  ul.add(new User(12L,\"2\",2,1));\n  ul.add(new User(13L,\"3\",3,1));\n  ul.add(new User(14L,\"delname\",4,0));\n  ul.add(new User(15L,\"5\",5,1));\n  ul.add(new User(16L,\"6\",6,0));\n  ul.add(new User(17L,7));\n  ul.add(new User(18L,8));\n  ul.add(new User(19L,9));\n  ul.add(new User(7));\n  ul.add(new User(20L,\"deleteByMap\",7,0));\n  ul.add(new User(\"8\",8,1));\n  ul.add(new User(\"9\",9,1));\n  for (  User u : ul) {\n    rlt=userMapper.insert(u);\n  }\n  System.err.println(\"\\n--------------insertBatch----------------\" + rlt + \"\\n\\n\");\n  System.err.println(\"\\n 自定义填充 testType=3 填充成功！\" + userMapper.selectById(18L).toString());\n  session.commit();\n  rlt=userMapper.deleteById(id);\n  System.err.println(\"---------deleteById------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  Map<String,Object> columnMap=new HashMap<>();\n  columnMap.put(\"name\",\"deleteByMap\");\n  columnMap.put(\"age\",null);\n  rlt=userMapper.deleteByMap(columnMap);\n  System.err.println(\"---------deleteByMap------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<Long> il=new ArrayList<>();\n  il.add(16L);\n  il.add(17L);\n  rlt=userMapper.deleteBatchIds(il);\n  System.err.println(\"---------deleteBatchIds------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  rlt=userMapper.delete(new EntityWrapper<>(new User(14L,\"delname\")));\n  System.err.println(\"--------------delete------------------ result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"MybatisPlus\"));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"update all column\",12,12));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.update(new User(\"55\",55,5),new EntityWrapper<>(new User(15L,\"5\")));\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  EntityWrapper<User> ew1=new EntityWrapper<>();\n  ew1.addFilter(\"test_id={0} AND name={1}\",15L,\"55\");\n  rlt=userMapper.update(new User(\"00\"),ew1);\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<User> userList=new ArrayList<>();\n  userList.add(new User(11L,\"updateBatchById-1\",1,1));\n  userList.add(new User(12L,\"updateBatchById-2\",2,1));\n  userList.add(new User(13L,\"updateBatchById-3\",3,1));\n  for (  User u : userList) {\n    rlt=userMapper.updateById(u);\n  }\n  System.err.println(\"------------------updateBatchById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  System.err.println(\"\\n------------------selectById----------------------\");\n  User user=userMapper.selectById(12L);\n  print(user);\n  System.err.println(\"\\n------------------selectBatchIds----------------------\");\n  List<Long> idList=new ArrayList<>();\n  idList.add(11L);\n  idList.add(12L);\n  List<User> ul0=userMapper.selectBatchIds(idList);\n  for (  User anUl0 : ul0) {\n    print(anUl0);\n  }\n  System.err.println(\"\\n------------------selectByMap-----满足 map 条件的数据----\");\n  Map<String,Object> cm=new HashMap<>();\n  cm.put(\"test_type\",1);\n  cm.put(\"1\",1);\n  List<User> ul1=userMapper.selectByMap(cm);\n  for (  User anUl1 : ul1) {\n    print(anUl1);\n  }\n  System.err.println(\"\\n------------------selectOne----------------------\");\n  User userOne=userMapper.selectOne(new User(\"abc\"));\n  print(userOne);\n  System.err.println(\"\\n------------------selectCount----------------------\");\n  System.err.println(\"查询 type=1 总记录数：\" + userMapper.selectCount(new EntityWrapper<>(new User(1))));\n  System.err.println(\"总记录数：\" + userMapper.selectCount(null));\n  System.err.println(\"\\n------------------selectList-----所有数据----id--DESC--排序----\");\n  List<User> ul2=userMapper.selectList(new EntityWrapper<User>(null,\"age,name\"));\n  for (  User anUl2 : ul2) {\n    print(anUl2);\n  }\n  System.err.println(\"\\n------------------list 分页查询 ----查询 testType = 1 的所有数据--id--DESC--排序--------\");\n  Page<User> page=new Page<>(1,2);\n  EntityWrapper<User> ew=new EntityWrapper<>(new User(1));\n  ew.setSqlSelect(\"age,name\");\n  ew.where(\"name like {0}\",\"'%dateBatch%'\").and(\"age={0}\",3).orderBy(\"age,name\",true);\n  List<User> paginList=userMapper.selectPage(page,ew);\n  page.setRecords(paginList);\n  for (int i=0; i < page.getRecords().size(); i++) {\n    print(page.getRecords().get(i));\n  }\n  System.err.println(\" 翻页：\" + page.toString());\n  System.err.println(\"\\n---------------xml---selectListRow 分页查询，不查询总数（此时可自定义 count 查询）----无查询条件--------------\");\n  List<User> rowList=userMapper.selectListRow(new Pagination(0,2,false));\n  for (  User aRowList : rowList) {\n    print(aRowList);\n  }\n  System.err.println(\" selectList EntityWrapper == null \\n\");\n  paginList=userMapper.selectList(null);\n  for (  User aPaginList : paginList) {\n    print(aPaginList);\n  }\n  rlt=userMapper.deleteAll();\n  System.err.println(\"清空测试数据！ rlt=\" + rlt);\n  session.commit();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1197,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 208,
        "startColumnNumber" : 8,
        "endLineNumber" : 208,
        "endColumnNumber" : 100
      },
      "nodeContext" : "System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "rlt",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 221,
      "startColumnNumber" : 95,
      "endLineNumber" : 221,
      "endColumnNumber" : 98
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 221,
        "startColumnNumber" : 27,
        "endLineNumber" : 221,
        "endColumnNumber" : 107
      },
      "nodeContext" : "\"------------------updateBatchById---------------------- result=\" + rlt + \"\\n\\n\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 221,
        "startColumnNumber" : 8,
        "endLineNumber" : 221,
        "endColumnNumber" : 108
      },
      "nodeContext" : "System.err.println(\"------------------updateBatchById---------------------- result=\" + rlt + \"\\n\\n\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 221,
        "startColumnNumber" : 8,
        "endLineNumber" : 221,
        "endColumnNumber" : 109
      },
      "nodeContext" : "System.err.println(\"------------------updateBatchById---------------------- result=\" + rlt + \"\\n\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 8101,
        "startLineNumber" : 76,
        "startColumnNumber" : 27,
        "endLineNumber" : 309,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SqlSession session=this.sqlSessionFactory().openSession();\n  UserMapper userMapper=session.getMapper(UserMapper.class);\n  System.err.println(\" debug run 查询执行 user 表数据变化！ \");\n  userMapper.deleteAll();\n  Role role=new Role();\n  role.setId(IdWorker.getId());\n  role.setName(\"admin\");\n  User userA=new User();\n  userA.setId(IdWorker.getId());\n  userA.setName(\"junyu_shi\");\n  userA.setAge(1);\n  userA.setDesc(\"测试一把\");\n  userA.setTestType(1);\n  userA.setRole(role);\n  int rlt=userMapper.insert(userA);\n  User whereUser=userMapper.selectOne(userA);\n  print(whereUser);\n  userA.setAge(18);\n  userMapper.updateById(userA);\n  userMapper.delete(new EntityWrapper<>(userA));\n  System.err.println(\"--------- @TableField el() --------- \" + rlt);\n  rlt=userMapper.insertInjector(new User(1L,\"1\",1,1));\n  System.err.println(\"--------- insertInjector --------- \" + rlt);\n  User cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  long id=IdWorker.getId();\n  rlt=userMapper.insert(new User(id,\"abc\",18,1));\n  System.err.println(\"\\n--------------insert-------\" + rlt);\n  sleep();\n  rlt=userMapper.insert(new User(18));\n  System.err.println(\"\\n----------测试 name 字段忽略验证----insert-------\" + rlt);\n  sleep();\n  List<User> ul=new ArrayList<>();\n  ul.add(new User(11L,\"1\",1,0));\n  ul.add(new User(12L,\"2\",2,1));\n  ul.add(new User(13L,\"3\",3,1));\n  ul.add(new User(14L,\"delname\",4,0));\n  ul.add(new User(15L,\"5\",5,1));\n  ul.add(new User(16L,\"6\",6,0));\n  ul.add(new User(17L,7));\n  ul.add(new User(18L,8));\n  ul.add(new User(19L,9));\n  ul.add(new User(7));\n  ul.add(new User(20L,\"deleteByMap\",7,0));\n  ul.add(new User(\"8\",8,1));\n  ul.add(new User(\"9\",9,1));\n  for (  User u : ul) {\n    rlt=userMapper.insert(u);\n  }\n  System.err.println(\"\\n--------------insertBatch----------------\" + rlt + \"\\n\\n\");\n  System.err.println(\"\\n 自定义填充 testType=3 填充成功！\" + userMapper.selectById(18L).toString());\n  session.commit();\n  rlt=userMapper.deleteById(id);\n  System.err.println(\"---------deleteById------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  Map<String,Object> columnMap=new HashMap<>();\n  columnMap.put(\"name\",\"deleteByMap\");\n  columnMap.put(\"age\",null);\n  rlt=userMapper.deleteByMap(columnMap);\n  System.err.println(\"---------deleteByMap------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<Long> il=new ArrayList<>();\n  il.add(16L);\n  il.add(17L);\n  rlt=userMapper.deleteBatchIds(il);\n  System.err.println(\"---------deleteBatchIds------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  rlt=userMapper.delete(new EntityWrapper<>(new User(14L,\"delname\")));\n  System.err.println(\"--------------delete------------------ result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"MybatisPlus\"));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"update all column\",12,12));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.update(new User(\"55\",55,5),new EntityWrapper<>(new User(15L,\"5\")));\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  EntityWrapper<User> ew1=new EntityWrapper<>();\n  ew1.addFilter(\"test_id={0} AND name={1}\",15L,\"55\");\n  rlt=userMapper.update(new User(\"00\"),ew1);\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<User> userList=new ArrayList<>();\n  userList.add(new User(11L,\"updateBatchById-1\",1,1));\n  userList.add(new User(12L,\"updateBatchById-2\",2,1));\n  userList.add(new User(13L,\"updateBatchById-3\",3,1));\n  for (  User u : userList) {\n    rlt=userMapper.updateById(u);\n  }\n  System.err.println(\"------------------updateBatchById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  System.err.println(\"\\n------------------selectById----------------------\");\n  User user=userMapper.selectById(12L);\n  print(user);\n  System.err.println(\"\\n------------------selectBatchIds----------------------\");\n  List<Long> idList=new ArrayList<>();\n  idList.add(11L);\n  idList.add(12L);\n  List<User> ul0=userMapper.selectBatchIds(idList);\n  for (  User anUl0 : ul0) {\n    print(anUl0);\n  }\n  System.err.println(\"\\n------------------selectByMap-----满足 map 条件的数据----\");\n  Map<String,Object> cm=new HashMap<>();\n  cm.put(\"test_type\",1);\n  cm.put(\"1\",1);\n  List<User> ul1=userMapper.selectByMap(cm);\n  for (  User anUl1 : ul1) {\n    print(anUl1);\n  }\n  System.err.println(\"\\n------------------selectOne----------------------\");\n  User userOne=userMapper.selectOne(new User(\"abc\"));\n  print(userOne);\n  System.err.println(\"\\n------------------selectCount----------------------\");\n  System.err.println(\"查询 type=1 总记录数：\" + userMapper.selectCount(new EntityWrapper<>(new User(1))));\n  System.err.println(\"总记录数：\" + userMapper.selectCount(null));\n  System.err.println(\"\\n------------------selectList-----所有数据----id--DESC--排序----\");\n  List<User> ul2=userMapper.selectList(new EntityWrapper<User>(null,\"age,name\"));\n  for (  User anUl2 : ul2) {\n    print(anUl2);\n  }\n  System.err.println(\"\\n------------------list 分页查询 ----查询 testType = 1 的所有数据--id--DESC--排序--------\");\n  Page<User> page=new Page<>(1,2);\n  EntityWrapper<User> ew=new EntityWrapper<>(new User(1));\n  ew.setSqlSelect(\"age,name\");\n  ew.where(\"name like {0}\",\"'%dateBatch%'\").and(\"age={0}\",3).orderBy(\"age,name\",true);\n  List<User> paginList=userMapper.selectPage(page,ew);\n  page.setRecords(paginList);\n  for (int i=0; i < page.getRecords().size(); i++) {\n    print(page.getRecords().get(i));\n  }\n  System.err.println(\" 翻页：\" + page.toString());\n  System.err.println(\"\\n---------------xml---selectListRow 分页查询，不查询总数（此时可自定义 count 查询）----无查询条件--------------\");\n  List<User> rowList=userMapper.selectListRow(new Pagination(0,2,false));\n  for (  User aRowList : rowList) {\n    print(aRowList);\n  }\n  System.err.println(\" selectList EntityWrapper == null \\n\");\n  paginList=userMapper.selectList(null);\n  for (  User aPaginList : paginList) {\n    print(aPaginList);\n  }\n  rlt=userMapper.deleteAll();\n  System.err.println(\"清空测试数据！ rlt=\" + rlt);\n  session.commit();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1190,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 8394,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 309,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * RUN 测试 <p> <p> MybatisPlus 加载 SQL 顺序： </p> 1、加载XML中的SQL<br> 2、加载sqlProvider中的SQL<br> 3、xmlSql 与 sqlProvider不能包含相同的SQL<br> <br> 调整后的SQL优先级：xmlSql > sqlProvider > crudSql <br>\n */\n@Test public void crudTest(){\n  SqlSession session=this.sqlSessionFactory().openSession();\n  UserMapper userMapper=session.getMapper(UserMapper.class);\n  System.err.println(\" debug run 查询执行 user 表数据变化！ \");\n  userMapper.deleteAll();\n  Role role=new Role();\n  role.setId(IdWorker.getId());\n  role.setName(\"admin\");\n  User userA=new User();\n  userA.setId(IdWorker.getId());\n  userA.setName(\"junyu_shi\");\n  userA.setAge(1);\n  userA.setDesc(\"测试一把\");\n  userA.setTestType(1);\n  userA.setRole(role);\n  int rlt=userMapper.insert(userA);\n  User whereUser=userMapper.selectOne(userA);\n  print(whereUser);\n  userA.setAge(18);\n  userMapper.updateById(userA);\n  userMapper.delete(new EntityWrapper<>(userA));\n  System.err.println(\"--------- @TableField el() --------- \" + rlt);\n  rlt=userMapper.insertInjector(new User(1L,\"1\",1,1));\n  System.err.println(\"--------- insertInjector --------- \" + rlt);\n  User cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  long id=IdWorker.getId();\n  rlt=userMapper.insert(new User(id,\"abc\",18,1));\n  System.err.println(\"\\n--------------insert-------\" + rlt);\n  sleep();\n  rlt=userMapper.insert(new User(18));\n  System.err.println(\"\\n----------测试 name 字段忽略验证----insert-------\" + rlt);\n  sleep();\n  List<User> ul=new ArrayList<>();\n  ul.add(new User(11L,\"1\",1,0));\n  ul.add(new User(12L,\"2\",2,1));\n  ul.add(new User(13L,\"3\",3,1));\n  ul.add(new User(14L,\"delname\",4,0));\n  ul.add(new User(15L,\"5\",5,1));\n  ul.add(new User(16L,\"6\",6,0));\n  ul.add(new User(17L,7));\n  ul.add(new User(18L,8));\n  ul.add(new User(19L,9));\n  ul.add(new User(7));\n  ul.add(new User(20L,\"deleteByMap\",7,0));\n  ul.add(new User(\"8\",8,1));\n  ul.add(new User(\"9\",9,1));\n  for (  User u : ul) {\n    rlt=userMapper.insert(u);\n  }\n  System.err.println(\"\\n--------------insertBatch----------------\" + rlt + \"\\n\\n\");\n  System.err.println(\"\\n 自定义填充 testType=3 填充成功！\" + userMapper.selectById(18L).toString());\n  session.commit();\n  rlt=userMapper.deleteById(id);\n  System.err.println(\"---------deleteById------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  Map<String,Object> columnMap=new HashMap<>();\n  columnMap.put(\"name\",\"deleteByMap\");\n  columnMap.put(\"age\",null);\n  rlt=userMapper.deleteByMap(columnMap);\n  System.err.println(\"---------deleteByMap------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<Long> il=new ArrayList<>();\n  il.add(16L);\n  il.add(17L);\n  rlt=userMapper.deleteBatchIds(il);\n  System.err.println(\"---------deleteBatchIds------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  rlt=userMapper.delete(new EntityWrapper<>(new User(14L,\"delname\")));\n  System.err.println(\"--------------delete------------------ result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"MybatisPlus\"));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"update all column\",12,12));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.update(new User(\"55\",55,5),new EntityWrapper<>(new User(15L,\"5\")));\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  EntityWrapper<User> ew1=new EntityWrapper<>();\n  ew1.addFilter(\"test_id={0} AND name={1}\",15L,\"55\");\n  rlt=userMapper.update(new User(\"00\"),ew1);\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<User> userList=new ArrayList<>();\n  userList.add(new User(11L,\"updateBatchById-1\",1,1));\n  userList.add(new User(12L,\"updateBatchById-2\",2,1));\n  userList.add(new User(13L,\"updateBatchById-3\",3,1));\n  for (  User u : userList) {\n    rlt=userMapper.updateById(u);\n  }\n  System.err.println(\"------------------updateBatchById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  System.err.println(\"\\n------------------selectById----------------------\");\n  User user=userMapper.selectById(12L);\n  print(user);\n  System.err.println(\"\\n------------------selectBatchIds----------------------\");\n  List<Long> idList=new ArrayList<>();\n  idList.add(11L);\n  idList.add(12L);\n  List<User> ul0=userMapper.selectBatchIds(idList);\n  for (  User anUl0 : ul0) {\n    print(anUl0);\n  }\n  System.err.println(\"\\n------------------selectByMap-----满足 map 条件的数据----\");\n  Map<String,Object> cm=new HashMap<>();\n  cm.put(\"test_type\",1);\n  cm.put(\"1\",1);\n  List<User> ul1=userMapper.selectByMap(cm);\n  for (  User anUl1 : ul1) {\n    print(anUl1);\n  }\n  System.err.println(\"\\n------------------selectOne----------------------\");\n  User userOne=userMapper.selectOne(new User(\"abc\"));\n  print(userOne);\n  System.err.println(\"\\n------------------selectCount----------------------\");\n  System.err.println(\"查询 type=1 总记录数：\" + userMapper.selectCount(new EntityWrapper<>(new User(1))));\n  System.err.println(\"总记录数：\" + userMapper.selectCount(null));\n  System.err.println(\"\\n------------------selectList-----所有数据----id--DESC--排序----\");\n  List<User> ul2=userMapper.selectList(new EntityWrapper<User>(null,\"age,name\"));\n  for (  User anUl2 : ul2) {\n    print(anUl2);\n  }\n  System.err.println(\"\\n------------------list 分页查询 ----查询 testType = 1 的所有数据--id--DESC--排序--------\");\n  Page<User> page=new Page<>(1,2);\n  EntityWrapper<User> ew=new EntityWrapper<>(new User(1));\n  ew.setSqlSelect(\"age,name\");\n  ew.where(\"name like {0}\",\"'%dateBatch%'\").and(\"age={0}\",3).orderBy(\"age,name\",true);\n  List<User> paginList=userMapper.selectPage(page,ew);\n  page.setRecords(paginList);\n  for (int i=0; i < page.getRecords().size(); i++) {\n    print(page.getRecords().get(i));\n  }\n  System.err.println(\" 翻页：\" + page.toString());\n  System.err.println(\"\\n---------------xml---selectListRow 分页查询，不查询总数（此时可自定义 count 查询）----无查询条件--------------\");\n  List<User> rowList=userMapper.selectListRow(new Pagination(0,2,false));\n  for (  User aRowList : rowList) {\n    print(aRowList);\n  }\n  System.err.println(\" selectList EntityWrapper == null \\n\");\n  paginList=userMapper.selectList(null);\n  for (  User aPaginList : paginList) {\n    print(aPaginList);\n  }\n  rlt=userMapper.deleteAll();\n  System.err.println(\"清空测试数据！ rlt=\" + rlt);\n  session.commit();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1197,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 101,
        "startLineNumber" : 221,
        "startColumnNumber" : 8,
        "endLineNumber" : 221,
        "endColumnNumber" : 109
      },
      "nodeContext" : "System.err.println(\"------------------updateBatchById---------------------- result=\" + rlt + \"\\n\\n\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "rlt",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 303,
      "startColumnNumber" : 44,
      "endLineNumber" : 303,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 303,
        "startColumnNumber" : 27,
        "endLineNumber" : 303,
        "endColumnNumber" : 47
      },
      "nodeContext" : "\"清空测试数据！ rlt=\" + rlt",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 303,
        "startColumnNumber" : 8,
        "endLineNumber" : 303,
        "endColumnNumber" : 48
      },
      "nodeContext" : "System.err.println(\"清空测试数据！ rlt=\" + rlt)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 303,
        "startColumnNumber" : 8,
        "endLineNumber" : 303,
        "endColumnNumber" : 49
      },
      "nodeContext" : "System.err.println(\"清空测试数据！ rlt=\" + rlt);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 8101,
        "startLineNumber" : 76,
        "startColumnNumber" : 27,
        "endLineNumber" : 309,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  SqlSession session=this.sqlSessionFactory().openSession();\n  UserMapper userMapper=session.getMapper(UserMapper.class);\n  System.err.println(\" debug run 查询执行 user 表数据变化！ \");\n  userMapper.deleteAll();\n  Role role=new Role();\n  role.setId(IdWorker.getId());\n  role.setName(\"admin\");\n  User userA=new User();\n  userA.setId(IdWorker.getId());\n  userA.setName(\"junyu_shi\");\n  userA.setAge(1);\n  userA.setDesc(\"测试一把\");\n  userA.setTestType(1);\n  userA.setRole(role);\n  int rlt=userMapper.insert(userA);\n  User whereUser=userMapper.selectOne(userA);\n  print(whereUser);\n  userA.setAge(18);\n  userMapper.updateById(userA);\n  userMapper.delete(new EntityWrapper<>(userA));\n  System.err.println(\"--------- @TableField el() --------- \" + rlt);\n  rlt=userMapper.insertInjector(new User(1L,\"1\",1,1));\n  System.err.println(\"--------- insertInjector --------- \" + rlt);\n  User cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  long id=IdWorker.getId();\n  rlt=userMapper.insert(new User(id,\"abc\",18,1));\n  System.err.println(\"\\n--------------insert-------\" + rlt);\n  sleep();\n  rlt=userMapper.insert(new User(18));\n  System.err.println(\"\\n----------测试 name 字段忽略验证----insert-------\" + rlt);\n  sleep();\n  List<User> ul=new ArrayList<>();\n  ul.add(new User(11L,\"1\",1,0));\n  ul.add(new User(12L,\"2\",2,1));\n  ul.add(new User(13L,\"3\",3,1));\n  ul.add(new User(14L,\"delname\",4,0));\n  ul.add(new User(15L,\"5\",5,1));\n  ul.add(new User(16L,\"6\",6,0));\n  ul.add(new User(17L,7));\n  ul.add(new User(18L,8));\n  ul.add(new User(19L,9));\n  ul.add(new User(7));\n  ul.add(new User(20L,\"deleteByMap\",7,0));\n  ul.add(new User(\"8\",8,1));\n  ul.add(new User(\"9\",9,1));\n  for (  User u : ul) {\n    rlt=userMapper.insert(u);\n  }\n  System.err.println(\"\\n--------------insertBatch----------------\" + rlt + \"\\n\\n\");\n  System.err.println(\"\\n 自定义填充 testType=3 填充成功！\" + userMapper.selectById(18L).toString());\n  session.commit();\n  rlt=userMapper.deleteById(id);\n  System.err.println(\"---------deleteById------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  Map<String,Object> columnMap=new HashMap<>();\n  columnMap.put(\"name\",\"deleteByMap\");\n  columnMap.put(\"age\",null);\n  rlt=userMapper.deleteByMap(columnMap);\n  System.err.println(\"---------deleteByMap------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<Long> il=new ArrayList<>();\n  il.add(16L);\n  il.add(17L);\n  rlt=userMapper.deleteBatchIds(il);\n  System.err.println(\"---------deleteBatchIds------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  rlt=userMapper.delete(new EntityWrapper<>(new User(14L,\"delname\")));\n  System.err.println(\"--------------delete------------------ result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"MybatisPlus\"));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"update all column\",12,12));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.update(new User(\"55\",55,5),new EntityWrapper<>(new User(15L,\"5\")));\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  EntityWrapper<User> ew1=new EntityWrapper<>();\n  ew1.addFilter(\"test_id={0} AND name={1}\",15L,\"55\");\n  rlt=userMapper.update(new User(\"00\"),ew1);\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<User> userList=new ArrayList<>();\n  userList.add(new User(11L,\"updateBatchById-1\",1,1));\n  userList.add(new User(12L,\"updateBatchById-2\",2,1));\n  userList.add(new User(13L,\"updateBatchById-3\",3,1));\n  for (  User u : userList) {\n    rlt=userMapper.updateById(u);\n  }\n  System.err.println(\"------------------updateBatchById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  System.err.println(\"\\n------------------selectById----------------------\");\n  User user=userMapper.selectById(12L);\n  print(user);\n  System.err.println(\"\\n------------------selectBatchIds----------------------\");\n  List<Long> idList=new ArrayList<>();\n  idList.add(11L);\n  idList.add(12L);\n  List<User> ul0=userMapper.selectBatchIds(idList);\n  for (  User anUl0 : ul0) {\n    print(anUl0);\n  }\n  System.err.println(\"\\n------------------selectByMap-----满足 map 条件的数据----\");\n  Map<String,Object> cm=new HashMap<>();\n  cm.put(\"test_type\",1);\n  cm.put(\"1\",1);\n  List<User> ul1=userMapper.selectByMap(cm);\n  for (  User anUl1 : ul1) {\n    print(anUl1);\n  }\n  System.err.println(\"\\n------------------selectOne----------------------\");\n  User userOne=userMapper.selectOne(new User(\"abc\"));\n  print(userOne);\n  System.err.println(\"\\n------------------selectCount----------------------\");\n  System.err.println(\"查询 type=1 总记录数：\" + userMapper.selectCount(new EntityWrapper<>(new User(1))));\n  System.err.println(\"总记录数：\" + userMapper.selectCount(null));\n  System.err.println(\"\\n------------------selectList-----所有数据----id--DESC--排序----\");\n  List<User> ul2=userMapper.selectList(new EntityWrapper<User>(null,\"age,name\"));\n  for (  User anUl2 : ul2) {\n    print(anUl2);\n  }\n  System.err.println(\"\\n------------------list 分页查询 ----查询 testType = 1 的所有数据--id--DESC--排序--------\");\n  Page<User> page=new Page<>(1,2);\n  EntityWrapper<User> ew=new EntityWrapper<>(new User(1));\n  ew.setSqlSelect(\"age,name\");\n  ew.where(\"name like {0}\",\"'%dateBatch%'\").and(\"age={0}\",3).orderBy(\"age,name\",true);\n  List<User> paginList=userMapper.selectPage(page,ew);\n  page.setRecords(paginList);\n  for (int i=0; i < page.getRecords().size(); i++) {\n    print(page.getRecords().get(i));\n  }\n  System.err.println(\" 翻页：\" + page.toString());\n  System.err.println(\"\\n---------------xml---selectListRow 分页查询，不查询总数（此时可自定义 count 查询）----无查询条件--------------\");\n  List<User> rowList=userMapper.selectListRow(new Pagination(0,2,false));\n  for (  User aRowList : rowList) {\n    print(aRowList);\n  }\n  System.err.println(\" selectList EntityWrapper == null \\n\");\n  paginList=userMapper.selectList(null);\n  for (  User aPaginList : paginList) {\n    print(aPaginList);\n  }\n  rlt=userMapper.deleteAll();\n  System.err.println(\"清空测试数据！ rlt=\" + rlt);\n  session.commit();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 1190,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 8394,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 309,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * RUN 测试 <p> <p> MybatisPlus 加载 SQL 顺序： </p> 1、加载XML中的SQL<br> 2、加载sqlProvider中的SQL<br> 3、xmlSql 与 sqlProvider不能包含相同的SQL<br> <br> 调整后的SQL优先级：xmlSql > sqlProvider > crudSql <br>\n */\n@Test public void crudTest(){\n  SqlSession session=this.sqlSessionFactory().openSession();\n  UserMapper userMapper=session.getMapper(UserMapper.class);\n  System.err.println(\" debug run 查询执行 user 表数据变化！ \");\n  userMapper.deleteAll();\n  Role role=new Role();\n  role.setId(IdWorker.getId());\n  role.setName(\"admin\");\n  User userA=new User();\n  userA.setId(IdWorker.getId());\n  userA.setName(\"junyu_shi\");\n  userA.setAge(1);\n  userA.setDesc(\"测试一把\");\n  userA.setTestType(1);\n  userA.setRole(role);\n  int rlt=userMapper.insert(userA);\n  User whereUser=userMapper.selectOne(userA);\n  print(whereUser);\n  userA.setAge(18);\n  userMapper.updateById(userA);\n  userMapper.delete(new EntityWrapper<>(userA));\n  System.err.println(\"--------- @TableField el() --------- \" + rlt);\n  rlt=userMapper.insertInjector(new User(1L,\"1\",1,1));\n  System.err.println(\"--------- insertInjector --------- \" + rlt);\n  User cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  cacheUser=userMapper.selectOne(new User(1L,1));\n  print(cacheUser);\n  long id=IdWorker.getId();\n  rlt=userMapper.insert(new User(id,\"abc\",18,1));\n  System.err.println(\"\\n--------------insert-------\" + rlt);\n  sleep();\n  rlt=userMapper.insert(new User(18));\n  System.err.println(\"\\n----------测试 name 字段忽略验证----insert-------\" + rlt);\n  sleep();\n  List<User> ul=new ArrayList<>();\n  ul.add(new User(11L,\"1\",1,0));\n  ul.add(new User(12L,\"2\",2,1));\n  ul.add(new User(13L,\"3\",3,1));\n  ul.add(new User(14L,\"delname\",4,0));\n  ul.add(new User(15L,\"5\",5,1));\n  ul.add(new User(16L,\"6\",6,0));\n  ul.add(new User(17L,7));\n  ul.add(new User(18L,8));\n  ul.add(new User(19L,9));\n  ul.add(new User(7));\n  ul.add(new User(20L,\"deleteByMap\",7,0));\n  ul.add(new User(\"8\",8,1));\n  ul.add(new User(\"9\",9,1));\n  for (  User u : ul) {\n    rlt=userMapper.insert(u);\n  }\n  System.err.println(\"\\n--------------insertBatch----------------\" + rlt + \"\\n\\n\");\n  System.err.println(\"\\n 自定义填充 testType=3 填充成功！\" + userMapper.selectById(18L).toString());\n  session.commit();\n  rlt=userMapper.deleteById(id);\n  System.err.println(\"---------deleteById------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  Map<String,Object> columnMap=new HashMap<>();\n  columnMap.put(\"name\",\"deleteByMap\");\n  columnMap.put(\"age\",null);\n  rlt=userMapper.deleteByMap(columnMap);\n  System.err.println(\"---------deleteByMap------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<Long> il=new ArrayList<>();\n  il.add(16L);\n  il.add(17L);\n  rlt=userMapper.deleteBatchIds(il);\n  System.err.println(\"---------deleteBatchIds------- delete id=\" + id + \" ,result=\"+ rlt+ \"\\n\\n\");\n  sleep();\n  rlt=userMapper.delete(new EntityWrapper<>(new User(14L,\"delname\")));\n  System.err.println(\"--------------delete------------------ result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"MybatisPlus\"));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.updateById(new User(12L,\"update all column\",12,12));\n  System.err.println(\"------------------updateById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  rlt=userMapper.update(new User(\"55\",55,5),new EntityWrapper<>(new User(15L,\"5\")));\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  EntityWrapper<User> ew1=new EntityWrapper<>();\n  ew1.addFilter(\"test_id={0} AND name={1}\",15L,\"55\");\n  rlt=userMapper.update(new User(\"00\"),ew1);\n  System.err.println(\"------------------update---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  List<User> userList=new ArrayList<>();\n  userList.add(new User(11L,\"updateBatchById-1\",1,1));\n  userList.add(new User(12L,\"updateBatchById-2\",2,1));\n  userList.add(new User(13L,\"updateBatchById-3\",3,1));\n  for (  User u : userList) {\n    rlt=userMapper.updateById(u);\n  }\n  System.err.println(\"------------------updateBatchById---------------------- result=\" + rlt + \"\\n\\n\");\n  sleep();\n  System.err.println(\"\\n------------------selectById----------------------\");\n  User user=userMapper.selectById(12L);\n  print(user);\n  System.err.println(\"\\n------------------selectBatchIds----------------------\");\n  List<Long> idList=new ArrayList<>();\n  idList.add(11L);\n  idList.add(12L);\n  List<User> ul0=userMapper.selectBatchIds(idList);\n  for (  User anUl0 : ul0) {\n    print(anUl0);\n  }\n  System.err.println(\"\\n------------------selectByMap-----满足 map 条件的数据----\");\n  Map<String,Object> cm=new HashMap<>();\n  cm.put(\"test_type\",1);\n  cm.put(\"1\",1);\n  List<User> ul1=userMapper.selectByMap(cm);\n  for (  User anUl1 : ul1) {\n    print(anUl1);\n  }\n  System.err.println(\"\\n------------------selectOne----------------------\");\n  User userOne=userMapper.selectOne(new User(\"abc\"));\n  print(userOne);\n  System.err.println(\"\\n------------------selectCount----------------------\");\n  System.err.println(\"查询 type=1 总记录数：\" + userMapper.selectCount(new EntityWrapper<>(new User(1))));\n  System.err.println(\"总记录数：\" + userMapper.selectCount(null));\n  System.err.println(\"\\n------------------selectList-----所有数据----id--DESC--排序----\");\n  List<User> ul2=userMapper.selectList(new EntityWrapper<User>(null,\"age,name\"));\n  for (  User anUl2 : ul2) {\n    print(anUl2);\n  }\n  System.err.println(\"\\n------------------list 分页查询 ----查询 testType = 1 的所有数据--id--DESC--排序--------\");\n  Page<User> page=new Page<>(1,2);\n  EntityWrapper<User> ew=new EntityWrapper<>(new User(1));\n  ew.setSqlSelect(\"age,name\");\n  ew.where(\"name like {0}\",\"'%dateBatch%'\").and(\"age={0}\",3).orderBy(\"age,name\",true);\n  List<User> paginList=userMapper.selectPage(page,ew);\n  page.setRecords(paginList);\n  for (int i=0; i < page.getRecords().size(); i++) {\n    print(page.getRecords().get(i));\n  }\n  System.err.println(\" 翻页：\" + page.toString());\n  System.err.println(\"\\n---------------xml---selectListRow 分页查询，不查询总数（此时可自定义 count 查询）----无查询条件--------------\");\n  List<User> rowList=userMapper.selectListRow(new Pagination(0,2,false));\n  for (  User aRowList : rowList) {\n    print(aRowList);\n  }\n  System.err.println(\" selectList EntityWrapper == null \\n\");\n  paginList=userMapper.selectList(null);\n  for (  User aPaginList : paginList) {\n    print(aPaginList);\n  }\n  rlt=userMapper.deleteAll();\n  System.err.println(\"清空测试数据！ rlt=\" + rlt);\n  session.commit();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 1197,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 303,
        "startColumnNumber" : 8,
        "endLineNumber" : 303,
        "endColumnNumber" : 49
      },
      "nodeContext" : "System.err.println(\"清空测试数据！ rlt=\" + rlt);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 104,
    "startColumnNumber" : 69,
    "endLineNumber" : 104,
    "endColumnNumber" : 72
  }, {
    "charLength" : 3,
    "startLineNumber" : 110,
    "startColumnNumber" : 67,
    "endLineNumber" : 110,
    "endColumnNumber" : 70
  }, {
    "charLength" : 3,
    "startLineNumber" : 125,
    "startColumnNumber" : 61,
    "endLineNumber" : 125,
    "endColumnNumber" : 64
  }, {
    "charLength" : 3,
    "startLineNumber" : 129,
    "startColumnNumber" : 75,
    "endLineNumber" : 129,
    "endColumnNumber" : 78
  }, {
    "charLength" : 3,
    "startLineNumber" : 155,
    "startColumnNumber" : 75,
    "endLineNumber" : 155,
    "endColumnNumber" : 78
  }, {
    "charLength" : 3,
    "startLineNumber" : 167,
    "startColumnNumber" : 88,
    "endLineNumber" : 167,
    "endColumnNumber" : 91
  }, {
    "charLength" : 3,
    "startLineNumber" : 174,
    "startColumnNumber" : 67,
    "endLineNumber" : 174,
    "endColumnNumber" : 70
  }, {
    "charLength" : 3,
    "startLineNumber" : 181,
    "startColumnNumber" : 92,
    "endLineNumber" : 181,
    "endColumnNumber" : 95
  }, {
    "charLength" : 3,
    "startLineNumber" : 185,
    "startColumnNumber" : 78,
    "endLineNumber" : 185,
    "endColumnNumber" : 81
  }, {
    "charLength" : 3,
    "startLineNumber" : 194,
    "startColumnNumber" : 90,
    "endLineNumber" : 194,
    "endColumnNumber" : 93
  }, {
    "charLength" : 3,
    "startLineNumber" : 198,
    "startColumnNumber" : 90,
    "endLineNumber" : 198,
    "endColumnNumber" : 93
  }, {
    "charLength" : 3,
    "startLineNumber" : 202,
    "startColumnNumber" : 86,
    "endLineNumber" : 202,
    "endColumnNumber" : 89
  }, {
    "charLength" : 3,
    "startLineNumber" : 208,
    "startColumnNumber" : 86,
    "endLineNumber" : 208,
    "endColumnNumber" : 89
  }, {
    "charLength" : 3,
    "startLineNumber" : 221,
    "startColumnNumber" : 95,
    "endLineNumber" : 221,
    "endColumnNumber" : 98
  }, {
    "charLength" : 3,
    "startLineNumber" : 303,
    "startColumnNumber" : 44,
    "endLineNumber" : 303,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 10,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 11,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 13,
    "layout" : 3
  }, {
    "firstKey" : 12,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 13,
    "secondKey" : 14,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 10,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 11,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 12,
    "layout" : 3
  }, {
    "firstKey" : 14,
    "secondKey" : 13,
    "layout" : 3
  } ]
}