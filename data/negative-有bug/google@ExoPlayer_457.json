{
  "id" : 457,
  "expression" : "Collections",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/core/src/main/java/com/google/android/exoplayer2/source/MediaPeriod.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Collections",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 104,
      "startColumnNumber" : 11,
      "endLineNumber" : 104,
      "endColumnNumber" : 22
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 104,
        "startColumnNumber" : 11,
        "endLineNumber" : 104,
        "endColumnNumber" : 34
      },
      "nodeContext" : "Collections.emptyList()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 104,
        "startColumnNumber" : 4,
        "endLineNumber" : 104,
        "endColumnNumber" : 35
      },
      "nodeContext" : "return Collections.emptyList();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 103,
        "startColumnNumber" : 81,
        "endLineNumber" : 105,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  return Collections.emptyList();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 771,
        "startLineNumber" : 91,
        "startColumnNumber" : 2,
        "endLineNumber" : 105,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns a list of  {@link StreamKey StreamKeys} which allow to filter the media in this periodto load only the parts needed to play the provided  {@link ExoTrackSelection TrackSelections}. <p>This method is only called after the period has been prepared.\n * @param trackSelections The {@link ExoTrackSelection TrackSelections} describing the tracks forwhich stream keys are requested.\n * @return The corresponding {@link StreamKey StreamKeys} for the selected tracks, or an emptylist if filtering is not possible and the entire media needs to be loaded to play the selected tracks.\n */\ndefault List<StreamKey> getStreamKeys(List<ExoTrackSelection> trackSelections){\n  return Collections.emptyList();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 21,
      "astHeight" : 5
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 104,
        "startColumnNumber" : 4,
        "endLineNumber" : 104,
        "endColumnNumber" : 35
      },
      "nodeContext" : "return Collections.emptyList();\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Collections"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 104,
    "startColumnNumber" : 11,
    "endLineNumber" : 104,
    "endColumnNumber" : 22
  } ],
  "layoutRelationDataList" : [ ]
}