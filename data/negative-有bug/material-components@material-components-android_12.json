{
  "id" : 12,
  "expression" : "getThemeId()",
  "projectName" : "material-components@material-components-android",
  "commitID" : "79bf9d0e8e62eea9c2f2620d4e1a0a2ca0e12017",
  "filePath" : "/lib/javatests/com/google/android/material/color/DynamicColorsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "getThemeId()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 80,
      "startColumnNumber" : 15,
      "endLineNumber" : 80,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 80,
        "startColumnNumber" : 4,
        "endLineNumber" : 80,
        "endColumnNumber" : 28
      },
      "nodeContext" : "assertThat(getThemeId())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 80,
        "startColumnNumber" : 4,
        "endLineNumber" : 80,
        "endColumnNumber" : 61
      },
      "nodeContext" : "assertThat(getThemeId()).isEqualTo(R.id.dynamic_theme_id)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 80,
        "startColumnNumber" : 4,
        "endLineNumber" : 80,
        "endColumnNumber" : 62
      },
      "nodeContext" : "assertThat(getThemeId()).isEqualTo(R.id.dynamic_theme_id);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 227,
        "startLineNumber" : 76,
        "startColumnNumber" : 55,
        "endLineNumber" : 81,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  DynamicColors.applyToActivitiesIfAvailable(mockApplication);\n  mockApplication.capturedCallbacks.onActivityPreCreated(mockActivity,new Bundle());\n  assertThat(getThemeId()).isEqualTo(R.id.dynamic_theme_id);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 28,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 289,
        "startLineNumber" : 75,
        "startColumnNumber" : 2,
        "endLineNumber" : 81,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testApplyOnApplicationWithDefaultTheme(){\n  DynamicColors.applyToActivitiesIfAvailable(mockApplication);\n  mockApplication.capturedCallbacks.onActivityPreCreated(mockActivity,new Bundle());\n  assertThat(getThemeId()).isEqualTo(R.id.dynamic_theme_id);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 34,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 80,
        "startColumnNumber" : 4,
        "endLineNumber" : 80,
        "endColumnNumber" : 62
      },
      "nodeContext" : "assertThat(getThemeId()).isEqualTo(R.id.dynamic_theme_id);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 80,
    "startColumnNumber" : 15,
    "endLineNumber" : 80,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ ]
}