{
  "id" : 139,
  "expression" : "bytesRead == SECTION_HEADER_LENGTH",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/extractor/src/main/java/com/google/android/exoplayer2/extractor/ts/SectionReader.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "bytesRead == SECTION_HEADER_LENGTH",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 34,
      "startLineNumber" : 100,
      "startColumnNumber" : 12,
      "endLineNumber" : 100,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 830,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 115,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (bytesRead == SECTION_HEADER_LENGTH) {\n  sectionData.setPosition(0);\n  sectionData.setLimit(SECTION_HEADER_LENGTH);\n  sectionData.skipBytes(1);\n  int secondHeaderByte=sectionData.readUnsignedByte();\n  int thirdHeaderByte=sectionData.readUnsignedByte();\n  sectionSyntaxIndicator=(secondHeaderByte & 0x80) != 0;\n  totalSectionLength=(((secondHeaderByte & 0x0F) << 8) | thirdHeaderByte) + SECTION_HEADER_LENGTH;\n  if (sectionData.capacity() < totalSectionLength) {\n    int limit=min(MAX_SECTION_LENGTH,max(totalSectionLength,sectionData.capacity() * 2));\n    sectionData.ensureCapacity(limit);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 85,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1658,
        "startLineNumber" : 83,
        "startColumnNumber" : 45,
        "endLineNumber" : 116,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (bytesRead == 0) {\n    int tableId=data.readUnsignedByte();\n    data.setPosition(data.getPosition() - 1);\n    if (tableId == 0xFF) {\n      waitingForPayloadStart=true;\n      return;\n    }\n  }\n  int headerBytesToRead=min(data.bytesLeft(),SECTION_HEADER_LENGTH - bytesRead);\n  data.readBytes(sectionData.getData(),bytesRead,headerBytesToRead);\n  bytesRead+=headerBytesToRead;\n  if (bytesRead == SECTION_HEADER_LENGTH) {\n    sectionData.setPosition(0);\n    sectionData.setLimit(SECTION_HEADER_LENGTH);\n    sectionData.skipBytes(1);\n    int secondHeaderByte=sectionData.readUnsignedByte();\n    int thirdHeaderByte=sectionData.readUnsignedByte();\n    sectionSyntaxIndicator=(secondHeaderByte & 0x80) != 0;\n    totalSectionLength=(((secondHeaderByte & 0x0F) << 8) | thirdHeaderByte) + SECTION_HEADER_LENGTH;\n    if (sectionData.capacity() < totalSectionLength) {\n      int limit=min(MAX_SECTION_LENGTH,max(totalSectionLength,sectionData.capacity() * 2));\n      sectionData.ensureCapacity(limit);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 142,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2808,
        "startLineNumber" : 83,
        "startColumnNumber" : 6,
        "endLineNumber" : 139,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (bytesRead < SECTION_HEADER_LENGTH) {\n  if (bytesRead == 0) {\n    int tableId=data.readUnsignedByte();\n    data.setPosition(data.getPosition() - 1);\n    if (tableId == 0xFF) {\n      waitingForPayloadStart=true;\n      return;\n    }\n  }\n  int headerBytesToRead=min(data.bytesLeft(),SECTION_HEADER_LENGTH - bytesRead);\n  data.readBytes(sectionData.getData(),bytesRead,headerBytesToRead);\n  bytesRead+=headerBytesToRead;\n  if (bytesRead == SECTION_HEADER_LENGTH) {\n    sectionData.setPosition(0);\n    sectionData.setLimit(SECTION_HEADER_LENGTH);\n    sectionData.skipBytes(1);\n    int secondHeaderByte=sectionData.readUnsignedByte();\n    int thirdHeaderByte=sectionData.readUnsignedByte();\n    sectionSyntaxIndicator=(secondHeaderByte & 0x80) != 0;\n    totalSectionLength=(((secondHeaderByte & 0x0F) << 8) | thirdHeaderByte) + SECTION_HEADER_LENGTH;\n    if (sectionData.capacity() < totalSectionLength) {\n      int limit=min(MAX_SECTION_LENGTH,max(totalSectionLength,sectionData.capacity() * 2));\n      sectionData.ensureCapacity(limit);\n    }\n  }\n}\n else {\n  int bodyBytesToRead=min(data.bytesLeft(),totalSectionLength - bytesRead);\n  data.readBytes(sectionData.getData(),bytesRead,bodyBytesToRead);\n  bytesRead+=bodyBytesToRead;\n  if (bytesRead == totalSectionLength) {\n    if (sectionSyntaxIndicator) {\n      if (Util.crc32(sectionData.getData(),0,totalSectionLength,0xFFFFFFFF) != 0) {\n        waitingForPayloadStart=true;\n        return;\n      }\n      sectionData.setLimit(totalSectionLength - 4);\n    }\n else {\n      sectionData.setLimit(totalSectionLength);\n    }\n    sectionData.setPosition(0);\n    reader.consume(sectionData);\n    bytesRead=0;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 225,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 2822,
        "startLineNumber" : 82,
        "startColumnNumber" : 33,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (bytesRead < SECTION_HEADER_LENGTH) {\n    if (bytesRead == 0) {\n      int tableId=data.readUnsignedByte();\n      data.setPosition(data.getPosition() - 1);\n      if (tableId == 0xFF) {\n        waitingForPayloadStart=true;\n        return;\n      }\n    }\n    int headerBytesToRead=min(data.bytesLeft(),SECTION_HEADER_LENGTH - bytesRead);\n    data.readBytes(sectionData.getData(),bytesRead,headerBytesToRead);\n    bytesRead+=headerBytesToRead;\n    if (bytesRead == SECTION_HEADER_LENGTH) {\n      sectionData.setPosition(0);\n      sectionData.setLimit(SECTION_HEADER_LENGTH);\n      sectionData.skipBytes(1);\n      int secondHeaderByte=sectionData.readUnsignedByte();\n      int thirdHeaderByte=sectionData.readUnsignedByte();\n      sectionSyntaxIndicator=(secondHeaderByte & 0x80) != 0;\n      totalSectionLength=(((secondHeaderByte & 0x0F) << 8) | thirdHeaderByte) + SECTION_HEADER_LENGTH;\n      if (sectionData.capacity() < totalSectionLength) {\n        int limit=min(MAX_SECTION_LENGTH,max(totalSectionLength,sectionData.capacity() * 2));\n        sectionData.ensureCapacity(limit);\n      }\n    }\n  }\n else {\n    int bodyBytesToRead=min(data.bytesLeft(),totalSectionLength - bytesRead);\n    data.readBytes(sectionData.getData(),bytesRead,bodyBytesToRead);\n    bytesRead+=bodyBytesToRead;\n    if (bytesRead == totalSectionLength) {\n      if (sectionSyntaxIndicator) {\n        if (Util.crc32(sectionData.getData(),0,totalSectionLength,0xFFFFFFFF) != 0) {\n          waitingForPayloadStart=true;\n          return;\n        }\n        sectionData.setLimit(totalSectionLength - 4);\n      }\n else {\n        sectionData.setLimit(totalSectionLength);\n      }\n      sectionData.setPosition(0);\n      reader.consume(sectionData);\n      bytesRead=0;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 226,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2851,
        "startLineNumber" : 82,
        "startColumnNumber" : 4,
        "endLineNumber" : 140,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (data.bytesLeft() > 0) {\n  if (bytesRead < SECTION_HEADER_LENGTH) {\n    if (bytesRead == 0) {\n      int tableId=data.readUnsignedByte();\n      data.setPosition(data.getPosition() - 1);\n      if (tableId == 0xFF) {\n        waitingForPayloadStart=true;\n        return;\n      }\n    }\n    int headerBytesToRead=min(data.bytesLeft(),SECTION_HEADER_LENGTH - bytesRead);\n    data.readBytes(sectionData.getData(),bytesRead,headerBytesToRead);\n    bytesRead+=headerBytesToRead;\n    if (bytesRead == SECTION_HEADER_LENGTH) {\n      sectionData.setPosition(0);\n      sectionData.setLimit(SECTION_HEADER_LENGTH);\n      sectionData.skipBytes(1);\n      int secondHeaderByte=sectionData.readUnsignedByte();\n      int thirdHeaderByte=sectionData.readUnsignedByte();\n      sectionSyntaxIndicator=(secondHeaderByte & 0x80) != 0;\n      totalSectionLength=(((secondHeaderByte & 0x0F) << 8) | thirdHeaderByte) + SECTION_HEADER_LENGTH;\n      if (sectionData.capacity() < totalSectionLength) {\n        int limit=min(MAX_SECTION_LENGTH,max(totalSectionLength,sectionData.capacity() * 2));\n        sectionData.ensureCapacity(limit);\n      }\n    }\n  }\n else {\n    int bodyBytesToRead=min(data.bytesLeft(),totalSectionLength - bytesRead);\n    data.readBytes(sectionData.getData(),bytesRead,bodyBytesToRead);\n    bytesRead+=bodyBytesToRead;\n    if (bytesRead == totalSectionLength) {\n      if (sectionSyntaxIndicator) {\n        if (Util.crc32(sectionData.getData(),0,totalSectionLength,0xFFFFFFFF) != 0) {\n          waitingForPayloadStart=true;\n          return;\n        }\n        sectionData.setLimit(totalSectionLength - 4);\n      }\n else {\n        sectionData.setLimit(totalSectionLength);\n      }\n      sectionData.setPosition(0);\n      reader.consume(sectionData);\n      bytesRead=0;\n    }\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 232,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3380,
        "startLineNumber" : 65,
        "startColumnNumber" : 64,
        "endLineNumber" : 141,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  boolean payloadUnitStartIndicator=(flags & FLAG_PAYLOAD_UNIT_START_INDICATOR) != 0;\n  int payloadStartPosition=C.POSITION_UNSET;\n  if (payloadUnitStartIndicator) {\n    int payloadStartOffset=data.readUnsignedByte();\n    payloadStartPosition=data.getPosition() + payloadStartOffset;\n  }\n  if (waitingForPayloadStart) {\n    if (!payloadUnitStartIndicator) {\n      return;\n    }\n    waitingForPayloadStart=false;\n    data.setPosition(payloadStartPosition);\n    bytesRead=0;\n  }\n  while (data.bytesLeft() > 0) {\n    if (bytesRead < SECTION_HEADER_LENGTH) {\n      if (bytesRead == 0) {\n        int tableId=data.readUnsignedByte();\n        data.setPosition(data.getPosition() - 1);\n        if (tableId == 0xFF) {\n          waitingForPayloadStart=true;\n          return;\n        }\n      }\n      int headerBytesToRead=min(data.bytesLeft(),SECTION_HEADER_LENGTH - bytesRead);\n      data.readBytes(sectionData.getData(),bytesRead,headerBytesToRead);\n      bytesRead+=headerBytesToRead;\n      if (bytesRead == SECTION_HEADER_LENGTH) {\n        sectionData.setPosition(0);\n        sectionData.setLimit(SECTION_HEADER_LENGTH);\n        sectionData.skipBytes(1);\n        int secondHeaderByte=sectionData.readUnsignedByte();\n        int thirdHeaderByte=sectionData.readUnsignedByte();\n        sectionSyntaxIndicator=(secondHeaderByte & 0x80) != 0;\n        totalSectionLength=(((secondHeaderByte & 0x0F) << 8) | thirdHeaderByte) + SECTION_HEADER_LENGTH;\n        if (sectionData.capacity() < totalSectionLength) {\n          int limit=min(MAX_SECTION_LENGTH,max(totalSectionLength,sectionData.capacity() * 2));\n          sectionData.ensureCapacity(limit);\n        }\n      }\n    }\n else {\n      int bodyBytesToRead=min(data.bytesLeft(),totalSectionLength - bytesRead);\n      data.readBytes(sectionData.getData(),bytesRead,bodyBytesToRead);\n      bytesRead+=bodyBytesToRead;\n      if (bytesRead == totalSectionLength) {\n        if (sectionSyntaxIndicator) {\n          if (Util.crc32(sectionData.getData(),0,totalSectionLength,0xFFFFFFFF) != 0) {\n            waitingForPayloadStart=true;\n            return;\n          }\n          sectionData.setLimit(totalSectionLength - 4);\n        }\n else {\n          sectionData.setLimit(totalSectionLength);\n        }\n        sectionData.setPosition(0);\n        reader.consume(sectionData);\n        bytesRead=0;\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 289,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3454,
        "startLineNumber" : 64,
        "startColumnNumber" : 2,
        "endLineNumber" : 141,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public void consume(ParsableByteArray data,@Flags int flags){\n  boolean payloadUnitStartIndicator=(flags & FLAG_PAYLOAD_UNIT_START_INDICATOR) != 0;\n  int payloadStartPosition=C.POSITION_UNSET;\n  if (payloadUnitStartIndicator) {\n    int payloadStartOffset=data.readUnsignedByte();\n    payloadStartPosition=data.getPosition() + payloadStartOffset;\n  }\n  if (waitingForPayloadStart) {\n    if (!payloadUnitStartIndicator) {\n      return;\n    }\n    waitingForPayloadStart=false;\n    data.setPosition(payloadStartPosition);\n    bytesRead=0;\n  }\n  while (data.bytesLeft() > 0) {\n    if (bytesRead < SECTION_HEADER_LENGTH) {\n      if (bytesRead == 0) {\n        int tableId=data.readUnsignedByte();\n        data.setPosition(data.getPosition() - 1);\n        if (tableId == 0xFF) {\n          waitingForPayloadStart=true;\n          return;\n        }\n      }\n      int headerBytesToRead=min(data.bytesLeft(),SECTION_HEADER_LENGTH - bytesRead);\n      data.readBytes(sectionData.getData(),bytesRead,headerBytesToRead);\n      bytesRead+=headerBytesToRead;\n      if (bytesRead == SECTION_HEADER_LENGTH) {\n        sectionData.setPosition(0);\n        sectionData.setLimit(SECTION_HEADER_LENGTH);\n        sectionData.skipBytes(1);\n        int secondHeaderByte=sectionData.readUnsignedByte();\n        int thirdHeaderByte=sectionData.readUnsignedByte();\n        sectionSyntaxIndicator=(secondHeaderByte & 0x80) != 0;\n        totalSectionLength=(((secondHeaderByte & 0x0F) << 8) | thirdHeaderByte) + SECTION_HEADER_LENGTH;\n        if (sectionData.capacity() < totalSectionLength) {\n          int limit=min(MAX_SECTION_LENGTH,max(totalSectionLength,sectionData.capacity() * 2));\n          sectionData.ensureCapacity(limit);\n        }\n      }\n    }\n else {\n      int bodyBytesToRead=min(data.bytesLeft(),totalSectionLength - bytesRead);\n      data.readBytes(sectionData.getData(),bytesRead,bodyBytesToRead);\n      bytesRead+=bodyBytesToRead;\n      if (bytesRead == totalSectionLength) {\n        if (sectionSyntaxIndicator) {\n          if (Util.crc32(sectionData.getData(),0,totalSectionLength,0xFFFFFFFF) != 0) {\n            waitingForPayloadStart=true;\n            return;\n          }\n          sectionData.setLimit(totalSectionLength - 4);\n        }\n else {\n          sectionData.setLimit(totalSectionLength);\n        }\n        sectionData.setPosition(0);\n        reader.consume(sectionData);\n        bytesRead=0;\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 304,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 830,
        "startLineNumber" : 100,
        "startColumnNumber" : 8,
        "endLineNumber" : 115,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (bytesRead == SECTION_HEADER_LENGTH) {\n  sectionData.setPosition(0);\n  sectionData.setLimit(SECTION_HEADER_LENGTH);\n  sectionData.skipBytes(1);\n  int secondHeaderByte=sectionData.readUnsignedByte();\n  int thirdHeaderByte=sectionData.readUnsignedByte();\n  sectionSyntaxIndicator=(secondHeaderByte & 0x80) != 0;\n  totalSectionLength=(((secondHeaderByte & 0x0F) << 8) | thirdHeaderByte) + SECTION_HEADER_LENGTH;\n  if (sectionData.capacity() < totalSectionLength) {\n    int limit=min(MAX_SECTION_LENGTH,max(totalSectionLength,sectionData.capacity() * 2));\n    sectionData.ensureCapacity(limit);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 85,
      "astHeight" : 12
    },
    "tokenLength" : 5,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 34,
    "startLineNumber" : 100,
    "startColumnNumber" : 12,
    "endLineNumber" : 100,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ ]
}