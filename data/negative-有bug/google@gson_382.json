{
  "id" : 382,
  "expression" : "\"\\\"b\\\":\"",
  "projectName" : "google@gson",
  "commitID" : "c3d0f200b352f411b9ebe45c3bf49d4328b2c51f",
  "filePath" : "/gson/src/test/java/com/google/gson/functional/VersioningTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"\\\"b\\\":\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 119,
      "startColumnNumber" : 30,
      "endLineNumber" : 119,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 119,
        "startColumnNumber" : 30,
        "endLineNumber" : 119,
        "endColumnNumber" : 42
      },
      "nodeContext" : "\"\\\"b\\\":\" + B",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 119,
        "startColumnNumber" : 16,
        "endLineNumber" : 119,
        "endColumnNumber" : 43
      },
      "nodeContext" : "json.contains(\"\\\"b\\\":\" + B)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 119,
        "startColumnNumber" : 4,
        "endLineNumber" : 119,
        "endColumnNumber" : 44
      },
      "nodeContext" : "assertFalse(json.contains(\"\\\"b\\\":\" + B))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 119,
        "startColumnNumber" : 4,
        "endLineNumber" : 119,
        "endColumnNumber" : 45
      },
      "nodeContext" : "assertFalse(json.contains(\"\\\"b\\\":\" + B));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 441,
        "startLineNumber" : 115,
        "startColumnNumber" : 66,
        "endLineNumber" : 128,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Gson gson=builder.setVersion(1.0).create();\n  SinceUntilMixing target=new SinceUntilMixing();\n  String json=gson.toJson(target);\n  assertFalse(json.contains(\"\\\"b\\\":\" + B));\n  gson=builder.setVersion(1.2).create();\n  json=gson.toJson(target);\n  assertTrue(json.contains(\"\\\"b\\\":\" + B));\n  gson=builder.setVersion(1.3).create();\n  json=gson.toJson(target);\n  assertFalse(json.contains(\"\\\"b\\\":\" + B));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 88,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 505,
        "startLineNumber" : 115,
        "startColumnNumber" : 2,
        "endLineNumber" : 128,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testVersionedGsonMixingSinceAndUntilSerialization(){\n  Gson gson=builder.setVersion(1.0).create();\n  SinceUntilMixing target=new SinceUntilMixing();\n  String json=gson.toJson(target);\n  assertFalse(json.contains(\"\\\"b\\\":\" + B));\n  gson=builder.setVersion(1.2).create();\n  json=gson.toJson(target);\n  assertTrue(json.contains(\"\\\"b\\\":\" + B));\n  gson=builder.setVersion(1.3).create();\n  json=gson.toJson(target);\n  assertFalse(json.contains(\"\\\"b\\\":\" + B));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 92,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 119,
        "startColumnNumber" : 4,
        "endLineNumber" : 119,
        "endColumnNumber" : 45
      },
      "nodeContext" : "assertFalse(json.contains(\"\\\"b\\\":\" + B));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"\\\"b\\\":\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 123,
      "startColumnNumber" : 29,
      "endLineNumber" : 123,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 123,
        "startColumnNumber" : 29,
        "endLineNumber" : 123,
        "endColumnNumber" : 41
      },
      "nodeContext" : "\"\\\"b\\\":\" + B",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 123,
        "startColumnNumber" : 15,
        "endLineNumber" : 123,
        "endColumnNumber" : 42
      },
      "nodeContext" : "json.contains(\"\\\"b\\\":\" + B)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 123,
        "startColumnNumber" : 4,
        "endLineNumber" : 123,
        "endColumnNumber" : 43
      },
      "nodeContext" : "assertTrue(json.contains(\"\\\"b\\\":\" + B))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 123,
        "startColumnNumber" : 4,
        "endLineNumber" : 123,
        "endColumnNumber" : 44
      },
      "nodeContext" : "assertTrue(json.contains(\"\\\"b\\\":\" + B));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 441,
        "startLineNumber" : 115,
        "startColumnNumber" : 66,
        "endLineNumber" : 128,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Gson gson=builder.setVersion(1.0).create();\n  SinceUntilMixing target=new SinceUntilMixing();\n  String json=gson.toJson(target);\n  assertFalse(json.contains(\"\\\"b\\\":\" + B));\n  gson=builder.setVersion(1.2).create();\n  json=gson.toJson(target);\n  assertTrue(json.contains(\"\\\"b\\\":\" + B));\n  gson=builder.setVersion(1.3).create();\n  json=gson.toJson(target);\n  assertFalse(json.contains(\"\\\"b\\\":\" + B));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 88,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 505,
        "startLineNumber" : 115,
        "startColumnNumber" : 2,
        "endLineNumber" : 128,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testVersionedGsonMixingSinceAndUntilSerialization(){\n  Gson gson=builder.setVersion(1.0).create();\n  SinceUntilMixing target=new SinceUntilMixing();\n  String json=gson.toJson(target);\n  assertFalse(json.contains(\"\\\"b\\\":\" + B));\n  gson=builder.setVersion(1.2).create();\n  json=gson.toJson(target);\n  assertTrue(json.contains(\"\\\"b\\\":\" + B));\n  gson=builder.setVersion(1.3).create();\n  json=gson.toJson(target);\n  assertFalse(json.contains(\"\\\"b\\\":\" + B));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 92,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 123,
        "startColumnNumber" : 4,
        "endLineNumber" : 123,
        "endColumnNumber" : 44
      },
      "nodeContext" : "assertTrue(json.contains(\"\\\"b\\\":\" + B));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"\\\"b\\\":\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 127,
      "startColumnNumber" : 30,
      "endLineNumber" : 127,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 127,
        "startColumnNumber" : 30,
        "endLineNumber" : 127,
        "endColumnNumber" : 42
      },
      "nodeContext" : "\"\\\"b\\\":\" + B",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 127,
        "startColumnNumber" : 16,
        "endLineNumber" : 127,
        "endColumnNumber" : 43
      },
      "nodeContext" : "json.contains(\"\\\"b\\\":\" + B)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 127,
        "startColumnNumber" : 4,
        "endLineNumber" : 127,
        "endColumnNumber" : 44
      },
      "nodeContext" : "assertFalse(json.contains(\"\\\"b\\\":\" + B))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 127,
        "startColumnNumber" : 4,
        "endLineNumber" : 127,
        "endColumnNumber" : 45
      },
      "nodeContext" : "assertFalse(json.contains(\"\\\"b\\\":\" + B));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 441,
        "startLineNumber" : 115,
        "startColumnNumber" : 66,
        "endLineNumber" : 128,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Gson gson=builder.setVersion(1.0).create();\n  SinceUntilMixing target=new SinceUntilMixing();\n  String json=gson.toJson(target);\n  assertFalse(json.contains(\"\\\"b\\\":\" + B));\n  gson=builder.setVersion(1.2).create();\n  json=gson.toJson(target);\n  assertTrue(json.contains(\"\\\"b\\\":\" + B));\n  gson=builder.setVersion(1.3).create();\n  json=gson.toJson(target);\n  assertFalse(json.contains(\"\\\"b\\\":\" + B));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 88,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 505,
        "startLineNumber" : 115,
        "startColumnNumber" : 2,
        "endLineNumber" : 128,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public void testVersionedGsonMixingSinceAndUntilSerialization(){\n  Gson gson=builder.setVersion(1.0).create();\n  SinceUntilMixing target=new SinceUntilMixing();\n  String json=gson.toJson(target);\n  assertFalse(json.contains(\"\\\"b\\\":\" + B));\n  gson=builder.setVersion(1.2).create();\n  json=gson.toJson(target);\n  assertTrue(json.contains(\"\\\"b\\\":\" + B));\n  gson=builder.setVersion(1.3).create();\n  json=gson.toJson(target);\n  assertFalse(json.contains(\"\\\"b\\\":\" + B));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 92,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 127,
        "startColumnNumber" : 4,
        "endLineNumber" : 127,
        "endColumnNumber" : 45
      },
      "nodeContext" : "assertFalse(json.contains(\"\\\"b\\\":\" + B));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 119,
    "startColumnNumber" : 30,
    "endLineNumber" : 119,
    "endColumnNumber" : 38
  }, {
    "charLength" : 8,
    "startLineNumber" : 123,
    "startColumnNumber" : 29,
    "endLineNumber" : 123,
    "endColumnNumber" : 37
  }, {
    "charLength" : 8,
    "startLineNumber" : 127,
    "startColumnNumber" : 30,
    "endLineNumber" : 127,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  } ]
}