{
  "id" : 300,
  "expression" : "\"DELOMBOK: \".length()",
  "projectName" : "projectlombok@lombok",
  "commitID" : "25def866b50860715ee7c315c678b8c3d1ba9b56",
  "filePath" : "/src/delombok/lombok/delombok/Delombok.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"DELOMBOK: \".length()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 195,
      "startColumnNumber" : 86,
      "endLineNumber" : 195,
      "endColumnNumber" : 107
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 195,
        "startColumnNumber" : 72,
        "endLineNumber" : 195,
        "endColumnNumber" : 108
      },
      "nodeContext" : "msg.substring(\"DELOMBOK: \".length())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 195,
        "startColumnNumber" : 53,
        "endLineNumber" : 195,
        "endColumnNumber" : 109
      },
      "nodeContext" : "System.err.println(msg.substring(\"DELOMBOK: \".length()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 195,
        "startColumnNumber" : 53,
        "endLineNumber" : 195,
        "endColumnNumber" : 110
      },
      "nodeContext" : "System.err.println(msg.substring(\"DELOMBOK: \".length()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 195,
        "startColumnNumber" : 4,
        "endLineNumber" : 198,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (msg != null && msg.startsWith(\"DELOMBOK: \")) System.err.println(msg.substring(\"DELOMBOK: \".length()));\n else {\n  e.printStackTrace();\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 225,
        "startLineNumber" : 193,
        "startColumnNumber" : 20,
        "endLineNumber" : 201,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  String msg=e.getMessage();\n  if (msg != null && msg.startsWith(\"DELOMBOK: \"))   System.err.println(msg.substring(\"DELOMBOK: \".length()));\n else {\n    e.printStackTrace();\n  }\n  System.exit(1);\n  return;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 242,
        "startLineNumber" : 193,
        "startColumnNumber" : 3,
        "endLineNumber" : 201,
        "endColumnNumber" : 4
      },
      "nodeContext" : "if (!args.quiet) {\n  String msg=e.getMessage();\n  if (msg != null && msg.startsWith(\"DELOMBOK: \"))   System.err.println(msg.substring(\"DELOMBOK: \".length()));\n else {\n    e.printStackTrace();\n  }\n  System.exit(1);\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 46,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 251,
        "startLineNumber" : 192,
        "startColumnNumber" : 24,
        "endLineNumber" : 202,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!args.quiet) {\n    String msg=e.getMessage();\n    if (msg != null && msg.startsWith(\"DELOMBOK: \"))     System.err.println(msg.substring(\"DELOMBOK: \".length()));\n else {\n      e.printStackTrace();\n    }\n    System.exit(1);\n    return;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 47,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 271,
        "startLineNumber" : 192,
        "startColumnNumber" : 4,
        "endLineNumber" : 202,
        "endColumnNumber" : 3
      },
      "nodeContext" : "catch (Exception e) {\n  if (!args.quiet) {\n    String msg=e.getMessage();\n    if (msg != null && msg.startsWith(\"DELOMBOK: \"))     System.err.println(msg.substring(\"DELOMBOK: \".length()));\n else {\n      e.printStackTrace();\n    }\n    System.exit(1);\n    return;\n  }\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 52,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 774,
        "startLineNumber" : 177,
        "startColumnNumber" : 2,
        "endLineNumber" : 202,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  for (  String in : args.input) {\n    File f=new File(in).getAbsoluteFile();\n    if (f.isFile()) {\n      delombok.addFile(f.getParentFile(),f.getName());\n    }\n else     if (f.isDirectory()) {\n      delombok.addDirectory(f);\n    }\n else     if (!f.exists()) {\n      if (!args.quiet)       System.err.println(\"WARNING: does not exist - skipping: \" + f);\n    }\n else {\n      if (!args.quiet)       System.err.println(\"WARNING: not a standard file or directory - skipping: \" + f);\n    }\n  }\n  delombok.delombok();\n}\n catch (Exception e) {\n  if (!args.quiet) {\n    String msg=e.getMessage();\n    if (msg != null && msg.startsWith(\"DELOMBOK: \"))     System.err.println(msg.substring(\"DELOMBOK: \".length()));\n else {\n      e.printStackTrace();\n    }\n    System.exit(1);\n    return;\n  }\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 138,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2170,
        "startLineNumber" : 129,
        "startColumnNumber" : 43,
        "endLineNumber" : 203,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  CmdReader<CmdArgs> reader=CmdReader.of(CmdArgs.class);\n  CmdArgs args;\n  try {\n    args=reader.make(rawArgs);\n  }\n catch (  InvalidCommandLineException e) {\n    System.err.println(\"ERROR: \" + e.getMessage());\n    System.err.println(reader.generateCommandLineHelp(\"delombok\"));\n    System.exit(1);\n    return;\n  }\n  if (args.help || args.input.isEmpty()) {\n    if (!args.help)     System.err.println(\"ERROR: no files or directories to delombok specified.\");\n    System.err.println(reader.generateCommandLineHelp(\"delombok\"));\n    System.exit(args.help ? 0 : 1);\n    return;\n  }\n  Delombok delombok=new Delombok();\n  if (args.quiet)   delombok.setFeedback(new PrintStream(new OutputStream(){\n    @Override public void write(    int b) throws IOException {\n    }\n  }\n));\n  if (args.encoding != null) {\n    try {\n      delombok.setCharset(args.encoding);\n    }\n catch (    UnsupportedCharsetException e) {\n      System.err.println(\"ERROR: Not a known charset: \" + args.encoding);\n      System.exit(1);\n      return;\n    }\n  }\n  if (args.verbose)   delombok.setVerbose(true);\n  if (args.nocopy)   delombok.setNoCopy(true);\n  if (args.print) {\n    delombok.setOutputToStandardOut();\n  }\n else {\n    delombok.setOutput(new File(args.target));\n  }\n  if (args.classpath != null)   delombok.setClasspath(args.classpath);\n  if (args.sourcepath != null)   delombok.setSourcepath(args.sourcepath);\n  try {\n    for (    String in : args.input) {\n      File f=new File(in).getAbsoluteFile();\n      if (f.isFile()) {\n        delombok.addFile(f.getParentFile(),f.getName());\n      }\n else       if (f.isDirectory()) {\n        delombok.addDirectory(f);\n      }\n else       if (!f.exists()) {\n        if (!args.quiet)         System.err.println(\"WARNING: does not exist - skipping: \" + f);\n      }\n else {\n        if (!args.quiet)         System.err.println(\"WARNING: not a standard file or directory - skipping: \" + f);\n      }\n    }\n    delombok.delombok();\n  }\n catch (  Exception e) {\n    if (!args.quiet) {\n      String msg=e.getMessage();\n      if (msg != null && msg.startsWith(\"DELOMBOK: \"))       System.err.println(msg.substring(\"DELOMBOK: \".length()));\n else {\n        e.printStackTrace();\n      }\n      System.exit(1);\n      return;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 382,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2212,
        "startLineNumber" : 129,
        "startColumnNumber" : 1,
        "endLineNumber" : 203,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public static void main(String[] rawArgs){\n  CmdReader<CmdArgs> reader=CmdReader.of(CmdArgs.class);\n  CmdArgs args;\n  try {\n    args=reader.make(rawArgs);\n  }\n catch (  InvalidCommandLineException e) {\n    System.err.println(\"ERROR: \" + e.getMessage());\n    System.err.println(reader.generateCommandLineHelp(\"delombok\"));\n    System.exit(1);\n    return;\n  }\n  if (args.help || args.input.isEmpty()) {\n    if (!args.help)     System.err.println(\"ERROR: no files or directories to delombok specified.\");\n    System.err.println(reader.generateCommandLineHelp(\"delombok\"));\n    System.exit(args.help ? 0 : 1);\n    return;\n  }\n  Delombok delombok=new Delombok();\n  if (args.quiet)   delombok.setFeedback(new PrintStream(new OutputStream(){\n    @Override public void write(    int b) throws IOException {\n    }\n  }\n));\n  if (args.encoding != null) {\n    try {\n      delombok.setCharset(args.encoding);\n    }\n catch (    UnsupportedCharsetException e) {\n      System.err.println(\"ERROR: Not a known charset: \" + args.encoding);\n      System.exit(1);\n      return;\n    }\n  }\n  if (args.verbose)   delombok.setVerbose(true);\n  if (args.nocopy)   delombok.setNoCopy(true);\n  if (args.print) {\n    delombok.setOutputToStandardOut();\n  }\n else {\n    delombok.setOutput(new File(args.target));\n  }\n  if (args.classpath != null)   delombok.setClasspath(args.classpath);\n  if (args.sourcepath != null)   delombok.setSourcepath(args.sourcepath);\n  try {\n    for (    String in : args.input) {\n      File f=new File(in).getAbsoluteFile();\n      if (f.isFile()) {\n        delombok.addFile(f.getParentFile(),f.getName());\n      }\n else       if (f.isDirectory()) {\n        delombok.addDirectory(f);\n      }\n else       if (!f.exists()) {\n        if (!args.quiet)         System.err.println(\"WARNING: does not exist - skipping: \" + f);\n      }\n else {\n        if (!args.quiet)         System.err.println(\"WARNING: not a standard file or directory - skipping: \" + f);\n      }\n    }\n    delombok.delombok();\n  }\n catch (  Exception e) {\n    if (!args.quiet) {\n      String msg=e.getMessage();\n      if (msg != null && msg.startsWith(\"DELOMBOK: \"))       System.err.println(msg.substring(\"DELOMBOK: \".length()));\n else {\n        e.printStackTrace();\n      }\n      System.exit(1);\n      return;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 393,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 195,
        "startColumnNumber" : 53,
        "endLineNumber" : 195,
        "endColumnNumber" : 110
      },
      "nodeContext" : "System.err.println(msg.substring(\"DELOMBOK: \".length()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 195,
    "startColumnNumber" : 86,
    "endLineNumber" : 195,
    "endColumnNumber" : 107
  } ],
  "layoutRelationDataList" : [ ]
}