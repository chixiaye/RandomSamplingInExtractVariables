{
  "id" : 105,
  "expression" : "\"Incorrect kvEntry. Key can't be empty\"",
  "projectName" : "thingsboard@thingsboard",
  "commitID" : "7c2b3a9fbf84cc58aa7546029c5c7c10a662c55a",
  "filePath" : "/dao/src/main/java/org/thingsboard/server/dao/attributes/AttributeUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Incorrect kvEntry. Key can't be empty\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 39,
      "startLineNumber" : 35,
      "startColumnNumber" : 55,
      "endLineNumber" : 35,
      "endColumnNumber" : 94
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 35,
        "startColumnNumber" : 12,
        "endLineNumber" : 35,
        "endColumnNumber" : 95
      },
      "nodeContext" : "Validator.validateString(kvEntry.getKey(),\"Incorrect kvEntry. Key can't be empty\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 35,
        "startColumnNumber" : 12,
        "endLineNumber" : 35,
        "endColumnNumber" : 96
      },
      "nodeContext" : "Validator.validateString(kvEntry.getKey(),\"Incorrect kvEntry. Key can't be empty\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 232,
        "startLineNumber" : 34,
        "startColumnNumber" : 15,
        "endLineNumber" : 37,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Validator.validateString(kvEntry.getKey(),\"Incorrect kvEntry. Key can't be empty\");\n  Validator.validatePositiveNumber(kvEntry.getLastUpdateTs(),\"Incorrect last update ts. Ts should be positive\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 381,
        "startLineNumber" : 32,
        "startColumnNumber" : 15,
        "endLineNumber" : 37,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (kvEntry.getDataType() == null) {\n  throw new IncorrectParameterException(\"Incorrect kvEntry. Data type can't be null\");\n}\n else {\n  Validator.validateString(kvEntry.getKey(),\"Incorrect kvEntry. Key can't be empty\");\n  Validator.validatePositiveNumber(kvEntry.getLastUpdateTs(),\"Incorrect last update ts. Ts should be positive\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 29,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 503,
        "startLineNumber" : 30,
        "startColumnNumber" : 8,
        "endLineNumber" : 37,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (kvEntry == null) {\n  throw new IncorrectParameterException(\"Key value entry can't be null\");\n}\n else if (kvEntry.getDataType() == null) {\n  throw new IncorrectParameterException(\"Incorrect kvEntry. Data type can't be null\");\n}\n else {\n  Validator.validateString(kvEntry.getKey(),\"Incorrect kvEntry. Key can't be empty\");\n  Validator.validatePositiveNumber(kvEntry.getLastUpdateTs(),\"Incorrect last update ts. Ts should be positive\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 39,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 519,
        "startLineNumber" : 29,
        "startColumnNumber" : 58,
        "endLineNumber" : 38,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (kvEntry == null) {\n    throw new IncorrectParameterException(\"Key value entry can't be null\");\n  }\n else   if (kvEntry.getDataType() == null) {\n    throw new IncorrectParameterException(\"Incorrect kvEntry. Data type can't be null\");\n  }\n else {\n    Validator.validateString(kvEntry.getKey(),\"Incorrect kvEntry. Key can't be empty\");\n    Validator.validatePositiveNumber(kvEntry.getLastUpdateTs(),\"Incorrect last update ts. Ts should be positive\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 40,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 573,
        "startLineNumber" : 29,
        "startColumnNumber" : 4,
        "endLineNumber" : 38,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void validate(AttributeKvEntry kvEntry){\n  if (kvEntry == null) {\n    throw new IncorrectParameterException(\"Key value entry can't be null\");\n  }\n else   if (kvEntry.getDataType() == null) {\n    throw new IncorrectParameterException(\"Incorrect kvEntry. Data type can't be null\");\n  }\n else {\n    Validator.validateString(kvEntry.getKey(),\"Incorrect kvEntry. Key can't be empty\");\n    Validator.validatePositiveNumber(kvEntry.getLastUpdateTs(),\"Incorrect last update ts. Ts should be positive\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 49,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 35,
        "startColumnNumber" : 12,
        "endLineNumber" : 35,
        "endColumnNumber" : 96
      },
      "nodeContext" : "Validator.validateString(kvEntry.getKey(),\"Incorrect kvEntry. Key can't be empty\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 7,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 39,
    "startLineNumber" : 35,
    "startColumnNumber" : 55,
    "endLineNumber" : 35,
    "endColumnNumber" : 94
  } ],
  "layoutRelationDataList" : [ ]
}