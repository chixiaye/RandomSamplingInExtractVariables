{
  "id" : 146,
  "expression" : "DROP_PROCEDURE_CREATE_TS_KV_LATEST_TABLE",
  "projectName" : "thingsboard@thingsboard",
  "commitID" : "7c2b3a9fbf84cc58aa7546029c5c7c10a662c55a",
  "filePath" : "/application/src/main/java/org/thingsboard/server/service/install/TimescaleTsDatabaseUpgradeService.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "DROP_PROCEDURE_CREATE_TS_KV_LATEST_TABLE",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 40,
      "startLineNumber" : 155,
      "startColumnNumber" : 47,
      "endLineNumber" : 155,
      "endColumnNumber" : 87
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 155,
        "startColumnNumber" : 28,
        "endLineNumber" : 155,
        "endColumnNumber" : 88
      },
      "nodeContext" : "executeQuery(conn,DROP_PROCEDURE_CREATE_TS_KV_LATEST_TABLE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 155,
        "startColumnNumber" : 28,
        "endLineNumber" : 155,
        "endColumnNumber" : 89
      },
      "nodeContext" : "executeQuery(conn,DROP_PROCEDURE_CREATE_TS_KV_LATEST_TABLE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 5354,
        "startLineNumber" : 90,
        "startColumnNumber" : 56,
        "endLineNumber" : 165,
        "endColumnNumber" : 25
      },
      "nodeContext" : "{\n  log.info(\"Load upgrade functions ...\");\n  loadSql(conn,LOAD_FUNCTIONS_SQL,\"2.4.3\");\n  log.info(\"Updating timescale schema ...\");\n  executeQuery(conn,CALL_CREATE_TS_KV_LATEST_TABLE);\n  executeQuery(conn,CALL_CREATE_NEW_TENANT_TS_KV_TABLE);\n  executeQuery(conn,\"SELECT create_hypertable('ts_kv', 'ts', chunk_time_interval => \" + chunkTimeInterval + \", if_not_exists => true);\");\n  executeQuery(conn,CALL_CREATE_TS_KV_DICTIONARY_TABLE);\n  executeQuery(conn,CALL_INSERT_INTO_DICTIONARY);\n  Path pathToTempTsKvFile=null;\n  if (SystemUtils.IS_OS_WINDOWS) {\n    Path pathToDir;\n    log.info(\"Lookup for environment variable: {} ...\",THINGSBOARD_WINDOWS_UPGRADE_DIR);\n    String thingsboardWindowsUpgradeDir=System.getenv(THINGSBOARD_WINDOWS_UPGRADE_DIR);\n    if (StringUtils.isNotEmpty(thingsboardWindowsUpgradeDir)) {\n      log.info(\"Environment variable: {} was found!\",THINGSBOARD_WINDOWS_UPGRADE_DIR);\n      pathToDir=Paths.get(thingsboardWindowsUpgradeDir);\n    }\n else {\n      log.info(\"Failed to lookup environment variable: {}\",THINGSBOARD_WINDOWS_UPGRADE_DIR);\n      pathToDir=Paths.get(PATH_TO_USERS_PUBLIC_FOLDER);\n    }\n    log.info(\"Directory: {} will be used for creation temporary upgrade file!\",pathToDir);\n    try {\n      Path tsKvFile=Files.createTempFile(pathToDir,\"ts_kv\",\".sql\");\n      pathToTempTsKvFile=tsKvFile.toAbsolutePath();\n      try {\n        executeQuery(conn,\"call insert_into_ts_kv('\" + pathToTempTsKvFile + \"')\");\n      }\n catch (      Exception e) {\n        insertTimeseries(conn);\n      }\n    }\n catch (    IOException|SecurityException e) {\n      log.warn(\"Failed to create time-series upgrade files due to: {}\",e.getMessage());\n      insertTimeseries(conn);\n    }\n  }\n else {\n    try {\n      Path tempDirPath=Files.createTempDirectory(\"ts_kv\");\n      File tempDirAsFile=tempDirPath.toFile();\n      boolean writable=tempDirAsFile.setWritable(true,false);\n      boolean readable=tempDirAsFile.setReadable(true,false);\n      boolean executable=tempDirAsFile.setExecutable(true,false);\n      pathToTempTsKvFile=tempDirPath.resolve(TS_KV_SQL).toAbsolutePath();\n      try {\n        if (writable && readable && executable) {\n          executeQuery(conn,\"call insert_into_ts_kv('\" + pathToTempTsKvFile + \"')\");\n        }\n else {\n          throw new RuntimeException(\"Failed to grant write permissions for the: \" + tempDirPath + \"folder!\");\n        }\n      }\n catch (      Exception e) {\n        insertTimeseries(conn);\n      }\n    }\n catch (    IOException|SecurityException e) {\n      log.warn(\"Failed to create time-series upgrade files due to: {}\",e.getMessage());\n      insertTimeseries(conn);\n    }\n  }\n  removeUpgradeFile(pathToTempTsKvFile);\n  executeQuery(conn,CALL_INSERT_INTO_TS_KV_LATEST);\n  executeQuery(conn,DROP_OLD_TENANT_TS_KV_TABLE);\n  executeQuery(conn,DROP_PROCEDURE_CREATE_TS_KV_LATEST_TABLE);\n  executeQuery(conn,DROP_PROCEDURE_CREATE_TENANT_TS_KV_TABLE_COPY);\n  executeQuery(conn,DROP_PROCEDURE_CREATE_TS_KV_DICTIONARY_TABLE);\n  executeQuery(conn,DROP_PROCEDURE_INSERT_INTO_DICTIONARY);\n  executeQuery(conn,DROP_PROCEDURE_INSERT_INTO_TS_KV);\n  executeQuery(conn,DROP_PROCEDURE_INSERT_INTO_TS_KV_CURSOR);\n  executeQuery(conn,DROP_PROCEDURE_INSERT_INTO_TS_KV_LATEST);\n  executeQuery(conn,\"ALTER TABLE ts_kv ADD COLUMN IF NOT EXISTS json_v json;\");\n  executeQuery(conn,\"ALTER TABLE ts_kv_latest ADD COLUMN IF NOT EXISTS json_v json;\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 346,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 5386,
        "startLineNumber" : 90,
        "startColumnNumber" : 24,
        "endLineNumber" : 165,
        "endColumnNumber" : 25
      },
      "nodeContext" : "if (isOldSchema(conn,2004003)) {\n  log.info(\"Load upgrade functions ...\");\n  loadSql(conn,LOAD_FUNCTIONS_SQL,\"2.4.3\");\n  log.info(\"Updating timescale schema ...\");\n  executeQuery(conn,CALL_CREATE_TS_KV_LATEST_TABLE);\n  executeQuery(conn,CALL_CREATE_NEW_TENANT_TS_KV_TABLE);\n  executeQuery(conn,\"SELECT create_hypertable('ts_kv', 'ts', chunk_time_interval => \" + chunkTimeInterval + \", if_not_exists => true);\");\n  executeQuery(conn,CALL_CREATE_TS_KV_DICTIONARY_TABLE);\n  executeQuery(conn,CALL_INSERT_INTO_DICTIONARY);\n  Path pathToTempTsKvFile=null;\n  if (SystemUtils.IS_OS_WINDOWS) {\n    Path pathToDir;\n    log.info(\"Lookup for environment variable: {} ...\",THINGSBOARD_WINDOWS_UPGRADE_DIR);\n    String thingsboardWindowsUpgradeDir=System.getenv(THINGSBOARD_WINDOWS_UPGRADE_DIR);\n    if (StringUtils.isNotEmpty(thingsboardWindowsUpgradeDir)) {\n      log.info(\"Environment variable: {} was found!\",THINGSBOARD_WINDOWS_UPGRADE_DIR);\n      pathToDir=Paths.get(thingsboardWindowsUpgradeDir);\n    }\n else {\n      log.info(\"Failed to lookup environment variable: {}\",THINGSBOARD_WINDOWS_UPGRADE_DIR);\n      pathToDir=Paths.get(PATH_TO_USERS_PUBLIC_FOLDER);\n    }\n    log.info(\"Directory: {} will be used for creation temporary upgrade file!\",pathToDir);\n    try {\n      Path tsKvFile=Files.createTempFile(pathToDir,\"ts_kv\",\".sql\");\n      pathToTempTsKvFile=tsKvFile.toAbsolutePath();\n      try {\n        executeQuery(conn,\"call insert_into_ts_kv('\" + pathToTempTsKvFile + \"')\");\n      }\n catch (      Exception e) {\n        insertTimeseries(conn);\n      }\n    }\n catch (    IOException|SecurityException e) {\n      log.warn(\"Failed to create time-series upgrade files due to: {}\",e.getMessage());\n      insertTimeseries(conn);\n    }\n  }\n else {\n    try {\n      Path tempDirPath=Files.createTempDirectory(\"ts_kv\");\n      File tempDirAsFile=tempDirPath.toFile();\n      boolean writable=tempDirAsFile.setWritable(true,false);\n      boolean readable=tempDirAsFile.setReadable(true,false);\n      boolean executable=tempDirAsFile.setExecutable(true,false);\n      pathToTempTsKvFile=tempDirPath.resolve(TS_KV_SQL).toAbsolutePath();\n      try {\n        if (writable && readable && executable) {\n          executeQuery(conn,\"call insert_into_ts_kv('\" + pathToTempTsKvFile + \"')\");\n        }\n else {\n          throw new RuntimeException(\"Failed to grant write permissions for the: \" + tempDirPath + \"folder!\");\n        }\n      }\n catch (      Exception e) {\n        insertTimeseries(conn);\n      }\n    }\n catch (    IOException|SecurityException e) {\n      log.warn(\"Failed to create time-series upgrade files due to: {}\",e.getMessage());\n      insertTimeseries(conn);\n    }\n  }\n  removeUpgradeFile(pathToTempTsKvFile);\n  executeQuery(conn,CALL_INSERT_INTO_TS_KV_LATEST);\n  executeQuery(conn,DROP_OLD_TENANT_TS_KV_TABLE);\n  executeQuery(conn,DROP_PROCEDURE_CREATE_TS_KV_LATEST_TABLE);\n  executeQuery(conn,DROP_PROCEDURE_CREATE_TENANT_TS_KV_TABLE_COPY);\n  executeQuery(conn,DROP_PROCEDURE_CREATE_TS_KV_DICTIONARY_TABLE);\n  executeQuery(conn,DROP_PROCEDURE_INSERT_INTO_DICTIONARY);\n  executeQuery(conn,DROP_PROCEDURE_INSERT_INTO_TS_KV);\n  executeQuery(conn,DROP_PROCEDURE_INSERT_INTO_TS_KV_CURSOR);\n  executeQuery(conn,DROP_PROCEDURE_INSERT_INTO_TS_KV_LATEST);\n  executeQuery(conn,\"ALTER TABLE ts_kv ADD COLUMN IF NOT EXISTS json_v json;\");\n  executeQuery(conn,\"ALTER TABLE ts_kv_latest ADD COLUMN IF NOT EXISTS json_v json;\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 351,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5799,
        "startLineNumber" : 88,
        "startColumnNumber" : 27,
        "endLineNumber" : 172,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  log.info(\"PostgreSQL version is valid!\");\n  if (isOldSchema(conn,2004003)) {\n    log.info(\"Load upgrade functions ...\");\n    loadSql(conn,LOAD_FUNCTIONS_SQL,\"2.4.3\");\n    log.info(\"Updating timescale schema ...\");\n    executeQuery(conn,CALL_CREATE_TS_KV_LATEST_TABLE);\n    executeQuery(conn,CALL_CREATE_NEW_TENANT_TS_KV_TABLE);\n    executeQuery(conn,\"SELECT create_hypertable('ts_kv', 'ts', chunk_time_interval => \" + chunkTimeInterval + \", if_not_exists => true);\");\n    executeQuery(conn,CALL_CREATE_TS_KV_DICTIONARY_TABLE);\n    executeQuery(conn,CALL_INSERT_INTO_DICTIONARY);\n    Path pathToTempTsKvFile=null;\n    if (SystemUtils.IS_OS_WINDOWS) {\n      Path pathToDir;\n      log.info(\"Lookup for environment variable: {} ...\",THINGSBOARD_WINDOWS_UPGRADE_DIR);\n      String thingsboardWindowsUpgradeDir=System.getenv(THINGSBOARD_WINDOWS_UPGRADE_DIR);\n      if (StringUtils.isNotEmpty(thingsboardWindowsUpgradeDir)) {\n        log.info(\"Environment variable: {} was found!\",THINGSBOARD_WINDOWS_UPGRADE_DIR);\n        pathToDir=Paths.get(thingsboardWindowsUpgradeDir);\n      }\n else {\n        log.info(\"Failed to lookup environment variable: {}\",THINGSBOARD_WINDOWS_UPGRADE_DIR);\n        pathToDir=Paths.get(PATH_TO_USERS_PUBLIC_FOLDER);\n      }\n      log.info(\"Directory: {} will be used for creation temporary upgrade file!\",pathToDir);\n      try {\n        Path tsKvFile=Files.createTempFile(pathToDir,\"ts_kv\",\".sql\");\n        pathToTempTsKvFile=tsKvFile.toAbsolutePath();\n        try {\n          executeQuery(conn,\"call insert_into_ts_kv('\" + pathToTempTsKvFile + \"')\");\n        }\n catch (        Exception e) {\n          insertTimeseries(conn);\n        }\n      }\n catch (      IOException|SecurityException e) {\n        log.warn(\"Failed to create time-series upgrade files due to: {}\",e.getMessage());\n        insertTimeseries(conn);\n      }\n    }\n else {\n      try {\n        Path tempDirPath=Files.createTempDirectory(\"ts_kv\");\n        File tempDirAsFile=tempDirPath.toFile();\n        boolean writable=tempDirAsFile.setWritable(true,false);\n        boolean readable=tempDirAsFile.setReadable(true,false);\n        boolean executable=tempDirAsFile.setExecutable(true,false);\n        pathToTempTsKvFile=tempDirPath.resolve(TS_KV_SQL).toAbsolutePath();\n        try {\n          if (writable && readable && executable) {\n            executeQuery(conn,\"call insert_into_ts_kv('\" + pathToTempTsKvFile + \"')\");\n          }\n else {\n            throw new RuntimeException(\"Failed to grant write permissions for the: \" + tempDirPath + \"folder!\");\n          }\n        }\n catch (        Exception e) {\n          insertTimeseries(conn);\n        }\n      }\n catch (      IOException|SecurityException e) {\n        log.warn(\"Failed to create time-series upgrade files due to: {}\",e.getMessage());\n        insertTimeseries(conn);\n      }\n    }\n    removeUpgradeFile(pathToTempTsKvFile);\n    executeQuery(conn,CALL_INSERT_INTO_TS_KV_LATEST);\n    executeQuery(conn,DROP_OLD_TENANT_TS_KV_TABLE);\n    executeQuery(conn,DROP_PROCEDURE_CREATE_TS_KV_LATEST_TABLE);\n    executeQuery(conn,DROP_PROCEDURE_CREATE_TENANT_TS_KV_TABLE_COPY);\n    executeQuery(conn,DROP_PROCEDURE_CREATE_TS_KV_DICTIONARY_TABLE);\n    executeQuery(conn,DROP_PROCEDURE_INSERT_INTO_DICTIONARY);\n    executeQuery(conn,DROP_PROCEDURE_INSERT_INTO_TS_KV);\n    executeQuery(conn,DROP_PROCEDURE_INSERT_INTO_TS_KV_CURSOR);\n    executeQuery(conn,DROP_PROCEDURE_INSERT_INTO_TS_KV_LATEST);\n    executeQuery(conn,\"ALTER TABLE ts_kv ADD COLUMN IF NOT EXISTS json_v json;\");\n    executeQuery(conn,\"ALTER TABLE ts_kv_latest ADD COLUMN IF NOT EXISTS json_v json;\");\n  }\n  log.info(\"Load TTL functions ...\");\n  loadSql(conn,LOAD_TTL_FUNCTIONS_SQL,\"2.4.3\");\n  executeQuery(conn,\"UPDATE tb_schema_settings SET schema_version = 2005000\");\n  log.info(\"schema timescale updated!\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 378,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 6009,
        "startLineNumber" : 86,
        "startColumnNumber" : 20,
        "endLineNumber" : 172,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (!versionValid) {\n  throw new RuntimeException(\"PostgreSQL version should be at least more than 11, please upgrade your PostgreSQL and restart the script!\");\n}\n else {\n  log.info(\"PostgreSQL version is valid!\");\n  if (isOldSchema(conn,2004003)) {\n    log.info(\"Load upgrade functions ...\");\n    loadSql(conn,LOAD_FUNCTIONS_SQL,\"2.4.3\");\n    log.info(\"Updating timescale schema ...\");\n    executeQuery(conn,CALL_CREATE_TS_KV_LATEST_TABLE);\n    executeQuery(conn,CALL_CREATE_NEW_TENANT_TS_KV_TABLE);\n    executeQuery(conn,\"SELECT create_hypertable('ts_kv', 'ts', chunk_time_interval => \" + chunkTimeInterval + \", if_not_exists => true);\");\n    executeQuery(conn,CALL_CREATE_TS_KV_DICTIONARY_TABLE);\n    executeQuery(conn,CALL_INSERT_INTO_DICTIONARY);\n    Path pathToTempTsKvFile=null;\n    if (SystemUtils.IS_OS_WINDOWS) {\n      Path pathToDir;\n      log.info(\"Lookup for environment variable: {} ...\",THINGSBOARD_WINDOWS_UPGRADE_DIR);\n      String thingsboardWindowsUpgradeDir=System.getenv(THINGSBOARD_WINDOWS_UPGRADE_DIR);\n      if (StringUtils.isNotEmpty(thingsboardWindowsUpgradeDir)) {\n        log.info(\"Environment variable: {} was found!\",THINGSBOARD_WINDOWS_UPGRADE_DIR);\n        pathToDir=Paths.get(thingsboardWindowsUpgradeDir);\n      }\n else {\n        log.info(\"Failed to lookup environment variable: {}\",THINGSBOARD_WINDOWS_UPGRADE_DIR);\n        pathToDir=Paths.get(PATH_TO_USERS_PUBLIC_FOLDER);\n      }\n      log.info(\"Directory: {} will be used for creation temporary upgrade file!\",pathToDir);\n      try {\n        Path tsKvFile=Files.createTempFile(pathToDir,\"ts_kv\",\".sql\");\n        pathToTempTsKvFile=tsKvFile.toAbsolutePath();\n        try {\n          executeQuery(conn,\"call insert_into_ts_kv('\" + pathToTempTsKvFile + \"')\");\n        }\n catch (        Exception e) {\n          insertTimeseries(conn);\n        }\n      }\n catch (      IOException|SecurityException e) {\n        log.warn(\"Failed to create time-series upgrade files due to: {}\",e.getMessage());\n        insertTimeseries(conn);\n      }\n    }\n else {\n      try {\n        Path tempDirPath=Files.createTempDirectory(\"ts_kv\");\n        File tempDirAsFile=tempDirPath.toFile();\n        boolean writable=tempDirAsFile.setWritable(true,false);\n        boolean readable=tempDirAsFile.setReadable(true,false);\n        boolean executable=tempDirAsFile.setExecutable(true,false);\n        pathToTempTsKvFile=tempDirPath.resolve(TS_KV_SQL).toAbsolutePath();\n        try {\n          if (writable && readable && executable) {\n            executeQuery(conn,\"call insert_into_ts_kv('\" + pathToTempTsKvFile + \"')\");\n          }\n else {\n            throw new RuntimeException(\"Failed to grant write permissions for the: \" + tempDirPath + \"folder!\");\n          }\n        }\n catch (        Exception e) {\n          insertTimeseries(conn);\n        }\n      }\n catch (      IOException|SecurityException e) {\n        log.warn(\"Failed to create time-series upgrade files due to: {}\",e.getMessage());\n        insertTimeseries(conn);\n      }\n    }\n    removeUpgradeFile(pathToTempTsKvFile);\n    executeQuery(conn,CALL_INSERT_INTO_TS_KV_LATEST);\n    executeQuery(conn,DROP_OLD_TENANT_TS_KV_TABLE);\n    executeQuery(conn,DROP_PROCEDURE_CREATE_TS_KV_LATEST_TABLE);\n    executeQuery(conn,DROP_PROCEDURE_CREATE_TENANT_TS_KV_TABLE_COPY);\n    executeQuery(conn,DROP_PROCEDURE_CREATE_TS_KV_DICTIONARY_TABLE);\n    executeQuery(conn,DROP_PROCEDURE_INSERT_INTO_DICTIONARY);\n    executeQuery(conn,DROP_PROCEDURE_INSERT_INTO_TS_KV);\n    executeQuery(conn,DROP_PROCEDURE_INSERT_INTO_TS_KV_CURSOR);\n    executeQuery(conn,DROP_PROCEDURE_INSERT_INTO_TS_KV_LATEST);\n    executeQuery(conn,\"ALTER TABLE ts_kv ADD COLUMN IF NOT EXISTS json_v json;\");\n    executeQuery(conn,\"ALTER TABLE ts_kv_latest ADD COLUMN IF NOT EXISTS json_v json;\");\n  }\n  log.info(\"Load TTL functions ...\");\n  loadSql(conn,LOAD_TTL_FUNCTIONS_SQL,\"2.4.3\");\n  executeQuery(conn,\"UPDATE tb_schema_settings SET schema_version = 2005000\");\n  log.info(\"schema timescale updated!\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 387,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 6185,
        "startLineNumber" : 83,
        "startColumnNumber" : 99,
        "endLineNumber" : 173,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  log.info(\"Check the current PostgreSQL version...\");\n  boolean versionValid=checkVersion(conn);\n  if (!versionValid) {\n    throw new RuntimeException(\"PostgreSQL version should be at least more than 11, please upgrade your PostgreSQL and restart the script!\");\n  }\n else {\n    log.info(\"PostgreSQL version is valid!\");\n    if (isOldSchema(conn,2004003)) {\n      log.info(\"Load upgrade functions ...\");\n      loadSql(conn,LOAD_FUNCTIONS_SQL,\"2.4.3\");\n      log.info(\"Updating timescale schema ...\");\n      executeQuery(conn,CALL_CREATE_TS_KV_LATEST_TABLE);\n      executeQuery(conn,CALL_CREATE_NEW_TENANT_TS_KV_TABLE);\n      executeQuery(conn,\"SELECT create_hypertable('ts_kv', 'ts', chunk_time_interval => \" + chunkTimeInterval + \", if_not_exists => true);\");\n      executeQuery(conn,CALL_CREATE_TS_KV_DICTIONARY_TABLE);\n      executeQuery(conn,CALL_INSERT_INTO_DICTIONARY);\n      Path pathToTempTsKvFile=null;\n      if (SystemUtils.IS_OS_WINDOWS) {\n        Path pathToDir;\n        log.info(\"Lookup for environment variable: {} ...\",THINGSBOARD_WINDOWS_UPGRADE_DIR);\n        String thingsboardWindowsUpgradeDir=System.getenv(THINGSBOARD_WINDOWS_UPGRADE_DIR);\n        if (StringUtils.isNotEmpty(thingsboardWindowsUpgradeDir)) {\n          log.info(\"Environment variable: {} was found!\",THINGSBOARD_WINDOWS_UPGRADE_DIR);\n          pathToDir=Paths.get(thingsboardWindowsUpgradeDir);\n        }\n else {\n          log.info(\"Failed to lookup environment variable: {}\",THINGSBOARD_WINDOWS_UPGRADE_DIR);\n          pathToDir=Paths.get(PATH_TO_USERS_PUBLIC_FOLDER);\n        }\n        log.info(\"Directory: {} will be used for creation temporary upgrade file!\",pathToDir);\n        try {\n          Path tsKvFile=Files.createTempFile(pathToDir,\"ts_kv\",\".sql\");\n          pathToTempTsKvFile=tsKvFile.toAbsolutePath();\n          try {\n            executeQuery(conn,\"call insert_into_ts_kv('\" + pathToTempTsKvFile + \"')\");\n          }\n catch (          Exception e) {\n            insertTimeseries(conn);\n          }\n        }\n catch (        IOException|SecurityException e) {\n          log.warn(\"Failed to create time-series upgrade files due to: {}\",e.getMessage());\n          insertTimeseries(conn);\n        }\n      }\n else {\n        try {\n          Path tempDirPath=Files.createTempDirectory(\"ts_kv\");\n          File tempDirAsFile=tempDirPath.toFile();\n          boolean writable=tempDirAsFile.setWritable(true,false);\n          boolean readable=tempDirAsFile.setReadable(true,false);\n          boolean executable=tempDirAsFile.setExecutable(true,false);\n          pathToTempTsKvFile=tempDirPath.resolve(TS_KV_SQL).toAbsolutePath();\n          try {\n            if (writable && readable && executable) {\n              executeQuery(conn,\"call insert_into_ts_kv('\" + pathToTempTsKvFile + \"')\");\n            }\n else {\n              throw new RuntimeException(\"Failed to grant write permissions for the: \" + tempDirPath + \"folder!\");\n            }\n          }\n catch (          Exception e) {\n            insertTimeseries(conn);\n          }\n        }\n catch (        IOException|SecurityException e) {\n          log.warn(\"Failed to create time-series upgrade files due to: {}\",e.getMessage());\n          insertTimeseries(conn);\n        }\n      }\n      removeUpgradeFile(pathToTempTsKvFile);\n      executeQuery(conn,CALL_INSERT_INTO_TS_KV_LATEST);\n      executeQuery(conn,DROP_OLD_TENANT_TS_KV_TABLE);\n      executeQuery(conn,DROP_PROCEDURE_CREATE_TS_KV_LATEST_TABLE);\n      executeQuery(conn,DROP_PROCEDURE_CREATE_TENANT_TS_KV_TABLE_COPY);\n      executeQuery(conn,DROP_PROCEDURE_CREATE_TS_KV_DICTIONARY_TABLE);\n      executeQuery(conn,DROP_PROCEDURE_INSERT_INTO_DICTIONARY);\n      executeQuery(conn,DROP_PROCEDURE_INSERT_INTO_TS_KV);\n      executeQuery(conn,DROP_PROCEDURE_INSERT_INTO_TS_KV_CURSOR);\n      executeQuery(conn,DROP_PROCEDURE_INSERT_INTO_TS_KV_LATEST);\n      executeQuery(conn,\"ALTER TABLE ts_kv ADD COLUMN IF NOT EXISTS json_v json;\");\n      executeQuery(conn,\"ALTER TABLE ts_kv_latest ADD COLUMN IF NOT EXISTS json_v json;\");\n    }\n    log.info(\"Load TTL functions ...\");\n    loadSql(conn,LOAD_TTL_FUNCTIONS_SQL,\"2.4.3\");\n    executeQuery(conn,\"UPDATE tb_schema_settings SET schema_version = 2005000\");\n    log.info(\"schema timescale updated!\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 400,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 6268,
        "startLineNumber" : 83,
        "startColumnNumber" : 16,
        "endLineNumber" : 173,
        "endColumnNumber" : 17
      },
      "nodeContext" : "try (Connection conn=DriverManager.getConnection(dbUrl,dbUserName,dbPassword)){\n  log.info(\"Check the current PostgreSQL version...\");\n  boolean versionValid=checkVersion(conn);\n  if (!versionValid) {\n    throw new RuntimeException(\"PostgreSQL version should be at least more than 11, please upgrade your PostgreSQL and restart the script!\");\n  }\n else {\n    log.info(\"PostgreSQL version is valid!\");\n    if (isOldSchema(conn,2004003)) {\n      log.info(\"Load upgrade functions ...\");\n      loadSql(conn,LOAD_FUNCTIONS_SQL,\"2.4.3\");\n      log.info(\"Updating timescale schema ...\");\n      executeQuery(conn,CALL_CREATE_TS_KV_LATEST_TABLE);\n      executeQuery(conn,CALL_CREATE_NEW_TENANT_TS_KV_TABLE);\n      executeQuery(conn,\"SELECT create_hypertable('ts_kv', 'ts', chunk_time_interval => \" + chunkTimeInterval + \", if_not_exists => true);\");\n      executeQuery(conn,CALL_CREATE_TS_KV_DICTIONARY_TABLE);\n      executeQuery(conn,CALL_INSERT_INTO_DICTIONARY);\n      Path pathToTempTsKvFile=null;\n      if (SystemUtils.IS_OS_WINDOWS) {\n        Path pathToDir;\n        log.info(\"Lookup for environment variable: {} ...\",THINGSBOARD_WINDOWS_UPGRADE_DIR);\n        String thingsboardWindowsUpgradeDir=System.getenv(THINGSBOARD_WINDOWS_UPGRADE_DIR);\n        if (StringUtils.isNotEmpty(thingsboardWindowsUpgradeDir)) {\n          log.info(\"Environment variable: {} was found!\",THINGSBOARD_WINDOWS_UPGRADE_DIR);\n          pathToDir=Paths.get(thingsboardWindowsUpgradeDir);\n        }\n else {\n          log.info(\"Failed to lookup environment variable: {}\",THINGSBOARD_WINDOWS_UPGRADE_DIR);\n          pathToDir=Paths.get(PATH_TO_USERS_PUBLIC_FOLDER);\n        }\n        log.info(\"Directory: {} will be used for creation temporary upgrade file!\",pathToDir);\n        try {\n          Path tsKvFile=Files.createTempFile(pathToDir,\"ts_kv\",\".sql\");\n          pathToTempTsKvFile=tsKvFile.toAbsolutePath();\n          try {\n            executeQuery(conn,\"call insert_into_ts_kv('\" + pathToTempTsKvFile + \"')\");\n          }\n catch (          Exception e) {\n            insertTimeseries(conn);\n          }\n        }\n catch (        IOException|SecurityException e) {\n          log.warn(\"Failed to create time-series upgrade files due to: {}\",e.getMessage());\n          insertTimeseries(conn);\n        }\n      }\n else {\n        try {\n          Path tempDirPath=Files.createTempDirectory(\"ts_kv\");\n          File tempDirAsFile=tempDirPath.toFile();\n          boolean writable=tempDirAsFile.setWritable(true,false);\n          boolean readable=tempDirAsFile.setReadable(true,false);\n          boolean executable=tempDirAsFile.setExecutable(true,false);\n          pathToTempTsKvFile=tempDirPath.resolve(TS_KV_SQL).toAbsolutePath();\n          try {\n            if (writable && readable && executable) {\n              executeQuery(conn,\"call insert_into_ts_kv('\" + pathToTempTsKvFile + \"')\");\n            }\n else {\n              throw new RuntimeException(\"Failed to grant write permissions for the: \" + tempDirPath + \"folder!\");\n            }\n          }\n catch (          Exception e) {\n            insertTimeseries(conn);\n          }\n        }\n catch (        IOException|SecurityException e) {\n          log.warn(\"Failed to create time-series upgrade files due to: {}\",e.getMessage());\n          insertTimeseries(conn);\n        }\n      }\n      removeUpgradeFile(pathToTempTsKvFile);\n      executeQuery(conn,CALL_INSERT_INTO_TS_KV_LATEST);\n      executeQuery(conn,DROP_OLD_TENANT_TS_KV_TABLE);\n      executeQuery(conn,DROP_PROCEDURE_CREATE_TS_KV_LATEST_TABLE);\n      executeQuery(conn,DROP_PROCEDURE_CREATE_TENANT_TS_KV_TABLE_COPY);\n      executeQuery(conn,DROP_PROCEDURE_CREATE_TS_KV_DICTIONARY_TABLE);\n      executeQuery(conn,DROP_PROCEDURE_INSERT_INTO_DICTIONARY);\n      executeQuery(conn,DROP_PROCEDURE_INSERT_INTO_TS_KV);\n      executeQuery(conn,DROP_PROCEDURE_INSERT_INTO_TS_KV_CURSOR);\n      executeQuery(conn,DROP_PROCEDURE_INSERT_INTO_TS_KV_LATEST);\n      executeQuery(conn,\"ALTER TABLE ts_kv ADD COLUMN IF NOT EXISTS json_v json;\");\n      executeQuery(conn,\"ALTER TABLE ts_kv_latest ADD COLUMN IF NOT EXISTS json_v json;\");\n    }\n    log.info(\"Load TTL functions ...\");\n    loadSql(conn,LOAD_TTL_FUNCTIONS_SQL,\"2.4.3\");\n    executeQuery(conn,\"UPDATE tb_schema_settings SET schema_version = 2005000\");\n    log.info(\"schema timescale updated!\");\n  }\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 412,
      "astHeight" : 18
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 7106,
        "startLineNumber" : 81,
        "startColumnNumber" : 8,
        "endLineNumber" : 191,
        "endColumnNumber" : 9
      },
      "nodeContext" : "switch (fromVersion) {\ncase \"2.4.3\":  try (Connection conn=DriverManager.getConnection(dbUrl,dbUserName,dbPassword)){\n    log.info(\"Check the current PostgreSQL version...\");\n    boolean versionValid=checkVersion(conn);\n    if (!versionValid) {\n      throw new RuntimeException(\"PostgreSQL version should be at least more than 11, please upgrade your PostgreSQL and restart the script!\");\n    }\n else {\n      log.info(\"PostgreSQL version is valid!\");\n      if (isOldSchema(conn,2004003)) {\n        log.info(\"Load upgrade functions ...\");\n        loadSql(conn,LOAD_FUNCTIONS_SQL,\"2.4.3\");\n        log.info(\"Updating timescale schema ...\");\n        executeQuery(conn,CALL_CREATE_TS_KV_LATEST_TABLE);\n        executeQuery(conn,CALL_CREATE_NEW_TENANT_TS_KV_TABLE);\n        executeQuery(conn,\"SELECT create_hypertable('ts_kv', 'ts', chunk_time_interval => \" + chunkTimeInterval + \", if_not_exists => true);\");\n        executeQuery(conn,CALL_CREATE_TS_KV_DICTIONARY_TABLE);\n        executeQuery(conn,CALL_INSERT_INTO_DICTIONARY);\n        Path pathToTempTsKvFile=null;\n        if (SystemUtils.IS_OS_WINDOWS) {\n          Path pathToDir;\n          log.info(\"Lookup for environment variable: {} ...\",THINGSBOARD_WINDOWS_UPGRADE_DIR);\n          String thingsboardWindowsUpgradeDir=System.getenv(THINGSBOARD_WINDOWS_UPGRADE_DIR);\n          if (StringUtils.isNotEmpty(thingsboardWindowsUpgradeDir)) {\n            log.info(\"Environment variable: {} was found!\",THINGSBOARD_WINDOWS_UPGRADE_DIR);\n            pathToDir=Paths.get(thingsboardWindowsUpgradeDir);\n          }\n else {\n            log.info(\"Failed to lookup environment variable: {}\",THINGSBOARD_WINDOWS_UPGRADE_DIR);\n            pathToDir=Paths.get(PATH_TO_USERS_PUBLIC_FOLDER);\n          }\n          log.info(\"Directory: {} will be used for creation temporary upgrade file!\",pathToDir);\n          try {\n            Path tsKvFile=Files.createTempFile(pathToDir,\"ts_kv\",\".sql\");\n            pathToTempTsKvFile=tsKvFile.toAbsolutePath();\n            try {\n              executeQuery(conn,\"call insert_into_ts_kv('\" + pathToTempTsKvFile + \"')\");\n            }\n catch (            Exception e) {\n              insertTimeseries(conn);\n            }\n          }\n catch (          IOException|SecurityException e) {\n            log.warn(\"Failed to create time-series upgrade files due to: {}\",e.getMessage());\n            insertTimeseries(conn);\n          }\n        }\n else {\n          try {\n            Path tempDirPath=Files.createTempDirectory(\"ts_kv\");\n            File tempDirAsFile=tempDirPath.toFile();\n            boolean writable=tempDirAsFile.setWritable(true,false);\n            boolean readable=tempDirAsFile.setReadable(true,false);\n            boolean executable=tempDirAsFile.setExecutable(true,false);\n            pathToTempTsKvFile=tempDirPath.resolve(TS_KV_SQL).toAbsolutePath();\n            try {\n              if (writable && readable && executable) {\n                executeQuery(conn,\"call insert_into_ts_kv('\" + pathToTempTsKvFile + \"')\");\n              }\n else {\n                throw new RuntimeException(\"Failed to grant write permissions for the: \" + tempDirPath + \"folder!\");\n              }\n            }\n catch (            Exception e) {\n              insertTimeseries(conn);\n            }\n          }\n catch (          IOException|SecurityException e) {\n            log.warn(\"Failed to create time-series upgrade files due to: {}\",e.getMessage());\n            insertTimeseries(conn);\n          }\n        }\n        removeUpgradeFile(pathToTempTsKvFile);\n        executeQuery(conn,CALL_INSERT_INTO_TS_KV_LATEST);\n        executeQuery(conn,DROP_OLD_TENANT_TS_KV_TABLE);\n        executeQuery(conn,DROP_PROCEDURE_CREATE_TS_KV_LATEST_TABLE);\n        executeQuery(conn,DROP_PROCEDURE_CREATE_TENANT_TS_KV_TABLE_COPY);\n        executeQuery(conn,DROP_PROCEDURE_CREATE_TS_KV_DICTIONARY_TABLE);\n        executeQuery(conn,DROP_PROCEDURE_INSERT_INTO_DICTIONARY);\n        executeQuery(conn,DROP_PROCEDURE_INSERT_INTO_TS_KV);\n        executeQuery(conn,DROP_PROCEDURE_INSERT_INTO_TS_KV_CURSOR);\n        executeQuery(conn,DROP_PROCEDURE_INSERT_INTO_TS_KV_LATEST);\n        executeQuery(conn,\"ALTER TABLE ts_kv ADD COLUMN IF NOT EXISTS json_v json;\");\n        executeQuery(conn,\"ALTER TABLE ts_kv_latest ADD COLUMN IF NOT EXISTS json_v json;\");\n      }\n      log.info(\"Load TTL functions ...\");\n      loadSql(conn,LOAD_TTL_FUNCTIONS_SQL,\"2.4.3\");\n      executeQuery(conn,\"UPDATE tb_schema_settings SET schema_version = 2005000\");\n      log.info(\"schema timescale updated!\");\n    }\n  }\n break;\ncase \"2.5.0\":try (Connection conn=DriverManager.getConnection(dbUrl,dbUserName,dbPassword)){\nexecuteQuery(conn,\"UPDATE tb_schema_settings SET schema_version = 2005001\");\n}\n break;\ncase \"3.1.1\":break;\ncase \"3.2.1\":try (Connection conn=DriverManager.getConnection(dbUrl,dbUserName,dbPassword)){\nloadSql(conn,LOAD_TTL_FUNCTIONS_SQL,\"3.2.1\");\n}\n break;\ncase \"3.2.2\":break;\ndefault:throw new RuntimeException(\"Unable to upgrade SQL database, unsupported fromVersion: \" + fromVersion);\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 474,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 7122,
        "startLineNumber" : 80,
        "startColumnNumber" : 69,
        "endLineNumber" : 192,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\nswitch (fromVersion) {\ncase \"2.4.3\":    try (Connection conn=DriverManager.getConnection(dbUrl,dbUserName,dbPassword)){\n      log.info(\"Check the current PostgreSQL version...\");\n      boolean versionValid=checkVersion(conn);\n      if (!versionValid) {\n        throw new RuntimeException(\"PostgreSQL version should be at least more than 11, please upgrade your PostgreSQL and restart the script!\");\n      }\n else {\n        log.info(\"PostgreSQL version is valid!\");\n        if (isOldSchema(conn,2004003)) {\n          log.info(\"Load upgrade functions ...\");\n          loadSql(conn,LOAD_FUNCTIONS_SQL,\"2.4.3\");\n          log.info(\"Updating timescale schema ...\");\n          executeQuery(conn,CALL_CREATE_TS_KV_LATEST_TABLE);\n          executeQuery(conn,CALL_CREATE_NEW_TENANT_TS_KV_TABLE);\n          executeQuery(conn,\"SELECT create_hypertable('ts_kv', 'ts', chunk_time_interval => \" + chunkTimeInterval + \", if_not_exists => true);\");\n          executeQuery(conn,CALL_CREATE_TS_KV_DICTIONARY_TABLE);\n          executeQuery(conn,CALL_INSERT_INTO_DICTIONARY);\n          Path pathToTempTsKvFile=null;\n          if (SystemUtils.IS_OS_WINDOWS) {\n            Path pathToDir;\n            log.info(\"Lookup for environment variable: {} ...\",THINGSBOARD_WINDOWS_UPGRADE_DIR);\n            String thingsboardWindowsUpgradeDir=System.getenv(THINGSBOARD_WINDOWS_UPGRADE_DIR);\n            if (StringUtils.isNotEmpty(thingsboardWindowsUpgradeDir)) {\n              log.info(\"Environment variable: {} was found!\",THINGSBOARD_WINDOWS_UPGRADE_DIR);\n              pathToDir=Paths.get(thingsboardWindowsUpgradeDir);\n            }\n else {\n              log.info(\"Failed to lookup environment variable: {}\",THINGSBOARD_WINDOWS_UPGRADE_DIR);\n              pathToDir=Paths.get(PATH_TO_USERS_PUBLIC_FOLDER);\n            }\n            log.info(\"Directory: {} will be used for creation temporary upgrade file!\",pathToDir);\n            try {\n              Path tsKvFile=Files.createTempFile(pathToDir,\"ts_kv\",\".sql\");\n              pathToTempTsKvFile=tsKvFile.toAbsolutePath();\n              try {\n                executeQuery(conn,\"call insert_into_ts_kv('\" + pathToTempTsKvFile + \"')\");\n              }\n catch (              Exception e) {\n                insertTimeseries(conn);\n              }\n            }\n catch (            IOException|SecurityException e) {\n              log.warn(\"Failed to create time-series upgrade files due to: {}\",e.getMessage());\n              insertTimeseries(conn);\n            }\n          }\n else {\n            try {\n              Path tempDirPath=Files.createTempDirectory(\"ts_kv\");\n              File tempDirAsFile=tempDirPath.toFile();\n              boolean writable=tempDirAsFile.setWritable(true,false);\n              boolean readable=tempDirAsFile.setReadable(true,false);\n              boolean executable=tempDirAsFile.setExecutable(true,false);\n              pathToTempTsKvFile=tempDirPath.resolve(TS_KV_SQL).toAbsolutePath();\n              try {\n                if (writable && readable && executable) {\n                  executeQuery(conn,\"call insert_into_ts_kv('\" + pathToTempTsKvFile + \"')\");\n                }\n else {\n                  throw new RuntimeException(\"Failed to grant write permissions for the: \" + tempDirPath + \"folder!\");\n                }\n              }\n catch (              Exception e) {\n                insertTimeseries(conn);\n              }\n            }\n catch (            IOException|SecurityException e) {\n              log.warn(\"Failed to create time-series upgrade files due to: {}\",e.getMessage());\n              insertTimeseries(conn);\n            }\n          }\n          removeUpgradeFile(pathToTempTsKvFile);\n          executeQuery(conn,CALL_INSERT_INTO_TS_KV_LATEST);\n          executeQuery(conn,DROP_OLD_TENANT_TS_KV_TABLE);\n          executeQuery(conn,DROP_PROCEDURE_CREATE_TS_KV_LATEST_TABLE);\n          executeQuery(conn,DROP_PROCEDURE_CREATE_TENANT_TS_KV_TABLE_COPY);\n          executeQuery(conn,DROP_PROCEDURE_CREATE_TS_KV_DICTIONARY_TABLE);\n          executeQuery(conn,DROP_PROCEDURE_INSERT_INTO_DICTIONARY);\n          executeQuery(conn,DROP_PROCEDURE_INSERT_INTO_TS_KV);\n          executeQuery(conn,DROP_PROCEDURE_INSERT_INTO_TS_KV_CURSOR);\n          executeQuery(conn,DROP_PROCEDURE_INSERT_INTO_TS_KV_LATEST);\n          executeQuery(conn,\"ALTER TABLE ts_kv ADD COLUMN IF NOT EXISTS json_v json;\");\n          executeQuery(conn,\"ALTER TABLE ts_kv_latest ADD COLUMN IF NOT EXISTS json_v json;\");\n        }\n        log.info(\"Load TTL functions ...\");\n        loadSql(conn,LOAD_TTL_FUNCTIONS_SQL,\"2.4.3\");\n        executeQuery(conn,\"UPDATE tb_schema_settings SET schema_version = 2005000\");\n        log.info(\"schema timescale updated!\");\n      }\n    }\n   break;\ncase \"2.5.0\":try (Connection conn=DriverManager.getConnection(dbUrl,dbUserName,dbPassword)){\n  executeQuery(conn,\"UPDATE tb_schema_settings SET schema_version = 2005001\");\n}\n break;\ncase \"3.1.1\":break;\ncase \"3.2.1\":try (Connection conn=DriverManager.getConnection(dbUrl,dbUserName,dbPassword)){\nloadSql(conn,LOAD_TTL_FUNCTIONS_SQL,\"3.2.1\");\n}\n break;\ncase \"3.2.2\":break;\ndefault:throw new RuntimeException(\"Unable to upgrade SQL database, unsupported fromVersion: \" + fromVersion);\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 475,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 7201,
        "startLineNumber" : 79,
        "startColumnNumber" : 4,
        "endLineNumber" : 192,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void upgradeDatabase(String fromVersion) throws Exception {\nswitch (fromVersion) {\ncase \"2.4.3\":    try (Connection conn=DriverManager.getConnection(dbUrl,dbUserName,dbPassword)){\n      log.info(\"Check the current PostgreSQL version...\");\n      boolean versionValid=checkVersion(conn);\n      if (!versionValid) {\n        throw new RuntimeException(\"PostgreSQL version should be at least more than 11, please upgrade your PostgreSQL and restart the script!\");\n      }\n else {\n        log.info(\"PostgreSQL version is valid!\");\n        if (isOldSchema(conn,2004003)) {\n          log.info(\"Load upgrade functions ...\");\n          loadSql(conn,LOAD_FUNCTIONS_SQL,\"2.4.3\");\n          log.info(\"Updating timescale schema ...\");\n          executeQuery(conn,CALL_CREATE_TS_KV_LATEST_TABLE);\n          executeQuery(conn,CALL_CREATE_NEW_TENANT_TS_KV_TABLE);\n          executeQuery(conn,\"SELECT create_hypertable('ts_kv', 'ts', chunk_time_interval => \" + chunkTimeInterval + \", if_not_exists => true);\");\n          executeQuery(conn,CALL_CREATE_TS_KV_DICTIONARY_TABLE);\n          executeQuery(conn,CALL_INSERT_INTO_DICTIONARY);\n          Path pathToTempTsKvFile=null;\n          if (SystemUtils.IS_OS_WINDOWS) {\n            Path pathToDir;\n            log.info(\"Lookup for environment variable: {} ...\",THINGSBOARD_WINDOWS_UPGRADE_DIR);\n            String thingsboardWindowsUpgradeDir=System.getenv(THINGSBOARD_WINDOWS_UPGRADE_DIR);\n            if (StringUtils.isNotEmpty(thingsboardWindowsUpgradeDir)) {\n              log.info(\"Environment variable: {} was found!\",THINGSBOARD_WINDOWS_UPGRADE_DIR);\n              pathToDir=Paths.get(thingsboardWindowsUpgradeDir);\n            }\n else {\n              log.info(\"Failed to lookup environment variable: {}\",THINGSBOARD_WINDOWS_UPGRADE_DIR);\n              pathToDir=Paths.get(PATH_TO_USERS_PUBLIC_FOLDER);\n            }\n            log.info(\"Directory: {} will be used for creation temporary upgrade file!\",pathToDir);\n            try {\n              Path tsKvFile=Files.createTempFile(pathToDir,\"ts_kv\",\".sql\");\n              pathToTempTsKvFile=tsKvFile.toAbsolutePath();\n              try {\n                executeQuery(conn,\"call insert_into_ts_kv('\" + pathToTempTsKvFile + \"')\");\n              }\n catch (              Exception e) {\n                insertTimeseries(conn);\n              }\n            }\n catch (            IOException|SecurityException e) {\n              log.warn(\"Failed to create time-series upgrade files due to: {}\",e.getMessage());\n              insertTimeseries(conn);\n            }\n          }\n else {\n            try {\n              Path tempDirPath=Files.createTempDirectory(\"ts_kv\");\n              File tempDirAsFile=tempDirPath.toFile();\n              boolean writable=tempDirAsFile.setWritable(true,false);\n              boolean readable=tempDirAsFile.setReadable(true,false);\n              boolean executable=tempDirAsFile.setExecutable(true,false);\n              pathToTempTsKvFile=tempDirPath.resolve(TS_KV_SQL).toAbsolutePath();\n              try {\n                if (writable && readable && executable) {\n                  executeQuery(conn,\"call insert_into_ts_kv('\" + pathToTempTsKvFile + \"')\");\n                }\n else {\n                  throw new RuntimeException(\"Failed to grant write permissions for the: \" + tempDirPath + \"folder!\");\n                }\n              }\n catch (              Exception e) {\n                insertTimeseries(conn);\n              }\n            }\n catch (            IOException|SecurityException e) {\n              log.warn(\"Failed to create time-series upgrade files due to: {}\",e.getMessage());\n              insertTimeseries(conn);\n            }\n          }\n          removeUpgradeFile(pathToTempTsKvFile);\n          executeQuery(conn,CALL_INSERT_INTO_TS_KV_LATEST);\n          executeQuery(conn,DROP_OLD_TENANT_TS_KV_TABLE);\n          executeQuery(conn,DROP_PROCEDURE_CREATE_TS_KV_LATEST_TABLE);\n          executeQuery(conn,DROP_PROCEDURE_CREATE_TENANT_TS_KV_TABLE_COPY);\n          executeQuery(conn,DROP_PROCEDURE_CREATE_TS_KV_DICTIONARY_TABLE);\n          executeQuery(conn,DROP_PROCEDURE_INSERT_INTO_DICTIONARY);\n          executeQuery(conn,DROP_PROCEDURE_INSERT_INTO_TS_KV);\n          executeQuery(conn,DROP_PROCEDURE_INSERT_INTO_TS_KV_CURSOR);\n          executeQuery(conn,DROP_PROCEDURE_INSERT_INTO_TS_KV_LATEST);\n          executeQuery(conn,\"ALTER TABLE ts_kv ADD COLUMN IF NOT EXISTS json_v json;\");\n          executeQuery(conn,\"ALTER TABLE ts_kv_latest ADD COLUMN IF NOT EXISTS json_v json;\");\n        }\n        log.info(\"Load TTL functions ...\");\n        loadSql(conn,LOAD_TTL_FUNCTIONS_SQL,\"2.4.3\");\n        executeQuery(conn,\"UPDATE tb_schema_settings SET schema_version = 2005000\");\n        log.info(\"schema timescale updated!\");\n      }\n    }\n   break;\ncase \"2.5.0\":try (Connection conn=DriverManager.getConnection(dbUrl,dbUserName,dbPassword)){\n  executeQuery(conn,\"UPDATE tb_schema_settings SET schema_version = 2005001\");\n}\n break;\ncase \"3.1.1\":break;\ncase \"3.2.1\":try (Connection conn=DriverManager.getConnection(dbUrl,dbUserName,dbPassword)){\nloadSql(conn,LOAD_TTL_FUNCTIONS_SQL,\"3.2.1\");\n}\n break;\ncase \"3.2.2\":break;\ndefault:throw new RuntimeException(\"Unable to upgrade SQL database, unsupported fromVersion: \" + fromVersion);\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 487,
      "astHeight" : 21
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 155,
        "startColumnNumber" : 28,
        "endLineNumber" : 155,
        "endColumnNumber" : 89
      },
      "nodeContext" : "executeQuery(conn,DROP_PROCEDURE_CREATE_TS_KV_LATEST_TABLE);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 7,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 40,
    "startLineNumber" : 155,
    "startColumnNumber" : 47,
    "endLineNumber" : 155,
    "endColumnNumber" : 87
  } ],
  "layoutRelationDataList" : [ ]
}