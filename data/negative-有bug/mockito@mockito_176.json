{
  "id" : 176,
  "expression" : "handler != null",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/main/java/org/mockito/internal/util/MockUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "handler != null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 15,
      "startLineNumber" : 76,
      "startColumnNumber" : 12,
      "endLineNumber" : 76,
      "endColumnNumber" : 27
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 179,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 80,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (handler != null) {\n  return handler;\n}\n else {\n  throw new NotAMockException(\"Argument should be a mock, but is: \" + mock.getClass());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 416,
        "startLineNumber" : 68,
        "startColumnNumber" : 61,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (mock == null) {\n    throw new NotAMockException(\"Argument should be a mock, but is null!\");\n  }\n  mock=resolve(mock);\n  MockHandler handler=mockMaker.getHandler(mock);\n  if (handler != null) {\n    return handler;\n  }\n else {\n    throw new NotAMockException(\"Argument should be a mock, but is: \" + mock.getClass());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 43,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 473,
        "startLineNumber" : 68,
        "startColumnNumber" : 4,
        "endLineNumber" : 81,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static MockHandler<?> getMockHandler(Object mock){\n  if (mock == null) {\n    throw new NotAMockException(\"Argument should be a mock, but is null!\");\n  }\n  mock=resolve(mock);\n  MockHandler handler=mockMaker.getHandler(mock);\n  if (handler != null) {\n    return handler;\n  }\n else {\n    throw new NotAMockException(\"Argument should be a mock, but is: \" + mock.getClass());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 55,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 179,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 80,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (handler != null) {\n  return handler;\n}\n else {\n  throw new NotAMockException(\"Argument should be a mock, but is: \" + mock.getClass());\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 15,
    "startLineNumber" : 76,
    "startColumnNumber" : 12,
    "endLineNumber" : 76,
    "endColumnNumber" : 27
  } ],
  "layoutRelationDataList" : [ ]
}