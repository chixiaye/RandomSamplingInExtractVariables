{
  "id" : 441,
  "expression" : "cursor",
  "projectName" : "signalapp@Signal-Android",
  "commitID" : "7e91132e7ed62a58b5f347de252ab1eda3f43b90",
  "filePath" : "/app/src/main/java/org/thoughtcrime/securesms/database/SignedPreKeyDatabase.java",
  "occurrences" : 10,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "cursor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 57,
      "startColumnNumber" : 10,
      "endLineNumber" : 57,
      "endColumnNumber" : 16
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 57,
        "startColumnNumber" : 10,
        "endLineNumber" : 57,
        "endColumnNumber" : 24
      },
      "nodeContext" : "cursor != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 57,
        "startColumnNumber" : 10,
        "endLineNumber" : 57,
        "endColumnNumber" : 48
      },
      "nodeContext" : "cursor != null && cursor.moveToFirst()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 741,
        "startLineNumber" : 57,
        "startColumnNumber" : 6,
        "endLineNumber" : 68,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (cursor != null && cursor.moveToFirst()) {\n  try {\n    ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n    ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n    byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n    long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n    return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n  }\n catch (  InvalidKeyException|IOException e) {\n    Log.w(TAG,e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 102,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 755,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (cursor != null && cursor.moveToFirst()) {\n    try {\n      ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n      ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n      byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n      long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n      return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n    }\n catch (    InvalidKeyException|IOException e) {\n      Log.w(TAG,e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 967,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try (Cursor cursor=database.query(TABLE_NAME,null,KEY_ID + \" = ?\",new String[]{String.valueOf(keyId)},null,null,null)){\n  if (cursor != null && cursor.moveToFirst()) {\n    try {\n      ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n      ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n      byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n      long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n      return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n    }\n catch (    InvalidKeyException|IOException e) {\n      Log.w(TAG,e);\n    }\n  }\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 130,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1070,
        "startLineNumber" : 50,
        "startColumnNumber" : 65,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  SQLiteDatabase database=databaseHelper.getSignalReadableDatabase();\n  try (Cursor cursor=database.query(TABLE_NAME,null,KEY_ID + \" = ?\",new String[]{String.valueOf(keyId)},null,null,null)){\n    if (cursor != null && cursor.moveToFirst()) {\n      try {\n        ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n        ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n        byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n        long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n        return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n      }\n catch (      InvalidKeyException|IOException e) {\n        Log.w(TAG,e);\n      }\n    }\n  }\n   return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1133,
        "startLineNumber" : 50,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public @Nullable SignedPreKeyRecord getSignedPreKey(int keyId){\n  SQLiteDatabase database=databaseHelper.getSignalReadableDatabase();\n  try (Cursor cursor=database.query(TABLE_NAME,null,KEY_ID + \" = ?\",new String[]{String.valueOf(keyId)},null,null,null)){\n    if (cursor != null && cursor.moveToFirst()) {\n      try {\n        ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n        ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n        byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n        long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n        return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n      }\n catch (      InvalidKeyException|IOException e) {\n        Log.w(TAG,e);\n      }\n    }\n  }\n   return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 151,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 57,
        "startColumnNumber" : 10,
        "endLineNumber" : 57,
        "endColumnNumber" : 48
      },
      "nodeContext" : "cursor != null && cursor.moveToFirst()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.thoughtcrime.securesms.database.Cursor"
  }, {
    "nodeContext" : "cursor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 57,
      "startColumnNumber" : 28,
      "endLineNumber" : 57,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 57,
        "startColumnNumber" : 28,
        "endLineNumber" : 57,
        "endColumnNumber" : 48
      },
      "nodeContext" : "cursor.moveToFirst()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 57,
        "startColumnNumber" : 10,
        "endLineNumber" : 57,
        "endColumnNumber" : 48
      },
      "nodeContext" : "cursor != null && cursor.moveToFirst()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 741,
        "startLineNumber" : 57,
        "startColumnNumber" : 6,
        "endLineNumber" : 68,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (cursor != null && cursor.moveToFirst()) {\n  try {\n    ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n    ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n    byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n    long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n    return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n  }\n catch (  InvalidKeyException|IOException e) {\n    Log.w(TAG,e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 102,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 755,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (cursor != null && cursor.moveToFirst()) {\n    try {\n      ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n      ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n      byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n      long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n      return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n    }\n catch (    InvalidKeyException|IOException e) {\n      Log.w(TAG,e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 967,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try (Cursor cursor=database.query(TABLE_NAME,null,KEY_ID + \" = ?\",new String[]{String.valueOf(keyId)},null,null,null)){\n  if (cursor != null && cursor.moveToFirst()) {\n    try {\n      ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n      ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n      byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n      long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n      return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n    }\n catch (    InvalidKeyException|IOException e) {\n      Log.w(TAG,e);\n    }\n  }\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 130,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1070,
        "startLineNumber" : 50,
        "startColumnNumber" : 65,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  SQLiteDatabase database=databaseHelper.getSignalReadableDatabase();\n  try (Cursor cursor=database.query(TABLE_NAME,null,KEY_ID + \" = ?\",new String[]{String.valueOf(keyId)},null,null,null)){\n    if (cursor != null && cursor.moveToFirst()) {\n      try {\n        ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n        ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n        byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n        long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n        return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n      }\n catch (      InvalidKeyException|IOException e) {\n        Log.w(TAG,e);\n      }\n    }\n  }\n   return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1133,
        "startLineNumber" : 50,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public @Nullable SignedPreKeyRecord getSignedPreKey(int keyId){\n  SQLiteDatabase database=databaseHelper.getSignalReadableDatabase();\n  try (Cursor cursor=database.query(TABLE_NAME,null,KEY_ID + \" = ?\",new String[]{String.valueOf(keyId)},null,null,null)){\n    if (cursor != null && cursor.moveToFirst()) {\n      try {\n        ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n        ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n        byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n        long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n        return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n      }\n catch (      InvalidKeyException|IOException e) {\n        Log.w(TAG,e);\n      }\n    }\n  }\n   return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 151,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 57,
        "startColumnNumber" : 10,
        "endLineNumber" : 57,
        "endColumnNumber" : 48
      },
      "nodeContext" : "cursor != null && cursor.moveToFirst()",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.thoughtcrime.securesms.database.Cursor"
  }, {
    "nodeContext" : "cursor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 59,
      "startColumnNumber" : 68,
      "endLineNumber" : 59,
      "endColumnNumber" : 74
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 59,
        "startColumnNumber" : 68,
        "endLineNumber" : 59,
        "endColumnNumber" : 126
      },
      "nodeContext" : "cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 59,
        "startColumnNumber" : 54,
        "endLineNumber" : 59,
        "endColumnNumber" : 127
      },
      "nodeContext" : "Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 59,
        "startColumnNumber" : 36,
        "endLineNumber" : 59,
        "endColumnNumber" : 131
      },
      "nodeContext" : "Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 59,
        "startColumnNumber" : 23,
        "endLineNumber" : 59,
        "endColumnNumber" : 131
      },
      "nodeContext" : "publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 59,
        "startColumnNumber" : 10,
        "endLineNumber" : 59,
        "endColumnNumber" : 132
      },
      "nodeContext" : "ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 594,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 65,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n  ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n  byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n  long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n  return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 679,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n  ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n  byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n  long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n  return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n}\n catch (InvalidKeyException|IOException e) {\n  Log.w(TAG,e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 93,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 697,
        "startLineNumber" : 57,
        "startColumnNumber" : 50,
        "endLineNumber" : 68,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  try {\n    ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n    ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n    byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n    long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n    return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n  }\n catch (  InvalidKeyException|IOException e) {\n    Log.w(TAG,e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 94,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 741,
        "startLineNumber" : 57,
        "startColumnNumber" : 6,
        "endLineNumber" : 68,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (cursor != null && cursor.moveToFirst()) {\n  try {\n    ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n    ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n    byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n    long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n    return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n  }\n catch (  InvalidKeyException|IOException e) {\n    Log.w(TAG,e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 102,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 755,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (cursor != null && cursor.moveToFirst()) {\n    try {\n      ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n      ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n      byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n      long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n      return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n    }\n catch (    InvalidKeyException|IOException e) {\n      Log.w(TAG,e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 967,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try (Cursor cursor=database.query(TABLE_NAME,null,KEY_ID + \" = ?\",new String[]{String.valueOf(keyId)},null,null,null)){\n  if (cursor != null && cursor.moveToFirst()) {\n    try {\n      ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n      ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n      byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n      long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n      return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n    }\n catch (    InvalidKeyException|IOException e) {\n      Log.w(TAG,e);\n    }\n  }\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 130,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1070,
        "startLineNumber" : 50,
        "startColumnNumber" : 65,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  SQLiteDatabase database=databaseHelper.getSignalReadableDatabase();\n  try (Cursor cursor=database.query(TABLE_NAME,null,KEY_ID + \" = ?\",new String[]{String.valueOf(keyId)},null,null,null)){\n    if (cursor != null && cursor.moveToFirst()) {\n      try {\n        ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n        ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n        byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n        long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n        return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n      }\n catch (      InvalidKeyException|IOException e) {\n        Log.w(TAG,e);\n      }\n    }\n  }\n   return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1133,
        "startLineNumber" : 50,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public @Nullable SignedPreKeyRecord getSignedPreKey(int keyId){\n  SQLiteDatabase database=databaseHelper.getSignalReadableDatabase();\n  try (Cursor cursor=database.query(TABLE_NAME,null,KEY_ID + \" = ?\",new String[]{String.valueOf(keyId)},null,null,null)){\n    if (cursor != null && cursor.moveToFirst()) {\n      try {\n        ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n        ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n        byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n        long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n        return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n      }\n catch (      InvalidKeyException|IOException e) {\n        Log.w(TAG,e);\n      }\n    }\n  }\n   return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 151,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 59,
        "startColumnNumber" : 10,
        "endLineNumber" : 59,
        "endColumnNumber" : 132
      },
      "nodeContext" : "ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "org.thoughtcrime.securesms.database.Cursor"
  }, {
    "nodeContext" : "cursor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 59,
      "startColumnNumber" : 85,
      "endLineNumber" : 59,
      "endColumnNumber" : 91
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 59,
        "startColumnNumber" : 85,
        "endLineNumber" : 59,
        "endColumnNumber" : 125
      },
      "nodeContext" : "cursor.getColumnIndexOrThrow(PUBLIC_KEY)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 59,
        "startColumnNumber" : 68,
        "endLineNumber" : 59,
        "endColumnNumber" : 126
      },
      "nodeContext" : "cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 59,
        "startColumnNumber" : 54,
        "endLineNumber" : 59,
        "endColumnNumber" : 127
      },
      "nodeContext" : "Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 59,
        "startColumnNumber" : 36,
        "endLineNumber" : 59,
        "endColumnNumber" : 131
      },
      "nodeContext" : "Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 108,
        "startLineNumber" : 59,
        "startColumnNumber" : 23,
        "endLineNumber" : 59,
        "endColumnNumber" : 131
      },
      "nodeContext" : "publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 59,
        "startColumnNumber" : 10,
        "endLineNumber" : 59,
        "endColumnNumber" : 132
      },
      "nodeContext" : "ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 594,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 65,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n  ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n  byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n  long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n  return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 679,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n  ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n  byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n  long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n  return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n}\n catch (InvalidKeyException|IOException e) {\n  Log.w(TAG,e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 93,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 697,
        "startLineNumber" : 57,
        "startColumnNumber" : 50,
        "endLineNumber" : 68,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  try {\n    ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n    ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n    byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n    long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n    return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n  }\n catch (  InvalidKeyException|IOException e) {\n    Log.w(TAG,e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 94,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 741,
        "startLineNumber" : 57,
        "startColumnNumber" : 6,
        "endLineNumber" : 68,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (cursor != null && cursor.moveToFirst()) {\n  try {\n    ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n    ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n    byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n    long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n    return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n  }\n catch (  InvalidKeyException|IOException e) {\n    Log.w(TAG,e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 102,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 755,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (cursor != null && cursor.moveToFirst()) {\n    try {\n      ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n      ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n      byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n      long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n      return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n    }\n catch (    InvalidKeyException|IOException e) {\n      Log.w(TAG,e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 967,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try (Cursor cursor=database.query(TABLE_NAME,null,KEY_ID + \" = ?\",new String[]{String.valueOf(keyId)},null,null,null)){\n  if (cursor != null && cursor.moveToFirst()) {\n    try {\n      ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n      ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n      byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n      long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n      return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n    }\n catch (    InvalidKeyException|IOException e) {\n      Log.w(TAG,e);\n    }\n  }\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 130,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1070,
        "startLineNumber" : 50,
        "startColumnNumber" : 65,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  SQLiteDatabase database=databaseHelper.getSignalReadableDatabase();\n  try (Cursor cursor=database.query(TABLE_NAME,null,KEY_ID + \" = ?\",new String[]{String.valueOf(keyId)},null,null,null)){\n    if (cursor != null && cursor.moveToFirst()) {\n      try {\n        ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n        ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n        byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n        long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n        return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n      }\n catch (      InvalidKeyException|IOException e) {\n        Log.w(TAG,e);\n      }\n    }\n  }\n   return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1133,
        "startLineNumber" : 50,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public @Nullable SignedPreKeyRecord getSignedPreKey(int keyId){\n  SQLiteDatabase database=databaseHelper.getSignalReadableDatabase();\n  try (Cursor cursor=database.query(TABLE_NAME,null,KEY_ID + \" = ?\",new String[]{String.valueOf(keyId)},null,null,null)){\n    if (cursor != null && cursor.moveToFirst()) {\n      try {\n        ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n        ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n        byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n        long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n        return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n      }\n catch (      InvalidKeyException|IOException e) {\n        Log.w(TAG,e);\n      }\n    }\n  }\n   return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 151,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 59,
        "startColumnNumber" : 10,
        "endLineNumber" : 59,
        "endColumnNumber" : 132
      },
      "nodeContext" : "ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "org.thoughtcrime.securesms.database.Cursor"
  }, {
    "nodeContext" : "cursor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 60,
      "startColumnNumber" : 75,
      "endLineNumber" : 60,
      "endColumnNumber" : 81
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 60,
        "startColumnNumber" : 75,
        "endLineNumber" : 60,
        "endColumnNumber" : 134
      },
      "nodeContext" : "cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 60,
        "startColumnNumber" : 61,
        "endLineNumber" : 60,
        "endColumnNumber" : 135
      },
      "nodeContext" : "Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 60,
        "startColumnNumber" : 36,
        "endLineNumber" : 60,
        "endColumnNumber" : 136
      },
      "nodeContext" : "Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 60,
        "startColumnNumber" : 23,
        "endLineNumber" : 60,
        "endColumnNumber" : 136
      },
      "nodeContext" : "privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 60,
        "startColumnNumber" : 10,
        "endLineNumber" : 60,
        "endColumnNumber" : 137
      },
      "nodeContext" : "ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 594,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 65,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n  ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n  byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n  long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n  return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 679,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n  ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n  byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n  long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n  return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n}\n catch (InvalidKeyException|IOException e) {\n  Log.w(TAG,e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 93,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 697,
        "startLineNumber" : 57,
        "startColumnNumber" : 50,
        "endLineNumber" : 68,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  try {\n    ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n    ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n    byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n    long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n    return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n  }\n catch (  InvalidKeyException|IOException e) {\n    Log.w(TAG,e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 94,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 741,
        "startLineNumber" : 57,
        "startColumnNumber" : 6,
        "endLineNumber" : 68,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (cursor != null && cursor.moveToFirst()) {\n  try {\n    ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n    ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n    byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n    long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n    return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n  }\n catch (  InvalidKeyException|IOException e) {\n    Log.w(TAG,e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 102,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 755,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (cursor != null && cursor.moveToFirst()) {\n    try {\n      ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n      ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n      byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n      long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n      return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n    }\n catch (    InvalidKeyException|IOException e) {\n      Log.w(TAG,e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 967,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try (Cursor cursor=database.query(TABLE_NAME,null,KEY_ID + \" = ?\",new String[]{String.valueOf(keyId)},null,null,null)){\n  if (cursor != null && cursor.moveToFirst()) {\n    try {\n      ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n      ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n      byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n      long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n      return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n    }\n catch (    InvalidKeyException|IOException e) {\n      Log.w(TAG,e);\n    }\n  }\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 130,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1070,
        "startLineNumber" : 50,
        "startColumnNumber" : 65,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  SQLiteDatabase database=databaseHelper.getSignalReadableDatabase();\n  try (Cursor cursor=database.query(TABLE_NAME,null,KEY_ID + \" = ?\",new String[]{String.valueOf(keyId)},null,null,null)){\n    if (cursor != null && cursor.moveToFirst()) {\n      try {\n        ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n        ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n        byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n        long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n        return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n      }\n catch (      InvalidKeyException|IOException e) {\n        Log.w(TAG,e);\n      }\n    }\n  }\n   return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1133,
        "startLineNumber" : 50,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public @Nullable SignedPreKeyRecord getSignedPreKey(int keyId){\n  SQLiteDatabase database=databaseHelper.getSignalReadableDatabase();\n  try (Cursor cursor=database.query(TABLE_NAME,null,KEY_ID + \" = ?\",new String[]{String.valueOf(keyId)},null,null,null)){\n    if (cursor != null && cursor.moveToFirst()) {\n      try {\n        ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n        ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n        byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n        long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n        return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n      }\n catch (      InvalidKeyException|IOException e) {\n        Log.w(TAG,e);\n      }\n    }\n  }\n   return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 151,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 60,
        "startColumnNumber" : 10,
        "endLineNumber" : 60,
        "endColumnNumber" : 137
      },
      "nodeContext" : "ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "org.thoughtcrime.securesms.database.Cursor"
  }, {
    "nodeContext" : "cursor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 60,
      "startColumnNumber" : 92,
      "endLineNumber" : 60,
      "endColumnNumber" : 98
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 60,
        "startColumnNumber" : 92,
        "endLineNumber" : 60,
        "endColumnNumber" : 133
      },
      "nodeContext" : "cursor.getColumnIndexOrThrow(PRIVATE_KEY)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 60,
        "startColumnNumber" : 75,
        "endLineNumber" : 60,
        "endColumnNumber" : 134
      },
      "nodeContext" : "cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 60,
        "startColumnNumber" : 61,
        "endLineNumber" : 60,
        "endColumnNumber" : 135
      },
      "nodeContext" : "Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 100,
        "startLineNumber" : 60,
        "startColumnNumber" : 36,
        "endLineNumber" : 60,
        "endColumnNumber" : 136
      },
      "nodeContext" : "Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 13,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 60,
        "startColumnNumber" : 23,
        "endLineNumber" : 60,
        "endColumnNumber" : 136
      },
      "nodeContext" : "privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 60,
        "startColumnNumber" : 10,
        "endLineNumber" : 60,
        "endColumnNumber" : 137
      },
      "nodeContext" : "ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 594,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 65,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n  ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n  byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n  long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n  return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 679,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n  ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n  byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n  long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n  return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n}\n catch (InvalidKeyException|IOException e) {\n  Log.w(TAG,e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 93,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 697,
        "startLineNumber" : 57,
        "startColumnNumber" : 50,
        "endLineNumber" : 68,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  try {\n    ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n    ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n    byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n    long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n    return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n  }\n catch (  InvalidKeyException|IOException e) {\n    Log.w(TAG,e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 94,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 741,
        "startLineNumber" : 57,
        "startColumnNumber" : 6,
        "endLineNumber" : 68,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (cursor != null && cursor.moveToFirst()) {\n  try {\n    ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n    ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n    byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n    long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n    return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n  }\n catch (  InvalidKeyException|IOException e) {\n    Log.w(TAG,e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 102,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 755,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (cursor != null && cursor.moveToFirst()) {\n    try {\n      ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n      ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n      byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n      long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n      return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n    }\n catch (    InvalidKeyException|IOException e) {\n      Log.w(TAG,e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 967,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try (Cursor cursor=database.query(TABLE_NAME,null,KEY_ID + \" = ?\",new String[]{String.valueOf(keyId)},null,null,null)){\n  if (cursor != null && cursor.moveToFirst()) {\n    try {\n      ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n      ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n      byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n      long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n      return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n    }\n catch (    InvalidKeyException|IOException e) {\n      Log.w(TAG,e);\n    }\n  }\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 130,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1070,
        "startLineNumber" : 50,
        "startColumnNumber" : 65,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  SQLiteDatabase database=databaseHelper.getSignalReadableDatabase();\n  try (Cursor cursor=database.query(TABLE_NAME,null,KEY_ID + \" = ?\",new String[]{String.valueOf(keyId)},null,null,null)){\n    if (cursor != null && cursor.moveToFirst()) {\n      try {\n        ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n        ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n        byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n        long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n        return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n      }\n catch (      InvalidKeyException|IOException e) {\n        Log.w(TAG,e);\n      }\n    }\n  }\n   return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1133,
        "startLineNumber" : 50,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public @Nullable SignedPreKeyRecord getSignedPreKey(int keyId){\n  SQLiteDatabase database=databaseHelper.getSignalReadableDatabase();\n  try (Cursor cursor=database.query(TABLE_NAME,null,KEY_ID + \" = ?\",new String[]{String.valueOf(keyId)},null,null,null)){\n    if (cursor != null && cursor.moveToFirst()) {\n      try {\n        ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n        ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n        byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n        long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n        return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n      }\n catch (      InvalidKeyException|IOException e) {\n        Log.w(TAG,e);\n      }\n    }\n  }\n   return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 151,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 127,
        "startLineNumber" : 60,
        "startColumnNumber" : 10,
        "endLineNumber" : 60,
        "endColumnNumber" : 137
      },
      "nodeContext" : "ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 18,
      "astHeight" : 7
    },
    "tokenLength" : 1,
    "type" : "org.thoughtcrime.securesms.database.Cursor"
  }, {
    "nodeContext" : "cursor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 61,
      "startColumnNumber" : 50,
      "endLineNumber" : 61,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 61,
        "startColumnNumber" : 50,
        "endLineNumber" : 61,
        "endColumnNumber" : 107
      },
      "nodeContext" : "cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 61,
        "startColumnNumber" : 36,
        "endLineNumber" : 61,
        "endColumnNumber" : 108
      },
      "nodeContext" : "Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 61,
        "startColumnNumber" : 23,
        "endLineNumber" : 61,
        "endColumnNumber" : 108
      },
      "nodeContext" : "signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 61,
        "startColumnNumber" : 10,
        "endLineNumber" : 61,
        "endColumnNumber" : 109
      },
      "nodeContext" : "byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 594,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 65,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n  ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n  byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n  long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n  return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 679,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n  ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n  byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n  long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n  return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n}\n catch (InvalidKeyException|IOException e) {\n  Log.w(TAG,e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 93,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 697,
        "startLineNumber" : 57,
        "startColumnNumber" : 50,
        "endLineNumber" : 68,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  try {\n    ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n    ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n    byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n    long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n    return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n  }\n catch (  InvalidKeyException|IOException e) {\n    Log.w(TAG,e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 94,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 741,
        "startLineNumber" : 57,
        "startColumnNumber" : 6,
        "endLineNumber" : 68,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (cursor != null && cursor.moveToFirst()) {\n  try {\n    ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n    ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n    byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n    long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n    return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n  }\n catch (  InvalidKeyException|IOException e) {\n    Log.w(TAG,e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 102,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 755,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (cursor != null && cursor.moveToFirst()) {\n    try {\n      ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n      ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n      byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n      long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n      return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n    }\n catch (    InvalidKeyException|IOException e) {\n      Log.w(TAG,e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 967,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try (Cursor cursor=database.query(TABLE_NAME,null,KEY_ID + \" = ?\",new String[]{String.valueOf(keyId)},null,null,null)){\n  if (cursor != null && cursor.moveToFirst()) {\n    try {\n      ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n      ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n      byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n      long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n      return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n    }\n catch (    InvalidKeyException|IOException e) {\n      Log.w(TAG,e);\n    }\n  }\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 130,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1070,
        "startLineNumber" : 50,
        "startColumnNumber" : 65,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  SQLiteDatabase database=databaseHelper.getSignalReadableDatabase();\n  try (Cursor cursor=database.query(TABLE_NAME,null,KEY_ID + \" = ?\",new String[]{String.valueOf(keyId)},null,null,null)){\n    if (cursor != null && cursor.moveToFirst()) {\n      try {\n        ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n        ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n        byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n        long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n        return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n      }\n catch (      InvalidKeyException|IOException e) {\n        Log.w(TAG,e);\n      }\n    }\n  }\n   return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1133,
        "startLineNumber" : 50,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public @Nullable SignedPreKeyRecord getSignedPreKey(int keyId){\n  SQLiteDatabase database=databaseHelper.getSignalReadableDatabase();\n  try (Cursor cursor=database.query(TABLE_NAME,null,KEY_ID + \" = ?\",new String[]{String.valueOf(keyId)},null,null,null)){\n    if (cursor != null && cursor.moveToFirst()) {\n      try {\n        ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n        ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n        byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n        long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n        return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n      }\n catch (      InvalidKeyException|IOException e) {\n        Log.w(TAG,e);\n      }\n    }\n  }\n   return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 151,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 61,
        "startColumnNumber" : 10,
        "endLineNumber" : 61,
        "endColumnNumber" : 109
      },
      "nodeContext" : "byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "org.thoughtcrime.securesms.database.Cursor"
  }, {
    "nodeContext" : "cursor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 61,
      "startColumnNumber" : 67,
      "endLineNumber" : 61,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 61,
        "startColumnNumber" : 67,
        "endLineNumber" : 61,
        "endColumnNumber" : 106
      },
      "nodeContext" : "cursor.getColumnIndexOrThrow(SIGNATURE)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 61,
        "startColumnNumber" : 50,
        "endLineNumber" : 61,
        "endColumnNumber" : 107
      },
      "nodeContext" : "cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 61,
        "startColumnNumber" : 36,
        "endLineNumber" : 61,
        "endColumnNumber" : 108
      },
      "nodeContext" : "Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 61,
        "startColumnNumber" : 23,
        "endLineNumber" : 61,
        "endColumnNumber" : 108
      },
      "nodeContext" : "signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 61,
        "startColumnNumber" : 10,
        "endLineNumber" : 61,
        "endColumnNumber" : 109
      },
      "nodeContext" : "byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 594,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 65,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n  ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n  byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n  long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n  return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 679,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n  ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n  byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n  long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n  return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n}\n catch (InvalidKeyException|IOException e) {\n  Log.w(TAG,e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 93,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 697,
        "startLineNumber" : 57,
        "startColumnNumber" : 50,
        "endLineNumber" : 68,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  try {\n    ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n    ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n    byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n    long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n    return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n  }\n catch (  InvalidKeyException|IOException e) {\n    Log.w(TAG,e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 94,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 741,
        "startLineNumber" : 57,
        "startColumnNumber" : 6,
        "endLineNumber" : 68,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (cursor != null && cursor.moveToFirst()) {\n  try {\n    ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n    ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n    byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n    long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n    return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n  }\n catch (  InvalidKeyException|IOException e) {\n    Log.w(TAG,e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 102,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 755,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (cursor != null && cursor.moveToFirst()) {\n    try {\n      ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n      ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n      byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n      long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n      return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n    }\n catch (    InvalidKeyException|IOException e) {\n      Log.w(TAG,e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 967,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try (Cursor cursor=database.query(TABLE_NAME,null,KEY_ID + \" = ?\",new String[]{String.valueOf(keyId)},null,null,null)){\n  if (cursor != null && cursor.moveToFirst()) {\n    try {\n      ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n      ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n      byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n      long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n      return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n    }\n catch (    InvalidKeyException|IOException e) {\n      Log.w(TAG,e);\n    }\n  }\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 130,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1070,
        "startLineNumber" : 50,
        "startColumnNumber" : 65,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  SQLiteDatabase database=databaseHelper.getSignalReadableDatabase();\n  try (Cursor cursor=database.query(TABLE_NAME,null,KEY_ID + \" = ?\",new String[]{String.valueOf(keyId)},null,null,null)){\n    if (cursor != null && cursor.moveToFirst()) {\n      try {\n        ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n        ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n        byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n        long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n        return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n      }\n catch (      InvalidKeyException|IOException e) {\n        Log.w(TAG,e);\n      }\n    }\n  }\n   return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1133,
        "startLineNumber" : 50,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public @Nullable SignedPreKeyRecord getSignedPreKey(int keyId){\n  SQLiteDatabase database=databaseHelper.getSignalReadableDatabase();\n  try (Cursor cursor=database.query(TABLE_NAME,null,KEY_ID + \" = ?\",new String[]{String.valueOf(keyId)},null,null,null)){\n    if (cursor != null && cursor.moveToFirst()) {\n      try {\n        ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n        ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n        byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n        long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n        return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n      }\n catch (      InvalidKeyException|IOException e) {\n        Log.w(TAG,e);\n      }\n    }\n  }\n   return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 151,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 61,
        "startColumnNumber" : 10,
        "endLineNumber" : 61,
        "endColumnNumber" : 109
      },
      "nodeContext" : "byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "org.thoughtcrime.securesms.database.Cursor"
  }, {
    "nodeContext" : "cursor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 62,
      "startColumnNumber" : 36,
      "endLineNumber" : 62,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 62,
        "startColumnNumber" : 36,
        "endLineNumber" : 62,
        "endColumnNumber" : 91
      },
      "nodeContext" : "cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 62,
        "startColumnNumber" : 23,
        "endLineNumber" : 62,
        "endColumnNumber" : 91
      },
      "nodeContext" : "timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 62,
        "startColumnNumber" : 10,
        "endLineNumber" : 62,
        "endColumnNumber" : 92
      },
      "nodeContext" : "long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 594,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 65,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n  ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n  byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n  long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n  return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 679,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n  ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n  byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n  long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n  return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n}\n catch (InvalidKeyException|IOException e) {\n  Log.w(TAG,e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 93,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 697,
        "startLineNumber" : 57,
        "startColumnNumber" : 50,
        "endLineNumber" : 68,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  try {\n    ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n    ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n    byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n    long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n    return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n  }\n catch (  InvalidKeyException|IOException e) {\n    Log.w(TAG,e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 94,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 741,
        "startLineNumber" : 57,
        "startColumnNumber" : 6,
        "endLineNumber" : 68,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (cursor != null && cursor.moveToFirst()) {\n  try {\n    ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n    ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n    byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n    long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n    return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n  }\n catch (  InvalidKeyException|IOException e) {\n    Log.w(TAG,e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 102,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 755,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (cursor != null && cursor.moveToFirst()) {\n    try {\n      ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n      ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n      byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n      long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n      return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n    }\n catch (    InvalidKeyException|IOException e) {\n      Log.w(TAG,e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 967,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try (Cursor cursor=database.query(TABLE_NAME,null,KEY_ID + \" = ?\",new String[]{String.valueOf(keyId)},null,null,null)){\n  if (cursor != null && cursor.moveToFirst()) {\n    try {\n      ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n      ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n      byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n      long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n      return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n    }\n catch (    InvalidKeyException|IOException e) {\n      Log.w(TAG,e);\n    }\n  }\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 130,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1070,
        "startLineNumber" : 50,
        "startColumnNumber" : 65,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  SQLiteDatabase database=databaseHelper.getSignalReadableDatabase();\n  try (Cursor cursor=database.query(TABLE_NAME,null,KEY_ID + \" = ?\",new String[]{String.valueOf(keyId)},null,null,null)){\n    if (cursor != null && cursor.moveToFirst()) {\n      try {\n        ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n        ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n        byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n        long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n        return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n      }\n catch (      InvalidKeyException|IOException e) {\n        Log.w(TAG,e);\n      }\n    }\n  }\n   return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1133,
        "startLineNumber" : 50,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public @Nullable SignedPreKeyRecord getSignedPreKey(int keyId){\n  SQLiteDatabase database=databaseHelper.getSignalReadableDatabase();\n  try (Cursor cursor=database.query(TABLE_NAME,null,KEY_ID + \" = ?\",new String[]{String.valueOf(keyId)},null,null,null)){\n    if (cursor != null && cursor.moveToFirst()) {\n      try {\n        ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n        ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n        byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n        long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n        return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n      }\n catch (      InvalidKeyException|IOException e) {\n        Log.w(TAG,e);\n      }\n    }\n  }\n   return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 151,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 62,
        "startColumnNumber" : 10,
        "endLineNumber" : 62,
        "endColumnNumber" : 92
      },
      "nodeContext" : "long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.thoughtcrime.securesms.database.Cursor"
  }, {
    "nodeContext" : "cursor",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 62,
      "startColumnNumber" : 51,
      "endLineNumber" : 62,
      "endColumnNumber" : 57
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 62,
        "startColumnNumber" : 51,
        "endLineNumber" : 62,
        "endColumnNumber" : 90
      },
      "nodeContext" : "cursor.getColumnIndexOrThrow(TIMESTAMP)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 62,
        "startColumnNumber" : 36,
        "endLineNumber" : 62,
        "endColumnNumber" : 91
      },
      "nodeContext" : "cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 62,
        "startColumnNumber" : 23,
        "endLineNumber" : 62,
        "endColumnNumber" : 91
      },
      "nodeContext" : "timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 62,
        "startColumnNumber" : 10,
        "endLineNumber" : 62,
        "endColumnNumber" : 92
      },
      "nodeContext" : "long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 594,
        "startLineNumber" : 58,
        "startColumnNumber" : 12,
        "endLineNumber" : 65,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n  ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n  byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n  long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n  return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 679,
        "startLineNumber" : 58,
        "startColumnNumber" : 8,
        "endLineNumber" : 67,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n  ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n  byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n  long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n  return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n}\n catch (InvalidKeyException|IOException e) {\n  Log.w(TAG,e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 93,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 697,
        "startLineNumber" : 57,
        "startColumnNumber" : 50,
        "endLineNumber" : 68,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  try {\n    ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n    ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n    byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n    long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n    return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n  }\n catch (  InvalidKeyException|IOException e) {\n    Log.w(TAG,e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 94,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 741,
        "startLineNumber" : 57,
        "startColumnNumber" : 6,
        "endLineNumber" : 68,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (cursor != null && cursor.moveToFirst()) {\n  try {\n    ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n    ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n    byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n    long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n    return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n  }\n catch (  InvalidKeyException|IOException e) {\n    Log.w(TAG,e);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 102,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 755,
        "startLineNumber" : 56,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (cursor != null && cursor.moveToFirst()) {\n    try {\n      ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n      ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n      byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n      long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n      return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n    }\n catch (    InvalidKeyException|IOException e) {\n      Log.w(TAG,e);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 967,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try (Cursor cursor=database.query(TABLE_NAME,null,KEY_ID + \" = ?\",new String[]{String.valueOf(keyId)},null,null,null)){\n  if (cursor != null && cursor.moveToFirst()) {\n    try {\n      ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n      ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n      byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n      long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n      return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n    }\n catch (    InvalidKeyException|IOException e) {\n      Log.w(TAG,e);\n    }\n  }\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 130,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1070,
        "startLineNumber" : 50,
        "startColumnNumber" : 65,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  SQLiteDatabase database=databaseHelper.getSignalReadableDatabase();\n  try (Cursor cursor=database.query(TABLE_NAME,null,KEY_ID + \" = ?\",new String[]{String.valueOf(keyId)},null,null,null)){\n    if (cursor != null && cursor.moveToFirst()) {\n      try {\n        ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n        ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n        byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n        long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n        return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n      }\n catch (      InvalidKeyException|IOException e) {\n        Log.w(TAG,e);\n      }\n    }\n  }\n   return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1133,
        "startLineNumber" : 50,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public @Nullable SignedPreKeyRecord getSignedPreKey(int keyId){\n  SQLiteDatabase database=databaseHelper.getSignalReadableDatabase();\n  try (Cursor cursor=database.query(TABLE_NAME,null,KEY_ID + \" = ?\",new String[]{String.valueOf(keyId)},null,null,null)){\n    if (cursor != null && cursor.moveToFirst()) {\n      try {\n        ECPublicKey publicKey=Curve.decodePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PUBLIC_KEY))),0);\n        ECPrivateKey privateKey=Curve.decodePrivatePoint(Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(PRIVATE_KEY))));\n        byte[] signature=Base64.decode(cursor.getString(cursor.getColumnIndexOrThrow(SIGNATURE)));\n        long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n        return new SignedPreKeyRecord(keyId,timestamp,new ECKeyPair(publicKey,privateKey),signature);\n      }\n catch (      InvalidKeyException|IOException e) {\n        Log.w(TAG,e);\n      }\n    }\n  }\n   return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 151,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 62,
        "startColumnNumber" : 10,
        "endLineNumber" : 62,
        "endColumnNumber" : 92
      },
      "nodeContext" : "long timestamp=cursor.getLong(cursor.getColumnIndexOrThrow(TIMESTAMP));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.thoughtcrime.securesms.database.Cursor"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 57,
    "startColumnNumber" : 10,
    "endLineNumber" : 57,
    "endColumnNumber" : 16
  }, {
    "charLength" : 6,
    "startLineNumber" : 57,
    "startColumnNumber" : 28,
    "endLineNumber" : 57,
    "endColumnNumber" : 34
  }, {
    "charLength" : 6,
    "startLineNumber" : 59,
    "startColumnNumber" : 68,
    "endLineNumber" : 59,
    "endColumnNumber" : 74
  }, {
    "charLength" : 6,
    "startLineNumber" : 59,
    "startColumnNumber" : 85,
    "endLineNumber" : 59,
    "endColumnNumber" : 91
  }, {
    "charLength" : 6,
    "startLineNumber" : 60,
    "startColumnNumber" : 75,
    "endLineNumber" : 60,
    "endColumnNumber" : 81
  }, {
    "charLength" : 6,
    "startLineNumber" : 60,
    "startColumnNumber" : 92,
    "endLineNumber" : 60,
    "endColumnNumber" : 98
  }, {
    "charLength" : 6,
    "startLineNumber" : 61,
    "startColumnNumber" : 50,
    "endLineNumber" : 61,
    "endColumnNumber" : 56
  }, {
    "charLength" : 6,
    "startLineNumber" : 61,
    "startColumnNumber" : 67,
    "endLineNumber" : 61,
    "endColumnNumber" : 73
  }, {
    "charLength" : 6,
    "startLineNumber" : 62,
    "startColumnNumber" : 36,
    "endLineNumber" : 62,
    "endColumnNumber" : 42
  }, {
    "charLength" : 6,
    "startLineNumber" : 62,
    "startColumnNumber" : 51,
    "endLineNumber" : 62,
    "endColumnNumber" : 57
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 1
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 0
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 9
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 9
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 1
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 0
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 9
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 9
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 1
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 0
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 8
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 1
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 0
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 1
  } ]
}