{
  "id" : 159,
  "expression" : "TopKSelector::topK",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/guava/src/com/google/common/collect/Comparators.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "TopKSelector::topK",
    "nodeType" : "ExpressionMethodReference",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 145,
      "startColumnNumber" : 8,
      "endLineNumber" : 145,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 203,
        "startLineNumber" : 141,
        "startColumnNumber" : 11,
        "endLineNumber" : 146,
        "endColumnNumber" : 44
      },
      "nodeContext" : "Collector.of(() -> TopKSelector.<T>least(k,comparator),TopKSelector::offer,TopKSelector::combine,TopKSelector::topK,Collector.Characteristics.UNORDERED)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 25,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 211,
        "startLineNumber" : 141,
        "startColumnNumber" : 4,
        "endLineNumber" : 146,
        "endColumnNumber" : 45
      },
      "nodeContext" : "return Collector.of(() -> TopKSelector.<T>least(k,comparator),TopKSelector::offer,TopKSelector::combine,TopKSelector::topK,Collector.Characteristics.UNORDERED);\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 285,
        "startLineNumber" : 138,
        "startColumnNumber" : 47,
        "endLineNumber" : 147,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  checkNonnegative(k,\"k\");\n  checkNotNull(comparator);\n  return Collector.of(() -> TopKSelector.<T>least(k,comparator),TopKSelector::offer,TopKSelector::combine,TopKSelector::topK,Collector.Characteristics.UNORDERED);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1178,
        "startLineNumber" : 117,
        "startColumnNumber" : 2,
        "endLineNumber" : 147,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns a  {@code Collector} that returns the {@code k} smallest (relative to the specified{@code Comparator}) input elements, in ascending order, as an unmodifiable  {@code List}. Ties are broken arbitrarily. <p>For example: <pre> {@code Stream.of(\"foo\", \"quux\", \"banana\", \"elephant\") .collect(least(2, comparingInt(String::length)))}// returns {\"foo\", \"quux\"} }</pre> <p>This  {@code Collector} uses O(k) memory and takes expected time O(n) (worst-case O(n logk)), as opposed to e.g.  {@code Stream.sorted(comparator).limit(k)}, which currently takes O(n log n) time and O(n) space.\n * @throws IllegalArgumentException if {@code k < 0}\n * @since 22.0\n */\npublic static <T extends @Nullable Object>Collector<T,?,List<T>> least(int k,Comparator<? super T> comparator){\n  checkNonnegative(k,\"k\");\n  checkNotNull(comparator);\n  return Collector.of(() -> TopKSelector.<T>least(k,comparator),TopKSelector::offer,TopKSelector::combine,TopKSelector::topK,Collector.Characteristics.UNORDERED);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 69,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ReturnStatement,expression]",
      "nodePosition" : {
        "charLength" : 203,
        "startLineNumber" : 141,
        "startColumnNumber" : 11,
        "endLineNumber" : 146,
        "endColumnNumber" : 44
      },
      "nodeContext" : "Collector.of(() -> TopKSelector.<T>least(k,comparator),TopKSelector::offer,TopKSelector::combine,TopKSelector::topK,Collector.Characteristics.UNORDERED)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 25,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.util.function.Function<com.google.common.collect.TopKSelector<T>,java.util.List<T>>"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 145,
    "startColumnNumber" : 8,
    "endLineNumber" : 145,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ ]
}