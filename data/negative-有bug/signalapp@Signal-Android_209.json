{
  "id" : 209,
  "expression" : "KEY_SELECTED_RECIPIENTS",
  "projectName" : "signalapp@Signal-Android",
  "commitID" : "7e91132e7ed62a58b5f347de252ab1eda3f43b90",
  "filePath" : "/app/src/main/java/org/thoughtcrime/securesms/PushContactSelectionActivity.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "KEY_SELECTED_RECIPIENTS",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 63,
      "startColumnNumber" : 45,
      "endLineNumber" : 63,
      "endColumnNumber" : 68
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 94,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 98
      },
      "nodeContext" : "resultIntent.putParcelableArrayListExtra(KEY_SELECTED_RECIPIENTS,new ArrayList<>(recipients))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 99
      },
      "nodeContext" : "resultIntent.putParcelableArrayListExtra(KEY_SELECTED_RECIPIENTS,new ArrayList<>(recipients));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 430,
        "startLineNumber" : 58,
        "startColumnNumber" : 45,
        "endLineNumber" : 67,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  Intent resultIntent=getIntent();\n  List<SelectedContact> selectedContacts=contactsFragment.getSelectedContacts();\n  List<RecipientId> recipients=Stream.of(selectedContacts).map(sc -> sc.getOrCreateRecipientId(this)).toList();\n  resultIntent.putParcelableArrayListExtra(KEY_SELECTED_RECIPIENTS,new ArrayList<>(recipients));\n  setResult(RESULT_OK,resultIntent);\n  finish();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 60,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 473,
        "startLineNumber" : 58,
        "startColumnNumber" : 2,
        "endLineNumber" : 67,
        "endColumnNumber" : 3
      },
      "nodeContext" : "protected final void onFinishedSelection(){\n  Intent resultIntent=getIntent();\n  List<SelectedContact> selectedContacts=contactsFragment.getSelectedContacts();\n  List<RecipientId> recipients=Stream.of(selectedContacts).map(sc -> sc.getOrCreateRecipientId(this)).toList();\n  resultIntent.putParcelableArrayListExtra(KEY_SELECTED_RECIPIENTS,new ArrayList<>(recipients));\n  setResult(RESULT_OK,resultIntent);\n  finish();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 65,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 99
      },
      "nodeContext" : "resultIntent.putParcelableArrayListExtra(KEY_SELECTED_RECIPIENTS,new ArrayList<>(recipients));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 63,
    "startColumnNumber" : 45,
    "endLineNumber" : 63,
    "endColumnNumber" : 68
  } ],
  "layoutRelationDataList" : [ ]
}