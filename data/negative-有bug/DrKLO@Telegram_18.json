{
  "id" : 18,
  "expression" : "bytesRemaining <= MAX_BYTES_TO_DRAIN",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/com/google/android/exoplayer2/upstream/DefaultHttpDataSource.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "bytesRemaining <= MAX_BYTES_TO_DRAIN",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 36,
      "startLineNumber" : 733,
      "startColumnNumber" : 17,
      "endLineNumber" : 733,
      "endColumnNumber" : 53
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 188,
        "startLineNumber" : 733,
        "startColumnNumber" : 13,
        "endLineNumber" : 737,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (bytesRemaining <= MAX_BYTES_TO_DRAIN) {\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 398,
        "startLineNumber" : 728,
        "startColumnNumber" : 6,
        "endLineNumber" : 737,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (bytesRemaining == C.LENGTH_UNSET) {\n  if (inputStream.read() == -1) {\n    return;\n  }\n}\n else if (bytesRemaining <= MAX_BYTES_TO_DRAIN) {\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1019,
        "startLineNumber" : 726,
        "startColumnNumber" : 8,
        "endLineNumber" : 747,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  InputStream inputStream=connection.getInputStream();\n  if (bytesRemaining == C.LENGTH_UNSET) {\n    if (inputStream.read() == -1) {\n      return;\n    }\n  }\n else   if (bytesRemaining <= MAX_BYTES_TO_DRAIN) {\n    return;\n  }\n  String className=inputStream.getClass().getName();\n  if (\"com.android.okhttp.internal.http.HttpTransport$ChunkedInputStream\".equals(className) || \"com.android.okhttp.internal.http.HttpTransport$FixedLengthInputStream\".equals(className)) {\n    Class<?> superclass=inputStream.getClass().getSuperclass();\n    Method unexpectedEndOfInput=superclass.getDeclaredMethod(\"unexpectedEndOfInput\");\n    unexpectedEndOfInput.setAccessible(true);\n    unexpectedEndOfInput.invoke(inputStream);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 83,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1275,
        "startLineNumber" : 726,
        "startColumnNumber" : 4,
        "endLineNumber" : 751,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  InputStream inputStream=connection.getInputStream();\n  if (bytesRemaining == C.LENGTH_UNSET) {\n    if (inputStream.read() == -1) {\n      return;\n    }\n  }\n else   if (bytesRemaining <= MAX_BYTES_TO_DRAIN) {\n    return;\n  }\n  String className=inputStream.getClass().getName();\n  if (\"com.android.okhttp.internal.http.HttpTransport$ChunkedInputStream\".equals(className) || \"com.android.okhttp.internal.http.HttpTransport$FixedLengthInputStream\".equals(className)) {\n    Class<?> superclass=inputStream.getClass().getSuperclass();\n    Method unexpectedEndOfInput=superclass.getDeclaredMethod(\"unexpectedEndOfInput\");\n    unexpectedEndOfInput.setAccessible(true);\n    unexpectedEndOfInput.invoke(inputStream);\n  }\n}\n catch (Exception e) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 90,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1358,
        "startLineNumber" : 721,
        "startColumnNumber" : 99,
        "endLineNumber" : 752,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (Util.SDK_INT != 19 && Util.SDK_INT != 20) {\n    return;\n  }\n  try {\n    InputStream inputStream=connection.getInputStream();\n    if (bytesRemaining == C.LENGTH_UNSET) {\n      if (inputStream.read() == -1) {\n        return;\n      }\n    }\n else     if (bytesRemaining <= MAX_BYTES_TO_DRAIN) {\n      return;\n    }\n    String className=inputStream.getClass().getName();\n    if (\"com.android.okhttp.internal.http.HttpTransport$ChunkedInputStream\".equals(className) || \"com.android.okhttp.internal.http.HttpTransport$FixedLengthInputStream\".equals(className)) {\n      Class<?> superclass=inputStream.getClass().getSuperclass();\n      Method unexpectedEndOfInput=superclass.getDeclaredMethod(\"unexpectedEndOfInput\");\n      unexpectedEndOfInput.setAccessible(true);\n      unexpectedEndOfInput.invoke(inputStream);\n    }\n  }\n catch (  Exception e) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2116,
        "startLineNumber" : 710,
        "startColumnNumber" : 2,
        "endLineNumber" : 752,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * On platform API levels 19 and 20, okhttp's implementation of  {@link InputStream#close} canblock for a long time if the stream has a lot of data remaining. Call this method before closing the input stream to make a best effort to cause the input stream to encounter an unexpected end of input, working around this issue. On other platform API levels, the method does nothing.\n * @param connection The connection whose {@link InputStream} should be terminated.\n * @param bytesRemaining The number of bytes remaining to be read from the input stream if itslength is known.  {@link C#LENGTH_UNSET} otherwise.\n */\nprivate static void maybeTerminateInputStream(HttpURLConnection connection,long bytesRemaining){\n  if (Util.SDK_INT != 19 && Util.SDK_INT != 20) {\n    return;\n  }\n  try {\n    InputStream inputStream=connection.getInputStream();\n    if (bytesRemaining == C.LENGTH_UNSET) {\n      if (inputStream.read() == -1) {\n        return;\n      }\n    }\n else     if (bytesRemaining <= MAX_BYTES_TO_DRAIN) {\n      return;\n    }\n    String className=inputStream.getClass().getName();\n    if (\"com.android.okhttp.internal.http.HttpTransport$ChunkedInputStream\".equals(className) || \"com.android.okhttp.internal.http.HttpTransport$FixedLengthInputStream\".equals(className)) {\n      Class<?> superclass=inputStream.getClass().getSuperclass();\n      Method unexpectedEndOfInput=superclass.getDeclaredMethod(\"unexpectedEndOfInput\");\n      unexpectedEndOfInput.setAccessible(true);\n      unexpectedEndOfInput.invoke(inputStream);\n    }\n  }\n catch (  Exception e) {\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 118,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 188,
        "startLineNumber" : 733,
        "startColumnNumber" : 13,
        "endLineNumber" : 737,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (bytesRemaining <= MAX_BYTES_TO_DRAIN) {\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 6,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 36,
    "startLineNumber" : 733,
    "startColumnNumber" : 17,
    "endLineNumber" : 733,
    "endColumnNumber" : 53
  } ],
  "layoutRelationDataList" : [ ]
}