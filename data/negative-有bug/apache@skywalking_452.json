{
  "id" : 452,
  "expression" : "new IOException(e.getMessage() + System.lineSeparator() + \"SQL Statement: \"+ query.getCommand(),e)",
  "projectName" : "apache@skywalking",
  "commitID" : "16b51d55baec4f779f312e07081d1397addbcfe9",
  "filePath" : "/oap-server/server-storage-plugin/storage-influxdb-plugin/src/main/java/org/apache/skywalking/oap/server/storage/plugin/influxdb/InfluxClient.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new IOException(e.getMessage() + System.lineSeparator() + \"SQL Statement: \"+ query.getCommand(),e)",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 100,
      "startLineNumber" : 120,
      "startColumnNumber" : 18,
      "endLineNumber" : 120,
      "endColumnNumber" : 118
    },
    "astNodeNumber" : 15,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 120,
        "startColumnNumber" : 12,
        "endLineNumber" : 120,
        "endColumnNumber" : 119
      },
      "nodeContext" : "throw new IOException(e.getMessage() + System.lineSeparator() + \"SQL Statement: \"+ query.getCommand(),e);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 170,
        "startLineNumber" : 118,
        "startColumnNumber" : 30,
        "endLineNumber" : 121,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  healthChecker.unHealth(e);\n  throw new IOException(e.getMessage() + System.lineSeparator() + \"SQL Statement: \"+ query.getCommand(),e);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 190,
        "startLineNumber" : 118,
        "startColumnNumber" : 10,
        "endLineNumber" : 121,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (Throwable e) {\n  healthChecker.unHealth(e);\n  throw new IOException(e.getMessage() + System.lineSeparator() + \"SQL Statement: \"+ query.getCommand(),e);\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 27,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 474,
        "startLineNumber" : 111,
        "startColumnNumber" : 8,
        "endLineNumber" : 121,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  QueryResult result=getInflux().query(new Query(query.getCommand()));\n  if (result.hasError()) {\n    throw new IOException(result.getError());\n  }\n  healthChecker.health();\n  return result.getResults();\n}\n catch (Throwable e) {\n  healthChecker.unHealth(e);\n  throw new IOException(e.getMessage() + System.lineSeparator() + \"SQL Statement: \"+ query.getCommand(),e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 64,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 600,
        "startLineNumber" : 107,
        "startColumnNumber" : 74,
        "endLineNumber" : 122,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (log.isDebugEnabled()) {\n    log.debug(\"SQL Statement: {}\",query.getCommand());\n  }\n  try {\n    QueryResult result=getInflux().query(new Query(query.getCommand()));\n    if (result.hasError()) {\n      throw new IOException(result.getError());\n    }\n    healthChecker.health();\n    return result.getResults();\n  }\n catch (  Throwable e) {\n    healthChecker.unHealth(e);\n    throw new IOException(e.getMessage() + System.lineSeparator() + \"SQL Statement: \"+ query.getCommand(),e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 78,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 991,
        "startLineNumber" : 101,
        "startColumnNumber" : 4,
        "endLineNumber" : 122,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Execute a query against InfluxDB and return a set of  {@link QueryResult.Result}s. Normally, InfluxDB supports combining multiple statements into one query, so that we do get multi-results.\n * @throws IOException if there is an error on the InfluxDB server or communication error.\n */\npublic List<QueryResult.Result> query(Query query) throws IOException {\n  if (log.isDebugEnabled()) {\n    log.debug(\"SQL Statement: {}\",query.getCommand());\n  }\n  try {\n    QueryResult result=getInflux().query(new Query(query.getCommand()));\n    if (result.hasError()) {\n      throw new IOException(result.getError());\n    }\n    healthChecker.health();\n    return result.getResults();\n  }\n catch (  Throwable e) {\n    healthChecker.unHealth(e);\n    throw new IOException(e.getMessage() + System.lineSeparator() + \"SQL Statement: \"+ query.getCommand(),e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 95,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 120,
        "startColumnNumber" : 12,
        "endLineNumber" : 120,
        "endColumnNumber" : 119
      },
      "nodeContext" : "throw new IOException(e.getMessage() + System.lineSeparator() + \"SQL Statement: \"+ query.getCommand(),e);\n",
      "nodeType" : "ThrowStatement",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 13,
    "type" : "java.io.IOException"
  } ],
  "positionList" : [ {
    "charLength" : 100,
    "startLineNumber" : 120,
    "startColumnNumber" : 18,
    "endLineNumber" : 120,
    "endColumnNumber" : 118
  } ],
  "layoutRelationDataList" : [ ]
}