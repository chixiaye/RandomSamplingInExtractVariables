{
  "id" : 400,
  "expression" : "new Player.Listener(){\n  @Override public void onTimelineChanged(  Timeline timeline,  int reason){\n    receivedTimeline.set(timeline);\n  }\n}\n",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/robolectricutils/src/main/java/com/google/android/exoplayer2/robolectric/TestPlayerRunHelper.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new Player.Listener(){\n  @Override public void onTimelineChanged(  Timeline timeline,  int reason){\n    receivedTimeline.set(timeline);\n  }\n}\n",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 182,
      "startLineNumber" : 122,
      "startColumnNumber" : 8,
      "endLineNumber" : 127,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 25,
    "astHeight" : 7,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 201,
        "startLineNumber" : 121,
        "startColumnNumber" : 20,
        "endLineNumber" : 127,
        "endColumnNumber" : 9
      },
      "nodeContext" : "listener=new Player.Listener(){\n  @Override public void onTimelineChanged(  Timeline timeline,  int reason){\n    receivedTimeline.set(timeline);\n  }\n}\n",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 27,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 218,
        "startLineNumber" : 121,
        "startColumnNumber" : 4,
        "endLineNumber" : 127,
        "endColumnNumber" : 10
      },
      "nodeContext" : "Player.Listener listener=new Player.Listener(){\n  @Override public void onTimelineChanged(  Timeline timeline,  int reason){\n    receivedTimeline.set(timeline);\n  }\n}\n;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 32,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 680,
        "startLineNumber" : 118,
        "startColumnNumber" : 88,
        "endLineNumber" : 135,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  verifyMainTestThread(player);\n  AtomicReference<@NullableType Timeline> receivedTimeline=new AtomicReference<>();\n  Player.Listener listener=new Player.Listener(){\n    @Override public void onTimelineChanged(    Timeline timeline,    int reason){\n      receivedTimeline.set(timeline);\n    }\n  }\n;\n  player.addListener(listener);\n  runMainLooperUntil(() -> receivedTimeline.get() != null || player.getPlayerError() != null);\n  player.removeListener(listener);\n  if (player.getPlayerError() != null) {\n    throw new IllegalStateException(player.getPlayerError());\n  }\n  return checkNotNull(receivedTimeline.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 96,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1177,
        "startLineNumber" : 108,
        "startColumnNumber" : 2,
        "endLineNumber" : 135,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Runs tasks of the main  {@link Looper} until a timeline change or a playback error occurs.<p>If a playback error occurs it will be thrown wrapped in an  {@link IllegalStateException}.\n * @param player The {@link Player}.\n * @return The new {@link Timeline}.\n * @throws TimeoutException If the {@link RobolectricUtil#DEFAULT_TIMEOUT_MS default timeout} isexceeded.\n */\npublic static Timeline runUntilTimelineChanged(Player player) throws TimeoutException {\n  verifyMainTestThread(player);\n  AtomicReference<@NullableType Timeline> receivedTimeline=new AtomicReference<>();\n  Player.Listener listener=new Player.Listener(){\n    @Override public void onTimelineChanged(    Timeline timeline,    int reason){\n      receivedTimeline.set(timeline);\n    }\n  }\n;\n  player.addListener(listener);\n  runMainLooperUntil(() -> receivedTimeline.get() != null || player.getPlayerError() != null);\n  player.removeListener(listener);\n  if (player.getPlayerError() != null) {\n    throw new IllegalStateException(player.getPlayerError());\n  }\n  return checkNotNull(receivedTimeline.get());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 109,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 201,
        "startLineNumber" : 121,
        "startColumnNumber" : 20,
        "endLineNumber" : 127,
        "endColumnNumber" : 9
      },
      "nodeContext" : "listener=new Player.Listener(){\n  @Override public void onTimelineChanged(  Timeline timeline,  int reason){\n    receivedTimeline.set(timeline);\n  }\n}\n",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 27,
      "astHeight" : 8
    },
    "tokenLength" : 10,
    "type" : ""
  } ],
  "positionList" : [ {
    "charLength" : 182,
    "startLineNumber" : 122,
    "startColumnNumber" : 8,
    "endLineNumber" : 127,
    "endColumnNumber" : 9
  } ],
  "layoutRelationDataList" : [ ]
}