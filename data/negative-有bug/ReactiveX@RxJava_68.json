{
  "id" : 68,
  "expression" : "Schedulers",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/observable/ObservableSubscribeOnTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Schedulers",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 62,
      "startColumnNumber" : 23,
      "endLineNumber" : 62,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 62,
        "startColumnNumber" : 23,
        "endLineNumber" : 62,
        "endColumnNumber" : 47
      },
      "nodeContext" : "Schedulers.computation()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 968,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 48
      },
      "nodeContext" : "Observable.create(new ObservableConsumable<Integer>(){\n  @Override public void subscribe(  final Observer<? super Integer> NbpSubscriber){\n    NbpSubscriber.onSubscribe(EmptyDisposable.INSTANCE);\n    scheduled.countDown();\n    try {\n      try {\n        latch.await();\n      }\n catch (      InterruptedException e) {\n      }\n      NbpSubscriber.onComplete();\n    }\n catch (    Throwable e) {\n      NbpSubscriber.onError(e);\n    }\n finally {\n      doneLatch.countDown();\n    }\n  }\n}\n).subscribeOn(Schedulers.computation())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 76,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 991,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 71
      },
      "nodeContext" : "Observable.create(new ObservableConsumable<Integer>(){\n  @Override public void subscribe(  final Observer<? super Integer> NbpSubscriber){\n    NbpSubscriber.onSubscribe(EmptyDisposable.INSTANCE);\n    scheduled.countDown();\n    try {\n      try {\n        latch.await();\n      }\n catch (      InterruptedException e) {\n      }\n      NbpSubscriber.onComplete();\n    }\n catch (    Throwable e) {\n      NbpSubscriber.onError(e);\n    }\n finally {\n      doneLatch.countDown();\n    }\n  }\n}\n).subscribeOn(Schedulers.computation()).subscribe(NbpObserver)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 79,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 992,
        "startLineNumber" : 40,
        "startColumnNumber" : 8,
        "endLineNumber" : 62,
        "endColumnNumber" : 72
      },
      "nodeContext" : "Observable.create(new ObservableConsumable<Integer>(){\n  @Override public void subscribe(  final Observer<? super Integer> NbpSubscriber){\n    NbpSubscriber.onSubscribe(EmptyDisposable.INSTANCE);\n    scheduled.countDown();\n    try {\n      try {\n        latch.await();\n      }\n catch (      InterruptedException e) {\n      }\n      NbpSubscriber.onComplete();\n    }\n catch (    Throwable e) {\n      NbpSubscriber.onError(e);\n    }\n finally {\n      doneLatch.countDown();\n    }\n  }\n}\n).subscribeOn(Schedulers.computation()).subscribe(NbpObserver);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 80,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1598,
        "startLineNumber" : 32,
        "startColumnNumber" : 59,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final CountDownLatch scheduled=new CountDownLatch(1);\n  final CountDownLatch latch=new CountDownLatch(1);\n  final CountDownLatch doneLatch=new CountDownLatch(1);\n  TestObserver<Integer> NbpObserver=new TestObserver<Integer>();\n  Observable.create(new ObservableConsumable<Integer>(){\n    @Override public void subscribe(    final Observer<? super Integer> NbpSubscriber){\n      NbpSubscriber.onSubscribe(EmptyDisposable.INSTANCE);\n      scheduled.countDown();\n      try {\n        try {\n          latch.await();\n        }\n catch (        InterruptedException e) {\n        }\n        NbpSubscriber.onComplete();\n      }\n catch (      Throwable e) {\n        NbpSubscriber.onError(e);\n      }\n finally {\n        doneLatch.countDown();\n      }\n    }\n  }\n).subscribeOn(Schedulers.computation()).subscribe(NbpObserver);\n  scheduled.await();\n  NbpObserver.dispose();\n  latch.countDown();\n  doneLatch.await();\n  NbpObserver.assertNoErrors();\n  NbpObserver.assertComplete();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 149,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1680,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 72,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test(timeout=2000) public void testIssue813() throws InterruptedException {\n  final CountDownLatch scheduled=new CountDownLatch(1);\n  final CountDownLatch latch=new CountDownLatch(1);\n  final CountDownLatch doneLatch=new CountDownLatch(1);\n  TestObserver<Integer> NbpObserver=new TestObserver<Integer>();\n  Observable.create(new ObservableConsumable<Integer>(){\n    @Override public void subscribe(    final Observer<? super Integer> NbpSubscriber){\n      NbpSubscriber.onSubscribe(EmptyDisposable.INSTANCE);\n      scheduled.countDown();\n      try {\n        try {\n          latch.await();\n        }\n catch (        InterruptedException e) {\n        }\n        NbpSubscriber.onComplete();\n      }\n catch (      Throwable e) {\n        NbpSubscriber.onError(e);\n      }\n finally {\n        doneLatch.countDown();\n      }\n    }\n  }\n).subscribeOn(Schedulers.computation()).subscribe(NbpObserver);\n  scheduled.await();\n  NbpObserver.dispose();\n  latch.countDown();\n  doneLatch.await();\n  NbpObserver.assertNoErrors();\n  NbpObserver.assertComplete();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 160,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 62,
        "startColumnNumber" : 23,
        "endLineNumber" : 62,
        "endColumnNumber" : 47
      },
      "nodeContext" : "Schedulers.computation()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "io.reactivex.schedulers.Schedulers"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 62,
    "startColumnNumber" : 23,
    "endLineNumber" : 62,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ ]
}