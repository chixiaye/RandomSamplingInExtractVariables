{
  "id" : 66,
  "expression" : "details.get(\"code_id\")",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/testsuite/integration-arquillian/tests/base/src/test/java/org/keycloak/testsuite/admin/event/LoginEventsTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "details.get(\"code_id\")",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 96,
      "startColumnNumber" : 22,
      "endLineNumber" : 96,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 96,
        "startColumnNumber" : 8,
        "endLineNumber" : 96,
        "endColumnNumber" : 45
      },
      "nodeContext" : "assertNotNull(details.get(\"code_id\"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 96,
        "startColumnNumber" : 8,
        "endLineNumber" : 96,
        "endColumnNumber" : 46
      },
      "nodeContext" : "assertNotNull(details.get(\"code_id\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 894,
        "startLineNumber" : 79,
        "startColumnNumber" : 38,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  badLogin();\n  List<EventRepresentation> events=events();\n  assertEquals(1,events.size());\n  EventRepresentation event=events.get(0);\n  assertTrue(event.getTime() > 0);\n  assertNotNull(event.getIpAddress());\n  assertEquals(\"LOGIN_ERROR\",event.getType());\n  assertEquals(realmName(),event.getRealmId());\n  assertNull(event.getUserId());\n  assertNull(event.getSessionId());\n  assertEquals(\"user_not_found\",event.getError());\n  Map<String,String> details=event.getDetails();\n  assertEquals(\"openid-connect\",details.get(\"auth_method\"));\n  assertEquals(\"code\",details.get(\"auth_type\"));\n  assertNotNull(details.get(\"redirect_uri\"));\n  assertNotNull(details.get(\"code_id\"));\n  assertEquals(\"bad\",details.get(\"username\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 129,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 938,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void eventAttributesTest(){\n  badLogin();\n  List<EventRepresentation> events=events();\n  assertEquals(1,events.size());\n  EventRepresentation event=events.get(0);\n  assertTrue(event.getTime() > 0);\n  assertNotNull(event.getIpAddress());\n  assertEquals(\"LOGIN_ERROR\",event.getType());\n  assertEquals(realmName(),event.getRealmId());\n  assertNull(event.getUserId());\n  assertNull(event.getSessionId());\n  assertEquals(\"user_not_found\",event.getError());\n  Map<String,String> details=event.getDetails();\n  assertEquals(\"openid-connect\",details.get(\"auth_method\"));\n  assertEquals(\"code\",details.get(\"auth_type\"));\n  assertNotNull(details.get(\"redirect_uri\"));\n  assertNotNull(details.get(\"code_id\"));\n  assertEquals(\"bad\",details.get(\"username\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 135,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 96,
        "startColumnNumber" : 8,
        "endLineNumber" : 96,
        "endColumnNumber" : 46
      },
      "nodeContext" : "assertNotNull(details.get(\"code_id\"));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 96,
    "startColumnNumber" : 22,
    "endLineNumber" : 96,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ ]
}