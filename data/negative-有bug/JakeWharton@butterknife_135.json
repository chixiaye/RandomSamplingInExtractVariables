{
  "id" : 135,
  "expression" : "target",
  "projectName" : "JakeWharton@butterknife",
  "commitID" : "f89fb0f12f5a0c21d95dae234d53f590e1384557",
  "filePath" : "/butterknife-integration-test/src/androidTest/java/com/example/butterknife/functional/BindColorTest.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "target",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 27,
      "startColumnNumber" : 41,
      "endLineNumber" : 27,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 27,
        "startColumnNumber" : 24,
        "endLineNumber" : 27,
        "endColumnNumber" : 54
      },
      "nodeContext" : "ButterKnife.bind(target,tree)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 27,
        "startColumnNumber" : 13,
        "endLineNumber" : 27,
        "endColumnNumber" : 54
      },
      "nodeContext" : "unbinder=ButterKnife.bind(target,tree)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 27,
        "startColumnNumber" : 4,
        "endLineNumber" : 27,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Unbinder unbinder=ButterKnife.bind(target,tree);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 302,
        "startLineNumber" : 23,
        "startColumnNumber" : 28,
        "endLineNumber" : 32,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  IntTarget target=new IntTarget();\n  int expected=context.getResources().getColor(R.color.red);\n  Unbinder unbinder=ButterKnife.bind(target,tree);\n  assertThat(target.actual).isEqualTo(expected);\n  unbinder.unbind();\n  assertThat(target.actual).isEqualTo(expected);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 328,
        "startLineNumber" : 23,
        "startColumnNumber" : 2,
        "endLineNumber" : 32,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void asInt(){\n  IntTarget target=new IntTarget();\n  int expected=context.getResources().getColor(R.color.red);\n  Unbinder unbinder=ButterKnife.bind(target,tree);\n  assertThat(target.actual).isEqualTo(expected);\n  unbinder.unbind();\n  assertThat(target.actual).isEqualTo(expected);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 61,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 51,
        "startLineNumber" : 27,
        "startColumnNumber" : 4,
        "endLineNumber" : 27,
        "endColumnNumber" : 55
      },
      "nodeContext" : "Unbinder unbinder=ButterKnife.bind(target,tree);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.example.butterknife.functional.BindColorTest.IntTarget"
  }, {
    "nodeContext" : "target",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 28,
      "startColumnNumber" : 15,
      "endLineNumber" : 28,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 28,
        "startColumnNumber" : 15,
        "endLineNumber" : 28,
        "endColumnNumber" : 28
      },
      "nodeContext" : "target.actual",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 28,
        "endColumnNumber" : 29
      },
      "nodeContext" : "assertThat(target.actual)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 28,
        "endColumnNumber" : 49
      },
      "nodeContext" : "assertThat(target.actual).isEqualTo(expected)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 28,
        "endColumnNumber" : 50
      },
      "nodeContext" : "assertThat(target.actual).isEqualTo(expected);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 302,
        "startLineNumber" : 23,
        "startColumnNumber" : 28,
        "endLineNumber" : 32,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  IntTarget target=new IntTarget();\n  int expected=context.getResources().getColor(R.color.red);\n  Unbinder unbinder=ButterKnife.bind(target,tree);\n  assertThat(target.actual).isEqualTo(expected);\n  unbinder.unbind();\n  assertThat(target.actual).isEqualTo(expected);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 328,
        "startLineNumber" : 23,
        "startColumnNumber" : 2,
        "endLineNumber" : 32,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void asInt(){\n  IntTarget target=new IntTarget();\n  int expected=context.getResources().getColor(R.color.red);\n  Unbinder unbinder=ButterKnife.bind(target,tree);\n  assertThat(target.actual).isEqualTo(expected);\n  unbinder.unbind();\n  assertThat(target.actual).isEqualTo(expected);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 61,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 28,
        "startColumnNumber" : 4,
        "endLineNumber" : 28,
        "endColumnNumber" : 50
      },
      "nodeContext" : "assertThat(target.actual).isEqualTo(expected);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.example.butterknife.functional.BindColorTest.IntTarget"
  }, {
    "nodeContext" : "target",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 31,
      "startColumnNumber" : 15,
      "endLineNumber" : 31,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 31,
        "startColumnNumber" : 15,
        "endLineNumber" : 31,
        "endColumnNumber" : 28
      },
      "nodeContext" : "target.actual",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 31,
        "endColumnNumber" : 29
      },
      "nodeContext" : "assertThat(target.actual)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 31,
        "endColumnNumber" : 49
      },
      "nodeContext" : "assertThat(target.actual).isEqualTo(expected)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 31,
        "endColumnNumber" : 50
      },
      "nodeContext" : "assertThat(target.actual).isEqualTo(expected);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 302,
        "startLineNumber" : 23,
        "startColumnNumber" : 28,
        "endLineNumber" : 32,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  IntTarget target=new IntTarget();\n  int expected=context.getResources().getColor(R.color.red);\n  Unbinder unbinder=ButterKnife.bind(target,tree);\n  assertThat(target.actual).isEqualTo(expected);\n  unbinder.unbind();\n  assertThat(target.actual).isEqualTo(expected);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 328,
        "startLineNumber" : 23,
        "startColumnNumber" : 2,
        "endLineNumber" : 32,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void asInt(){\n  IntTarget target=new IntTarget();\n  int expected=context.getResources().getColor(R.color.red);\n  Unbinder unbinder=ButterKnife.bind(target,tree);\n  assertThat(target.actual).isEqualTo(expected);\n  unbinder.unbind();\n  assertThat(target.actual).isEqualTo(expected);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 61,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 31,
        "startColumnNumber" : 4,
        "endLineNumber" : 31,
        "endColumnNumber" : 50
      },
      "nodeContext" : "assertThat(target.actual).isEqualTo(expected);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "com.example.butterknife.functional.BindColorTest.IntTarget"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 27,
    "startColumnNumber" : 41,
    "endLineNumber" : 27,
    "endColumnNumber" : 47
  }, {
    "charLength" : 6,
    "startLineNumber" : 28,
    "startColumnNumber" : 15,
    "endLineNumber" : 28,
    "endColumnNumber" : 21
  }, {
    "charLength" : 6,
    "startLineNumber" : 31,
    "startColumnNumber" : 15,
    "endLineNumber" : 31,
    "endColumnNumber" : 21
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 4
  } ]
}