{
  "id" : 322,
  "expression" : "b",
  "projectName" : "alibaba@fastjson",
  "commitID" : "d3797da65a3d9f804c9e275c25395c59e31f097d",
  "filePath" : "/src/test/java/com/alibaba/json/bvt/serializer/RefTest8.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "b",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 23,
      "startColumnNumber" : 20,
      "endLineNumber" : 23,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 23,
        "startColumnNumber" : 8,
        "endLineNumber" : 23,
        "endColumnNumber" : 22
      },
      "nodeContext" : "vo.put(\"b\",b)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 23,
        "startColumnNumber" : 8,
        "endLineNumber" : 23,
        "endColumnNumber" : 23
      },
      "nodeContext" : "vo.put(\"b\",b);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 824,
        "startLineNumber" : 15,
        "startColumnNumber" : 55,
        "endLineNumber" : 37,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  C c=new C();\n  Map<String,Object> a=Collections.<String,Object>singletonMap(\"c\",c);\n  Map<String,Object> b=Collections.<String,Object>singletonMap(\"c\",c);\n  Map<String,Object> vo=new HashMap<String,Object>();\n  vo.put(\"a\",a);\n  vo.put(\"b\",b);\n  Object[] root=new Object[]{vo};\n  String text=JSON.toJSONString(root);\n  System.out.println(text);\n  VO[] array2=JSON.parseObject(text,VO[].class);\n  Assert.assertEquals(1,array2.length);\n  Assert.assertNotNull(array2[0].getA());\n  Assert.assertNotNull(array2[0].getB());\n  Assert.assertNotNull(array2[0].getA().getC());\n  Assert.assertNotNull(array2[0].getB().getC());\n  Assert.assertSame(array2[0].getA().getC(),array2[0].getB().getC());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 189,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 875,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 37,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void test_bug_for_juqkai() throws Exception {\n  C c=new C();\n  Map<String,Object> a=Collections.<String,Object>singletonMap(\"c\",c);\n  Map<String,Object> b=Collections.<String,Object>singletonMap(\"c\",c);\n  Map<String,Object> vo=new HashMap<String,Object>();\n  vo.put(\"a\",a);\n  vo.put(\"b\",b);\n  Object[] root=new Object[]{vo};\n  String text=JSON.toJSONString(root);\n  System.out.println(text);\n  VO[] array2=JSON.parseObject(text,VO[].class);\n  Assert.assertEquals(1,array2.length);\n  Assert.assertNotNull(array2[0].getA());\n  Assert.assertNotNull(array2[0].getB());\n  Assert.assertNotNull(array2[0].getA().getC());\n  Assert.assertNotNull(array2[0].getB().getC());\n  Assert.assertSame(array2[0].getA().getC(),array2[0].getB().getC());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 195,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 15,
        "startLineNumber" : 23,
        "startColumnNumber" : 8,
        "endLineNumber" : 23,
        "endColumnNumber" : 23
      },
      "nodeContext" : "vo.put(\"b\",b);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.Object>"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 23,
    "startColumnNumber" : 20,
    "endLineNumber" : 23,
    "endColumnNumber" : 21
  } ],
  "layoutRelationDataList" : [ ]
}