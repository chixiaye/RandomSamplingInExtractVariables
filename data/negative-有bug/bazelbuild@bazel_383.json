{
  "id" : 383,
  "expression" : "foo.getPath()",
  "projectName" : "bazelbuild@bazel",
  "commitID" : "302971e1b3d803069ac949c0085c0d2a3916c8ab",
  "filePath" : "/src/test/java/com/google/devtools/build/lib/unix/NativePosixFilesTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "foo.getPath()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 63,
      "startColumnNumber" : 10,
      "endLineNumber" : 63,
      "endColumnNumber" : 23
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 62,
        "startColumnNumber" : 6,
        "endLineNumber" : 64,
        "endColumnNumber" : 86
      },
      "nodeContext" : "NativePosixFiles.chmod(foo.getPath(),NativePosixFiles.lstat(foo.getPath()).getPermissions() | FileStatus.S_IWUSR)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 62,
        "startColumnNumber" : 6,
        "endLineNumber" : 64,
        "endColumnNumber" : 87
      },
      "nodeContext" : "NativePosixFiles.chmod(foo.getPath(),NativePosixFiles.lstat(foo.getPath()).getPermissions() | FileStatus.S_IWUSR);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 233,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  NativePosixFiles.chmod(foo.getPath(),NativePosixFiles.lstat(foo.getPath()).getPermissions() | FileStatus.S_IWUSR);\n  fail(\"Expected FilePermissionException or IOException, but wasn't thrown.\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 559,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  NativePosixFiles.chmod(foo.getPath(),NativePosixFiles.lstat(foo.getPath()).getPermissions() | FileStatus.S_IWUSR);\n  fail(\"Expected FilePermissionException or IOException, but wasn't thrown.\");\n}\n catch (FilePermissionException e) {\n  assertThat(e).hasMessageThat().isEqualTo(foo + \" (Operation not permitted)\");\n}\ncatch (IOException e) {\n  assertThat(e).hasMessageThat().isEqualTo(foo + \" (Read-only file system)\");\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 59,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 602,
        "startLineNumber" : 59,
        "startColumnNumber" : 63,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  File foo=new File(\"/bin\");\n  try {\n    NativePosixFiles.chmod(foo.getPath(),NativePosixFiles.lstat(foo.getPath()).getPermissions() | FileStatus.S_IWUSR);\n    fail(\"Expected FilePermissionException or IOException, but wasn't thrown.\");\n  }\n catch (  FilePermissionException e) {\n    assertThat(e).hasMessageThat().isEqualTo(foo + \" (Operation not permitted)\");\n  }\ncatch (  IOException e) {\n    assertThat(e).hasMessageThat().isEqualTo(foo + \" (Read-only file system)\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 671,
        "startLineNumber" : 58,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void throwsFilePermissionException() throws Exception {\n  File foo=new File(\"/bin\");\n  try {\n    NativePosixFiles.chmod(foo.getPath(),NativePosixFiles.lstat(foo.getPath()).getPermissions() | FileStatus.S_IWUSR);\n    fail(\"Expected FilePermissionException or IOException, but wasn't thrown.\");\n  }\n catch (  FilePermissionException e) {\n    assertThat(e).hasMessageThat().isEqualTo(foo + \" (Operation not permitted)\");\n  }\ncatch (  IOException e) {\n    assertThat(e).hasMessageThat().isEqualTo(foo + \" (Read-only file system)\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 77,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 62,
        "startColumnNumber" : 6,
        "endLineNumber" : 64,
        "endColumnNumber" : 86
      },
      "nodeContext" : "NativePosixFiles.chmod(foo.getPath(),NativePosixFiles.lstat(foo.getPath()).getPermissions() | FileStatus.S_IWUSR)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "foo.getPath()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 64,
      "startColumnNumber" : 33,
      "endLineNumber" : 64,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 64,
        "startColumnNumber" : 10,
        "endLineNumber" : 64,
        "endColumnNumber" : 47
      },
      "nodeContext" : "NativePosixFiles.lstat(foo.getPath())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 64,
        "startColumnNumber" : 10,
        "endLineNumber" : 64,
        "endColumnNumber" : 64
      },
      "nodeContext" : "NativePosixFiles.lstat(foo.getPath()).getPermissions()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 64,
        "startColumnNumber" : 10,
        "endLineNumber" : 64,
        "endColumnNumber" : 85
      },
      "nodeContext" : "NativePosixFiles.lstat(foo.getPath()).getPermissions() | FileStatus.S_IWUSR",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 135,
        "startLineNumber" : 62,
        "startColumnNumber" : 6,
        "endLineNumber" : 64,
        "endColumnNumber" : 86
      },
      "nodeContext" : "NativePosixFiles.chmod(foo.getPath(),NativePosixFiles.lstat(foo.getPath()).getPermissions() | FileStatus.S_IWUSR)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 136,
        "startLineNumber" : 62,
        "startColumnNumber" : 6,
        "endLineNumber" : 64,
        "endColumnNumber" : 87
      },
      "nodeContext" : "NativePosixFiles.chmod(foo.getPath(),NativePosixFiles.lstat(foo.getPath()).getPermissions() | FileStatus.S_IWUSR);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 233,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  NativePosixFiles.chmod(foo.getPath(),NativePosixFiles.lstat(foo.getPath()).getPermissions() | FileStatus.S_IWUSR);\n  fail(\"Expected FilePermissionException or IOException, but wasn't thrown.\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 559,
        "startLineNumber" : 61,
        "startColumnNumber" : 4,
        "endLineNumber" : 71,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  NativePosixFiles.chmod(foo.getPath(),NativePosixFiles.lstat(foo.getPath()).getPermissions() | FileStatus.S_IWUSR);\n  fail(\"Expected FilePermissionException or IOException, but wasn't thrown.\");\n}\n catch (FilePermissionException e) {\n  assertThat(e).hasMessageThat().isEqualTo(foo + \" (Operation not permitted)\");\n}\ncatch (IOException e) {\n  assertThat(e).hasMessageThat().isEqualTo(foo + \" (Read-only file system)\");\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 59,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 602,
        "startLineNumber" : 59,
        "startColumnNumber" : 63,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  File foo=new File(\"/bin\");\n  try {\n    NativePosixFiles.chmod(foo.getPath(),NativePosixFiles.lstat(foo.getPath()).getPermissions() | FileStatus.S_IWUSR);\n    fail(\"Expected FilePermissionException or IOException, but wasn't thrown.\");\n  }\n catch (  FilePermissionException e) {\n    assertThat(e).hasMessageThat().isEqualTo(foo + \" (Operation not permitted)\");\n  }\ncatch (  IOException e) {\n    assertThat(e).hasMessageThat().isEqualTo(foo + \" (Read-only file system)\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 671,
        "startLineNumber" : 58,
        "startColumnNumber" : 2,
        "endLineNumber" : 72,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void throwsFilePermissionException() throws Exception {\n  File foo=new File(\"/bin\");\n  try {\n    NativePosixFiles.chmod(foo.getPath(),NativePosixFiles.lstat(foo.getPath()).getPermissions() | FileStatus.S_IWUSR);\n    fail(\"Expected FilePermissionException or IOException, but wasn't thrown.\");\n  }\n catch (  FilePermissionException e) {\n    assertThat(e).hasMessageThat().isEqualTo(foo + \" (Operation not permitted)\");\n  }\ncatch (  IOException e) {\n    assertThat(e).hasMessageThat().isEqualTo(foo + \" (Read-only file system)\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 77,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 75,
        "startLineNumber" : 64,
        "startColumnNumber" : 10,
        "endLineNumber" : 64,
        "endColumnNumber" : 85
      },
      "nodeContext" : "NativePosixFiles.lstat(foo.getPath()).getPermissions() | FileStatus.S_IWUSR",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 63,
    "startColumnNumber" : 10,
    "endLineNumber" : 63,
    "endColumnNumber" : 23
  }, {
    "charLength" : 13,
    "startLineNumber" : 64,
    "startColumnNumber" : 33,
    "endLineNumber" : 64,
    "endColumnNumber" : 46
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 0
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}