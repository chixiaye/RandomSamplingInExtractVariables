{
  "id" : 308,
  "expression" : "0",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/test/src/com/google/zxing/common/StringUtilsTestCase.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 59,
      "startColumnNumber" : 23,
      "endLineNumber" : 59,
      "endColumnNumber" : 24
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 59,
        "startColumnNumber" : 18,
        "endLineNumber" : 59,
        "endColumnNumber" : 25
      },
      "nodeContext" : "args[0]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 59,
        "startColumnNumber" : 11,
        "endLineNumber" : 59,
        "endColumnNumber" : 25
      },
      "nodeContext" : "text=args[0]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 26
      },
      "nodeContext" : "String text=args[0];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 430,
        "startLineNumber" : 58,
        "startColumnNumber" : 41,
        "endLineNumber" : 70,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String text=args[0];\n  Charset charset=Charset.forName(args[1]);\n  StringBuilder declaration=new StringBuilder();\n  declaration.append(\"new byte[] { \");\n  for (  byte b : text.getBytes(charset)) {\n    declaration.append(\"(byte) 0x\");\n    declaration.append(Integer.toHexString(b & 0xFF));\n    declaration.append(\", \");\n  }\n  declaration.append('}');\n  System.out.println(declaration);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 74,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 702,
        "startLineNumber" : 53,
        "startColumnNumber" : 2,
        "endLineNumber" : 70,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Utility for printing out a string in given encoding as a Java statement, since it's better to write that into the Java source file rather than risk character encoding issues in the  source file itself\n */\npublic static void main(String[] args){\n  String text=args[0];\n  Charset charset=Charset.forName(args[1]);\n  StringBuilder declaration=new StringBuilder();\n  declaration.append(\"new byte[] { \");\n  for (  byte b : text.getBytes(charset)) {\n    declaration.append(\"(byte) 0x\");\n    declaration.append(Integer.toHexString(b & 0xFF));\n    declaration.append(\", \");\n  }\n  declaration.append('}');\n  System.out.println(declaration);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 86,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 59,
        "startColumnNumber" : 4,
        "endLineNumber" : 59,
        "endColumnNumber" : 26
      },
      "nodeContext" : "String text=args[0];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 59,
    "startColumnNumber" : 23,
    "endLineNumber" : 59,
    "endColumnNumber" : 24
  } ],
  "layoutRelationDataList" : [ ]
}