{
  "id" : 31,
  "expression" : "new MetricsValueMatcher()",
  "projectName" : "apache@skywalking",
  "commitID" : "16b51d55baec4f779f312e07081d1397addbcfe9",
  "filePath" : "/test/e2e/e2e-test/src/test/java/org/apache/skywalking/e2e/zabbix/ZabbixE2E.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new MetricsValueMatcher()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 96,
      "startColumnNumber" : 56,
      "endLineNumber" : 96,
      "endColumnNumber" : 81
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 96,
        "startColumnNumber" : 38,
        "endLineNumber" : 96,
        "endColumnNumber" : 81
      },
      "nodeContext" : "greaterThanZero=new MetricsValueMatcher()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 96,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 82
      },
      "nodeContext" : "final MetricsValueMatcher greaterThanZero=new MetricsValueMatcher();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1251,
        "startLineNumber" : 75,
        "startColumnNumber" : 86,
        "endLineNumber" : 100,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String meterName=entry.getKey();\n  List<String> labels=entry.getValue();\n  LOGGER.info(\"verifying zabbix meter: {}\",meterName);\n  List<ReadMetrics> metrics=null;\n  try {\n    metrics=graphql.readLabeledMetrics(new ReadLabeledMetricsQuery().stepByMinute().metricsName(meterName).serviceName(service.getLabel()).scope(\"Service\").instanceName(\"\").labels(labels));\n  }\n catch (  Exception e) {\n    LOGGER.error(\"Error\",e);\n  }\n  LOGGER.info(\"zabbix metrics: {}\",metrics);\n  Metrics allValues=new Metrics();\n  for (  ReadMetrics readMetrics : metrics) {\n    allValues.getValues().addAll(readMetrics.getValues().getValues());\n  }\n  final AtLeastOneOfMetricsMatcher instanceRespTimeMatcher=new AtLeastOneOfMetricsMatcher();\n  final MetricsValueMatcher greaterThanZero=new MetricsValueMatcher();\n  greaterThanZero.setValue(\"gt 0\");\n  instanceRespTimeMatcher.setValue(greaterThanZero);\n  instanceRespTimeMatcher.verify(allValues);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 142,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1329,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 100,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (Map.Entry<String,List<String>> entry : SIMPLE_ZABBIX_METERS.entrySet()) {\n  String meterName=entry.getKey();\n  List<String> labels=entry.getValue();\n  LOGGER.info(\"verifying zabbix meter: {}\",meterName);\n  List<ReadMetrics> metrics=null;\n  try {\n    metrics=graphql.readLabeledMetrics(new ReadLabeledMetricsQuery().stepByMinute().metricsName(meterName).serviceName(service.getLabel()).scope(\"Service\").instanceName(\"\").labels(labels));\n  }\n catch (  Exception e) {\n    LOGGER.error(\"Error\",e);\n  }\n  LOGGER.info(\"zabbix metrics: {}\",metrics);\n  Metrics allValues=new Metrics();\n  for (  ReadMetrics readMetrics : metrics) {\n    allValues.getValues().addAll(readMetrics.getValues().getValues());\n  }\n  final AtLeastOneOfMetricsMatcher instanceRespTimeMatcher=new AtLeastOneOfMetricsMatcher();\n  final MetricsValueMatcher greaterThanZero=new MetricsValueMatcher();\n  greaterThanZero.setValue(\"gt 0\");\n  instanceRespTimeMatcher.setValue(greaterThanZero);\n  instanceRespTimeMatcher.verify(allValues);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 160,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1747,
        "startLineNumber" : 66,
        "startColumnNumber" : 40,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<Service> services=graphql.services(new ServicesQuery().start(startTime).end(now()));\n  services=services.stream().filter(s -> !s.getLabel().equals(\"oap::oap-server\")).collect(Collectors.toList());\n  LOGGER.info(\"services: {}\",services);\n  load(\"expected/zabbix/services.yml\").as(ServicesMatcher.class).verify(services);\n  Service service=services.get(0);\n  for (  Map.Entry<String,List<String>> entry : SIMPLE_ZABBIX_METERS.entrySet()) {\n    String meterName=entry.getKey();\n    List<String> labels=entry.getValue();\n    LOGGER.info(\"verifying zabbix meter: {}\",meterName);\n    List<ReadMetrics> metrics=null;\n    try {\n      metrics=graphql.readLabeledMetrics(new ReadLabeledMetricsQuery().stepByMinute().metricsName(meterName).serviceName(service.getLabel()).scope(\"Service\").instanceName(\"\").labels(labels));\n    }\n catch (    Exception e) {\n      LOGGER.error(\"Error\",e);\n    }\n    LOGGER.info(\"zabbix metrics: {}\",metrics);\n    Metrics allValues=new Metrics();\n    for (    ReadMetrics readMetrics : metrics) {\n      allValues.getValues().addAll(readMetrics.getValues().getValues());\n    }\n    final AtLeastOneOfMetricsMatcher instanceRespTimeMatcher=new AtLeastOneOfMetricsMatcher();\n    final MetricsValueMatcher greaterThanZero=new MetricsValueMatcher();\n    greaterThanZero.setValue(\"gt 0\");\n    instanceRespTimeMatcher.setValue(greaterThanZero);\n    instanceRespTimeMatcher.verify(allValues);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 232,
      "astHeight" : 17
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1802,
        "startLineNumber" : 65,
        "startColumnNumber" : 4,
        "endLineNumber" : 101,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@RetryableTest void testMetrics() throws Exception {\n  List<Service> services=graphql.services(new ServicesQuery().start(startTime).end(now()));\n  services=services.stream().filter(s -> !s.getLabel().equals(\"oap::oap-server\")).collect(Collectors.toList());\n  LOGGER.info(\"services: {}\",services);\n  load(\"expected/zabbix/services.yml\").as(ServicesMatcher.class).verify(services);\n  Service service=services.get(0);\n  for (  Map.Entry<String,List<String>> entry : SIMPLE_ZABBIX_METERS.entrySet()) {\n    String meterName=entry.getKey();\n    List<String> labels=entry.getValue();\n    LOGGER.info(\"verifying zabbix meter: {}\",meterName);\n    List<ReadMetrics> metrics=null;\n    try {\n      metrics=graphql.readLabeledMetrics(new ReadLabeledMetricsQuery().stepByMinute().metricsName(meterName).serviceName(service.getLabel()).scope(\"Service\").instanceName(\"\").labels(labels));\n    }\n catch (    Exception e) {\n      LOGGER.error(\"Error\",e);\n    }\n    LOGGER.info(\"zabbix metrics: {}\",metrics);\n    Metrics allValues=new Metrics();\n    for (    ReadMetrics readMetrics : metrics) {\n      allValues.getValues().addAll(readMetrics.getValues().getValues());\n    }\n    final AtLeastOneOfMetricsMatcher instanceRespTimeMatcher=new AtLeastOneOfMetricsMatcher();\n    final MetricsValueMatcher greaterThanZero=new MetricsValueMatcher();\n    greaterThanZero.setValue(\"gt 0\");\n    instanceRespTimeMatcher.setValue(greaterThanZero);\n    instanceRespTimeMatcher.verify(allValues);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 239,
      "astHeight" : 18
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 96,
        "startColumnNumber" : 12,
        "endLineNumber" : 96,
        "endColumnNumber" : 82
      },
      "nodeContext" : "final MetricsValueMatcher greaterThanZero=new MetricsValueMatcher();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "org.apache.skywalking.e2e.metrics.MetricsValueMatcher"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 96,
    "startColumnNumber" : 56,
    "endLineNumber" : 96,
    "endColumnNumber" : 81
  } ],
  "layoutRelationDataList" : [ ]
}