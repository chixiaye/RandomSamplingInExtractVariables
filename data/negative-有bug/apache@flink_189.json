{
  "id" : 189,
  "expression" : "0",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-runtime/src/test/java/org/apache/flink/runtime/taskexecutor/TaskExecutorSubmissionTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 120,
      "startColumnNumber" : 39,
      "endLineNumber" : 120,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 120,
        "startColumnNumber" : 12,
        "endLineNumber" : 120,
        "endColumnNumber" : 89
      },
      "nodeContext" : "taskSlotTable.allocateSlot(0,jobId,tdd.getAllocationId(),Time.seconds(60))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 12,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 120,
        "startColumnNumber" : 12,
        "endLineNumber" : 120,
        "endColumnNumber" : 90
      },
      "nodeContext" : "taskSlotTable.allocateSlot(0,jobId,tdd.getAllocationId(),Time.seconds(60));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 357,
        "startLineNumber" : 116,
        "startColumnNumber" : 34,
        "endLineNumber" : 124,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  TaskExecutorGateway tmGateway=env.getTaskExecutorGateway();\n  TaskSlotTable taskSlotTable=env.getTaskSlotTable();\n  taskSlotTable.allocateSlot(0,jobId,tdd.getAllocationId(),Time.seconds(60));\n  tmGateway.submitTask(tdd,env.getJobMasterId(),timeout).get();\n  taskRunningFuture.get();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 672,
        "startLineNumber" : 111,
        "startColumnNumber" : 8,
        "endLineNumber" : 124,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (TaskSubmissionTestEnvironment env=new TaskSubmissionTestEnvironment.Builder(jobId).setSlotSize(1).addTaskManagerActionListener(eid,ExecutionState.RUNNING,taskRunningFuture).build()){\n  TaskExecutorGateway tmGateway=env.getTaskExecutorGateway();\n  TaskSlotTable taskSlotTable=env.getTaskSlotTable();\n  taskSlotTable.allocateSlot(0,jobId,tdd.getAllocationId(),Time.seconds(60));\n  tmGateway.submitTask(tdd,env.getJobMasterId(),timeout).get();\n  taskRunningFuture.get();\n}\n ",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 69,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1014,
        "startLineNumber" : 102,
        "startColumnNumber" : 54,
        "endLineNumber" : 125,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  final ExecutionAttemptID eid=new ExecutionAttemptID();\n  final TaskDeploymentDescriptor tdd=createTestTaskDeploymentDescriptor(\"test task\",eid,FutureCompletingInvokable.class);\n  final CompletableFuture<Void> taskRunningFuture=new CompletableFuture<>();\n  try (TaskSubmissionTestEnvironment env=new TaskSubmissionTestEnvironment.Builder(jobId).setSlotSize(1).addTaskManagerActionListener(eid,ExecutionState.RUNNING,taskRunningFuture).build()){\n    TaskExecutorGateway tmGateway=env.getTaskExecutorGateway();\n    TaskSlotTable taskSlotTable=env.getTaskSlotTable();\n    taskSlotTable.allocateSlot(0,jobId,tdd.getAllocationId(),Time.seconds(60));\n    tmGateway.submitTask(tdd,env.getJobMasterId(),timeout).get();\n    taskRunningFuture.get();\n  }\n }\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1189,
        "startLineNumber" : 98,
        "startColumnNumber" : 4,
        "endLineNumber" : 125,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Tests that we can submit a task to the TaskManager given that we've allocated a slot there.\n */\n@Test public void testTaskSubmission() throws Exception {\n  final ExecutionAttemptID eid=new ExecutionAttemptID();\n  final TaskDeploymentDescriptor tdd=createTestTaskDeploymentDescriptor(\"test task\",eid,FutureCompletingInvokable.class);\n  final CompletableFuture<Void> taskRunningFuture=new CompletableFuture<>();\n  try (TaskSubmissionTestEnvironment env=new TaskSubmissionTestEnvironment.Builder(jobId).setSlotSize(1).addTaskManagerActionListener(eid,ExecutionState.RUNNING,taskRunningFuture).build()){\n    TaskExecutorGateway tmGateway=env.getTaskExecutorGateway();\n    TaskSlotTable taskSlotTable=env.getTaskSlotTable();\n    taskSlotTable.allocateSlot(0,jobId,tdd.getAllocationId(),Time.seconds(60));\n    tmGateway.submitTask(tdd,env.getJobMasterId(),timeout).get();\n    taskRunningFuture.get();\n  }\n }\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 114,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 120,
        "startColumnNumber" : 12,
        "endLineNumber" : 120,
        "endColumnNumber" : 90
      },
      "nodeContext" : "taskSlotTable.allocateSlot(0,jobId,tdd.getAllocationId(),Time.seconds(60));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 120,
    "startColumnNumber" : 39,
    "endLineNumber" : 120,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ ]
}