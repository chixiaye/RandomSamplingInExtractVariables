{
  "id" : 379,
  "expression" : "TestConsumerConfiguration.class",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-config/dubbo-config-spring/src/test/java/org/apache/dubbo/config/spring/context/annotation/EnableDubboTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "TestConsumerConfiguration.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 90,
      "startColumnNumber" : 58,
      "endLineNumber" : 90,
      "endColumnNumber" : 89
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 82,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 90
      },
      "nodeContext" : "context.register(TestProviderConfiguration.class,TestConsumerConfiguration.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 91
      },
      "nodeContext" : "context.register(TestProviderConfiguration.class,TestConsumerConfiguration.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1844,
        "startLineNumber" : 88,
        "startColumnNumber" : 31,
        "endLineNumber" : 143,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  context.register(TestProviderConfiguration.class,TestConsumerConfiguration.class);\n  context.refresh();\n  TestConsumerConfiguration consumerConfiguration=context.getBean(TestConsumerConfiguration.class);\n  DemoService demoService=consumerConfiguration.getDemoService();\n  String value=demoService.sayName(\"Mercy\");\n  Assertions.assertEquals(\"Hello,Mercy\",value);\n  DemoService autowiredDemoService=consumerConfiguration.getAutowiredDemoService();\n  Assertions.assertEquals(\"Hello,Mercy\",autowiredDemoService.sayName(\"Mercy\"));\n  DemoService autowiredReferDemoService=consumerConfiguration.getAutowiredReferDemoService();\n  Assertions.assertEquals(\"Hello,Mercy\",autowiredReferDemoService.sayName(\"Mercy\"));\n  TestConsumerConfiguration.Child child=context.getBean(TestConsumerConfiguration.Child.class);\n  demoService=child.getDemoServiceFromChild();\n  Assertions.assertNotNull(demoService);\n  value=demoService.sayName(\"Mercy\");\n  Assertions.assertEquals(\"Hello,Mercy\",value);\n  demoService=child.getDemoServiceFromParent();\n  Assertions.assertNotNull(demoService);\n  value=demoService.sayName(\"Mercy\");\n  Assertions.assertEquals(\"Hello,Mercy\",value);\n  demoService=child.getDemoServiceFromAncestor();\n  Assertions.assertNotNull(demoService);\n  value=demoService.sayName(\"Mercy\");\n  Assertions.assertEquals(\"Hello,Mercy\",value);\n  RegistryConfig registryConfig=context.getBean(\"my-registry2\",RegistryConfig.class);\n  Assertions.assertEquals(\"N/A\",registryConfig.getAddress());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 190,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1881,
        "startLineNumber" : 87,
        "startColumnNumber" : 4,
        "endLineNumber" : 143,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testConsumer(){\n  context.register(TestProviderConfiguration.class,TestConsumerConfiguration.class);\n  context.refresh();\n  TestConsumerConfiguration consumerConfiguration=context.getBean(TestConsumerConfiguration.class);\n  DemoService demoService=consumerConfiguration.getDemoService();\n  String value=demoService.sayName(\"Mercy\");\n  Assertions.assertEquals(\"Hello,Mercy\",value);\n  DemoService autowiredDemoService=consumerConfiguration.getAutowiredDemoService();\n  Assertions.assertEquals(\"Hello,Mercy\",autowiredDemoService.sayName(\"Mercy\"));\n  DemoService autowiredReferDemoService=consumerConfiguration.getAutowiredReferDemoService();\n  Assertions.assertEquals(\"Hello,Mercy\",autowiredReferDemoService.sayName(\"Mercy\"));\n  TestConsumerConfiguration.Child child=context.getBean(TestConsumerConfiguration.Child.class);\n  demoService=child.getDemoServiceFromChild();\n  Assertions.assertNotNull(demoService);\n  value=demoService.sayName(\"Mercy\");\n  Assertions.assertEquals(\"Hello,Mercy\",value);\n  demoService=child.getDemoServiceFromParent();\n  Assertions.assertNotNull(demoService);\n  value=demoService.sayName(\"Mercy\");\n  Assertions.assertEquals(\"Hello,Mercy\",value);\n  demoService=child.getDemoServiceFromAncestor();\n  Assertions.assertNotNull(demoService);\n  value=demoService.sayName(\"Mercy\");\n  Assertions.assertEquals(\"Hello,Mercy\",value);\n  RegistryConfig registryConfig=context.getBean(\"my-registry2\",RegistryConfig.class);\n  Assertions.assertEquals(\"N/A\",registryConfig.getAddress());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 196,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 83,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 90,
        "endColumnNumber" : 91
      },
      "nodeContext" : "context.register(TestProviderConfiguration.class,TestConsumerConfiguration.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<org.apache.dubbo.config.spring.context.annotation.consumer.test.TestConsumerConfiguration>"
  }, {
    "nodeContext" : "TestConsumerConfiguration.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 93,
      "startColumnNumber" : 74,
      "endLineNumber" : 93,
      "endColumnNumber" : 105
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 93,
        "startColumnNumber" : 58,
        "endLineNumber" : 93,
        "endColumnNumber" : 106
      },
      "nodeContext" : "context.getBean(TestConsumerConfiguration.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 72,
        "startLineNumber" : 93,
        "startColumnNumber" : 34,
        "endLineNumber" : 93,
        "endColumnNumber" : 106
      },
      "nodeContext" : "consumerConfiguration=context.getBean(TestConsumerConfiguration.class)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 107
      },
      "nodeContext" : "TestConsumerConfiguration consumerConfiguration=context.getBean(TestConsumerConfiguration.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1844,
        "startLineNumber" : 88,
        "startColumnNumber" : 31,
        "endLineNumber" : 143,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  context.register(TestProviderConfiguration.class,TestConsumerConfiguration.class);\n  context.refresh();\n  TestConsumerConfiguration consumerConfiguration=context.getBean(TestConsumerConfiguration.class);\n  DemoService demoService=consumerConfiguration.getDemoService();\n  String value=demoService.sayName(\"Mercy\");\n  Assertions.assertEquals(\"Hello,Mercy\",value);\n  DemoService autowiredDemoService=consumerConfiguration.getAutowiredDemoService();\n  Assertions.assertEquals(\"Hello,Mercy\",autowiredDemoService.sayName(\"Mercy\"));\n  DemoService autowiredReferDemoService=consumerConfiguration.getAutowiredReferDemoService();\n  Assertions.assertEquals(\"Hello,Mercy\",autowiredReferDemoService.sayName(\"Mercy\"));\n  TestConsumerConfiguration.Child child=context.getBean(TestConsumerConfiguration.Child.class);\n  demoService=child.getDemoServiceFromChild();\n  Assertions.assertNotNull(demoService);\n  value=demoService.sayName(\"Mercy\");\n  Assertions.assertEquals(\"Hello,Mercy\",value);\n  demoService=child.getDemoServiceFromParent();\n  Assertions.assertNotNull(demoService);\n  value=demoService.sayName(\"Mercy\");\n  Assertions.assertEquals(\"Hello,Mercy\",value);\n  demoService=child.getDemoServiceFromAncestor();\n  Assertions.assertNotNull(demoService);\n  value=demoService.sayName(\"Mercy\");\n  Assertions.assertEquals(\"Hello,Mercy\",value);\n  RegistryConfig registryConfig=context.getBean(\"my-registry2\",RegistryConfig.class);\n  Assertions.assertEquals(\"N/A\",registryConfig.getAddress());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 190,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1881,
        "startLineNumber" : 87,
        "startColumnNumber" : 4,
        "endLineNumber" : 143,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testConsumer(){\n  context.register(TestProviderConfiguration.class,TestConsumerConfiguration.class);\n  context.refresh();\n  TestConsumerConfiguration consumerConfiguration=context.getBean(TestConsumerConfiguration.class);\n  DemoService demoService=consumerConfiguration.getDemoService();\n  String value=demoService.sayName(\"Mercy\");\n  Assertions.assertEquals(\"Hello,Mercy\",value);\n  DemoService autowiredDemoService=consumerConfiguration.getAutowiredDemoService();\n  Assertions.assertEquals(\"Hello,Mercy\",autowiredDemoService.sayName(\"Mercy\"));\n  DemoService autowiredReferDemoService=consumerConfiguration.getAutowiredReferDemoService();\n  Assertions.assertEquals(\"Hello,Mercy\",autowiredReferDemoService.sayName(\"Mercy\"));\n  TestConsumerConfiguration.Child child=context.getBean(TestConsumerConfiguration.Child.class);\n  demoService=child.getDemoServiceFromChild();\n  Assertions.assertNotNull(demoService);\n  value=demoService.sayName(\"Mercy\");\n  Assertions.assertEquals(\"Hello,Mercy\",value);\n  demoService=child.getDemoServiceFromParent();\n  Assertions.assertNotNull(demoService);\n  value=demoService.sayName(\"Mercy\");\n  Assertions.assertEquals(\"Hello,Mercy\",value);\n  demoService=child.getDemoServiceFromAncestor();\n  Assertions.assertNotNull(demoService);\n  value=demoService.sayName(\"Mercy\");\n  Assertions.assertEquals(\"Hello,Mercy\",value);\n  RegistryConfig registryConfig=context.getBean(\"my-registry2\",RegistryConfig.class);\n  Assertions.assertEquals(\"N/A\",registryConfig.getAddress());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 196,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 99,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 107
      },
      "nodeContext" : "TestConsumerConfiguration consumerConfiguration=context.getBean(TestConsumerConfiguration.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<org.apache.dubbo.config.spring.context.annotation.consumer.test.TestConsumerConfiguration>"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 90,
    "startColumnNumber" : 58,
    "endLineNumber" : 90,
    "endColumnNumber" : 89
  }, {
    "charLength" : 31,
    "startLineNumber" : 93,
    "startColumnNumber" : 74,
    "endLineNumber" : 93,
    "endColumnNumber" : 105
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}