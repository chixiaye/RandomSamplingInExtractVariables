{
  "id" : 167,
  "expression" : "readOnlyPath",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/store/src/test/java/org/apache/rocketmq/store/dledger/DLedgerMultiPathTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "readOnlyPath",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 69,
      "startColumnNumber" : 115,
      "endLineNumber" : 69,
      "endColumnNumber" : 127
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 81,
        "startLineNumber" : 69,
        "startColumnNumber" : 47,
        "endLineNumber" : 69,
        "endColumnNumber" : 128
      },
      "nodeContext" : "createDLedgerMessageStore(base,group,\"n0\",peers,multiStorePath,readOnlyPath)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 96,
        "startLineNumber" : 69,
        "startColumnNumber" : 32,
        "endLineNumber" : 69,
        "endColumnNumber" : 128
      },
      "nodeContext" : "dLedgerStore=createDLedgerMessageStore(base,group,\"n0\",peers,multiStorePath,readOnlyPath)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 69,
        "startColumnNumber" : 12,
        "endLineNumber" : 69,
        "endColumnNumber" : 129
      },
      "nodeContext" : "DefaultMessageStore dLedgerStore=createDLedgerMessageStore(base,group,\"n0\",peers,multiStorePath,readOnlyPath);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1615,
        "startLineNumber" : 61,
        "startColumnNumber" : 8,
        "endLineNumber" : 84,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String readOnlyPath=base + \"/multi/a/\" + MessageStoreConfig.MULTI_PATH_SPLITTER+ base+ \"/multi/b/\"+ MessageStoreConfig.MULTI_PATH_SPLITTER;\n  multiStorePath=base + \"/multi/c/\" + MessageStoreConfig.MULTI_PATH_SPLITTER+ base+ \"/multi/d/\"+ MessageStoreConfig.MULTI_PATH_SPLITTER;\n  DefaultMessageStore dLedgerStore=createDLedgerMessageStore(base,group,\"n0\",peers,multiStorePath,readOnlyPath);\n  DLedgerCommitLog dLedgerCommitLog=(DLedgerCommitLog)dLedgerStore.getCommitLog();\n  Boolean success=await().atMost(Duration.ofSeconds(4)).until(() -> dLedgerCommitLog.getdLedgerServer().getMemberState().isLeader(),item -> item);\n  Assert.assertTrue(success);\n  doGetMessages(dLedgerStore,topic,0,1000,0);\n  long beforeSize=Objects.requireNonNull(new File(base + \"/multi/a/\").listFiles()).length;\n  doPutMessages(dLedgerStore,topic,0,1000,1000);\n  await().atMost(Duration.ofSeconds(10)).until(() -> 2000 == dLedgerStore.getMaxOffsetInQueue(topic,0));\n  long afterSize=Objects.requireNonNull(new File(base + \"/multi/a/\").listFiles()).length;\n  Assert.assertEquals(beforeSize,afterSize);\n  Assert.assertEquals(0,dLedgerStore.getMinOffsetInQueue(topic,0));\n  Assert.assertEquals(2000,dLedgerStore.getMaxOffsetInQueue(topic,0));\n  Assert.assertEquals(0,dLedgerStore.dispatchBehindBytes());\n  dLedgerStore.shutdown();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 194,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3217,
        "startLineNumber" : 37,
        "startColumnNumber" : 56,
        "endLineNumber" : 86,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String base=createBaseDir();\n  String topic=UUID.randomUUID().toString();\n  String peers=String.format(\"n0-localhost:%d\",nextPort());\n  String group=UUID.randomUUID().toString();\n  String multiStorePath=base + \"/multi/a/\" + MessageStoreConfig.MULTI_PATH_SPLITTER+ base+ \"/multi/b/\"+ MessageStoreConfig.MULTI_PATH_SPLITTER+ base+ \"/multi/c/\"+ MessageStoreConfig.MULTI_PATH_SPLITTER;\n{\n    DefaultMessageStore dLedgerStore=createDLedgerMessageStore(base,group,\"n0\",peers,multiStorePath,null);\n    DLedgerCommitLog dLedgerCommitLog=(DLedgerCommitLog)dLedgerStore.getCommitLog();\n    Boolean success=await().atMost(Duration.ofSeconds(4)).until(() -> dLedgerCommitLog.getdLedgerServer().getMemberState().isLeader(),item -> item);\n    Assert.assertTrue(success);\n    doPutMessages(dLedgerStore,topic,0,1000,0);\n    await().atMost(Duration.ofSeconds(10)).until(() -> 1000 == dLedgerStore.getMaxOffsetInQueue(topic,0));\n    Assert.assertEquals(11,dLedgerStore.getMaxPhyOffset() / dLedgerStore.getMessageStoreConfig().getMappedFileSizeCommitLog());\n    Assert.assertEquals(0,dLedgerStore.getMinOffsetInQueue(topic,0));\n    Assert.assertEquals(1000,dLedgerStore.getMaxOffsetInQueue(topic,0));\n    Assert.assertEquals(0,dLedgerStore.dispatchBehindBytes());\n    doGetMessages(dLedgerStore,topic,0,1000,0);\n    dLedgerStore.shutdown();\n  }\n{\n    String readOnlyPath=base + \"/multi/a/\" + MessageStoreConfig.MULTI_PATH_SPLITTER+ base+ \"/multi/b/\"+ MessageStoreConfig.MULTI_PATH_SPLITTER;\n    multiStorePath=base + \"/multi/c/\" + MessageStoreConfig.MULTI_PATH_SPLITTER+ base+ \"/multi/d/\"+ MessageStoreConfig.MULTI_PATH_SPLITTER;\n    DefaultMessageStore dLedgerStore=createDLedgerMessageStore(base,group,\"n0\",peers,multiStorePath,readOnlyPath);\n    DLedgerCommitLog dLedgerCommitLog=(DLedgerCommitLog)dLedgerStore.getCommitLog();\n    Boolean success=await().atMost(Duration.ofSeconds(4)).until(() -> dLedgerCommitLog.getdLedgerServer().getMemberState().isLeader(),item -> item);\n    Assert.assertTrue(success);\n    doGetMessages(dLedgerStore,topic,0,1000,0);\n    long beforeSize=Objects.requireNonNull(new File(base + \"/multi/a/\").listFiles()).length;\n    doPutMessages(dLedgerStore,topic,0,1000,1000);\n    await().atMost(Duration.ofSeconds(10)).until(() -> 2000 == dLedgerStore.getMaxOffsetInQueue(topic,0));\n    long afterSize=Objects.requireNonNull(new File(base + \"/multi/a/\").listFiles()).length;\n    Assert.assertEquals(beforeSize,afterSize);\n    Assert.assertEquals(0,dLedgerStore.getMinOffsetInQueue(topic,0));\n    Assert.assertEquals(2000,dLedgerStore.getMaxOffsetInQueue(topic,0));\n    Assert.assertEquals(0,dLedgerStore.dispatchBehindBytes());\n    dLedgerStore.shutdown();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 392,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3280,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 86,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void multiDirsStorageTest() throws Exception {\n  String base=createBaseDir();\n  String topic=UUID.randomUUID().toString();\n  String peers=String.format(\"n0-localhost:%d\",nextPort());\n  String group=UUID.randomUUID().toString();\n  String multiStorePath=base + \"/multi/a/\" + MessageStoreConfig.MULTI_PATH_SPLITTER+ base+ \"/multi/b/\"+ MessageStoreConfig.MULTI_PATH_SPLITTER+ base+ \"/multi/c/\"+ MessageStoreConfig.MULTI_PATH_SPLITTER;\n{\n    DefaultMessageStore dLedgerStore=createDLedgerMessageStore(base,group,\"n0\",peers,multiStorePath,null);\n    DLedgerCommitLog dLedgerCommitLog=(DLedgerCommitLog)dLedgerStore.getCommitLog();\n    Boolean success=await().atMost(Duration.ofSeconds(4)).until(() -> dLedgerCommitLog.getdLedgerServer().getMemberState().isLeader(),item -> item);\n    Assert.assertTrue(success);\n    doPutMessages(dLedgerStore,topic,0,1000,0);\n    await().atMost(Duration.ofSeconds(10)).until(() -> 1000 == dLedgerStore.getMaxOffsetInQueue(topic,0));\n    Assert.assertEquals(11,dLedgerStore.getMaxPhyOffset() / dLedgerStore.getMessageStoreConfig().getMappedFileSizeCommitLog());\n    Assert.assertEquals(0,dLedgerStore.getMinOffsetInQueue(topic,0));\n    Assert.assertEquals(1000,dLedgerStore.getMaxOffsetInQueue(topic,0));\n    Assert.assertEquals(0,dLedgerStore.dispatchBehindBytes());\n    doGetMessages(dLedgerStore,topic,0,1000,0);\n    dLedgerStore.shutdown();\n  }\n{\n    String readOnlyPath=base + \"/multi/a/\" + MessageStoreConfig.MULTI_PATH_SPLITTER+ base+ \"/multi/b/\"+ MessageStoreConfig.MULTI_PATH_SPLITTER;\n    multiStorePath=base + \"/multi/c/\" + MessageStoreConfig.MULTI_PATH_SPLITTER+ base+ \"/multi/d/\"+ MessageStoreConfig.MULTI_PATH_SPLITTER;\n    DefaultMessageStore dLedgerStore=createDLedgerMessageStore(base,group,\"n0\",peers,multiStorePath,readOnlyPath);\n    DLedgerCommitLog dLedgerCommitLog=(DLedgerCommitLog)dLedgerStore.getCommitLog();\n    Boolean success=await().atMost(Duration.ofSeconds(4)).until(() -> dLedgerCommitLog.getdLedgerServer().getMemberState().isLeader(),item -> item);\n    Assert.assertTrue(success);\n    doGetMessages(dLedgerStore,topic,0,1000,0);\n    long beforeSize=Objects.requireNonNull(new File(base + \"/multi/a/\").listFiles()).length;\n    doPutMessages(dLedgerStore,topic,0,1000,1000);\n    await().atMost(Duration.ofSeconds(10)).until(() -> 2000 == dLedgerStore.getMaxOffsetInQueue(topic,0));\n    long afterSize=Objects.requireNonNull(new File(base + \"/multi/a/\").listFiles()).length;\n    Assert.assertEquals(beforeSize,afterSize);\n    Assert.assertEquals(0,dLedgerStore.getMinOffsetInQueue(topic,0));\n    Assert.assertEquals(2000,dLedgerStore.getMaxOffsetInQueue(topic,0));\n    Assert.assertEquals(0,dLedgerStore.dispatchBehindBytes());\n    dLedgerStore.shutdown();\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 400,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 69,
        "startColumnNumber" : 12,
        "endLineNumber" : 69,
        "endColumnNumber" : 129
      },
      "nodeContext" : "DefaultMessageStore dLedgerStore=createDLedgerMessageStore(base,group,\"n0\",peers,multiStorePath,readOnlyPath);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 69,
    "startColumnNumber" : 115,
    "endLineNumber" : 69,
    "endColumnNumber" : 127
  } ],
  "layoutRelationDataList" : [ ]
}