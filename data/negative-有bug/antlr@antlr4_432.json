{
  "id" : 432,
  "expression" : "isr",
  "projectName" : "antlr@antlr4",
  "commitID" : "f2b93e550cd912be3973743d09206db98f4092c9",
  "filePath" : "/runtime/Java/src/org/antlr/v4/runtime/misc/Utils.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "isr",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 116,
      "startColumnNumber" : 11,
      "endLineNumber" : 116,
      "endColumnNumber" : 14
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 116,
        "startColumnNumber" : 11,
        "endLineNumber" : 116,
        "endColumnNumber" : 25
      },
      "nodeContext" : "isr.read(data)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 116,
        "startColumnNumber" : 7,
        "endLineNumber" : 116,
        "endColumnNumber" : 25
      },
      "nodeContext" : "n=isr.read(data)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 116,
        "startColumnNumber" : 3,
        "endLineNumber" : 116,
        "endColumnNumber" : 26
      },
      "nodeContext" : "int n=isr.read(data);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 130,
        "startLineNumber" : 114,
        "startColumnNumber" : 6,
        "endLineNumber" : 120,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  data=new char[size];\n  int n=isr.read(data);\n  if (n < data.length) {\n    data=Arrays.copyOf(data,n);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 32,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 169,
        "startLineNumber" : 114,
        "startColumnNumber" : 2,
        "endLineNumber" : 123,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  data=new char[size];\n  int n=isr.read(data);\n  if (n < data.length) {\n    data=Arrays.copyOf(data,n);\n  }\n}\n  finally {\n  isr.close();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 38,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 495,
        "startLineNumber" : 102,
        "startColumnNumber" : 84,
        "endLineNumber" : 125,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  File f=new File(fileName);\n  int size=(int)f.length();\n  InputStreamReader isr;\n  FileInputStream fis=new FileInputStream(fileName);\n  if (encoding != null) {\n    isr=new InputStreamReader(fis,encoding);\n  }\n else {\n    isr=new InputStreamReader(fis);\n  }\n  char[] data=null;\n  try {\n    data=new char[size];\n    int n=isr.read(data);\n    if (n < data.length) {\n      data=Arrays.copyOf(data,n);\n    }\n  }\n  finally {\n    isr.close();\n  }\n  return data;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 578,
        "startLineNumber" : 102,
        "startColumnNumber" : 1,
        "endLineNumber" : 125,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public static char[] readFile(String fileName,String encoding) throws IOException {\n  File f=new File(fileName);\n  int size=(int)f.length();\n  InputStreamReader isr;\n  FileInputStream fis=new FileInputStream(fileName);\n  if (encoding != null) {\n    isr=new InputStreamReader(fis,encoding);\n  }\n else {\n    isr=new InputStreamReader(fis);\n  }\n  char[] data=null;\n  try {\n    data=new char[size];\n    int n=isr.read(data);\n    if (n < data.length) {\n      data=Arrays.copyOf(data,n);\n    }\n  }\n  finally {\n    isr.close();\n  }\n  return data;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 118,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 116,
        "startColumnNumber" : 3,
        "endLineNumber" : 116,
        "endColumnNumber" : 26
      },
      "nodeContext" : "int n=isr.read(data);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.io.InputStreamReader"
  }, {
    "nodeContext" : "isr",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 122,
      "startColumnNumber" : 3,
      "endLineNumber" : 122,
      "endColumnNumber" : 6
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 122,
        "startColumnNumber" : 3,
        "endLineNumber" : 122,
        "endColumnNumber" : 14
      },
      "nodeContext" : "isr.close()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 122,
        "startColumnNumber" : 3,
        "endLineNumber" : 122,
        "endColumnNumber" : 15
      },
      "nodeContext" : "isr.close();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,finally]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 121,
        "startColumnNumber" : 10,
        "endLineNumber" : 123,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  isr.close();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 5,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 169,
        "startLineNumber" : 114,
        "startColumnNumber" : 2,
        "endLineNumber" : 123,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  data=new char[size];\n  int n=isr.read(data);\n  if (n < data.length) {\n    data=Arrays.copyOf(data,n);\n  }\n}\n  finally {\n  isr.close();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 38,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 495,
        "startLineNumber" : 102,
        "startColumnNumber" : 84,
        "endLineNumber" : 125,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  File f=new File(fileName);\n  int size=(int)f.length();\n  InputStreamReader isr;\n  FileInputStream fis=new FileInputStream(fileName);\n  if (encoding != null) {\n    isr=new InputStreamReader(fis,encoding);\n  }\n else {\n    isr=new InputStreamReader(fis);\n  }\n  char[] data=null;\n  try {\n    data=new char[size];\n    int n=isr.read(data);\n    if (n < data.length) {\n      data=Arrays.copyOf(data,n);\n    }\n  }\n  finally {\n    isr.close();\n  }\n  return data;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 578,
        "startLineNumber" : 102,
        "startColumnNumber" : 1,
        "endLineNumber" : 125,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public static char[] readFile(String fileName,String encoding) throws IOException {\n  File f=new File(fileName);\n  int size=(int)f.length();\n  InputStreamReader isr;\n  FileInputStream fis=new FileInputStream(fileName);\n  if (encoding != null) {\n    isr=new InputStreamReader(fis,encoding);\n  }\n else {\n    isr=new InputStreamReader(fis);\n  }\n  char[] data=null;\n  try {\n    data=new char[size];\n    int n=isr.read(data);\n    if (n < data.length) {\n      data=Arrays.copyOf(data,n);\n    }\n  }\n  finally {\n    isr.close();\n  }\n  return data;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 118,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 122,
        "startColumnNumber" : 3,
        "endLineNumber" : 122,
        "endColumnNumber" : 15
      },
      "nodeContext" : "isr.close();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.io.InputStreamReader"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 116,
    "startColumnNumber" : 11,
    "endLineNumber" : 116,
    "endColumnNumber" : 14
  }, {
    "charLength" : 3,
    "startLineNumber" : 122,
    "startColumnNumber" : 3,
    "endLineNumber" : 122,
    "endColumnNumber" : 6
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}