{
  "id" : 476,
  "expression" : "\" echo mypassword | \"",
  "projectName" : "keycloak@keycloak",
  "commitID" : "aacae9b9acb0fbedc49d4f88c9fbd7aa11922dce",
  "filePath" : "/integration/client-cli/admin-cli/src/main/java/org/keycloak/client/admin/cli/commands/ConfigCredentialsCmd.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\" echo mypassword | \"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 256,
      "startColumnNumber" : 40,
      "endLineNumber" : 256,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 256,
        "startColumnNumber" : 24,
        "endLineNumber" : 256,
        "endColumnNumber" : 155
      },
      "nodeContext" : "\"  \" + PROMPT + \" echo mypassword | \"+ CMD+ \" config credentials --server http://localhost:9080/auth --realm master --user admin\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 144,
        "startLineNumber" : 256,
        "startColumnNumber" : 12,
        "endLineNumber" : 256,
        "endColumnNumber" : 156
      },
      "nodeContext" : "out.println(\"  \" + PROMPT + \" echo mypassword | \"+ CMD+ \" config credentials --server http://localhost:9080/auth --realm master --user admin\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 256,
        "startColumnNumber" : 12,
        "endLineNumber" : 256,
        "endColumnNumber" : 157
      },
      "nodeContext" : "out.println(\"  \" + PROMPT + \" echo mypassword | \"+ CMD+ \" config credentials --server http://localhost:9080/auth --realm master --user admin\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 169,
        "startLineNumber" : 255,
        "startColumnNumber" : 33,
        "endLineNumber" : 257,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  out.println(\"  \" + PROMPT + \" echo mypassword | \"+ CMD+ \" config credentials --server http://localhost:9080/auth --realm master --user admin\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 433,
        "startLineNumber" : 255,
        "startColumnNumber" : 8,
        "endLineNumber" : 261,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (OS_ARCH.isWindows()) {\n  out.println(\"  \" + PROMPT + \" echo mypassword | \"+ CMD+ \" config credentials --server http://localhost:9080/auth --realm master --user admin\");\n}\n else {\n  out.println(\"  \" + PROMPT + \" \"+ CMD+ \" config credentials --server http://localhost:9080/auth --realm master --user admin << EOF\");\n  out.println(\"  mypassword\");\n  out.println(\"  EOF\");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 36,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 6062,
        "startLineNumber" : 210,
        "startColumnNumber" : 33,
        "endLineNumber" : 280,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  StringWriter sb=new StringWriter();\n  PrintWriter out=new PrintWriter(sb);\n  out.println(\"Usage: \" + CMD + \" config credentials --server SERVER_URL --realm REALM --user USER [--password PASSWORD] [ARGUMENTS]\");\n  out.println(\"       \" + CMD + \" config credentials --server SERVER_URL --realm REALM --client CLIENT_ID [--secret SECRET] [ARGUMENTS]\");\n  out.println(\"       \" + CMD + \" config credentials --server SERVER_URL --realm REALM --client CLIENT_ID [--keystore KEYSTORE] [ARGUMENTS]\");\n  out.println();\n  out.println(\"Command to establish an authenticated client session with the server. There are many authentication\");\n  out.println(\"options available, and it depends on server side client authentication configuration how client can or should authenticate.\");\n  out.println(\"The information always required includes --server, and --realm. Then, --user and / or --client need to be used to authenticate.\");\n  out.println(\"If --client is not provided it defaults to 'admin-cli'. The authentication options / requirements depend on how this client is configured.\");\n  out.println();\n  out.println(\"If confidential client authentication is also configured, you may have to specify a client id, and client credentials in addition to\");\n  out.println(\"user credentials. Client credentials are either a client secret, or a keystore information to use Signed JWT mechanism.\");\n  out.println(\"If only client credentials are provided, and no user credentials, then the service account is used for login.\");\n  out.println();\n  out.println(\"Arguments:\");\n  out.println();\n  out.println(\"  Global options:\");\n  out.println(\"    -x                      Print full stack trace when exiting with error\");\n  out.println(\"    --config                Path to a config file (\" + DEFAULT_CONFIG_FILE_STRING + \" by default)\");\n  out.println(\"    --truststore PATH       Path to a truststore containing trusted certificates\");\n  out.println(\"    --trustpass PASSWORD    Truststore password (prompted for if not specified and --truststore is used)\");\n  out.println();\n  out.println(\"  Command specific options:\");\n  out.println(\"    --server SERVER_URL     Server endpoint url (e.g. 'http://localhost:8080/auth')\");\n  out.println(\"    --realm REALM           Realm name to use\");\n  out.println(\"    --user USER             Username to login with\");\n  out.println(\"    --password PASSWORD     Password to login with (prompted for if not specified and --user is used)\");\n  out.println(\"    --client CLIENT_ID      ClientId used by this client tool ('admin-cli' by default)\");\n  out.println(\"    --secret SECRET         Secret to authenticate the client (prompted for if --client is specified, and no --keystore is specified)\");\n  out.println(\"    --keystore PATH         Path to a keystore containing private key\");\n  out.println(\"    --storepass PASSWORD    Keystore password (prompted for if not specified and --keystore is used)\");\n  out.println(\"    --keypass PASSWORD      Key password (prompted for if not specified and --keystore is used without --storepass,\");\n  out.println(\"                            otherwise defaults to keystore password)\");\n  out.println(\"    --alias ALIAS           Alias of the key inside a keystore (defaults to the value of ClientId)\");\n  out.println();\n  out.println();\n  out.println(\"Examples:\");\n  out.println();\n  out.println(\"Login as 'admin' user of 'master' realm to a local Keycloak server running on default port.\");\n  out.println(\"You will be prompted for a password:\");\n  out.println(\"  \" + PROMPT + \" \"+ CMD+ \" config credentials --server http://localhost:8080/auth --realm master --user admin\");\n  out.println();\n  out.println(\"Login to Keycloak server at non-default endpoint passing the password via standard input:\");\n  if (OS_ARCH.isWindows()) {\n    out.println(\"  \" + PROMPT + \" echo mypassword | \"+ CMD+ \" config credentials --server http://localhost:9080/auth --realm master --user admin\");\n  }\n else {\n    out.println(\"  \" + PROMPT + \" \"+ CMD+ \" config credentials --server http://localhost:9080/auth --realm master --user admin << EOF\");\n    out.println(\"  mypassword\");\n    out.println(\"  EOF\");\n  }\n  out.println();\n  out.println(\"Login specifying a password through command line:\");\n  out.println(\"  \" + PROMPT + \" \"+ CMD+ \" config credentials --server http://localhost:9080/auth --realm master --user admin --password \"+ OS_ARCH.envVar(\"PASSWORD\"));\n  out.println();\n  out.println(\"Login using a client service account of a custom client. You will be prompted for a client secret:\");\n  out.println(\"  \" + PROMPT + \" \"+ CMD+ \" config credentials --server http://localhost:9080/auth --realm master --client reg-cli\");\n  out.println();\n  out.println(\"Login using a client service account of a custom client, authenticating with signed JWT.\");\n  out.println(\"You will be prompted for a keystore password, and a key password:\");\n  out.println(\"  \" + PROMPT + \" \"+ CMD+ \" config credentials --server http://localhost:9080/auth --realm master --client reg-cli --keystore \"+ OS_ARCH.path(\"~/.keycloak/keystore.jks\"));\n  out.println();\n  out.println(\"Login as 'user' while also authenticating a custom client with signed JWT.\");\n  out.println(\"You will be prompted for a user password, a keystore password, and a key password:\");\n  out.println(\"  \" + PROMPT + \" \"+ CMD+ \" config credentials --server http://localhost:9080/auth --realm master --user user --client reg-cli --keystore \"+ OS_ARCH.path(\"~/.keycloak/keystore.jks\"));\n  out.println();\n  out.println();\n  out.println(\"Use '\" + CMD + \" help' for general information and a list of commands\");\n  return sb.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 390,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 6091,
        "startLineNumber" : 210,
        "startColumnNumber" : 4,
        "endLineNumber" : 280,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static String usage(){\n  StringWriter sb=new StringWriter();\n  PrintWriter out=new PrintWriter(sb);\n  out.println(\"Usage: \" + CMD + \" config credentials --server SERVER_URL --realm REALM --user USER [--password PASSWORD] [ARGUMENTS]\");\n  out.println(\"       \" + CMD + \" config credentials --server SERVER_URL --realm REALM --client CLIENT_ID [--secret SECRET] [ARGUMENTS]\");\n  out.println(\"       \" + CMD + \" config credentials --server SERVER_URL --realm REALM --client CLIENT_ID [--keystore KEYSTORE] [ARGUMENTS]\");\n  out.println();\n  out.println(\"Command to establish an authenticated client session with the server. There are many authentication\");\n  out.println(\"options available, and it depends on server side client authentication configuration how client can or should authenticate.\");\n  out.println(\"The information always required includes --server, and --realm. Then, --user and / or --client need to be used to authenticate.\");\n  out.println(\"If --client is not provided it defaults to 'admin-cli'. The authentication options / requirements depend on how this client is configured.\");\n  out.println();\n  out.println(\"If confidential client authentication is also configured, you may have to specify a client id, and client credentials in addition to\");\n  out.println(\"user credentials. Client credentials are either a client secret, or a keystore information to use Signed JWT mechanism.\");\n  out.println(\"If only client credentials are provided, and no user credentials, then the service account is used for login.\");\n  out.println();\n  out.println(\"Arguments:\");\n  out.println();\n  out.println(\"  Global options:\");\n  out.println(\"    -x                      Print full stack trace when exiting with error\");\n  out.println(\"    --config                Path to a config file (\" + DEFAULT_CONFIG_FILE_STRING + \" by default)\");\n  out.println(\"    --truststore PATH       Path to a truststore containing trusted certificates\");\n  out.println(\"    --trustpass PASSWORD    Truststore password (prompted for if not specified and --truststore is used)\");\n  out.println();\n  out.println(\"  Command specific options:\");\n  out.println(\"    --server SERVER_URL     Server endpoint url (e.g. 'http://localhost:8080/auth')\");\n  out.println(\"    --realm REALM           Realm name to use\");\n  out.println(\"    --user USER             Username to login with\");\n  out.println(\"    --password PASSWORD     Password to login with (prompted for if not specified and --user is used)\");\n  out.println(\"    --client CLIENT_ID      ClientId used by this client tool ('admin-cli' by default)\");\n  out.println(\"    --secret SECRET         Secret to authenticate the client (prompted for if --client is specified, and no --keystore is specified)\");\n  out.println(\"    --keystore PATH         Path to a keystore containing private key\");\n  out.println(\"    --storepass PASSWORD    Keystore password (prompted for if not specified and --keystore is used)\");\n  out.println(\"    --keypass PASSWORD      Key password (prompted for if not specified and --keystore is used without --storepass,\");\n  out.println(\"                            otherwise defaults to keystore password)\");\n  out.println(\"    --alias ALIAS           Alias of the key inside a keystore (defaults to the value of ClientId)\");\n  out.println();\n  out.println();\n  out.println(\"Examples:\");\n  out.println();\n  out.println(\"Login as 'admin' user of 'master' realm to a local Keycloak server running on default port.\");\n  out.println(\"You will be prompted for a password:\");\n  out.println(\"  \" + PROMPT + \" \"+ CMD+ \" config credentials --server http://localhost:8080/auth --realm master --user admin\");\n  out.println();\n  out.println(\"Login to Keycloak server at non-default endpoint passing the password via standard input:\");\n  if (OS_ARCH.isWindows()) {\n    out.println(\"  \" + PROMPT + \" echo mypassword | \"+ CMD+ \" config credentials --server http://localhost:9080/auth --realm master --user admin\");\n  }\n else {\n    out.println(\"  \" + PROMPT + \" \"+ CMD+ \" config credentials --server http://localhost:9080/auth --realm master --user admin << EOF\");\n    out.println(\"  mypassword\");\n    out.println(\"  EOF\");\n  }\n  out.println();\n  out.println(\"Login specifying a password through command line:\");\n  out.println(\"  \" + PROMPT + \" \"+ CMD+ \" config credentials --server http://localhost:9080/auth --realm master --user admin --password \"+ OS_ARCH.envVar(\"PASSWORD\"));\n  out.println();\n  out.println(\"Login using a client service account of a custom client. You will be prompted for a client secret:\");\n  out.println(\"  \" + PROMPT + \" \"+ CMD+ \" config credentials --server http://localhost:9080/auth --realm master --client reg-cli\");\n  out.println();\n  out.println(\"Login using a client service account of a custom client, authenticating with signed JWT.\");\n  out.println(\"You will be prompted for a keystore password, and a key password:\");\n  out.println(\"  \" + PROMPT + \" \"+ CMD+ \" config credentials --server http://localhost:9080/auth --realm master --client reg-cli --keystore \"+ OS_ARCH.path(\"~/.keycloak/keystore.jks\"));\n  out.println();\n  out.println(\"Login as 'user' while also authenticating a custom client with signed JWT.\");\n  out.println(\"You will be prompted for a user password, a keystore password, and a key password:\");\n  out.println(\"  \" + PROMPT + \" \"+ CMD+ \" config credentials --server http://localhost:9080/auth --realm master --user user --client reg-cli --keystore \"+ OS_ARCH.path(\"~/.keycloak/keystore.jks\"));\n  out.println();\n  out.println();\n  out.println(\"Use '\" + CMD + \" help' for general information and a list of commands\");\n  return sb.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 396,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 145,
        "startLineNumber" : 256,
        "startColumnNumber" : 12,
        "endLineNumber" : 256,
        "endColumnNumber" : 157
      },
      "nodeContext" : "out.println(\"  \" + PROMPT + \" echo mypassword | \"+ CMD+ \" config credentials --server http://localhost:9080/auth --realm master --user admin\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 256,
    "startColumnNumber" : 40,
    "endLineNumber" : 256,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ ]
}