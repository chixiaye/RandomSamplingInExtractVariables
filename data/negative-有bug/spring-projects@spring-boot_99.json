{
  "id" : 99,
  "expression" : "cause.getInvalidCharacters().stream().map(this::quote)",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-project/spring-boot/src/main/java/org/springframework/boot/diagnostics/analyzer/InvalidConfigurationPropertyNameFailureAnalyzer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "cause.getInvalidCharacters().stream().map(this::quote)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 54,
      "startLineNumber" : 51,
      "startColumnNumber" : 19,
      "endLineNumber" : 51,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 10,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 51,
        "startColumnNumber" : 19,
        "endLineNumber" : 52,
        "endColumnNumber" : 38
      },
      "nodeContext" : "cause.getInvalidCharacters().stream().map(this::quote).collect(Collectors.joining(\", \"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 103,
        "startLineNumber" : 51,
        "startColumnNumber" : 9,
        "endLineNumber" : 52,
        "endColumnNumber" : 38
      },
      "nodeContext" : "invalid=cause.getInvalidCharacters().stream().map(this::quote).collect(Collectors.joining(\", \"))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 18,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 111,
        "startLineNumber" : 51,
        "startColumnNumber" : 2,
        "endLineNumber" : 52,
        "endColumnNumber" : 39
      },
      "nodeContext" : "String invalid=cause.getInvalidCharacters().stream().map(this::quote).collect(Collectors.joining(\", \"));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 669,
        "startLineNumber" : 48,
        "startColumnNumber" : 36,
        "endLineNumber" : 61,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  StringBuilder description=new StringBuilder(String.format(\"Configuration property name '%s' is not valid:%n\",cause.getName()));\n  String invalid=cause.getInvalidCharacters().stream().map(this::quote).collect(Collectors.joining(\", \"));\n  description.append(String.format(\"%n    Invalid characters: %s\",invalid));\n  if (exception != null) {\n    description.append(String.format(\"%n    Bean: %s\",exception.getBeanName()));\n  }\n  description.append(String.format(\"%n    Reason: Canonical names should be \" + \"kebab-case ('-' separated), lowercase alpha-numeric characters\" + \" and must start with a letter\"));\n  return description.toString();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 786,
        "startLineNumber" : 47,
        "startColumnNumber" : 1,
        "endLineNumber" : 61,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private String buildDescription(InvalidConfigurationPropertyNameException cause,BeanCreationException exception){\n  StringBuilder description=new StringBuilder(String.format(\"Configuration property name '%s' is not valid:%n\",cause.getName()));\n  String invalid=cause.getInvalidCharacters().stream().map(this::quote).collect(Collectors.joining(\", \"));\n  description.append(String.format(\"%n    Invalid characters: %s\",invalid));\n  if (exception != null) {\n    description.append(String.format(\"%n    Bean: %s\",exception.getBeanName()));\n  }\n  description.append(String.format(\"%n    Reason: Canonical names should be \" + \"kebab-case ('-' separated), lowercase alpha-numeric characters\" + \" and must start with a letter\"));\n  return description.toString();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 90,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 93,
        "startLineNumber" : 51,
        "startColumnNumber" : 19,
        "endLineNumber" : 52,
        "endColumnNumber" : 38
      },
      "nodeContext" : "cause.getInvalidCharacters().stream().map(this::quote).collect(Collectors.joining(\", \"))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 5,
    "type" : "java.util.stream.Stream<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 54,
    "startLineNumber" : 51,
    "startColumnNumber" : 19,
    "endLineNumber" : 51,
    "endColumnNumber" : 73
  } ],
  "layoutRelationDataList" : [ ]
}