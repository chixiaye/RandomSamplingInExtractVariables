{
  "id" : 125,
  "expression" : "1",
  "projectName" : "williamfiset@Algorithms",
  "commitID" : "6d8bb428cd59ce3da5530d569b555c69a07c2f4d",
  "filePath" : "/src/main/java/com/williamfiset/algorithms/strings/BoothsAlgorithm.java",
  "occurrences" : 10,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 16,
      "startColumnNumber" : 30,
      "endLineNumber" : 16,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 2,
        "startLineNumber" : 16,
        "startColumnNumber" : 29,
        "endLineNumber" : 16,
        "endColumnNumber" : 31
      },
      "nodeContext" : "-1",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 28,
        "startLineNumber" : 16,
        "startColumnNumber" : 4,
        "endLineNumber" : 16,
        "endColumnNumber" : 32
      },
      "nodeContext" : "java.util.Arrays.fill(f,-1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 16,
        "startColumnNumber" : 4,
        "endLineNumber" : 16,
        "endColumnNumber" : 33
      },
      "nodeContext" : "java.util.Arrays.fill(f,-1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 483,
        "startLineNumber" : 13,
        "startColumnNumber" : 50,
        "endLineNumber" : 31,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  s+=s;\n  int[] f=new int[s.length()];\n  java.util.Arrays.fill(f,-1);\n  int k=0;\n  for (int j=1; j < s.length(); j++) {\n    char sj=s.charAt(j);\n    int i=f[j - k - 1];\n    while (i != -1 && sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k + i + 1))       k=j - i - 1;\n      i=f[i];\n    }\n    if (sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k))       k=j;\n      f[j - k]=-1;\n    }\n else     f[j - k]=i + 1;\n  }\n  return k;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 148,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 531,
        "startLineNumber" : 13,
        "startColumnNumber" : 2,
        "endLineNumber" : 31,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static int leastCyclicRotation(String s){\n  s+=s;\n  int[] f=new int[s.length()];\n  java.util.Arrays.fill(f,-1);\n  int k=0;\n  for (int j=1; j < s.length(); j++) {\n    char sj=s.charAt(j);\n    int i=f[j - k - 1];\n    while (i != -1 && sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k + i + 1))       k=j - i - 1;\n      i=f[i];\n    }\n    if (sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k))       k=j;\n      f[j - k]=-1;\n    }\n else     f[j - k]=i + 1;\n  }\n  return k;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 157,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 16,
        "startColumnNumber" : 4,
        "endLineNumber" : 16,
        "endColumnNumber" : 33
      },
      "nodeContext" : "java.util.Arrays.fill(f,-1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 18,
      "startColumnNumber" : 17,
      "endLineNumber" : 18,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationExpression,fragments]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 18,
        "startColumnNumber" : 13,
        "endLineNumber" : 18,
        "endColumnNumber" : 18
      },
      "nodeContext" : "j=1",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 18,
        "startColumnNumber" : 9,
        "endLineNumber" : 18,
        "endColumnNumber" : 18
      },
      "nodeContext" : "int j=1",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 363,
        "startLineNumber" : 18,
        "startColumnNumber" : 4,
        "endLineNumber" : 29,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int j=1; j < s.length(); j++) {\n  char sj=s.charAt(j);\n  int i=f[j - k - 1];\n  while (i != -1 && sj != s.charAt(k + i + 1)) {\n    if (sj < s.charAt(k + i + 1))     k=j - i - 1;\n    i=f[i];\n  }\n  if (sj != s.charAt(k + i + 1)) {\n    if (sj < s.charAt(k))     k=j;\n    f[j - k]=-1;\n  }\n else   f[j - k]=i + 1;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 112,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 483,
        "startLineNumber" : 13,
        "startColumnNumber" : 50,
        "endLineNumber" : 31,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  s+=s;\n  int[] f=new int[s.length()];\n  java.util.Arrays.fill(f,-1);\n  int k=0;\n  for (int j=1; j < s.length(); j++) {\n    char sj=s.charAt(j);\n    int i=f[j - k - 1];\n    while (i != -1 && sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k + i + 1))       k=j - i - 1;\n      i=f[i];\n    }\n    if (sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k))       k=j;\n      f[j - k]=-1;\n    }\n else     f[j - k]=i + 1;\n  }\n  return k;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 148,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 531,
        "startLineNumber" : 13,
        "startColumnNumber" : 2,
        "endLineNumber" : 31,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static int leastCyclicRotation(String s){\n  s+=s;\n  int[] f=new int[s.length()];\n  java.util.Arrays.fill(f,-1);\n  int k=0;\n  for (int j=1; j < s.length(); j++) {\n    char sj=s.charAt(j);\n    int i=f[j - k - 1];\n    while (i != -1 && sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k + i + 1))       k=j - i - 1;\n      i=f[i];\n    }\n    if (sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k))       k=j;\n      f[j - k]=-1;\n    }\n else     f[j - k]=i + 1;\n  }\n  return k;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 157,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.ForStatement,initializers]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 18,
        "startColumnNumber" : 9,
        "endLineNumber" : 18,
        "endColumnNumber" : 18
      },
      "nodeContext" : "int j=1",
      "nodeType" : "VariableDeclarationExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 20,
      "startColumnNumber" : 24,
      "endLineNumber" : 20,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ArrayAccess,index]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 20,
        "startColumnNumber" : 16,
        "endLineNumber" : 20,
        "endColumnNumber" : 25
      },
      "nodeContext" : "j - k - 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 20,
        "startColumnNumber" : 14,
        "endLineNumber" : 20,
        "endColumnNumber" : 26
      },
      "nodeContext" : "f[j - k - 1]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 20,
        "startColumnNumber" : 10,
        "endLineNumber" : 20,
        "endColumnNumber" : 26
      },
      "nodeContext" : "i=f[j - k - 1]",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 20,
        "startColumnNumber" : 6,
        "endLineNumber" : 20,
        "endColumnNumber" : 27
      },
      "nodeContext" : "int i=f[j - k - 1];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 326,
        "startLineNumber" : 18,
        "startColumnNumber" : 41,
        "endLineNumber" : 29,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  char sj=s.charAt(j);\n  int i=f[j - k - 1];\n  while (i != -1 && sj != s.charAt(k + i + 1)) {\n    if (sj < s.charAt(k + i + 1))     k=j - i - 1;\n    i=f[i];\n  }\n  if (sj != s.charAt(k + i + 1)) {\n    if (sj < s.charAt(k))     k=j;\n    f[j - k]=-1;\n  }\n else   f[j - k]=i + 1;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 363,
        "startLineNumber" : 18,
        "startColumnNumber" : 4,
        "endLineNumber" : 29,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int j=1; j < s.length(); j++) {\n  char sj=s.charAt(j);\n  int i=f[j - k - 1];\n  while (i != -1 && sj != s.charAt(k + i + 1)) {\n    if (sj < s.charAt(k + i + 1))     k=j - i - 1;\n    i=f[i];\n  }\n  if (sj != s.charAt(k + i + 1)) {\n    if (sj < s.charAt(k))     k=j;\n    f[j - k]=-1;\n  }\n else   f[j - k]=i + 1;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 112,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 483,
        "startLineNumber" : 13,
        "startColumnNumber" : 50,
        "endLineNumber" : 31,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  s+=s;\n  int[] f=new int[s.length()];\n  java.util.Arrays.fill(f,-1);\n  int k=0;\n  for (int j=1; j < s.length(); j++) {\n    char sj=s.charAt(j);\n    int i=f[j - k - 1];\n    while (i != -1 && sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k + i + 1))       k=j - i - 1;\n      i=f[i];\n    }\n    if (sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k))       k=j;\n      f[j - k]=-1;\n    }\n else     f[j - k]=i + 1;\n  }\n  return k;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 148,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 531,
        "startLineNumber" : 13,
        "startColumnNumber" : 2,
        "endLineNumber" : 31,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static int leastCyclicRotation(String s){\n  s+=s;\n  int[] f=new int[s.length()];\n  java.util.Arrays.fill(f,-1);\n  int k=0;\n  for (int j=1; j < s.length(); j++) {\n    char sj=s.charAt(j);\n    int i=f[j - k - 1];\n    while (i != -1 && sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k + i + 1))       k=j - i - 1;\n      i=f[i];\n    }\n    if (sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k))       k=j;\n      f[j - k]=-1;\n    }\n else     f[j - k]=i + 1;\n  }\n  return k;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 157,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 20,
        "startColumnNumber" : 6,
        "endLineNumber" : 20,
        "endColumnNumber" : 27
      },
      "nodeContext" : "int i=f[j - k - 1];\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 21,
      "startColumnNumber" : 19,
      "endLineNumber" : 21,
      "endColumnNumber" : 20
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 2,
        "startLineNumber" : 21,
        "startColumnNumber" : 18,
        "endLineNumber" : 21,
        "endColumnNumber" : 20
      },
      "nodeContext" : "-1",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 21,
        "startColumnNumber" : 13,
        "endLineNumber" : 21,
        "endColumnNumber" : 20
      },
      "nodeContext" : "i != -1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 21,
        "startColumnNumber" : 13,
        "endLineNumber" : 21,
        "endColumnNumber" : 49
      },
      "nodeContext" : "i != -1 && sj != s.charAt(k + i + 1)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 21,
        "startColumnNumber" : 6,
        "endLineNumber" : 24,
        "endColumnNumber" : 7
      },
      "nodeContext" : "while (i != -1 && sj != s.charAt(k + i + 1)) {\n  if (sj < s.charAt(k + i + 1))   k=j - i - 1;\n  i=f[i];\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 39,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 326,
        "startLineNumber" : 18,
        "startColumnNumber" : 41,
        "endLineNumber" : 29,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  char sj=s.charAt(j);\n  int i=f[j - k - 1];\n  while (i != -1 && sj != s.charAt(k + i + 1)) {\n    if (sj < s.charAt(k + i + 1))     k=j - i - 1;\n    i=f[i];\n  }\n  if (sj != s.charAt(k + i + 1)) {\n    if (sj < s.charAt(k))     k=j;\n    f[j - k]=-1;\n  }\n else   f[j - k]=i + 1;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 363,
        "startLineNumber" : 18,
        "startColumnNumber" : 4,
        "endLineNumber" : 29,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int j=1; j < s.length(); j++) {\n  char sj=s.charAt(j);\n  int i=f[j - k - 1];\n  while (i != -1 && sj != s.charAt(k + i + 1)) {\n    if (sj < s.charAt(k + i + 1))     k=j - i - 1;\n    i=f[i];\n  }\n  if (sj != s.charAt(k + i + 1)) {\n    if (sj < s.charAt(k))     k=j;\n    f[j - k]=-1;\n  }\n else   f[j - k]=i + 1;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 112,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 483,
        "startLineNumber" : 13,
        "startColumnNumber" : 50,
        "endLineNumber" : 31,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  s+=s;\n  int[] f=new int[s.length()];\n  java.util.Arrays.fill(f,-1);\n  int k=0;\n  for (int j=1; j < s.length(); j++) {\n    char sj=s.charAt(j);\n    int i=f[j - k - 1];\n    while (i != -1 && sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k + i + 1))       k=j - i - 1;\n      i=f[i];\n    }\n    if (sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k))       k=j;\n      f[j - k]=-1;\n    }\n else     f[j - k]=i + 1;\n  }\n  return k;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 148,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 531,
        "startLineNumber" : 13,
        "startColumnNumber" : 2,
        "endLineNumber" : 31,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static int leastCyclicRotation(String s){\n  s+=s;\n  int[] f=new int[s.length()];\n  java.util.Arrays.fill(f,-1);\n  int k=0;\n  for (int j=1; j < s.length(); j++) {\n    char sj=s.charAt(j);\n    int i=f[j - k - 1];\n    while (i != -1 && sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k + i + 1))       k=j - i - 1;\n      i=f[i];\n    }\n    if (sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k))       k=j;\n      f[j - k]=-1;\n    }\n else     f[j - k]=i + 1;\n  }\n  return k;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 157,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 21,
        "startColumnNumber" : 13,
        "endLineNumber" : 21,
        "endColumnNumber" : 49
      },
      "nodeContext" : "i != -1 && sj != s.charAt(k + i + 1)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 21,
      "startColumnNumber" : 47,
      "endLineNumber" : 21,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 21,
        "startColumnNumber" : 39,
        "endLineNumber" : 21,
        "endColumnNumber" : 48
      },
      "nodeContext" : "k + i + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 21,
        "startColumnNumber" : 30,
        "endLineNumber" : 21,
        "endColumnNumber" : 49
      },
      "nodeContext" : "s.charAt(k + i + 1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 21,
        "startColumnNumber" : 24,
        "endLineNumber" : 21,
        "endColumnNumber" : 49
      },
      "nodeContext" : "sj != s.charAt(k + i + 1)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 21,
        "startColumnNumber" : 13,
        "endLineNumber" : 21,
        "endColumnNumber" : 49
      },
      "nodeContext" : "i != -1 && sj != s.charAt(k + i + 1)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 21,
        "startColumnNumber" : 6,
        "endLineNumber" : 24,
        "endColumnNumber" : 7
      },
      "nodeContext" : "while (i != -1 && sj != s.charAt(k + i + 1)) {\n  if (sj < s.charAt(k + i + 1))   k=j - i - 1;\n  i=f[i];\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 39,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 326,
        "startLineNumber" : 18,
        "startColumnNumber" : 41,
        "endLineNumber" : 29,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  char sj=s.charAt(j);\n  int i=f[j - k - 1];\n  while (i != -1 && sj != s.charAt(k + i + 1)) {\n    if (sj < s.charAt(k + i + 1))     k=j - i - 1;\n    i=f[i];\n  }\n  if (sj != s.charAt(k + i + 1)) {\n    if (sj < s.charAt(k))     k=j;\n    f[j - k]=-1;\n  }\n else   f[j - k]=i + 1;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 363,
        "startLineNumber" : 18,
        "startColumnNumber" : 4,
        "endLineNumber" : 29,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int j=1; j < s.length(); j++) {\n  char sj=s.charAt(j);\n  int i=f[j - k - 1];\n  while (i != -1 && sj != s.charAt(k + i + 1)) {\n    if (sj < s.charAt(k + i + 1))     k=j - i - 1;\n    i=f[i];\n  }\n  if (sj != s.charAt(k + i + 1)) {\n    if (sj < s.charAt(k))     k=j;\n    f[j - k]=-1;\n  }\n else   f[j - k]=i + 1;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 112,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 483,
        "startLineNumber" : 13,
        "startColumnNumber" : 50,
        "endLineNumber" : 31,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  s+=s;\n  int[] f=new int[s.length()];\n  java.util.Arrays.fill(f,-1);\n  int k=0;\n  for (int j=1; j < s.length(); j++) {\n    char sj=s.charAt(j);\n    int i=f[j - k - 1];\n    while (i != -1 && sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k + i + 1))       k=j - i - 1;\n      i=f[i];\n    }\n    if (sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k))       k=j;\n      f[j - k]=-1;\n    }\n else     f[j - k]=i + 1;\n  }\n  return k;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 148,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 531,
        "startLineNumber" : 13,
        "startColumnNumber" : 2,
        "endLineNumber" : 31,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static int leastCyclicRotation(String s){\n  s+=s;\n  int[] f=new int[s.length()];\n  java.util.Arrays.fill(f,-1);\n  int k=0;\n  for (int j=1; j < s.length(); j++) {\n    char sj=s.charAt(j);\n    int i=f[j - k - 1];\n    while (i != -1 && sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k + i + 1))       k=j - i - 1;\n      i=f[i];\n    }\n    if (sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k))       k=j;\n      f[j - k]=-1;\n    }\n else     f[j - k]=i + 1;\n  }\n  return k;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 157,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 21,
        "startColumnNumber" : 13,
        "endLineNumber" : 21,
        "endColumnNumber" : 49
      },
      "nodeContext" : "i != -1 && sj != s.charAt(k + i + 1)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 22,
      "startColumnNumber" : 34,
      "endLineNumber" : 22,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 22,
        "startColumnNumber" : 26,
        "endLineNumber" : 22,
        "endColumnNumber" : 35
      },
      "nodeContext" : "k + i + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 22,
        "startColumnNumber" : 17,
        "endLineNumber" : 22,
        "endColumnNumber" : 36
      },
      "nodeContext" : "s.charAt(k + i + 1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 22,
        "startColumnNumber" : 12,
        "endLineNumber" : 22,
        "endColumnNumber" : 36
      },
      "nodeContext" : "sj < s.charAt(k + i + 1)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 22,
        "startColumnNumber" : 8,
        "endLineNumber" : 22,
        "endColumnNumber" : 52
      },
      "nodeContext" : "if (sj < s.charAt(k + i + 1)) k=j - i - 1;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 21,
        "startColumnNumber" : 51,
        "endLineNumber" : 24,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (sj < s.charAt(k + i + 1))   k=j - i - 1;\n  i=f[i];\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 21,
        "startColumnNumber" : 6,
        "endLineNumber" : 24,
        "endColumnNumber" : 7
      },
      "nodeContext" : "while (i != -1 && sj != s.charAt(k + i + 1)) {\n  if (sj < s.charAt(k + i + 1))   k=j - i - 1;\n  i=f[i];\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 39,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 326,
        "startLineNumber" : 18,
        "startColumnNumber" : 41,
        "endLineNumber" : 29,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  char sj=s.charAt(j);\n  int i=f[j - k - 1];\n  while (i != -1 && sj != s.charAt(k + i + 1)) {\n    if (sj < s.charAt(k + i + 1))     k=j - i - 1;\n    i=f[i];\n  }\n  if (sj != s.charAt(k + i + 1)) {\n    if (sj < s.charAt(k))     k=j;\n    f[j - k]=-1;\n  }\n else   f[j - k]=i + 1;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 363,
        "startLineNumber" : 18,
        "startColumnNumber" : 4,
        "endLineNumber" : 29,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int j=1; j < s.length(); j++) {\n  char sj=s.charAt(j);\n  int i=f[j - k - 1];\n  while (i != -1 && sj != s.charAt(k + i + 1)) {\n    if (sj < s.charAt(k + i + 1))     k=j - i - 1;\n    i=f[i];\n  }\n  if (sj != s.charAt(k + i + 1)) {\n    if (sj < s.charAt(k))     k=j;\n    f[j - k]=-1;\n  }\n else   f[j - k]=i + 1;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 112,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 483,
        "startLineNumber" : 13,
        "startColumnNumber" : 50,
        "endLineNumber" : 31,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  s+=s;\n  int[] f=new int[s.length()];\n  java.util.Arrays.fill(f,-1);\n  int k=0;\n  for (int j=1; j < s.length(); j++) {\n    char sj=s.charAt(j);\n    int i=f[j - k - 1];\n    while (i != -1 && sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k + i + 1))       k=j - i - 1;\n      i=f[i];\n    }\n    if (sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k))       k=j;\n      f[j - k]=-1;\n    }\n else     f[j - k]=i + 1;\n  }\n  return k;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 148,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 531,
        "startLineNumber" : 13,
        "startColumnNumber" : 2,
        "endLineNumber" : 31,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static int leastCyclicRotation(String s){\n  s+=s;\n  int[] f=new int[s.length()];\n  java.util.Arrays.fill(f,-1);\n  int k=0;\n  for (int j=1; j < s.length(); j++) {\n    char sj=s.charAt(j);\n    int i=f[j - k - 1];\n    while (i != -1 && sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k + i + 1))       k=j - i - 1;\n      i=f[i];\n    }\n    if (sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k))       k=j;\n      f[j - k]=-1;\n    }\n else     f[j - k]=i + 1;\n  }\n  return k;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 157,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 22,
        "startColumnNumber" : 8,
        "endLineNumber" : 22,
        "endColumnNumber" : 52
      },
      "nodeContext" : "if (sj < s.charAt(k + i + 1)) k=j - i - 1;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 22,
      "startColumnNumber" : 50,
      "endLineNumber" : 22,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 22,
        "startColumnNumber" : 42,
        "endLineNumber" : 22,
        "endColumnNumber" : 51
      },
      "nodeContext" : "j - i - 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 22,
        "startColumnNumber" : 38,
        "endLineNumber" : 22,
        "endColumnNumber" : 51
      },
      "nodeContext" : "k=j - i - 1",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 22,
        "startColumnNumber" : 38,
        "endLineNumber" : 22,
        "endColumnNumber" : 52
      },
      "nodeContext" : "k=j - i - 1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 22,
        "startColumnNumber" : 8,
        "endLineNumber" : 22,
        "endColumnNumber" : 52
      },
      "nodeContext" : "if (sj < s.charAt(k + i + 1)) k=j - i - 1;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 80,
        "startLineNumber" : 21,
        "startColumnNumber" : 51,
        "endLineNumber" : 24,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (sj < s.charAt(k + i + 1))   k=j - i - 1;\n  i=f[i];\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 125,
        "startLineNumber" : 21,
        "startColumnNumber" : 6,
        "endLineNumber" : 24,
        "endColumnNumber" : 7
      },
      "nodeContext" : "while (i != -1 && sj != s.charAt(k + i + 1)) {\n  if (sj < s.charAt(k + i + 1))   k=j - i - 1;\n  i=f[i];\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 39,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 326,
        "startLineNumber" : 18,
        "startColumnNumber" : 41,
        "endLineNumber" : 29,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  char sj=s.charAt(j);\n  int i=f[j - k - 1];\n  while (i != -1 && sj != s.charAt(k + i + 1)) {\n    if (sj < s.charAt(k + i + 1))     k=j - i - 1;\n    i=f[i];\n  }\n  if (sj != s.charAt(k + i + 1)) {\n    if (sj < s.charAt(k))     k=j;\n    f[j - k]=-1;\n  }\n else   f[j - k]=i + 1;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 363,
        "startLineNumber" : 18,
        "startColumnNumber" : 4,
        "endLineNumber" : 29,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int j=1; j < s.length(); j++) {\n  char sj=s.charAt(j);\n  int i=f[j - k - 1];\n  while (i != -1 && sj != s.charAt(k + i + 1)) {\n    if (sj < s.charAt(k + i + 1))     k=j - i - 1;\n    i=f[i];\n  }\n  if (sj != s.charAt(k + i + 1)) {\n    if (sj < s.charAt(k))     k=j;\n    f[j - k]=-1;\n  }\n else   f[j - k]=i + 1;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 112,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 483,
        "startLineNumber" : 13,
        "startColumnNumber" : 50,
        "endLineNumber" : 31,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  s+=s;\n  int[] f=new int[s.length()];\n  java.util.Arrays.fill(f,-1);\n  int k=0;\n  for (int j=1; j < s.length(); j++) {\n    char sj=s.charAt(j);\n    int i=f[j - k - 1];\n    while (i != -1 && sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k + i + 1))       k=j - i - 1;\n      i=f[i];\n    }\n    if (sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k))       k=j;\n      f[j - k]=-1;\n    }\n else     f[j - k]=i + 1;\n  }\n  return k;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 148,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 531,
        "startLineNumber" : 13,
        "startColumnNumber" : 2,
        "endLineNumber" : 31,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static int leastCyclicRotation(String s){\n  s+=s;\n  int[] f=new int[s.length()];\n  java.util.Arrays.fill(f,-1);\n  int k=0;\n  for (int j=1; j < s.length(); j++) {\n    char sj=s.charAt(j);\n    int i=f[j - k - 1];\n    while (i != -1 && sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k + i + 1))       k=j - i - 1;\n      i=f[i];\n    }\n    if (sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k))       k=j;\n      f[j - k]=-1;\n    }\n else     f[j - k]=i + 1;\n  }\n  return k;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 157,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 22,
        "startColumnNumber" : 8,
        "endLineNumber" : 22,
        "endColumnNumber" : 52
      },
      "nodeContext" : "if (sj < s.charAt(k + i + 1)) k=j - i - 1;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 25,
      "startColumnNumber" : 33,
      "endLineNumber" : 25,
      "endColumnNumber" : 34
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 25,
        "startColumnNumber" : 25,
        "endLineNumber" : 25,
        "endColumnNumber" : 34
      },
      "nodeContext" : "k + i + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 25,
        "startColumnNumber" : 16,
        "endLineNumber" : 25,
        "endColumnNumber" : 35
      },
      "nodeContext" : "s.charAt(k + i + 1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 25,
        "startColumnNumber" : 10,
        "endLineNumber" : 25,
        "endColumnNumber" : 35
      },
      "nodeContext" : "sj != s.charAt(k + i + 1)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 25,
        "startColumnNumber" : 6,
        "endLineNumber" : 28,
        "endColumnNumber" : 30
      },
      "nodeContext" : "if (sj != s.charAt(k + i + 1)) {\n  if (sj < s.charAt(k))   k=j;\n  f[j - k]=-1;\n}\n else f[j - k]=i + 1;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 41,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 326,
        "startLineNumber" : 18,
        "startColumnNumber" : 41,
        "endLineNumber" : 29,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  char sj=s.charAt(j);\n  int i=f[j - k - 1];\n  while (i != -1 && sj != s.charAt(k + i + 1)) {\n    if (sj < s.charAt(k + i + 1))     k=j - i - 1;\n    i=f[i];\n  }\n  if (sj != s.charAt(k + i + 1)) {\n    if (sj < s.charAt(k))     k=j;\n    f[j - k]=-1;\n  }\n else   f[j - k]=i + 1;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 363,
        "startLineNumber" : 18,
        "startColumnNumber" : 4,
        "endLineNumber" : 29,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int j=1; j < s.length(); j++) {\n  char sj=s.charAt(j);\n  int i=f[j - k - 1];\n  while (i != -1 && sj != s.charAt(k + i + 1)) {\n    if (sj < s.charAt(k + i + 1))     k=j - i - 1;\n    i=f[i];\n  }\n  if (sj != s.charAt(k + i + 1)) {\n    if (sj < s.charAt(k))     k=j;\n    f[j - k]=-1;\n  }\n else   f[j - k]=i + 1;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 112,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 483,
        "startLineNumber" : 13,
        "startColumnNumber" : 50,
        "endLineNumber" : 31,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  s+=s;\n  int[] f=new int[s.length()];\n  java.util.Arrays.fill(f,-1);\n  int k=0;\n  for (int j=1; j < s.length(); j++) {\n    char sj=s.charAt(j);\n    int i=f[j - k - 1];\n    while (i != -1 && sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k + i + 1))       k=j - i - 1;\n      i=f[i];\n    }\n    if (sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k))       k=j;\n      f[j - k]=-1;\n    }\n else     f[j - k]=i + 1;\n  }\n  return k;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 148,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 531,
        "startLineNumber" : 13,
        "startColumnNumber" : 2,
        "endLineNumber" : 31,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static int leastCyclicRotation(String s){\n  s+=s;\n  int[] f=new int[s.length()];\n  java.util.Arrays.fill(f,-1);\n  int k=0;\n  for (int j=1; j < s.length(); j++) {\n    char sj=s.charAt(j);\n    int i=f[j - k - 1];\n    while (i != -1 && sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k + i + 1))       k=j - i - 1;\n      i=f[i];\n    }\n    if (sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k))       k=j;\n      f[j - k]=-1;\n    }\n else     f[j - k]=i + 1;\n  }\n  return k;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 157,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 25,
        "startColumnNumber" : 10,
        "endLineNumber" : 25,
        "endColumnNumber" : 35
      },
      "nodeContext" : "sj != s.charAt(k + i + 1)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 27,
      "startColumnNumber" : 20,
      "endLineNumber" : 27,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 2,
        "startLineNumber" : 27,
        "startColumnNumber" : 19,
        "endLineNumber" : 27,
        "endColumnNumber" : 21
      },
      "nodeContext" : "-1",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 2,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 13,
        "startLineNumber" : 27,
        "startColumnNumber" : 8,
        "endLineNumber" : 27,
        "endColumnNumber" : 21
      },
      "nodeContext" : "f[j - k]=-1",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 27,
        "startColumnNumber" : 8,
        "endLineNumber" : 27,
        "endColumnNumber" : 22
      },
      "nodeContext" : "f[j - k]=-1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 25,
        "startColumnNumber" : 37,
        "endLineNumber" : 28,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  if (sj < s.charAt(k))   k=j;\n  f[j - k]=-1;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 25,
        "startColumnNumber" : 6,
        "endLineNumber" : 28,
        "endColumnNumber" : 30
      },
      "nodeContext" : "if (sj != s.charAt(k + i + 1)) {\n  if (sj < s.charAt(k))   k=j;\n  f[j - k]=-1;\n}\n else f[j - k]=i + 1;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 41,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 326,
        "startLineNumber" : 18,
        "startColumnNumber" : 41,
        "endLineNumber" : 29,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  char sj=s.charAt(j);\n  int i=f[j - k - 1];\n  while (i != -1 && sj != s.charAt(k + i + 1)) {\n    if (sj < s.charAt(k + i + 1))     k=j - i - 1;\n    i=f[i];\n  }\n  if (sj != s.charAt(k + i + 1)) {\n    if (sj < s.charAt(k))     k=j;\n    f[j - k]=-1;\n  }\n else   f[j - k]=i + 1;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 363,
        "startLineNumber" : 18,
        "startColumnNumber" : 4,
        "endLineNumber" : 29,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int j=1; j < s.length(); j++) {\n  char sj=s.charAt(j);\n  int i=f[j - k - 1];\n  while (i != -1 && sj != s.charAt(k + i + 1)) {\n    if (sj < s.charAt(k + i + 1))     k=j - i - 1;\n    i=f[i];\n  }\n  if (sj != s.charAt(k + i + 1)) {\n    if (sj < s.charAt(k))     k=j;\n    f[j - k]=-1;\n  }\n else   f[j - k]=i + 1;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 112,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 483,
        "startLineNumber" : 13,
        "startColumnNumber" : 50,
        "endLineNumber" : 31,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  s+=s;\n  int[] f=new int[s.length()];\n  java.util.Arrays.fill(f,-1);\n  int k=0;\n  for (int j=1; j < s.length(); j++) {\n    char sj=s.charAt(j);\n    int i=f[j - k - 1];\n    while (i != -1 && sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k + i + 1))       k=j - i - 1;\n      i=f[i];\n    }\n    if (sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k))       k=j;\n      f[j - k]=-1;\n    }\n else     f[j - k]=i + 1;\n  }\n  return k;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 148,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 531,
        "startLineNumber" : 13,
        "startColumnNumber" : 2,
        "endLineNumber" : 31,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static int leastCyclicRotation(String s){\n  s+=s;\n  int[] f=new int[s.length()];\n  java.util.Arrays.fill(f,-1);\n  int k=0;\n  for (int j=1; j < s.length(); j++) {\n    char sj=s.charAt(j);\n    int i=f[j - k - 1];\n    while (i != -1 && sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k + i + 1))       k=j - i - 1;\n      i=f[i];\n    }\n    if (sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k))       k=j;\n      f[j - k]=-1;\n    }\n else     f[j - k]=i + 1;\n  }\n  return k;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 157,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 27,
        "startColumnNumber" : 8,
        "endLineNumber" : 27,
        "endColumnNumber" : 22
      },
      "nodeContext" : "f[j - k]=-1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  }, {
    "nodeContext" : "1",
    "nodeType" : "NumberLiteral",
    "nodePosition" : {
      "charLength" : 1,
      "startLineNumber" : 28,
      "startColumnNumber" : 28,
      "endLineNumber" : 28,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 5,
        "startLineNumber" : 28,
        "startColumnNumber" : 24,
        "endLineNumber" : 28,
        "endColumnNumber" : 29
      },
      "nodeContext" : "i + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 28,
        "startColumnNumber" : 13,
        "endLineNumber" : 28,
        "endColumnNumber" : 29
      },
      "nodeContext" : "f[j - k]=i + 1",
      "nodeType" : "Assignment",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 28,
        "startColumnNumber" : 13,
        "endLineNumber" : 28,
        "endColumnNumber" : 30
      },
      "nodeContext" : "f[j - k]=i + 1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 25,
        "startColumnNumber" : 6,
        "endLineNumber" : 28,
        "endColumnNumber" : 30
      },
      "nodeContext" : "if (sj != s.charAt(k + i + 1)) {\n  if (sj < s.charAt(k))   k=j;\n  f[j - k]=-1;\n}\n else f[j - k]=i + 1;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 41,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 326,
        "startLineNumber" : 18,
        "startColumnNumber" : 41,
        "endLineNumber" : 29,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  char sj=s.charAt(j);\n  int i=f[j - k - 1];\n  while (i != -1 && sj != s.charAt(k + i + 1)) {\n    if (sj < s.charAt(k + i + 1))     k=j - i - 1;\n    i=f[i];\n  }\n  if (sj != s.charAt(k + i + 1)) {\n    if (sj < s.charAt(k))     k=j;\n    f[j - k]=-1;\n  }\n else   f[j - k]=i + 1;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 99,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 363,
        "startLineNumber" : 18,
        "startColumnNumber" : 4,
        "endLineNumber" : 29,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int j=1; j < s.length(); j++) {\n  char sj=s.charAt(j);\n  int i=f[j - k - 1];\n  while (i != -1 && sj != s.charAt(k + i + 1)) {\n    if (sj < s.charAt(k + i + 1))     k=j - i - 1;\n    i=f[i];\n  }\n  if (sj != s.charAt(k + i + 1)) {\n    if (sj < s.charAt(k))     k=j;\n    f[j - k]=-1;\n  }\n else   f[j - k]=i + 1;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 112,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 483,
        "startLineNumber" : 13,
        "startColumnNumber" : 50,
        "endLineNumber" : 31,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  s+=s;\n  int[] f=new int[s.length()];\n  java.util.Arrays.fill(f,-1);\n  int k=0;\n  for (int j=1; j < s.length(); j++) {\n    char sj=s.charAt(j);\n    int i=f[j - k - 1];\n    while (i != -1 && sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k + i + 1))       k=j - i - 1;\n      i=f[i];\n    }\n    if (sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k))       k=j;\n      f[j - k]=-1;\n    }\n else     f[j - k]=i + 1;\n  }\n  return k;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 148,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 531,
        "startLineNumber" : 13,
        "startColumnNumber" : 2,
        "endLineNumber" : 31,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static int leastCyclicRotation(String s){\n  s+=s;\n  int[] f=new int[s.length()];\n  java.util.Arrays.fill(f,-1);\n  int k=0;\n  for (int j=1; j < s.length(); j++) {\n    char sj=s.charAt(j);\n    int i=f[j - k - 1];\n    while (i != -1 && sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k + i + 1))       k=j - i - 1;\n      i=f[i];\n    }\n    if (sj != s.charAt(k + i + 1)) {\n      if (sj < s.charAt(k))       k=j;\n      f[j - k]=-1;\n    }\n else     f[j - k]=i + 1;\n  }\n  return k;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 157,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 28,
        "startColumnNumber" : 13,
        "endLineNumber" : 28,
        "endColumnNumber" : 30
      },
      "nodeContext" : "f[j - k]=i + 1;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 1,
    "startLineNumber" : 16,
    "startColumnNumber" : 30,
    "endLineNumber" : 16,
    "endColumnNumber" : 31
  }, {
    "charLength" : 1,
    "startLineNumber" : 18,
    "startColumnNumber" : 17,
    "endLineNumber" : 18,
    "endColumnNumber" : 18
  }, {
    "charLength" : 1,
    "startLineNumber" : 20,
    "startColumnNumber" : 24,
    "endLineNumber" : 20,
    "endColumnNumber" : 25
  }, {
    "charLength" : 1,
    "startLineNumber" : 21,
    "startColumnNumber" : 19,
    "endLineNumber" : 21,
    "endColumnNumber" : 20
  }, {
    "charLength" : 1,
    "startLineNumber" : 21,
    "startColumnNumber" : 47,
    "endLineNumber" : 21,
    "endColumnNumber" : 48
  }, {
    "charLength" : 1,
    "startLineNumber" : 22,
    "startColumnNumber" : 34,
    "endLineNumber" : 22,
    "endColumnNumber" : 35
  }, {
    "charLength" : 1,
    "startLineNumber" : 22,
    "startColumnNumber" : 50,
    "endLineNumber" : 22,
    "endColumnNumber" : 51
  }, {
    "charLength" : 1,
    "startLineNumber" : 25,
    "startColumnNumber" : 33,
    "endLineNumber" : 25,
    "endColumnNumber" : 34
  }, {
    "charLength" : 1,
    "startLineNumber" : 27,
    "startColumnNumber" : 20,
    "endLineNumber" : 27,
    "endColumnNumber" : 21
  }, {
    "charLength" : 1,
    "startLineNumber" : 28,
    "startColumnNumber" : 28,
    "endLineNumber" : 28,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 7,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 8,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 9,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 8,
    "layout" : 4
  }, {
    "firstKey" : 3,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 4,
    "secondKey" : 7,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 8,
    "layout" : 5
  }, {
    "firstKey" : 4,
    "secondKey" : 9,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 3
  }, {
    "firstKey" : 5,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 5,
    "secondKey" : 9,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 8
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 3
  }, {
    "firstKey" : 6,
    "secondKey" : 7,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 8,
    "layout" : 6
  }, {
    "firstKey" : 6,
    "secondKey" : 9,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 7,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 7,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 7,
    "secondKey" : 8,
    "layout" : 3
  }, {
    "firstKey" : 7,
    "secondKey" : 9,
    "layout" : 3
  }, {
    "firstKey" : 8,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 8,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 8,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 4,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 5,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 6,
    "layout" : 5
  }, {
    "firstKey" : 8,
    "secondKey" : 7,
    "layout" : 4
  }, {
    "firstKey" : 8,
    "secondKey" : 9,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 9,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 9,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 5,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 9,
    "secondKey" : 7,
    "layout" : 3
  }, {
    "firstKey" : 9,
    "secondKey" : 8,
    "layout" : 3
  } ]
}