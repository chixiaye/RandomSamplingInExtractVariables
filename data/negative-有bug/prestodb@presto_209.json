{
  "id" : 209,
  "expression" : "otherDiskRange.getEnd()",
  "projectName" : "prestodb@presto",
  "commitID" : "eff77883d0d24dc6022ecde252612d1430c9fbac",
  "filePath" : "/presto-orc/src/main/java/com/facebook/presto/orc/DiskRange.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "otherDiskRange.getEnd()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 23,
      "startLineNumber" : 66,
      "startColumnNumber" : 38,
      "endLineNumber" : 66,
      "endColumnNumber" : 61
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 66,
        "startColumnNumber" : 19,
        "endLineNumber" : 66,
        "endColumnNumber" : 62
      },
      "nodeContext" : "Math.max(getEnd(),otherDiskRange.getEnd())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 66,
        "startColumnNumber" : 13,
        "endLineNumber" : 66,
        "endColumnNumber" : 62
      },
      "nodeContext" : "end=Math.max(getEnd(),otherDiskRange.getEnd())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 63
      },
      "nodeContext" : "long end=Math.max(getEnd(),otherDiskRange.getEnd());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 271,
        "startLineNumber" : 63,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  requireNonNull(otherDiskRange,\"otherDiskRange is null\");\n  long start=Math.min(this.offset,otherDiskRange.getOffset());\n  long end=Math.max(getEnd(),otherDiskRange.getEnd());\n  return new DiskRange(start,toIntExact(end - start));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 517,
        "startLineNumber" : 57,
        "startColumnNumber" : 4,
        "endLineNumber" : 68,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Returns the minimal DiskRange that encloses both this DiskRange and otherDiskRange. If there was a gap between the ranges the new range will cover that gap.\n */\npublic DiskRange span(DiskRange otherDiskRange){\n  requireNonNull(otherDiskRange,\"otherDiskRange is null\");\n  long start=Math.min(this.offset,otherDiskRange.getOffset());\n  long end=Math.max(getEnd(),otherDiskRange.getEnd());\n  return new DiskRange(start,toIntExact(end - start));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 51,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 66,
        "startColumnNumber" : 8,
        "endLineNumber" : 66,
        "endColumnNumber" : 63
      },
      "nodeContext" : "long end=Math.max(getEnd(),otherDiskRange.getEnd());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 23,
    "startLineNumber" : 66,
    "startColumnNumber" : 38,
    "endLineNumber" : 66,
    "endColumnNumber" : 61
  } ],
  "layoutRelationDataList" : [ ]
}