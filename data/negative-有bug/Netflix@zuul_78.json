{
  "id" : 78,
  "expression" : "file",
  "projectName" : "Netflix@zuul",
  "commitID" : "f8ef3551d8dd57a512336315ec51bb6c0444c517",
  "filePath" : "/zuul-core/src/main/java/com/netflix/zuul/FilterLoader.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "file",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 117,
      "startColumnNumber" : 27,
      "endLineNumber" : 117,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 117,
        "startColumnNumber" : 27,
        "endLineNumber" : 117,
        "endColumnNumber" : 49
      },
      "nodeContext" : "file.getAbsolutePath()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 117,
        "startColumnNumber" : 19,
        "endLineNumber" : 117,
        "endColumnNumber" : 49
      },
      "nodeContext" : "sName=file.getAbsolutePath()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 117,
        "startColumnNumber" : 12,
        "endLineNumber" : 117,
        "endColumnNumber" : 50
      },
      "nodeContext" : "String sName=file.getAbsolutePath();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 711,
        "startLineNumber" : 116,
        "startColumnNumber" : 12,
        "endLineNumber" : 131,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String sName=file.getAbsolutePath();\n  if (filterClassLastModified.get(sName) != null && (file.lastModified() != filterClassLastModified.get(sName))) {\n    LOG.debug(\"reloading filter \" + sName);\n    filterRegistry.remove(sName);\n  }\n  ZuulFilter filter=filterRegistry.get(sName);\n  if (filter == null) {\n    Class clazz=compiler.compile(file);\n    if (!Modifier.isAbstract(clazz.getModifiers())) {\n      filter=filterFactory.newInstance(clazz);\n      putFilter(sName,filter,file.lastModified());\n      return true;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 88,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 873,
        "startLineNumber" : 116,
        "startColumnNumber" : 8,
        "endLineNumber" : 135,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  String sName=file.getAbsolutePath();\n  if (filterClassLastModified.get(sName) != null && (file.lastModified() != filterClassLastModified.get(sName))) {\n    LOG.debug(\"reloading filter \" + sName);\n    filterRegistry.remove(sName);\n  }\n  ZuulFilter filter=filterRegistry.get(sName);\n  if (filter == null) {\n    Class clazz=compiler.compile(file);\n    if (!Modifier.isAbstract(clazz.getModifiers())) {\n      filter=filterFactory.newInstance(clazz);\n      putFilter(sName,filter,file.lastModified());\n      return true;\n    }\n  }\n}\n catch (Exception e) {\n  LOG.error(\"Error loading filter! Continuing. file=\" + String.valueOf(file),e);\n  return false;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 108,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 912,
        "startLineNumber" : 115,
        "startColumnNumber" : 4,
        "endLineNumber" : 138,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    String sName=file.getAbsolutePath();\n    if (filterClassLastModified.get(sName) != null && (file.lastModified() != filterClassLastModified.get(sName))) {\n      LOG.debug(\"reloading filter \" + sName);\n      filterRegistry.remove(sName);\n    }\n    ZuulFilter filter=filterRegistry.get(sName);\n    if (filter == null) {\n      Class clazz=compiler.compile(file);\n      if (!Modifier.isAbstract(clazz.getModifiers())) {\n        filter=filterFactory.newInstance(clazz);\n        putFilter(sName,filter,file.lastModified());\n        return true;\n      }\n    }\n  }\n catch (  Exception e) {\n    LOG.error(\"Error loading filter! Continuing. file=\" + String.valueOf(file),e);\n    return false;\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1381,
        "startLineNumber" : 104,
        "startColumnNumber" : 4,
        "endLineNumber" : 138,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * From a file this will read the ZuulFilter source code, compile it, and add it to the list of current filters a true response means that it was successful.\n * @param file\n * @return true if the filter in file successfully read, compiled, verified and added to Zuul\n * @throws IllegalAccessException\n * @throws InstantiationException\n * @throws IOException\n */\npublic boolean putFilter(File file) throws Exception {\n  try {\n    String sName=file.getAbsolutePath();\n    if (filterClassLastModified.get(sName) != null && (file.lastModified() != filterClassLastModified.get(sName))) {\n      LOG.debug(\"reloading filter \" + sName);\n      filterRegistry.remove(sName);\n    }\n    ZuulFilter filter=filterRegistry.get(sName);\n    if (filter == null) {\n      Class clazz=compiler.compile(file);\n      if (!Modifier.isAbstract(clazz.getModifiers())) {\n        filter=filterFactory.newInstance(clazz);\n        putFilter(sName,filter,file.lastModified());\n        return true;\n      }\n    }\n  }\n catch (  Exception e) {\n    LOG.error(\"Error loading filter! Continuing. file=\" + String.valueOf(file),e);\n    return false;\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 117,
        "startColumnNumber" : 12,
        "endLineNumber" : 117,
        "endColumnNumber" : 50
      },
      "nodeContext" : "String sName=file.getAbsolutePath();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.io.File"
  }, {
    "nodeContext" : "file",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 118,
      "startColumnNumber" : 63,
      "endLineNumber" : 118,
      "endColumnNumber" : 67
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 118,
        "startColumnNumber" : 63,
        "endLineNumber" : 118,
        "endColumnNumber" : 82
      },
      "nodeContext" : "file.lastModified()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 118,
        "startColumnNumber" : 63,
        "endLineNumber" : 118,
        "endColumnNumber" : 120
      },
      "nodeContext" : "file.lastModified() != filterClassLastModified.get(sName)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 118,
        "startColumnNumber" : 62,
        "endLineNumber" : 118,
        "endColumnNumber" : 121
      },
      "nodeContext" : "(file.lastModified() != filterClassLastModified.get(sName))",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 118,
        "startColumnNumber" : 16,
        "endLineNumber" : 118,
        "endColumnNumber" : 121
      },
      "nodeContext" : "filterClassLastModified.get(sName) != null && (file.lastModified() != filterClassLastModified.get(sName))",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 228,
        "startLineNumber" : 118,
        "startColumnNumber" : 12,
        "endLineNumber" : 121,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (filterClassLastModified.get(sName) != null && (file.lastModified() != filterClassLastModified.get(sName))) {\n  LOG.debug(\"reloading filter \" + sName);\n  filterRegistry.remove(sName);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 30,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 711,
        "startLineNumber" : 116,
        "startColumnNumber" : 12,
        "endLineNumber" : 131,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String sName=file.getAbsolutePath();\n  if (filterClassLastModified.get(sName) != null && (file.lastModified() != filterClassLastModified.get(sName))) {\n    LOG.debug(\"reloading filter \" + sName);\n    filterRegistry.remove(sName);\n  }\n  ZuulFilter filter=filterRegistry.get(sName);\n  if (filter == null) {\n    Class clazz=compiler.compile(file);\n    if (!Modifier.isAbstract(clazz.getModifiers())) {\n      filter=filterFactory.newInstance(clazz);\n      putFilter(sName,filter,file.lastModified());\n      return true;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 88,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 873,
        "startLineNumber" : 116,
        "startColumnNumber" : 8,
        "endLineNumber" : 135,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  String sName=file.getAbsolutePath();\n  if (filterClassLastModified.get(sName) != null && (file.lastModified() != filterClassLastModified.get(sName))) {\n    LOG.debug(\"reloading filter \" + sName);\n    filterRegistry.remove(sName);\n  }\n  ZuulFilter filter=filterRegistry.get(sName);\n  if (filter == null) {\n    Class clazz=compiler.compile(file);\n    if (!Modifier.isAbstract(clazz.getModifiers())) {\n      filter=filterFactory.newInstance(clazz);\n      putFilter(sName,filter,file.lastModified());\n      return true;\n    }\n  }\n}\n catch (Exception e) {\n  LOG.error(\"Error loading filter! Continuing. file=\" + String.valueOf(file),e);\n  return false;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 108,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 912,
        "startLineNumber" : 115,
        "startColumnNumber" : 4,
        "endLineNumber" : 138,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    String sName=file.getAbsolutePath();\n    if (filterClassLastModified.get(sName) != null && (file.lastModified() != filterClassLastModified.get(sName))) {\n      LOG.debug(\"reloading filter \" + sName);\n      filterRegistry.remove(sName);\n    }\n    ZuulFilter filter=filterRegistry.get(sName);\n    if (filter == null) {\n      Class clazz=compiler.compile(file);\n      if (!Modifier.isAbstract(clazz.getModifiers())) {\n        filter=filterFactory.newInstance(clazz);\n        putFilter(sName,filter,file.lastModified());\n        return true;\n      }\n    }\n  }\n catch (  Exception e) {\n    LOG.error(\"Error loading filter! Continuing. file=\" + String.valueOf(file),e);\n    return false;\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1381,
        "startLineNumber" : 104,
        "startColumnNumber" : 4,
        "endLineNumber" : 138,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * From a file this will read the ZuulFilter source code, compile it, and add it to the list of current filters a true response means that it was successful.\n * @param file\n * @return true if the filter in file successfully read, compiled, verified and added to Zuul\n * @throws IllegalAccessException\n * @throws InstantiationException\n * @throws IOException\n */\npublic boolean putFilter(File file) throws Exception {\n  try {\n    String sName=file.getAbsolutePath();\n    if (filterClassLastModified.get(sName) != null && (file.lastModified() != filterClassLastModified.get(sName))) {\n      LOG.debug(\"reloading filter \" + sName);\n      filterRegistry.remove(sName);\n    }\n    ZuulFilter filter=filterRegistry.get(sName);\n    if (filter == null) {\n      Class clazz=compiler.compile(file);\n      if (!Modifier.isAbstract(clazz.getModifiers())) {\n        filter=filterFactory.newInstance(clazz);\n        putFilter(sName,filter,file.lastModified());\n        return true;\n      }\n    }\n  }\n catch (  Exception e) {\n    LOG.error(\"Error loading filter! Continuing. file=\" + String.valueOf(file),e);\n    return false;\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 118,
        "startColumnNumber" : 16,
        "endLineNumber" : 118,
        "endColumnNumber" : 121
      },
      "nodeContext" : "filterClassLastModified.get(sName) != null && (file.lastModified() != filterClassLastModified.get(sName))",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.io.File"
  }, {
    "nodeContext" : "file",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 124,
      "startColumnNumber" : 47,
      "endLineNumber" : 124,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 124,
        "startColumnNumber" : 30,
        "endLineNumber" : 124,
        "endColumnNumber" : 52
      },
      "nodeContext" : "compiler.compile(file)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 124,
        "startColumnNumber" : 22,
        "endLineNumber" : 124,
        "endColumnNumber" : 52
      },
      "nodeContext" : "clazz=compiler.compile(file)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 124,
        "startColumnNumber" : 16,
        "endLineNumber" : 124,
        "endColumnNumber" : 53
      },
      "nodeContext" : "Class clazz=compiler.compile(file);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 316,
        "startLineNumber" : 123,
        "startColumnNumber" : 32,
        "endLineNumber" : 130,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Class clazz=compiler.compile(file);\n  if (!Modifier.isAbstract(clazz.getModifiers())) {\n    filter=filterFactory.newInstance(clazz);\n    putFilter(sName,filter,file.lastModified());\n    return true;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 336,
        "startLineNumber" : 123,
        "startColumnNumber" : 12,
        "endLineNumber" : 130,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (filter == null) {\n  Class clazz=compiler.compile(file);\n  if (!Modifier.isAbstract(clazz.getModifiers())) {\n    filter=filterFactory.newInstance(clazz);\n    putFilter(sName,filter,file.lastModified());\n    return true;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 40,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 711,
        "startLineNumber" : 116,
        "startColumnNumber" : 12,
        "endLineNumber" : 131,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String sName=file.getAbsolutePath();\n  if (filterClassLastModified.get(sName) != null && (file.lastModified() != filterClassLastModified.get(sName))) {\n    LOG.debug(\"reloading filter \" + sName);\n    filterRegistry.remove(sName);\n  }\n  ZuulFilter filter=filterRegistry.get(sName);\n  if (filter == null) {\n    Class clazz=compiler.compile(file);\n    if (!Modifier.isAbstract(clazz.getModifiers())) {\n      filter=filterFactory.newInstance(clazz);\n      putFilter(sName,filter,file.lastModified());\n      return true;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 88,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 873,
        "startLineNumber" : 116,
        "startColumnNumber" : 8,
        "endLineNumber" : 135,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  String sName=file.getAbsolutePath();\n  if (filterClassLastModified.get(sName) != null && (file.lastModified() != filterClassLastModified.get(sName))) {\n    LOG.debug(\"reloading filter \" + sName);\n    filterRegistry.remove(sName);\n  }\n  ZuulFilter filter=filterRegistry.get(sName);\n  if (filter == null) {\n    Class clazz=compiler.compile(file);\n    if (!Modifier.isAbstract(clazz.getModifiers())) {\n      filter=filterFactory.newInstance(clazz);\n      putFilter(sName,filter,file.lastModified());\n      return true;\n    }\n  }\n}\n catch (Exception e) {\n  LOG.error(\"Error loading filter! Continuing. file=\" + String.valueOf(file),e);\n  return false;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 108,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 912,
        "startLineNumber" : 115,
        "startColumnNumber" : 4,
        "endLineNumber" : 138,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    String sName=file.getAbsolutePath();\n    if (filterClassLastModified.get(sName) != null && (file.lastModified() != filterClassLastModified.get(sName))) {\n      LOG.debug(\"reloading filter \" + sName);\n      filterRegistry.remove(sName);\n    }\n    ZuulFilter filter=filterRegistry.get(sName);\n    if (filter == null) {\n      Class clazz=compiler.compile(file);\n      if (!Modifier.isAbstract(clazz.getModifiers())) {\n        filter=filterFactory.newInstance(clazz);\n        putFilter(sName,filter,file.lastModified());\n        return true;\n      }\n    }\n  }\n catch (  Exception e) {\n    LOG.error(\"Error loading filter! Continuing. file=\" + String.valueOf(file),e);\n    return false;\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1381,
        "startLineNumber" : 104,
        "startColumnNumber" : 4,
        "endLineNumber" : 138,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * From a file this will read the ZuulFilter source code, compile it, and add it to the list of current filters a true response means that it was successful.\n * @param file\n * @return true if the filter in file successfully read, compiled, verified and added to Zuul\n * @throws IllegalAccessException\n * @throws InstantiationException\n * @throws IOException\n */\npublic boolean putFilter(File file) throws Exception {\n  try {\n    String sName=file.getAbsolutePath();\n    if (filterClassLastModified.get(sName) != null && (file.lastModified() != filterClassLastModified.get(sName))) {\n      LOG.debug(\"reloading filter \" + sName);\n      filterRegistry.remove(sName);\n    }\n    ZuulFilter filter=filterRegistry.get(sName);\n    if (filter == null) {\n      Class clazz=compiler.compile(file);\n      if (!Modifier.isAbstract(clazz.getModifiers())) {\n        filter=filterFactory.newInstance(clazz);\n        putFilter(sName,filter,file.lastModified());\n        return true;\n      }\n    }\n  }\n catch (  Exception e) {\n    LOG.error(\"Error loading filter! Continuing. file=\" + String.valueOf(file),e);\n    return false;\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 124,
        "startColumnNumber" : 16,
        "endLineNumber" : 124,
        "endColumnNumber" : 53
      },
      "nodeContext" : "Class clazz=compiler.compile(file);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.io.File"
  }, {
    "nodeContext" : "file",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 127,
      "startColumnNumber" : 45,
      "endLineNumber" : 127,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 127,
        "startColumnNumber" : 45,
        "endLineNumber" : 127,
        "endColumnNumber" : 64
      },
      "nodeContext" : "file.lastModified()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 127,
        "startColumnNumber" : 20,
        "endLineNumber" : 127,
        "endColumnNumber" : 65
      },
      "nodeContext" : "putFilter(sName,filter,file.lastModified())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 127,
        "startColumnNumber" : 20,
        "endLineNumber" : 127,
        "endColumnNumber" : 66
      },
      "nodeContext" : "putFilter(sName,filter,file.lastModified());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 182,
        "startLineNumber" : 125,
        "startColumnNumber" : 64,
        "endLineNumber" : 129,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  filter=filterFactory.newInstance(clazz);\n  putFilter(sName,filter,file.lastModified());\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 18,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 230,
        "startLineNumber" : 125,
        "startColumnNumber" : 16,
        "endLineNumber" : 129,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (!Modifier.isAbstract(clazz.getModifiers())) {\n  filter=filterFactory.newInstance(clazz);\n  putFilter(sName,filter,file.lastModified());\n  return true;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 26,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 316,
        "startLineNumber" : 123,
        "startColumnNumber" : 32,
        "endLineNumber" : 130,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  Class clazz=compiler.compile(file);\n  if (!Modifier.isAbstract(clazz.getModifiers())) {\n    filter=filterFactory.newInstance(clazz);\n    putFilter(sName,filter,file.lastModified());\n    return true;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 336,
        "startLineNumber" : 123,
        "startColumnNumber" : 12,
        "endLineNumber" : 130,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (filter == null) {\n  Class clazz=compiler.compile(file);\n  if (!Modifier.isAbstract(clazz.getModifiers())) {\n    filter=filterFactory.newInstance(clazz);\n    putFilter(sName,filter,file.lastModified());\n    return true;\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 40,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 711,
        "startLineNumber" : 116,
        "startColumnNumber" : 12,
        "endLineNumber" : 131,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  String sName=file.getAbsolutePath();\n  if (filterClassLastModified.get(sName) != null && (file.lastModified() != filterClassLastModified.get(sName))) {\n    LOG.debug(\"reloading filter \" + sName);\n    filterRegistry.remove(sName);\n  }\n  ZuulFilter filter=filterRegistry.get(sName);\n  if (filter == null) {\n    Class clazz=compiler.compile(file);\n    if (!Modifier.isAbstract(clazz.getModifiers())) {\n      filter=filterFactory.newInstance(clazz);\n      putFilter(sName,filter,file.lastModified());\n      return true;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 88,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 873,
        "startLineNumber" : 116,
        "startColumnNumber" : 8,
        "endLineNumber" : 135,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  String sName=file.getAbsolutePath();\n  if (filterClassLastModified.get(sName) != null && (file.lastModified() != filterClassLastModified.get(sName))) {\n    LOG.debug(\"reloading filter \" + sName);\n    filterRegistry.remove(sName);\n  }\n  ZuulFilter filter=filterRegistry.get(sName);\n  if (filter == null) {\n    Class clazz=compiler.compile(file);\n    if (!Modifier.isAbstract(clazz.getModifiers())) {\n      filter=filterFactory.newInstance(clazz);\n      putFilter(sName,filter,file.lastModified());\n      return true;\n    }\n  }\n}\n catch (Exception e) {\n  LOG.error(\"Error loading filter! Continuing. file=\" + String.valueOf(file),e);\n  return false;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 108,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 912,
        "startLineNumber" : 115,
        "startColumnNumber" : 4,
        "endLineNumber" : 138,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    String sName=file.getAbsolutePath();\n    if (filterClassLastModified.get(sName) != null && (file.lastModified() != filterClassLastModified.get(sName))) {\n      LOG.debug(\"reloading filter \" + sName);\n      filterRegistry.remove(sName);\n    }\n    ZuulFilter filter=filterRegistry.get(sName);\n    if (filter == null) {\n      Class clazz=compiler.compile(file);\n      if (!Modifier.isAbstract(clazz.getModifiers())) {\n        filter=filterFactory.newInstance(clazz);\n        putFilter(sName,filter,file.lastModified());\n        return true;\n      }\n    }\n  }\n catch (  Exception e) {\n    LOG.error(\"Error loading filter! Continuing. file=\" + String.valueOf(file),e);\n    return false;\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1381,
        "startLineNumber" : 104,
        "startColumnNumber" : 4,
        "endLineNumber" : 138,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * From a file this will read the ZuulFilter source code, compile it, and add it to the list of current filters a true response means that it was successful.\n * @param file\n * @return true if the filter in file successfully read, compiled, verified and added to Zuul\n * @throws IllegalAccessException\n * @throws InstantiationException\n * @throws IOException\n */\npublic boolean putFilter(File file) throws Exception {\n  try {\n    String sName=file.getAbsolutePath();\n    if (filterClassLastModified.get(sName) != null && (file.lastModified() != filterClassLastModified.get(sName))) {\n      LOG.debug(\"reloading filter \" + sName);\n      filterRegistry.remove(sName);\n    }\n    ZuulFilter filter=filterRegistry.get(sName);\n    if (filter == null) {\n      Class clazz=compiler.compile(file);\n      if (!Modifier.isAbstract(clazz.getModifiers())) {\n        filter=filterFactory.newInstance(clazz);\n        putFilter(sName,filter,file.lastModified());\n        return true;\n      }\n    }\n  }\n catch (  Exception e) {\n    LOG.error(\"Error loading filter! Continuing. file=\" + String.valueOf(file),e);\n    return false;\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 127,
        "startColumnNumber" : 20,
        "endLineNumber" : 127,
        "endColumnNumber" : 66
      },
      "nodeContext" : "putFilter(sName,filter,file.lastModified());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.io.File"
  }, {
    "nodeContext" : "file",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 133,
      "startColumnNumber" : 81,
      "endLineNumber" : 133,
      "endColumnNumber" : 85
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 20,
        "startLineNumber" : 133,
        "startColumnNumber" : 66,
        "endLineNumber" : 133,
        "endColumnNumber" : 86
      },
      "nodeContext" : "String.valueOf(file)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 133,
        "startColumnNumber" : 22,
        "endLineNumber" : 133,
        "endColumnNumber" : 86
      },
      "nodeContext" : "\"Error loading filter! Continuing. file=\" + String.valueOf(file)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 133,
        "startColumnNumber" : 12,
        "endLineNumber" : 133,
        "endColumnNumber" : 90
      },
      "nodeContext" : "LOG.error(\"Error loading filter! Continuing. file=\" + String.valueOf(file),e)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 133,
        "startColumnNumber" : 12,
        "endLineNumber" : 133,
        "endColumnNumber" : 91
      },
      "nodeContext" : "LOG.error(\"Error loading filter! Continuing. file=\" + String.valueOf(file),e);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 132,
        "startColumnNumber" : 28,
        "endLineNumber" : 135,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  LOG.error(\"Error loading filter! Continuing. file=\" + String.valueOf(file),e);\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 132,
        "startColumnNumber" : 8,
        "endLineNumber" : 135,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (Exception e) {\n  LOG.error(\"Error loading filter! Continuing. file=\" + String.valueOf(file),e);\n  return false;\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 873,
        "startLineNumber" : 116,
        "startColumnNumber" : 8,
        "endLineNumber" : 135,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  String sName=file.getAbsolutePath();\n  if (filterClassLastModified.get(sName) != null && (file.lastModified() != filterClassLastModified.get(sName))) {\n    LOG.debug(\"reloading filter \" + sName);\n    filterRegistry.remove(sName);\n  }\n  ZuulFilter filter=filterRegistry.get(sName);\n  if (filter == null) {\n    Class clazz=compiler.compile(file);\n    if (!Modifier.isAbstract(clazz.getModifiers())) {\n      filter=filterFactory.newInstance(clazz);\n      putFilter(sName,filter,file.lastModified());\n      return true;\n    }\n  }\n}\n catch (Exception e) {\n  LOG.error(\"Error loading filter! Continuing. file=\" + String.valueOf(file),e);\n  return false;\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 108,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 912,
        "startLineNumber" : 115,
        "startColumnNumber" : 4,
        "endLineNumber" : 138,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    String sName=file.getAbsolutePath();\n    if (filterClassLastModified.get(sName) != null && (file.lastModified() != filterClassLastModified.get(sName))) {\n      LOG.debug(\"reloading filter \" + sName);\n      filterRegistry.remove(sName);\n    }\n    ZuulFilter filter=filterRegistry.get(sName);\n    if (filter == null) {\n      Class clazz=compiler.compile(file);\n      if (!Modifier.isAbstract(clazz.getModifiers())) {\n        filter=filterFactory.newInstance(clazz);\n        putFilter(sName,filter,file.lastModified());\n        return true;\n      }\n    }\n  }\n catch (  Exception e) {\n    LOG.error(\"Error loading filter! Continuing. file=\" + String.valueOf(file),e);\n    return false;\n  }\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 111,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1381,
        "startLineNumber" : 104,
        "startColumnNumber" : 4,
        "endLineNumber" : 138,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * From a file this will read the ZuulFilter source code, compile it, and add it to the list of current filters a true response means that it was successful.\n * @param file\n * @return true if the filter in file successfully read, compiled, verified and added to Zuul\n * @throws IllegalAccessException\n * @throws InstantiationException\n * @throws IOException\n */\npublic boolean putFilter(File file) throws Exception {\n  try {\n    String sName=file.getAbsolutePath();\n    if (filterClassLastModified.get(sName) != null && (file.lastModified() != filterClassLastModified.get(sName))) {\n      LOG.debug(\"reloading filter \" + sName);\n      filterRegistry.remove(sName);\n    }\n    ZuulFilter filter=filterRegistry.get(sName);\n    if (filter == null) {\n      Class clazz=compiler.compile(file);\n      if (!Modifier.isAbstract(clazz.getModifiers())) {\n        filter=filterFactory.newInstance(clazz);\n        putFilter(sName,filter,file.lastModified());\n        return true;\n      }\n    }\n  }\n catch (  Exception e) {\n    LOG.error(\"Error loading filter! Continuing. file=\" + String.valueOf(file),e);\n    return false;\n  }\n  return false;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 79,
        "startLineNumber" : 133,
        "startColumnNumber" : 12,
        "endLineNumber" : 133,
        "endColumnNumber" : 91
      },
      "nodeContext" : "LOG.error(\"Error loading filter! Continuing. file=\" + String.valueOf(file),e);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.io.File"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 117,
    "startColumnNumber" : 27,
    "endLineNumber" : 117,
    "endColumnNumber" : 31
  }, {
    "charLength" : 4,
    "startLineNumber" : 118,
    "startColumnNumber" : 63,
    "endLineNumber" : 118,
    "endColumnNumber" : 67
  }, {
    "charLength" : 4,
    "startLineNumber" : 124,
    "startColumnNumber" : 47,
    "endLineNumber" : 124,
    "endColumnNumber" : 51
  }, {
    "charLength" : 4,
    "startLineNumber" : 127,
    "startColumnNumber" : 45,
    "endLineNumber" : 127,
    "endColumnNumber" : 49
  }, {
    "charLength" : 4,
    "startLineNumber" : 133,
    "startColumnNumber" : 81,
    "endLineNumber" : 133,
    "endColumnNumber" : 85
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 5
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 6
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 7
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 5
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 8
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 6
  } ]
}