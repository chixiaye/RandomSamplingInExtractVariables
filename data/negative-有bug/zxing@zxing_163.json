{
  "id" : 163,
  "expression" : "matrix.get(51,3)",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/test/java/com/google/zxing/common/BitMatrixTestCase.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "matrix.get(51,3)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 105,
      "startColumnNumber" : 15,
      "endLineNumber" : 105,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 105,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 33
      },
      "nodeContext" : "assertTrue(matrix.get(51,3))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 105,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertTrue(matrix.get(51,3));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 682,
        "startLineNumber" : 90,
        "startColumnNumber" : 38,
        "endLineNumber" : 114,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  BitMatrix matrix=new BitMatrix(75,20);\n  assertEquals(75,matrix.getWidth());\n  assertEquals(20,matrix.getHeight());\n  matrix.set(10,0);\n  matrix.set(11,1);\n  matrix.set(50,2);\n  matrix.set(51,3);\n  matrix.flip(74,4);\n  matrix.flip(0,5);\n  assertTrue(matrix.get(10,0));\n  assertTrue(matrix.get(11,1));\n  assertTrue(matrix.get(50,2));\n  assertTrue(matrix.get(51,3));\n  assertTrue(matrix.get(74,4));\n  assertTrue(matrix.get(0,5));\n  matrix.flip(50,2);\n  matrix.flip(51,3);\n  assertFalse(matrix.get(50,2));\n  assertFalse(matrix.get(51,3));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 137,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 727,
        "startLineNumber" : 89,
        "startColumnNumber" : 2,
        "endLineNumber" : 114,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testRectangularMatrix(){\n  BitMatrix matrix=new BitMatrix(75,20);\n  assertEquals(75,matrix.getWidth());\n  assertEquals(20,matrix.getHeight());\n  matrix.set(10,0);\n  matrix.set(11,1);\n  matrix.set(50,2);\n  matrix.set(51,3);\n  matrix.flip(74,4);\n  matrix.flip(0,5);\n  assertTrue(matrix.get(10,0));\n  assertTrue(matrix.get(11,1));\n  assertTrue(matrix.get(50,2));\n  assertTrue(matrix.get(51,3));\n  assertTrue(matrix.get(74,4));\n  assertTrue(matrix.get(0,5));\n  matrix.flip(50,2);\n  matrix.flip(51,3);\n  assertFalse(matrix.get(50,2));\n  assertFalse(matrix.get(51,3));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 143,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 105,
        "startColumnNumber" : 4,
        "endLineNumber" : 105,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertTrue(matrix.get(51,3));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "boolean"
  }, {
    "nodeContext" : "matrix.get(51,3)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 17,
      "startLineNumber" : 113,
      "startColumnNumber" : 16,
      "endLineNumber" : 113,
      "endColumnNumber" : 33
    },
    "astNodeNumber" : 5,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 113,
        "startColumnNumber" : 4,
        "endLineNumber" : 113,
        "endColumnNumber" : 34
      },
      "nodeContext" : "assertFalse(matrix.get(51,3))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 113,
        "startColumnNumber" : 4,
        "endLineNumber" : 113,
        "endColumnNumber" : 35
      },
      "nodeContext" : "assertFalse(matrix.get(51,3));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 682,
        "startLineNumber" : 90,
        "startColumnNumber" : 38,
        "endLineNumber" : 114,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  BitMatrix matrix=new BitMatrix(75,20);\n  assertEquals(75,matrix.getWidth());\n  assertEquals(20,matrix.getHeight());\n  matrix.set(10,0);\n  matrix.set(11,1);\n  matrix.set(50,2);\n  matrix.set(51,3);\n  matrix.flip(74,4);\n  matrix.flip(0,5);\n  assertTrue(matrix.get(10,0));\n  assertTrue(matrix.get(11,1));\n  assertTrue(matrix.get(50,2));\n  assertTrue(matrix.get(51,3));\n  assertTrue(matrix.get(74,4));\n  assertTrue(matrix.get(0,5));\n  matrix.flip(50,2);\n  matrix.flip(51,3);\n  assertFalse(matrix.get(50,2));\n  assertFalse(matrix.get(51,3));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 137,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 727,
        "startLineNumber" : 89,
        "startColumnNumber" : 2,
        "endLineNumber" : 114,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testRectangularMatrix(){\n  BitMatrix matrix=new BitMatrix(75,20);\n  assertEquals(75,matrix.getWidth());\n  assertEquals(20,matrix.getHeight());\n  matrix.set(10,0);\n  matrix.set(11,1);\n  matrix.set(50,2);\n  matrix.set(51,3);\n  matrix.flip(74,4);\n  matrix.flip(0,5);\n  assertTrue(matrix.get(10,0));\n  assertTrue(matrix.get(11,1));\n  assertTrue(matrix.get(50,2));\n  assertTrue(matrix.get(51,3));\n  assertTrue(matrix.get(74,4));\n  assertTrue(matrix.get(0,5));\n  matrix.flip(50,2);\n  matrix.flip(51,3);\n  assertFalse(matrix.get(50,2));\n  assertFalse(matrix.get(51,3));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 143,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 31,
        "startLineNumber" : 113,
        "startColumnNumber" : 4,
        "endLineNumber" : 113,
        "endColumnNumber" : 35
      },
      "nodeContext" : "assertFalse(matrix.get(51,3));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 17,
    "startLineNumber" : 105,
    "startColumnNumber" : 15,
    "endLineNumber" : 105,
    "endColumnNumber" : 32
  }, {
    "charLength" : 17,
    "startLineNumber" : 113,
    "startColumnNumber" : 16,
    "endLineNumber" : 113,
    "endColumnNumber" : 33
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}