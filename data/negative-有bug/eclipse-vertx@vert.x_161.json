{
  "id" : 161,
  "expression" : "vertx.createHttpServer(new HttpServerOptions().setAcceptBacklog(10).setPort(HttpTestBase.DEFAULT_HTTP_PORT))",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/test/java/io/vertx/test/core/HttpRequestStreamTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "vertx.createHttpServer(new HttpServerOptions().setAcceptBacklog(10).setPort(HttpTestBase.DEFAULT_HTTP_PORT))",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 108,
      "startLineNumber" : 69,
      "startColumnNumber" : 18,
      "endLineNumber" : 69,
      "endColumnNumber" : 126
    },
    "astNodeNumber" : 14,
    "astHeight" : 6,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 122,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 126
      },
      "nodeContext" : "this.server=vertx.createHttpServer(new HttpServerOptions().setAcceptBacklog(10).setPort(HttpTestBase.DEFAULT_HTTP_PORT))",
      "nodeType" : "Assignment",
      "astNodeNumber" : 18,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 127
      },
      "nodeContext" : "this.server=vertx.createHttpServer(new HttpServerOptions().setAcceptBacklog(10).setPort(HttpTestBase.DEFAULT_HTTP_PORT));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1393,
        "startLineNumber" : 67,
        "startColumnNumber" : 42,
        "endLineNumber" : 101,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String path=\"/some/path\";\n  this.server=vertx.createHttpServer(new HttpServerOptions().setAcceptBacklog(10).setPort(HttpTestBase.DEFAULT_HTTP_PORT));\n  ReadStream<HttpServerRequest> httpStream=server.requestStream();\n  AtomicBoolean paused=new AtomicBoolean();\n  httpStream.handler(req -> {\n    assertFalse(paused.get());\n    HttpServerResponse response=req.response();\n    response.setStatusCode(200).end();\n    response.close();\n  }\n);\n  server.listen(listenAR -> {\n    assertTrue(listenAR.succeeded());\n    paused.set(true);\n    httpStream.pause();\n    netClient=vertx.createNetClient(new NetClientOptions().setConnectTimeout(1000));\n    netClient.connect(HttpTestBase.DEFAULT_HTTP_PORT,\"localhost\",socketAR -> {\n      assertTrue(socketAR.succeeded());\n      NetSocket socket=socketAR.result();\n      Buffer buffer=Buffer.buffer();\n      socket.handler(buffer::appendBuffer);\n      socket.closeHandler(v -> {\n        assertEquals(0,buffer.length());\n        paused.set(false);\n        httpStream.resume();\n        client=vertx.createHttpClient(new HttpClientOptions());\n        client.request(HttpMethod.GET,HttpTestBase.DEFAULT_HTTP_PORT,\"localhost\",path,resp -> {\n          assertEquals(200,resp.statusCode());\n          testComplete();\n        }\n).end();\n      }\n);\n    }\n);\n  }\n);\n  await();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 218,
      "astHeight" : 22
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1441,
        "startLineNumber" : 66,
        "startColumnNumber" : 2,
        "endLineNumber" : 101,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testReadStreamPauseResume(){\n  String path=\"/some/path\";\n  this.server=vertx.createHttpServer(new HttpServerOptions().setAcceptBacklog(10).setPort(HttpTestBase.DEFAULT_HTTP_PORT));\n  ReadStream<HttpServerRequest> httpStream=server.requestStream();\n  AtomicBoolean paused=new AtomicBoolean();\n  httpStream.handler(req -> {\n    assertFalse(paused.get());\n    HttpServerResponse response=req.response();\n    response.setStatusCode(200).end();\n    response.close();\n  }\n);\n  server.listen(listenAR -> {\n    assertTrue(listenAR.succeeded());\n    paused.set(true);\n    httpStream.pause();\n    netClient=vertx.createNetClient(new NetClientOptions().setConnectTimeout(1000));\n    netClient.connect(HttpTestBase.DEFAULT_HTTP_PORT,\"localhost\",socketAR -> {\n      assertTrue(socketAR.succeeded());\n      NetSocket socket=socketAR.result();\n      Buffer buffer=Buffer.buffer();\n      socket.handler(buffer::appendBuffer);\n      socket.closeHandler(v -> {\n        assertEquals(0,buffer.length());\n        paused.set(false);\n        httpStream.resume();\n        client=vertx.createHttpClient(new HttpClientOptions());\n        client.request(HttpMethod.GET,HttpTestBase.DEFAULT_HTTP_PORT,\"localhost\",path,resp -> {\n          assertEquals(200,resp.statusCode());\n          testComplete();\n        }\n).end();\n      }\n);\n    }\n);\n  }\n);\n  await();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 224,
      "astHeight" : 23
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 69,
        "endColumnNumber" : 127
      },
      "nodeContext" : "this.server=vertx.createHttpServer(new HttpServerOptions().setAcceptBacklog(10).setPort(HttpTestBase.DEFAULT_HTTP_PORT));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 8
    },
    "tokenLength" : 10,
    "type" : "io.vertx.core.http.HttpServer"
  } ],
  "positionList" : [ {
    "charLength" : 108,
    "startLineNumber" : 69,
    "startColumnNumber" : 18,
    "endLineNumber" : 69,
    "endColumnNumber" : 126
  } ],
  "layoutRelationDataList" : [ ]
}