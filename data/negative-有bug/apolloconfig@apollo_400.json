{
  "id" : 400,
  "expression" : "TimeUnit.SECONDS",
  "projectName" : "apolloconfig@apollo",
  "commitID" : "7b7d753f78e444f9cf97b0f238f7e33f585cb277",
  "filePath" : "/apollo-client/src/main/java/com/ctrip/framework/apollo/internals/RemoteConfigLongPollService.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "TimeUnit.SECONDS",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 139,
      "startColumnNumber" : 47,
      "endLineNumber" : 139,
      "endColumnNumber" : 63
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 139,
        "startColumnNumber" : 11,
        "endLineNumber" : 139,
        "endColumnNumber" : 64
      },
      "nodeContext" : "m_longPollRateLimiter.tryAcquire(5,TimeUnit.SECONDS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 139,
        "startColumnNumber" : 10,
        "endLineNumber" : 139,
        "endColumnNumber" : 64
      },
      "nodeContext" : "!m_longPollRateLimiter.tryAcquire(5,TimeUnit.SECONDS)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 206,
        "startLineNumber" : 139,
        "startColumnNumber" : 6,
        "endLineNumber" : 145,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (!m_longPollRateLimiter.tryAcquire(5,TimeUnit.SECONDS)) {\n  try {\n    TimeUnit.SECONDS.sleep(5);\n  }\n catch (  InterruptedException e) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 2368,
        "startLineNumber" : 138,
        "startColumnNumber" : 83,
        "endLineNumber" : 199,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!m_longPollRateLimiter.tryAcquire(5,TimeUnit.SECONDS)) {\n    try {\n      TimeUnit.SECONDS.sleep(5);\n    }\n catch (    InterruptedException e) {\n    }\n  }\n  Transaction transaction=Cat.newTransaction(\"Apollo.ConfigService\",\"pollNotification\");\n  try {\n    if (lastServiceDto == null) {\n      List<ServiceDTO> configServices=getConfigServices();\n      lastServiceDto=configServices.get(random.nextInt(configServices.size()));\n    }\n    String url=assembleLongPollRefreshUrl(lastServiceDto.getHomepageUrl(),appId,cluster,dataCenter,m_notifications);\n    logger.debug(\"Long polling from {}\",url);\n    HttpRequest request=new HttpRequest(url);\n    request.setReadTimeout(600000);\n    transaction.addData(\"Url\",url);\n    final HttpResponse<List<ApolloConfigNotification>> response=m_httpUtil.doGet(request,m_responseType);\n    logger.debug(\"Long polling response: {}, url: {}\",response.getStatusCode(),url);\n    if (response.getStatusCode() == 200 && response.getBody() != null) {\n      updateNotifications(response.getBody());\n      transaction.addData(\"Result\",response.getBody().toString());\n      notify(lastServiceDto,response.getBody());\n    }\n    if (response.getStatusCode() == 304 && random.nextBoolean()) {\n      lastServiceDto=null;\n    }\n    m_longPollFailSchedulePolicyInSecond.success();\n    transaction.addData(\"StatusCode\",response.getStatusCode());\n    transaction.setStatus(Message.SUCCESS);\n  }\n catch (  Throwable ex) {\n    lastServiceDto=null;\n    Cat.logError(ex);\n    transaction.setStatus(ex);\n    long sleepTimeInSecond=m_longPollFailSchedulePolicyInSecond.fail();\n    logger.warn(\"Long polling failed, will retry in {} seconds. appId: {}, cluster: {}, namespaces: {}, reason: {}\",sleepTimeInSecond,appId,cluster,assembleNamespaces(),ExceptionUtil.getDetailMessage(ex));\n    try {\n      TimeUnit.SECONDS.sleep(sleepTimeInSecond);\n    }\n catch (    InterruptedException ie) {\n    }\n  }\n finally {\n    transaction.complete();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 262,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2447,
        "startLineNumber" : 138,
        "startColumnNumber" : 4,
        "endLineNumber" : 199,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (!m_longPollingStopped.get() && !Thread.currentThread().isInterrupted()) {\n  if (!m_longPollRateLimiter.tryAcquire(5,TimeUnit.SECONDS)) {\n    try {\n      TimeUnit.SECONDS.sleep(5);\n    }\n catch (    InterruptedException e) {\n    }\n  }\n  Transaction transaction=Cat.newTransaction(\"Apollo.ConfigService\",\"pollNotification\");\n  try {\n    if (lastServiceDto == null) {\n      List<ServiceDTO> configServices=getConfigServices();\n      lastServiceDto=configServices.get(random.nextInt(configServices.size()));\n    }\n    String url=assembleLongPollRefreshUrl(lastServiceDto.getHomepageUrl(),appId,cluster,dataCenter,m_notifications);\n    logger.debug(\"Long polling from {}\",url);\n    HttpRequest request=new HttpRequest(url);\n    request.setReadTimeout(600000);\n    transaction.addData(\"Url\",url);\n    final HttpResponse<List<ApolloConfigNotification>> response=m_httpUtil.doGet(request,m_responseType);\n    logger.debug(\"Long polling response: {}, url: {}\",response.getStatusCode(),url);\n    if (response.getStatusCode() == 200 && response.getBody() != null) {\n      updateNotifications(response.getBody());\n      transaction.addData(\"Result\",response.getBody().toString());\n      notify(lastServiceDto,response.getBody());\n    }\n    if (response.getStatusCode() == 304 && random.nextBoolean()) {\n      lastServiceDto=null;\n    }\n    m_longPollFailSchedulePolicyInSecond.success();\n    transaction.addData(\"StatusCode\",response.getStatusCode());\n    transaction.setStatus(Message.SUCCESS);\n  }\n catch (  Throwable ex) {\n    lastServiceDto=null;\n    Cat.logError(ex);\n    transaction.setStatus(ex);\n    long sleepTimeInSecond=m_longPollFailSchedulePolicyInSecond.fail();\n    logger.warn(\"Long polling failed, will retry in {} seconds. appId: {}, cluster: {}, namespaces: {}, reason: {}\",sleepTimeInSecond,appId,cluster,assembleNamespaces(),ExceptionUtil.getDetailMessage(ex));\n    try {\n      TimeUnit.SECONDS.sleep(sleepTimeInSecond);\n    }\n catch (    InterruptedException ie) {\n    }\n  }\n finally {\n    transaction.complete();\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 274,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2535,
        "startLineNumber" : 135,
        "startColumnNumber" : 85,
        "endLineNumber" : 200,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final Random random=new Random();\n  ServiceDTO lastServiceDto=null;\n  while (!m_longPollingStopped.get() && !Thread.currentThread().isInterrupted()) {\n    if (!m_longPollRateLimiter.tryAcquire(5,TimeUnit.SECONDS)) {\n      try {\n        TimeUnit.SECONDS.sleep(5);\n      }\n catch (      InterruptedException e) {\n      }\n    }\n    Transaction transaction=Cat.newTransaction(\"Apollo.ConfigService\",\"pollNotification\");\n    try {\n      if (lastServiceDto == null) {\n        List<ServiceDTO> configServices=getConfigServices();\n        lastServiceDto=configServices.get(random.nextInt(configServices.size()));\n      }\n      String url=assembleLongPollRefreshUrl(lastServiceDto.getHomepageUrl(),appId,cluster,dataCenter,m_notifications);\n      logger.debug(\"Long polling from {}\",url);\n      HttpRequest request=new HttpRequest(url);\n      request.setReadTimeout(600000);\n      transaction.addData(\"Url\",url);\n      final HttpResponse<List<ApolloConfigNotification>> response=m_httpUtil.doGet(request,m_responseType);\n      logger.debug(\"Long polling response: {}, url: {}\",response.getStatusCode(),url);\n      if (response.getStatusCode() == 200 && response.getBody() != null) {\n        updateNotifications(response.getBody());\n        transaction.addData(\"Result\",response.getBody().toString());\n        notify(lastServiceDto,response.getBody());\n      }\n      if (response.getStatusCode() == 304 && random.nextBoolean()) {\n        lastServiceDto=null;\n      }\n      m_longPollFailSchedulePolicyInSecond.success();\n      transaction.addData(\"StatusCode\",response.getStatusCode());\n      transaction.setStatus(Message.SUCCESS);\n    }\n catch (    Throwable ex) {\n      lastServiceDto=null;\n      Cat.logError(ex);\n      transaction.setStatus(ex);\n      long sleepTimeInSecond=m_longPollFailSchedulePolicyInSecond.fail();\n      logger.warn(\"Long polling failed, will retry in {} seconds. appId: {}, cluster: {}, namespaces: {}, reason: {}\",sleepTimeInSecond,appId,cluster,assembleNamespaces(),ExceptionUtil.getDetailMessage(ex));\n      try {\n        TimeUnit.SECONDS.sleep(sleepTimeInSecond);\n      }\n catch (      InterruptedException ie) {\n      }\n    }\n finally {\n      transaction.complete();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 290,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2618,
        "startLineNumber" : 135,
        "startColumnNumber" : 2,
        "endLineNumber" : 200,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void doLongPollingRefresh(String appId,String cluster,String dataCenter){\n  final Random random=new Random();\n  ServiceDTO lastServiceDto=null;\n  while (!m_longPollingStopped.get() && !Thread.currentThread().isInterrupted()) {\n    if (!m_longPollRateLimiter.tryAcquire(5,TimeUnit.SECONDS)) {\n      try {\n        TimeUnit.SECONDS.sleep(5);\n      }\n catch (      InterruptedException e) {\n      }\n    }\n    Transaction transaction=Cat.newTransaction(\"Apollo.ConfigService\",\"pollNotification\");\n    try {\n      if (lastServiceDto == null) {\n        List<ServiceDTO> configServices=getConfigServices();\n        lastServiceDto=configServices.get(random.nextInt(configServices.size()));\n      }\n      String url=assembleLongPollRefreshUrl(lastServiceDto.getHomepageUrl(),appId,cluster,dataCenter,m_notifications);\n      logger.debug(\"Long polling from {}\",url);\n      HttpRequest request=new HttpRequest(url);\n      request.setReadTimeout(600000);\n      transaction.addData(\"Url\",url);\n      final HttpResponse<List<ApolloConfigNotification>> response=m_httpUtil.doGet(request,m_responseType);\n      logger.debug(\"Long polling response: {}, url: {}\",response.getStatusCode(),url);\n      if (response.getStatusCode() == 200 && response.getBody() != null) {\n        updateNotifications(response.getBody());\n        transaction.addData(\"Result\",response.getBody().toString());\n        notify(lastServiceDto,response.getBody());\n      }\n      if (response.getStatusCode() == 304 && random.nextBoolean()) {\n        lastServiceDto=null;\n      }\n      m_longPollFailSchedulePolicyInSecond.success();\n      transaction.addData(\"StatusCode\",response.getStatusCode());\n      transaction.setStatus(Message.SUCCESS);\n    }\n catch (    Throwable ex) {\n      lastServiceDto=null;\n      Cat.logError(ex);\n      transaction.setStatus(ex);\n      long sleepTimeInSecond=m_longPollFailSchedulePolicyInSecond.fail();\n      logger.warn(\"Long polling failed, will retry in {} seconds. appId: {}, cluster: {}, namespaces: {}, reason: {}\",sleepTimeInSecond,appId,cluster,assembleNamespaces(),ExceptionUtil.getDetailMessage(ex));\n      try {\n        TimeUnit.SECONDS.sleep(sleepTimeInSecond);\n      }\n catch (      InterruptedException ie) {\n      }\n    }\n finally {\n      transaction.complete();\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 306,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 139,
        "startColumnNumber" : 10,
        "endLineNumber" : 139,
        "endColumnNumber" : 64
      },
      "nodeContext" : "!m_longPollRateLimiter.tryAcquire(5,TimeUnit.SECONDS)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.util.concurrent.TimeUnit"
  }, {
    "nodeContext" : "TimeUnit.SECONDS",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 142,
      "startColumnNumber" : 10,
      "endLineNumber" : 142,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 142,
        "startColumnNumber" : 10,
        "endLineNumber" : 142,
        "endColumnNumber" : 35
      },
      "nodeContext" : "TimeUnit.SECONDS.sleep(5)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 142,
        "startColumnNumber" : 10,
        "endLineNumber" : 142,
        "endColumnNumber" : 36
      },
      "nodeContext" : "TimeUnit.SECONDS.sleep(5);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 141,
        "startColumnNumber" : 12,
        "endLineNumber" : 143,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  TimeUnit.SECONDS.sleep(5);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 95,
        "startLineNumber" : 141,
        "startColumnNumber" : 8,
        "endLineNumber" : 144,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  TimeUnit.SECONDS.sleep(5);\n}\n catch (InterruptedException e) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 146,
        "startLineNumber" : 139,
        "startColumnNumber" : 66,
        "endLineNumber" : 145,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  try {\n    TimeUnit.SECONDS.sleep(5);\n  }\n catch (  InterruptedException e) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 206,
        "startLineNumber" : 139,
        "startColumnNumber" : 6,
        "endLineNumber" : 145,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (!m_longPollRateLimiter.tryAcquire(5,TimeUnit.SECONDS)) {\n  try {\n    TimeUnit.SECONDS.sleep(5);\n  }\n catch (  InterruptedException e) {\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 2368,
        "startLineNumber" : 138,
        "startColumnNumber" : 83,
        "endLineNumber" : 199,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!m_longPollRateLimiter.tryAcquire(5,TimeUnit.SECONDS)) {\n    try {\n      TimeUnit.SECONDS.sleep(5);\n    }\n catch (    InterruptedException e) {\n    }\n  }\n  Transaction transaction=Cat.newTransaction(\"Apollo.ConfigService\",\"pollNotification\");\n  try {\n    if (lastServiceDto == null) {\n      List<ServiceDTO> configServices=getConfigServices();\n      lastServiceDto=configServices.get(random.nextInt(configServices.size()));\n    }\n    String url=assembleLongPollRefreshUrl(lastServiceDto.getHomepageUrl(),appId,cluster,dataCenter,m_notifications);\n    logger.debug(\"Long polling from {}\",url);\n    HttpRequest request=new HttpRequest(url);\n    request.setReadTimeout(600000);\n    transaction.addData(\"Url\",url);\n    final HttpResponse<List<ApolloConfigNotification>> response=m_httpUtil.doGet(request,m_responseType);\n    logger.debug(\"Long polling response: {}, url: {}\",response.getStatusCode(),url);\n    if (response.getStatusCode() == 200 && response.getBody() != null) {\n      updateNotifications(response.getBody());\n      transaction.addData(\"Result\",response.getBody().toString());\n      notify(lastServiceDto,response.getBody());\n    }\n    if (response.getStatusCode() == 304 && random.nextBoolean()) {\n      lastServiceDto=null;\n    }\n    m_longPollFailSchedulePolicyInSecond.success();\n    transaction.addData(\"StatusCode\",response.getStatusCode());\n    transaction.setStatus(Message.SUCCESS);\n  }\n catch (  Throwable ex) {\n    lastServiceDto=null;\n    Cat.logError(ex);\n    transaction.setStatus(ex);\n    long sleepTimeInSecond=m_longPollFailSchedulePolicyInSecond.fail();\n    logger.warn(\"Long polling failed, will retry in {} seconds. appId: {}, cluster: {}, namespaces: {}, reason: {}\",sleepTimeInSecond,appId,cluster,assembleNamespaces(),ExceptionUtil.getDetailMessage(ex));\n    try {\n      TimeUnit.SECONDS.sleep(sleepTimeInSecond);\n    }\n catch (    InterruptedException ie) {\n    }\n  }\n finally {\n    transaction.complete();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 262,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2447,
        "startLineNumber" : 138,
        "startColumnNumber" : 4,
        "endLineNumber" : 199,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (!m_longPollingStopped.get() && !Thread.currentThread().isInterrupted()) {\n  if (!m_longPollRateLimiter.tryAcquire(5,TimeUnit.SECONDS)) {\n    try {\n      TimeUnit.SECONDS.sleep(5);\n    }\n catch (    InterruptedException e) {\n    }\n  }\n  Transaction transaction=Cat.newTransaction(\"Apollo.ConfigService\",\"pollNotification\");\n  try {\n    if (lastServiceDto == null) {\n      List<ServiceDTO> configServices=getConfigServices();\n      lastServiceDto=configServices.get(random.nextInt(configServices.size()));\n    }\n    String url=assembleLongPollRefreshUrl(lastServiceDto.getHomepageUrl(),appId,cluster,dataCenter,m_notifications);\n    logger.debug(\"Long polling from {}\",url);\n    HttpRequest request=new HttpRequest(url);\n    request.setReadTimeout(600000);\n    transaction.addData(\"Url\",url);\n    final HttpResponse<List<ApolloConfigNotification>> response=m_httpUtil.doGet(request,m_responseType);\n    logger.debug(\"Long polling response: {}, url: {}\",response.getStatusCode(),url);\n    if (response.getStatusCode() == 200 && response.getBody() != null) {\n      updateNotifications(response.getBody());\n      transaction.addData(\"Result\",response.getBody().toString());\n      notify(lastServiceDto,response.getBody());\n    }\n    if (response.getStatusCode() == 304 && random.nextBoolean()) {\n      lastServiceDto=null;\n    }\n    m_longPollFailSchedulePolicyInSecond.success();\n    transaction.addData(\"StatusCode\",response.getStatusCode());\n    transaction.setStatus(Message.SUCCESS);\n  }\n catch (  Throwable ex) {\n    lastServiceDto=null;\n    Cat.logError(ex);\n    transaction.setStatus(ex);\n    long sleepTimeInSecond=m_longPollFailSchedulePolicyInSecond.fail();\n    logger.warn(\"Long polling failed, will retry in {} seconds. appId: {}, cluster: {}, namespaces: {}, reason: {}\",sleepTimeInSecond,appId,cluster,assembleNamespaces(),ExceptionUtil.getDetailMessage(ex));\n    try {\n      TimeUnit.SECONDS.sleep(sleepTimeInSecond);\n    }\n catch (    InterruptedException ie) {\n    }\n  }\n finally {\n    transaction.complete();\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 274,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2535,
        "startLineNumber" : 135,
        "startColumnNumber" : 85,
        "endLineNumber" : 200,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final Random random=new Random();\n  ServiceDTO lastServiceDto=null;\n  while (!m_longPollingStopped.get() && !Thread.currentThread().isInterrupted()) {\n    if (!m_longPollRateLimiter.tryAcquire(5,TimeUnit.SECONDS)) {\n      try {\n        TimeUnit.SECONDS.sleep(5);\n      }\n catch (      InterruptedException e) {\n      }\n    }\n    Transaction transaction=Cat.newTransaction(\"Apollo.ConfigService\",\"pollNotification\");\n    try {\n      if (lastServiceDto == null) {\n        List<ServiceDTO> configServices=getConfigServices();\n        lastServiceDto=configServices.get(random.nextInt(configServices.size()));\n      }\n      String url=assembleLongPollRefreshUrl(lastServiceDto.getHomepageUrl(),appId,cluster,dataCenter,m_notifications);\n      logger.debug(\"Long polling from {}\",url);\n      HttpRequest request=new HttpRequest(url);\n      request.setReadTimeout(600000);\n      transaction.addData(\"Url\",url);\n      final HttpResponse<List<ApolloConfigNotification>> response=m_httpUtil.doGet(request,m_responseType);\n      logger.debug(\"Long polling response: {}, url: {}\",response.getStatusCode(),url);\n      if (response.getStatusCode() == 200 && response.getBody() != null) {\n        updateNotifications(response.getBody());\n        transaction.addData(\"Result\",response.getBody().toString());\n        notify(lastServiceDto,response.getBody());\n      }\n      if (response.getStatusCode() == 304 && random.nextBoolean()) {\n        lastServiceDto=null;\n      }\n      m_longPollFailSchedulePolicyInSecond.success();\n      transaction.addData(\"StatusCode\",response.getStatusCode());\n      transaction.setStatus(Message.SUCCESS);\n    }\n catch (    Throwable ex) {\n      lastServiceDto=null;\n      Cat.logError(ex);\n      transaction.setStatus(ex);\n      long sleepTimeInSecond=m_longPollFailSchedulePolicyInSecond.fail();\n      logger.warn(\"Long polling failed, will retry in {} seconds. appId: {}, cluster: {}, namespaces: {}, reason: {}\",sleepTimeInSecond,appId,cluster,assembleNamespaces(),ExceptionUtil.getDetailMessage(ex));\n      try {\n        TimeUnit.SECONDS.sleep(sleepTimeInSecond);\n      }\n catch (      InterruptedException ie) {\n      }\n    }\n finally {\n      transaction.complete();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 290,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2618,
        "startLineNumber" : 135,
        "startColumnNumber" : 2,
        "endLineNumber" : 200,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void doLongPollingRefresh(String appId,String cluster,String dataCenter){\n  final Random random=new Random();\n  ServiceDTO lastServiceDto=null;\n  while (!m_longPollingStopped.get() && !Thread.currentThread().isInterrupted()) {\n    if (!m_longPollRateLimiter.tryAcquire(5,TimeUnit.SECONDS)) {\n      try {\n        TimeUnit.SECONDS.sleep(5);\n      }\n catch (      InterruptedException e) {\n      }\n    }\n    Transaction transaction=Cat.newTransaction(\"Apollo.ConfigService\",\"pollNotification\");\n    try {\n      if (lastServiceDto == null) {\n        List<ServiceDTO> configServices=getConfigServices();\n        lastServiceDto=configServices.get(random.nextInt(configServices.size()));\n      }\n      String url=assembleLongPollRefreshUrl(lastServiceDto.getHomepageUrl(),appId,cluster,dataCenter,m_notifications);\n      logger.debug(\"Long polling from {}\",url);\n      HttpRequest request=new HttpRequest(url);\n      request.setReadTimeout(600000);\n      transaction.addData(\"Url\",url);\n      final HttpResponse<List<ApolloConfigNotification>> response=m_httpUtil.doGet(request,m_responseType);\n      logger.debug(\"Long polling response: {}, url: {}\",response.getStatusCode(),url);\n      if (response.getStatusCode() == 200 && response.getBody() != null) {\n        updateNotifications(response.getBody());\n        transaction.addData(\"Result\",response.getBody().toString());\n        notify(lastServiceDto,response.getBody());\n      }\n      if (response.getStatusCode() == 304 && random.nextBoolean()) {\n        lastServiceDto=null;\n      }\n      m_longPollFailSchedulePolicyInSecond.success();\n      transaction.addData(\"StatusCode\",response.getStatusCode());\n      transaction.setStatus(Message.SUCCESS);\n    }\n catch (    Throwable ex) {\n      lastServiceDto=null;\n      Cat.logError(ex);\n      transaction.setStatus(ex);\n      long sleepTimeInSecond=m_longPollFailSchedulePolicyInSecond.fail();\n      logger.warn(\"Long polling failed, will retry in {} seconds. appId: {}, cluster: {}, namespaces: {}, reason: {}\",sleepTimeInSecond,appId,cluster,assembleNamespaces(),ExceptionUtil.getDetailMessage(ex));\n      try {\n        TimeUnit.SECONDS.sleep(sleepTimeInSecond);\n      }\n catch (      InterruptedException ie) {\n      }\n    }\n finally {\n      transaction.complete();\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 306,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 26,
        "startLineNumber" : 142,
        "startColumnNumber" : 10,
        "endLineNumber" : 142,
        "endColumnNumber" : 36
      },
      "nodeContext" : "TimeUnit.SECONDS.sleep(5);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.util.concurrent.TimeUnit"
  }, {
    "nodeContext" : "TimeUnit.SECONDS",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 192,
      "startColumnNumber" : 10,
      "endLineNumber" : 192,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 192,
        "startColumnNumber" : 10,
        "endLineNumber" : 192,
        "endColumnNumber" : 51
      },
      "nodeContext" : "TimeUnit.SECONDS.sleep(sleepTimeInSecond)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 192,
        "startColumnNumber" : 10,
        "endLineNumber" : 192,
        "endColumnNumber" : 52
      },
      "nodeContext" : "TimeUnit.SECONDS.sleep(sleepTimeInSecond);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 191,
        "startColumnNumber" : 12,
        "endLineNumber" : 193,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  TimeUnit.SECONDS.sleep(sleepTimeInSecond);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 131,
        "startLineNumber" : 191,
        "startColumnNumber" : 8,
        "endLineNumber" : 195,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  TimeUnit.SECONDS.sleep(sleepTimeInSecond);\n}\n catch (InterruptedException ie) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 571,
        "startLineNumber" : 182,
        "startColumnNumber" : 29,
        "endLineNumber" : 196,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  lastServiceDto=null;\n  Cat.logError(ex);\n  transaction.setStatus(ex);\n  long sleepTimeInSecond=m_longPollFailSchedulePolicyInSecond.fail();\n  logger.warn(\"Long polling failed, will retry in {} seconds. appId: {}, cluster: {}, namespaces: {}, reason: {}\",sleepTimeInSecond,appId,cluster,assembleNamespaces(),ExceptionUtil.getDetailMessage(ex));\n  try {\n    TimeUnit.SECONDS.sleep(sleepTimeInSecond);\n  }\n catch (  InterruptedException ie) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 51,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 592,
        "startLineNumber" : 182,
        "startColumnNumber" : 8,
        "endLineNumber" : 196,
        "endColumnNumber" : 7
      },
      "nodeContext" : "catch (Throwable ex) {\n  lastServiceDto=null;\n  Cat.logError(ex);\n  transaction.setStatus(ex);\n  long sleepTimeInSecond=m_longPollFailSchedulePolicyInSecond.fail();\n  logger.warn(\"Long polling failed, will retry in {} seconds. appId: {}, cluster: {}, namespaces: {}, reason: {}\",sleepTimeInSecond,appId,cluster,assembleNamespaces(),ExceptionUtil.getDetailMessage(ex));\n  try {\n    TimeUnit.SECONDS.sleep(sleepTimeInSecond);\n  }\n catch (  InterruptedException ie) {\n  }\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 56,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2045,
        "startLineNumber" : 147,
        "startColumnNumber" : 6,
        "endLineNumber" : 198,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  if (lastServiceDto == null) {\n    List<ServiceDTO> configServices=getConfigServices();\n    lastServiceDto=configServices.get(random.nextInt(configServices.size()));\n  }\n  String url=assembleLongPollRefreshUrl(lastServiceDto.getHomepageUrl(),appId,cluster,dataCenter,m_notifications);\n  logger.debug(\"Long polling from {}\",url);\n  HttpRequest request=new HttpRequest(url);\n  request.setReadTimeout(600000);\n  transaction.addData(\"Url\",url);\n  final HttpResponse<List<ApolloConfigNotification>> response=m_httpUtil.doGet(request,m_responseType);\n  logger.debug(\"Long polling response: {}, url: {}\",response.getStatusCode(),url);\n  if (response.getStatusCode() == 200 && response.getBody() != null) {\n    updateNotifications(response.getBody());\n    transaction.addData(\"Result\",response.getBody().toString());\n    notify(lastServiceDto,response.getBody());\n  }\n  if (response.getStatusCode() == 304 && random.nextBoolean()) {\n    lastServiceDto=null;\n  }\n  m_longPollFailSchedulePolicyInSecond.success();\n  transaction.addData(\"StatusCode\",response.getStatusCode());\n  transaction.setStatus(Message.SUCCESS);\n}\n catch (Throwable ex) {\n  lastServiceDto=null;\n  Cat.logError(ex);\n  transaction.setStatus(ex);\n  long sleepTimeInSecond=m_longPollFailSchedulePolicyInSecond.fail();\n  logger.warn(\"Long polling failed, will retry in {} seconds. appId: {}, cluster: {}, namespaces: {}, reason: {}\",sleepTimeInSecond,appId,cluster,assembleNamespaces(),ExceptionUtil.getDetailMessage(ex));\n  try {\n    TimeUnit.SECONDS.sleep(sleepTimeInSecond);\n  }\n catch (  InterruptedException ie) {\n  }\n}\n finally {\n  transaction.complete();\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 226,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 2368,
        "startLineNumber" : 138,
        "startColumnNumber" : 83,
        "endLineNumber" : 199,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!m_longPollRateLimiter.tryAcquire(5,TimeUnit.SECONDS)) {\n    try {\n      TimeUnit.SECONDS.sleep(5);\n    }\n catch (    InterruptedException e) {\n    }\n  }\n  Transaction transaction=Cat.newTransaction(\"Apollo.ConfigService\",\"pollNotification\");\n  try {\n    if (lastServiceDto == null) {\n      List<ServiceDTO> configServices=getConfigServices();\n      lastServiceDto=configServices.get(random.nextInt(configServices.size()));\n    }\n    String url=assembleLongPollRefreshUrl(lastServiceDto.getHomepageUrl(),appId,cluster,dataCenter,m_notifications);\n    logger.debug(\"Long polling from {}\",url);\n    HttpRequest request=new HttpRequest(url);\n    request.setReadTimeout(600000);\n    transaction.addData(\"Url\",url);\n    final HttpResponse<List<ApolloConfigNotification>> response=m_httpUtil.doGet(request,m_responseType);\n    logger.debug(\"Long polling response: {}, url: {}\",response.getStatusCode(),url);\n    if (response.getStatusCode() == 200 && response.getBody() != null) {\n      updateNotifications(response.getBody());\n      transaction.addData(\"Result\",response.getBody().toString());\n      notify(lastServiceDto,response.getBody());\n    }\n    if (response.getStatusCode() == 304 && random.nextBoolean()) {\n      lastServiceDto=null;\n    }\n    m_longPollFailSchedulePolicyInSecond.success();\n    transaction.addData(\"StatusCode\",response.getStatusCode());\n    transaction.setStatus(Message.SUCCESS);\n  }\n catch (  Throwable ex) {\n    lastServiceDto=null;\n    Cat.logError(ex);\n    transaction.setStatus(ex);\n    long sleepTimeInSecond=m_longPollFailSchedulePolicyInSecond.fail();\n    logger.warn(\"Long polling failed, will retry in {} seconds. appId: {}, cluster: {}, namespaces: {}, reason: {}\",sleepTimeInSecond,appId,cluster,assembleNamespaces(),ExceptionUtil.getDetailMessage(ex));\n    try {\n      TimeUnit.SECONDS.sleep(sleepTimeInSecond);\n    }\n catch (    InterruptedException ie) {\n    }\n  }\n finally {\n    transaction.complete();\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 262,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2447,
        "startLineNumber" : 138,
        "startColumnNumber" : 4,
        "endLineNumber" : 199,
        "endColumnNumber" : 5
      },
      "nodeContext" : "while (!m_longPollingStopped.get() && !Thread.currentThread().isInterrupted()) {\n  if (!m_longPollRateLimiter.tryAcquire(5,TimeUnit.SECONDS)) {\n    try {\n      TimeUnit.SECONDS.sleep(5);\n    }\n catch (    InterruptedException e) {\n    }\n  }\n  Transaction transaction=Cat.newTransaction(\"Apollo.ConfigService\",\"pollNotification\");\n  try {\n    if (lastServiceDto == null) {\n      List<ServiceDTO> configServices=getConfigServices();\n      lastServiceDto=configServices.get(random.nextInt(configServices.size()));\n    }\n    String url=assembleLongPollRefreshUrl(lastServiceDto.getHomepageUrl(),appId,cluster,dataCenter,m_notifications);\n    logger.debug(\"Long polling from {}\",url);\n    HttpRequest request=new HttpRequest(url);\n    request.setReadTimeout(600000);\n    transaction.addData(\"Url\",url);\n    final HttpResponse<List<ApolloConfigNotification>> response=m_httpUtil.doGet(request,m_responseType);\n    logger.debug(\"Long polling response: {}, url: {}\",response.getStatusCode(),url);\n    if (response.getStatusCode() == 200 && response.getBody() != null) {\n      updateNotifications(response.getBody());\n      transaction.addData(\"Result\",response.getBody().toString());\n      notify(lastServiceDto,response.getBody());\n    }\n    if (response.getStatusCode() == 304 && random.nextBoolean()) {\n      lastServiceDto=null;\n    }\n    m_longPollFailSchedulePolicyInSecond.success();\n    transaction.addData(\"StatusCode\",response.getStatusCode());\n    transaction.setStatus(Message.SUCCESS);\n  }\n catch (  Throwable ex) {\n    lastServiceDto=null;\n    Cat.logError(ex);\n    transaction.setStatus(ex);\n    long sleepTimeInSecond=m_longPollFailSchedulePolicyInSecond.fail();\n    logger.warn(\"Long polling failed, will retry in {} seconds. appId: {}, cluster: {}, namespaces: {}, reason: {}\",sleepTimeInSecond,appId,cluster,assembleNamespaces(),ExceptionUtil.getDetailMessage(ex));\n    try {\n      TimeUnit.SECONDS.sleep(sleepTimeInSecond);\n    }\n catch (    InterruptedException ie) {\n    }\n  }\n finally {\n    transaction.complete();\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 274,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2535,
        "startLineNumber" : 135,
        "startColumnNumber" : 85,
        "endLineNumber" : 200,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final Random random=new Random();\n  ServiceDTO lastServiceDto=null;\n  while (!m_longPollingStopped.get() && !Thread.currentThread().isInterrupted()) {\n    if (!m_longPollRateLimiter.tryAcquire(5,TimeUnit.SECONDS)) {\n      try {\n        TimeUnit.SECONDS.sleep(5);\n      }\n catch (      InterruptedException e) {\n      }\n    }\n    Transaction transaction=Cat.newTransaction(\"Apollo.ConfigService\",\"pollNotification\");\n    try {\n      if (lastServiceDto == null) {\n        List<ServiceDTO> configServices=getConfigServices();\n        lastServiceDto=configServices.get(random.nextInt(configServices.size()));\n      }\n      String url=assembleLongPollRefreshUrl(lastServiceDto.getHomepageUrl(),appId,cluster,dataCenter,m_notifications);\n      logger.debug(\"Long polling from {}\",url);\n      HttpRequest request=new HttpRequest(url);\n      request.setReadTimeout(600000);\n      transaction.addData(\"Url\",url);\n      final HttpResponse<List<ApolloConfigNotification>> response=m_httpUtil.doGet(request,m_responseType);\n      logger.debug(\"Long polling response: {}, url: {}\",response.getStatusCode(),url);\n      if (response.getStatusCode() == 200 && response.getBody() != null) {\n        updateNotifications(response.getBody());\n        transaction.addData(\"Result\",response.getBody().toString());\n        notify(lastServiceDto,response.getBody());\n      }\n      if (response.getStatusCode() == 304 && random.nextBoolean()) {\n        lastServiceDto=null;\n      }\n      m_longPollFailSchedulePolicyInSecond.success();\n      transaction.addData(\"StatusCode\",response.getStatusCode());\n      transaction.setStatus(Message.SUCCESS);\n    }\n catch (    Throwable ex) {\n      lastServiceDto=null;\n      Cat.logError(ex);\n      transaction.setStatus(ex);\n      long sleepTimeInSecond=m_longPollFailSchedulePolicyInSecond.fail();\n      logger.warn(\"Long polling failed, will retry in {} seconds. appId: {}, cluster: {}, namespaces: {}, reason: {}\",sleepTimeInSecond,appId,cluster,assembleNamespaces(),ExceptionUtil.getDetailMessage(ex));\n      try {\n        TimeUnit.SECONDS.sleep(sleepTimeInSecond);\n      }\n catch (      InterruptedException ie) {\n      }\n    }\n finally {\n      transaction.complete();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 290,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2618,
        "startLineNumber" : 135,
        "startColumnNumber" : 2,
        "endLineNumber" : 200,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void doLongPollingRefresh(String appId,String cluster,String dataCenter){\n  final Random random=new Random();\n  ServiceDTO lastServiceDto=null;\n  while (!m_longPollingStopped.get() && !Thread.currentThread().isInterrupted()) {\n    if (!m_longPollRateLimiter.tryAcquire(5,TimeUnit.SECONDS)) {\n      try {\n        TimeUnit.SECONDS.sleep(5);\n      }\n catch (      InterruptedException e) {\n      }\n    }\n    Transaction transaction=Cat.newTransaction(\"Apollo.ConfigService\",\"pollNotification\");\n    try {\n      if (lastServiceDto == null) {\n        List<ServiceDTO> configServices=getConfigServices();\n        lastServiceDto=configServices.get(random.nextInt(configServices.size()));\n      }\n      String url=assembleLongPollRefreshUrl(lastServiceDto.getHomepageUrl(),appId,cluster,dataCenter,m_notifications);\n      logger.debug(\"Long polling from {}\",url);\n      HttpRequest request=new HttpRequest(url);\n      request.setReadTimeout(600000);\n      transaction.addData(\"Url\",url);\n      final HttpResponse<List<ApolloConfigNotification>> response=m_httpUtil.doGet(request,m_responseType);\n      logger.debug(\"Long polling response: {}, url: {}\",response.getStatusCode(),url);\n      if (response.getStatusCode() == 200 && response.getBody() != null) {\n        updateNotifications(response.getBody());\n        transaction.addData(\"Result\",response.getBody().toString());\n        notify(lastServiceDto,response.getBody());\n      }\n      if (response.getStatusCode() == 304 && random.nextBoolean()) {\n        lastServiceDto=null;\n      }\n      m_longPollFailSchedulePolicyInSecond.success();\n      transaction.addData(\"StatusCode\",response.getStatusCode());\n      transaction.setStatus(Message.SUCCESS);\n    }\n catch (    Throwable ex) {\n      lastServiceDto=null;\n      Cat.logError(ex);\n      transaction.setStatus(ex);\n      long sleepTimeInSecond=m_longPollFailSchedulePolicyInSecond.fail();\n      logger.warn(\"Long polling failed, will retry in {} seconds. appId: {}, cluster: {}, namespaces: {}, reason: {}\",sleepTimeInSecond,appId,cluster,assembleNamespaces(),ExceptionUtil.getDetailMessage(ex));\n      try {\n        TimeUnit.SECONDS.sleep(sleepTimeInSecond);\n      }\n catch (      InterruptedException ie) {\n      }\n    }\n finally {\n      transaction.complete();\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 306,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 192,
        "startColumnNumber" : 10,
        "endLineNumber" : 192,
        "endColumnNumber" : 52
      },
      "nodeContext" : "TimeUnit.SECONDS.sleep(sleepTimeInSecond);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.util.concurrent.TimeUnit"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 139,
    "startColumnNumber" : 47,
    "endLineNumber" : 139,
    "endColumnNumber" : 63
  }, {
    "charLength" : 16,
    "startLineNumber" : 142,
    "startColumnNumber" : 10,
    "endLineNumber" : 142,
    "endColumnNumber" : 26
  }, {
    "charLength" : 16,
    "startLineNumber" : 192,
    "startColumnNumber" : 10,
    "endLineNumber" : 192,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 6
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 7
  } ]
}