{
  "id" : 57,
  "expression" : "index.incrementAndGet() % queues.size()",
  "projectName" : "redisson@redisson",
  "commitID" : "62b5e68c05b7475e1e0f98b4161aacb35d376b97",
  "filePath" : "/redisson/src/main/java/org/redisson/cache/LRUCacheMap.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "index.incrementAndGet() % queues.size()",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 39,
      "startLineNumber" : 73,
      "startColumnNumber" : 44,
      "endLineNumber" : 73,
      "endColumnNumber" : 83
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CastExpression,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 73,
        "startColumnNumber" : 35,
        "endLineNumber" : 73,
        "endColumnNumber" : 84
      },
      "nodeContext" : "Math.abs(index.incrementAndGet() % queues.size())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 55,
        "startLineNumber" : 73,
        "startColumnNumber" : 29,
        "endLineNumber" : 73,
        "endColumnNumber" : 84
      },
      "nodeContext" : "(int)Math.abs(index.incrementAndGet() % queues.size())",
      "nodeType" : "CastExpression",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 68,
        "startLineNumber" : 73,
        "startColumnNumber" : 16,
        "endLineNumber" : 73,
        "endColumnNumber" : 84
      },
      "nodeContext" : "queueIndex=(int)Math.abs(index.incrementAndGet() % queues.size())",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 14,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 73,
        "startColumnNumber" : 12,
        "endLineNumber" : 73,
        "endColumnNumber" : 85
      },
      "nodeContext" : "int queueIndex=(int)Math.abs(index.incrementAndGet() % queues.size());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 797,
        "startLineNumber" : 72,
        "startColumnNumber" : 21,
        "endLineNumber" : 95,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int queueIndex=(int)Math.abs(index.incrementAndGet() % queues.size());\n  if (queueIndex == startIndex) {\n    return;\n  }\n  if (startIndex == -1) {\n    startIndex=queueIndex;\n  }\n  Collection<CachedValue<K,V>> queue=queues.get(queueIndex);\n  CachedValue<K,V> removedValue=null;\nsynchronized (queue) {\n    Iterator<CachedValue<K,V>> iter=queue.iterator();\n    if (iter.hasNext()) {\n      removedValue=iter.next();\n      iter.remove();\n    }\n  }\n  if (removedValue != null) {\n    map.remove(removedValue.getKey(),removedValue);\n    return;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 109,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 810,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 95,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (true) {\n  int queueIndex=(int)Math.abs(index.incrementAndGet() % queues.size());\n  if (queueIndex == startIndex) {\n    return;\n  }\n  if (startIndex == -1) {\n    startIndex=queueIndex;\n  }\n  Collection<CachedValue<K,V>> queue=queues.get(queueIndex);\n  CachedValue<K,V> removedValue=null;\nsynchronized (queue) {\n    Iterator<CachedValue<K,V>> iter=queue.iterator();\n    if (iter.hasNext()) {\n      removedValue=iter.next();\n      iter.remove();\n    }\n  }\n  if (removedValue != null) {\n    map.remove(removedValue.getKey(),removedValue);\n    return;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 111,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 855,
        "startLineNumber" : 70,
        "startColumnNumber" : 31,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int startIndex=-1;\n  while (true) {\n    int queueIndex=(int)Math.abs(index.incrementAndGet() % queues.size());\n    if (queueIndex == startIndex) {\n      return;\n    }\n    if (startIndex == -1) {\n      startIndex=queueIndex;\n    }\n    Collection<CachedValue<K,V>> queue=queues.get(queueIndex);\n    CachedValue<K,V> removedValue=null;\nsynchronized (queue) {\n      Iterator<CachedValue<K,V>> iter=queue.iterator();\n      if (iter.hasNext()) {\n        removedValue=iter.next();\n        iter.remove();\n      }\n    }\n    if (removedValue != null) {\n      map.remove(removedValue.getKey(),removedValue);\n      return;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 118,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 896,
        "startLineNumber" : 69,
        "startColumnNumber" : 4,
        "endLineNumber" : 96,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected void onMapFull(){\n  int startIndex=-1;\n  while (true) {\n    int queueIndex=(int)Math.abs(index.incrementAndGet() % queues.size());\n    if (queueIndex == startIndex) {\n      return;\n    }\n    if (startIndex == -1) {\n      startIndex=queueIndex;\n    }\n    Collection<CachedValue<K,V>> queue=queues.get(queueIndex);\n    CachedValue<K,V> removedValue=null;\nsynchronized (queue) {\n      Iterator<CachedValue<K,V>> iter=queue.iterator();\n      if (iter.hasNext()) {\n        removedValue=iter.next();\n        iter.remove();\n      }\n    }\n    if (removedValue != null) {\n      map.remove(removedValue.getKey(),removedValue);\n      return;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 124,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 73,
        "startColumnNumber" : 12,
        "endLineNumber" : 73,
        "endColumnNumber" : 85
      },
      "nodeContext" : "int queueIndex=(int)Math.abs(index.incrementAndGet() % queues.size());\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 16,
      "astHeight" : 7
    },
    "tokenLength" : 5,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 39,
    "startLineNumber" : 73,
    "startColumnNumber" : 44,
    "endLineNumber" : 73,
    "endColumnNumber" : 83
  } ],
  "layoutRelationDataList" : [ ]
}