{
  "id" : 393,
  "expression" : "NetworkInterface.getByName(options.getMulticastNetworkInterface())",
  "projectName" : "eclipse-vertx@vert.x",
  "commitID" : "665e20a715caff0cbaa72adfd1bb374c543281f0",
  "filePath" : "/src/main/java/io/vertx/core/datagram/impl/DatagramSocketImpl.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "NetworkInterface.getByName(options.getMulticastNetworkInterface())",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 66,
      "startLineNumber" : 307,
      "startColumnNumber" : 45,
      "endLineNumber" : 307,
      "endColumnNumber" : 111
    },
    "astNodeNumber" : 6,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 307,
        "startColumnNumber" : 8,
        "endLineNumber" : 307,
        "endColumnNumber" : 112
      },
      "nodeContext" : "channel.config().setNetworkInterface(NetworkInterface.getByName(options.getMulticastNetworkInterface()))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 307,
        "startColumnNumber" : 8,
        "endLineNumber" : 307,
        "endColumnNumber" : 113
      },
      "nodeContext" : "channel.config().setNetworkInterface(NetworkInterface.getByName(options.getMulticastNetworkInterface()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 123,
        "startLineNumber" : 306,
        "startColumnNumber" : 10,
        "endLineNumber" : 308,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  channel.config().setNetworkInterface(NetworkInterface.getByName(options.getMulticastNetworkInterface()));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 295,
        "startLineNumber" : 306,
        "startColumnNumber" : 6,
        "endLineNumber" : 310,
        "endColumnNumber" : 7
      },
      "nodeContext" : "try {\n  channel.config().setNetworkInterface(NetworkInterface.getByName(options.getMulticastNetworkInterface()));\n}\n catch (SocketException e) {\n  throw new IllegalArgumentException(\"Could not find network interface with name \" + options.getMulticastNetworkInterface());\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 29,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 309,
        "startLineNumber" : 305,
        "startColumnNumber" : 56,
        "endLineNumber" : 311,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    channel.config().setNetworkInterface(NetworkInterface.getByName(options.getMulticastNetworkInterface()));\n  }\n catch (  SocketException e) {\n    throw new IllegalArgumentException(\"Could not find network interface with name \" + options.getMulticastNetworkInterface());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 30,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 361,
        "startLineNumber" : 305,
        "startColumnNumber" : 4,
        "endLineNumber" : 311,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (options.getMulticastNetworkInterface() != null) {\n  try {\n    channel.config().setNetworkInterface(NetworkInterface.getByName(options.getMulticastNetworkInterface()));\n  }\n catch (  SocketException e) {\n    throw new IllegalArgumentException(\"Could not find network interface with name \" + options.getMulticastNetworkInterface());\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 36,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1633,
        "startLineNumber" : 273,
        "startColumnNumber" : 81,
        "endLineNumber" : 313,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  NioDatagramChannel channel;\n  if (family == null) {\n    channel=new NioDatagramChannel();\n  }\n else {\nswitch (family) {\ncase IPv4:      channel=new NioDatagramChannel(InternetProtocolFamily.IPv4);\n    break;\ncase IPv6:  channel=new NioDatagramChannel(InternetProtocolFamily.IPv6);\nbreak;\ndefault:channel=new NioDatagramChannel();\n}\n}\nif (options.getSendBufferSize() != -1) {\nchannel.config().setSendBufferSize(options.getSendBufferSize());\n}\nif (options.getReceiveBufferSize() != -1) {\nchannel.config().setReceiveBufferSize(options.getReceiveBufferSize());\nchannel.config().setRecvByteBufAllocator(new FixedRecvByteBufAllocator(options.getReceiveBufferSize()));\n}\nchannel.config().setReuseAddress(options.isReuseAddress());\nif (options.getTrafficClass() != -1) {\nchannel.config().setTrafficClass(options.getTrafficClass());\n}\nchannel.config().setBroadcast(options.isBroadcast());\nchannel.config().setLoopbackModeDisabled(options.isLoopbackModeDisabled());\nif (options.getMulticastTimeToLive() != -1) {\nchannel.config().setTimeToLive(options.getMulticastTimeToLive());\n}\nif (options.getMulticastNetworkInterface() != null) {\ntry {\nchannel.config().setNetworkInterface(NetworkInterface.getByName(options.getMulticastNetworkInterface()));\n}\n catch (SocketException e) {\nthrow new IllegalArgumentException(\"Could not find network interface with name \" + options.getMulticastNetworkInterface());\n}\n}\nreturn channel;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 196,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1821,
        "startLineNumber" : 272,
        "startColumnNumber" : 2,
        "endLineNumber" : 313,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private static NioDatagramChannel createChannel(io.vertx.core.datagram.impl.InternetProtocolFamily family,DatagramSocketOptions options){\n  NioDatagramChannel channel;\n  if (family == null) {\n    channel=new NioDatagramChannel();\n  }\n else {\nswitch (family) {\ncase IPv4:      channel=new NioDatagramChannel(InternetProtocolFamily.IPv4);\n    break;\ncase IPv6:  channel=new NioDatagramChannel(InternetProtocolFamily.IPv6);\nbreak;\ndefault:channel=new NioDatagramChannel();\n}\n}\nif (options.getSendBufferSize() != -1) {\nchannel.config().setSendBufferSize(options.getSendBufferSize());\n}\nif (options.getReceiveBufferSize() != -1) {\nchannel.config().setReceiveBufferSize(options.getReceiveBufferSize());\nchannel.config().setRecvByteBufAllocator(new FixedRecvByteBufAllocator(options.getReceiveBufferSize()));\n}\nchannel.config().setReuseAddress(options.isReuseAddress());\nif (options.getTrafficClass() != -1) {\nchannel.config().setTrafficClass(options.getTrafficClass());\n}\nchannel.config().setBroadcast(options.isBroadcast());\nchannel.config().setLoopbackModeDisabled(options.isLoopbackModeDisabled());\nif (options.getMulticastTimeToLive() != -1) {\nchannel.config().setTimeToLive(options.getMulticastTimeToLive());\n}\nif (options.getMulticastNetworkInterface() != null) {\ntry {\nchannel.config().setNetworkInterface(NetworkInterface.getByName(options.getMulticastNetworkInterface()));\n}\n catch (SocketException e) {\nthrow new IllegalArgumentException(\"Could not find network interface with name \" + options.getMulticastNetworkInterface());\n}\n}\nreturn channel;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 220,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 307,
        "startColumnNumber" : 8,
        "endLineNumber" : 307,
        "endColumnNumber" : 113
      },
      "nodeContext" : "channel.config().setNetworkInterface(NetworkInterface.getByName(options.getMulticastNetworkInterface()));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "java.net.NetworkInterface"
  } ],
  "positionList" : [ {
    "charLength" : 66,
    "startLineNumber" : 307,
    "startColumnNumber" : 45,
    "endLineNumber" : 307,
    "endColumnNumber" : 111
  } ],
  "layoutRelationDataList" : [ ]
}