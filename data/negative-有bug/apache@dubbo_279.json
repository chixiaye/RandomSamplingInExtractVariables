{
  "id" : 279,
  "expression" : "\"\"",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-monitor/dubbo-monitor-api/src/test/java/org/apache/dubbo/monitor/support/MonitorFilterTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 118,
      "startColumnNumber" : 89,
      "endLineNumber" : 118,
      "endColumnNumber" : 91
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 92,
        "startLineNumber" : 118,
        "startColumnNumber" : 32,
        "endLineNumber" : 118,
        "endColumnNumber" : 124
      },
      "nodeContext" : "new RpcInvocation(\"aaa\",MonitorService.class.getName(),\"\",new Class<?>[0],new Object[0])",
      "nodeType" : "ClassInstanceCreation",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 105,
        "startLineNumber" : 118,
        "startColumnNumber" : 19,
        "endLineNumber" : 118,
        "endColumnNumber" : 124
      },
      "nodeContext" : "invocation=new RpcInvocation(\"aaa\",MonitorService.class.getName(),\"\",new Class<?>[0],new Object[0])",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 118,
        "startColumnNumber" : 8,
        "endLineNumber" : 118,
        "endColumnNumber" : 125
      },
      "nodeContext" : "Invocation invocation=new RpcInvocation(\"aaa\",MonitorService.class.getName(),\"\",new Class<?>[0],new Object[0]);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 29,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1780,
        "startLineNumber" : 115,
        "startColumnNumber" : 46,
        "endLineNumber" : 141,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  MonitorFilter monitorFilter=new MonitorFilter();\n  monitorFilter.setMonitorFactory(monitorFactory);\n  Invocation invocation=new RpcInvocation(\"aaa\",MonitorService.class.getName(),\"\",new Class<?>[0],new Object[0]);\n  RpcContext.getServiceContext().setRemoteAddress(NetUtils.getLocalHost(),20880).setLocalAddress(NetUtils.getLocalHost(),2345);\n  Result result=monitorFilter.invoke(serviceInvoker,invocation);\n  result.whenCompleteWithContext((r,t) -> {\n    if (t == null) {\n      monitorFilter.onResponse(r,serviceInvoker,invocation);\n    }\n else {\n      monitorFilter.onError(t,serviceInvoker,invocation);\n    }\n  }\n);\n  while (lastStatistics == null) {\n    Thread.sleep(10);\n  }\n  Assertions.assertEquals(\"abc\",lastStatistics.getParameter(MonitorService.APPLICATION));\n  Assertions.assertEquals(MonitorService.class.getName(),lastStatistics.getParameter(MonitorService.INTERFACE));\n  Assertions.assertEquals(\"aaa\",lastStatistics.getParameter(MonitorService.METHOD));\n  Assertions.assertEquals(NetUtils.getLocalHost() + \":20880\",lastStatistics.getParameter(MonitorService.PROVIDER));\n  Assertions.assertEquals(NetUtils.getLocalHost(),lastStatistics.getAddress());\n  Assertions.assertNull(lastStatistics.getParameter(MonitorService.CONSUMER));\n  Assertions.assertEquals(1,lastStatistics.getParameter(MonitorService.SUCCESS,0));\n  Assertions.assertEquals(0,lastStatistics.getParameter(MonitorService.FAILURE,0));\n  Assertions.assertEquals(1,lastStatistics.getParameter(MonitorService.CONCURRENT,0));\n  Assertions.assertEquals(invocation,lastInvocation);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 223,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1833,
        "startLineNumber" : 114,
        "startColumnNumber" : 4,
        "endLineNumber" : 141,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testFilter() throws Exception {\n  MonitorFilter monitorFilter=new MonitorFilter();\n  monitorFilter.setMonitorFactory(monitorFactory);\n  Invocation invocation=new RpcInvocation(\"aaa\",MonitorService.class.getName(),\"\",new Class<?>[0],new Object[0]);\n  RpcContext.getServiceContext().setRemoteAddress(NetUtils.getLocalHost(),20880).setLocalAddress(NetUtils.getLocalHost(),2345);\n  Result result=monitorFilter.invoke(serviceInvoker,invocation);\n  result.whenCompleteWithContext((r,t) -> {\n    if (t == null) {\n      monitorFilter.onResponse(r,serviceInvoker,invocation);\n    }\n else {\n      monitorFilter.onError(t,serviceInvoker,invocation);\n    }\n  }\n);\n  while (lastStatistics == null) {\n    Thread.sleep(10);\n  }\n  Assertions.assertEquals(\"abc\",lastStatistics.getParameter(MonitorService.APPLICATION));\n  Assertions.assertEquals(MonitorService.class.getName(),lastStatistics.getParameter(MonitorService.INTERFACE));\n  Assertions.assertEquals(\"aaa\",lastStatistics.getParameter(MonitorService.METHOD));\n  Assertions.assertEquals(NetUtils.getLocalHost() + \":20880\",lastStatistics.getParameter(MonitorService.PROVIDER));\n  Assertions.assertEquals(NetUtils.getLocalHost(),lastStatistics.getAddress());\n  Assertions.assertNull(lastStatistics.getParameter(MonitorService.CONSUMER));\n  Assertions.assertEquals(1,lastStatistics.getParameter(MonitorService.SUCCESS,0));\n  Assertions.assertEquals(0,lastStatistics.getParameter(MonitorService.FAILURE,0));\n  Assertions.assertEquals(1,lastStatistics.getParameter(MonitorService.CONCURRENT,0));\n  Assertions.assertEquals(invocation,lastInvocation);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 231,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 117,
        "startLineNumber" : 118,
        "startColumnNumber" : 8,
        "endLineNumber" : 118,
        "endColumnNumber" : 125
      },
      "nodeContext" : "Invocation invocation=new RpcInvocation(\"aaa\",MonitorService.class.getName(),\"\",new Class<?>[0],new Object[0]);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 29,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 118,
    "startColumnNumber" : 89,
    "endLineNumber" : 118,
    "endColumnNumber" : 91
  } ],
  "layoutRelationDataList" : [ ]
}