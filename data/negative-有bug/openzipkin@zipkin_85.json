{
  "id" : 85,
  "expression" : "new LinkedHashSet<>()",
  "projectName" : "openzipkin@zipkin",
  "commitID" : "f02a993656f506277ca83737ddf494ed45fde4b3",
  "filePath" : "/zipkin-storage/cassandra/src/main/java/zipkin2/storage/cassandra/SelectFromSpan.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new LinkedHashSet<>()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 68,
      "startColumnNumber" : 19,
      "endLineNumber" : 68,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 4,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 40
      },
      "nodeContext" : "traceIds=new LinkedHashSet<>()",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 41
      },
      "nodeContext" : "traceIds=new LinkedHashSet<>();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 67,
        "startColumnNumber" : 55,
        "endLineNumber" : 71,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  traceIds=new LinkedHashSet<>();\n  traceIds.add(hexTraceId);\n  traceIds.add(hexTraceId.substring(16));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 251,
        "startLineNumber" : 67,
        "startColumnNumber" : 6,
        "endLineNumber" : 73,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (!strictTraceId && hexTraceId.length() == 32) {\n  traceIds=new LinkedHashSet<>();\n  traceIds.add(hexTraceId);\n  traceIds.add(hexTraceId.substring(16));\n}\n else {\n  traceIds=Collections.singleton(hexTraceId);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 38,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 582,
        "startLineNumber" : 64,
        "startColumnNumber" : 48,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Set<String> traceIds;\n  if (!strictTraceId && hexTraceId.length() == 32) {\n    traceIds=new LinkedHashSet<>();\n    traceIds.add(hexTraceId);\n    traceIds.add(hexTraceId.substring(16));\n  }\n else {\n    traceIds=Collections.singleton(hexTraceId);\n  }\n  Call<List<Span>> result=new SelectFromSpan(this,traceIds,maxTraceCols).flatMap(READ_SPANS);\n  return strictTraceId ? result.map(StrictTraceId.filterSpans(hexTraceId)) : result;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 78,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 626,
        "startLineNumber" : 64,
        "startColumnNumber" : 4,
        "endLineNumber" : 78,
        "endColumnNumber" : 5
      },
      "nodeContext" : "Call<List<Span>> newCall(String hexTraceId){\n  Set<String> traceIds;\n  if (!strictTraceId && hexTraceId.length() == 32) {\n    traceIds=new LinkedHashSet<>();\n    traceIds.add(hexTraceId);\n    traceIds.add(hexTraceId.substring(16));\n  }\n else {\n    traceIds=Collections.singleton(hexTraceId);\n  }\n  Call<List<Span>> result=new SelectFromSpan(this,traceIds,maxTraceCols).flatMap(READ_SPANS);\n  return strictTraceId ? result.map(StrictTraceId.filterSpans(hexTraceId)) : result;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 92,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 41
      },
      "nodeContext" : "traceIds=new LinkedHashSet<>();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.util.LinkedHashSet<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 68,
    "startColumnNumber" : 19,
    "endLineNumber" : 68,
    "endColumnNumber" : 40
  } ],
  "layoutRelationDataList" : [ ]
}