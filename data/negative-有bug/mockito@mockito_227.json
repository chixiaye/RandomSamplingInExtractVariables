{
  "id" : 227,
  "expression" : "interface2",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockitousage/basicapi/MockingMultipleInterfacesTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "interface2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 119,
      "startColumnNumber" : 72,
      "endLineNumber" : 119,
      "endColumnNumber" : 82
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 119,
        "startColumnNumber" : 41,
        "endLineNumber" : 119,
        "endColumnNumber" : 83
      },
      "nodeContext" : "withSettings().extraInterfaces(interface2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 119,
        "startColumnNumber" : 24,
        "endLineNumber" : 119,
        "endColumnNumber" : 84
      },
      "nodeContext" : "mock(interface1,withSettings().extraInterfaces(interface2))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 119,
        "startColumnNumber" : 15,
        "endLineNumber" : 119,
        "endColumnNumber" : 84
      },
      "nodeContext" : "mocked=mock(interface1,withSettings().extraInterfaces(interface2))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 119,
        "startColumnNumber" : 8,
        "endLineNumber" : 119,
        "endColumnNumber" : 85
      },
      "nodeContext" : "Object mocked=mock(interface1,withSettings().extraInterfaces(interface2));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1019,
        "startLineNumber" : 103,
        "startColumnNumber" : 50,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Class<?> interface1=inMemoryClassLoader().withClassDefinition(\"test.Interface1\",makeMarkerInterface(\"test.Interface1\")).build().loadClass(\"test.Interface1\");\n  Class<?> interface2=inMemoryClassLoader().withClassDefinition(\"test.Interface2\",makeMarkerInterface(\"test.Interface2\")).build().loadClass(\"test.Interface2\");\n  Object mocked=mock(interface1,withSettings().extraInterfaces(interface2));\n  assertThat(interface2.isInstance(mocked)).describedAs(\"mock should be assignable from interface2 type\").isTrue();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1193,
        "startLineNumber" : 100,
        "startColumnNumber" : 4,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void should_mock_class_with_interfaces_of_different_class_loader_AND_different_classpaths() throws ClassNotFoundException {\n  Class<?> interface1=inMemoryClassLoader().withClassDefinition(\"test.Interface1\",makeMarkerInterface(\"test.Interface1\")).build().loadClass(\"test.Interface1\");\n  Class<?> interface2=inMemoryClassLoader().withClassDefinition(\"test.Interface2\",makeMarkerInterface(\"test.Interface2\")).build().loadClass(\"test.Interface2\");\n  Object mocked=mock(interface1,withSettings().extraInterfaces(interface2));\n  assertThat(interface2.isInstance(mocked)).describedAs(\"mock should be assignable from interface2 type\").isTrue();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 74,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 119,
        "startColumnNumber" : 8,
        "endLineNumber" : 119,
        "endColumnNumber" : 85
      },
      "nodeContext" : "Object mocked=mock(interface1,withSettings().extraInterfaces(interface2));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<>"
  }, {
    "nodeContext" : "interface2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 120,
      "startColumnNumber" : 19,
      "endLineNumber" : 120,
      "endColumnNumber" : 29
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 120,
        "startColumnNumber" : 19,
        "endLineNumber" : 120,
        "endColumnNumber" : 48
      },
      "nodeContext" : "interface2.isInstance(mocked)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 120,
        "startColumnNumber" : 8,
        "endLineNumber" : 120,
        "endColumnNumber" : 49
      },
      "nodeContext" : "assertThat(interface2.isInstance(mocked))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 120,
        "startColumnNumber" : 8,
        "endLineNumber" : 121,
        "endColumnNumber" : 78
      },
      "nodeContext" : "assertThat(interface2.isInstance(mocked)).describedAs(\"mock should be assignable from interface2 type\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 148,
        "startLineNumber" : 120,
        "startColumnNumber" : 8,
        "endLineNumber" : 122,
        "endColumnNumber" : 25
      },
      "nodeContext" : "assertThat(interface2.isInstance(mocked)).describedAs(\"mock should be assignable from interface2 type\").isTrue()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 120,
        "startColumnNumber" : 8,
        "endLineNumber" : 122,
        "endColumnNumber" : 26
      },
      "nodeContext" : "assertThat(interface2.isInstance(mocked)).describedAs(\"mock should be assignable from interface2 type\").isTrue();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1019,
        "startLineNumber" : 103,
        "startColumnNumber" : 50,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Class<?> interface1=inMemoryClassLoader().withClassDefinition(\"test.Interface1\",makeMarkerInterface(\"test.Interface1\")).build().loadClass(\"test.Interface1\");\n  Class<?> interface2=inMemoryClassLoader().withClassDefinition(\"test.Interface2\",makeMarkerInterface(\"test.Interface2\")).build().loadClass(\"test.Interface2\");\n  Object mocked=mock(interface1,withSettings().extraInterfaces(interface2));\n  assertThat(interface2.isInstance(mocked)).describedAs(\"mock should be assignable from interface2 type\").isTrue();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 66,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1193,
        "startLineNumber" : 100,
        "startColumnNumber" : 4,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void should_mock_class_with_interfaces_of_different_class_loader_AND_different_classpaths() throws ClassNotFoundException {\n  Class<?> interface1=inMemoryClassLoader().withClassDefinition(\"test.Interface1\",makeMarkerInterface(\"test.Interface1\")).build().loadClass(\"test.Interface1\");\n  Class<?> interface2=inMemoryClassLoader().withClassDefinition(\"test.Interface2\",makeMarkerInterface(\"test.Interface2\")).build().loadClass(\"test.Interface2\");\n  Object mocked=mock(interface1,withSettings().extraInterfaces(interface2));\n  assertThat(interface2.isInstance(mocked)).describedAs(\"mock should be assignable from interface2 type\").isTrue();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 74,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodInvocation,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 120,
        "startColumnNumber" : 8,
        "endLineNumber" : 120,
        "endColumnNumber" : 49
      },
      "nodeContext" : "assertThat(interface2.isInstance(mocked))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<>"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 119,
    "startColumnNumber" : 72,
    "endLineNumber" : 119,
    "endColumnNumber" : 82
  }, {
    "charLength" : 10,
    "startLineNumber" : 120,
    "startColumnNumber" : 19,
    "endLineNumber" : 120,
    "endColumnNumber" : 29
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 5
  } ]
}