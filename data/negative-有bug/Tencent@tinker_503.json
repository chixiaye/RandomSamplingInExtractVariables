{
  "id" : 503,
  "expression" : "bsDiffFile.length() / 1024",
  "projectName" : "Tencent@tinker",
  "commitID" : "df9e1d29420d53a650ab73569d828a22e3cfe728",
  "filePath" : "/tinker-build/tinker-patch-lib/src/main/java/com/tencent/tinker/build/util/Utils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "bsDiffFile.length() / 1024",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 26,
      "startLineNumber" : 222,
      "startColumnNumber" : 16,
      "endLineNumber" : 222,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 305,
        "startLineNumber" : 220,
        "startColumnNumber" : 12,
        "endLineNumber" : 225,
        "endColumnNumber" : 13
      },
      "nodeContext" : "Logger.e(\"bsDiff patch file:%s, size:%dk, new file:%s, size:%dk. patch file is too large, treat it as newly file to save patch time!\",bsDiffFile.getName(),bsDiffFile.length() / 1024,newFile.getName(),newFile.length() / 1024)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 306,
        "startLineNumber" : 220,
        "startColumnNumber" : 12,
        "endLineNumber" : 225,
        "endColumnNumber" : 14
      },
      "nodeContext" : "Logger.e(\"bsDiff patch file:%s, size:%dk, new file:%s, size:%dk. patch file is too large, treat it as newly file to save patch time!\",bsDiffFile.getName(),bsDiffFile.length() / 1024,newFile.getName(),newFile.length() / 1024);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 21,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 356,
        "startLineNumber" : 219,
        "startColumnNumber" : 55,
        "endLineNumber" : 227,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  Logger.e(\"bsDiff patch file:%s, size:%dk, new file:%s, size:%dk. patch file is too large, treat it as newly file to save patch time!\",bsDiffFile.getName(),bsDiffFile.length() / 1024,newFile.getName(),newFile.length() / 1024);\n  return false;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 24,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 403,
        "startLineNumber" : 219,
        "startColumnNumber" : 8,
        "endLineNumber" : 227,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (ratio > TypedValue.BSDIFF_PATCH_MAX_RATIO) {\n  Logger.e(\"bsDiff patch file:%s, size:%dk, new file:%s, size:%dk. patch file is too large, treat it as newly file to save patch time!\",bsDiffFile.getName(),bsDiffFile.length() / 1024,newFile.getName(),newFile.length() / 1024);\n  return false;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 30,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 704,
        "startLineNumber" : 212,
        "startColumnNumber" : 77,
        "endLineNumber" : 229,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!bsDiffFile.exists()) {\n    throw new TinkerPatchException(\"can not find the bsDiff file:\" + bsDiffFile.getAbsolutePath());\n  }\n  double ratio=bsDiffFile.length() / (double)newFile.length();\n  if (ratio > TypedValue.BSDIFF_PATCH_MAX_RATIO) {\n    Logger.e(\"bsDiff patch file:%s, size:%dk, new file:%s, size:%dk. patch file is too large, treat it as newly file to save patch time!\",bsDiffFile.getName(),bsDiffFile.length() / 1024,newFile.getName(),newFile.length() / 1024);\n    return false;\n  }\n  return true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 61,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 922,
        "startLineNumber" : 206,
        "startColumnNumber" : 4,
        "endLineNumber" : 229,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * if bsDiff result is too larger, just treat it as newly file\n * @param bsDiffFile\n * @param newFile\n * @return\n */\npublic static boolean checkBsDiffFileSize(File bsDiffFile,File newFile){\n  if (!bsDiffFile.exists()) {\n    throw new TinkerPatchException(\"can not find the bsDiff file:\" + bsDiffFile.getAbsolutePath());\n  }\n  double ratio=bsDiffFile.length() / (double)newFile.length();\n  if (ratio > TypedValue.BSDIFF_PATCH_MAX_RATIO) {\n    Logger.e(\"bsDiff patch file:%s, size:%dk, new file:%s, size:%dk. patch file is too large, treat it as newly file to save patch time!\",bsDiffFile.getName(),bsDiffFile.length() / 1024,newFile.getName(),newFile.length() / 1024);\n    return false;\n  }\n  return true;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 75,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 305,
        "startLineNumber" : 220,
        "startColumnNumber" : 12,
        "endLineNumber" : 225,
        "endColumnNumber" : 13
      },
      "nodeContext" : "Logger.e(\"bsDiff patch file:%s, size:%dk, new file:%s, size:%dk. patch file is too large, treat it as newly file to save patch time!\",bsDiffFile.getName(),bsDiffFile.length() / 1024,newFile.getName(),newFile.length() / 1024)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 20,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 26,
    "startLineNumber" : 222,
    "startColumnNumber" : 16,
    "endLineNumber" : 222,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ ]
}