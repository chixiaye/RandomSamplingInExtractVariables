{
  "id" : 196,
  "expression" : "randomConfigServices",
  "projectName" : "apolloconfig@apollo",
  "commitID" : "7b7d753f78e444f9cf97b0f238f7e33f585cb277",
  "filePath" : "/apollo-client/src/main/java/com/ctrip/framework/apollo/internals/RemoteConfigRepository.java",
  "occurrences" : 3,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "randomConfigServices",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 167,
      "startColumnNumber" : 26,
      "endLineNumber" : 167,
      "endColumnNumber" : 46
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 167,
        "startColumnNumber" : 6,
        "endLineNumber" : 167,
        "endColumnNumber" : 47
      },
      "nodeContext" : "Collections.shuffle(randomConfigServices)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 167,
        "startColumnNumber" : 6,
        "endLineNumber" : 167,
        "endColumnNumber" : 48
      },
      "nodeContext" : "Collections.shuffle(randomConfigServices);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1798,
        "startLineNumber" : 165,
        "startColumnNumber" : 41,
        "endLineNumber" : 217,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<ServiceDTO> randomConfigServices=Lists.newLinkedList(configServices);\n  Collections.shuffle(randomConfigServices);\n  if (m_longPollServiceDto.get() != null) {\n    randomConfigServices.add(0,m_longPollServiceDto.getAndSet(null));\n  }\n  for (  ServiceDTO configService : randomConfigServices) {\n    String url=assembleQueryConfigUrl(configService.getHomepageUrl(),appId,cluster,m_namespace,dataCenter,m_configCache.get());\n    logger.debug(\"Loading config from {}\",url);\n    HttpRequest request=new HttpRequest(url);\n    Transaction transaction=Cat.newTransaction(\"Apollo.ConfigService\",\"queryConfig\");\n    transaction.addData(\"Url\",url);\n    try {\n      HttpResponse<ApolloConfig> response=m_httpUtil.doGet(request,ApolloConfig.class);\n      transaction.addData(\"StatusCode\",response.getStatusCode());\n      transaction.setStatus(Message.SUCCESS);\n      if (response.getStatusCode() == 304) {\n        logger.debug(\"Config server responds with 304 HTTP status code.\");\n        return m_configCache.get();\n      }\n      ApolloConfig result=response.getBody();\n      Cat.logEvent(\"Apollo.Client.ConfigLoaded.\" + result.getNamespaceName(),result.getReleaseKey());\n      logger.debug(\"Loaded config for {}: {}\",m_namespace,result);\n      return result;\n    }\n catch (    Throwable ex) {\n      Cat.logError(ex);\n      transaction.setStatus(ex);\n      exception=ex;\n    }\n finally {\n      transaction.complete();\n    }\n  }\n  try {\n    TimeUnit.SECONDS.sleep(1);\n  }\n catch (  InterruptedException ex) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 206,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1835,
        "startLineNumber" : 165,
        "startColumnNumber" : 4,
        "endLineNumber" : 217,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < maxRetries; i++) {\n  List<ServiceDTO> randomConfigServices=Lists.newLinkedList(configServices);\n  Collections.shuffle(randomConfigServices);\n  if (m_longPollServiceDto.get() != null) {\n    randomConfigServices.add(0,m_longPollServiceDto.getAndSet(null));\n  }\n  for (  ServiceDTO configService : randomConfigServices) {\n    String url=assembleQueryConfigUrl(configService.getHomepageUrl(),appId,cluster,m_namespace,dataCenter,m_configCache.get());\n    logger.debug(\"Loading config from {}\",url);\n    HttpRequest request=new HttpRequest(url);\n    Transaction transaction=Cat.newTransaction(\"Apollo.ConfigService\",\"queryConfig\");\n    transaction.addData(\"Url\",url);\n    try {\n      HttpResponse<ApolloConfig> response=m_httpUtil.doGet(request,ApolloConfig.class);\n      transaction.addData(\"StatusCode\",response.getStatusCode());\n      transaction.setStatus(Message.SUCCESS);\n      if (response.getStatusCode() == 304) {\n        logger.debug(\"Config server responds with 304 HTTP status code.\");\n        return m_configCache.get();\n      }\n      ApolloConfig result=response.getBody();\n      Cat.logEvent(\"Apollo.Client.ConfigLoaded.\" + result.getNamespaceName(),result.getReleaseKey());\n      logger.debug(\"Loaded config for {}: {}\",m_namespace,result);\n      return result;\n    }\n catch (    Throwable ex) {\n      Cat.logError(ex);\n      transaction.setStatus(ex);\n      exception=ex;\n    }\n finally {\n      transaction.complete();\n    }\n  }\n  try {\n    TimeUnit.SECONDS.sleep(1);\n  }\n catch (  InterruptedException ex) {\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 217,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2641,
        "startLineNumber" : 149,
        "startColumnNumber" : 42,
        "endLineNumber" : 222,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!m_loadConfigRateLimiter.tryAcquire(5,TimeUnit.SECONDS)) {\n    try {\n      TimeUnit.SECONDS.sleep(5);\n    }\n catch (    InterruptedException e) {\n    }\n  }\n  String appId=m_configUtil.getAppId();\n  String cluster=m_configUtil.getCluster();\n  String dataCenter=m_configUtil.getDataCenter();\n  Cat.logEvent(\"Apollo.Client.ConfigInfo\",STRING_JOINER.join(appId,cluster,m_namespace));\n  int maxRetries=2;\n  Throwable exception=null;\n  List<ServiceDTO> configServices=getConfigServices();\n  for (int i=0; i < maxRetries; i++) {\n    List<ServiceDTO> randomConfigServices=Lists.newLinkedList(configServices);\n    Collections.shuffle(randomConfigServices);\n    if (m_longPollServiceDto.get() != null) {\n      randomConfigServices.add(0,m_longPollServiceDto.getAndSet(null));\n    }\n    for (    ServiceDTO configService : randomConfigServices) {\n      String url=assembleQueryConfigUrl(configService.getHomepageUrl(),appId,cluster,m_namespace,dataCenter,m_configCache.get());\n      logger.debug(\"Loading config from {}\",url);\n      HttpRequest request=new HttpRequest(url);\n      Transaction transaction=Cat.newTransaction(\"Apollo.ConfigService\",\"queryConfig\");\n      transaction.addData(\"Url\",url);\n      try {\n        HttpResponse<ApolloConfig> response=m_httpUtil.doGet(request,ApolloConfig.class);\n        transaction.addData(\"StatusCode\",response.getStatusCode());\n        transaction.setStatus(Message.SUCCESS);\n        if (response.getStatusCode() == 304) {\n          logger.debug(\"Config server responds with 304 HTTP status code.\");\n          return m_configCache.get();\n        }\n        ApolloConfig result=response.getBody();\n        Cat.logEvent(\"Apollo.Client.ConfigLoaded.\" + result.getNamespaceName(),result.getReleaseKey());\n        logger.debug(\"Loaded config for {}: {}\",m_namespace,result);\n        return result;\n      }\n catch (      Throwable ex) {\n        Cat.logError(ex);\n        transaction.setStatus(ex);\n        exception=ex;\n      }\n finally {\n        transaction.complete();\n      }\n    }\n    try {\n      TimeUnit.SECONDS.sleep(1);\n    }\n catch (    InterruptedException ex) {\n    }\n  }\n  String message=String.format(\"Load Apollo Config failed - appId: %s, cluster: %s, namespace: %s, services: %s\",appId,cluster,m_namespace,configServices);\n  throw new ApolloConfigException(message,exception);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 318,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2681,
        "startLineNumber" : 149,
        "startColumnNumber" : 2,
        "endLineNumber" : 222,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private ApolloConfig loadApolloConfig(){\n  if (!m_loadConfigRateLimiter.tryAcquire(5,TimeUnit.SECONDS)) {\n    try {\n      TimeUnit.SECONDS.sleep(5);\n    }\n catch (    InterruptedException e) {\n    }\n  }\n  String appId=m_configUtil.getAppId();\n  String cluster=m_configUtil.getCluster();\n  String dataCenter=m_configUtil.getDataCenter();\n  Cat.logEvent(\"Apollo.Client.ConfigInfo\",STRING_JOINER.join(appId,cluster,m_namespace));\n  int maxRetries=2;\n  Throwable exception=null;\n  List<ServiceDTO> configServices=getConfigServices();\n  for (int i=0; i < maxRetries; i++) {\n    List<ServiceDTO> randomConfigServices=Lists.newLinkedList(configServices);\n    Collections.shuffle(randomConfigServices);\n    if (m_longPollServiceDto.get() != null) {\n      randomConfigServices.add(0,m_longPollServiceDto.getAndSet(null));\n    }\n    for (    ServiceDTO configService : randomConfigServices) {\n      String url=assembleQueryConfigUrl(configService.getHomepageUrl(),appId,cluster,m_namespace,dataCenter,m_configCache.get());\n      logger.debug(\"Loading config from {}\",url);\n      HttpRequest request=new HttpRequest(url);\n      Transaction transaction=Cat.newTransaction(\"Apollo.ConfigService\",\"queryConfig\");\n      transaction.addData(\"Url\",url);\n      try {\n        HttpResponse<ApolloConfig> response=m_httpUtil.doGet(request,ApolloConfig.class);\n        transaction.addData(\"StatusCode\",response.getStatusCode());\n        transaction.setStatus(Message.SUCCESS);\n        if (response.getStatusCode() == 304) {\n          logger.debug(\"Config server responds with 304 HTTP status code.\");\n          return m_configCache.get();\n        }\n        ApolloConfig result=response.getBody();\n        Cat.logEvent(\"Apollo.Client.ConfigLoaded.\" + result.getNamespaceName(),result.getReleaseKey());\n        logger.debug(\"Loaded config for {}: {}\",m_namespace,result);\n        return result;\n      }\n catch (      Throwable ex) {\n        Cat.logError(ex);\n        transaction.setStatus(ex);\n        exception=ex;\n      }\n finally {\n        transaction.complete();\n      }\n    }\n    try {\n      TimeUnit.SECONDS.sleep(1);\n    }\n catch (    InterruptedException ex) {\n    }\n  }\n  String message=String.format(\"Load Apollo Config failed - appId: %s, cluster: %s, namespace: %s, services: %s\",appId,cluster,m_namespace,configServices);\n  throw new ApolloConfigException(message,exception);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 323,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 167,
        "startColumnNumber" : 6,
        "endLineNumber" : 167,
        "endColumnNumber" : 48
      },
      "nodeContext" : "Collections.shuffle(randomConfigServices);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.List<com.ctrip.framework.apollo.core.dto.ServiceDTO>"
  }, {
    "nodeContext" : "randomConfigServices",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 170,
      "startColumnNumber" : 8,
      "endLineNumber" : 170,
      "endColumnNumber" : 28
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 65,
        "startLineNumber" : 170,
        "startColumnNumber" : 8,
        "endLineNumber" : 170,
        "endColumnNumber" : 73
      },
      "nodeContext" : "randomConfigServices.add(0,m_longPollServiceDto.getAndSet(null))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 170,
        "startColumnNumber" : 8,
        "endLineNumber" : 170,
        "endColumnNumber" : 74
      },
      "nodeContext" : "randomConfigServices.add(0,m_longPollServiceDto.getAndSet(null));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 169,
        "startColumnNumber" : 46,
        "endLineNumber" : 171,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  randomConfigServices.add(0,m_longPollServiceDto.getAndSet(null));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 124,
        "startLineNumber" : 169,
        "startColumnNumber" : 6,
        "endLineNumber" : 171,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (m_longPollServiceDto.get() != null) {\n  randomConfigServices.add(0,m_longPollServiceDto.getAndSet(null));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1798,
        "startLineNumber" : 165,
        "startColumnNumber" : 41,
        "endLineNumber" : 217,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<ServiceDTO> randomConfigServices=Lists.newLinkedList(configServices);\n  Collections.shuffle(randomConfigServices);\n  if (m_longPollServiceDto.get() != null) {\n    randomConfigServices.add(0,m_longPollServiceDto.getAndSet(null));\n  }\n  for (  ServiceDTO configService : randomConfigServices) {\n    String url=assembleQueryConfigUrl(configService.getHomepageUrl(),appId,cluster,m_namespace,dataCenter,m_configCache.get());\n    logger.debug(\"Loading config from {}\",url);\n    HttpRequest request=new HttpRequest(url);\n    Transaction transaction=Cat.newTransaction(\"Apollo.ConfigService\",\"queryConfig\");\n    transaction.addData(\"Url\",url);\n    try {\n      HttpResponse<ApolloConfig> response=m_httpUtil.doGet(request,ApolloConfig.class);\n      transaction.addData(\"StatusCode\",response.getStatusCode());\n      transaction.setStatus(Message.SUCCESS);\n      if (response.getStatusCode() == 304) {\n        logger.debug(\"Config server responds with 304 HTTP status code.\");\n        return m_configCache.get();\n      }\n      ApolloConfig result=response.getBody();\n      Cat.logEvent(\"Apollo.Client.ConfigLoaded.\" + result.getNamespaceName(),result.getReleaseKey());\n      logger.debug(\"Loaded config for {}: {}\",m_namespace,result);\n      return result;\n    }\n catch (    Throwable ex) {\n      Cat.logError(ex);\n      transaction.setStatus(ex);\n      exception=ex;\n    }\n finally {\n      transaction.complete();\n    }\n  }\n  try {\n    TimeUnit.SECONDS.sleep(1);\n  }\n catch (  InterruptedException ex) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 206,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1835,
        "startLineNumber" : 165,
        "startColumnNumber" : 4,
        "endLineNumber" : 217,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < maxRetries; i++) {\n  List<ServiceDTO> randomConfigServices=Lists.newLinkedList(configServices);\n  Collections.shuffle(randomConfigServices);\n  if (m_longPollServiceDto.get() != null) {\n    randomConfigServices.add(0,m_longPollServiceDto.getAndSet(null));\n  }\n  for (  ServiceDTO configService : randomConfigServices) {\n    String url=assembleQueryConfigUrl(configService.getHomepageUrl(),appId,cluster,m_namespace,dataCenter,m_configCache.get());\n    logger.debug(\"Loading config from {}\",url);\n    HttpRequest request=new HttpRequest(url);\n    Transaction transaction=Cat.newTransaction(\"Apollo.ConfigService\",\"queryConfig\");\n    transaction.addData(\"Url\",url);\n    try {\n      HttpResponse<ApolloConfig> response=m_httpUtil.doGet(request,ApolloConfig.class);\n      transaction.addData(\"StatusCode\",response.getStatusCode());\n      transaction.setStatus(Message.SUCCESS);\n      if (response.getStatusCode() == 304) {\n        logger.debug(\"Config server responds with 304 HTTP status code.\");\n        return m_configCache.get();\n      }\n      ApolloConfig result=response.getBody();\n      Cat.logEvent(\"Apollo.Client.ConfigLoaded.\" + result.getNamespaceName(),result.getReleaseKey());\n      logger.debug(\"Loaded config for {}: {}\",m_namespace,result);\n      return result;\n    }\n catch (    Throwable ex) {\n      Cat.logError(ex);\n      transaction.setStatus(ex);\n      exception=ex;\n    }\n finally {\n      transaction.complete();\n    }\n  }\n  try {\n    TimeUnit.SECONDS.sleep(1);\n  }\n catch (  InterruptedException ex) {\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 217,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2641,
        "startLineNumber" : 149,
        "startColumnNumber" : 42,
        "endLineNumber" : 222,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!m_loadConfigRateLimiter.tryAcquire(5,TimeUnit.SECONDS)) {\n    try {\n      TimeUnit.SECONDS.sleep(5);\n    }\n catch (    InterruptedException e) {\n    }\n  }\n  String appId=m_configUtil.getAppId();\n  String cluster=m_configUtil.getCluster();\n  String dataCenter=m_configUtil.getDataCenter();\n  Cat.logEvent(\"Apollo.Client.ConfigInfo\",STRING_JOINER.join(appId,cluster,m_namespace));\n  int maxRetries=2;\n  Throwable exception=null;\n  List<ServiceDTO> configServices=getConfigServices();\n  for (int i=0; i < maxRetries; i++) {\n    List<ServiceDTO> randomConfigServices=Lists.newLinkedList(configServices);\n    Collections.shuffle(randomConfigServices);\n    if (m_longPollServiceDto.get() != null) {\n      randomConfigServices.add(0,m_longPollServiceDto.getAndSet(null));\n    }\n    for (    ServiceDTO configService : randomConfigServices) {\n      String url=assembleQueryConfigUrl(configService.getHomepageUrl(),appId,cluster,m_namespace,dataCenter,m_configCache.get());\n      logger.debug(\"Loading config from {}\",url);\n      HttpRequest request=new HttpRequest(url);\n      Transaction transaction=Cat.newTransaction(\"Apollo.ConfigService\",\"queryConfig\");\n      transaction.addData(\"Url\",url);\n      try {\n        HttpResponse<ApolloConfig> response=m_httpUtil.doGet(request,ApolloConfig.class);\n        transaction.addData(\"StatusCode\",response.getStatusCode());\n        transaction.setStatus(Message.SUCCESS);\n        if (response.getStatusCode() == 304) {\n          logger.debug(\"Config server responds with 304 HTTP status code.\");\n          return m_configCache.get();\n        }\n        ApolloConfig result=response.getBody();\n        Cat.logEvent(\"Apollo.Client.ConfigLoaded.\" + result.getNamespaceName(),result.getReleaseKey());\n        logger.debug(\"Loaded config for {}: {}\",m_namespace,result);\n        return result;\n      }\n catch (      Throwable ex) {\n        Cat.logError(ex);\n        transaction.setStatus(ex);\n        exception=ex;\n      }\n finally {\n        transaction.complete();\n      }\n    }\n    try {\n      TimeUnit.SECONDS.sleep(1);\n    }\n catch (    InterruptedException ex) {\n    }\n  }\n  String message=String.format(\"Load Apollo Config failed - appId: %s, cluster: %s, namespace: %s, services: %s\",appId,cluster,m_namespace,configServices);\n  throw new ApolloConfigException(message,exception);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 318,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2681,
        "startLineNumber" : 149,
        "startColumnNumber" : 2,
        "endLineNumber" : 222,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private ApolloConfig loadApolloConfig(){\n  if (!m_loadConfigRateLimiter.tryAcquire(5,TimeUnit.SECONDS)) {\n    try {\n      TimeUnit.SECONDS.sleep(5);\n    }\n catch (    InterruptedException e) {\n    }\n  }\n  String appId=m_configUtil.getAppId();\n  String cluster=m_configUtil.getCluster();\n  String dataCenter=m_configUtil.getDataCenter();\n  Cat.logEvent(\"Apollo.Client.ConfigInfo\",STRING_JOINER.join(appId,cluster,m_namespace));\n  int maxRetries=2;\n  Throwable exception=null;\n  List<ServiceDTO> configServices=getConfigServices();\n  for (int i=0; i < maxRetries; i++) {\n    List<ServiceDTO> randomConfigServices=Lists.newLinkedList(configServices);\n    Collections.shuffle(randomConfigServices);\n    if (m_longPollServiceDto.get() != null) {\n      randomConfigServices.add(0,m_longPollServiceDto.getAndSet(null));\n    }\n    for (    ServiceDTO configService : randomConfigServices) {\n      String url=assembleQueryConfigUrl(configService.getHomepageUrl(),appId,cluster,m_namespace,dataCenter,m_configCache.get());\n      logger.debug(\"Loading config from {}\",url);\n      HttpRequest request=new HttpRequest(url);\n      Transaction transaction=Cat.newTransaction(\"Apollo.ConfigService\",\"queryConfig\");\n      transaction.addData(\"Url\",url);\n      try {\n        HttpResponse<ApolloConfig> response=m_httpUtil.doGet(request,ApolloConfig.class);\n        transaction.addData(\"StatusCode\",response.getStatusCode());\n        transaction.setStatus(Message.SUCCESS);\n        if (response.getStatusCode() == 304) {\n          logger.debug(\"Config server responds with 304 HTTP status code.\");\n          return m_configCache.get();\n        }\n        ApolloConfig result=response.getBody();\n        Cat.logEvent(\"Apollo.Client.ConfigLoaded.\" + result.getNamespaceName(),result.getReleaseKey());\n        logger.debug(\"Loaded config for {}: {}\",m_namespace,result);\n        return result;\n      }\n catch (      Throwable ex) {\n        Cat.logError(ex);\n        transaction.setStatus(ex);\n        exception=ex;\n      }\n finally {\n        transaction.complete();\n      }\n    }\n    try {\n      TimeUnit.SECONDS.sleep(1);\n    }\n catch (    InterruptedException ex) {\n    }\n  }\n  String message=String.format(\"Load Apollo Config failed - appId: %s, cluster: %s, namespace: %s, services: %s\",appId,cluster,m_namespace,configServices);\n  throw new ApolloConfigException(message,exception);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 323,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 66,
        "startLineNumber" : 170,
        "startColumnNumber" : 8,
        "endLineNumber" : 170,
        "endColumnNumber" : 74
      },
      "nodeContext" : "randomConfigServices.add(0,m_longPollServiceDto.getAndSet(null));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.List<com.ctrip.framework.apollo.core.dto.ServiceDTO>"
  }, {
    "nodeContext" : "randomConfigServices",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 173,
      "startColumnNumber" : 38,
      "endLineNumber" : 173,
      "endColumnNumber" : 58
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1347,
        "startLineNumber" : 173,
        "startColumnNumber" : 6,
        "endLineNumber" : 210,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (ServiceDTO configService : randomConfigServices) {\n  String url=assembleQueryConfigUrl(configService.getHomepageUrl(),appId,cluster,m_namespace,dataCenter,m_configCache.get());\n  logger.debug(\"Loading config from {}\",url);\n  HttpRequest request=new HttpRequest(url);\n  Transaction transaction=Cat.newTransaction(\"Apollo.ConfigService\",\"queryConfig\");\n  transaction.addData(\"Url\",url);\n  try {\n    HttpResponse<ApolloConfig> response=m_httpUtil.doGet(request,ApolloConfig.class);\n    transaction.addData(\"StatusCode\",response.getStatusCode());\n    transaction.setStatus(Message.SUCCESS);\n    if (response.getStatusCode() == 304) {\n      logger.debug(\"Config server responds with 304 HTTP status code.\");\n      return m_configCache.get();\n    }\n    ApolloConfig result=response.getBody();\n    Cat.logEvent(\"Apollo.Client.ConfigLoaded.\" + result.getNamespaceName(),result.getReleaseKey());\n    logger.debug(\"Loaded config for {}: {}\",m_namespace,result);\n    return result;\n  }\n catch (  Throwable ex) {\n    Cat.logError(ex);\n    transaction.setStatus(ex);\n    exception=ex;\n  }\n finally {\n    transaction.complete();\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 157,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1798,
        "startLineNumber" : 165,
        "startColumnNumber" : 41,
        "endLineNumber" : 217,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  List<ServiceDTO> randomConfigServices=Lists.newLinkedList(configServices);\n  Collections.shuffle(randomConfigServices);\n  if (m_longPollServiceDto.get() != null) {\n    randomConfigServices.add(0,m_longPollServiceDto.getAndSet(null));\n  }\n  for (  ServiceDTO configService : randomConfigServices) {\n    String url=assembleQueryConfigUrl(configService.getHomepageUrl(),appId,cluster,m_namespace,dataCenter,m_configCache.get());\n    logger.debug(\"Loading config from {}\",url);\n    HttpRequest request=new HttpRequest(url);\n    Transaction transaction=Cat.newTransaction(\"Apollo.ConfigService\",\"queryConfig\");\n    transaction.addData(\"Url\",url);\n    try {\n      HttpResponse<ApolloConfig> response=m_httpUtil.doGet(request,ApolloConfig.class);\n      transaction.addData(\"StatusCode\",response.getStatusCode());\n      transaction.setStatus(Message.SUCCESS);\n      if (response.getStatusCode() == 304) {\n        logger.debug(\"Config server responds with 304 HTTP status code.\");\n        return m_configCache.get();\n      }\n      ApolloConfig result=response.getBody();\n      Cat.logEvent(\"Apollo.Client.ConfigLoaded.\" + result.getNamespaceName(),result.getReleaseKey());\n      logger.debug(\"Loaded config for {}: {}\",m_namespace,result);\n      return result;\n    }\n catch (    Throwable ex) {\n      Cat.logError(ex);\n      transaction.setStatus(ex);\n      exception=ex;\n    }\n finally {\n      transaction.complete();\n    }\n  }\n  try {\n    TimeUnit.SECONDS.sleep(1);\n  }\n catch (  InterruptedException ex) {\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 206,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1835,
        "startLineNumber" : 165,
        "startColumnNumber" : 4,
        "endLineNumber" : 217,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < maxRetries; i++) {\n  List<ServiceDTO> randomConfigServices=Lists.newLinkedList(configServices);\n  Collections.shuffle(randomConfigServices);\n  if (m_longPollServiceDto.get() != null) {\n    randomConfigServices.add(0,m_longPollServiceDto.getAndSet(null));\n  }\n  for (  ServiceDTO configService : randomConfigServices) {\n    String url=assembleQueryConfigUrl(configService.getHomepageUrl(),appId,cluster,m_namespace,dataCenter,m_configCache.get());\n    logger.debug(\"Loading config from {}\",url);\n    HttpRequest request=new HttpRequest(url);\n    Transaction transaction=Cat.newTransaction(\"Apollo.ConfigService\",\"queryConfig\");\n    transaction.addData(\"Url\",url);\n    try {\n      HttpResponse<ApolloConfig> response=m_httpUtil.doGet(request,ApolloConfig.class);\n      transaction.addData(\"StatusCode\",response.getStatusCode());\n      transaction.setStatus(Message.SUCCESS);\n      if (response.getStatusCode() == 304) {\n        logger.debug(\"Config server responds with 304 HTTP status code.\");\n        return m_configCache.get();\n      }\n      ApolloConfig result=response.getBody();\n      Cat.logEvent(\"Apollo.Client.ConfigLoaded.\" + result.getNamespaceName(),result.getReleaseKey());\n      logger.debug(\"Loaded config for {}: {}\",m_namespace,result);\n      return result;\n    }\n catch (    Throwable ex) {\n      Cat.logError(ex);\n      transaction.setStatus(ex);\n      exception=ex;\n    }\n finally {\n      transaction.complete();\n    }\n  }\n  try {\n    TimeUnit.SECONDS.sleep(1);\n  }\n catch (  InterruptedException ex) {\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 217,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2641,
        "startLineNumber" : 149,
        "startColumnNumber" : 42,
        "endLineNumber" : 222,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (!m_loadConfigRateLimiter.tryAcquire(5,TimeUnit.SECONDS)) {\n    try {\n      TimeUnit.SECONDS.sleep(5);\n    }\n catch (    InterruptedException e) {\n    }\n  }\n  String appId=m_configUtil.getAppId();\n  String cluster=m_configUtil.getCluster();\n  String dataCenter=m_configUtil.getDataCenter();\n  Cat.logEvent(\"Apollo.Client.ConfigInfo\",STRING_JOINER.join(appId,cluster,m_namespace));\n  int maxRetries=2;\n  Throwable exception=null;\n  List<ServiceDTO> configServices=getConfigServices();\n  for (int i=0; i < maxRetries; i++) {\n    List<ServiceDTO> randomConfigServices=Lists.newLinkedList(configServices);\n    Collections.shuffle(randomConfigServices);\n    if (m_longPollServiceDto.get() != null) {\n      randomConfigServices.add(0,m_longPollServiceDto.getAndSet(null));\n    }\n    for (    ServiceDTO configService : randomConfigServices) {\n      String url=assembleQueryConfigUrl(configService.getHomepageUrl(),appId,cluster,m_namespace,dataCenter,m_configCache.get());\n      logger.debug(\"Loading config from {}\",url);\n      HttpRequest request=new HttpRequest(url);\n      Transaction transaction=Cat.newTransaction(\"Apollo.ConfigService\",\"queryConfig\");\n      transaction.addData(\"Url\",url);\n      try {\n        HttpResponse<ApolloConfig> response=m_httpUtil.doGet(request,ApolloConfig.class);\n        transaction.addData(\"StatusCode\",response.getStatusCode());\n        transaction.setStatus(Message.SUCCESS);\n        if (response.getStatusCode() == 304) {\n          logger.debug(\"Config server responds with 304 HTTP status code.\");\n          return m_configCache.get();\n        }\n        ApolloConfig result=response.getBody();\n        Cat.logEvent(\"Apollo.Client.ConfigLoaded.\" + result.getNamespaceName(),result.getReleaseKey());\n        logger.debug(\"Loaded config for {}: {}\",m_namespace,result);\n        return result;\n      }\n catch (      Throwable ex) {\n        Cat.logError(ex);\n        transaction.setStatus(ex);\n        exception=ex;\n      }\n finally {\n        transaction.complete();\n      }\n    }\n    try {\n      TimeUnit.SECONDS.sleep(1);\n    }\n catch (    InterruptedException ex) {\n    }\n  }\n  String message=String.format(\"Load Apollo Config failed - appId: %s, cluster: %s, namespace: %s, services: %s\",appId,cluster,m_namespace,configServices);\n  throw new ApolloConfigException(message,exception);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 318,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2681,
        "startLineNumber" : 149,
        "startColumnNumber" : 2,
        "endLineNumber" : 222,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private ApolloConfig loadApolloConfig(){\n  if (!m_loadConfigRateLimiter.tryAcquire(5,TimeUnit.SECONDS)) {\n    try {\n      TimeUnit.SECONDS.sleep(5);\n    }\n catch (    InterruptedException e) {\n    }\n  }\n  String appId=m_configUtil.getAppId();\n  String cluster=m_configUtil.getCluster();\n  String dataCenter=m_configUtil.getDataCenter();\n  Cat.logEvent(\"Apollo.Client.ConfigInfo\",STRING_JOINER.join(appId,cluster,m_namespace));\n  int maxRetries=2;\n  Throwable exception=null;\n  List<ServiceDTO> configServices=getConfigServices();\n  for (int i=0; i < maxRetries; i++) {\n    List<ServiceDTO> randomConfigServices=Lists.newLinkedList(configServices);\n    Collections.shuffle(randomConfigServices);\n    if (m_longPollServiceDto.get() != null) {\n      randomConfigServices.add(0,m_longPollServiceDto.getAndSet(null));\n    }\n    for (    ServiceDTO configService : randomConfigServices) {\n      String url=assembleQueryConfigUrl(configService.getHomepageUrl(),appId,cluster,m_namespace,dataCenter,m_configCache.get());\n      logger.debug(\"Loading config from {}\",url);\n      HttpRequest request=new HttpRequest(url);\n      Transaction transaction=Cat.newTransaction(\"Apollo.ConfigService\",\"queryConfig\");\n      transaction.addData(\"Url\",url);\n      try {\n        HttpResponse<ApolloConfig> response=m_httpUtil.doGet(request,ApolloConfig.class);\n        transaction.addData(\"StatusCode\",response.getStatusCode());\n        transaction.setStatus(Message.SUCCESS);\n        if (response.getStatusCode() == 304) {\n          logger.debug(\"Config server responds with 304 HTTP status code.\");\n          return m_configCache.get();\n        }\n        ApolloConfig result=response.getBody();\n        Cat.logEvent(\"Apollo.Client.ConfigLoaded.\" + result.getNamespaceName(),result.getReleaseKey());\n        logger.debug(\"Loaded config for {}: {}\",m_namespace,result);\n        return result;\n      }\n catch (      Throwable ex) {\n        Cat.logError(ex);\n        transaction.setStatus(ex);\n        exception=ex;\n      }\n finally {\n        transaction.complete();\n      }\n    }\n    try {\n      TimeUnit.SECONDS.sleep(1);\n    }\n catch (    InterruptedException ex) {\n    }\n  }\n  String message=String.format(\"Load Apollo Config failed - appId: %s, cluster: %s, namespace: %s, services: %s\",appId,cluster,m_namespace,configServices);\n  throw new ApolloConfigException(message,exception);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 323,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1347,
        "startLineNumber" : 173,
        "startColumnNumber" : 6,
        "endLineNumber" : 210,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (ServiceDTO configService : randomConfigServices) {\n  String url=assembleQueryConfigUrl(configService.getHomepageUrl(),appId,cluster,m_namespace,dataCenter,m_configCache.get());\n  logger.debug(\"Loading config from {}\",url);\n  HttpRequest request=new HttpRequest(url);\n  Transaction transaction=Cat.newTransaction(\"Apollo.ConfigService\",\"queryConfig\");\n  transaction.addData(\"Url\",url);\n  try {\n    HttpResponse<ApolloConfig> response=m_httpUtil.doGet(request,ApolloConfig.class);\n    transaction.addData(\"StatusCode\",response.getStatusCode());\n    transaction.setStatus(Message.SUCCESS);\n    if (response.getStatusCode() == 304) {\n      logger.debug(\"Config server responds with 304 HTTP status code.\");\n      return m_configCache.get();\n    }\n    ApolloConfig result=response.getBody();\n    Cat.logEvent(\"Apollo.Client.ConfigLoaded.\" + result.getNamespaceName(),result.getReleaseKey());\n    logger.debug(\"Loaded config for {}: {}\",m_namespace,result);\n    return result;\n  }\n catch (  Throwable ex) {\n    Cat.logError(ex);\n    transaction.setStatus(ex);\n    exception=ex;\n  }\n finally {\n    transaction.complete();\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 157,
      "astHeight" : 10
    },
    "tokenLength" : 1,
    "type" : "java.util.List<com.ctrip.framework.apollo.core.dto.ServiceDTO>"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 167,
    "startColumnNumber" : 26,
    "endLineNumber" : 167,
    "endColumnNumber" : 46
  }, {
    "charLength" : 20,
    "startLineNumber" : 170,
    "startColumnNumber" : 8,
    "endLineNumber" : 170,
    "endColumnNumber" : 28
  }, {
    "charLength" : 20,
    "startLineNumber" : 173,
    "startColumnNumber" : 38,
    "endLineNumber" : 173,
    "endColumnNumber" : 58
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 1
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 1
  } ]
}