{
  "id" : 35,
  "expression" : "low <= high",
  "projectName" : "apache@flink",
  "commitID" : "f8cb19e70ca7da6423dfb01b97e05c4d520c9fde",
  "filePath" : "/flink-core/src/main/java/org/apache/flink/api/common/distributions/CommonRangeBoundaries.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "low <= high",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 11,
      "startLineNumber" : 48,
      "startColumnNumber" : 15,
      "endLineNumber" : 48,
      "endColumnNumber" : 26
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 362,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (low <= high) {\n  final int mid=(low + high) >>> 1;\n  final int result=compareKeys(flatComparators,keys,this.boundaries[mid]);\n  if (result > 0) {\n    low=mid + 1;\n  }\n else   if (result < 0) {\n    high=mid - 1;\n  }\n else {\n    return mid;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 55,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 638,
        "startLineNumber" : 43,
        "startColumnNumber" : 39,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int low=0;\n  int high=this.boundaries.length - 1;\n  typeComparator.extractKeys(record,keys,0);\n  while (low <= high) {\n    final int mid=(low + high) >>> 1;\n    final int result=compareKeys(flatComparators,keys,this.boundaries[mid]);\n    if (result > 0) {\n      low=mid + 1;\n    }\n else     if (result < 0) {\n      high=mid - 1;\n    }\n else {\n      return mid;\n    }\n  }\n  return low;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 81,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 673,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 63,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private int binarySearch(T record){\n  int low=0;\n  int high=this.boundaries.length - 1;\n  typeComparator.extractKeys(record,keys,0);\n  while (low <= high) {\n    final int mid=(low + high) >>> 1;\n    final int result=compareKeys(flatComparators,keys,this.boundaries[mid]);\n    if (result > 0) {\n      low=mid + 1;\n    }\n else     if (result < 0) {\n      high=mid - 1;\n    }\n else {\n      return mid;\n    }\n  }\n  return low;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 89,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 362,
        "startLineNumber" : 48,
        "startColumnNumber" : 8,
        "endLineNumber" : 59,
        "endColumnNumber" : 9
      },
      "nodeContext" : "while (low <= high) {\n  final int mid=(low + high) >>> 1;\n  final int result=compareKeys(flatComparators,keys,this.boundaries[mid]);\n  if (result > 0) {\n    low=mid + 1;\n  }\n else   if (result < 0) {\n    high=mid - 1;\n  }\n else {\n    return mid;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 55,
      "astHeight" : 9
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 11,
    "startLineNumber" : 48,
    "startColumnNumber" : 15,
    "endLineNumber" : 48,
    "endColumnNumber" : 26
  } ],
  "layoutRelationDataList" : [ ]
}