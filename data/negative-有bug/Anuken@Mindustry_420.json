{
  "id" : 420,
  "expression" : "color1",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/entities/part/FlarePart.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "color1",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 35,
      "startColumnNumber" : 19,
      "endLineNumber" : 35,
      "endColumnNumber" : 25
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 35,
        "startColumnNumber" : 8,
        "endLineNumber" : 35,
        "endColumnNumber" : 26
      },
      "nodeContext" : "Draw.color(color1)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 35,
        "startColumnNumber" : 8,
        "endLineNumber" : 35,
        "endColumnNumber" : 27
      },
      "nodeContext" : "Draw.color(color1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 946,
        "startLineNumber" : 19,
        "startColumnNumber" : 39,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  float z=Draw.z();\n  if (layer > 0)   Draw.z(layer);\n  float prog=progress.getClamp(params);\n  int i=params.sideOverride == -1 ? 0 : params.sideOverride;\n  float sign=(i == 0 ? 1 : -1) * params.sideMultiplier;\n  Tmp.v1.set(x * sign,y).rotate(params.rotation - 90);\n  float rx=params.x + Tmp.v1.x, ry=params.y + Tmp.v1.y, rot=(followRotation ? params.rotation : 0f) + rotMove * prog + rotation, rad=radiusTo < 0 ? radius : Mathf.lerp(radius,radiusTo,prog);\n  Draw.color(color1);\n  for (int j=0; j < sides; j++) {\n    Drawf.tri(rx,ry,stroke,rad,j * 360f / sides + rot);\n  }\n  Draw.color(color2);\n  for (int j=0; j < sides; j++) {\n    Drawf.tri(rx,ry,stroke * innerScl,rad * innerRadScl,j * 360f / sides + rot);\n  }\n  Draw.color();\n  Draw.z(z);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 202,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 996,
        "startLineNumber" : 18,
        "startColumnNumber" : 4,
        "endLineNumber" : 47,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void draw(PartParams params){\n  float z=Draw.z();\n  if (layer > 0)   Draw.z(layer);\n  float prog=progress.getClamp(params);\n  int i=params.sideOverride == -1 ? 0 : params.sideOverride;\n  float sign=(i == 0 ? 1 : -1) * params.sideMultiplier;\n  Tmp.v1.set(x * sign,y).rotate(params.rotation - 90);\n  float rx=params.x + Tmp.v1.x, ry=params.y + Tmp.v1.y, rot=(followRotation ? params.rotation : 0f) + rotMove * prog + rotation, rad=radiusTo < 0 ? radius : Mathf.lerp(radius,radiusTo,prog);\n  Draw.color(color1);\n  for (int j=0; j < sides; j++) {\n    Drawf.tri(rx,ry,stroke,rad,j * 360f / sides + rot);\n  }\n  Draw.color(color2);\n  for (int j=0; j < sides; j++) {\n    Drawf.tri(rx,ry,stroke * innerScl,rad * innerRadScl,j * 360f / sides + rot);\n  }\n  Draw.color();\n  Draw.z(z);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 212,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 35,
        "startColumnNumber" : 8,
        "endLineNumber" : 35,
        "endColumnNumber" : 27
      },
      "nodeContext" : "Draw.color(color1);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "mindustry.entities.part.Color"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 35,
    "startColumnNumber" : 19,
    "endLineNumber" : 35,
    "endColumnNumber" : 25
  } ],
  "layoutRelationDataList" : [ ]
}