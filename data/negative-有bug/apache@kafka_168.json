{
  "id" : 168,
  "expression" : "\"\"",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/clients/src/test/java/org/apache/kafka/common/security/scram/internals/ScramMessagesTest.java",
  "occurrences" : 7,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 75,
      "startColumnNumber" : 54,
      "endLineNumber" : 75,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 57
      },
      "nodeContext" : "checkClientFirstMessage(m,\"someuser\",nonce,\"\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 58
      },
      "nodeContext" : "checkClientFirstMessage(m,\"someuser\",nonce,\"\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2345,
        "startLineNumber" : 72,
        "startColumnNumber" : 63,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String nonce=formatter.secureRandomString();\n  ClientFirstMessage m=new ClientFirstMessage(\"someuser\",nonce,Collections.emptyMap());\n  checkClientFirstMessage(m,\"someuser\",nonce,\"\");\n  String str=String.format(\"n,,n=testuser,r=%s\",nonce);\n  m=createScramMessage(ClientFirstMessage.class,str);\n  checkClientFirstMessage(m,\"testuser\",nonce,\"\");\n  m=new ClientFirstMessage(m.toBytes());\n  checkClientFirstMessage(m,\"testuser\",nonce,\"\");\n  str=String.format(\"n,,n=test=2Cuser,r=%s\",nonce);\n  m=createScramMessage(ClientFirstMessage.class,str);\n  checkClientFirstMessage(m,\"test=2Cuser\",nonce,\"\");\n  assertEquals(\"test,user\",ScramFormatter.username(m.saslName()));\n  str=String.format(\"n,,n=test=3Duser,r=%s\",nonce);\n  m=createScramMessage(ClientFirstMessage.class,str);\n  checkClientFirstMessage(m,\"test=3Duser\",nonce,\"\");\n  assertEquals(\"test=user\",ScramFormatter.username(m.saslName()));\n  str=String.format(\"n,a=testauthzid,n=testuser,r=%s\",nonce);\n  checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"testauthzid\");\n  for (  String reserved : VALID_RESERVED) {\n    str=String.format(\"n,,%s,n=testuser,r=%s\",reserved,nonce);\n    checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"\");\n  }\n  for (  String extension : VALID_EXTENSIONS) {\n    str=String.format(\"n,,n=testuser,r=%s,%s\",nonce,extension);\n    checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"\");\n  }\n  str=String.format(\"n,,n=testuser,r=%s,%s\",nonce,\"tokenauth=true\");\n  m=createScramMessage(ClientFirstMessage.class,str);\n  assertTrue(m.extensions().tokenAuthenticated(),\"Token authentication not set from extensions\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 242,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2414,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void validClientFirstMessage() throws SaslException {\n  String nonce=formatter.secureRandomString();\n  ClientFirstMessage m=new ClientFirstMessage(\"someuser\",nonce,Collections.emptyMap());\n  checkClientFirstMessage(m,\"someuser\",nonce,\"\");\n  String str=String.format(\"n,,n=testuser,r=%s\",nonce);\n  m=createScramMessage(ClientFirstMessage.class,str);\n  checkClientFirstMessage(m,\"testuser\",nonce,\"\");\n  m=new ClientFirstMessage(m.toBytes());\n  checkClientFirstMessage(m,\"testuser\",nonce,\"\");\n  str=String.format(\"n,,n=test=2Cuser,r=%s\",nonce);\n  m=createScramMessage(ClientFirstMessage.class,str);\n  checkClientFirstMessage(m,\"test=2Cuser\",nonce,\"\");\n  assertEquals(\"test,user\",ScramFormatter.username(m.saslName()));\n  str=String.format(\"n,,n=test=3Duser,r=%s\",nonce);\n  m=createScramMessage(ClientFirstMessage.class,str);\n  checkClientFirstMessage(m,\"test=3Duser\",nonce,\"\");\n  assertEquals(\"test=user\",ScramFormatter.username(m.saslName()));\n  str=String.format(\"n,a=testauthzid,n=testuser,r=%s\",nonce);\n  checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"testauthzid\");\n  for (  String reserved : VALID_RESERVED) {\n    str=String.format(\"n,,%s,n=testuser,r=%s\",reserved,nonce);\n    checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"\");\n  }\n  for (  String extension : VALID_EXTENSIONS) {\n    str=String.format(\"n,,n=testuser,r=%s,%s\",nonce,extension);\n    checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"\");\n  }\n  str=String.format(\"n,,n=testuser,r=%s,%s\",nonce,\"tokenauth=true\");\n  m=createScramMessage(ClientFirstMessage.class,str);\n  assertTrue(m.extensions().tokenAuthenticated(),\"Token authentication not set from extensions\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 250,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 75,
        "startColumnNumber" : 8,
        "endLineNumber" : 75,
        "endColumnNumber" : 58
      },
      "nodeContext" : "checkClientFirstMessage(m,\"someuser\",nonce,\"\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 80,
      "startColumnNumber" : 54,
      "endLineNumber" : 80,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 80,
        "endColumnNumber" : 57
      },
      "nodeContext" : "checkClientFirstMessage(m,\"testuser\",nonce,\"\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 80,
        "endColumnNumber" : 58
      },
      "nodeContext" : "checkClientFirstMessage(m,\"testuser\",nonce,\"\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2345,
        "startLineNumber" : 72,
        "startColumnNumber" : 63,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String nonce=formatter.secureRandomString();\n  ClientFirstMessage m=new ClientFirstMessage(\"someuser\",nonce,Collections.emptyMap());\n  checkClientFirstMessage(m,\"someuser\",nonce,\"\");\n  String str=String.format(\"n,,n=testuser,r=%s\",nonce);\n  m=createScramMessage(ClientFirstMessage.class,str);\n  checkClientFirstMessage(m,\"testuser\",nonce,\"\");\n  m=new ClientFirstMessage(m.toBytes());\n  checkClientFirstMessage(m,\"testuser\",nonce,\"\");\n  str=String.format(\"n,,n=test=2Cuser,r=%s\",nonce);\n  m=createScramMessage(ClientFirstMessage.class,str);\n  checkClientFirstMessage(m,\"test=2Cuser\",nonce,\"\");\n  assertEquals(\"test,user\",ScramFormatter.username(m.saslName()));\n  str=String.format(\"n,,n=test=3Duser,r=%s\",nonce);\n  m=createScramMessage(ClientFirstMessage.class,str);\n  checkClientFirstMessage(m,\"test=3Duser\",nonce,\"\");\n  assertEquals(\"test=user\",ScramFormatter.username(m.saslName()));\n  str=String.format(\"n,a=testauthzid,n=testuser,r=%s\",nonce);\n  checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"testauthzid\");\n  for (  String reserved : VALID_RESERVED) {\n    str=String.format(\"n,,%s,n=testuser,r=%s\",reserved,nonce);\n    checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"\");\n  }\n  for (  String extension : VALID_EXTENSIONS) {\n    str=String.format(\"n,,n=testuser,r=%s,%s\",nonce,extension);\n    checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"\");\n  }\n  str=String.format(\"n,,n=testuser,r=%s,%s\",nonce,\"tokenauth=true\");\n  m=createScramMessage(ClientFirstMessage.class,str);\n  assertTrue(m.extensions().tokenAuthenticated(),\"Token authentication not set from extensions\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 242,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2414,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void validClientFirstMessage() throws SaslException {\n  String nonce=formatter.secureRandomString();\n  ClientFirstMessage m=new ClientFirstMessage(\"someuser\",nonce,Collections.emptyMap());\n  checkClientFirstMessage(m,\"someuser\",nonce,\"\");\n  String str=String.format(\"n,,n=testuser,r=%s\",nonce);\n  m=createScramMessage(ClientFirstMessage.class,str);\n  checkClientFirstMessage(m,\"testuser\",nonce,\"\");\n  m=new ClientFirstMessage(m.toBytes());\n  checkClientFirstMessage(m,\"testuser\",nonce,\"\");\n  str=String.format(\"n,,n=test=2Cuser,r=%s\",nonce);\n  m=createScramMessage(ClientFirstMessage.class,str);\n  checkClientFirstMessage(m,\"test=2Cuser\",nonce,\"\");\n  assertEquals(\"test,user\",ScramFormatter.username(m.saslName()));\n  str=String.format(\"n,,n=test=3Duser,r=%s\",nonce);\n  m=createScramMessage(ClientFirstMessage.class,str);\n  checkClientFirstMessage(m,\"test=3Duser\",nonce,\"\");\n  assertEquals(\"test=user\",ScramFormatter.username(m.saslName()));\n  str=String.format(\"n,a=testauthzid,n=testuser,r=%s\",nonce);\n  checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"testauthzid\");\n  for (  String reserved : VALID_RESERVED) {\n    str=String.format(\"n,,%s,n=testuser,r=%s\",reserved,nonce);\n    checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"\");\n  }\n  for (  String extension : VALID_EXTENSIONS) {\n    str=String.format(\"n,,n=testuser,r=%s,%s\",nonce,extension);\n    checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"\");\n  }\n  str=String.format(\"n,,n=testuser,r=%s,%s\",nonce,\"tokenauth=true\");\n  m=createScramMessage(ClientFirstMessage.class,str);\n  assertTrue(m.extensions().tokenAuthenticated(),\"Token authentication not set from extensions\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 250,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 80,
        "endColumnNumber" : 58
      },
      "nodeContext" : "checkClientFirstMessage(m,\"testuser\",nonce,\"\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 82,
      "startColumnNumber" : 54,
      "endLineNumber" : 82,
      "endColumnNumber" : 56
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 57
      },
      "nodeContext" : "checkClientFirstMessage(m,\"testuser\",nonce,\"\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 58
      },
      "nodeContext" : "checkClientFirstMessage(m,\"testuser\",nonce,\"\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2345,
        "startLineNumber" : 72,
        "startColumnNumber" : 63,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String nonce=formatter.secureRandomString();\n  ClientFirstMessage m=new ClientFirstMessage(\"someuser\",nonce,Collections.emptyMap());\n  checkClientFirstMessage(m,\"someuser\",nonce,\"\");\n  String str=String.format(\"n,,n=testuser,r=%s\",nonce);\n  m=createScramMessage(ClientFirstMessage.class,str);\n  checkClientFirstMessage(m,\"testuser\",nonce,\"\");\n  m=new ClientFirstMessage(m.toBytes());\n  checkClientFirstMessage(m,\"testuser\",nonce,\"\");\n  str=String.format(\"n,,n=test=2Cuser,r=%s\",nonce);\n  m=createScramMessage(ClientFirstMessage.class,str);\n  checkClientFirstMessage(m,\"test=2Cuser\",nonce,\"\");\n  assertEquals(\"test,user\",ScramFormatter.username(m.saslName()));\n  str=String.format(\"n,,n=test=3Duser,r=%s\",nonce);\n  m=createScramMessage(ClientFirstMessage.class,str);\n  checkClientFirstMessage(m,\"test=3Duser\",nonce,\"\");\n  assertEquals(\"test=user\",ScramFormatter.username(m.saslName()));\n  str=String.format(\"n,a=testauthzid,n=testuser,r=%s\",nonce);\n  checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"testauthzid\");\n  for (  String reserved : VALID_RESERVED) {\n    str=String.format(\"n,,%s,n=testuser,r=%s\",reserved,nonce);\n    checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"\");\n  }\n  for (  String extension : VALID_EXTENSIONS) {\n    str=String.format(\"n,,n=testuser,r=%s,%s\",nonce,extension);\n    checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"\");\n  }\n  str=String.format(\"n,,n=testuser,r=%s,%s\",nonce,\"tokenauth=true\");\n  m=createScramMessage(ClientFirstMessage.class,str);\n  assertTrue(m.extensions().tokenAuthenticated(),\"Token authentication not set from extensions\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 242,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2414,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void validClientFirstMessage() throws SaslException {\n  String nonce=formatter.secureRandomString();\n  ClientFirstMessage m=new ClientFirstMessage(\"someuser\",nonce,Collections.emptyMap());\n  checkClientFirstMessage(m,\"someuser\",nonce,\"\");\n  String str=String.format(\"n,,n=testuser,r=%s\",nonce);\n  m=createScramMessage(ClientFirstMessage.class,str);\n  checkClientFirstMessage(m,\"testuser\",nonce,\"\");\n  m=new ClientFirstMessage(m.toBytes());\n  checkClientFirstMessage(m,\"testuser\",nonce,\"\");\n  str=String.format(\"n,,n=test=2Cuser,r=%s\",nonce);\n  m=createScramMessage(ClientFirstMessage.class,str);\n  checkClientFirstMessage(m,\"test=2Cuser\",nonce,\"\");\n  assertEquals(\"test,user\",ScramFormatter.username(m.saslName()));\n  str=String.format(\"n,,n=test=3Duser,r=%s\",nonce);\n  m=createScramMessage(ClientFirstMessage.class,str);\n  checkClientFirstMessage(m,\"test=3Duser\",nonce,\"\");\n  assertEquals(\"test=user\",ScramFormatter.username(m.saslName()));\n  str=String.format(\"n,a=testauthzid,n=testuser,r=%s\",nonce);\n  checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"testauthzid\");\n  for (  String reserved : VALID_RESERVED) {\n    str=String.format(\"n,,%s,n=testuser,r=%s\",reserved,nonce);\n    checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"\");\n  }\n  for (  String extension : VALID_EXTENSIONS) {\n    str=String.format(\"n,,n=testuser,r=%s,%s\",nonce,extension);\n    checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"\");\n  }\n  str=String.format(\"n,,n=testuser,r=%s,%s\",nonce,\"tokenauth=true\");\n  m=createScramMessage(ClientFirstMessage.class,str);\n  assertTrue(m.extensions().tokenAuthenticated(),\"Token authentication not set from extensions\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 250,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 82,
        "startColumnNumber" : 8,
        "endLineNumber" : 82,
        "endColumnNumber" : 58
      },
      "nodeContext" : "checkClientFirstMessage(m,\"testuser\",nonce,\"\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 87,
      "startColumnNumber" : 57,
      "endLineNumber" : 87,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 60
      },
      "nodeContext" : "checkClientFirstMessage(m,\"test=2Cuser\",nonce,\"\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 61
      },
      "nodeContext" : "checkClientFirstMessage(m,\"test=2Cuser\",nonce,\"\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2345,
        "startLineNumber" : 72,
        "startColumnNumber" : 63,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String nonce=formatter.secureRandomString();\n  ClientFirstMessage m=new ClientFirstMessage(\"someuser\",nonce,Collections.emptyMap());\n  checkClientFirstMessage(m,\"someuser\",nonce,\"\");\n  String str=String.format(\"n,,n=testuser,r=%s\",nonce);\n  m=createScramMessage(ClientFirstMessage.class,str);\n  checkClientFirstMessage(m,\"testuser\",nonce,\"\");\n  m=new ClientFirstMessage(m.toBytes());\n  checkClientFirstMessage(m,\"testuser\",nonce,\"\");\n  str=String.format(\"n,,n=test=2Cuser,r=%s\",nonce);\n  m=createScramMessage(ClientFirstMessage.class,str);\n  checkClientFirstMessage(m,\"test=2Cuser\",nonce,\"\");\n  assertEquals(\"test,user\",ScramFormatter.username(m.saslName()));\n  str=String.format(\"n,,n=test=3Duser,r=%s\",nonce);\n  m=createScramMessage(ClientFirstMessage.class,str);\n  checkClientFirstMessage(m,\"test=3Duser\",nonce,\"\");\n  assertEquals(\"test=user\",ScramFormatter.username(m.saslName()));\n  str=String.format(\"n,a=testauthzid,n=testuser,r=%s\",nonce);\n  checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"testauthzid\");\n  for (  String reserved : VALID_RESERVED) {\n    str=String.format(\"n,,%s,n=testuser,r=%s\",reserved,nonce);\n    checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"\");\n  }\n  for (  String extension : VALID_EXTENSIONS) {\n    str=String.format(\"n,,n=testuser,r=%s,%s\",nonce,extension);\n    checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"\");\n  }\n  str=String.format(\"n,,n=testuser,r=%s,%s\",nonce,\"tokenauth=true\");\n  m=createScramMessage(ClientFirstMessage.class,str);\n  assertTrue(m.extensions().tokenAuthenticated(),\"Token authentication not set from extensions\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 242,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2414,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void validClientFirstMessage() throws SaslException {\n  String nonce=formatter.secureRandomString();\n  ClientFirstMessage m=new ClientFirstMessage(\"someuser\",nonce,Collections.emptyMap());\n  checkClientFirstMessage(m,\"someuser\",nonce,\"\");\n  String str=String.format(\"n,,n=testuser,r=%s\",nonce);\n  m=createScramMessage(ClientFirstMessage.class,str);\n  checkClientFirstMessage(m,\"testuser\",nonce,\"\");\n  m=new ClientFirstMessage(m.toBytes());\n  checkClientFirstMessage(m,\"testuser\",nonce,\"\");\n  str=String.format(\"n,,n=test=2Cuser,r=%s\",nonce);\n  m=createScramMessage(ClientFirstMessage.class,str);\n  checkClientFirstMessage(m,\"test=2Cuser\",nonce,\"\");\n  assertEquals(\"test,user\",ScramFormatter.username(m.saslName()));\n  str=String.format(\"n,,n=test=3Duser,r=%s\",nonce);\n  m=createScramMessage(ClientFirstMessage.class,str);\n  checkClientFirstMessage(m,\"test=3Duser\",nonce,\"\");\n  assertEquals(\"test=user\",ScramFormatter.username(m.saslName()));\n  str=String.format(\"n,a=testauthzid,n=testuser,r=%s\",nonce);\n  checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"testauthzid\");\n  for (  String reserved : VALID_RESERVED) {\n    str=String.format(\"n,,%s,n=testuser,r=%s\",reserved,nonce);\n    checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"\");\n  }\n  for (  String extension : VALID_EXTENSIONS) {\n    str=String.format(\"n,,n=testuser,r=%s,%s\",nonce,extension);\n    checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"\");\n  }\n  str=String.format(\"n,,n=testuser,r=%s,%s\",nonce,\"tokenauth=true\");\n  m=createScramMessage(ClientFirstMessage.class,str);\n  assertTrue(m.extensions().tokenAuthenticated(),\"Token authentication not set from extensions\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 250,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 87,
        "startColumnNumber" : 8,
        "endLineNumber" : 87,
        "endColumnNumber" : 61
      },
      "nodeContext" : "checkClientFirstMessage(m,\"test=2Cuser\",nonce,\"\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 93,
      "startColumnNumber" : 57,
      "endLineNumber" : 93,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 60
      },
      "nodeContext" : "checkClientFirstMessage(m,\"test=3Duser\",nonce,\"\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 61
      },
      "nodeContext" : "checkClientFirstMessage(m,\"test=3Duser\",nonce,\"\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2345,
        "startLineNumber" : 72,
        "startColumnNumber" : 63,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String nonce=formatter.secureRandomString();\n  ClientFirstMessage m=new ClientFirstMessage(\"someuser\",nonce,Collections.emptyMap());\n  checkClientFirstMessage(m,\"someuser\",nonce,\"\");\n  String str=String.format(\"n,,n=testuser,r=%s\",nonce);\n  m=createScramMessage(ClientFirstMessage.class,str);\n  checkClientFirstMessage(m,\"testuser\",nonce,\"\");\n  m=new ClientFirstMessage(m.toBytes());\n  checkClientFirstMessage(m,\"testuser\",nonce,\"\");\n  str=String.format(\"n,,n=test=2Cuser,r=%s\",nonce);\n  m=createScramMessage(ClientFirstMessage.class,str);\n  checkClientFirstMessage(m,\"test=2Cuser\",nonce,\"\");\n  assertEquals(\"test,user\",ScramFormatter.username(m.saslName()));\n  str=String.format(\"n,,n=test=3Duser,r=%s\",nonce);\n  m=createScramMessage(ClientFirstMessage.class,str);\n  checkClientFirstMessage(m,\"test=3Duser\",nonce,\"\");\n  assertEquals(\"test=user\",ScramFormatter.username(m.saslName()));\n  str=String.format(\"n,a=testauthzid,n=testuser,r=%s\",nonce);\n  checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"testauthzid\");\n  for (  String reserved : VALID_RESERVED) {\n    str=String.format(\"n,,%s,n=testuser,r=%s\",reserved,nonce);\n    checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"\");\n  }\n  for (  String extension : VALID_EXTENSIONS) {\n    str=String.format(\"n,,n=testuser,r=%s,%s\",nonce,extension);\n    checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"\");\n  }\n  str=String.format(\"n,,n=testuser,r=%s,%s\",nonce,\"tokenauth=true\");\n  m=createScramMessage(ClientFirstMessage.class,str);\n  assertTrue(m.extensions().tokenAuthenticated(),\"Token authentication not set from extensions\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 242,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2414,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void validClientFirstMessage() throws SaslException {\n  String nonce=formatter.secureRandomString();\n  ClientFirstMessage m=new ClientFirstMessage(\"someuser\",nonce,Collections.emptyMap());\n  checkClientFirstMessage(m,\"someuser\",nonce,\"\");\n  String str=String.format(\"n,,n=testuser,r=%s\",nonce);\n  m=createScramMessage(ClientFirstMessage.class,str);\n  checkClientFirstMessage(m,\"testuser\",nonce,\"\");\n  m=new ClientFirstMessage(m.toBytes());\n  checkClientFirstMessage(m,\"testuser\",nonce,\"\");\n  str=String.format(\"n,,n=test=2Cuser,r=%s\",nonce);\n  m=createScramMessage(ClientFirstMessage.class,str);\n  checkClientFirstMessage(m,\"test=2Cuser\",nonce,\"\");\n  assertEquals(\"test,user\",ScramFormatter.username(m.saslName()));\n  str=String.format(\"n,,n=test=3Duser,r=%s\",nonce);\n  m=createScramMessage(ClientFirstMessage.class,str);\n  checkClientFirstMessage(m,\"test=3Duser\",nonce,\"\");\n  assertEquals(\"test=user\",ScramFormatter.username(m.saslName()));\n  str=String.format(\"n,a=testauthzid,n=testuser,r=%s\",nonce);\n  checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"testauthzid\");\n  for (  String reserved : VALID_RESERVED) {\n    str=String.format(\"n,,%s,n=testuser,r=%s\",reserved,nonce);\n    checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"\");\n  }\n  for (  String extension : VALID_EXTENSIONS) {\n    str=String.format(\"n,,n=testuser,r=%s,%s\",nonce,extension);\n    checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"\");\n  }\n  str=String.format(\"n,,n=testuser,r=%s,%s\",nonce,\"tokenauth=true\");\n  m=createScramMessage(ClientFirstMessage.class,str);\n  assertTrue(m.extensions().tokenAuthenticated(),\"Token authentication not set from extensions\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 250,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 93,
        "startColumnNumber" : 8,
        "endLineNumber" : 93,
        "endColumnNumber" : 61
      },
      "nodeContext" : "checkClientFirstMessage(m,\"test=3Duser\",nonce,\"\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 103,
      "startColumnNumber" : 106,
      "endLineNumber" : 103,
      "endColumnNumber" : 108
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 103,
        "startColumnNumber" : 12,
        "endLineNumber" : 103,
        "endColumnNumber" : 109
      },
      "nodeContext" : "checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 103,
        "startColumnNumber" : 12,
        "endLineNumber" : 103,
        "endColumnNumber" : 110
      },
      "nodeContext" : "checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 197,
        "startLineNumber" : 101,
        "startColumnNumber" : 47,
        "endLineNumber" : 104,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  str=String.format(\"n,,%s,n=testuser,r=%s\",reserved,nonce);\n  checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 236,
        "startLineNumber" : 101,
        "startColumnNumber" : 8,
        "endLineNumber" : 104,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (String reserved : VALID_RESERVED) {\n  str=String.format(\"n,,%s,n=testuser,r=%s\",reserved,nonce);\n  checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"\");\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 28,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2345,
        "startLineNumber" : 72,
        "startColumnNumber" : 63,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String nonce=formatter.secureRandomString();\n  ClientFirstMessage m=new ClientFirstMessage(\"someuser\",nonce,Collections.emptyMap());\n  checkClientFirstMessage(m,\"someuser\",nonce,\"\");\n  String str=String.format(\"n,,n=testuser,r=%s\",nonce);\n  m=createScramMessage(ClientFirstMessage.class,str);\n  checkClientFirstMessage(m,\"testuser\",nonce,\"\");\n  m=new ClientFirstMessage(m.toBytes());\n  checkClientFirstMessage(m,\"testuser\",nonce,\"\");\n  str=String.format(\"n,,n=test=2Cuser,r=%s\",nonce);\n  m=createScramMessage(ClientFirstMessage.class,str);\n  checkClientFirstMessage(m,\"test=2Cuser\",nonce,\"\");\n  assertEquals(\"test,user\",ScramFormatter.username(m.saslName()));\n  str=String.format(\"n,,n=test=3Duser,r=%s\",nonce);\n  m=createScramMessage(ClientFirstMessage.class,str);\n  checkClientFirstMessage(m,\"test=3Duser\",nonce,\"\");\n  assertEquals(\"test=user\",ScramFormatter.username(m.saslName()));\n  str=String.format(\"n,a=testauthzid,n=testuser,r=%s\",nonce);\n  checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"testauthzid\");\n  for (  String reserved : VALID_RESERVED) {\n    str=String.format(\"n,,%s,n=testuser,r=%s\",reserved,nonce);\n    checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"\");\n  }\n  for (  String extension : VALID_EXTENSIONS) {\n    str=String.format(\"n,,n=testuser,r=%s,%s\",nonce,extension);\n    checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"\");\n  }\n  str=String.format(\"n,,n=testuser,r=%s,%s\",nonce,\"tokenauth=true\");\n  m=createScramMessage(ClientFirstMessage.class,str);\n  assertTrue(m.extensions().tokenAuthenticated(),\"Token authentication not set from extensions\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 242,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2414,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void validClientFirstMessage() throws SaslException {\n  String nonce=formatter.secureRandomString();\n  ClientFirstMessage m=new ClientFirstMessage(\"someuser\",nonce,Collections.emptyMap());\n  checkClientFirstMessage(m,\"someuser\",nonce,\"\");\n  String str=String.format(\"n,,n=testuser,r=%s\",nonce);\n  m=createScramMessage(ClientFirstMessage.class,str);\n  checkClientFirstMessage(m,\"testuser\",nonce,\"\");\n  m=new ClientFirstMessage(m.toBytes());\n  checkClientFirstMessage(m,\"testuser\",nonce,\"\");\n  str=String.format(\"n,,n=test=2Cuser,r=%s\",nonce);\n  m=createScramMessage(ClientFirstMessage.class,str);\n  checkClientFirstMessage(m,\"test=2Cuser\",nonce,\"\");\n  assertEquals(\"test,user\",ScramFormatter.username(m.saslName()));\n  str=String.format(\"n,,n=test=3Duser,r=%s\",nonce);\n  m=createScramMessage(ClientFirstMessage.class,str);\n  checkClientFirstMessage(m,\"test=3Duser\",nonce,\"\");\n  assertEquals(\"test=user\",ScramFormatter.username(m.saslName()));\n  str=String.format(\"n,a=testauthzid,n=testuser,r=%s\",nonce);\n  checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"testauthzid\");\n  for (  String reserved : VALID_RESERVED) {\n    str=String.format(\"n,,%s,n=testuser,r=%s\",reserved,nonce);\n    checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"\");\n  }\n  for (  String extension : VALID_EXTENSIONS) {\n    str=String.format(\"n,,n=testuser,r=%s,%s\",nonce,extension);\n    checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"\");\n  }\n  str=String.format(\"n,,n=testuser,r=%s,%s\",nonce,\"tokenauth=true\");\n  m=createScramMessage(ClientFirstMessage.class,str);\n  assertTrue(m.extensions().tokenAuthenticated(),\"Token authentication not set from extensions\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 250,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 103,
        "startColumnNumber" : 12,
        "endLineNumber" : 103,
        "endColumnNumber" : 110
      },
      "nodeContext" : "checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  }, {
    "nodeContext" : "\"\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 2,
      "startLineNumber" : 109,
      "startColumnNumber" : 106,
      "endLineNumber" : 109,
      "endColumnNumber" : 108
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 97,
        "startLineNumber" : 109,
        "startColumnNumber" : 12,
        "endLineNumber" : 109,
        "endColumnNumber" : 109
      },
      "nodeContext" : "checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 109,
        "startColumnNumber" : 12,
        "endLineNumber" : 109,
        "endColumnNumber" : 110
      },
      "nodeContext" : "checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 198,
        "startLineNumber" : 107,
        "startColumnNumber" : 50,
        "endLineNumber" : 110,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  str=String.format(\"n,,n=testuser,r=%s,%s\",nonce,extension);\n  checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 22,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 240,
        "startLineNumber" : 107,
        "startColumnNumber" : 8,
        "endLineNumber" : 110,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (String extension : VALID_EXTENSIONS) {\n  str=String.format(\"n,,n=testuser,r=%s,%s\",nonce,extension);\n  checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"\");\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 28,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2345,
        "startLineNumber" : 72,
        "startColumnNumber" : 63,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  String nonce=formatter.secureRandomString();\n  ClientFirstMessage m=new ClientFirstMessage(\"someuser\",nonce,Collections.emptyMap());\n  checkClientFirstMessage(m,\"someuser\",nonce,\"\");\n  String str=String.format(\"n,,n=testuser,r=%s\",nonce);\n  m=createScramMessage(ClientFirstMessage.class,str);\n  checkClientFirstMessage(m,\"testuser\",nonce,\"\");\n  m=new ClientFirstMessage(m.toBytes());\n  checkClientFirstMessage(m,\"testuser\",nonce,\"\");\n  str=String.format(\"n,,n=test=2Cuser,r=%s\",nonce);\n  m=createScramMessage(ClientFirstMessage.class,str);\n  checkClientFirstMessage(m,\"test=2Cuser\",nonce,\"\");\n  assertEquals(\"test,user\",ScramFormatter.username(m.saslName()));\n  str=String.format(\"n,,n=test=3Duser,r=%s\",nonce);\n  m=createScramMessage(ClientFirstMessage.class,str);\n  checkClientFirstMessage(m,\"test=3Duser\",nonce,\"\");\n  assertEquals(\"test=user\",ScramFormatter.username(m.saslName()));\n  str=String.format(\"n,a=testauthzid,n=testuser,r=%s\",nonce);\n  checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"testauthzid\");\n  for (  String reserved : VALID_RESERVED) {\n    str=String.format(\"n,,%s,n=testuser,r=%s\",reserved,nonce);\n    checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"\");\n  }\n  for (  String extension : VALID_EXTENSIONS) {\n    str=String.format(\"n,,n=testuser,r=%s,%s\",nonce,extension);\n    checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"\");\n  }\n  str=String.format(\"n,,n=testuser,r=%s,%s\",nonce,\"tokenauth=true\");\n  m=createScramMessage(ClientFirstMessage.class,str);\n  assertTrue(m.extensions().tokenAuthenticated(),\"Token authentication not set from extensions\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 242,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2414,
        "startLineNumber" : 71,
        "startColumnNumber" : 4,
        "endLineNumber" : 116,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void validClientFirstMessage() throws SaslException {\n  String nonce=formatter.secureRandomString();\n  ClientFirstMessage m=new ClientFirstMessage(\"someuser\",nonce,Collections.emptyMap());\n  checkClientFirstMessage(m,\"someuser\",nonce,\"\");\n  String str=String.format(\"n,,n=testuser,r=%s\",nonce);\n  m=createScramMessage(ClientFirstMessage.class,str);\n  checkClientFirstMessage(m,\"testuser\",nonce,\"\");\n  m=new ClientFirstMessage(m.toBytes());\n  checkClientFirstMessage(m,\"testuser\",nonce,\"\");\n  str=String.format(\"n,,n=test=2Cuser,r=%s\",nonce);\n  m=createScramMessage(ClientFirstMessage.class,str);\n  checkClientFirstMessage(m,\"test=2Cuser\",nonce,\"\");\n  assertEquals(\"test,user\",ScramFormatter.username(m.saslName()));\n  str=String.format(\"n,,n=test=3Duser,r=%s\",nonce);\n  m=createScramMessage(ClientFirstMessage.class,str);\n  checkClientFirstMessage(m,\"test=3Duser\",nonce,\"\");\n  assertEquals(\"test=user\",ScramFormatter.username(m.saslName()));\n  str=String.format(\"n,a=testauthzid,n=testuser,r=%s\",nonce);\n  checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"testauthzid\");\n  for (  String reserved : VALID_RESERVED) {\n    str=String.format(\"n,,%s,n=testuser,r=%s\",reserved,nonce);\n    checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"\");\n  }\n  for (  String extension : VALID_EXTENSIONS) {\n    str=String.format(\"n,,n=testuser,r=%s,%s\",nonce,extension);\n    checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"\");\n  }\n  str=String.format(\"n,,n=testuser,r=%s,%s\",nonce,\"tokenauth=true\");\n  m=createScramMessage(ClientFirstMessage.class,str);\n  assertTrue(m.extensions().tokenAuthenticated(),\"Token authentication not set from extensions\");\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 250,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 109,
        "startColumnNumber" : 12,
        "endLineNumber" : 109,
        "endColumnNumber" : 110
      },
      "nodeContext" : "checkClientFirstMessage(createScramMessage(ClientFirstMessage.class,str),\"testuser\",nonce,\"\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 2,
    "startLineNumber" : 75,
    "startColumnNumber" : 54,
    "endLineNumber" : 75,
    "endColumnNumber" : 56
  }, {
    "charLength" : 2,
    "startLineNumber" : 80,
    "startColumnNumber" : 54,
    "endLineNumber" : 80,
    "endColumnNumber" : 56
  }, {
    "charLength" : 2,
    "startLineNumber" : 82,
    "startColumnNumber" : 54,
    "endLineNumber" : 82,
    "endColumnNumber" : 56
  }, {
    "charLength" : 2,
    "startLineNumber" : 87,
    "startColumnNumber" : 57,
    "endLineNumber" : 87,
    "endColumnNumber" : 59
  }, {
    "charLength" : 2,
    "startLineNumber" : 93,
    "startColumnNumber" : 57,
    "endLineNumber" : 93,
    "endColumnNumber" : 59
  }, {
    "charLength" : 2,
    "startLineNumber" : 103,
    "startColumnNumber" : 106,
    "endLineNumber" : 103,
    "endColumnNumber" : 108
  }, {
    "charLength" : 2,
    "startLineNumber" : 109,
    "startColumnNumber" : 106,
    "endLineNumber" : 109,
    "endColumnNumber" : 108
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 5,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 6,
    "layout" : 2
  }, {
    "firstKey" : 5,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 5,
    "secondKey" : 6,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 6,
    "secondKey" : 5,
    "layout" : 4
  } ]
}