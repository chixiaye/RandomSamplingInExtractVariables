{
  "id" : 260,
  "expression" : "!configFile.exists()",
  "projectName" : "jenkinsci@jenkins",
  "commitID" : "c44fa7f4cf769257844d562353a579a198ea517a",
  "filePath" : "/core/src/main/java/jenkins/fingerprints/FileFingerprintStorage.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "!configFile.exists()",
    "nodeType" : "PrefixExpression",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 90,
      "startColumnNumber" : 11,
      "endLineNumber" : 90,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 4,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 92,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!configFile.exists()) {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1771,
        "startLineNumber" : 88,
        "startColumnNumber" : 88,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  XmlFile configFile=getConfigFile(file);\n  if (!configFile.exists()) {\n    return null;\n  }\n  try {\n    Object loaded=configFile.read();\n    if (!(loaded instanceof Fingerprint)) {\n      throw new IOException(\"Unexpected Fingerprint type. Expected \" + Fingerprint.class + \" or subclass but got \"+ (loaded != null ? loaded.getClass() : \"null\"));\n    }\n    Fingerprint f=(Fingerprint)loaded;\n    return f;\n  }\n catch (  IOException e) {\n    if (file.exists() && file.length() == 0) {\n      logger.log(Level.WARNING,\"Size zero fingerprint. Disk corruption? {0}\",configFile);\n      file.delete();\n      return null;\n    }\n    String parseError=messageOfParseException(e);\n    if (parseError != null) {\n      logger.log(Level.WARNING,\"Malformed XML in {0}: {1}\",new Object[]{configFile,parseError});\n      file.delete();\n      return null;\n    }\n    logger.log(Level.WARNING,\"Failed to load \" + configFile,e);\n    throw e;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 145,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1932,
        "startLineNumber" : 85,
        "startColumnNumber" : 4,
        "endLineNumber" : 123,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Load the Fingerprint stored inside the given file.\n */\npublic static @CheckForNull Fingerprint load(@NonNull File file) throws IOException {\n  XmlFile configFile=getConfigFile(file);\n  if (!configFile.exists()) {\n    return null;\n  }\n  try {\n    Object loaded=configFile.read();\n    if (!(loaded instanceof Fingerprint)) {\n      throw new IOException(\"Unexpected Fingerprint type. Expected \" + Fingerprint.class + \" or subclass but got \"+ (loaded != null ? loaded.getClass() : \"null\"));\n    }\n    Fingerprint f=(Fingerprint)loaded;\n    return f;\n  }\n catch (  IOException e) {\n    if (file.exists() && file.length() == 0) {\n      logger.log(Level.WARNING,\"Size zero fingerprint. Disk corruption? {0}\",configFile);\n      file.delete();\n      return null;\n    }\n    String parseError=messageOfParseException(e);\n    if (parseError != null) {\n      logger.log(Level.WARNING,\"Malformed XML in {0}: {1}\",new Object[]{configFile,parseError});\n      file.delete();\n      return null;\n    }\n    logger.log(Level.WARNING,\"Failed to load \" + configFile,e);\n    throw e;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 162,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 63,
        "startLineNumber" : 90,
        "startColumnNumber" : 8,
        "endLineNumber" : 92,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!configFile.exists()) {\n  return null;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 90,
    "startColumnNumber" : 11,
    "endLineNumber" : 90,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ ]
}