{
  "id" : 227,
  "expression" : "\"type chunk, res1\"",
  "projectName" : "skylot@jadx",
  "commitID" : "eb2a1734d3e02c19814f628e10bf80de5fb19772",
  "filePath" : "/jadx-core/src/main/java/jadx/core/xmlgen/ResTableParser.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"type chunk, res1\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 18,
      "startLineNumber" : 193,
      "startColumnNumber" : 19,
      "endLineNumber" : 193,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 193,
        "startColumnNumber" : 2,
        "endLineNumber" : 193,
        "endColumnNumber" : 38
      },
      "nodeContext" : "is.checkInt16(0,\"type chunk, res1\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 193,
        "startColumnNumber" : 2,
        "endLineNumber" : 193,
        "endColumnNumber" : 39
      },
      "nodeContext" : "is.checkInt16(0,\"type chunk, res1\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 779,
        "startLineNumber" : 185,
        "startColumnNumber" : 78,
        "endLineNumber" : 215,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  is.readInt16();\n  is.readInt32();\n  int id=is.readInt8();\n  is.checkInt8(0,\"type chunk, res0\");\n  is.checkInt16(0,\"type chunk, res1\");\n  int entryCount=is.readInt32();\n  long entriesStart=start + is.readInt32();\n  EntryConfig config=parseConfig();\n  if (config.isInvalid) {\n    String typeName=pkg.getTypeStrings()[id - 1];\n    LOG.warn(\"Invalid config flags detected: \" + typeName + config.getQualifiers());\n  }\n  int[] entryIndexes=new int[entryCount];\n  for (int i=0; i < entryCount; i++) {\n    entryIndexes[i]=is.readInt32();\n  }\n  is.checkPos(entriesStart,\"Expected entry start\");\n  for (int i=0; i < entryCount; i++) {\n    if (entryIndexes[i] != NO_ENTRY) {\n      parseEntry(pkg,id,i,config);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 141,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 856,
        "startLineNumber" : 185,
        "startColumnNumber" : 1,
        "endLineNumber" : 215,
        "endColumnNumber" : 2
      },
      "nodeContext" : "private void parseTypeChunk(long start,PackageChunk pkg) throws IOException {\n  is.readInt16();\n  is.readInt32();\n  int id=is.readInt8();\n  is.checkInt8(0,\"type chunk, res0\");\n  is.checkInt16(0,\"type chunk, res1\");\n  int entryCount=is.readInt32();\n  long entriesStart=start + is.readInt32();\n  EntryConfig config=parseConfig();\n  if (config.isInvalid) {\n    String typeName=pkg.getTypeStrings()[id - 1];\n    LOG.warn(\"Invalid config flags detected: \" + typeName + config.getQualifiers());\n  }\n  int[] entryIndexes=new int[entryCount];\n  for (int i=0; i < entryCount; i++) {\n    entryIndexes[i]=is.readInt32();\n  }\n  is.checkPos(entriesStart,\"Expected entry start\");\n  for (int i=0; i < entryCount; i++) {\n    if (entryIndexes[i] != NO_ENTRY) {\n      parseEntry(pkg,id,i,config);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 154,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 193,
        "startColumnNumber" : 2,
        "endLineNumber" : 193,
        "endColumnNumber" : 39
      },
      "nodeContext" : "is.checkInt16(0,\"type chunk, res1\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 18,
    "startLineNumber" : 193,
    "startColumnNumber" : 19,
    "endLineNumber" : 193,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ ]
}