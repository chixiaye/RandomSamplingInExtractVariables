{
  "id" : 76,
  "expression" : "patterns",
  "projectName" : "redisson@redisson",
  "commitID" : "62b5e68c05b7475e1e0f98b4161aacb35d376b97",
  "filePath" : "/redisson-spring-data/redisson-spring-data-22/src/main/java/org/redisson/spring/data/connection/RedissonSubscription.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "patterns",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 91,
      "startColumnNumber" : 30,
      "endLineNumber" : 91,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 206,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (byte[] channel : patterns) {\n  RFuture<PubSubConnectionEntry> f=subscribeService.psubscribe(new ChannelName(channel),ByteArrayCodec.INSTANCE,listener2);\n  list.add(f);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 32,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 833,
        "startLineNumber" : 81,
        "startColumnNumber" : 52,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  RedisPubSubListener<?> listener2=new BaseRedisPubSubListener(){\n    @Override public void onPatternMessage(    CharSequence pattern,    CharSequence channel,    Object message){\n      DefaultMessage msg=new DefaultMessage(((ChannelName)channel).getName(),(byte[])message);\n      getListener().onMessage(msg,((ChannelName)pattern).getName());\n    }\n  }\n;\n  List<RFuture<?>> list=new ArrayList<RFuture<?>>();\n  for (  byte[] channel : patterns) {\n    RFuture<PubSubConnectionEntry> f=subscribeService.psubscribe(new ChannelName(channel),ByteArrayCodec.INSTANCE,listener2);\n    list.add(f);\n  }\n  for (  RFuture<?> future : list) {\n    connectionManager.getCommandExecutor().syncSubscription(future);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 130,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 895,
        "startLineNumber" : 80,
        "startColumnNumber" : 4,
        "endLineNumber" : 98,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override protected void doPsubscribe(byte[]... patterns){\n  RedisPubSubListener<?> listener2=new BaseRedisPubSubListener(){\n    @Override public void onPatternMessage(    CharSequence pattern,    CharSequence channel,    Object message){\n      DefaultMessage msg=new DefaultMessage(((ChannelName)channel).getName(),(byte[])message);\n      getListener().onMessage(msg,((ChannelName)pattern).getName());\n    }\n  }\n;\n  List<RFuture<?>> list=new ArrayList<RFuture<?>>();\n  for (  byte[] channel : patterns) {\n    RFuture<PubSubConnectionEntry> f=subscribeService.psubscribe(new ChannelName(channel),ByteArrayCodec.INSTANCE,listener2);\n    list.add(f);\n  }\n  for (  RFuture<?> future : list) {\n    connectionManager.getCommandExecutor().syncSubscription(future);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 141,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 206,
        "startLineNumber" : 91,
        "startColumnNumber" : 8,
        "endLineNumber" : 94,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (byte[] channel : patterns) {\n  RFuture<PubSubConnectionEntry> f=subscribeService.psubscribe(new ChannelName(channel),ByteArrayCodec.INSTANCE,listener2);\n  list.add(f);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 32,
      "astHeight" : 8
    },
    "tokenLength" : 1,
    "type" : "byte[][]"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 91,
    "startColumnNumber" : 30,
    "endLineNumber" : 91,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ ]
}