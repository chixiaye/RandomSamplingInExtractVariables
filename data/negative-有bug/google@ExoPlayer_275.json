{
  "id" : 275,
  "expression" : "TEST_FORMATS[s].bitrate * dataSet.getChunkDuration(i) / (8 * C.MICROS_PER_SECOND)",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/testutils/src/test/java/com/google/android/exoplayer2/testutil/FakeAdaptiveDataSetTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "TEST_FORMATS[s].bitrate * dataSet.getChunkDuration(i) / (8 * C.MICROS_PER_SECOND)",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 81,
      "startLineNumber" : 116,
      "startColumnNumber" : 12,
      "endLineNumber" : 116,
      "endColumnNumber" : 93
    },
    "astNodeNumber" : 17,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 115,
        "startColumnNumber" : 13,
        "endLineNumber" : 116,
        "endColumnNumber" : 93
      },
      "nodeContext" : "expectedLength=TEST_FORMATS[s].bitrate * dataSet.getChunkDuration(i) / (8 * C.MICROS_PER_SECOND)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 116,
        "startLineNumber" : 115,
        "startColumnNumber" : 8,
        "endLineNumber" : 116,
        "endColumnNumber" : 94
      },
      "nodeContext" : "long expectedLength=TEST_FORMATS[s].bitrate * dataSet.getChunkDuration(i) / (8 * C.MICROS_PER_SECOND);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 21,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 214,
        "startLineNumber" : 114,
        "startColumnNumber" : 58,
        "endLineNumber" : 118,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  long expectedLength=TEST_FORMATS[s].bitrate * dataSet.getChunkDuration(i) / (8 * C.MICROS_PER_SECOND);\n  assertThat(data.getSegments().get(i).length).isEqualTo(expectedLength);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 36,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 266,
        "startLineNumber" : 114,
        "startColumnNumber" : 6,
        "endLineNumber" : 118,
        "endColumnNumber" : 7
      },
      "nodeContext" : "for (int i=0; i < data.getSegments().size(); i++) {\n  long expectedLength=TEST_FORMATS[s].bitrate * dataSet.getChunkDuration(i) / (8 * C.MICROS_PER_SECOND);\n  assertThat(data.getSegments().get(i).length).isEqualTo(expectedLength);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 51,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 418,
        "startLineNumber" : 111,
        "startColumnNumber" : 50,
        "endLineNumber" : 119,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  FakeData data=dataSet.getData(dataSet.getUri(s));\n  assertThat(data.getSegments().size()).isEqualTo(dataSet.getChunkCount());\n  for (int i=0; i < data.getSegments().size(); i++) {\n    long expectedLength=TEST_FORMATS[s].bitrate * dataSet.getChunkDuration(i) / (8 * C.MICROS_PER_SECOND);\n    assertThat(data.getSegments().get(i).length).isEqualTo(expectedLength);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 77,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 464,
        "startLineNumber" : 111,
        "startColumnNumber" : 4,
        "endLineNumber" : 119,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int s=0; s < TEST_FORMATS.length; s++) {\n  FakeData data=dataSet.getData(dataSet.getUri(s));\n  assertThat(data.getSegments().size()).isEqualTo(dataSet.getChunkCount());\n  for (int i=0; i < data.getSegments().size(); i++) {\n    long expectedLength=TEST_FORMATS[s].bitrate * dataSet.getChunkDuration(i) / (8 * C.MICROS_PER_SECOND);\n    assertThat(data.getSegments().get(i).length).isEqualTo(expectedLength);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 90,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 608,
        "startLineNumber" : 107,
        "startColumnNumber" : 80,
        "endLineNumber" : 120,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  for (int i=0; i < dataSet.getChunkCount(); i++) {\n    assertThat(dataSet.getStartTime(i)).isEqualTo(chunkDuration * i);\n  }\n  for (int s=0; s < TEST_FORMATS.length; s++) {\n    FakeData data=dataSet.getData(dataSet.getUri(s));\n    assertThat(data.getSegments().size()).isEqualTo(dataSet.getChunkCount());\n    for (int i=0; i < data.getSegments().size(); i++) {\n      long expectedLength=TEST_FORMATS[s].bitrate * dataSet.getChunkDuration(i) / (8 * C.MICROS_PER_SECOND);\n      assertThat(data.getSegments().get(i).length).isEqualTo(expectedLength);\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 117,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 686,
        "startLineNumber" : 107,
        "startColumnNumber" : 2,
        "endLineNumber" : 120,
        "endColumnNumber" : 3
      },
      "nodeContext" : "private void assertChunkData(FakeAdaptiveDataSet dataSet,long chunkDuration){\n  for (int i=0; i < dataSet.getChunkCount(); i++) {\n    assertThat(dataSet.getStartTime(i)).isEqualTo(chunkDuration * i);\n  }\n  for (int s=0; s < TEST_FORMATS.length; s++) {\n    FakeData data=dataSet.getData(dataSet.getUri(s));\n    assertThat(data.getSegments().size()).isEqualTo(dataSet.getChunkCount());\n    for (int i=0; i < data.getSegments().size(); i++) {\n      long expectedLength=TEST_FORMATS[s].bitrate * dataSet.getChunkDuration(i) / (8 * C.MICROS_PER_SECOND);\n      assertThat(data.getSegments().get(i).length).isEqualTo(expectedLength);\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 128,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 115,
        "startColumnNumber" : 13,
        "endLineNumber" : 116,
        "endColumnNumber" : 93
      },
      "nodeContext" : "expectedLength=TEST_FORMATS[s].bitrate * dataSet.getChunkDuration(i) / (8 * C.MICROS_PER_SECOND)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 19,
      "astHeight" : 6
    },
    "tokenLength" : 15,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 81,
    "startLineNumber" : 116,
    "startColumnNumber" : 12,
    "endLineNumber" : 116,
    "endColumnNumber" : 93
  } ],
  "layoutRelationDataList" : [ ]
}