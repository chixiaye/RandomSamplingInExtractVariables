{
  "id" : 435,
  "expression" : "newStartedThread(c1)",
  "projectName" : "google@guava",
  "commitID" : "68500b2c09fa6985eab2e41577e2992685b57f2b",
  "filePath" : "/android/guava-tests/test/com/google/common/util/concurrent/AtomicDoubleArrayTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "newStartedThread(c1)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 305,
      "startColumnNumber" : 16,
      "endLineNumber" : 305,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 25,
        "startLineNumber" : 305,
        "startColumnNumber" : 11,
        "endLineNumber" : 305,
        "endColumnNumber" : 36
      },
      "nodeContext" : "t1=newStartedThread(c1)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 305,
        "startColumnNumber" : 4,
        "endLineNumber" : 305,
        "endColumnNumber" : 37
      },
      "nodeContext" : "Thread t1=newStartedThread(c1);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 414,
        "startLineNumber" : 298,
        "startColumnNumber" : 74,
        "endLineNumber" : 310,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final AtomicDoubleArray aa=new AtomicDoubleArray(SIZE);\n  for (int i=0; i < SIZE; i++) {\n    aa.set(i,(double)COUNTDOWN);\n  }\n  Counter c1=new Counter(aa);\n  Counter c2=new Counter(aa);\n  Thread t1=newStartedThread(c1);\n  Thread t2=newStartedThread(c2);\n  awaitTermination(t1);\n  awaitTermination(t2);\n  assertEquals(SIZE * COUNTDOWN,c1.counts + c2.counts);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 86,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 619,
        "startLineNumber" : 293,
        "startColumnNumber" : 2,
        "endLineNumber" : 310,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Multiple threads using same array of counters successfully update a number of times equal to total count\n */\npublic void testCountingInMultipleThreads() throws InterruptedException {\n  final AtomicDoubleArray aa=new AtomicDoubleArray(SIZE);\n  for (int i=0; i < SIZE; i++) {\n    aa.set(i,(double)COUNTDOWN);\n  }\n  Counter c1=new Counter(aa);\n  Counter c2=new Counter(aa);\n  Thread t1=newStartedThread(c1);\n  Thread t2=newStartedThread(c2);\n  awaitTermination(t1);\n  awaitTermination(t2);\n  assertEquals(SIZE * COUNTDOWN,c1.counts + c2.counts);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 93,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 33,
        "startLineNumber" : 305,
        "startColumnNumber" : 4,
        "endLineNumber" : 305,
        "endColumnNumber" : 37
      },
      "nodeContext" : "Thread t1=newStartedThread(c1);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.lang.Thread"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 305,
    "startColumnNumber" : 16,
    "endLineNumber" : 305,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ ]
}