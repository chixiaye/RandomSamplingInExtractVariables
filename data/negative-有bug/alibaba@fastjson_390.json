{
  "id" : 390,
  "expression" : "null",
  "projectName" : "alibaba@fastjson",
  "commitID" : "d3797da65a3d9f804c9e275c25395c59e31f097d",
  "filePath" : "/src/main/java/com/alibaba/fastjson/serializer/ClobSerializer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "null",
    "nodeType" : "NullLiteral",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 17,
      "startColumnNumber" : 26,
      "endLineNumber" : 17,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 17,
        "startColumnNumber" : 16,
        "endLineNumber" : 17,
        "endColumnNumber" : 30
      },
      "nodeContext" : "object == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 102,
        "startLineNumber" : 17,
        "startColumnNumber" : 12,
        "endLineNumber" : 20,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (object == null) {\n  serializer.writeNull();\n  return;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 883,
        "startLineNumber" : 16,
        "startColumnNumber" : 12,
        "endLineNumber" : 43,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (object == null) {\n    serializer.writeNull();\n    return;\n  }\n  Clob clob=(Clob)object;\n  Reader reader=clob.getCharacterStream();\n  StringBuilder buf=new StringBuilder();\n  try {\n    char[] chars=new char[2048];\n    for (; ; ) {\n      int len=reader.read(chars,0,chars.length);\n      if (len < 0) {\n        break;\n      }\n      buf.append(chars,0,len);\n    }\n  }\n catch (  Exception ex) {\n    throw new JSONException(\"read string from reader error\",ex);\n  }\n  String text=buf.toString();\n  reader.close();\n  serializer.write(text);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 105,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 982,
        "startLineNumber" : 16,
        "startColumnNumber" : 8,
        "endLineNumber" : 45,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  if (object == null) {\n    serializer.writeNull();\n    return;\n  }\n  Clob clob=(Clob)object;\n  Reader reader=clob.getCharacterStream();\n  StringBuilder buf=new StringBuilder();\n  try {\n    char[] chars=new char[2048];\n    for (; ; ) {\n      int len=reader.read(chars,0,chars.length);\n      if (len < 0) {\n        break;\n      }\n      buf.append(chars,0,len);\n    }\n  }\n catch (  Exception ex) {\n    throw new JSONException(\"read string from reader error\",ex);\n  }\n  String text=buf.toString();\n  reader.close();\n  serializer.write(text);\n}\n catch (SQLException e) {\n  throw new IOException(\"write clob error\",e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 118,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1000,
        "startLineNumber" : 15,
        "startColumnNumber" : 131,
        "endLineNumber" : 46,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try {\n    if (object == null) {\n      serializer.writeNull();\n      return;\n    }\n    Clob clob=(Clob)object;\n    Reader reader=clob.getCharacterStream();\n    StringBuilder buf=new StringBuilder();\n    try {\n      char[] chars=new char[2048];\n      for (; ; ) {\n        int len=reader.read(chars,0,chars.length);\n        if (len < 0) {\n          break;\n        }\n        buf.append(chars,0,len);\n      }\n    }\n catch (    Exception ex) {\n      throw new JSONException(\"read string from reader error\",ex);\n    }\n    String text=buf.toString();\n    reader.close();\n    serializer.write(text);\n  }\n catch (  SQLException e) {\n    throw new IOException(\"write clob error\",e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1127,
        "startLineNumber" : 15,
        "startColumnNumber" : 4,
        "endLineNumber" : 46,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public void write(JSONSerializer serializer,Object object,Object fieldName,Type fieldType,int features) throws IOException {\n  try {\n    if (object == null) {\n      serializer.writeNull();\n      return;\n    }\n    Clob clob=(Clob)object;\n    Reader reader=clob.getCharacterStream();\n    StringBuilder buf=new StringBuilder();\n    try {\n      char[] chars=new char[2048];\n      for (; ; ) {\n        int len=reader.read(chars,0,chars.length);\n        if (len < 0) {\n          break;\n        }\n        buf.append(chars,0,len);\n      }\n    }\n catch (    Exception ex) {\n      throw new JSONException(\"read string from reader error\",ex);\n    }\n    String text=buf.toString();\n    reader.close();\n    serializer.write(text);\n  }\n catch (  SQLException e) {\n    throw new IOException(\"write clob error\",e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 144,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 17,
        "startColumnNumber" : 16,
        "endLineNumber" : 17,
        "endColumnNumber" : 30
      },
      "nodeContext" : "object == null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : "null"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 17,
    "startColumnNumber" : 26,
    "endLineNumber" : 17,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}