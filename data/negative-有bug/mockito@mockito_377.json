{
  "id" : 377,
  "expression" : "MockitoException.class",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockito/internal/progress/TimesTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "MockitoException.class",
    "nodeType" : "TypeLiteral",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 19,
      "startColumnNumber" : 25,
      "endLineNumber" : 19,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 19,
        "startColumnNumber" : 8,
        "endLineNumber" : 19,
        "endColumnNumber" : 48
      },
      "nodeContext" : "exception.expect(MockitoException.class)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 19,
        "startColumnNumber" : 8,
        "endLineNumber" : 19,
        "endColumnNumber" : 49
      },
      "nodeContext" : "exception.expect(MockitoException.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 180,
        "startLineNumber" : 17,
        "startColumnNumber" : 77,
        "endLineNumber" : 23,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  exception.expect(MockitoException.class);\n  exception.expectMessage(\"Negative value is not allowed here\");\n  VerificationModeFactory.times(-50);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 264,
        "startLineNumber" : 16,
        "startColumnNumber" : 4,
        "endLineNumber" : 23,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void shouldNotAllowNegativeNumberOfInvocations() throws Exception {\n  exception.expect(MockitoException.class);\n  exception.expectMessage(\"Negative value is not allowed here\");\n  VerificationModeFactory.times(-50);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 27,
      "astHeight" : 7
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 19,
        "startColumnNumber" : 8,
        "endLineNumber" : 19,
        "endColumnNumber" : 49
      },
      "nodeContext" : "exception.expect(MockitoException.class);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.lang.Class<org.mockito.exceptions.base.MockitoException>"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 19,
    "startColumnNumber" : 25,
    "endLineNumber" : 19,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ ]
}