{
  "id" : 25,
  "expression" : "'/'",
  "projectName" : "pinpoint-apm@pinpoint",
  "commitID" : "cd51da314be7fe261d7dc630dd7c51ce6bb3cc0c",
  "filePath" : "/profiler/src/main/java/com/navercorp/pinpoint/profiler/instrument/ASMClassPool.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "'/'",
    "nodeType" : "CharacterLiteral",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 56,
      "startColumnNumber" : 116,
      "endLineNumber" : 56,
      "endColumnNumber" : 119
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 56,
        "startColumnNumber" : 85,
        "endLineNumber" : 56,
        "endColumnNumber" : 120
      },
      "nodeContext" : "classInternalName.replace('.','/')",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 73,
        "startLineNumber" : 56,
        "startColumnNumber" : 48,
        "endLineNumber" : 56,
        "endColumnNumber" : 121
      },
      "nodeContext" : "ASMClassNodeAdapter.get(classLoader,classInternalName.replace('.','/'))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 56,
        "startColumnNumber" : 36,
        "endLineNumber" : 56,
        "endColumnNumber" : 121
      },
      "nodeContext" : "classNode=ASMClassNodeAdapter.get(classLoader,classInternalName.replace('.','/'))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 56,
        "startColumnNumber" : 16,
        "endLineNumber" : 56,
        "endColumnNumber" : 122
      },
      "nodeContext" : "ASMClassNodeAdapter classNode=ASMClassNodeAdapter.get(classLoader,classInternalName.replace('.','/'));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 338,
        "startLineNumber" : 55,
        "startColumnNumber" : 41,
        "endLineNumber" : 62,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  ASMClassNodeAdapter classNode=ASMClassNodeAdapter.get(classLoader,classInternalName.replace('.','/'));\n  if (classNode == null) {\n    return null;\n  }\n  return new ASMClass(instrumentContext,interceptorRegistryBinder,classLoader,classNode);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 30,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 367,
        "startLineNumber" : 55,
        "startColumnNumber" : 12,
        "endLineNumber" : 62,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (classFileBuffer == null) {\n  ASMClassNodeAdapter classNode=ASMClassNodeAdapter.get(classLoader,classInternalName.replace('.','/'));\n  if (classNode == null) {\n    return null;\n  }\n  return new ASMClass(instrumentContext,interceptorRegistryBinder,classLoader,classNode);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 34,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 710,
        "startLineNumber" : 54,
        "startColumnNumber" : 12,
        "endLineNumber" : 70,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (classFileBuffer == null) {\n    ASMClassNodeAdapter classNode=ASMClassNodeAdapter.get(classLoader,classInternalName.replace('.','/'));\n    if (classNode == null) {\n      return null;\n    }\n    return new ASMClass(instrumentContext,interceptorRegistryBinder,classLoader,classNode);\n  }\n  final ClassReader classReader=new ClassReader(classFileBuffer);\n  final ClassNode classNode=new ClassNode();\n  classReader.accept(classNode,0);\n  return new ASMClass(instrumentContext,interceptorRegistryBinder,classLoader,classNode);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 68,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 800,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  if (classFileBuffer == null) {\n    ASMClassNodeAdapter classNode=ASMClassNodeAdapter.get(classLoader,classInternalName.replace('.','/'));\n    if (classNode == null) {\n      return null;\n    }\n    return new ASMClass(instrumentContext,interceptorRegistryBinder,classLoader,classNode);\n  }\n  final ClassReader classReader=new ClassReader(classFileBuffer);\n  final ClassNode classNode=new ClassNode();\n  classReader.accept(classNode,0);\n  return new ASMClass(instrumentContext,interceptorRegistryBinder,classLoader,classNode);\n}\n catch (Exception e) {\n  throw new NotFoundInstrumentException(e);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 80,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 953,
        "startLineNumber" : 49,
        "startColumnNumber" : 183,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (classInternalName == null) {\n    throw new NullPointerException(\"class internal name must not be null.\");\n  }\n  try {\n    if (classFileBuffer == null) {\n      ASMClassNodeAdapter classNode=ASMClassNodeAdapter.get(classLoader,classInternalName.replace('.','/'));\n      if (classNode == null) {\n        return null;\n      }\n      return new ASMClass(instrumentContext,interceptorRegistryBinder,classLoader,classNode);\n    }\n    final ClassReader classReader=new ClassReader(classFileBuffer);\n    final ClassNode classNode=new ClassNode();\n    classReader.accept(classNode,0);\n    return new ASMClass(instrumentContext,interceptorRegistryBinder,classLoader,classNode);\n  }\n catch (  Exception e) {\n    throw new NotFoundInstrumentException(e);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 91,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1146,
        "startLineNumber" : 48,
        "startColumnNumber" : 4,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public InstrumentClass getClass(InstrumentContext instrumentContext,ClassLoader classLoader,String classInternalName,byte[] classFileBuffer) throws NotFoundInstrumentException {\n  if (classInternalName == null) {\n    throw new NullPointerException(\"class internal name must not be null.\");\n  }\n  try {\n    if (classFileBuffer == null) {\n      ASMClassNodeAdapter classNode=ASMClassNodeAdapter.get(classLoader,classInternalName.replace('.','/'));\n      if (classNode == null) {\n        return null;\n      }\n      return new ASMClass(instrumentContext,interceptorRegistryBinder,classLoader,classNode);\n    }\n    final ClassReader classReader=new ClassReader(classFileBuffer);\n    final ClassNode classNode=new ClassNode();\n    classReader.accept(classNode,0);\n    return new ASMClass(instrumentContext,interceptorRegistryBinder,classLoader,classNode);\n  }\n catch (  Exception e) {\n    throw new NotFoundInstrumentException(e);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 117,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 106,
        "startLineNumber" : 56,
        "startColumnNumber" : 16,
        "endLineNumber" : 56,
        "endColumnNumber" : 122
      },
      "nodeContext" : "ASMClassNodeAdapter classNode=ASMClassNodeAdapter.get(classLoader,classInternalName.replace('.','/'));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "char"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 56,
    "startColumnNumber" : 116,
    "endLineNumber" : 56,
    "endColumnNumber" : 119
  } ],
  "layoutRelationDataList" : [ ]
}