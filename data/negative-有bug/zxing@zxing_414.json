{
  "id" : 414,
  "expression" : "row.getNextUnset(rowOffset)",
  "projectName" : "zxing@zxing",
  "commitID" : "1b0aed9c091717337b865955f58290450a3a9e3a",
  "filePath" : "/core/src/com/google/zxing/oned/UPCEANExtensionSupport.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "row.getNextUnset(rowOffset)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 27,
      "startLineNumber" : 89,
      "startColumnNumber" : 20,
      "endLineNumber" : 89,
      "endColumnNumber" : 47
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 89,
        "endColumnNumber" : 47
      },
      "nodeContext" : "rowOffset=row.getNextUnset(rowOffset)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 89,
        "endColumnNumber" : 48
      },
      "nodeContext" : "rowOffset=row.getNextUnset(rowOffset);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 151,
        "startLineNumber" : 86,
        "startColumnNumber" : 18,
        "endLineNumber" : 90,
        "endColumnNumber" : 7
      },
      "nodeContext" : "{\n  rowOffset=row.getNextSet(rowOffset);\n  rowOffset=row.getNextUnset(rowOffset);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 163,
        "startLineNumber" : 86,
        "startColumnNumber" : 6,
        "endLineNumber" : 90,
        "endColumnNumber" : 7
      },
      "nodeContext" : "if (x != 4) {\n  rowOffset=row.getNextSet(rowOffset);\n  rowOffset=row.getNextUnset(rowOffset);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 19,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 502,
        "startLineNumber" : 77,
        "startColumnNumber" : 51,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int bestMatch=UPCEANReader.decodeDigit(row,counters,rowOffset,UPCEANReader.L_AND_G_PATTERNS);\n  resultString.append((char)('0' + bestMatch % 10));\n  for (  int counter : counters) {\n    rowOffset+=counter;\n  }\n  if (bestMatch >= 10) {\n    lgPatternFound|=1 << (4 - x);\n  }\n  if (x != 4) {\n    rowOffset=row.getNextSet(rowOffset);\n    rowOffset=row.getNextUnset(rowOffset);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 69,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 549,
        "startLineNumber" : 77,
        "startColumnNumber" : 4,
        "endLineNumber" : 91,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int x=0; x < 5 && rowOffset < end; x++) {\n  int bestMatch=UPCEANReader.decodeDigit(row,counters,rowOffset,UPCEANReader.L_AND_G_PATTERNS);\n  resultString.append((char)('0' + bestMatch % 10));\n  for (  int counter : counters) {\n    rowOffset+=counter;\n  }\n  if (bestMatch >= 10) {\n    lgPatternFound|=1 << (4 - x);\n  }\n  if (x != 4) {\n    rowOffset=row.getNextSet(rowOffset);\n    rowOffset=row.getNextUnset(rowOffset);\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 84,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1114,
        "startLineNumber" : 66,
        "startColumnNumber" : 72,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  int[] counters=decodeMiddleCounters;\n  counters[0]=0;\n  counters[1]=0;\n  counters[2]=0;\n  counters[3]=0;\n  int end=row.getSize();\n  int rowOffset=startRange[1];\n  int lgPatternFound=0;\n  for (int x=0; x < 5 && rowOffset < end; x++) {\n    int bestMatch=UPCEANReader.decodeDigit(row,counters,rowOffset,UPCEANReader.L_AND_G_PATTERNS);\n    resultString.append((char)('0' + bestMatch % 10));\n    for (    int counter : counters) {\n      rowOffset+=counter;\n    }\n    if (bestMatch >= 10) {\n      lgPatternFound|=1 << (4 - x);\n    }\n    if (x != 4) {\n      rowOffset=row.getNextSet(rowOffset);\n      rowOffset=row.getNextUnset(rowOffset);\n    }\n  }\n  if (resultString.length() != 5) {\n    throw NotFoundException.getNotFoundInstance();\n  }\n  int checkDigit=determineCheckDigit(lgPatternFound);\n  if (extensionChecksum(resultString.toString()) != checkDigit) {\n    throw NotFoundException.getNotFoundInstance();\n  }\n  return rowOffset;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 168,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1256,
        "startLineNumber" : 64,
        "startColumnNumber" : 2,
        "endLineNumber" : 103,
        "endColumnNumber" : 3
      },
      "nodeContext" : "int decodeMiddle(BitArray row,int[] startRange,StringBuilder resultString) throws NotFoundException {\n  int[] counters=decodeMiddleCounters;\n  counters[0]=0;\n  counters[1]=0;\n  counters[2]=0;\n  counters[3]=0;\n  int end=row.getSize();\n  int rowOffset=startRange[1];\n  int lgPatternFound=0;\n  for (int x=0; x < 5 && rowOffset < end; x++) {\n    int bestMatch=UPCEANReader.decodeDigit(row,counters,rowOffset,UPCEANReader.L_AND_G_PATTERNS);\n    resultString.append((char)('0' + bestMatch % 10));\n    for (    int counter : counters) {\n      rowOffset+=counter;\n    }\n    if (bestMatch >= 10) {\n      lgPatternFound|=1 << (4 - x);\n    }\n    if (x != 4) {\n      rowOffset=row.getNextSet(rowOffset);\n      rowOffset=row.getNextUnset(rowOffset);\n    }\n  }\n  if (resultString.length() != 5) {\n    throw NotFoundException.getNotFoundInstance();\n  }\n  int checkDigit=determineCheckDigit(lgPatternFound);\n  if (extensionChecksum(resultString.toString()) != checkDigit) {\n    throw NotFoundException.getNotFoundInstance();\n  }\n  return rowOffset;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 186,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 89,
        "startColumnNumber" : 8,
        "endLineNumber" : 89,
        "endColumnNumber" : 48
      },
      "nodeContext" : "rowOffset=row.getNextUnset(rowOffset);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 7,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 27,
    "startLineNumber" : 89,
    "startColumnNumber" : 20,
    "endLineNumber" : 89,
    "endColumnNumber" : 47
  } ],
  "layoutRelationDataList" : [ ]
}