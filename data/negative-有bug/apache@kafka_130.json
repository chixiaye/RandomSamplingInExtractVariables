{
  "id" : 130,
  "expression" : "TEST_BYTES_NEGATIVE",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/connect/api/src/test/java/org/apache/kafka/connect/data/DecimalTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "TEST_BYTES_NEGATIVE",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 50,
      "startColumnNumber" : 26,
      "endLineNumber" : 50,
      "endColumnNumber" : 45
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 55
      },
      "nodeContext" : "assertArrayEquals(TEST_BYTES_NEGATIVE,encoded)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 56
      },
      "nodeContext" : "assertArrayEquals(TEST_BYTES_NEGATIVE,encoded);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 303,
        "startLineNumber" : 44,
        "startColumnNumber" : 34,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Schema schema=Decimal.schema(TEST_SCALE);\n  byte[] encoded=Decimal.fromLogical(schema,TEST_DECIMAL);\n  assertArrayEquals(TEST_BYTES,encoded);\n  encoded=Decimal.fromLogical(schema,TEST_DECIMAL_NEGATIVE);\n  assertArrayEquals(TEST_BYTES_NEGATIVE,encoded);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 39,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 343,
        "startLineNumber" : 43,
        "startColumnNumber" : 4,
        "endLineNumber" : 51,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testFromLogical(){\n  Schema schema=Decimal.schema(TEST_SCALE);\n  byte[] encoded=Decimal.fromLogical(schema,TEST_DECIMAL);\n  assertArrayEquals(TEST_BYTES,encoded);\n  encoded=Decimal.fromLogical(schema,TEST_DECIMAL_NEGATIVE);\n  assertArrayEquals(TEST_BYTES_NEGATIVE,encoded);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 45,
      "astHeight" : 6
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 50,
        "startColumnNumber" : 8,
        "endLineNumber" : 50,
        "endColumnNumber" : 56
      },
      "nodeContext" : "assertArrayEquals(TEST_BYTES_NEGATIVE,encoded);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "byte[]"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 50,
    "startColumnNumber" : 26,
    "endLineNumber" : 50,
    "endColumnNumber" : 45
  } ],
  "layoutRelationDataList" : [ ]
}