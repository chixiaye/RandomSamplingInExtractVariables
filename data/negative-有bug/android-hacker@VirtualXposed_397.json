{
  "id" : 397,
  "expression" : "numS",
  "projectName" : "android-hacker@VirtualXposed",
  "commitID" : "8e98dd20e6a751089d4eb2642fa6bf088a3e7a79",
  "filePath" : "/VirtualApp/lib/src/main/java/com/lody/virtual/server/pm/IntentResolver.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "numS",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 4,
      "startLineNumber" : 95,
      "startColumnNumber" : 6,
      "endLineNumber" : 95,
      "endColumnNumber" : 10
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 9,
        "startLineNumber" : 95,
        "startColumnNumber" : 6,
        "endLineNumber" : 95,
        "endColumnNumber" : 15
      },
      "nodeContext" : "numS == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 95,
        "startColumnNumber" : 6,
        "endLineNumber" : 95,
        "endColumnNumber" : 28
      },
      "nodeContext" : "numS == 0 && numT == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 126,
        "startLineNumber" : 95,
        "startColumnNumber" : 2,
        "endLineNumber" : 97,
        "endColumnNumber" : 3
      },
      "nodeContext" : "if (numS == 0 && numT == 0) {\n  register_intent_filter(f,f.filter.actionsIterator(),mActionToFilter,\"      Action: \");\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 435,
        "startLineNumber" : 90,
        "startColumnNumber" : 28,
        "endLineNumber" : 101,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  mFilters.add(f);\n  int numS=register_intent_filter(f,f.filter.schemesIterator(),mSchemeToFilter,\"      Scheme: \");\n  int numT=register_mime_types(f,\"      Type: \");\n  if (numS == 0 && numT == 0) {\n    register_intent_filter(f,f.filter.actionsIterator(),mActionToFilter,\"      Action: \");\n  }\n  if (numT != 0) {\n    register_intent_filter(f,f.filter.actionsIterator(),mTypedActionToFilter,\"      TypedAction: \");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 64,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 462,
        "startLineNumber" : 90,
        "startColumnNumber" : 1,
        "endLineNumber" : 101,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public void addFilter(F f){\n  mFilters.add(f);\n  int numS=register_intent_filter(f,f.filter.schemesIterator(),mSchemeToFilter,\"      Scheme: \");\n  int numT=register_mime_types(f,\"      Type: \");\n  if (numS == 0 && numT == 0) {\n    register_intent_filter(f,f.filter.actionsIterator(),mActionToFilter,\"      Action: \");\n  }\n  if (numT != 0) {\n    register_intent_filter(f,f.filter.actionsIterator(),mTypedActionToFilter,\"      TypedAction: \");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 72,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 95,
        "startColumnNumber" : 6,
        "endLineNumber" : 95,
        "endColumnNumber" : 28
      },
      "nodeContext" : "numS == 0 && numT == 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 4,
    "startLineNumber" : 95,
    "startColumnNumber" : 6,
    "endLineNumber" : 95,
    "endColumnNumber" : 10
  } ],
  "layoutRelationDataList" : [ ]
}