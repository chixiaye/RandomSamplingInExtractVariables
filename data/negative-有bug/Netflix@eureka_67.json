{
  "id" : 67,
  "expression" : "eurekaClient.unregister(clientInfo)",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-integration/src/main/java/com/netflix/eureka2/integration/ReadWriteClusterIntegrationTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "eurekaClient.unregister(clientInfo)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 35,
      "startLineNumber" : 68,
      "startColumnNumber" : 8,
      "endLineNumber" : 68,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 4,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 69,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 77
      },
      "nodeContext" : "eurekaClient.unregister(clientInfo).subscribe(registrationSubscriber)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 78
      },
      "nodeContext" : "eurekaClient.unregister(clientInfo).subscribe(registrationSubscriber);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 968,
        "startLineNumber" : 53,
        "startColumnNumber" : 84,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Iterator<ChangeNotification<InstanceInfo>> notificationIterator=RxBlocking.iteratorFrom(5,TimeUnit.SECONDS,eurekaClient.forInterest(Interests.forApplications(clientInfo.getApp())));\n  TestSubscriber<Void> registrationSubscriber=new TestSubscriber<>();\n  eurekaClient.register(clientInfo).subscribe(registrationSubscriber);\n  registrationSubscriber.awaitTerminalEvent(5,TimeUnit.SECONDS);\n  registrationSubscriber.assertNoErrors();\n  assertThat(notificationIterator.next(),is(addChangeNotificationOf(clientInfo)));\n  eurekaClient.unregister(clientInfo).subscribe(registrationSubscriber);\n  registrationSubscriber.awaitTerminalEvent(5,TimeUnit.SECONDS);\n  registrationSubscriber.assertNoErrors();\n  assertThat(notificationIterator.next(),is(deleteChangeNotificationOf(clientInfo)));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 102,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1075,
        "startLineNumber" : 52,
        "startColumnNumber" : 4,
        "endLineNumber" : 73,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test(timeout=10000) public void testReadServerFetchesDataFromWriteServerRegistry() throws Exception {\n  Iterator<ChangeNotification<InstanceInfo>> notificationIterator=RxBlocking.iteratorFrom(5,TimeUnit.SECONDS,eurekaClient.forInterest(Interests.forApplications(clientInfo.getApp())));\n  TestSubscriber<Void> registrationSubscriber=new TestSubscriber<>();\n  eurekaClient.register(clientInfo).subscribe(registrationSubscriber);\n  registrationSubscriber.awaitTerminalEvent(5,TimeUnit.SECONDS);\n  registrationSubscriber.assertNoErrors();\n  assertThat(notificationIterator.next(),is(addChangeNotificationOf(clientInfo)));\n  eurekaClient.unregister(clientInfo).subscribe(registrationSubscriber);\n  registrationSubscriber.awaitTerminalEvent(5,TimeUnit.SECONDS);\n  registrationSubscriber.assertNoErrors();\n  assertThat(notificationIterator.next(),is(deleteChangeNotificationOf(clientInfo)));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 113,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 70,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 78
      },
      "nodeContext" : "eurekaClient.unregister(clientInfo).subscribe(registrationSubscriber);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 3,
    "type" : "com.netflix.eureka2.client.Observable<java.lang.Void>"
  } ],
  "positionList" : [ {
    "charLength" : 35,
    "startLineNumber" : 68,
    "startColumnNumber" : 8,
    "endLineNumber" : 68,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ ]
}