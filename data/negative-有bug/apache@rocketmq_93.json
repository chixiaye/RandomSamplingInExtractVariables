{
  "id" : 93,
  "expression" : "getBroadCastConsumer(nsAddr,group1,topic,\"*\",new RMQNormalListener(group1 + \"_1\"))",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/test/src/test/java/org/apache/rocketmq/test/client/consumer/broadcast/normal/BroadCastNormalMsgTwoDiffGroupRecvIT.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "getBroadCastConsumer(nsAddr,group1,topic,\"*\",new RMQNormalListener(group1 + \"_1\"))",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 98,
      "startLineNumber" : 59,
      "startColumnNumber" : 41,
      "endLineNumber" : 60,
      "endColumnNumber" : 49
    },
    "astNodeNumber" : 12,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 59,
        "startColumnNumber" : 29,
        "endLineNumber" : 60,
        "endColumnNumber" : 49
      },
      "nodeContext" : "consumer1=getBroadCastConsumer(nsAddr,group1,topic,\"*\",new RMQNormalListener(group1 + \"_1\"))",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 50
      },
      "nodeContext" : "RMQBroadCastConsumer consumer1=getBroadCastConsumer(nsAddr,group1,topic,\"*\",new RMQNormalListener(group1 + \"_1\"));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1165,
        "startLineNumber" : 54,
        "startColumnNumber" : 49,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int msgSize=16;\n  String group1=initConsumerGroup();\n  String group2=initConsumerGroup();\n  RMQBroadCastConsumer consumer1=getBroadCastConsumer(nsAddr,group1,topic,\"*\",new RMQNormalListener(group1 + \"_1\"));\n  RMQBroadCastConsumer consumer2=getBroadCastConsumer(nsAddr,group2,topic,\"*\",new RMQNormalListener(group2 + \"_2\"));\n  TestUtils.waitForSeconds(waitTime);\n  producer.send(msgSize);\n  Assert.assertEquals(\"Not all sent succeeded\",msgSize,producer.getAllUndupMsgBody().size());\n  consumer1.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n  consumer2.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n  assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer1.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody());\n  assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer2.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 133,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1220,
        "startLineNumber" : 53,
        "startColumnNumber" : 4,
        "endLineNumber" : 77,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testStartDiffSameGroupConsumer(){\n  int msgSize=16;\n  String group1=initConsumerGroup();\n  String group2=initConsumerGroup();\n  RMQBroadCastConsumer consumer1=getBroadCastConsumer(nsAddr,group1,topic,\"*\",new RMQNormalListener(group1 + \"_1\"));\n  RMQBroadCastConsumer consumer2=getBroadCastConsumer(nsAddr,group2,topic,\"*\",new RMQNormalListener(group2 + \"_2\"));\n  TestUtils.waitForSeconds(waitTime);\n  producer.send(msgSize);\n  Assert.assertEquals(\"Not all sent succeeded\",msgSize,producer.getAllUndupMsgBody().size());\n  consumer1.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n  consumer2.getListener().waitForMessageConsume(producer.getAllMsgBody(),consumeTime);\n  assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer1.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody());\n  assertThat(VerifyUtils.getFilterdMessage(producer.getAllMsgBody(),consumer2.getListener().getAllMsgBody())).containsExactlyElementsIn(producer.getAllMsgBody());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 139,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 59,
        "startColumnNumber" : 8,
        "endLineNumber" : 60,
        "endColumnNumber" : 50
      },
      "nodeContext" : "RMQBroadCastConsumer consumer1=getBroadCastConsumer(nsAddr,group1,topic,\"*\",new RMQNormalListener(group1 + \"_1\"));\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 17,
      "astHeight" : 6
    },
    "tokenLength" : 9,
    "type" : "org.apache.rocketmq.test.client.rmq.RMQBroadCastConsumer"
  } ],
  "positionList" : [ {
    "charLength" : 98,
    "startLineNumber" : 59,
    "startColumnNumber" : 41,
    "endLineNumber" : 60,
    "endColumnNumber" : 49
  } ],
  "layoutRelationDataList" : [ ]
}