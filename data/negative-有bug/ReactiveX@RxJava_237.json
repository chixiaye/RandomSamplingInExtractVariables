{
  "id" : 237,
  "expression" : "q1.peek()",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/main/java/io/reactivex/internal/operators/observable/ObservableSequenceEqual.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "q1.peek()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 152,
      "startColumnNumber" : 27,
      "endLineNumber" : 152,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 14,
        "startLineNumber" : 152,
        "startColumnNumber" : 22,
        "endLineNumber" : 152,
        "endColumnNumber" : 36
      },
      "nodeContext" : "v1=q1.peek()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 152,
        "startColumnNumber" : 20,
        "endLineNumber" : 152,
        "endColumnNumber" : 37
      },
      "nodeContext" : "T v1=q1.peek();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 2604,
        "startLineNumber" : 122,
        "startColumnNumber" : 25,
        "endLineNumber" : 197,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  if (cancelled) {\n    q1.clear();\n    q2.clear();\n    return;\n  }\n  boolean d1=s1.done;\n  if (d1) {\n    Throwable e=s1.error;\n    if (e != null) {\n      cancel(q1,q2);\n      actual.onError(e);\n      return;\n    }\n  }\n  boolean d2=s2.done;\n  if (d2) {\n    Throwable e=s2.error;\n    if (e != null) {\n      cancel(q1,q2);\n      actual.onError(e);\n      return;\n    }\n  }\n  T v1=q1.peek();\n  boolean e1=v1 == null;\n  T v2=q2.peek();\n  boolean e2=v2 == null;\n  if (d1 && d2 && e1&& e2) {\n    actual.onNext(true);\n    actual.onComplete();\n    return;\n  }\n  if ((d1 && d2) && (e1 != e2)) {\n    cancel(q1,q2);\n    actual.onNext(false);\n    actual.onComplete();\n    return;\n  }\n  if (!e1 && !e2) {\n    q1.poll();\n    q2.poll();\n    boolean c;\n    try {\n      c=comparer.test(v1,v2);\n    }\n catch (    Throwable ex) {\n      cancel(q1,q2);\n      actual.onError(ex);\n      return;\n    }\n    if (!c) {\n      cancel(q1,q2);\n      actual.onNext(false);\n      actual.onComplete();\n      return;\n    }\n  }\n  if (e1 || e2) {\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 225,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2613,
        "startLineNumber" : 122,
        "startColumnNumber" : 16,
        "endLineNumber" : 197,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (; ; ) {\n  if (cancelled) {\n    q1.clear();\n    q2.clear();\n    return;\n  }\n  boolean d1=s1.done;\n  if (d1) {\n    Throwable e=s1.error;\n    if (e != null) {\n      cancel(q1,q2);\n      actual.onError(e);\n      return;\n    }\n  }\n  boolean d2=s2.done;\n  if (d2) {\n    Throwable e=s2.error;\n    if (e != null) {\n      cancel(q1,q2);\n      actual.onError(e);\n      return;\n    }\n  }\n  T v1=q1.peek();\n  boolean e1=v1 == null;\n  T v2=q2.peek();\n  boolean e2=v2 == null;\n  if (d1 && d2 && e1&& e2) {\n    actual.onNext(true);\n    actual.onComplete();\n    return;\n  }\n  if ((d1 && d2) && (e1 != e2)) {\n    cancel(q1,q2);\n    actual.onNext(false);\n    actual.onComplete();\n    return;\n  }\n  if (!e1 && !e2) {\n    q1.poll();\n    q2.poll();\n    boolean c;\n    try {\n      c=comparer.test(v1,v2);\n    }\n catch (    Throwable ex) {\n      cancel(q1,q2);\n      actual.onError(ex);\n      return;\n    }\n    if (!c) {\n      cancel(q1,q2);\n      actual.onNext(false);\n      actual.onComplete();\n      return;\n    }\n  }\n  if (e1 || e2) {\n    break;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 226,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 2812,
        "startLineNumber" : 120,
        "startColumnNumber" : 21,
        "endLineNumber" : 203,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  for (; ; ) {\n    if (cancelled) {\n      q1.clear();\n      q2.clear();\n      return;\n    }\n    boolean d1=s1.done;\n    if (d1) {\n      Throwable e=s1.error;\n      if (e != null) {\n        cancel(q1,q2);\n        actual.onError(e);\n        return;\n      }\n    }\n    boolean d2=s2.done;\n    if (d2) {\n      Throwable e=s2.error;\n      if (e != null) {\n        cancel(q1,q2);\n        actual.onError(e);\n        return;\n      }\n    }\n    T v1=q1.peek();\n    boolean e1=v1 == null;\n    T v2=q2.peek();\n    boolean e2=v2 == null;\n    if (d1 && d2 && e1&& e2) {\n      actual.onNext(true);\n      actual.onComplete();\n      return;\n    }\n    if ((d1 && d2) && (e1 != e2)) {\n      cancel(q1,q2);\n      actual.onNext(false);\n      actual.onComplete();\n      return;\n    }\n    if (!e1 && !e2) {\n      q1.poll();\n      q2.poll();\n      boolean c;\n      try {\n        c=comparer.test(v1,v2);\n      }\n catch (      Throwable ex) {\n        cancel(q1,q2);\n        actual.onError(ex);\n        return;\n      }\n      if (!c) {\n        cancel(q1,q2);\n        actual.onNext(false);\n        actual.onComplete();\n        return;\n      }\n    }\n    if (e1 || e2) {\n      break;\n    }\n  }\n  missed=addAndGet(-missed);\n  if (missed == 0) {\n    break;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 240,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2821,
        "startLineNumber" : 120,
        "startColumnNumber" : 12,
        "endLineNumber" : 203,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (; ; ) {\n  for (; ; ) {\n    if (cancelled) {\n      q1.clear();\n      q2.clear();\n      return;\n    }\n    boolean d1=s1.done;\n    if (d1) {\n      Throwable e=s1.error;\n      if (e != null) {\n        cancel(q1,q2);\n        actual.onError(e);\n        return;\n      }\n    }\n    boolean d2=s2.done;\n    if (d2) {\n      Throwable e=s2.error;\n      if (e != null) {\n        cancel(q1,q2);\n        actual.onError(e);\n        return;\n      }\n    }\n    T v1=q1.peek();\n    boolean e1=v1 == null;\n    T v2=q2.peek();\n    boolean e2=v2 == null;\n    if (d1 && d2 && e1&& e2) {\n      actual.onNext(true);\n      actual.onComplete();\n      return;\n    }\n    if ((d1 && d2) && (e1 != e2)) {\n      cancel(q1,q2);\n      actual.onNext(false);\n      actual.onComplete();\n      return;\n    }\n    if (!e1 && !e2) {\n      q1.poll();\n      q2.poll();\n      boolean c;\n      try {\n        c=comparer.test(v1,v2);\n      }\n catch (      Throwable ex) {\n        cancel(q1,q2);\n        actual.onError(ex);\n        return;\n      }\n      if (!c) {\n        cancel(q1,q2);\n        actual.onNext(false);\n        actual.onComplete();\n        return;\n      }\n    }\n    if (e1 || e2) {\n      break;\n    }\n  }\n  missed=addAndGet(-missed);\n  if (missed == 0) {\n    break;\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 241,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3239,
        "startLineNumber" : 107,
        "startColumnNumber" : 21,
        "endLineNumber" : 204,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (getAndIncrement() != 0) {\n    return;\n  }\n  int missed=1;\n  EqualSubscriber<T>[] as=subscribers;\n  final EqualSubscriber<T> s1=as[0];\n  final Queue<T> q1=s1.queue;\n  final EqualSubscriber<T> s2=as[1];\n  final Queue<T> q2=s2.queue;\n  for (; ; ) {\n    for (; ; ) {\n      if (cancelled) {\n        q1.clear();\n        q2.clear();\n        return;\n      }\n      boolean d1=s1.done;\n      if (d1) {\n        Throwable e=s1.error;\n        if (e != null) {\n          cancel(q1,q2);\n          actual.onError(e);\n          return;\n        }\n      }\n      boolean d2=s2.done;\n      if (d2) {\n        Throwable e=s2.error;\n        if (e != null) {\n          cancel(q1,q2);\n          actual.onError(e);\n          return;\n        }\n      }\n      T v1=q1.peek();\n      boolean e1=v1 == null;\n      T v2=q2.peek();\n      boolean e2=v2 == null;\n      if (d1 && d2 && e1&& e2) {\n        actual.onNext(true);\n        actual.onComplete();\n        return;\n      }\n      if ((d1 && d2) && (e1 != e2)) {\n        cancel(q1,q2);\n        actual.onNext(false);\n        actual.onComplete();\n        return;\n      }\n      if (!e1 && !e2) {\n        q1.poll();\n        q2.poll();\n        boolean c;\n        try {\n          c=comparer.test(v1,v2);\n        }\n catch (        Throwable ex) {\n          cancel(q1,q2);\n          actual.onError(ex);\n          return;\n        }\n        if (!c) {\n          cancel(q1,q2);\n          actual.onNext(false);\n          actual.onComplete();\n          return;\n        }\n      }\n      if (e1 || e2) {\n        break;\n      }\n    }\n    missed=addAndGet(-missed);\n    if (missed == 0) {\n      break;\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 313,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3252,
        "startLineNumber" : 107,
        "startColumnNumber" : 8,
        "endLineNumber" : 204,
        "endColumnNumber" : 9
      },
      "nodeContext" : "void drain(){\n  if (getAndIncrement() != 0) {\n    return;\n  }\n  int missed=1;\n  EqualSubscriber<T>[] as=subscribers;\n  final EqualSubscriber<T> s1=as[0];\n  final Queue<T> q1=s1.queue;\n  final EqualSubscriber<T> s2=as[1];\n  final Queue<T> q2=s2.queue;\n  for (; ; ) {\n    for (; ; ) {\n      if (cancelled) {\n        q1.clear();\n        q2.clear();\n        return;\n      }\n      boolean d1=s1.done;\n      if (d1) {\n        Throwable e=s1.error;\n        if (e != null) {\n          cancel(q1,q2);\n          actual.onError(e);\n          return;\n        }\n      }\n      boolean d2=s2.done;\n      if (d2) {\n        Throwable e=s2.error;\n        if (e != null) {\n          cancel(q1,q2);\n          actual.onError(e);\n          return;\n        }\n      }\n      T v1=q1.peek();\n      boolean e1=v1 == null;\n      T v2=q2.peek();\n      boolean e2=v2 == null;\n      if (d1 && d2 && e1&& e2) {\n        actual.onNext(true);\n        actual.onComplete();\n        return;\n      }\n      if ((d1 && d2) && (e1 != e2)) {\n        cancel(q1,q2);\n        actual.onNext(false);\n        actual.onComplete();\n        return;\n      }\n      if (!e1 && !e2) {\n        q1.poll();\n        q2.poll();\n        boolean c;\n        try {\n          c=comparer.test(v1,v2);\n        }\n catch (        Throwable ex) {\n          cancel(q1,q2);\n          actual.onError(ex);\n          return;\n        }\n        if (!c) {\n          cancel(q1,q2);\n          actual.onNext(false);\n          actual.onComplete();\n          return;\n        }\n      }\n      if (e1 || e2) {\n        break;\n      }\n    }\n    missed=addAndGet(-missed);\n    if (missed == 0) {\n      break;\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 316,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 152,
        "startColumnNumber" : 20,
        "endLineNumber" : 152,
        "endColumnNumber" : 37
      },
      "nodeContext" : "T v1=q1.peek();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "T"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 152,
    "startColumnNumber" : 27,
    "endLineNumber" : 152,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ ]
}