{
  "id" : 372,
  "expression" : "state",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-write-server/src/main/java/com/netflix/eureka2/server/channel/SenderReplicationChannel.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "state",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 46,
      "startColumnNumber" : 12,
      "endLineNumber" : 46,
      "endColumnNumber" : 17
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 23
      },
      "nodeContext" : "state.get()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 39
      },
      "nodeContext" : "state.get() == STATE.Closed",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 107,
        "startLineNumber" : 46,
        "startColumnNumber" : 8,
        "endLineNumber" : 48,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (state.get() == STATE.Closed) {\n  return Observable.error(CHANNEL_CLOSED_EXCEPTION);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1374,
        "startLineNumber" : 45,
        "startColumnNumber" : 81,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (state.get() == STATE.Closed) {\n    return Observable.error(CHANNEL_CLOSED_EXCEPTION);\n  }\n  if (!state.compareAndSet(STATE.Idle,STATE.Handshake)) {\n    return Observable.error(HANDSHAKE_FINISHED_EXCEPTION);\n  }\n  return connect().switchMap(new Func1<MessageConnection,Observable<ReplicationHelloReply>>(){\n    @Override public Observable<ReplicationHelloReply> call(    final MessageConnection connection){\n      return connection.submit(hello).cast(ReplicationHelloReply.class).concatWith(connection.incoming().flatMap(new Func1<Object,Observable<ReplicationHelloReply>>(){\n        @Override public Observable<ReplicationHelloReply> call(        Object o){\n          if (o instanceof ReplicationHelloReply) {\n            return Observable.just((ReplicationHelloReply)o);\n          }\n          return Observable.error(new Exception(\"Unexpected message of type \" + o.getClass() + \" received\"));\n        }\n      }\n));\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 136,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1465,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Observable<ReplicationHelloReply> hello(final ReplicationHello hello){\n  if (state.get() == STATE.Closed) {\n    return Observable.error(CHANNEL_CLOSED_EXCEPTION);\n  }\n  if (!state.compareAndSet(STATE.Idle,STATE.Handshake)) {\n    return Observable.error(HANDSHAKE_FINISHED_EXCEPTION);\n  }\n  return connect().switchMap(new Func1<MessageConnection,Observable<ReplicationHelloReply>>(){\n    @Override public Observable<ReplicationHelloReply> call(    final MessageConnection connection){\n      return connection.submit(hello).cast(ReplicationHelloReply.class).concatWith(connection.incoming().flatMap(new Func1<Object,Observable<ReplicationHelloReply>>(){\n        @Override public Observable<ReplicationHelloReply> call(        Object o){\n          if (o instanceof ReplicationHelloReply) {\n            return Observable.just((ReplicationHelloReply)o);\n          }\n          return Observable.error(new Exception(\"Unexpected message of type \" + o.getClass() + \" received\"));\n        }\n      }\n));\n    }\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 151,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 46,
        "startColumnNumber" : 12,
        "endLineNumber" : 46,
        "endColumnNumber" : 39
      },
      "nodeContext" : "state.get() == STATE.Closed",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 7,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.util.concurrent.atomic.AtomicReference<com.netflix.eureka2.server.channel.SenderReplicationChannel.STATE>"
  }, {
    "nodeContext" : "state",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 49,
      "startColumnNumber" : 13,
      "endLineNumber" : 49,
      "endColumnNumber" : 18
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.PrefixExpression,operand]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 49,
        "startColumnNumber" : 13,
        "endLineNumber" : 49,
        "endColumnNumber" : 61
      },
      "nodeContext" : "state.compareAndSet(STATE.Idle,STATE.Handshake)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 49,
        "endColumnNumber" : 61
      },
      "nodeContext" : "!state.compareAndSet(STATE.Idle,STATE.Handshake)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 133,
        "startLineNumber" : 49,
        "startColumnNumber" : 8,
        "endLineNumber" : 51,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (!state.compareAndSet(STATE.Idle,STATE.Handshake)) {\n  return Observable.error(HANDSHAKE_FINISHED_EXCEPTION);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 17,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1374,
        "startLineNumber" : 45,
        "startColumnNumber" : 81,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (state.get() == STATE.Closed) {\n    return Observable.error(CHANNEL_CLOSED_EXCEPTION);\n  }\n  if (!state.compareAndSet(STATE.Idle,STATE.Handshake)) {\n    return Observable.error(HANDSHAKE_FINISHED_EXCEPTION);\n  }\n  return connect().switchMap(new Func1<MessageConnection,Observable<ReplicationHelloReply>>(){\n    @Override public Observable<ReplicationHelloReply> call(    final MessageConnection connection){\n      return connection.submit(hello).cast(ReplicationHelloReply.class).concatWith(connection.incoming().flatMap(new Func1<Object,Observable<ReplicationHelloReply>>(){\n        @Override public Observable<ReplicationHelloReply> call(        Object o){\n          if (o instanceof ReplicationHelloReply) {\n            return Observable.just((ReplicationHelloReply)o);\n          }\n          return Observable.error(new Exception(\"Unexpected message of type \" + o.getClass() + \" received\"));\n        }\n      }\n));\n    }\n  }\n);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 136,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1465,
        "startLineNumber" : 44,
        "startColumnNumber" : 4,
        "endLineNumber" : 70,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public Observable<ReplicationHelloReply> hello(final ReplicationHello hello){\n  if (state.get() == STATE.Closed) {\n    return Observable.error(CHANNEL_CLOSED_EXCEPTION);\n  }\n  if (!state.compareAndSet(STATE.Idle,STATE.Handshake)) {\n    return Observable.error(HANDSHAKE_FINISHED_EXCEPTION);\n  }\n  return connect().switchMap(new Func1<MessageConnection,Observable<ReplicationHelloReply>>(){\n    @Override public Observable<ReplicationHelloReply> call(    final MessageConnection connection){\n      return connection.submit(hello).cast(ReplicationHelloReply.class).concatWith(connection.incoming().flatMap(new Func1<Object,Observable<ReplicationHelloReply>>(){\n        @Override public Observable<ReplicationHelloReply> call(        Object o){\n          if (o instanceof ReplicationHelloReply) {\n            return Observable.just((ReplicationHelloReply)o);\n          }\n          return Observable.error(new Exception(\"Unexpected message of type \" + o.getClass() + \" received\"));\n        }\n      }\n));\n    }\n  }\n);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 151,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 49,
        "startColumnNumber" : 12,
        "endLineNumber" : 49,
        "endColumnNumber" : 61
      },
      "nodeContext" : "!state.compareAndSet(STATE.Idle,STATE.Handshake)",
      "nodeType" : "PrefixExpression",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.concurrent.atomic.AtomicReference<com.netflix.eureka2.server.channel.SenderReplicationChannel.STATE>"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 46,
    "startColumnNumber" : 12,
    "endLineNumber" : 46,
    "endColumnNumber" : 17
  }, {
    "charLength" : 5,
    "startLineNumber" : 49,
    "startColumnNumber" : 13,
    "endLineNumber" : 49,
    "endColumnNumber" : 18
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 3
  } ]
}