{
  "id" : 49,
  "expression" : "cakeInfo.calculateTotalCalories() > 0",
  "projectName" : "iluwatar@java-design-patterns",
  "commitID" : "428efc7d53449a51d25dfda4141742629ecbb0b2",
  "filePath" : "/layers/src/test/java/com/iluwatar/layers/service/CakeBakingServiceImplTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "cakeInfo.calculateTotalCalories() > 0",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 37,
      "startLineNumber" : 123,
      "startColumnNumber" : 17,
      "endLineNumber" : 123,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 49,
        "startLineNumber" : 123,
        "startColumnNumber" : 6,
        "endLineNumber" : 123,
        "endColumnNumber" : 55
      },
      "nodeContext" : "assertTrue(cakeInfo.calculateTotalCalories() > 0)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 123,
        "startColumnNumber" : 6,
        "endLineNumber" : 123,
        "endColumnNumber" : 56
      },
      "nodeContext" : "assertTrue(cakeInfo.calculateTotalCalories() > 0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 287,
        "startLineNumber" : 117,
        "startColumnNumber" : 45,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  assertNotNull(cakeInfo.id);\n  assertNotNull(cakeInfo.cakeToppingInfo);\n  assertNotNull(cakeInfo.cakeLayerInfos);\n  assertNotNull(cakeInfo.toString());\n  assertFalse(cakeInfo.cakeLayerInfos.isEmpty());\n  assertTrue(cakeInfo.calculateTotalCalories() > 0);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 41,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 328,
        "startLineNumber" : 117,
        "startColumnNumber" : 4,
        "endLineNumber" : 124,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (final CakeInfo cakeInfo : allCakes) {\n  assertNotNull(cakeInfo.id);\n  assertNotNull(cakeInfo.cakeToppingInfo);\n  assertNotNull(cakeInfo.cakeLayerInfos);\n  assertNotNull(cakeInfo.toString());\n  assertFalse(cakeInfo.cakeLayerInfos.isEmpty());\n  assertTrue(cakeInfo.calculateTotalCalories() > 0);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 48,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1369,
        "startLineNumber" : 92,
        "startColumnNumber" : 57,
        "endLineNumber" : 126,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final CakeBakingServiceImpl service=new CakeBakingServiceImpl();\n  final List<CakeInfo> initialCakes=service.getAllCakes();\n  assertNotNull(initialCakes);\n  assertTrue(initialCakes.isEmpty());\n  final CakeToppingInfo topping1=new CakeToppingInfo(\"Topping1\",1000);\n  final CakeToppingInfo topping2=new CakeToppingInfo(\"Topping2\",2000);\n  service.saveNewTopping(topping1);\n  service.saveNewTopping(topping2);\n  final CakeLayerInfo layer1=new CakeLayerInfo(\"Layer1\",1000);\n  final CakeLayerInfo layer2=new CakeLayerInfo(\"Layer2\",2000);\n  final CakeLayerInfo layer3=new CakeLayerInfo(\"Layer3\",2000);\n  service.saveNewLayer(layer1);\n  service.saveNewLayer(layer2);\n  service.saveNewLayer(layer3);\n  service.bakeNewCake(new CakeInfo(topping1,List.of(layer1,layer2)));\n  service.bakeNewCake(new CakeInfo(topping2,Collections.singletonList(layer3)));\n  final List<CakeInfo> allCakes=service.getAllCakes();\n  assertNotNull(allCakes);\n  assertEquals(2,allCakes.size());\n  for (  final CakeInfo cakeInfo : allCakes) {\n    assertNotNull(cakeInfo.id);\n    assertNotNull(cakeInfo.cakeToppingInfo);\n    assertNotNull(cakeInfo.cakeLayerInfos);\n    assertNotNull(cakeInfo.toString());\n    assertFalse(cakeInfo.cakeLayerInfos.isEmpty());\n    assertTrue(cakeInfo.calculateTotalCalories() > 0);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 208,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1432,
        "startLineNumber" : 91,
        "startColumnNumber" : 2,
        "endLineNumber" : 126,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Test public void testBakeCakes() throws CakeBakingException {\n  final CakeBakingServiceImpl service=new CakeBakingServiceImpl();\n  final List<CakeInfo> initialCakes=service.getAllCakes();\n  assertNotNull(initialCakes);\n  assertTrue(initialCakes.isEmpty());\n  final CakeToppingInfo topping1=new CakeToppingInfo(\"Topping1\",1000);\n  final CakeToppingInfo topping2=new CakeToppingInfo(\"Topping2\",2000);\n  service.saveNewTopping(topping1);\n  service.saveNewTopping(topping2);\n  final CakeLayerInfo layer1=new CakeLayerInfo(\"Layer1\",1000);\n  final CakeLayerInfo layer2=new CakeLayerInfo(\"Layer2\",2000);\n  final CakeLayerInfo layer3=new CakeLayerInfo(\"Layer3\",2000);\n  service.saveNewLayer(layer1);\n  service.saveNewLayer(layer2);\n  service.saveNewLayer(layer3);\n  service.bakeNewCake(new CakeInfo(topping1,List.of(layer1,layer2)));\n  service.bakeNewCake(new CakeInfo(topping2,Collections.singletonList(layer3)));\n  final List<CakeInfo> allCakes=service.getAllCakes();\n  assertNotNull(allCakes);\n  assertEquals(2,allCakes.size());\n  for (  final CakeInfo cakeInfo : allCakes) {\n    assertNotNull(cakeInfo.id);\n    assertNotNull(cakeInfo.cakeToppingInfo);\n    assertNotNull(cakeInfo.cakeLayerInfos);\n    assertNotNull(cakeInfo.toString());\n    assertFalse(cakeInfo.cakeLayerInfos.isEmpty());\n    assertTrue(cakeInfo.calculateTotalCalories() > 0);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 216,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 123,
        "startColumnNumber" : 6,
        "endLineNumber" : 123,
        "endColumnNumber" : 56
      },
      "nodeContext" : "assertTrue(cakeInfo.calculateTotalCalories() > 0);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 37,
    "startLineNumber" : 123,
    "startColumnNumber" : 17,
    "endLineNumber" : 123,
    "endColumnNumber" : 54
  } ],
  "layoutRelationDataList" : [ ]
}