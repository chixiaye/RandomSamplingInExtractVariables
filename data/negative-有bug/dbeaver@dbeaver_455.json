{
  "id" : 455,
  "expression" : "\"Error saving\"",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.data.gis.view/src/org/jkiss/dbeaver/ui/gis/registry/GeometryViewerRegistry.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Error saving\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 239,
      "startColumnNumber" : 22,
      "endLineNumber" : 239,
      "endColumnNumber" : 36
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 74,
        "startLineNumber" : 239,
        "startColumnNumber" : 22,
        "endLineNumber" : 239,
        "endColumnNumber" : 96
      },
      "nodeContext" : "\"Error saving\" + GeometryViewerRegistry.class.getName() + \" configuration\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 85,
        "startLineNumber" : 239,
        "startColumnNumber" : 12,
        "endLineNumber" : 239,
        "endColumnNumber" : 97
      },
      "nodeContext" : "log.error(\"Error saving\" + GeometryViewerRegistry.class.getName() + \" configuration\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 239,
        "startColumnNumber" : 12,
        "endLineNumber" : 239,
        "endColumnNumber" : 98
      },
      "nodeContext" : "log.error(\"Error saving\" + GeometryViewerRegistry.class.getName() + \" configuration\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 110,
        "startLineNumber" : 238,
        "startColumnNumber" : 32,
        "endLineNumber" : 240,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  log.error(\"Error saving\" + GeometryViewerRegistry.class.getName() + \" configuration\");\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 13,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 132,
        "startLineNumber" : 238,
        "startColumnNumber" : 10,
        "endLineNumber" : 240,
        "endColumnNumber" : 9
      },
      "nodeContext" : "catch (IOException e) {\n  log.error(\"Error saving\" + GeometryViewerRegistry.class.getName() + \" configuration\");\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 18,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1767,
        "startLineNumber" : 212,
        "startColumnNumber" : 8,
        "endLineNumber" : 240,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try (OutputStream out=new FileOutputStream(getConfigFile())){\n  XMLBuilder xmlBuilder=new XMLBuilder(out,GeneralUtils.UTF8_ENCODING);\n  xmlBuilder.setButify(true);\n  try (XMLBuilder.Element ignored=xmlBuilder.startElement(KEY_ROOT)){\n    try (XMLBuilder.Element ignored1=xmlBuilder.startElement(\"userDefinedTilesDefinitions\")){\n      for (      LeafletTilesDescriptor descriptor : userDefinedTiles) {\n        try (XMLBuilder.Element ignored2=xmlBuilder.startElement(KEY_USER_DEFINED_TILES)){\n          xmlBuilder.addAttribute(KEY_ID,descriptor.getId());\n          xmlBuilder.addAttribute(KEY_LABEL,descriptor.getLabel());\n          xmlBuilder.addAttribute(KEY_LAYERS_DEF,descriptor.getLayersDefinition());\n          xmlBuilder.addAttribute(KEY_IS_VISIBLE,descriptor.isVisible());\n        }\n       }\n    }\n     try (XMLBuilder.Element ignored1=xmlBuilder.startElement(\"notVisiblePredefinedTilesList\")){\n      for (      LeafletTilesDescriptor descriptor : predefinedTiles) {\n        if (descriptor.isVisible()) {\n          continue;\n        }\n        try (XMLBuilder.Element ignored2=xmlBuilder.startElement(KEY_NON_VISIBLE_PREDEFINED_TILES)){\n          xmlBuilder.addAttribute(KEY_ID,descriptor.getId());\n        }\n       }\n    }\n   }\n   xmlBuilder.flush();\n}\n catch (IOException e) {\n  log.error(\"Error saving\" + GeometryViewerRegistry.class.getName() + \" configuration\");\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 176,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1783,
        "startLineNumber" : 211,
        "startColumnNumber" : 31,
        "endLineNumber" : 241,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  try (OutputStream out=new FileOutputStream(getConfigFile())){\n    XMLBuilder xmlBuilder=new XMLBuilder(out,GeneralUtils.UTF8_ENCODING);\n    xmlBuilder.setButify(true);\n    try (XMLBuilder.Element ignored=xmlBuilder.startElement(KEY_ROOT)){\n      try (XMLBuilder.Element ignored1=xmlBuilder.startElement(\"userDefinedTilesDefinitions\")){\n        for (        LeafletTilesDescriptor descriptor : userDefinedTiles) {\n          try (XMLBuilder.Element ignored2=xmlBuilder.startElement(KEY_USER_DEFINED_TILES)){\n            xmlBuilder.addAttribute(KEY_ID,descriptor.getId());\n            xmlBuilder.addAttribute(KEY_LABEL,descriptor.getLabel());\n            xmlBuilder.addAttribute(KEY_LAYERS_DEF,descriptor.getLayersDefinition());\n            xmlBuilder.addAttribute(KEY_IS_VISIBLE,descriptor.isVisible());\n          }\n         }\n      }\n       try (XMLBuilder.Element ignored1=xmlBuilder.startElement(\"notVisiblePredefinedTilesList\")){\n        for (        LeafletTilesDescriptor descriptor : predefinedTiles) {\n          if (descriptor.isVisible()) {\n            continue;\n          }\n          try (XMLBuilder.Element ignored2=xmlBuilder.startElement(KEY_NON_VISIBLE_PREDEFINED_TILES)){\n            xmlBuilder.addAttribute(KEY_ID,descriptor.getId());\n          }\n         }\n      }\n     }\n     xmlBuilder.flush();\n  }\n catch (  IOException e) {\n    log.error(\"Error saving\" + GeometryViewerRegistry.class.getName() + \" configuration\");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 177,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1810,
        "startLineNumber" : 211,
        "startColumnNumber" : 4,
        "endLineNumber" : 241,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void flushConfig(){\n  try (OutputStream out=new FileOutputStream(getConfigFile())){\n    XMLBuilder xmlBuilder=new XMLBuilder(out,GeneralUtils.UTF8_ENCODING);\n    xmlBuilder.setButify(true);\n    try (XMLBuilder.Element ignored=xmlBuilder.startElement(KEY_ROOT)){\n      try (XMLBuilder.Element ignored1=xmlBuilder.startElement(\"userDefinedTilesDefinitions\")){\n        for (        LeafletTilesDescriptor descriptor : userDefinedTiles) {\n          try (XMLBuilder.Element ignored2=xmlBuilder.startElement(KEY_USER_DEFINED_TILES)){\n            xmlBuilder.addAttribute(KEY_ID,descriptor.getId());\n            xmlBuilder.addAttribute(KEY_LABEL,descriptor.getLabel());\n            xmlBuilder.addAttribute(KEY_LAYERS_DEF,descriptor.getLayersDefinition());\n            xmlBuilder.addAttribute(KEY_IS_VISIBLE,descriptor.isVisible());\n          }\n         }\n      }\n       try (XMLBuilder.Element ignored1=xmlBuilder.startElement(\"notVisiblePredefinedTilesList\")){\n        for (        LeafletTilesDescriptor descriptor : predefinedTiles) {\n          if (descriptor.isVisible()) {\n            continue;\n          }\n          try (XMLBuilder.Element ignored2=xmlBuilder.startElement(KEY_NON_VISIBLE_PREDEFINED_TILES)){\n            xmlBuilder.addAttribute(KEY_ID,descriptor.getId());\n          }\n         }\n      }\n     }\n     xmlBuilder.flush();\n  }\n catch (  IOException e) {\n    log.error(\"Error saving\" + GeometryViewerRegistry.class.getName() + \" configuration\");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 181,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 86,
        "startLineNumber" : 239,
        "startColumnNumber" : 12,
        "endLineNumber" : 239,
        "endColumnNumber" : 98
      },
      "nodeContext" : "log.error(\"Error saving\" + GeometryViewerRegistry.class.getName() + \" configuration\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 12,
      "astHeight" : 7
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 239,
    "startColumnNumber" : 22,
    "endLineNumber" : 239,
    "endColumnNumber" : 36
  } ],
  "layoutRelationDataList" : [ ]
}