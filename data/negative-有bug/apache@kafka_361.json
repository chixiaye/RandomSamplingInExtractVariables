{
  "id" : 361,
  "expression" : "receivedMetadata2.isPresent()",
  "projectName" : "apache@kafka",
  "commitID" : "539f006e65d9060cd46a4052d1b70f2312d8ca34",
  "filePath" : "/storage/src/test/java/org/apache/kafka/server/log/remote/metadata/storage/FileBasedRemoteLogMetadataCacheTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "receivedMetadata2.isPresent()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 29,
      "startLineNumber" : 72,
      "startColumnNumber" : 19,
      "endLineNumber" : 72,
      "endColumnNumber" : 48
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 49
      },
      "nodeContext" : "assertTrue(receivedMetadata2.isPresent())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 50
      },
      "nodeContext" : "assertTrue(receivedMetadata2.isPresent());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3528,
        "startLineNumber" : 39,
        "startColumnNumber" : 95,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  TopicIdPartition partition=new TopicIdPartition(Uuid.randomUuid(),new TopicPartition(\"test\",0));\n  int brokerId=0;\n  Path path=TestUtils.tempDirectory().toPath();\n  FileBasedRemoteLogMetadataCache cache=new FileBasedRemoteLogMetadataCache(partition,path);\n  RemoteLogSegmentId segmentId1=new RemoteLogSegmentId(partition,Uuid.randomUuid());\n  RemoteLogSegmentMetadata metadata1=new RemoteLogSegmentMetadata(segmentId1,0,100,System.currentTimeMillis(),brokerId,System.currentTimeMillis(),1024 * 1024,Collections.singletonMap(0,0L));\n  cache.addCopyInProgressSegment(metadata1);\n  RemoteLogSegmentMetadataUpdate metadataUpdate1=new RemoteLogSegmentMetadataUpdate(segmentId1,System.currentTimeMillis(),RemoteLogSegmentState.COPY_SEGMENT_FINISHED,brokerId);\n  cache.updateRemoteLogSegmentMetadata(metadataUpdate1);\n  Optional<RemoteLogSegmentMetadata> receivedMetadata=cache.remoteLogSegmentMetadata(0,0L);\n  assertTrue(receivedMetadata.isPresent());\n  assertEquals(metadata1.createWithUpdates(metadataUpdate1),receivedMetadata.get());\n  RemoteLogSegmentId segmentId2=new RemoteLogSegmentId(partition,Uuid.randomUuid());\n  RemoteLogSegmentMetadata metadata2=new RemoteLogSegmentMetadata(segmentId2,0,900,System.currentTimeMillis(),brokerId,System.currentTimeMillis(),1024 * 1024,Collections.singletonMap(0,0L));\n  cache.addCopyInProgressSegment(metadata2);\n  RemoteLogSegmentMetadataUpdate metadataUpdate2=new RemoteLogSegmentMetadataUpdate(segmentId2,System.currentTimeMillis(),RemoteLogSegmentState.COPY_SEGMENT_FINISHED,brokerId);\n  cache.updateRemoteLogSegmentMetadata(metadataUpdate2);\n  Optional<RemoteLogSegmentMetadata> receivedMetadata2=cache.remoteLogSegmentMetadata(0,0L);\n  assertTrue(receivedMetadata2.isPresent());\n  assertEquals(metadata2.createWithUpdates(metadataUpdate2),receivedMetadata2.get());\n  cache.flushToFile(0,0L);\n  FileBasedRemoteLogMetadataCache loadedCache=new FileBasedRemoteLogMetadataCache(partition,path);\n  Optional<RemoteLogSegmentMetadata> receivedMetadataAfterLoad=loadedCache.remoteLogSegmentMetadata(0,0L);\n  assertTrue(receivedMetadataAfterLoad.isPresent());\n  assertEquals(metadata2.createWithUpdates(metadataUpdate2),receivedMetadataAfterLoad.get());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 273,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3629,
        "startLineNumber" : 38,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testFileBasedRemoteLogMetadataCacheWithUnreferencedSegments() throws Exception {\n  TopicIdPartition partition=new TopicIdPartition(Uuid.randomUuid(),new TopicPartition(\"test\",0));\n  int brokerId=0;\n  Path path=TestUtils.tempDirectory().toPath();\n  FileBasedRemoteLogMetadataCache cache=new FileBasedRemoteLogMetadataCache(partition,path);\n  RemoteLogSegmentId segmentId1=new RemoteLogSegmentId(partition,Uuid.randomUuid());\n  RemoteLogSegmentMetadata metadata1=new RemoteLogSegmentMetadata(segmentId1,0,100,System.currentTimeMillis(),brokerId,System.currentTimeMillis(),1024 * 1024,Collections.singletonMap(0,0L));\n  cache.addCopyInProgressSegment(metadata1);\n  RemoteLogSegmentMetadataUpdate metadataUpdate1=new RemoteLogSegmentMetadataUpdate(segmentId1,System.currentTimeMillis(),RemoteLogSegmentState.COPY_SEGMENT_FINISHED,brokerId);\n  cache.updateRemoteLogSegmentMetadata(metadataUpdate1);\n  Optional<RemoteLogSegmentMetadata> receivedMetadata=cache.remoteLogSegmentMetadata(0,0L);\n  assertTrue(receivedMetadata.isPresent());\n  assertEquals(metadata1.createWithUpdates(metadataUpdate1),receivedMetadata.get());\n  RemoteLogSegmentId segmentId2=new RemoteLogSegmentId(partition,Uuid.randomUuid());\n  RemoteLogSegmentMetadata metadata2=new RemoteLogSegmentMetadata(segmentId2,0,900,System.currentTimeMillis(),brokerId,System.currentTimeMillis(),1024 * 1024,Collections.singletonMap(0,0L));\n  cache.addCopyInProgressSegment(metadata2);\n  RemoteLogSegmentMetadataUpdate metadataUpdate2=new RemoteLogSegmentMetadataUpdate(segmentId2,System.currentTimeMillis(),RemoteLogSegmentState.COPY_SEGMENT_FINISHED,brokerId);\n  cache.updateRemoteLogSegmentMetadata(metadataUpdate2);\n  Optional<RemoteLogSegmentMetadata> receivedMetadata2=cache.remoteLogSegmentMetadata(0,0L);\n  assertTrue(receivedMetadata2.isPresent());\n  assertEquals(metadata2.createWithUpdates(metadataUpdate2),receivedMetadata2.get());\n  cache.flushToFile(0,0L);\n  FileBasedRemoteLogMetadataCache loadedCache=new FileBasedRemoteLogMetadataCache(partition,path);\n  Optional<RemoteLogSegmentMetadata> receivedMetadataAfterLoad=loadedCache.remoteLogSegmentMetadata(0,0L);\n  assertTrue(receivedMetadataAfterLoad.isPresent());\n  assertEquals(metadata2.createWithUpdates(metadataUpdate2),receivedMetadataAfterLoad.get());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 281,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 72,
        "startColumnNumber" : 8,
        "endLineNumber" : 72,
        "endColumnNumber" : 50
      },
      "nodeContext" : "assertTrue(receivedMetadata2.isPresent());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 29,
    "startLineNumber" : 72,
    "startColumnNumber" : 19,
    "endLineNumber" : 72,
    "endColumnNumber" : 48
  } ],
  "layoutRelationDataList" : [ ]
}