{
  "id" : 72,
  "expression" : "pixmap5",
  "projectName" : "libgdx@libgdx",
  "commitID" : "3485b16e8979c0141421bc80cb8831b7a0403f67",
  "filePath" : "/tests/gdx-tests/src/com/badlogic/gdx/tests/PixmapPackerTest.java",
  "occurrences" : 5,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "pixmap5",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 82,
      "startColumnNumber" : 47,
      "endLineNumber" : 82,
      "endColumnNumber" : 54
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 52,
        "startLineNumber" : 82,
        "startColumnNumber" : 3,
        "endLineNumber" : 82,
        "endColumnNumber" : 55
      },
      "nodeContext" : "packer.pack(\"badlogic-whitespace \" + count,pixmap5)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 82,
        "startColumnNumber" : 3,
        "endLineNumber" : 82,
        "endColumnNumber" : 56
      },
      "nodeContext" : "packer.pack(\"badlogic-whitespace \" + count,pixmap5);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 255,
        "startLineNumber" : 77,
        "startColumnNumber" : 43,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  packer.pack(\"badlogic \" + count,pixmap1);\n  packer.pack(\"fire \" + count,pixmap2);\n  packer.pack(\"isotile \" + count,pixmap3);\n  packer.pack(\"textfield-\" + count + \".9\",pixmap4);\n  packer.pack(\"badlogic-whitespace \" + count,pixmap5);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 296,
        "startLineNumber" : 77,
        "startColumnNumber" : 2,
        "endLineNumber" : 83,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int count=1; count <= 3; ++count) {\n  packer.pack(\"badlogic \" + count,pixmap1);\n  packer.pack(\"fire \" + count,pixmap2);\n  packer.pack(\"isotile \" + count,pixmap3);\n  packer.pack(\"textfield-\" + count + \".9\",pixmap4);\n  packer.pack(\"badlogic-whitespace \" + count,pixmap5);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 53,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3026,
        "startLineNumber" : 58,
        "startColumnNumber" : 23,
        "endLineNumber" : 133,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  batch=new SpriteBatch();\n  shapeRenderer=new ShapeRenderer();\n  camera=new OrthographicCamera(Gdx.graphics.getWidth(),Gdx.graphics.getHeight());\n  camera.position.set(Gdx.graphics.getWidth() / 2,Gdx.graphics.getHeight() / 2,0);\n  camera.update();\n  skin=new Skin(Gdx.files.internal(\"data/uiskin.json\"));\n  Pixmap pixmap1=new Pixmap(Gdx.files.internal(\"data/badlogic.jpg\"));\n  Pixmap pixmap2=new Pixmap(Gdx.files.internal(\"data/particle-fire.png\"));\n  Pixmap pixmap3=new Pixmap(Gdx.files.internal(\"data/isotile.png\"));\n  Pixmap pixmap4=new Pixmap(Gdx.files.internal(\"data/textfield.9.png\"));\n  Pixmap pixmap5=new Pixmap(Gdx.files.internal(\"data/badlogic-with-whitespace.png\"));\n  PixmapPacker packer=new PixmapPacker(1024,1024,Format.RGBA8888,8,false,true,true,new PixmapPacker.GuillotineStrategy());\n  packer.setTransparentColor(Color.PINK);\n  for (int count=1; count <= 3; ++count) {\n    packer.pack(\"badlogic \" + count,pixmap1);\n    packer.pack(\"fire \" + count,pixmap2);\n    packer.pack(\"isotile \" + count,pixmap3);\n    packer.pack(\"textfield-\" + count + \".9\",pixmap4);\n    packer.pack(\"badlogic-whitespace \" + count,pixmap5);\n  }\n  atlas=packer.generateTextureAtlas(TextureFilter.Nearest,TextureFilter.Nearest,false);\n  Gdx.app.log(\"PixmapPackerTest\",\"Number of initial textures: \" + atlas.getTextures().size);\n  packer.setPackToTexture(true);\n  for (int count=4; count <= 10; ++count) {\n    packer.pack(\"badlogic \" + count,pixmap1);\n    packer.pack(\"fire \" + count,pixmap2);\n    packer.pack(\"isotile \" + count,pixmap3);\n    packer.pack(\"textfield-\" + count + \".9\",pixmap4);\n    packer.pack(\"badlogic-whitespace -\" + count,pixmap5);\n  }\n  packer.pack(\"badlogic-anim_0\",pixmap1);\n  packer.pack(\"badlogic-anim_1\",pixmap5);\n  packer.pack(\"badlogic-anim_2\",pixmap1);\n  packer.pack(\"badlogic-anim_3\",pixmap5);\n  pixmap1.dispose();\n  pixmap2.dispose();\n  pixmap3.dispose();\n  pixmap4.dispose();\n  pixmap5.dispose();\n  packer.updateTextureAtlas(atlas,TextureFilter.Nearest,TextureFilter.Nearest,false);\n  animation=new Animation<TextureRegion>(0.33f,atlas.findRegions(\"badlogic-anim\"),Animation.PlayMode.LOOP);\n  textureRegions=new Array<TextureRegion>();\n  packer.updateTextureRegions(textureRegions,TextureFilter.Nearest,TextureFilter.Nearest,false);\n  Gdx.app.log(\"PixmapPackerTest\",\"Number of updated textures: \" + atlas.getTextures().size);\n  Gdx.input.setInputProcessor(new InputAdapter(){\n    @Override public boolean keyDown(    int keycode){\n      if (keycode >= Input.Keys.NUM_0 && keycode <= Input.Keys.NUM_9) {\n        int number=keycode - Input.Keys.NUM_0;\n        if (number < textureRegions.size) {\n          pageToShow=number;\n        }\n      }\n      return super.keyDown(keycode);\n    }\n  }\n);\n  ninePatch=atlas.createPatch(\"textfield-1\");\n  officialPatch=skin.getPatch(\"textfield\");\n  officialPatch.getTexture().setFilter(TextureFilter.Nearest,TextureFilter.Nearest);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 502,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3060,
        "startLineNumber" : 57,
        "startColumnNumber" : 1,
        "endLineNumber" : 133,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void create(){\n  batch=new SpriteBatch();\n  shapeRenderer=new ShapeRenderer();\n  camera=new OrthographicCamera(Gdx.graphics.getWidth(),Gdx.graphics.getHeight());\n  camera.position.set(Gdx.graphics.getWidth() / 2,Gdx.graphics.getHeight() / 2,0);\n  camera.update();\n  skin=new Skin(Gdx.files.internal(\"data/uiskin.json\"));\n  Pixmap pixmap1=new Pixmap(Gdx.files.internal(\"data/badlogic.jpg\"));\n  Pixmap pixmap2=new Pixmap(Gdx.files.internal(\"data/particle-fire.png\"));\n  Pixmap pixmap3=new Pixmap(Gdx.files.internal(\"data/isotile.png\"));\n  Pixmap pixmap4=new Pixmap(Gdx.files.internal(\"data/textfield.9.png\"));\n  Pixmap pixmap5=new Pixmap(Gdx.files.internal(\"data/badlogic-with-whitespace.png\"));\n  PixmapPacker packer=new PixmapPacker(1024,1024,Format.RGBA8888,8,false,true,true,new PixmapPacker.GuillotineStrategy());\n  packer.setTransparentColor(Color.PINK);\n  for (int count=1; count <= 3; ++count) {\n    packer.pack(\"badlogic \" + count,pixmap1);\n    packer.pack(\"fire \" + count,pixmap2);\n    packer.pack(\"isotile \" + count,pixmap3);\n    packer.pack(\"textfield-\" + count + \".9\",pixmap4);\n    packer.pack(\"badlogic-whitespace \" + count,pixmap5);\n  }\n  atlas=packer.generateTextureAtlas(TextureFilter.Nearest,TextureFilter.Nearest,false);\n  Gdx.app.log(\"PixmapPackerTest\",\"Number of initial textures: \" + atlas.getTextures().size);\n  packer.setPackToTexture(true);\n  for (int count=4; count <= 10; ++count) {\n    packer.pack(\"badlogic \" + count,pixmap1);\n    packer.pack(\"fire \" + count,pixmap2);\n    packer.pack(\"isotile \" + count,pixmap3);\n    packer.pack(\"textfield-\" + count + \".9\",pixmap4);\n    packer.pack(\"badlogic-whitespace -\" + count,pixmap5);\n  }\n  packer.pack(\"badlogic-anim_0\",pixmap1);\n  packer.pack(\"badlogic-anim_1\",pixmap5);\n  packer.pack(\"badlogic-anim_2\",pixmap1);\n  packer.pack(\"badlogic-anim_3\",pixmap5);\n  pixmap1.dispose();\n  pixmap2.dispose();\n  pixmap3.dispose();\n  pixmap4.dispose();\n  pixmap5.dispose();\n  packer.updateTextureAtlas(atlas,TextureFilter.Nearest,TextureFilter.Nearest,false);\n  animation=new Animation<TextureRegion>(0.33f,atlas.findRegions(\"badlogic-anim\"),Animation.PlayMode.LOOP);\n  textureRegions=new Array<TextureRegion>();\n  packer.updateTextureRegions(textureRegions,TextureFilter.Nearest,TextureFilter.Nearest,false);\n  Gdx.app.log(\"PixmapPackerTest\",\"Number of updated textures: \" + atlas.getTextures().size);\n  Gdx.input.setInputProcessor(new InputAdapter(){\n    @Override public boolean keyDown(    int keycode){\n      if (keycode >= Input.Keys.NUM_0 && keycode <= Input.Keys.NUM_9) {\n        int number=keycode - Input.Keys.NUM_0;\n        if (number < textureRegions.size) {\n          pageToShow=number;\n        }\n      }\n      return super.keyDown(keycode);\n    }\n  }\n);\n  ninePatch=atlas.createPatch(\"textfield-1\");\n  officialPatch=skin.getPatch(\"textfield\");\n  officialPatch.getTexture().setFilter(TextureFilter.Nearest,TextureFilter.Nearest);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 508,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 82,
        "startColumnNumber" : 3,
        "endLineNumber" : 82,
        "endColumnNumber" : 56
      },
      "nodeContext" : "packer.pack(\"badlogic-whitespace \" + count,pixmap5);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.badlogic.gdx.graphics.Pixmap"
  }, {
    "nodeContext" : "pixmap5",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 95,
      "startColumnNumber" : 48,
      "endLineNumber" : 95,
      "endColumnNumber" : 55
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 53,
        "startLineNumber" : 95,
        "startColumnNumber" : 3,
        "endLineNumber" : 95,
        "endColumnNumber" : 56
      },
      "nodeContext" : "packer.pack(\"badlogic-whitespace -\" + count,pixmap5)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 95,
        "startColumnNumber" : 3,
        "endLineNumber" : 95,
        "endColumnNumber" : 57
      },
      "nodeContext" : "packer.pack(\"badlogic-whitespace -\" + count,pixmap5);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 256,
        "startLineNumber" : 90,
        "startColumnNumber" : 44,
        "endLineNumber" : 96,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  packer.pack(\"badlogic \" + count,pixmap1);\n  packer.pack(\"fire \" + count,pixmap2);\n  packer.pack(\"isotile \" + count,pixmap3);\n  packer.pack(\"textfield-\" + count + \".9\",pixmap4);\n  packer.pack(\"badlogic-whitespace -\" + count,pixmap5);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 42,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 298,
        "startLineNumber" : 90,
        "startColumnNumber" : 2,
        "endLineNumber" : 96,
        "endColumnNumber" : 3
      },
      "nodeContext" : "for (int count=4; count <= 10; ++count) {\n  packer.pack(\"badlogic \" + count,pixmap1);\n  packer.pack(\"fire \" + count,pixmap2);\n  packer.pack(\"isotile \" + count,pixmap3);\n  packer.pack(\"textfield-\" + count + \".9\",pixmap4);\n  packer.pack(\"badlogic-whitespace -\" + count,pixmap5);\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 53,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3026,
        "startLineNumber" : 58,
        "startColumnNumber" : 23,
        "endLineNumber" : 133,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  batch=new SpriteBatch();\n  shapeRenderer=new ShapeRenderer();\n  camera=new OrthographicCamera(Gdx.graphics.getWidth(),Gdx.graphics.getHeight());\n  camera.position.set(Gdx.graphics.getWidth() / 2,Gdx.graphics.getHeight() / 2,0);\n  camera.update();\n  skin=new Skin(Gdx.files.internal(\"data/uiskin.json\"));\n  Pixmap pixmap1=new Pixmap(Gdx.files.internal(\"data/badlogic.jpg\"));\n  Pixmap pixmap2=new Pixmap(Gdx.files.internal(\"data/particle-fire.png\"));\n  Pixmap pixmap3=new Pixmap(Gdx.files.internal(\"data/isotile.png\"));\n  Pixmap pixmap4=new Pixmap(Gdx.files.internal(\"data/textfield.9.png\"));\n  Pixmap pixmap5=new Pixmap(Gdx.files.internal(\"data/badlogic-with-whitespace.png\"));\n  PixmapPacker packer=new PixmapPacker(1024,1024,Format.RGBA8888,8,false,true,true,new PixmapPacker.GuillotineStrategy());\n  packer.setTransparentColor(Color.PINK);\n  for (int count=1; count <= 3; ++count) {\n    packer.pack(\"badlogic \" + count,pixmap1);\n    packer.pack(\"fire \" + count,pixmap2);\n    packer.pack(\"isotile \" + count,pixmap3);\n    packer.pack(\"textfield-\" + count + \".9\",pixmap4);\n    packer.pack(\"badlogic-whitespace \" + count,pixmap5);\n  }\n  atlas=packer.generateTextureAtlas(TextureFilter.Nearest,TextureFilter.Nearest,false);\n  Gdx.app.log(\"PixmapPackerTest\",\"Number of initial textures: \" + atlas.getTextures().size);\n  packer.setPackToTexture(true);\n  for (int count=4; count <= 10; ++count) {\n    packer.pack(\"badlogic \" + count,pixmap1);\n    packer.pack(\"fire \" + count,pixmap2);\n    packer.pack(\"isotile \" + count,pixmap3);\n    packer.pack(\"textfield-\" + count + \".9\",pixmap4);\n    packer.pack(\"badlogic-whitespace -\" + count,pixmap5);\n  }\n  packer.pack(\"badlogic-anim_0\",pixmap1);\n  packer.pack(\"badlogic-anim_1\",pixmap5);\n  packer.pack(\"badlogic-anim_2\",pixmap1);\n  packer.pack(\"badlogic-anim_3\",pixmap5);\n  pixmap1.dispose();\n  pixmap2.dispose();\n  pixmap3.dispose();\n  pixmap4.dispose();\n  pixmap5.dispose();\n  packer.updateTextureAtlas(atlas,TextureFilter.Nearest,TextureFilter.Nearest,false);\n  animation=new Animation<TextureRegion>(0.33f,atlas.findRegions(\"badlogic-anim\"),Animation.PlayMode.LOOP);\n  textureRegions=new Array<TextureRegion>();\n  packer.updateTextureRegions(textureRegions,TextureFilter.Nearest,TextureFilter.Nearest,false);\n  Gdx.app.log(\"PixmapPackerTest\",\"Number of updated textures: \" + atlas.getTextures().size);\n  Gdx.input.setInputProcessor(new InputAdapter(){\n    @Override public boolean keyDown(    int keycode){\n      if (keycode >= Input.Keys.NUM_0 && keycode <= Input.Keys.NUM_9) {\n        int number=keycode - Input.Keys.NUM_0;\n        if (number < textureRegions.size) {\n          pageToShow=number;\n        }\n      }\n      return super.keyDown(keycode);\n    }\n  }\n);\n  ninePatch=atlas.createPatch(\"textfield-1\");\n  officialPatch=skin.getPatch(\"textfield\");\n  officialPatch.getTexture().setFilter(TextureFilter.Nearest,TextureFilter.Nearest);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 502,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3060,
        "startLineNumber" : 57,
        "startColumnNumber" : 1,
        "endLineNumber" : 133,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void create(){\n  batch=new SpriteBatch();\n  shapeRenderer=new ShapeRenderer();\n  camera=new OrthographicCamera(Gdx.graphics.getWidth(),Gdx.graphics.getHeight());\n  camera.position.set(Gdx.graphics.getWidth() / 2,Gdx.graphics.getHeight() / 2,0);\n  camera.update();\n  skin=new Skin(Gdx.files.internal(\"data/uiskin.json\"));\n  Pixmap pixmap1=new Pixmap(Gdx.files.internal(\"data/badlogic.jpg\"));\n  Pixmap pixmap2=new Pixmap(Gdx.files.internal(\"data/particle-fire.png\"));\n  Pixmap pixmap3=new Pixmap(Gdx.files.internal(\"data/isotile.png\"));\n  Pixmap pixmap4=new Pixmap(Gdx.files.internal(\"data/textfield.9.png\"));\n  Pixmap pixmap5=new Pixmap(Gdx.files.internal(\"data/badlogic-with-whitespace.png\"));\n  PixmapPacker packer=new PixmapPacker(1024,1024,Format.RGBA8888,8,false,true,true,new PixmapPacker.GuillotineStrategy());\n  packer.setTransparentColor(Color.PINK);\n  for (int count=1; count <= 3; ++count) {\n    packer.pack(\"badlogic \" + count,pixmap1);\n    packer.pack(\"fire \" + count,pixmap2);\n    packer.pack(\"isotile \" + count,pixmap3);\n    packer.pack(\"textfield-\" + count + \".9\",pixmap4);\n    packer.pack(\"badlogic-whitespace \" + count,pixmap5);\n  }\n  atlas=packer.generateTextureAtlas(TextureFilter.Nearest,TextureFilter.Nearest,false);\n  Gdx.app.log(\"PixmapPackerTest\",\"Number of initial textures: \" + atlas.getTextures().size);\n  packer.setPackToTexture(true);\n  for (int count=4; count <= 10; ++count) {\n    packer.pack(\"badlogic \" + count,pixmap1);\n    packer.pack(\"fire \" + count,pixmap2);\n    packer.pack(\"isotile \" + count,pixmap3);\n    packer.pack(\"textfield-\" + count + \".9\",pixmap4);\n    packer.pack(\"badlogic-whitespace -\" + count,pixmap5);\n  }\n  packer.pack(\"badlogic-anim_0\",pixmap1);\n  packer.pack(\"badlogic-anim_1\",pixmap5);\n  packer.pack(\"badlogic-anim_2\",pixmap1);\n  packer.pack(\"badlogic-anim_3\",pixmap5);\n  pixmap1.dispose();\n  pixmap2.dispose();\n  pixmap3.dispose();\n  pixmap4.dispose();\n  pixmap5.dispose();\n  packer.updateTextureAtlas(atlas,TextureFilter.Nearest,TextureFilter.Nearest,false);\n  animation=new Animation<TextureRegion>(0.33f,atlas.findRegions(\"badlogic-anim\"),Animation.PlayMode.LOOP);\n  textureRegions=new Array<TextureRegion>();\n  packer.updateTextureRegions(textureRegions,TextureFilter.Nearest,TextureFilter.Nearest,false);\n  Gdx.app.log(\"PixmapPackerTest\",\"Number of updated textures: \" + atlas.getTextures().size);\n  Gdx.input.setInputProcessor(new InputAdapter(){\n    @Override public boolean keyDown(    int keycode){\n      if (keycode >= Input.Keys.NUM_0 && keycode <= Input.Keys.NUM_9) {\n        int number=keycode - Input.Keys.NUM_0;\n        if (number < textureRegions.size) {\n          pageToShow=number;\n        }\n      }\n      return super.keyDown(keycode);\n    }\n  }\n);\n  ninePatch=atlas.createPatch(\"textfield-1\");\n  officialPatch=skin.getPatch(\"textfield\");\n  officialPatch.getTexture().setFilter(TextureFilter.Nearest,TextureFilter.Nearest);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 508,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 54,
        "startLineNumber" : 95,
        "startColumnNumber" : 3,
        "endLineNumber" : 95,
        "endColumnNumber" : 57
      },
      "nodeContext" : "packer.pack(\"badlogic-whitespace -\" + count,pixmap5);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "com.badlogic.gdx.graphics.Pixmap"
  }, {
    "nodeContext" : "pixmap5",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 99,
      "startColumnNumber" : 33,
      "endLineNumber" : 99,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 99,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 41
      },
      "nodeContext" : "packer.pack(\"badlogic-anim_1\",pixmap5)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 99,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 42
      },
      "nodeContext" : "packer.pack(\"badlogic-anim_1\",pixmap5);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3026,
        "startLineNumber" : 58,
        "startColumnNumber" : 23,
        "endLineNumber" : 133,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  batch=new SpriteBatch();\n  shapeRenderer=new ShapeRenderer();\n  camera=new OrthographicCamera(Gdx.graphics.getWidth(),Gdx.graphics.getHeight());\n  camera.position.set(Gdx.graphics.getWidth() / 2,Gdx.graphics.getHeight() / 2,0);\n  camera.update();\n  skin=new Skin(Gdx.files.internal(\"data/uiskin.json\"));\n  Pixmap pixmap1=new Pixmap(Gdx.files.internal(\"data/badlogic.jpg\"));\n  Pixmap pixmap2=new Pixmap(Gdx.files.internal(\"data/particle-fire.png\"));\n  Pixmap pixmap3=new Pixmap(Gdx.files.internal(\"data/isotile.png\"));\n  Pixmap pixmap4=new Pixmap(Gdx.files.internal(\"data/textfield.9.png\"));\n  Pixmap pixmap5=new Pixmap(Gdx.files.internal(\"data/badlogic-with-whitespace.png\"));\n  PixmapPacker packer=new PixmapPacker(1024,1024,Format.RGBA8888,8,false,true,true,new PixmapPacker.GuillotineStrategy());\n  packer.setTransparentColor(Color.PINK);\n  for (int count=1; count <= 3; ++count) {\n    packer.pack(\"badlogic \" + count,pixmap1);\n    packer.pack(\"fire \" + count,pixmap2);\n    packer.pack(\"isotile \" + count,pixmap3);\n    packer.pack(\"textfield-\" + count + \".9\",pixmap4);\n    packer.pack(\"badlogic-whitespace \" + count,pixmap5);\n  }\n  atlas=packer.generateTextureAtlas(TextureFilter.Nearest,TextureFilter.Nearest,false);\n  Gdx.app.log(\"PixmapPackerTest\",\"Number of initial textures: \" + atlas.getTextures().size);\n  packer.setPackToTexture(true);\n  for (int count=4; count <= 10; ++count) {\n    packer.pack(\"badlogic \" + count,pixmap1);\n    packer.pack(\"fire \" + count,pixmap2);\n    packer.pack(\"isotile \" + count,pixmap3);\n    packer.pack(\"textfield-\" + count + \".9\",pixmap4);\n    packer.pack(\"badlogic-whitespace -\" + count,pixmap5);\n  }\n  packer.pack(\"badlogic-anim_0\",pixmap1);\n  packer.pack(\"badlogic-anim_1\",pixmap5);\n  packer.pack(\"badlogic-anim_2\",pixmap1);\n  packer.pack(\"badlogic-anim_3\",pixmap5);\n  pixmap1.dispose();\n  pixmap2.dispose();\n  pixmap3.dispose();\n  pixmap4.dispose();\n  pixmap5.dispose();\n  packer.updateTextureAtlas(atlas,TextureFilter.Nearest,TextureFilter.Nearest,false);\n  animation=new Animation<TextureRegion>(0.33f,atlas.findRegions(\"badlogic-anim\"),Animation.PlayMode.LOOP);\n  textureRegions=new Array<TextureRegion>();\n  packer.updateTextureRegions(textureRegions,TextureFilter.Nearest,TextureFilter.Nearest,false);\n  Gdx.app.log(\"PixmapPackerTest\",\"Number of updated textures: \" + atlas.getTextures().size);\n  Gdx.input.setInputProcessor(new InputAdapter(){\n    @Override public boolean keyDown(    int keycode){\n      if (keycode >= Input.Keys.NUM_0 && keycode <= Input.Keys.NUM_9) {\n        int number=keycode - Input.Keys.NUM_0;\n        if (number < textureRegions.size) {\n          pageToShow=number;\n        }\n      }\n      return super.keyDown(keycode);\n    }\n  }\n);\n  ninePatch=atlas.createPatch(\"textfield-1\");\n  officialPatch=skin.getPatch(\"textfield\");\n  officialPatch.getTexture().setFilter(TextureFilter.Nearest,TextureFilter.Nearest);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 502,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3060,
        "startLineNumber" : 57,
        "startColumnNumber" : 1,
        "endLineNumber" : 133,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void create(){\n  batch=new SpriteBatch();\n  shapeRenderer=new ShapeRenderer();\n  camera=new OrthographicCamera(Gdx.graphics.getWidth(),Gdx.graphics.getHeight());\n  camera.position.set(Gdx.graphics.getWidth() / 2,Gdx.graphics.getHeight() / 2,0);\n  camera.update();\n  skin=new Skin(Gdx.files.internal(\"data/uiskin.json\"));\n  Pixmap pixmap1=new Pixmap(Gdx.files.internal(\"data/badlogic.jpg\"));\n  Pixmap pixmap2=new Pixmap(Gdx.files.internal(\"data/particle-fire.png\"));\n  Pixmap pixmap3=new Pixmap(Gdx.files.internal(\"data/isotile.png\"));\n  Pixmap pixmap4=new Pixmap(Gdx.files.internal(\"data/textfield.9.png\"));\n  Pixmap pixmap5=new Pixmap(Gdx.files.internal(\"data/badlogic-with-whitespace.png\"));\n  PixmapPacker packer=new PixmapPacker(1024,1024,Format.RGBA8888,8,false,true,true,new PixmapPacker.GuillotineStrategy());\n  packer.setTransparentColor(Color.PINK);\n  for (int count=1; count <= 3; ++count) {\n    packer.pack(\"badlogic \" + count,pixmap1);\n    packer.pack(\"fire \" + count,pixmap2);\n    packer.pack(\"isotile \" + count,pixmap3);\n    packer.pack(\"textfield-\" + count + \".9\",pixmap4);\n    packer.pack(\"badlogic-whitespace \" + count,pixmap5);\n  }\n  atlas=packer.generateTextureAtlas(TextureFilter.Nearest,TextureFilter.Nearest,false);\n  Gdx.app.log(\"PixmapPackerTest\",\"Number of initial textures: \" + atlas.getTextures().size);\n  packer.setPackToTexture(true);\n  for (int count=4; count <= 10; ++count) {\n    packer.pack(\"badlogic \" + count,pixmap1);\n    packer.pack(\"fire \" + count,pixmap2);\n    packer.pack(\"isotile \" + count,pixmap3);\n    packer.pack(\"textfield-\" + count + \".9\",pixmap4);\n    packer.pack(\"badlogic-whitespace -\" + count,pixmap5);\n  }\n  packer.pack(\"badlogic-anim_0\",pixmap1);\n  packer.pack(\"badlogic-anim_1\",pixmap5);\n  packer.pack(\"badlogic-anim_2\",pixmap1);\n  packer.pack(\"badlogic-anim_3\",pixmap5);\n  pixmap1.dispose();\n  pixmap2.dispose();\n  pixmap3.dispose();\n  pixmap4.dispose();\n  pixmap5.dispose();\n  packer.updateTextureAtlas(atlas,TextureFilter.Nearest,TextureFilter.Nearest,false);\n  animation=new Animation<TextureRegion>(0.33f,atlas.findRegions(\"badlogic-anim\"),Animation.PlayMode.LOOP);\n  textureRegions=new Array<TextureRegion>();\n  packer.updateTextureRegions(textureRegions,TextureFilter.Nearest,TextureFilter.Nearest,false);\n  Gdx.app.log(\"PixmapPackerTest\",\"Number of updated textures: \" + atlas.getTextures().size);\n  Gdx.input.setInputProcessor(new InputAdapter(){\n    @Override public boolean keyDown(    int keycode){\n      if (keycode >= Input.Keys.NUM_0 && keycode <= Input.Keys.NUM_9) {\n        int number=keycode - Input.Keys.NUM_0;\n        if (number < textureRegions.size) {\n          pageToShow=number;\n        }\n      }\n      return super.keyDown(keycode);\n    }\n  }\n);\n  ninePatch=atlas.createPatch(\"textfield-1\");\n  officialPatch=skin.getPatch(\"textfield\");\n  officialPatch.getTexture().setFilter(TextureFilter.Nearest,TextureFilter.Nearest);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 508,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 99,
        "startColumnNumber" : 2,
        "endLineNumber" : 99,
        "endColumnNumber" : 42
      },
      "nodeContext" : "packer.pack(\"badlogic-anim_1\",pixmap5);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.badlogic.gdx.graphics.Pixmap"
  }, {
    "nodeContext" : "pixmap5",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 101,
      "startColumnNumber" : 33,
      "endLineNumber" : 101,
      "endColumnNumber" : 40
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 101,
        "startColumnNumber" : 2,
        "endLineNumber" : 101,
        "endColumnNumber" : 41
      },
      "nodeContext" : "packer.pack(\"badlogic-anim_3\",pixmap5)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 101,
        "startColumnNumber" : 2,
        "endLineNumber" : 101,
        "endColumnNumber" : 42
      },
      "nodeContext" : "packer.pack(\"badlogic-anim_3\",pixmap5);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3026,
        "startLineNumber" : 58,
        "startColumnNumber" : 23,
        "endLineNumber" : 133,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  batch=new SpriteBatch();\n  shapeRenderer=new ShapeRenderer();\n  camera=new OrthographicCamera(Gdx.graphics.getWidth(),Gdx.graphics.getHeight());\n  camera.position.set(Gdx.graphics.getWidth() / 2,Gdx.graphics.getHeight() / 2,0);\n  camera.update();\n  skin=new Skin(Gdx.files.internal(\"data/uiskin.json\"));\n  Pixmap pixmap1=new Pixmap(Gdx.files.internal(\"data/badlogic.jpg\"));\n  Pixmap pixmap2=new Pixmap(Gdx.files.internal(\"data/particle-fire.png\"));\n  Pixmap pixmap3=new Pixmap(Gdx.files.internal(\"data/isotile.png\"));\n  Pixmap pixmap4=new Pixmap(Gdx.files.internal(\"data/textfield.9.png\"));\n  Pixmap pixmap5=new Pixmap(Gdx.files.internal(\"data/badlogic-with-whitespace.png\"));\n  PixmapPacker packer=new PixmapPacker(1024,1024,Format.RGBA8888,8,false,true,true,new PixmapPacker.GuillotineStrategy());\n  packer.setTransparentColor(Color.PINK);\n  for (int count=1; count <= 3; ++count) {\n    packer.pack(\"badlogic \" + count,pixmap1);\n    packer.pack(\"fire \" + count,pixmap2);\n    packer.pack(\"isotile \" + count,pixmap3);\n    packer.pack(\"textfield-\" + count + \".9\",pixmap4);\n    packer.pack(\"badlogic-whitespace \" + count,pixmap5);\n  }\n  atlas=packer.generateTextureAtlas(TextureFilter.Nearest,TextureFilter.Nearest,false);\n  Gdx.app.log(\"PixmapPackerTest\",\"Number of initial textures: \" + atlas.getTextures().size);\n  packer.setPackToTexture(true);\n  for (int count=4; count <= 10; ++count) {\n    packer.pack(\"badlogic \" + count,pixmap1);\n    packer.pack(\"fire \" + count,pixmap2);\n    packer.pack(\"isotile \" + count,pixmap3);\n    packer.pack(\"textfield-\" + count + \".9\",pixmap4);\n    packer.pack(\"badlogic-whitespace -\" + count,pixmap5);\n  }\n  packer.pack(\"badlogic-anim_0\",pixmap1);\n  packer.pack(\"badlogic-anim_1\",pixmap5);\n  packer.pack(\"badlogic-anim_2\",pixmap1);\n  packer.pack(\"badlogic-anim_3\",pixmap5);\n  pixmap1.dispose();\n  pixmap2.dispose();\n  pixmap3.dispose();\n  pixmap4.dispose();\n  pixmap5.dispose();\n  packer.updateTextureAtlas(atlas,TextureFilter.Nearest,TextureFilter.Nearest,false);\n  animation=new Animation<TextureRegion>(0.33f,atlas.findRegions(\"badlogic-anim\"),Animation.PlayMode.LOOP);\n  textureRegions=new Array<TextureRegion>();\n  packer.updateTextureRegions(textureRegions,TextureFilter.Nearest,TextureFilter.Nearest,false);\n  Gdx.app.log(\"PixmapPackerTest\",\"Number of updated textures: \" + atlas.getTextures().size);\n  Gdx.input.setInputProcessor(new InputAdapter(){\n    @Override public boolean keyDown(    int keycode){\n      if (keycode >= Input.Keys.NUM_0 && keycode <= Input.Keys.NUM_9) {\n        int number=keycode - Input.Keys.NUM_0;\n        if (number < textureRegions.size) {\n          pageToShow=number;\n        }\n      }\n      return super.keyDown(keycode);\n    }\n  }\n);\n  ninePatch=atlas.createPatch(\"textfield-1\");\n  officialPatch=skin.getPatch(\"textfield\");\n  officialPatch.getTexture().setFilter(TextureFilter.Nearest,TextureFilter.Nearest);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 502,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3060,
        "startLineNumber" : 57,
        "startColumnNumber" : 1,
        "endLineNumber" : 133,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void create(){\n  batch=new SpriteBatch();\n  shapeRenderer=new ShapeRenderer();\n  camera=new OrthographicCamera(Gdx.graphics.getWidth(),Gdx.graphics.getHeight());\n  camera.position.set(Gdx.graphics.getWidth() / 2,Gdx.graphics.getHeight() / 2,0);\n  camera.update();\n  skin=new Skin(Gdx.files.internal(\"data/uiskin.json\"));\n  Pixmap pixmap1=new Pixmap(Gdx.files.internal(\"data/badlogic.jpg\"));\n  Pixmap pixmap2=new Pixmap(Gdx.files.internal(\"data/particle-fire.png\"));\n  Pixmap pixmap3=new Pixmap(Gdx.files.internal(\"data/isotile.png\"));\n  Pixmap pixmap4=new Pixmap(Gdx.files.internal(\"data/textfield.9.png\"));\n  Pixmap pixmap5=new Pixmap(Gdx.files.internal(\"data/badlogic-with-whitespace.png\"));\n  PixmapPacker packer=new PixmapPacker(1024,1024,Format.RGBA8888,8,false,true,true,new PixmapPacker.GuillotineStrategy());\n  packer.setTransparentColor(Color.PINK);\n  for (int count=1; count <= 3; ++count) {\n    packer.pack(\"badlogic \" + count,pixmap1);\n    packer.pack(\"fire \" + count,pixmap2);\n    packer.pack(\"isotile \" + count,pixmap3);\n    packer.pack(\"textfield-\" + count + \".9\",pixmap4);\n    packer.pack(\"badlogic-whitespace \" + count,pixmap5);\n  }\n  atlas=packer.generateTextureAtlas(TextureFilter.Nearest,TextureFilter.Nearest,false);\n  Gdx.app.log(\"PixmapPackerTest\",\"Number of initial textures: \" + atlas.getTextures().size);\n  packer.setPackToTexture(true);\n  for (int count=4; count <= 10; ++count) {\n    packer.pack(\"badlogic \" + count,pixmap1);\n    packer.pack(\"fire \" + count,pixmap2);\n    packer.pack(\"isotile \" + count,pixmap3);\n    packer.pack(\"textfield-\" + count + \".9\",pixmap4);\n    packer.pack(\"badlogic-whitespace -\" + count,pixmap5);\n  }\n  packer.pack(\"badlogic-anim_0\",pixmap1);\n  packer.pack(\"badlogic-anim_1\",pixmap5);\n  packer.pack(\"badlogic-anim_2\",pixmap1);\n  packer.pack(\"badlogic-anim_3\",pixmap5);\n  pixmap1.dispose();\n  pixmap2.dispose();\n  pixmap3.dispose();\n  pixmap4.dispose();\n  pixmap5.dispose();\n  packer.updateTextureAtlas(atlas,TextureFilter.Nearest,TextureFilter.Nearest,false);\n  animation=new Animation<TextureRegion>(0.33f,atlas.findRegions(\"badlogic-anim\"),Animation.PlayMode.LOOP);\n  textureRegions=new Array<TextureRegion>();\n  packer.updateTextureRegions(textureRegions,TextureFilter.Nearest,TextureFilter.Nearest,false);\n  Gdx.app.log(\"PixmapPackerTest\",\"Number of updated textures: \" + atlas.getTextures().size);\n  Gdx.input.setInputProcessor(new InputAdapter(){\n    @Override public boolean keyDown(    int keycode){\n      if (keycode >= Input.Keys.NUM_0 && keycode <= Input.Keys.NUM_9) {\n        int number=keycode - Input.Keys.NUM_0;\n        if (number < textureRegions.size) {\n          pageToShow=number;\n        }\n      }\n      return super.keyDown(keycode);\n    }\n  }\n);\n  ninePatch=atlas.createPatch(\"textfield-1\");\n  officialPatch=skin.getPatch(\"textfield\");\n  officialPatch.getTexture().setFilter(TextureFilter.Nearest,TextureFilter.Nearest);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 508,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 101,
        "startColumnNumber" : 2,
        "endLineNumber" : 101,
        "endColumnNumber" : 42
      },
      "nodeContext" : "packer.pack(\"badlogic-anim_3\",pixmap5);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.badlogic.gdx.graphics.Pixmap"
  }, {
    "nodeContext" : "pixmap5",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 7,
      "startLineNumber" : 107,
      "startColumnNumber" : 2,
      "endLineNumber" : 107,
      "endColumnNumber" : 9
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 107,
        "startColumnNumber" : 2,
        "endLineNumber" : 107,
        "endColumnNumber" : 19
      },
      "nodeContext" : "pixmap5.dispose()",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 107,
        "startColumnNumber" : 2,
        "endLineNumber" : 107,
        "endColumnNumber" : 20
      },
      "nodeContext" : "pixmap5.dispose();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 3026,
        "startLineNumber" : 58,
        "startColumnNumber" : 23,
        "endLineNumber" : 133,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  batch=new SpriteBatch();\n  shapeRenderer=new ShapeRenderer();\n  camera=new OrthographicCamera(Gdx.graphics.getWidth(),Gdx.graphics.getHeight());\n  camera.position.set(Gdx.graphics.getWidth() / 2,Gdx.graphics.getHeight() / 2,0);\n  camera.update();\n  skin=new Skin(Gdx.files.internal(\"data/uiskin.json\"));\n  Pixmap pixmap1=new Pixmap(Gdx.files.internal(\"data/badlogic.jpg\"));\n  Pixmap pixmap2=new Pixmap(Gdx.files.internal(\"data/particle-fire.png\"));\n  Pixmap pixmap3=new Pixmap(Gdx.files.internal(\"data/isotile.png\"));\n  Pixmap pixmap4=new Pixmap(Gdx.files.internal(\"data/textfield.9.png\"));\n  Pixmap pixmap5=new Pixmap(Gdx.files.internal(\"data/badlogic-with-whitespace.png\"));\n  PixmapPacker packer=new PixmapPacker(1024,1024,Format.RGBA8888,8,false,true,true,new PixmapPacker.GuillotineStrategy());\n  packer.setTransparentColor(Color.PINK);\n  for (int count=1; count <= 3; ++count) {\n    packer.pack(\"badlogic \" + count,pixmap1);\n    packer.pack(\"fire \" + count,pixmap2);\n    packer.pack(\"isotile \" + count,pixmap3);\n    packer.pack(\"textfield-\" + count + \".9\",pixmap4);\n    packer.pack(\"badlogic-whitespace \" + count,pixmap5);\n  }\n  atlas=packer.generateTextureAtlas(TextureFilter.Nearest,TextureFilter.Nearest,false);\n  Gdx.app.log(\"PixmapPackerTest\",\"Number of initial textures: \" + atlas.getTextures().size);\n  packer.setPackToTexture(true);\n  for (int count=4; count <= 10; ++count) {\n    packer.pack(\"badlogic \" + count,pixmap1);\n    packer.pack(\"fire \" + count,pixmap2);\n    packer.pack(\"isotile \" + count,pixmap3);\n    packer.pack(\"textfield-\" + count + \".9\",pixmap4);\n    packer.pack(\"badlogic-whitespace -\" + count,pixmap5);\n  }\n  packer.pack(\"badlogic-anim_0\",pixmap1);\n  packer.pack(\"badlogic-anim_1\",pixmap5);\n  packer.pack(\"badlogic-anim_2\",pixmap1);\n  packer.pack(\"badlogic-anim_3\",pixmap5);\n  pixmap1.dispose();\n  pixmap2.dispose();\n  pixmap3.dispose();\n  pixmap4.dispose();\n  pixmap5.dispose();\n  packer.updateTextureAtlas(atlas,TextureFilter.Nearest,TextureFilter.Nearest,false);\n  animation=new Animation<TextureRegion>(0.33f,atlas.findRegions(\"badlogic-anim\"),Animation.PlayMode.LOOP);\n  textureRegions=new Array<TextureRegion>();\n  packer.updateTextureRegions(textureRegions,TextureFilter.Nearest,TextureFilter.Nearest,false);\n  Gdx.app.log(\"PixmapPackerTest\",\"Number of updated textures: \" + atlas.getTextures().size);\n  Gdx.input.setInputProcessor(new InputAdapter(){\n    @Override public boolean keyDown(    int keycode){\n      if (keycode >= Input.Keys.NUM_0 && keycode <= Input.Keys.NUM_9) {\n        int number=keycode - Input.Keys.NUM_0;\n        if (number < textureRegions.size) {\n          pageToShow=number;\n        }\n      }\n      return super.keyDown(keycode);\n    }\n  }\n);\n  ninePatch=atlas.createPatch(\"textfield-1\");\n  officialPatch=skin.getPatch(\"textfield\");\n  officialPatch.getTexture().setFilter(TextureFilter.Nearest,TextureFilter.Nearest);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 502,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 3060,
        "startLineNumber" : 57,
        "startColumnNumber" : 1,
        "endLineNumber" : 133,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void create(){\n  batch=new SpriteBatch();\n  shapeRenderer=new ShapeRenderer();\n  camera=new OrthographicCamera(Gdx.graphics.getWidth(),Gdx.graphics.getHeight());\n  camera.position.set(Gdx.graphics.getWidth() / 2,Gdx.graphics.getHeight() / 2,0);\n  camera.update();\n  skin=new Skin(Gdx.files.internal(\"data/uiskin.json\"));\n  Pixmap pixmap1=new Pixmap(Gdx.files.internal(\"data/badlogic.jpg\"));\n  Pixmap pixmap2=new Pixmap(Gdx.files.internal(\"data/particle-fire.png\"));\n  Pixmap pixmap3=new Pixmap(Gdx.files.internal(\"data/isotile.png\"));\n  Pixmap pixmap4=new Pixmap(Gdx.files.internal(\"data/textfield.9.png\"));\n  Pixmap pixmap5=new Pixmap(Gdx.files.internal(\"data/badlogic-with-whitespace.png\"));\n  PixmapPacker packer=new PixmapPacker(1024,1024,Format.RGBA8888,8,false,true,true,new PixmapPacker.GuillotineStrategy());\n  packer.setTransparentColor(Color.PINK);\n  for (int count=1; count <= 3; ++count) {\n    packer.pack(\"badlogic \" + count,pixmap1);\n    packer.pack(\"fire \" + count,pixmap2);\n    packer.pack(\"isotile \" + count,pixmap3);\n    packer.pack(\"textfield-\" + count + \".9\",pixmap4);\n    packer.pack(\"badlogic-whitespace \" + count,pixmap5);\n  }\n  atlas=packer.generateTextureAtlas(TextureFilter.Nearest,TextureFilter.Nearest,false);\n  Gdx.app.log(\"PixmapPackerTest\",\"Number of initial textures: \" + atlas.getTextures().size);\n  packer.setPackToTexture(true);\n  for (int count=4; count <= 10; ++count) {\n    packer.pack(\"badlogic \" + count,pixmap1);\n    packer.pack(\"fire \" + count,pixmap2);\n    packer.pack(\"isotile \" + count,pixmap3);\n    packer.pack(\"textfield-\" + count + \".9\",pixmap4);\n    packer.pack(\"badlogic-whitespace -\" + count,pixmap5);\n  }\n  packer.pack(\"badlogic-anim_0\",pixmap1);\n  packer.pack(\"badlogic-anim_1\",pixmap5);\n  packer.pack(\"badlogic-anim_2\",pixmap1);\n  packer.pack(\"badlogic-anim_3\",pixmap5);\n  pixmap1.dispose();\n  pixmap2.dispose();\n  pixmap3.dispose();\n  pixmap4.dispose();\n  pixmap5.dispose();\n  packer.updateTextureAtlas(atlas,TextureFilter.Nearest,TextureFilter.Nearest,false);\n  animation=new Animation<TextureRegion>(0.33f,atlas.findRegions(\"badlogic-anim\"),Animation.PlayMode.LOOP);\n  textureRegions=new Array<TextureRegion>();\n  packer.updateTextureRegions(textureRegions,TextureFilter.Nearest,TextureFilter.Nearest,false);\n  Gdx.app.log(\"PixmapPackerTest\",\"Number of updated textures: \" + atlas.getTextures().size);\n  Gdx.input.setInputProcessor(new InputAdapter(){\n    @Override public boolean keyDown(    int keycode){\n      if (keycode >= Input.Keys.NUM_0 && keycode <= Input.Keys.NUM_9) {\n        int number=keycode - Input.Keys.NUM_0;\n        if (number < textureRegions.size) {\n          pageToShow=number;\n        }\n      }\n      return super.keyDown(keycode);\n    }\n  }\n);\n  ninePatch=atlas.createPatch(\"textfield-1\");\n  officialPatch=skin.getPatch(\"textfield\");\n  officialPatch.getTexture().setFilter(TextureFilter.Nearest,TextureFilter.Nearest);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 508,
      "astHeight" : 16
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 107,
        "startColumnNumber" : 2,
        "endLineNumber" : 107,
        "endColumnNumber" : 20
      },
      "nodeContext" : "pixmap5.dispose();\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "com.badlogic.gdx.graphics.Pixmap"
  } ],
  "positionList" : [ {
    "charLength" : 7,
    "startLineNumber" : 82,
    "startColumnNumber" : 47,
    "endLineNumber" : 82,
    "endColumnNumber" : 54
  }, {
    "charLength" : 7,
    "startLineNumber" : 95,
    "startColumnNumber" : 48,
    "endLineNumber" : 95,
    "endColumnNumber" : 55
  }, {
    "charLength" : 7,
    "startLineNumber" : 99,
    "startColumnNumber" : 33,
    "endLineNumber" : 99,
    "endColumnNumber" : 40
  }, {
    "charLength" : 7,
    "startLineNumber" : 101,
    "startColumnNumber" : 33,
    "endLineNumber" : 101,
    "endColumnNumber" : 40
  }, {
    "charLength" : 7,
    "startLineNumber" : 107,
    "startColumnNumber" : 2,
    "endLineNumber" : 107,
    "endColumnNumber" : 9
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 0,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 4
  }, {
    "firstKey" : 1,
    "secondKey" : 4,
    "layout" : 4
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 2,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 3,
    "secondKey" : 4,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 0,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 4,
    "secondKey" : 3,
    "layout" : 2
  } ]
}