{
  "id" : 349,
  "expression" : "(synchronizedHeader.version & 1)",
  "projectName" : "DrKLO@Telegram",
  "commitID" : "11fbfb1329df700b203e1852a71c4c11b5ab12f4",
  "filePath" : "/TMessagesProj/src/main/java/com/google/android/exoplayer2/extractor/mp3/Mp3Extractor.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "(synchronizedHeader.version & 1)",
    "nodeType" : "ParenthesizedExpression",
    "nodePosition" : {
      "charLength" : 32,
      "startLineNumber" : 396,
      "startColumnNumber" : 19,
      "endLineNumber" : 396,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 6,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 396,
        "startColumnNumber" : 19,
        "endLineNumber" : 396,
        "endColumnNumber" : 56
      },
      "nodeContext" : "(synchronizedHeader.version & 1) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 157,
        "startLineNumber" : 396,
        "startColumnNumber" : 19,
        "endLineNumber" : 398,
        "endColumnNumber" : 54
      },
      "nodeContext" : "(synchronizedHeader.version & 1) != 0 ? (synchronizedHeader.channels != 1 ? 36 : 21) : (synchronizedHeader.channels != 1 ? 21 : 13)",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 27,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 168,
        "startLineNumber" : 396,
        "startColumnNumber" : 8,
        "endLineNumber" : 398,
        "endColumnNumber" : 54
      },
      "nodeContext" : "xingBase=(synchronizedHeader.version & 1) != 0 ? (synchronizedHeader.channels != 1 ? 36 : 21) : (synchronizedHeader.channels != 1 ? 21 : 13)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 29,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 173,
        "startLineNumber" : 396,
        "startColumnNumber" : 4,
        "endLineNumber" : 398,
        "endColumnNumber" : 55
      },
      "nodeContext" : "int xingBase=(synchronizedHeader.version & 1) != 0 ? (synchronizedHeader.channels != 1 ? 36 : 21) : (synchronizedHeader.channels != 1 ? 21 : 13);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 31,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1715,
        "startLineNumber" : 393,
        "startColumnNumber" : 99,
        "endLineNumber" : 425,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  ParsableByteArray frame=new ParsableByteArray(synchronizedHeader.frameSize);\n  input.peekFully(frame.data,0,synchronizedHeader.frameSize);\n  int xingBase=(synchronizedHeader.version & 1) != 0 ? (synchronizedHeader.channels != 1 ? 36 : 21) : (synchronizedHeader.channels != 1 ? 21 : 13);\n  int seekHeader=getSeekFrameHeader(frame,xingBase);\n  Seeker seeker;\n  if (seekHeader == SEEK_HEADER_XING || seekHeader == SEEK_HEADER_INFO) {\n    seeker=XingSeeker.create(input.getLength(),input.getPosition(),synchronizedHeader,frame);\n    if (seeker != null && !gaplessInfoHolder.hasGaplessInfo()) {\n      input.resetPeekPosition();\n      input.advancePeekPosition(xingBase + 141);\n      input.peekFully(scratch.data,0,3);\n      scratch.setPosition(0);\n      gaplessInfoHolder.setFromXingHeaderValue(scratch.readUnsignedInt24());\n    }\n    input.skipFully(synchronizedHeader.frameSize);\n    if (seeker != null && !seeker.isSeekable() && seekHeader == SEEK_HEADER_INFO) {\n      return getConstantBitrateSeeker(input);\n    }\n  }\n else   if (seekHeader == SEEK_HEADER_VBRI) {\n    seeker=VbriSeeker.create(input.getLength(),input.getPosition(),synchronizedHeader,frame);\n    input.skipFully(synchronizedHeader.frameSize);\n  }\n else {\n    seeker=null;\n    input.resetPeekPosition();\n  }\n  return seeker;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 194,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2625,
        "startLineNumber" : 381,
        "startColumnNumber" : 2,
        "endLineNumber" : 425,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Consumes the next frame from the  {@code input} if it contains VBRI or Xing seeking metadata,returning a  {@link Seeker} if the metadata was present and valid, or {@code null} otherwise.After this method returns, the input position is the start of the first frame of audio.\n * @param input The {@link ExtractorInput} from which to read.\n * @return A {@link Seeker} if seeking metadata was present and valid, or {@code null} otherwise.\n * @throws IOException Thrown if there was an error reading from the stream. Not expected if thenext two frames were already peeked during synchronization.\n * @throws InterruptedException Thrown if reading from the stream was interrupted. Not expected ifthe next two frames were already peeked during synchronization.\n */\nprivate Seeker maybeReadSeekFrame(ExtractorInput input) throws IOException, InterruptedException {\n  ParsableByteArray frame=new ParsableByteArray(synchronizedHeader.frameSize);\n  input.peekFully(frame.data,0,synchronizedHeader.frameSize);\n  int xingBase=(synchronizedHeader.version & 1) != 0 ? (synchronizedHeader.channels != 1 ? 36 : 21) : (synchronizedHeader.channels != 1 ? 21 : 13);\n  int seekHeader=getSeekFrameHeader(frame,xingBase);\n  Seeker seeker;\n  if (seekHeader == SEEK_HEADER_XING || seekHeader == SEEK_HEADER_INFO) {\n    seeker=XingSeeker.create(input.getLength(),input.getPosition(),synchronizedHeader,frame);\n    if (seeker != null && !gaplessInfoHolder.hasGaplessInfo()) {\n      input.resetPeekPosition();\n      input.advancePeekPosition(xingBase + 141);\n      input.peekFully(scratch.data,0,3);\n      scratch.setPosition(0);\n      gaplessInfoHolder.setFromXingHeaderValue(scratch.readUnsignedInt24());\n    }\n    input.skipFully(synchronizedHeader.frameSize);\n    if (seeker != null && !seeker.isSeekable() && seekHeader == SEEK_HEADER_INFO) {\n      return getConstantBitrateSeeker(input);\n    }\n  }\n else   if (seekHeader == SEEK_HEADER_VBRI) {\n    seeker=VbriSeeker.create(input.getLength(),input.getPosition(),synchronizedHeader,frame);\n    input.skipFully(synchronizedHeader.frameSize);\n  }\n else {\n    seeker=null;\n    input.resetPeekPosition();\n  }\n  return seeker;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 208,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ConditionalExpression,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 396,
        "startColumnNumber" : 19,
        "endLineNumber" : 396,
        "endColumnNumber" : 56
      },
      "nodeContext" : "(synchronizedHeader.version & 1) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 4,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 32,
    "startLineNumber" : 396,
    "startColumnNumber" : 19,
    "endLineNumber" : 396,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ ]
}