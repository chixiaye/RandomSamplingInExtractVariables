{
  "id" : 126,
  "expression" : "URL",
  "projectName" : "apache@dubbo",
  "commitID" : "4ea0a09846fa74b7b1a6a1a548f31859a2cddcc8",
  "filePath" : "/dubbo-filter/dubbo-filter-validation/src/test/java/org/apache/dubbo/validation/filter/ValidationFilterTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "URL",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 52,
      "startColumnNumber" : 18,
      "endLineNumber" : 52,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 50,
        "startLineNumber" : 52,
        "startColumnNumber" : 18,
        "endLineNumber" : 52,
        "endColumnNumber" : 68
      },
      "nodeContext" : "URL.valueOf(\"test://test:11/test?validation=true\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 56,
        "startLineNumber" : 52,
        "startColumnNumber" : 12,
        "endLineNumber" : 52,
        "endColumnNumber" : 68
      },
      "nodeContext" : "url=URL.valueOf(\"test://test:11/test?validation=true\")",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 69
      },
      "nodeContext" : "URL url=URL.valueOf(\"test://test:11/test?validation=true\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 776,
        "startLineNumber" : 51,
        "startColumnNumber" : 59,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  URL url=URL.valueOf(\"test://test:11/test?validation=true\");\n  given(validation.getValidator(url)).willThrow(new IllegalStateException(\"Not found class test, cause: test\"));\n  given(invoker.invoke(invocation)).willReturn(new AppResponse(\"success\"));\n  given(invoker.getUrl()).willReturn(url);\n  given(invocation.getMethodName()).willReturn(\"echo1\");\n  given(invocation.getParameterTypes()).willReturn(new Class<?>[]{String.class});\n  given(invocation.getArguments()).willReturn(new Object[]{\"arg1\"});\n  validationFilter.setValidation(validation);\n  Result result=validationFilter.invoke(invoker,invocation);\n  assertThat(result.getException().getMessage(),is(\"Not found class test, cause: test\"));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 114,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 841,
        "startLineNumber" : 50,
        "startColumnNumber" : 4,
        "endLineNumber" : 66,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testItWithNotExistClass() throws Exception {\n  URL url=URL.valueOf(\"test://test:11/test?validation=true\");\n  given(validation.getValidator(url)).willThrow(new IllegalStateException(\"Not found class test, cause: test\"));\n  given(invoker.invoke(invocation)).willReturn(new AppResponse(\"success\"));\n  given(invoker.getUrl()).willReturn(url);\n  given(invocation.getMethodName()).willReturn(\"echo1\");\n  given(invocation.getParameterTypes()).willReturn(new Class<?>[]{String.class});\n  given(invocation.getArguments()).willReturn(new Object[]{\"arg1\"});\n  validationFilter.setValidation(validation);\n  Result result=validationFilter.invoke(invoker,invocation);\n  assertThat(result.getException().getMessage(),is(\"Not found class test, cause: test\"));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 52,
        "startColumnNumber" : 8,
        "endLineNumber" : 52,
        "endColumnNumber" : 69
      },
      "nodeContext" : "URL url=URL.valueOf(\"test://test:11/test?validation=true\");\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.apache.dubbo.common.URL"
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 52,
    "startColumnNumber" : 18,
    "endLineNumber" : 52,
    "endColumnNumber" : 21
  } ],
  "layoutRelationDataList" : [ ]
}