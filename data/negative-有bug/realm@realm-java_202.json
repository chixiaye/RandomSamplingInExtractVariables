{
  "id" : 202,
  "expression" : "realm.getTable(IOSAllTypes.class)",
  "projectName" : "realm@realm-java",
  "commitID" : "9da3b229a46407f73e2003fb40857cadf062086b",
  "filePath" : "/realm/realm-library/src/androidTest/java/io/realm/IOSRealmTests.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "realm.getTable(IOSAllTypes.class)",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 33,
      "startLineNumber" : 86,
      "startColumnNumber" : 26,
      "endLineNumber" : 86,
      "endColumnNumber" : 59
    },
    "astNodeNumber" : 6,
    "astHeight" : 4,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 86,
        "startColumnNumber" : 18,
        "endLineNumber" : 86,
        "endColumnNumber" : 59
      },
      "nodeContext" : "table=realm.getTable(IOSAllTypes.class)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 86,
        "startColumnNumber" : 12,
        "endLineNumber" : 86,
        "endColumnNumber" : 60
      },
      "nodeContext" : "Table table=realm.getTable(IOSAllTypes.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1714,
        "startLineNumber" : 80,
        "startColumnNumber" : 47,
        "endLineNumber" : 108,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  configFactory.copyRealmFromAssets(context,\"ios/\" + iosVersion + \"-alltypes.realm\",REALM_NAME);\n  realm=Realm.getDefaultInstance();\n  RealmResults<IOSAllTypes> result=realm.where(IOSAllTypes.class).sort(\"id\",Sort.ASCENDING).findAll();\n  Table table=realm.getTable(IOSAllTypes.class);\n  assertEquals(\"id\",OsObjectStore.getPrimaryKeyForObject(realm.getSharedRealm(),IOSAllTypes.CLASS_NAME));\n  assertTrue(table.hasSearchIndex(table.getColumnKey(\"id\")));\n  for (int i=0; i < 10; i++) {\n    IOSAllTypes obj=result.get(i);\n    assertTrue(obj.isBoolCol());\n    assertEquals(i + 1,obj.getShortCol());\n    assertEquals(10 + i,obj.getIntCol());\n    assertEquals(100 + i,obj.getLongCol());\n    assertEquals(100000000L + (long)i,obj.getLongLongCol());\n    assertEquals(1.23F + (float)i,obj.getFloatCol(),0F);\n    assertEquals(1.234D + (double)i,obj.getDoubleCol(),0D);\n    assertArrayEquals(new byte[]{1,2,3},obj.getByteCol());\n    assertEquals(\"String \" + Integer.toString(i),obj.getStringCol());\n    assertEquals(new Date((1000L + i) * 1000),obj.getDateCol());\n    assertEquals(\"Foo\",result.get(i).getChild().getName());\n    assertEquals(10,result.get(i).getChildren().size());\n    for (int j=0; j < 10; j++) {\n      assertEquals(\"Name: \" + Integer.toString(i),result.get(i).getChildren().get(j).getName());\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 259,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1753,
        "startLineNumber" : 80,
        "startColumnNumber" : 8,
        "endLineNumber" : 108,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (String iosVersion : IOS_VERSIONS) {\n  configFactory.copyRealmFromAssets(context,\"ios/\" + iosVersion + \"-alltypes.realm\",REALM_NAME);\n  realm=Realm.getDefaultInstance();\n  RealmResults<IOSAllTypes> result=realm.where(IOSAllTypes.class).sort(\"id\",Sort.ASCENDING).findAll();\n  Table table=realm.getTable(IOSAllTypes.class);\n  assertEquals(\"id\",OsObjectStore.getPrimaryKeyForObject(realm.getSharedRealm(),IOSAllTypes.CLASS_NAME));\n  assertTrue(table.hasSearchIndex(table.getColumnKey(\"id\")));\n  for (int i=0; i < 10; i++) {\n    IOSAllTypes obj=result.get(i);\n    assertTrue(obj.isBoolCol());\n    assertEquals(i + 1,obj.getShortCol());\n    assertEquals(10 + i,obj.getIntCol());\n    assertEquals(100 + i,obj.getLongCol());\n    assertEquals(100000000L + (long)i,obj.getLongLongCol());\n    assertEquals(1.23F + (float)i,obj.getFloatCol(),0F);\n    assertEquals(1.234D + (double)i,obj.getDoubleCol(),0D);\n    assertArrayEquals(new byte[]{1,2,3},obj.getByteCol());\n    assertEquals(\"String \" + Integer.toString(i),obj.getStringCol());\n    assertEquals(new Date((1000L + i) * 1000),obj.getDateCol());\n    assertEquals(\"Foo\",result.get(i).getChild().getName());\n    assertEquals(10,result.get(i).getChildren().size());\n    for (int j=0; j < 10; j++) {\n      assertEquals(\"Name: \" + Integer.toString(i),result.get(i).getChildren().get(j).getName());\n    }\n  }\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 265,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1769,
        "startLineNumber" : 79,
        "startColumnNumber" : 50,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (  String iosVersion : IOS_VERSIONS) {\n    configFactory.copyRealmFromAssets(context,\"ios/\" + iosVersion + \"-alltypes.realm\",REALM_NAME);\n    realm=Realm.getDefaultInstance();\n    RealmResults<IOSAllTypes> result=realm.where(IOSAllTypes.class).sort(\"id\",Sort.ASCENDING).findAll();\n    Table table=realm.getTable(IOSAllTypes.class);\n    assertEquals(\"id\",OsObjectStore.getPrimaryKeyForObject(realm.getSharedRealm(),IOSAllTypes.CLASS_NAME));\n    assertTrue(table.hasSearchIndex(table.getColumnKey(\"id\")));\n    for (int i=0; i < 10; i++) {\n      IOSAllTypes obj=result.get(i);\n      assertTrue(obj.isBoolCol());\n      assertEquals(i + 1,obj.getShortCol());\n      assertEquals(10 + i,obj.getIntCol());\n      assertEquals(100 + i,obj.getLongCol());\n      assertEquals(100000000L + (long)i,obj.getLongLongCol());\n      assertEquals(1.23F + (float)i,obj.getFloatCol(),0F);\n      assertEquals(1.234D + (double)i,obj.getDoubleCol(),0D);\n      assertArrayEquals(new byte[]{1,2,3},obj.getByteCol());\n      assertEquals(\"String \" + Integer.toString(i),obj.getStringCol());\n      assertEquals(new Date((1000L + i) * 1000),obj.getDateCol());\n      assertEquals(\"Foo\",result.get(i).getChild().getName());\n      assertEquals(10,result.get(i).getChildren().size());\n      for (int j=0; j < 10; j++) {\n        assertEquals(\"Name: \" + Integer.toString(i),result.get(i).getChildren().get(j).getName());\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 266,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1825,
        "startLineNumber" : 78,
        "startColumnNumber" : 4,
        "endLineNumber" : 109,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void iOSDataTypes() throws IOException {\n  for (  String iosVersion : IOS_VERSIONS) {\n    configFactory.copyRealmFromAssets(context,\"ios/\" + iosVersion + \"-alltypes.realm\",REALM_NAME);\n    realm=Realm.getDefaultInstance();\n    RealmResults<IOSAllTypes> result=realm.where(IOSAllTypes.class).sort(\"id\",Sort.ASCENDING).findAll();\n    Table table=realm.getTable(IOSAllTypes.class);\n    assertEquals(\"id\",OsObjectStore.getPrimaryKeyForObject(realm.getSharedRealm(),IOSAllTypes.CLASS_NAME));\n    assertTrue(table.hasSearchIndex(table.getColumnKey(\"id\")));\n    for (int i=0; i < 10; i++) {\n      IOSAllTypes obj=result.get(i);\n      assertTrue(obj.isBoolCol());\n      assertEquals(i + 1,obj.getShortCol());\n      assertEquals(10 + i,obj.getIntCol());\n      assertEquals(100 + i,obj.getLongCol());\n      assertEquals(100000000L + (long)i,obj.getLongLongCol());\n      assertEquals(1.23F + (float)i,obj.getFloatCol(),0F);\n      assertEquals(1.234D + (double)i,obj.getDoubleCol(),0D);\n      assertArrayEquals(new byte[]{1,2,3},obj.getByteCol());\n      assertEquals(\"String \" + Integer.toString(i),obj.getStringCol());\n      assertEquals(new Date((1000L + i) * 1000),obj.getDateCol());\n      assertEquals(\"Foo\",result.get(i).getChild().getName());\n      assertEquals(10,result.get(i).getChildren().size());\n      for (int j=0; j < 10; j++) {\n        assertEquals(\"Name: \" + Integer.toString(i),result.get(i).getChildren().get(j).getName());\n      }\n    }\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 274,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 48,
        "startLineNumber" : 86,
        "startColumnNumber" : 12,
        "endLineNumber" : 86,
        "endColumnNumber" : 60
      },
      "nodeContext" : "Table table=realm.getTable(IOSAllTypes.class);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 3,
    "type" : "io.realm.internal.Table"
  } ],
  "positionList" : [ {
    "charLength" : 33,
    "startLineNumber" : 86,
    "startColumnNumber" : 26,
    "endLineNumber" : 86,
    "endColumnNumber" : 59
  } ],
  "layoutRelationDataList" : [ ]
}