{
  "id" : 391,
  "expression" : "stringComparator == null",
  "projectName" : "apache@druid",
  "commitID" : "f6662b4893a9b8cc8a0ebb77e63daddde882148d",
  "filePath" : "/processing/src/main/java/org/apache/druid/query/groupby/epinephelinae/column/StringGroupByColumnSelectorStrategy.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "stringComparator == null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 160,
      "startColumnNumber" : 40,
      "endLineNumber" : 160,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 160,
        "startColumnNumber" : 40,
        "endLineNumber" : 160,
        "endColumnNumber" : 117
      },
      "nodeContext" : "stringComparator == null ? StringComparators.LEXICOGRAPHIC : stringComparator",
      "nodeType" : "ConditionalExpression",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 90,
        "startLineNumber" : 160,
        "startColumnNumber" : 27,
        "endLineNumber" : 160,
        "endColumnNumber" : 117
      },
      "nodeContext" : "comparator=stringComparator == null ? StringComparators.LEXICOGRAPHIC : stringComparator",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 160,
        "startColumnNumber" : 4,
        "endLineNumber" : 160,
        "endColumnNumber" : 118
      },
      "nodeContext" : "final StringComparator comparator=stringComparator == null ? StringComparators.LEXICOGRAPHIC : stringComparator;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1059,
        "startLineNumber" : 155,
        "startColumnNumber" : 2,
        "endLineNumber" : 174,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  final boolean canCompareInts=capabilities != null && capabilities.hasBitmapIndexes() && capabilities.areDictionaryValuesSorted().and(capabilities.areDictionaryValuesUnique()).isTrue();\n  final StringComparator comparator=stringComparator == null ? StringComparators.LEXICOGRAPHIC : stringComparator;\n  if (canCompareInts && StringComparators.LEXICOGRAPHIC.equals(comparator)) {\n    return (lhsBuffer,rhsBuffer,lhsPosition,rhsPosition) -> Integer.compare(lhsBuffer.getInt(lhsPosition + keyBufferPosition),rhsBuffer.getInt(rhsPosition + keyBufferPosition));\n  }\n else {\n    Preconditions.checkState(dictionaryLookup != null,\"null dictionary lookup\");\n    return (lhsBuffer,rhsBuffer,lhsPosition,rhsPosition) -> {\n      String lhsStr=dictionaryLookup.apply(lhsBuffer.getInt(lhsPosition + keyBufferPosition));\n      String rhsStr=dictionaryLookup.apply(rhsBuffer.getInt(rhsPosition + keyBufferPosition));\n      return comparator.compare(lhsStr,rhsStr);\n    }\n;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 127,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1190,
        "startLineNumber" : 153,
        "startColumnNumber" : 2,
        "endLineNumber" : 174,
        "endColumnNumber" : 3
      },
      "nodeContext" : "@Override public Grouper.BufferComparator bufferComparator(int keyBufferPosition,@Nullable StringComparator stringComparator){\n  final boolean canCompareInts=capabilities != null && capabilities.hasBitmapIndexes() && capabilities.areDictionaryValuesSorted().and(capabilities.areDictionaryValuesUnique()).isTrue();\n  final StringComparator comparator=stringComparator == null ? StringComparators.LEXICOGRAPHIC : stringComparator;\n  if (canCompareInts && StringComparators.LEXICOGRAPHIC.equals(comparator)) {\n    return (lhsBuffer,rhsBuffer,lhsPosition,rhsPosition) -> Integer.compare(lhsBuffer.getInt(lhsPosition + keyBufferPosition),rhsBuffer.getInt(rhsPosition + keyBufferPosition));\n  }\n else {\n    Preconditions.checkState(dictionaryLookup != null,\"null dictionary lookup\");\n    return (lhsBuffer,rhsBuffer,lhsPosition,rhsPosition) -> {\n      String lhsStr=dictionaryLookup.apply(lhsBuffer.getInt(lhsPosition + keyBufferPosition));\n      String rhsStr=dictionaryLookup.apply(rhsBuffer.getInt(rhsPosition + keyBufferPosition));\n      return comparator.compare(lhsStr,rhsStr);\n    }\n;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 145,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 160,
        "startColumnNumber" : 4,
        "endLineNumber" : 160,
        "endColumnNumber" : 118
      },
      "nodeContext" : "final StringComparator comparator=stringComparator == null ? StringComparators.LEXICOGRAPHIC : stringComparator;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 14,
      "astHeight" : 5
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 160,
    "startColumnNumber" : 40,
    "endLineNumber" : 160,
    "endColumnNumber" : 64
  } ],
  "layoutRelationDataList" : [ ]
}