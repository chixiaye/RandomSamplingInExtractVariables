{
  "id" : 420,
  "expression" : "this.messagePayload",
  "projectName" : "spring-projects@spring-boot",
  "commitID" : "44299bb9808d0dc21a9bfc1c0c47e1539e00856d",
  "filePath" : "/spring-boot-samples/spring-boot-sample-websocket-tomcat/src/main/java/samples/websocket/tomcat/client/SimpleClientWebSocketHandler.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "this.messagePayload",
    "nodeType" : "FieldAccess",
    "nodePosition" : {
      "charLength" : 19,
      "startLineNumber" : 57,
      "startColumnNumber" : 2,
      "endLineNumber" : 57,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 57,
        "startColumnNumber" : 2,
        "endLineNumber" : 57,
        "endColumnNumber" : 47
      },
      "nodeContext" : "this.messagePayload.set(message.getPayload())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 57,
        "startColumnNumber" : 2,
        "endLineNumber" : 57,
        "endColumnNumber" : 48
      },
      "nodeContext" : "this.messagePayload.set(message.getPayload());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 179,
        "startLineNumber" : 54,
        "startColumnNumber" : 20,
        "endLineNumber" : 59,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  this.logger.info(\"Received: \" + message + \" (\"+ this.latch.getCount()+ \")\");\n  session.close();\n  this.messagePayload.set(message.getPayload());\n  this.latch.countDown();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 36,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 287,
        "startLineNumber" : 52,
        "startColumnNumber" : 1,
        "endLineNumber" : 59,
        "endColumnNumber" : 2
      },
      "nodeContext" : "@Override public void handleTextMessage(WebSocketSession session,TextMessage message) throws Exception {\n  this.logger.info(\"Received: \" + message + \" (\"+ this.latch.getCount()+ \")\");\n  session.close();\n  this.messagePayload.set(message.getPayload());\n  this.latch.countDown();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 52,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 57,
        "startColumnNumber" : 2,
        "endLineNumber" : 57,
        "endColumnNumber" : 48
      },
      "nodeContext" : "this.messagePayload.set(message.getPayload());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.concurrent.atomic.AtomicReference<java.lang.String>"
  } ],
  "positionList" : [ {
    "charLength" : 19,
    "startLineNumber" : 57,
    "startColumnNumber" : 2,
    "endLineNumber" : 57,
    "endColumnNumber" : 21
  } ],
  "layoutRelationDataList" : [ ]
}