{
  "id" : 196,
  "expression" : "TimeUnit",
  "projectName" : "apache@pulsar",
  "commitID" : "ded806fd52f6e2f182fa02052cbd82c2a6755098",
  "filePath" : "/pulsar-client/src/test/java/org/apache/pulsar/client/impl/MultiTopicsConsumerImplTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "TimeUnit",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 8,
      "startLineNumber" : 173,
      "startColumnNumber" : 34,
      "endLineNumber" : 173,
      "endColumnNumber" : 42
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 173,
        "startColumnNumber" : 34,
        "endLineNumber" : 173,
        "endColumnNumber" : 50
      },
      "nodeContext" : "TimeUnit.SECONDS",
      "nodeType" : "QualifiedName",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 173,
        "startColumnNumber" : 12,
        "endLineNumber" : 173,
        "endColumnNumber" : 51
      },
      "nodeContext" : "completeFuture.get(2,TimeUnit.SECONDS)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 173,
        "startColumnNumber" : 12,
        "endLineNumber" : 173,
        "endColumnNumber" : 52
      },
      "nodeContext" : "completeFuture.get(2,TimeUnit.SECONDS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 64,
        "startLineNumber" : 172,
        "startColumnNumber" : 12,
        "endLineNumber" : 174,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  completeFuture.get(2,TimeUnit.SECONDS);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 146,
        "startLineNumber" : 172,
        "startColumnNumber" : 8,
        "endLineNumber" : 176,
        "endColumnNumber" : 9
      },
      "nodeContext" : "try {\n  completeFuture.get(2,TimeUnit.SECONDS);\n}\n catch (Throwable ignore) {\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 16,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1608,
        "startLineNumber" : 156,
        "startColumnNumber" : 56,
        "endLineNumber" : 181,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ExecutorProvider executorProvider=mock(ExecutorProvider.class);\n  ConsumerConfigurationData<byte[]> consumerConfData=new ConsumerConfigurationData<>();\n  consumerConfData.setSubscriptionName(\"subscriptionName\");\n  consumerConfData.setTopicNames(new HashSet<>(Arrays.asList(\"a\",\"b\",\"c\")));\n  int completionDelayMillis=10;\n  Schema<byte[]> schema=Schema.BYTES;\n  PulsarClientImpl clientMock=createPulsarClientMockWithMockedClientCnx();\n  when(clientMock.getPartitionedTopicMetadata(any())).thenAnswer(invocation -> createExceptionFuture(new PulsarClientException.InvalidConfigurationException(\"a mock exception\"),completionDelayMillis));\n  CompletableFuture<Consumer<byte[]>> completeFuture=new CompletableFuture<>();\n  MultiTopicsConsumerImpl<byte[]> impl=new MultiTopicsConsumerImpl<byte[]>(clientMock,consumerConfData,executorProvider,completeFuture,schema,null,true);\n  assertEquals(impl.getState(),HandlerState.State.Uninitialized);\n  try {\n    completeFuture.get(2,TimeUnit.SECONDS);\n  }\n catch (  Throwable ignore) {\n  }\n  assertTrue(completeFuture.isCompletedExceptionally());\n  assertEquals(impl.getConsumers().size(),0);\n  assertEquals(impl.getState(),HandlerState.State.Closed);\n  verify(clientMock,times(1)).cleanupConsumer(any());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 192,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1670,
        "startLineNumber" : 155,
        "startColumnNumber" : 4,
        "endLineNumber" : 181,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testConsumerCleanupOnSubscribeFailure(){\n  ExecutorProvider executorProvider=mock(ExecutorProvider.class);\n  ConsumerConfigurationData<byte[]> consumerConfData=new ConsumerConfigurationData<>();\n  consumerConfData.setSubscriptionName(\"subscriptionName\");\n  consumerConfData.setTopicNames(new HashSet<>(Arrays.asList(\"a\",\"b\",\"c\")));\n  int completionDelayMillis=10;\n  Schema<byte[]> schema=Schema.BYTES;\n  PulsarClientImpl clientMock=createPulsarClientMockWithMockedClientCnx();\n  when(clientMock.getPartitionedTopicMetadata(any())).thenAnswer(invocation -> createExceptionFuture(new PulsarClientException.InvalidConfigurationException(\"a mock exception\"),completionDelayMillis));\n  CompletableFuture<Consumer<byte[]>> completeFuture=new CompletableFuture<>();\n  MultiTopicsConsumerImpl<byte[]> impl=new MultiTopicsConsumerImpl<byte[]>(clientMock,consumerConfData,executorProvider,completeFuture,schema,null,true);\n  assertEquals(impl.getState(),HandlerState.State.Uninitialized);\n  try {\n    completeFuture.get(2,TimeUnit.SECONDS);\n  }\n catch (  Throwable ignore) {\n  }\n  assertTrue(completeFuture.isCompletedExceptionally());\n  assertEquals(impl.getConsumers().size(),0);\n  assertEquals(impl.getState(),HandlerState.State.Closed);\n  verify(clientMock,times(1)).cleanupConsumer(any());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 198,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 40,
        "startLineNumber" : 173,
        "startColumnNumber" : 12,
        "endLineNumber" : 173,
        "endColumnNumber" : 52
      },
      "nodeContext" : "completeFuture.get(2,TimeUnit.SECONDS);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.concurrent.TimeUnit"
  } ],
  "positionList" : [ {
    "charLength" : 8,
    "startLineNumber" : 173,
    "startColumnNumber" : 34,
    "endLineNumber" : 173,
    "endColumnNumber" : 42
  } ],
  "layoutRelationDataList" : [ ]
}