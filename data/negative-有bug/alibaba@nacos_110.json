{
  "id" : 110,
  "expression" : "getRetainIps()",
  "projectName" : "alibaba@nacos",
  "commitID" : "4e7346db1d6657ffe07c96bebd2d348229c2812f",
  "filePath" : "/config/src/main/java/com/alibaba/nacos/config/server/service/LongPollingService.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "getRetainIps()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 14,
      "startLineNumber" : 345,
      "startColumnNumber" : 24,
      "endLineNumber" : 345,
      "endColumnNumber" : 38
    },
    "astNodeNumber" : 2,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 345,
        "startColumnNumber" : 24,
        "endLineNumber" : 345,
        "endColumnNumber" : 84
      },
      "nodeContext" : "getRetainIps().put(clientSub.ip,System.currentTimeMillis())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 345,
        "startColumnNumber" : 24,
        "endLineNumber" : 345,
        "endColumnNumber" : 85
      },
      "nodeContext" : "getRetainIps().put(clientSub.ip,System.currentTimeMillis());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 1242,
        "startLineNumber" : 334,
        "startColumnNumber" : 70,
        "endLineNumber" : 353,
        "endColumnNumber" : 21
      },
      "nodeContext" : "{\n  if (isBeta && !CollectionUtils.contains(betaIps,clientSub.ip)) {\n    continue;\n  }\n  if (StringUtils.isNotBlank(tag) && !tag.equals(clientSub.tag)) {\n    continue;\n  }\n  getRetainIps().put(clientSub.ip,System.currentTimeMillis());\n  iter.remove();\n  LogUtil.CLIENT_LOG.info(\"{}|{}|{}|{}|{}|{}|{}\",(System.currentTimeMillis() - changeTime),\"in-advance\",RequestUtil.getRemoteIp((HttpServletRequest)clientSub.asyncContext.getRequest()),\"polling\",clientSub.clientMd5Map.size(),clientSub.probeRequestSize,groupKey);\n  clientSub.sendResponse(Arrays.asList(groupKey));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1292,
        "startLineNumber" : 334,
        "startColumnNumber" : 20,
        "endLineNumber" : 353,
        "endColumnNumber" : 21
      },
      "nodeContext" : "if (clientSub.clientMd5Map.containsKey(groupKey)) {\n  if (isBeta && !CollectionUtils.contains(betaIps,clientSub.ip)) {\n    continue;\n  }\n  if (StringUtils.isNotBlank(tag) && !tag.equals(clientSub.tag)) {\n    continue;\n  }\n  getRetainIps().put(clientSub.ip,System.currentTimeMillis());\n  iter.remove();\n  LogUtil.CLIENT_LOG.info(\"{}|{}|{}|{}|{}|{}|{}\",(System.currentTimeMillis() - changeTime),\"in-advance\",RequestUtil.getRemoteIp((HttpServletRequest)clientSub.asyncContext.getRequest()),\"polling\",clientSub.clientMd5Map.size(),clientSub.probeRequestSize,groupKey);\n  clientSub.sendResponse(Arrays.asList(groupKey));\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 94,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 1395,
        "startLineNumber" : 332,
        "startColumnNumber" : 94,
        "endLineNumber" : 354,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  ClientLongPolling clientSub=iter.next();\n  if (clientSub.clientMd5Map.containsKey(groupKey)) {\n    if (isBeta && !CollectionUtils.contains(betaIps,clientSub.ip)) {\n      continue;\n    }\n    if (StringUtils.isNotBlank(tag) && !tag.equals(clientSub.tag)) {\n      continue;\n    }\n    getRetainIps().put(clientSub.ip,System.currentTimeMillis());\n    iter.remove();\n    LogUtil.CLIENT_LOG.info(\"{}|{}|{}|{}|{}|{}|{}\",(System.currentTimeMillis() - changeTime),\"in-advance\",RequestUtil.getRemoteIp((HttpServletRequest)clientSub.asyncContext.getRequest()),\"polling\",clientSub.clientMd5Map.size(),clientSub.probeRequestSize,groupKey);\n    clientSub.sendResponse(Arrays.asList(groupKey));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 103,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1473,
        "startLineNumber" : 332,
        "startColumnNumber" : 16,
        "endLineNumber" : 354,
        "endColumnNumber" : 17
      },
      "nodeContext" : "for (Iterator<ClientLongPolling> iter=allSubs.iterator(); iter.hasNext(); ) {\n  ClientLongPolling clientSub=iter.next();\n  if (clientSub.clientMd5Map.containsKey(groupKey)) {\n    if (isBeta && !CollectionUtils.contains(betaIps,clientSub.ip)) {\n      continue;\n    }\n    if (StringUtils.isNotBlank(tag) && !tag.equals(clientSub.tag)) {\n      continue;\n    }\n    getRetainIps().put(clientSub.ip,System.currentTimeMillis());\n    iter.remove();\n    LogUtil.CLIENT_LOG.info(\"{}|{}|{}|{}|{}|{}|{}\",(System.currentTimeMillis() - changeTime),\"in-advance\",RequestUtil.getRemoteIp((HttpServletRequest)clientSub.asyncContext.getRequest()),\"polling\",clientSub.clientMd5Map.size(),clientSub.probeRequestSize,groupKey);\n    clientSub.sendResponse(Arrays.asList(groupKey));\n  }\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 118,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 1586,
        "startLineNumber" : 330,
        "startColumnNumber" : 16,
        "endLineNumber" : 356,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  ConfigCacheService.getContentBetaMd5(groupKey);\n  for (Iterator<ClientLongPolling> iter=allSubs.iterator(); iter.hasNext(); ) {\n    ClientLongPolling clientSub=iter.next();\n    if (clientSub.clientMd5Map.containsKey(groupKey)) {\n      if (isBeta && !CollectionUtils.contains(betaIps,clientSub.ip)) {\n        continue;\n      }\n      if (StringUtils.isNotBlank(tag) && !tag.equals(clientSub.tag)) {\n        continue;\n      }\n      getRetainIps().put(clientSub.ip,System.currentTimeMillis());\n      iter.remove();\n      LogUtil.CLIENT_LOG.info(\"{}|{}|{}|{}|{}|{}|{}\",(System.currentTimeMillis() - changeTime),\"in-advance\",RequestUtil.getRemoteIp((HttpServletRequest)clientSub.asyncContext.getRequest()),\"polling\",clientSub.clientMd5Map.size(),clientSub.probeRequestSize,groupKey);\n      clientSub.sendResponse(Arrays.asList(groupKey));\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 124,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1726,
        "startLineNumber" : 330,
        "startColumnNumber" : 12,
        "endLineNumber" : 358,
        "endColumnNumber" : 13
      },
      "nodeContext" : "try {\n  ConfigCacheService.getContentBetaMd5(groupKey);\n  for (Iterator<ClientLongPolling> iter=allSubs.iterator(); iter.hasNext(); ) {\n    ClientLongPolling clientSub=iter.next();\n    if (clientSub.clientMd5Map.containsKey(groupKey)) {\n      if (isBeta && !CollectionUtils.contains(betaIps,clientSub.ip)) {\n        continue;\n      }\n      if (StringUtils.isNotBlank(tag) && !tag.equals(clientSub.tag)) {\n        continue;\n      }\n      getRetainIps().put(clientSub.ip,System.currentTimeMillis());\n      iter.remove();\n      LogUtil.CLIENT_LOG.info(\"{}|{}|{}|{}|{}|{}|{}\",(System.currentTimeMillis() - changeTime),\"in-advance\",RequestUtil.getRemoteIp((HttpServletRequest)clientSub.asyncContext.getRequest()),\"polling\",clientSub.clientMd5Map.size(),clientSub.probeRequestSize,groupKey);\n      clientSub.sendResponse(Arrays.asList(groupKey));\n    }\n  }\n}\n catch (Throwable t) {\n  LogUtil.DEFAULT_LOG.error(\"data change error: {}\",ExceptionUtil.getStackTrace(t));\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 142,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1750,
        "startLineNumber" : 329,
        "startColumnNumber" : 26,
        "endLineNumber" : 359,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  try {\n    ConfigCacheService.getContentBetaMd5(groupKey);\n    for (Iterator<ClientLongPolling> iter=allSubs.iterator(); iter.hasNext(); ) {\n      ClientLongPolling clientSub=iter.next();\n      if (clientSub.clientMd5Map.containsKey(groupKey)) {\n        if (isBeta && !CollectionUtils.contains(betaIps,clientSub.ip)) {\n          continue;\n        }\n        if (StringUtils.isNotBlank(tag) && !tag.equals(clientSub.tag)) {\n          continue;\n        }\n        getRetainIps().put(clientSub.ip,System.currentTimeMillis());\n        iter.remove();\n        LogUtil.CLIENT_LOG.info(\"{}|{}|{}|{}|{}|{}|{}\",(System.currentTimeMillis() - changeTime),\"in-advance\",RequestUtil.getRemoteIp((HttpServletRequest)clientSub.asyncContext.getRequest()),\"polling\",clientSub.clientMd5Map.size(),clientSub.probeRequestSize,groupKey);\n        clientSub.sendResponse(Arrays.asList(groupKey));\n      }\n    }\n  }\n catch (  Throwable t) {\n    LogUtil.DEFAULT_LOG.error(\"data change error: {}\",ExceptionUtil.getStackTrace(t));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 143,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1786,
        "startLineNumber" : 328,
        "startColumnNumber" : 8,
        "endLineNumber" : 359,
        "endColumnNumber" : 9
      },
      "nodeContext" : "@Override public void run(){\n  try {\n    ConfigCacheService.getContentBetaMd5(groupKey);\n    for (Iterator<ClientLongPolling> iter=allSubs.iterator(); iter.hasNext(); ) {\n      ClientLongPolling clientSub=iter.next();\n      if (clientSub.clientMd5Map.containsKey(groupKey)) {\n        if (isBeta && !CollectionUtils.contains(betaIps,clientSub.ip)) {\n          continue;\n        }\n        if (StringUtils.isNotBlank(tag) && !tag.equals(clientSub.tag)) {\n          continue;\n        }\n        getRetainIps().put(clientSub.ip,System.currentTimeMillis());\n        iter.remove();\n        LogUtil.CLIENT_LOG.info(\"{}|{}|{}|{}|{}|{}|{}\",(System.currentTimeMillis() - changeTime),\"in-advance\",RequestUtil.getRemoteIp((HttpServletRequest)clientSub.asyncContext.getRequest()),\"polling\",clientSub.clientMd5Map.size(),clientSub.probeRequestSize,groupKey);\n        clientSub.sendResponse(Arrays.asList(groupKey));\n      }\n    }\n  }\n catch (  Throwable t) {\n    LogUtil.DEFAULT_LOG.error(\"data change error: {}\",ExceptionUtil.getStackTrace(t));\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 149,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 345,
        "startColumnNumber" : 24,
        "endLineNumber" : 345,
        "endColumnNumber" : 85
      },
      "nodeContext" : "getRetainIps().put(clientSub.ip,System.currentTimeMillis());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "java.util.Map<java.lang.String,java.lang.Long>"
  } ],
  "positionList" : [ {
    "charLength" : 14,
    "startLineNumber" : 345,
    "startColumnNumber" : 24,
    "endLineNumber" : 345,
    "endColumnNumber" : 38
  } ],
  "layoutRelationDataList" : [ ]
}