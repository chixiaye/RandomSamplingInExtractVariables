{
  "id" : 492,
  "expression" : "0x00 <= bytes[i]",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/extractor/src/test/java/com/google/android/exoplayer2/util/NalUnitUtilTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "0x00 <= bytes[i]",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 16,
      "startLineNumber" : 218,
      "startColumnNumber" : 28,
      "endLineNumber" : 218,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 5,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 36,
        "startLineNumber" : 218,
        "startColumnNumber" : 28,
        "endLineNumber" : 218,
        "endColumnNumber" : 64
      },
      "nodeContext" : "0x00 <= bytes[i] && bytes[i] <= 0xFF",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 59,
        "startLineNumber" : 218,
        "startColumnNumber" : 6,
        "endLineNumber" : 218,
        "endColumnNumber" : 65
      },
      "nodeContext" : "Assertions.checkState(0x00 <= bytes[i] && bytes[i] <= 0xFF)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 14,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 218,
        "startColumnNumber" : 6,
        "endLineNumber" : 218,
        "endColumnNumber" : 66
      },
      "nodeContext" : "Assertions.checkState(0x00 <= bytes[i] && bytes[i] <= 0xFF);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 112,
        "startLineNumber" : 217,
        "startColumnNumber" : 47,
        "endLineNumber" : 220,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Assertions.checkState(0x00 <= bytes[i] && bytes[i] <= 0xFF);\n  byteArray[i]=(byte)bytes[i];\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 155,
        "startLineNumber" : 217,
        "startColumnNumber" : 4,
        "endLineNumber" : 220,
        "endColumnNumber" : 5
      },
      "nodeContext" : "for (int i=0; i < byteArray.length; i++) {\n  Assertions.checkState(0x00 <= bytes[i] && bytes[i] <= 0xFF);\n  byteArray[i]=(byte)bytes[i];\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 39,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 234,
        "startLineNumber" : 215,
        "startColumnNumber" : 54,
        "endLineNumber" : 222,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  byte[] byteArray=new byte[bytes.length];\n  for (int i=0; i < byteArray.length; i++) {\n    Assertions.checkState(0x00 <= bytes[i] && bytes[i] <= 0xFF);\n    byteArray[i]=(byte)bytes[i];\n  }\n  return byteArray;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 55,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 478,
        "startLineNumber" : 213,
        "startColumnNumber" : 2,
        "endLineNumber" : 222,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Converts an array of integers in the range [0, 255] into an equivalent byte array. \n */\nprivate static byte[] createByteArray(int... bytes){\n  byte[] byteArray=new byte[bytes.length];\n  for (int i=0; i < byteArray.length; i++) {\n    Assertions.checkState(0x00 <= bytes[i] && bytes[i] <= 0xFF);\n    byteArray[i]=(byte)bytes[i];\n  }\n  return byteArray;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 66,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 60,
        "startLineNumber" : 218,
        "startColumnNumber" : 6,
        "endLineNumber" : 218,
        "endColumnNumber" : 66
      },
      "nodeContext" : "Assertions.checkState(0x00 <= bytes[i] && bytes[i] <= 0xFF);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 15,
      "astHeight" : 6
    },
    "tokenLength" : 4,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 16,
    "startLineNumber" : 218,
    "startColumnNumber" : 28,
    "endLineNumber" : 218,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ ]
}