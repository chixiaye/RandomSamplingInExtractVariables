{
  "id" : 97,
  "expression" : "UTF8_FLAG",
  "projectName" : "iBotPeaches@Apktool",
  "commitID" : "719a25afd69d2211259a65d4fce197340cbae819",
  "filePath" : "/src/brut/androlib/res/decoder/StringBlock.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "UTF8_FLAG",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 9,
      "startLineNumber" : 53,
      "startColumnNumber" : 34,
      "endLineNumber" : 53,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 53,
        "startColumnNumber" : 26,
        "endLineNumber" : 53,
        "endColumnNumber" : 43
      },
      "nodeContext" : "flags & UTF8_FLAG",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 19,
        "startLineNumber" : 53,
        "startColumnNumber" : 25,
        "endLineNumber" : 53,
        "endColumnNumber" : 44
      },
      "nodeContext" : "(flags & UTF8_FLAG)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 53,
        "startColumnNumber" : 25,
        "endLineNumber" : 53,
        "endColumnNumber" : 49
      },
      "nodeContext" : "(flags & UTF8_FLAG) != 0",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 41,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 49
      },
      "nodeContext" : "block.m_isUTF8=(flags & UTF8_FLAG) != 0",
      "nodeType" : "Assignment",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 50
      },
      "nodeContext" : "block.m_isUTF8=(flags & UTF8_FLAG) != 0;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1266,
        "startLineNumber" : 43,
        "startColumnNumber" : 75,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  reader.skipCheckInt(CHUNK_TYPE);\n  int chunkSize=reader.readInt();\n  int stringCount=reader.readInt();\n  int styleOffsetCount=reader.readInt();\n  int flags=reader.readInt();\n  int stringsOffset=reader.readInt();\n  int stylesOffset=reader.readInt();\n  StringBlock block=new StringBlock();\n  block.m_isUTF8=(flags & UTF8_FLAG) != 0;\n  block.m_stringOffsets=reader.readIntArray(stringCount);\n  if (styleOffsetCount != 0) {\n    block.m_styleOffsets=reader.readIntArray(styleOffsetCount);\n  }\n{\n    int size=((stylesOffset == 0) ? chunkSize : stylesOffset) - stringsOffset;\n    if ((size % 4) != 0) {\n      throw new IOException(\"String data size is not multiple of 4 (\" + size + \").\");\n    }\n    block.m_strings=new byte[size];\n    reader.readFully(block.m_strings);\n  }\n  if (stylesOffset != 0) {\n    int size=(chunkSize - stylesOffset);\n    if ((size % 4) != 0) {\n      throw new IOException(\"Style data size is not multiple of 4 (\" + size + \").\");\n    }\n    block.m_styles=reader.readIntArray(size / 4);\n  }\n  return block;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 180,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1462,
        "startLineNumber" : 39,
        "startColumnNumber" : 4,
        "endLineNumber" : 75,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Reads whole (including chunk type) string block from stream. Stream must be at the chunk type.\n */\npublic static StringBlock read(ExtDataInput reader) throws IOException {\n  reader.skipCheckInt(CHUNK_TYPE);\n  int chunkSize=reader.readInt();\n  int stringCount=reader.readInt();\n  int styleOffsetCount=reader.readInt();\n  int flags=reader.readInt();\n  int stringsOffset=reader.readInt();\n  int stylesOffset=reader.readInt();\n  StringBlock block=new StringBlock();\n  block.m_isUTF8=(flags & UTF8_FLAG) != 0;\n  block.m_stringOffsets=reader.readIntArray(stringCount);\n  if (styleOffsetCount != 0) {\n    block.m_styleOffsets=reader.readIntArray(styleOffsetCount);\n  }\n{\n    int size=((stylesOffset == 0) ? chunkSize : stylesOffset) - stringsOffset;\n    if ((size % 4) != 0) {\n      throw new IOException(\"String data size is not multiple of 4 (\" + size + \").\");\n    }\n    block.m_strings=new byte[size];\n    reader.readFully(block.m_strings);\n  }\n  if (stylesOffset != 0) {\n    int size=(chunkSize - stylesOffset);\n    if ((size % 4) != 0) {\n      throw new IOException(\"Style data size is not multiple of 4 (\" + size + \").\");\n    }\n    block.m_styles=reader.readIntArray(size / 4);\n  }\n  return block;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 193,
      "astHeight" : 11
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 42,
        "startLineNumber" : 53,
        "startColumnNumber" : 8,
        "endLineNumber" : 53,
        "endColumnNumber" : 50
      },
      "nodeContext" : "block.m_isUTF8=(flags & UTF8_FLAG) != 0;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 11,
      "astHeight" : 6
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 9,
    "startLineNumber" : 53,
    "startColumnNumber" : 34,
    "endLineNumber" : 53,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ ]
}