{
  "id" : 55,
  "expression" : "new Date()",
  "projectName" : "winterbe@java8-tutorial",
  "commitID" : "89a257129873974e4beb658115e854649b9204b2",
  "filePath" : "/src/com/winterbe/java8/samples/nashorn/Nashorn1.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "new Date()",
    "nodeType" : "ClassInstanceCreation",
    "nodePosition" : {
      "charLength" : 10,
      "startLineNumber" : 28,
      "startColumnNumber" : 41,
      "endLineNumber" : 28,
      "endColumnNumber" : 51
    },
    "astNodeNumber" : 3,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 44,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 52
      },
      "nodeContext" : "invocable.invokeFunction(\"fun2\",new Date())",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 7,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 53
      },
      "nodeContext" : "invocable.invokeFunction(\"fun2\",new Date());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 529,
        "startLineNumber" : 19,
        "startColumnNumber" : 60,
        "endLineNumber" : 31,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ScriptEngine engine=new ScriptEngineManager().getEngineByName(\"nashorn\");\n  engine.eval(new FileReader(\"res/nashorn1.js\"));\n  Invocable invocable=(Invocable)engine;\n  Object result=invocable.invokeFunction(\"fun1\",\"Peter Parker\");\n  System.out.println(result);\n  System.out.println(result.getClass());\n  invocable.invokeFunction(\"fun2\",new Date());\n  invocable.invokeFunction(\"fun2\",LocalDateTime.now());\n  invocable.invokeFunction(\"fun2\",new Person());\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 79,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 585,
        "startLineNumber" : 19,
        "startColumnNumber" : 4,
        "endLineNumber" : 31,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void main(String[] args) throws Exception {\n  ScriptEngine engine=new ScriptEngineManager().getEngineByName(\"nashorn\");\n  engine.eval(new FileReader(\"res/nashorn1.js\"));\n  Invocable invocable=(Invocable)engine;\n  Object result=invocable.invokeFunction(\"fun1\",\"Peter Parker\");\n  System.out.println(result);\n  System.out.println(result.getClass());\n  invocable.invokeFunction(\"fun2\",new Date());\n  invocable.invokeFunction(\"fun2\",LocalDateTime.now());\n  invocable.invokeFunction(\"fun2\",new Person());\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 92,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 45,
        "startLineNumber" : 28,
        "startColumnNumber" : 8,
        "endLineNumber" : 28,
        "endColumnNumber" : 53
      },
      "nodeContext" : "invocable.invokeFunction(\"fun2\",new Date());\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 8,
      "astHeight" : 5
    },
    "tokenLength" : 1,
    "type" : "java.util.Date"
  } ],
  "positionList" : [ {
    "charLength" : 10,
    "startLineNumber" : 28,
    "startColumnNumber" : 41,
    "endLineNumber" : 28,
    "endColumnNumber" : 51
  } ],
  "layoutRelationDataList" : [ ]
}