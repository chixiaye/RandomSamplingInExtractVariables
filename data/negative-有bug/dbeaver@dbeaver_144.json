{
  "id" : 144,
  "expression" : "((oldPos - 1 - content.length()) / bytesPerLine + 1) * bytesPerLine",
  "projectName" : "dbeaver@dbeaver",
  "commitID" : "aecf0da5baef5ea4aa1675578670cf057248123d",
  "filePath" : "/plugins/org.jkiss.dbeaver.ui.editors.hex/src/org/jkiss/dbeaver/ui/editors/binary/HexEditControl.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "((oldPos - 1 - content.length()) / bytesPerLine + 1) * bytesPerLine",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 67,
      "startLineNumber" : 1040,
      "startColumnNumber" : 28,
      "endLineNumber" : 1040,
      "endColumnNumber" : 95
    },
    "astNodeNumber" : 14,
    "astHeight" : 8,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 1039,
        "startColumnNumber" : 33,
        "endLineNumber" : 1040,
        "endColumnNumber" : 95
      },
      "nodeContext" : "oldPos - ((oldPos - 1 - content.length()) / bytesPerLine + 1) * bytesPerLine",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 113,
        "startLineNumber" : 1039,
        "startColumnNumber" : 24,
        "endLineNumber" : 1040,
        "endColumnNumber" : 95
      },
      "nodeContext" : "oldPos=oldPos - ((oldPos - 1 - content.length()) / bytesPerLine + 1) * bytesPerLine",
      "nodeType" : "Assignment",
      "astNodeNumber" : 18,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 114,
        "startLineNumber" : 1039,
        "startColumnNumber" : 24,
        "endLineNumber" : 1040,
        "endColumnNumber" : 96
      },
      "nodeContext" : "oldPos=oldPos - ((oldPos - 1 - content.length()) / bytesPerLine + 1) * bytesPerLine;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 19,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 169,
        "startLineNumber" : 1038,
        "startColumnNumber" : 20,
        "endLineNumber" : 1040,
        "endColumnNumber" : 96
      },
      "nodeContext" : "if (oldPos > content.length()) oldPos=oldPos - ((oldPos - 1 - content.length()) / bytesPerLine + 1) * bytesPerLine;\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 25,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 279,
        "startLineNumber" : 1036,
        "startColumnNumber" : 63,
        "endLineNumber" : 1041,
        "endColumnNumber" : 17
      },
      "nodeContext" : "{\n  oldPos=oldPos + bytesPerLine * numberOfLines_1;\n  if (oldPos > content.length())   oldPos=oldPos - ((oldPos - 1 - content.length()) / bytesPerLine + 1) * bytesPerLine;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 34,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 326,
        "startLineNumber" : 1036,
        "startColumnNumber" : 16,
        "endLineNumber" : 1041,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (oldPos <= content.length() - bytesPerLine) {\n  oldPos=oldPos + bytesPerLine * numberOfLines_1;\n  if (oldPos > content.length())   oldPos=oldPos - ((oldPos - 1 - content.length()) / bytesPerLine + 1) * bytesPerLine;\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 42,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 2326,
        "startLineNumber" : 984,
        "startColumnNumber" : 8,
        "endLineNumber" : 1044,
        "endColumnNumber" : 9
      },
      "nodeContext" : "switch (keyCode) {\ncase SWT.ARROW_UP:  if (oldPos >= bytesPerLine)   oldPos-=bytesPerLine;\nbreak;\ncase SWT.ARROW_DOWN:if (oldPos <= content.length() - bytesPerLine) oldPos+=bytesPerLine;\nif (countNibbles && oldPos == content.length()) upANibble=0;\nbreak;\ncase SWT.ARROW_LEFT:if (countNibbles && (oldPos > 0 || oldPos == 0 && upANibble > 0)) {\nif (upANibble == 0) --oldPos;\nupANibble^=1;\n}\nif (!countNibbles && oldPos > 0) --oldPos;\nbreak;\ncase SWT.ARROW_RIGHT:oldPos=incrementPosWithinLimits(oldPos,countNibbles);\nbreak;\ncase SWT.END:if (ctrlKey) {\noldPos=content.length();\n}\n else {\noldPos=oldPos - oldPos % bytesPerLine + bytesPerLine - 1L;\nif (oldPos >= content.length()) oldPos=content.length();\n}\nupANibble=0;\nif (countNibbles && oldPos < content.length()) upANibble=1;\nbreak;\ncase SWT.HOME:if (ctrlKey) {\noldPos=0;\n}\n else {\noldPos=oldPos - oldPos % bytesPerLine;\n}\nupANibble=0;\nbreak;\ncase SWT.PAGE_UP:if (oldPos >= bytesPerLine) {\noldPos=oldPos - bytesPerLine * numberOfLines_1;\nif (oldPos < 0L) oldPos=(oldPos + bytesPerLine * numberOfLines_1) % bytesPerLine;\n}\nbreak;\ncase SWT.PAGE_DOWN:if (oldPos <= content.length() - bytesPerLine) {\noldPos=oldPos + bytesPerLine * numberOfLines_1;\nif (oldPos > content.length()) oldPos=oldPos - ((oldPos - 1 - content.length()) / bytesPerLine + 1) * bytesPerLine;\n}\nif (countNibbles && oldPos == content.length()) upANibble=0;\nbreak;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 270,
      "astHeight" : 15
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 2420,
        "startLineNumber" : 981,
        "startColumnNumber" : 4,
        "endLineNumber" : 1047,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!countNibbles)   upANibble=0;\nswitch (keyCode) {\ncase SWT.ARROW_UP:    if (oldPos >= bytesPerLine)     oldPos-=bytesPerLine;\n  break;\ncase SWT.ARROW_DOWN:if (oldPos <= content.length() - bytesPerLine) oldPos+=bytesPerLine;\nif (countNibbles && oldPos == content.length()) upANibble=0;\nbreak;\ncase SWT.ARROW_LEFT:if (countNibbles && (oldPos > 0 || oldPos == 0 && upANibble > 0)) {\nif (upANibble == 0) --oldPos;\nupANibble^=1;\n}\nif (!countNibbles && oldPos > 0) --oldPos;\nbreak;\ncase SWT.ARROW_RIGHT:oldPos=incrementPosWithinLimits(oldPos,countNibbles);\nbreak;\ncase SWT.END:if (ctrlKey) {\noldPos=content.length();\n}\n else {\noldPos=oldPos - oldPos % bytesPerLine + bytesPerLine - 1L;\nif (oldPos >= content.length()) oldPos=content.length();\n}\nupANibble=0;\nif (countNibbles && oldPos < content.length()) upANibble=1;\nbreak;\ncase SWT.HOME:if (ctrlKey) {\noldPos=0;\n}\n else {\noldPos=oldPos - oldPos % bytesPerLine;\n}\nupANibble=0;\nbreak;\ncase SWT.PAGE_UP:if (oldPos >= bytesPerLine) {\noldPos=oldPos - bytesPerLine * numberOfLines_1;\nif (oldPos < 0L) oldPos=(oldPos + bytesPerLine * numberOfLines_1) % bytesPerLine;\n}\nbreak;\ncase SWT.PAGE_DOWN:if (oldPos <= content.length() - bytesPerLine) {\noldPos=oldPos + bytesPerLine * numberOfLines_1;\nif (oldPos > content.length()) oldPos=oldPos - ((oldPos - 1 - content.length()) / bytesPerLine + 1) * bytesPerLine;\n}\nif (countNibbles && oldPos == content.length()) upANibble=0;\nbreak;\n}\nreturn oldPos;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 280,
      "astHeight" : 16
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 2523,
        "startLineNumber" : 980,
        "startColumnNumber" : 4,
        "endLineNumber" : 1047,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private long doNavigateKeyPressed(boolean ctrlKey,int keyCode,long oldPos,boolean countNibbles){\n  if (!countNibbles)   upANibble=0;\nswitch (keyCode) {\ncase SWT.ARROW_UP:    if (oldPos >= bytesPerLine)     oldPos-=bytesPerLine;\n  break;\ncase SWT.ARROW_DOWN:if (oldPos <= content.length() - bytesPerLine) oldPos+=bytesPerLine;\nif (countNibbles && oldPos == content.length()) upANibble=0;\nbreak;\ncase SWT.ARROW_LEFT:if (countNibbles && (oldPos > 0 || oldPos == 0 && upANibble > 0)) {\nif (upANibble == 0) --oldPos;\nupANibble^=1;\n}\nif (!countNibbles && oldPos > 0) --oldPos;\nbreak;\ncase SWT.ARROW_RIGHT:oldPos=incrementPosWithinLimits(oldPos,countNibbles);\nbreak;\ncase SWT.END:if (ctrlKey) {\noldPos=content.length();\n}\n else {\noldPos=oldPos - oldPos % bytesPerLine + bytesPerLine - 1L;\nif (oldPos >= content.length()) oldPos=content.length();\n}\nupANibble=0;\nif (countNibbles && oldPos < content.length()) upANibble=1;\nbreak;\ncase SWT.HOME:if (ctrlKey) {\noldPos=0;\n}\n else {\noldPos=oldPos - oldPos % bytesPerLine;\n}\nupANibble=0;\nbreak;\ncase SWT.PAGE_UP:if (oldPos >= bytesPerLine) {\noldPos=oldPos - bytesPerLine * numberOfLines_1;\nif (oldPos < 0L) oldPos=(oldPos + bytesPerLine * numberOfLines_1) % bytesPerLine;\n}\nbreak;\ncase SWT.PAGE_DOWN:if (oldPos <= content.length() - bytesPerLine) {\noldPos=oldPos + bytesPerLine * numberOfLines_1;\nif (oldPos > content.length()) oldPos=oldPos - ((oldPos - 1 - content.length()) / bytesPerLine + 1) * bytesPerLine;\n}\nif (countNibbles && oldPos == content.length()) upANibble=0;\nbreak;\n}\nreturn oldPos;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 296,
      "astHeight" : 17
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 104,
        "startLineNumber" : 1039,
        "startColumnNumber" : 33,
        "endLineNumber" : 1040,
        "endColumnNumber" : 95
      },
      "nodeContext" : "oldPos - ((oldPos - 1 - content.length()) / bytesPerLine + 1) * bytesPerLine",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 16,
      "astHeight" : 9
    },
    "tokenLength" : 12,
    "type" : "long"
  } ],
  "positionList" : [ {
    "charLength" : 67,
    "startLineNumber" : 1040,
    "startColumnNumber" : 28,
    "endLineNumber" : 1040,
    "endColumnNumber" : 95
  } ],
  "layoutRelationDataList" : [ ]
}