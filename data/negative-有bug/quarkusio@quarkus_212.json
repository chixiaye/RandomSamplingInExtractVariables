{
  "id" : 212,
  "expression" : "existing.hasEntity() && (existing.getEntity() != null)",
  "projectName" : "quarkusio@quarkus",
  "commitID" : "2862b200ee266332150317795b9fe315be51d68b",
  "filePath" : "/independent-projects/resteasy-reactive/server/runtime/src/main/java/org/jboss/resteasy/reactive/server/handlers/ResponseHandler.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "existing.hasEntity() && (existing.getEntity() != null)",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 54,
      "startLineNumber" : 101,
      "startColumnNumber" : 20,
      "endLineNumber" : 101,
      "endColumnNumber" : 74
    },
    "astNodeNumber" : 10,
    "astHeight" : 5,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 101,
        "startColumnNumber" : 16,
        "endLineNumber" : 102,
        "endColumnNumber" : 89
      },
      "nodeContext" : "if (existing.hasEntity() && (existing.getEntity() != null)) requestContext.setGenericReturnType(existing.getEntity().getClass());\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 1316,
        "startLineNumber" : 99,
        "startColumnNumber" : 19,
        "endLineNumber" : 120,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  if (existing.hasEntity() && (existing.getEntity() != null))   requestContext.setGenericReturnType(existing.getEntity().getClass());\n  responseBuilder=fromResponse(existing);\n  if ((result instanceof RestResponseImpl)) {\n    RestResponseImpl<?> responseImpl=(RestResponseImpl<?>)result;\n    if (responseImpl.getEntityAnnotations() != null) {\n      requestContext.setAdditionalAnnotations(responseImpl.getEntityAnnotations());\n    }\n    if (responseBuilder.getEntity() == null) {\n      if (responseImpl.getEntityStream() instanceof ByteArrayInputStream) {\n        ByteArrayInputStream byteArrayInputStream=(ByteArrayInputStream)responseImpl.getEntityStream();\n        responseBuilder.entity(byteArrayInputStream.readAllBytes());\n      }\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 94,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1681,
        "startLineNumber" : 94,
        "startColumnNumber" : 12,
        "endLineNumber" : 120,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (existing.getEntity() instanceof GenericEntity) {\n  GenericEntity<?> genericEntity=(GenericEntity<?>)existing.getEntity();\n  requestContext.setGenericReturnType(genericEntity.getType());\n  responseBuilder=fromResponse(existing);\n  responseBuilder.entity(genericEntity.getEntity());\n}\n else {\n  if (existing.hasEntity() && (existing.getEntity() != null))   requestContext.setGenericReturnType(existing.getEntity().getClass());\n  responseBuilder=fromResponse(existing);\n  if ((result instanceof RestResponseImpl)) {\n    RestResponseImpl<?> responseImpl=(RestResponseImpl<?>)result;\n    if (responseImpl.getEntityAnnotations() != null) {\n      requestContext.setAdditionalAnnotations(responseImpl.getEntityAnnotations());\n    }\n    if (responseBuilder.getEntity() == null) {\n      if (responseImpl.getEntityStream() instanceof ByteArrayInputStream) {\n        ByteArrayInputStream byteArrayInputStream=(ByteArrayInputStream)responseImpl.getEntityStream();\n        responseBuilder.entity(byteArrayInputStream.readAllBytes());\n      }\n    }\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 137,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 2857,
        "startLineNumber" : 88,
        "startColumnNumber" : 51,
        "endLineNumber" : 137,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  boolean mediaTypeAlreadyExists=false;\n  ResponseBuilderImpl responseBuilder;\n  RestResponse<?> existing=(RestResponse<?>)result;\n  if (existing.getEntity() instanceof GenericEntity) {\n    GenericEntity<?> genericEntity=(GenericEntity<?>)existing.getEntity();\n    requestContext.setGenericReturnType(genericEntity.getType());\n    responseBuilder=fromResponse(existing);\n    responseBuilder.entity(genericEntity.getEntity());\n  }\n else {\n    if (existing.hasEntity() && (existing.getEntity() != null))     requestContext.setGenericReturnType(existing.getEntity().getClass());\n    responseBuilder=fromResponse(existing);\n    if ((result instanceof RestResponseImpl)) {\n      RestResponseImpl<?> responseImpl=(RestResponseImpl<?>)result;\n      if (responseImpl.getEntityAnnotations() != null) {\n        requestContext.setAdditionalAnnotations(responseImpl.getEntityAnnotations());\n      }\n      if (responseBuilder.getEntity() == null) {\n        if (responseImpl.getEntityStream() instanceof ByteArrayInputStream) {\n          ByteArrayInputStream byteArrayInputStream=(ByteArrayInputStream)responseImpl.getEntityStream();\n          responseBuilder.entity(byteArrayInputStream.readAllBytes());\n        }\n      }\n    }\n  }\n  if (existing.getMediaType() != null) {\n    requestContext.setResponseContentType(existing.getMediaType());\n    mediaTypeAlreadyExists=true;\n  }\n  EncodedMediaType produces=requestContext.getResponseContentType();\n  if (!mediaTypeAlreadyExists && produces != null) {\n    responseBuilder.header(HttpHeaders.CONTENT_TYPE,produces.toString());\n  }\n  if ((responseBuilder instanceof ResponseBuilderImpl)) {\n    requestContext.setResponse(new LazyResponse.Existing(((ResponseBuilderImpl)responseBuilder).build(false)));\n  }\n else {\n    requestContext.setResponse(new LazyResponse.Existing(responseBuilder.build()));\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 242,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 5294,
        "startLineNumber" : 88,
        "startColumnNumber" : 15,
        "endLineNumber" : 187,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (result instanceof RestResponse) {\n  boolean mediaTypeAlreadyExists=false;\n  ResponseBuilderImpl responseBuilder;\n  RestResponse<?> existing=(RestResponse<?>)result;\n  if (existing.getEntity() instanceof GenericEntity) {\n    GenericEntity<?> genericEntity=(GenericEntity<?>)existing.getEntity();\n    requestContext.setGenericReturnType(genericEntity.getType());\n    responseBuilder=fromResponse(existing);\n    responseBuilder.entity(genericEntity.getEntity());\n  }\n else {\n    if (existing.hasEntity() && (existing.getEntity() != null))     requestContext.setGenericReturnType(existing.getEntity().getClass());\n    responseBuilder=fromResponse(existing);\n    if ((result instanceof RestResponseImpl)) {\n      RestResponseImpl<?> responseImpl=(RestResponseImpl<?>)result;\n      if (responseImpl.getEntityAnnotations() != null) {\n        requestContext.setAdditionalAnnotations(responseImpl.getEntityAnnotations());\n      }\n      if (responseBuilder.getEntity() == null) {\n        if (responseImpl.getEntityStream() instanceof ByteArrayInputStream) {\n          ByteArrayInputStream byteArrayInputStream=(ByteArrayInputStream)responseImpl.getEntityStream();\n          responseBuilder.entity(byteArrayInputStream.readAllBytes());\n        }\n      }\n    }\n  }\n  if (existing.getMediaType() != null) {\n    requestContext.setResponseContentType(existing.getMediaType());\n    mediaTypeAlreadyExists=true;\n  }\n  EncodedMediaType produces=requestContext.getResponseContentType();\n  if (!mediaTypeAlreadyExists && produces != null) {\n    responseBuilder.header(HttpHeaders.CONTENT_TYPE,produces.toString());\n  }\n  if ((responseBuilder instanceof ResponseBuilderImpl)) {\n    requestContext.setResponse(new LazyResponse.Existing(((ResponseBuilderImpl)responseBuilder).build(false)));\n  }\n else {\n    requestContext.setResponse(new LazyResponse.Existing(responseBuilder.build()));\n  }\n}\n else {\n  requestContext.setResponse(new LazyResponse(){\n    Response response;\n    @Override public Response get(){\n      if (response == null) {\n        Response.ResponseBuilder responseBuilder;\n        if (result instanceof GenericEntity) {\n          GenericEntity<?> genericEntity=(GenericEntity<?>)result;\n          requestContext.setGenericReturnType(genericEntity.getType());\n          responseBuilder=ResponseImpl.ok(genericEntity.getEntity());\n        }\n else         if (result == null) {\n          responseBuilder=ResponseImpl.noContent();\n        }\n else {\n          responseBuilder=ResponseImpl.ok(result);\n        }\n        EncodedMediaType produces=requestContext.getResponseContentType();\n        if (produces != null) {\n          responseBuilder.header(HttpHeaders.CONTENT_TYPE,produces.toString());\n        }\n        if (!responseBuilderCustomizers.isEmpty()) {\n          for (int i=0; i < responseBuilderCustomizers.size(); i++) {\n            responseBuilderCustomizers.get(i).customize(responseBuilder);\n          }\n        }\n        if ((responseBuilder instanceof ResponseBuilderImpl)) {\n          response=((ResponseBuilderImpl)responseBuilder).build(false);\n        }\n else {\n          response=responseBuilder.build();\n        }\n      }\n      return response;\n    }\n    @Override public boolean isCreated(){\n      return response != null;\n    }\n    @Override public boolean isPredetermined(){\n      return responseBuilderCustomizers.isEmpty();\n    }\n  }\n);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 435,
      "astHeight" : 19
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 8157,
        "startLineNumber" : 39,
        "startColumnNumber" : 8,
        "endLineNumber" : 187,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (result instanceof Response) {\n  boolean mediaTypeAlreadyExists=false;\n  ResponseBuilderImpl responseBuilder;\n  Response existing=(Response)result;\n  if (existing.getEntity() instanceof GenericEntity) {\n    GenericEntity<?> genericEntity=(GenericEntity<?>)existing.getEntity();\n    requestContext.setGenericReturnType(genericEntity.getType());\n    responseBuilder=fromResponse(existing);\n    responseBuilder.entity(genericEntity.getEntity());\n  }\n else {\n    if (existing.hasEntity() && (existing.getEntity() != null))     requestContext.setGenericReturnType(existing.getEntity().getClass());\n    responseBuilder=fromResponse(existing);\n    if ((result instanceof ResponseImpl)) {\n      ResponseImpl responseImpl=(ResponseImpl)result;\n      if (responseImpl.getEntityAnnotations() != null) {\n        requestContext.setAdditionalAnnotations(responseImpl.getEntityAnnotations());\n      }\n      if (responseBuilder.getEntity() == null) {\n        if (responseImpl.getEntityStream() instanceof ByteArrayInputStream) {\n          ByteArrayInputStream byteArrayInputStream=(ByteArrayInputStream)responseImpl.getEntityStream();\n          responseBuilder.entity(byteArrayInputStream.readAllBytes());\n        }\n      }\n    }\n  }\n  if (existing.getMediaType() != null) {\n    requestContext.setResponseContentType(existing.getMediaType());\n    mediaTypeAlreadyExists=true;\n  }\n  EncodedMediaType produces=requestContext.getResponseContentType();\n  if (!mediaTypeAlreadyExists && produces != null) {\n    responseBuilder.header(HttpHeaders.CONTENT_TYPE,produces.toString());\n  }\n  if ((responseBuilder instanceof ResponseBuilderImpl)) {\n    requestContext.setResponse(new LazyResponse.Existing(((ResponseBuilderImpl)responseBuilder).build(false)));\n  }\n else {\n    requestContext.setResponse(new LazyResponse.Existing(responseBuilder.build()));\n  }\n}\n else if (result instanceof RestResponse) {\n  boolean mediaTypeAlreadyExists=false;\n  ResponseBuilderImpl responseBuilder;\n  RestResponse<?> existing=(RestResponse<?>)result;\n  if (existing.getEntity() instanceof GenericEntity) {\n    GenericEntity<?> genericEntity=(GenericEntity<?>)existing.getEntity();\n    requestContext.setGenericReturnType(genericEntity.getType());\n    responseBuilder=fromResponse(existing);\n    responseBuilder.entity(genericEntity.getEntity());\n  }\n else {\n    if (existing.hasEntity() && (existing.getEntity() != null))     requestContext.setGenericReturnType(existing.getEntity().getClass());\n    responseBuilder=fromResponse(existing);\n    if ((result instanceof RestResponseImpl)) {\n      RestResponseImpl<?> responseImpl=(RestResponseImpl<?>)result;\n      if (responseImpl.getEntityAnnotations() != null) {\n        requestContext.setAdditionalAnnotations(responseImpl.getEntityAnnotations());\n      }\n      if (responseBuilder.getEntity() == null) {\n        if (responseImpl.getEntityStream() instanceof ByteArrayInputStream) {\n          ByteArrayInputStream byteArrayInputStream=(ByteArrayInputStream)responseImpl.getEntityStream();\n          responseBuilder.entity(byteArrayInputStream.readAllBytes());\n        }\n      }\n    }\n  }\n  if (existing.getMediaType() != null) {\n    requestContext.setResponseContentType(existing.getMediaType());\n    mediaTypeAlreadyExists=true;\n  }\n  EncodedMediaType produces=requestContext.getResponseContentType();\n  if (!mediaTypeAlreadyExists && produces != null) {\n    responseBuilder.header(HttpHeaders.CONTENT_TYPE,produces.toString());\n  }\n  if ((responseBuilder instanceof ResponseBuilderImpl)) {\n    requestContext.setResponse(new LazyResponse.Existing(((ResponseBuilderImpl)responseBuilder).build(false)));\n  }\n else {\n    requestContext.setResponse(new LazyResponse.Existing(responseBuilder.build()));\n  }\n}\n else {\n  requestContext.setResponse(new LazyResponse(){\n    Response response;\n    @Override public Response get(){\n      if (response == null) {\n        Response.ResponseBuilder responseBuilder;\n        if (result instanceof GenericEntity) {\n          GenericEntity<?> genericEntity=(GenericEntity<?>)result;\n          requestContext.setGenericReturnType(genericEntity.getType());\n          responseBuilder=ResponseImpl.ok(genericEntity.getEntity());\n        }\n else         if (result == null) {\n          responseBuilder=ResponseImpl.noContent();\n        }\n else {\n          responseBuilder=ResponseImpl.ok(result);\n        }\n        EncodedMediaType produces=requestContext.getResponseContentType();\n        if (produces != null) {\n          responseBuilder.header(HttpHeaders.CONTENT_TYPE,produces.toString());\n        }\n        if (!responseBuilderCustomizers.isEmpty()) {\n          for (int i=0; i < responseBuilderCustomizers.size(); i++) {\n            responseBuilderCustomizers.get(i).customize(responseBuilder);\n          }\n        }\n        if ((responseBuilder instanceof ResponseBuilderImpl)) {\n          response=((ResponseBuilderImpl)responseBuilder).build(false);\n        }\n else {\n          response=responseBuilder.build();\n        }\n      }\n      return response;\n    }\n    @Override public boolean isCreated(){\n      return response != null;\n    }\n    @Override public boolean isPredetermined(){\n      return responseBuilderCustomizers.isEmpty();\n    }\n  }\n);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 674,
      "astHeight" : 20
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 8225,
        "startLineNumber" : 37,
        "startColumnNumber" : 87,
        "endLineNumber" : 188,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Object result=requestContext.getResult();\n  if (result instanceof Response) {\n    boolean mediaTypeAlreadyExists=false;\n    ResponseBuilderImpl responseBuilder;\n    Response existing=(Response)result;\n    if (existing.getEntity() instanceof GenericEntity) {\n      GenericEntity<?> genericEntity=(GenericEntity<?>)existing.getEntity();\n      requestContext.setGenericReturnType(genericEntity.getType());\n      responseBuilder=fromResponse(existing);\n      responseBuilder.entity(genericEntity.getEntity());\n    }\n else {\n      if (existing.hasEntity() && (existing.getEntity() != null))       requestContext.setGenericReturnType(existing.getEntity().getClass());\n      responseBuilder=fromResponse(existing);\n      if ((result instanceof ResponseImpl)) {\n        ResponseImpl responseImpl=(ResponseImpl)result;\n        if (responseImpl.getEntityAnnotations() != null) {\n          requestContext.setAdditionalAnnotations(responseImpl.getEntityAnnotations());\n        }\n        if (responseBuilder.getEntity() == null) {\n          if (responseImpl.getEntityStream() instanceof ByteArrayInputStream) {\n            ByteArrayInputStream byteArrayInputStream=(ByteArrayInputStream)responseImpl.getEntityStream();\n            responseBuilder.entity(byteArrayInputStream.readAllBytes());\n          }\n        }\n      }\n    }\n    if (existing.getMediaType() != null) {\n      requestContext.setResponseContentType(existing.getMediaType());\n      mediaTypeAlreadyExists=true;\n    }\n    EncodedMediaType produces=requestContext.getResponseContentType();\n    if (!mediaTypeAlreadyExists && produces != null) {\n      responseBuilder.header(HttpHeaders.CONTENT_TYPE,produces.toString());\n    }\n    if ((responseBuilder instanceof ResponseBuilderImpl)) {\n      requestContext.setResponse(new LazyResponse.Existing(((ResponseBuilderImpl)responseBuilder).build(false)));\n    }\n else {\n      requestContext.setResponse(new LazyResponse.Existing(responseBuilder.build()));\n    }\n  }\n else   if (result instanceof RestResponse) {\n    boolean mediaTypeAlreadyExists=false;\n    ResponseBuilderImpl responseBuilder;\n    RestResponse<?> existing=(RestResponse<?>)result;\n    if (existing.getEntity() instanceof GenericEntity) {\n      GenericEntity<?> genericEntity=(GenericEntity<?>)existing.getEntity();\n      requestContext.setGenericReturnType(genericEntity.getType());\n      responseBuilder=fromResponse(existing);\n      responseBuilder.entity(genericEntity.getEntity());\n    }\n else {\n      if (existing.hasEntity() && (existing.getEntity() != null))       requestContext.setGenericReturnType(existing.getEntity().getClass());\n      responseBuilder=fromResponse(existing);\n      if ((result instanceof RestResponseImpl)) {\n        RestResponseImpl<?> responseImpl=(RestResponseImpl<?>)result;\n        if (responseImpl.getEntityAnnotations() != null) {\n          requestContext.setAdditionalAnnotations(responseImpl.getEntityAnnotations());\n        }\n        if (responseBuilder.getEntity() == null) {\n          if (responseImpl.getEntityStream() instanceof ByteArrayInputStream) {\n            ByteArrayInputStream byteArrayInputStream=(ByteArrayInputStream)responseImpl.getEntityStream();\n            responseBuilder.entity(byteArrayInputStream.readAllBytes());\n          }\n        }\n      }\n    }\n    if (existing.getMediaType() != null) {\n      requestContext.setResponseContentType(existing.getMediaType());\n      mediaTypeAlreadyExists=true;\n    }\n    EncodedMediaType produces=requestContext.getResponseContentType();\n    if (!mediaTypeAlreadyExists && produces != null) {\n      responseBuilder.header(HttpHeaders.CONTENT_TYPE,produces.toString());\n    }\n    if ((responseBuilder instanceof ResponseBuilderImpl)) {\n      requestContext.setResponse(new LazyResponse.Existing(((ResponseBuilderImpl)responseBuilder).build(false)));\n    }\n else {\n      requestContext.setResponse(new LazyResponse.Existing(responseBuilder.build()));\n    }\n  }\n else {\n    requestContext.setResponse(new LazyResponse(){\n      Response response;\n      @Override public Response get(){\n        if (response == null) {\n          Response.ResponseBuilder responseBuilder;\n          if (result instanceof GenericEntity) {\n            GenericEntity<?> genericEntity=(GenericEntity<?>)result;\n            requestContext.setGenericReturnType(genericEntity.getType());\n            responseBuilder=ResponseImpl.ok(genericEntity.getEntity());\n          }\n else           if (result == null) {\n            responseBuilder=ResponseImpl.noContent();\n          }\n else {\n            responseBuilder=ResponseImpl.ok(result);\n          }\n          EncodedMediaType produces=requestContext.getResponseContentType();\n          if (produces != null) {\n            responseBuilder.header(HttpHeaders.CONTENT_TYPE,produces.toString());\n          }\n          if (!responseBuilderCustomizers.isEmpty()) {\n            for (int i=0; i < responseBuilderCustomizers.size(); i++) {\n              responseBuilderCustomizers.get(i).customize(responseBuilder);\n            }\n          }\n          if ((responseBuilder instanceof ResponseBuilderImpl)) {\n            response=((ResponseBuilderImpl)responseBuilder).build(false);\n          }\n else {\n            response=responseBuilder.build();\n          }\n        }\n        return response;\n      }\n      @Override public boolean isCreated(){\n        return response != null;\n      }\n      @Override public boolean isPredetermined(){\n        return responseBuilderCustomizers.isEmpty();\n      }\n    }\n);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 683,
      "astHeight" : 21
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 8322,
        "startLineNumber" : 36,
        "startColumnNumber" : 4,
        "endLineNumber" : 188,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void handle(ResteasyReactiveRequestContext requestContext) throws Exception {\n  Object result=requestContext.getResult();\n  if (result instanceof Response) {\n    boolean mediaTypeAlreadyExists=false;\n    ResponseBuilderImpl responseBuilder;\n    Response existing=(Response)result;\n    if (existing.getEntity() instanceof GenericEntity) {\n      GenericEntity<?> genericEntity=(GenericEntity<?>)existing.getEntity();\n      requestContext.setGenericReturnType(genericEntity.getType());\n      responseBuilder=fromResponse(existing);\n      responseBuilder.entity(genericEntity.getEntity());\n    }\n else {\n      if (existing.hasEntity() && (existing.getEntity() != null))       requestContext.setGenericReturnType(existing.getEntity().getClass());\n      responseBuilder=fromResponse(existing);\n      if ((result instanceof ResponseImpl)) {\n        ResponseImpl responseImpl=(ResponseImpl)result;\n        if (responseImpl.getEntityAnnotations() != null) {\n          requestContext.setAdditionalAnnotations(responseImpl.getEntityAnnotations());\n        }\n        if (responseBuilder.getEntity() == null) {\n          if (responseImpl.getEntityStream() instanceof ByteArrayInputStream) {\n            ByteArrayInputStream byteArrayInputStream=(ByteArrayInputStream)responseImpl.getEntityStream();\n            responseBuilder.entity(byteArrayInputStream.readAllBytes());\n          }\n        }\n      }\n    }\n    if (existing.getMediaType() != null) {\n      requestContext.setResponseContentType(existing.getMediaType());\n      mediaTypeAlreadyExists=true;\n    }\n    EncodedMediaType produces=requestContext.getResponseContentType();\n    if (!mediaTypeAlreadyExists && produces != null) {\n      responseBuilder.header(HttpHeaders.CONTENT_TYPE,produces.toString());\n    }\n    if ((responseBuilder instanceof ResponseBuilderImpl)) {\n      requestContext.setResponse(new LazyResponse.Existing(((ResponseBuilderImpl)responseBuilder).build(false)));\n    }\n else {\n      requestContext.setResponse(new LazyResponse.Existing(responseBuilder.build()));\n    }\n  }\n else   if (result instanceof RestResponse) {\n    boolean mediaTypeAlreadyExists=false;\n    ResponseBuilderImpl responseBuilder;\n    RestResponse<?> existing=(RestResponse<?>)result;\n    if (existing.getEntity() instanceof GenericEntity) {\n      GenericEntity<?> genericEntity=(GenericEntity<?>)existing.getEntity();\n      requestContext.setGenericReturnType(genericEntity.getType());\n      responseBuilder=fromResponse(existing);\n      responseBuilder.entity(genericEntity.getEntity());\n    }\n else {\n      if (existing.hasEntity() && (existing.getEntity() != null))       requestContext.setGenericReturnType(existing.getEntity().getClass());\n      responseBuilder=fromResponse(existing);\n      if ((result instanceof RestResponseImpl)) {\n        RestResponseImpl<?> responseImpl=(RestResponseImpl<?>)result;\n        if (responseImpl.getEntityAnnotations() != null) {\n          requestContext.setAdditionalAnnotations(responseImpl.getEntityAnnotations());\n        }\n        if (responseBuilder.getEntity() == null) {\n          if (responseImpl.getEntityStream() instanceof ByteArrayInputStream) {\n            ByteArrayInputStream byteArrayInputStream=(ByteArrayInputStream)responseImpl.getEntityStream();\n            responseBuilder.entity(byteArrayInputStream.readAllBytes());\n          }\n        }\n      }\n    }\n    if (existing.getMediaType() != null) {\n      requestContext.setResponseContentType(existing.getMediaType());\n      mediaTypeAlreadyExists=true;\n    }\n    EncodedMediaType produces=requestContext.getResponseContentType();\n    if (!mediaTypeAlreadyExists && produces != null) {\n      responseBuilder.header(HttpHeaders.CONTENT_TYPE,produces.toString());\n    }\n    if ((responseBuilder instanceof ResponseBuilderImpl)) {\n      requestContext.setResponse(new LazyResponse.Existing(((ResponseBuilderImpl)responseBuilder).build(false)));\n    }\n else {\n      requestContext.setResponse(new LazyResponse.Existing(responseBuilder.build()));\n    }\n  }\n else {\n    requestContext.setResponse(new LazyResponse(){\n      Response response;\n      @Override public Response get(){\n        if (response == null) {\n          Response.ResponseBuilder responseBuilder;\n          if (result instanceof GenericEntity) {\n            GenericEntity<?> genericEntity=(GenericEntity<?>)result;\n            requestContext.setGenericReturnType(genericEntity.getType());\n            responseBuilder=ResponseImpl.ok(genericEntity.getEntity());\n          }\n else           if (result == null) {\n            responseBuilder=ResponseImpl.noContent();\n          }\n else {\n            responseBuilder=ResponseImpl.ok(result);\n          }\n          EncodedMediaType produces=requestContext.getResponseContentType();\n          if (produces != null) {\n            responseBuilder.header(HttpHeaders.CONTENT_TYPE,produces.toString());\n          }\n          if (!responseBuilderCustomizers.isEmpty()) {\n            for (int i=0; i < responseBuilderCustomizers.size(); i++) {\n              responseBuilderCustomizers.get(i).customize(responseBuilder);\n            }\n          }\n          if ((responseBuilder instanceof ResponseBuilderImpl)) {\n            response=((ResponseBuilderImpl)responseBuilder).build(false);\n          }\n else {\n            response=responseBuilder.build();\n          }\n        }\n        return response;\n      }\n      @Override public boolean isCreated(){\n        return response != null;\n      }\n      @Override public boolean isPredetermined(){\n        return responseBuilderCustomizers.isEmpty();\n      }\n    }\n);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 695,
      "astHeight" : 22
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 149,
        "startLineNumber" : 101,
        "startColumnNumber" : 16,
        "endLineNumber" : 102,
        "endColumnNumber" : 89
      },
      "nodeContext" : "if (existing.hasEntity() && (existing.getEntity() != null)) requestContext.setGenericReturnType(existing.getEntity().getClass());\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 20,
      "astHeight" : 6
    },
    "tokenLength" : 7,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 54,
    "startLineNumber" : 101,
    "startColumnNumber" : 20,
    "endLineNumber" : 101,
    "endColumnNumber" : 74
  } ],
  "layoutRelationDataList" : [ ]
}