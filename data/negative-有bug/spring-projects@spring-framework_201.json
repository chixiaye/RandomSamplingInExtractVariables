{
  "id" : 201,
  "expression" : "servletConfig",
  "projectName" : "spring-projects@spring-framework",
  "commitID" : "d5dab129097f98ed3148473422eb706c20fd10c9",
  "filePath" : "/spring-test/src/main/java/org/springframework/test/web/servlet/MockMvcBuilderSupport.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "servletConfig",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 55,
      "startColumnNumber" : 26,
      "endLineNumber" : 55,
      "endColumnNumber" : 39
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 55,
        "startColumnNumber" : 3,
        "endLineNumber" : 55,
        "endColumnNumber" : 40
      },
      "nodeContext" : "dispatcherServlet.init(servletConfig)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 55,
        "startColumnNumber" : 3,
        "endLineNumber" : 55,
        "endColumnNumber" : 41
      },
      "nodeContext" : "dispatcherServlet.init(servletConfig);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 47,
        "startLineNumber" : 54,
        "startColumnNumber" : 6,
        "endLineNumber" : 56,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  dispatcherServlet.init(servletConfig);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 201,
        "startLineNumber" : 54,
        "startColumnNumber" : 2,
        "endLineNumber" : 60,
        "endColumnNumber" : 3
      },
      "nodeContext" : "try {\n  dispatcherServlet.init(servletConfig);\n}\n catch (ServletException ex) {\n  throw new MockMvcBuildException(\"Failed to initialize TestDispatcherServlet\",ex);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 19,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 725,
        "startLineNumber" : 46,
        "startColumnNumber" : 77,
        "endLineNumber" : 68,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  TestDispatcherServlet dispatcherServlet=new TestDispatcherServlet(webAppContext);\n  if (dispatcherServletCustomizers != null) {\n    for (    DispatcherServletCustomizer customizers : dispatcherServletCustomizers) {\n      customizers.customize(dispatcherServlet);\n    }\n  }\n  try {\n    dispatcherServlet.init(servletConfig);\n  }\n catch (  ServletException ex) {\n    throw new MockMvcBuildException(\"Failed to initialize TestDispatcherServlet\",ex);\n  }\n  MockMvc mockMvc=new MockMvc(dispatcherServlet,filters);\n  mockMvc.setDefaultRequest(defaultRequestBuilder);\n  mockMvc.setGlobalResultMatchers(globalResultMatchers);\n  mockMvc.setGlobalResultHandlers(globalResultHandlers);\n  return mockMvc;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 73,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1066,
        "startLineNumber" : 43,
        "startColumnNumber" : 1,
        "endLineNumber" : 68,
        "endColumnNumber" : 2
      },
      "nodeContext" : "protected final MockMvc createMockMvc(Filter[] filters,MockServletConfig servletConfig,WebApplicationContext webAppContext,@Nullable RequestBuilder defaultRequestBuilder,List<ResultMatcher> globalResultMatchers,List<ResultHandler> globalResultHandlers,@Nullable List<DispatcherServletCustomizer> dispatcherServletCustomizers){\n  TestDispatcherServlet dispatcherServlet=new TestDispatcherServlet(webAppContext);\n  if (dispatcherServletCustomizers != null) {\n    for (    DispatcherServletCustomizer customizers : dispatcherServletCustomizers) {\n      customizers.customize(dispatcherServlet);\n    }\n  }\n  try {\n    dispatcherServlet.init(servletConfig);\n  }\n catch (  ServletException ex) {\n    throw new MockMvcBuildException(\"Failed to initialize TestDispatcherServlet\",ex);\n  }\n  MockMvc mockMvc=new MockMvc(dispatcherServlet,filters);\n  mockMvc.setDefaultRequest(defaultRequestBuilder);\n  mockMvc.setGlobalResultMatchers(globalResultMatchers);\n  mockMvc.setGlobalResultHandlers(globalResultHandlers);\n  return mockMvc;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 122,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 55,
        "startColumnNumber" : 3,
        "endLineNumber" : 55,
        "endColumnNumber" : 41
      },
      "nodeContext" : "dispatcherServlet.init(servletConfig);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "org.springframework.mock.web.MockServletConfig"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 55,
    "startColumnNumber" : 26,
    "endLineNumber" : 55,
    "endColumnNumber" : 39
  } ],
  "layoutRelationDataList" : [ ]
}