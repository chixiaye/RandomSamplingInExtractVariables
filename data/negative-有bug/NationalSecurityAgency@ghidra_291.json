{
  "id" : 291,
  "expression" : "program.getListing()",
  "projectName" : "NationalSecurityAgency@ghidra",
  "commitID" : "a54d0e28d652c48502551a88278808549aed5f98",
  "filePath" : "/Ghidra/Features/Base/src/test.slow/java/ghidra/app/merge/listing/EquateMergeManager1Test.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "program.getListing()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 20,
      "startLineNumber" : 486,
      "startColumnNumber" : 23,
      "endLineNumber" : 486,
      "endColumnNumber" : 43
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 30,
        "startLineNumber" : 486,
        "startColumnNumber" : 13,
        "endLineNumber" : 486,
        "endColumnNumber" : 43
      },
      "nodeContext" : "listing=program.getListing()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 486,
        "startColumnNumber" : 5,
        "endLineNumber" : 486,
        "endColumnNumber" : 44
      },
      "nodeContext" : "Listing listing=program.getListing();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.TryStatement,body]",
      "nodePosition" : {
        "charLength" : 531,
        "startLineNumber" : 485,
        "startColumnNumber" : 8,
        "endLineNumber" : 495,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Listing listing=program.getListing();\n  Address startAddr=addr(program,\"0x1002d20\");\n  program.getMemory().setBytes(startAddr,new byte[]{(byte)0x8d,(byte)0x04,(byte)0x8d,(byte)0x0,(byte)0x0,(byte)0x0,(byte)0x0});\n  createInstruction(program,startAddr);\n  Instruction instruction=listing.getInstructionAt(startAddr);\n  Assert.assertTrue(instruction != null);\n  Assert.assertEquals(2,instruction.getNumOperands());\n  commit=true;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 682,
        "startLineNumber" : 485,
        "startColumnNumber" : 4,
        "endLineNumber" : 501,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  Listing listing=program.getListing();\n  Address startAddr=addr(program,\"0x1002d20\");\n  program.getMemory().setBytes(startAddr,new byte[]{(byte)0x8d,(byte)0x04,(byte)0x8d,(byte)0x0,(byte)0x0,(byte)0x0,(byte)0x0});\n  createInstruction(program,startAddr);\n  Instruction instruction=listing.getInstructionAt(startAddr);\n  Assert.assertTrue(instruction != null);\n  Assert.assertEquals(2,instruction.getNumOperands());\n  commit=true;\n}\n catch (MemoryAccessException e) {\n  Assert.fail(e.getMessage());\n}\n finally {\n  program.endTransaction(txId,commit);\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 105,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 792,
        "startLineNumber" : 482,
        "startColumnNumber" : 49,
        "endLineNumber" : 502,
        "endColumnNumber" : 4
      },
      "nodeContext" : "{\n  int txId=program.startTransaction(\"Setup Original Program\");\n  boolean commit=false;\n  try {\n    Listing listing=program.getListing();\n    Address startAddr=addr(program,\"0x1002d20\");\n    program.getMemory().setBytes(startAddr,new byte[]{(byte)0x8d,(byte)0x04,(byte)0x8d,(byte)0x0,(byte)0x0,(byte)0x0,(byte)0x0});\n    createInstruction(program,startAddr);\n    Instruction instruction=listing.getInstructionAt(startAddr);\n    Assert.assertTrue(instruction != null);\n    Assert.assertEquals(2,instruction.getNumOperands());\n    commit=true;\n  }\n catch (  MemoryAccessException e) {\n    Assert.fail(e.getMessage());\n  }\n finally {\n    program.endTransaction(txId,commit);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 119,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.AnonymousClassDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 852,
        "startLineNumber" : 481,
        "startColumnNumber" : 3,
        "endLineNumber" : 502,
        "endColumnNumber" : 4
      },
      "nodeContext" : "@Override public void modifyOriginal(ProgramDB program){\n  int txId=program.startTransaction(\"Setup Original Program\");\n  boolean commit=false;\n  try {\n    Listing listing=program.getListing();\n    Address startAddr=addr(program,\"0x1002d20\");\n    program.getMemory().setBytes(startAddr,new byte[]{(byte)0x8d,(byte)0x04,(byte)0x8d,(byte)0x0,(byte)0x0,(byte)0x0,(byte)0x0});\n    createInstruction(program,startAddr);\n    Instruction instruction=listing.getInstructionAt(startAddr);\n    Assert.assertTrue(instruction != null);\n    Assert.assertEquals(2,instruction.getNumOperands());\n    commit=true;\n  }\n catch (  MemoryAccessException e) {\n    Assert.fail(e.getMessage());\n  }\n finally {\n    program.endTransaction(txId,commit);\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 129,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 39,
        "startLineNumber" : 486,
        "startColumnNumber" : 5,
        "endLineNumber" : 486,
        "endColumnNumber" : 44
      },
      "nodeContext" : "Listing listing=program.getListing();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 8,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "ghidra.program.model.listing.Listing"
  } ],
  "positionList" : [ {
    "charLength" : 20,
    "startLineNumber" : 486,
    "startColumnNumber" : 23,
    "endLineNumber" : 486,
    "endColumnNumber" : 43
  } ],
  "layoutRelationDataList" : [ ]
}