{
  "id" : 265,
  "expression" : "mock2",
  "projectName" : "mockito@mockito",
  "commitID" : "7f036eb9ed79444adcec3a6c635870222b109e50",
  "filePath" : "/src/test/java/org/mockitousage/spies/SpiesWithRealEqualsAndInOrderTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "mock2",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 5,
      "startLineNumber" : 21,
      "startColumnNumber" : 39,
      "endLineNumber" : 21,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 21,
        "startLineNumber" : 21,
        "startColumnNumber" : 24,
        "endLineNumber" : 21,
        "endColumnNumber" : 45
      },
      "nodeContext" : "inOrder(mock1,mock2)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 21,
        "startColumnNumber" : 16,
        "endLineNumber" : 21,
        "endColumnNumber" : 45
      },
      "nodeContext" : "order=inOrder(mock1,mock2)",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 21,
        "startColumnNumber" : 8,
        "endLineNumber" : 21,
        "endColumnNumber" : 46
      },
      "nodeContext" : "InOrder order=inOrder(mock1,mock2);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 269,
        "startLineNumber" : 17,
        "startColumnNumber" : 73,
        "endLineNumber" : 24,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  ToBeSpied mock1=spy(new ToBeSpied());\n  ToBeSpied mock2=spy(new ToBeSpied());\n  mock1.someMethod();\n  InOrder order=inOrder(mock1,mock2);\n  order.verify(mock1).someMethod();\n  order.verifyNoMoreInteractions();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 349,
        "startLineNumber" : 16,
        "startColumnNumber" : 4,
        "endLineNumber" : 24,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void should_be_able_to_handle_in_order_on_spies_with_equals(){\n  ToBeSpied mock1=spy(new ToBeSpied());\n  ToBeSpied mock2=spy(new ToBeSpied());\n  mock1.someMethod();\n  InOrder order=inOrder(mock1,mock2);\n  order.verify(mock1).someMethod();\n  order.verifyNoMoreInteractions();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 51,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 21,
        "startColumnNumber" : 8,
        "endLineNumber" : 21,
        "endColumnNumber" : 46
      },
      "nodeContext" : "InOrder order=inOrder(mock1,mock2);\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : "org.mockitousage.spies.SpiesWithRealEqualsAndInOrderTest.ToBeSpied"
  } ],
  "positionList" : [ {
    "charLength" : 5,
    "startLineNumber" : 21,
    "startColumnNumber" : 39,
    "endLineNumber" : 21,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ ]
}