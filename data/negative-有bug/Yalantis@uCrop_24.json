{
  "id" : 24,
  "expression" : "Math.max(width,height) / 1000f",
  "projectName" : "Yalantis@uCrop",
  "commitID" : "ef97e61117643633993cb2d7932f667da031d2bc",
  "filePath" : "/ucrop/src/main/java/com/yalantis/ucrop/task/BitmapCropTask.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Math.max(width,height) / 1000f",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 31,
      "startLineNumber" : 166,
      "startColumnNumber" : 33,
      "endLineNumber" : 166,
      "endColumnNumber" : 64
    },
    "astNodeNumber" : 7,
    "astHeight" : 3,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 43,
        "startLineNumber" : 166,
        "startColumnNumber" : 22,
        "endLineNumber" : 166,
        "endColumnNumber" : 65
      },
      "nodeContext" : "Math.round(Math.max(width,height) / 1000f)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 57,
        "startLineNumber" : 166,
        "startColumnNumber" : 8,
        "endLineNumber" : 166,
        "endColumnNumber" : 65
      },
      "nodeContext" : "pixelError+=Math.round(Math.max(width,height) / 1000f)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 12,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 166,
        "startColumnNumber" : 8,
        "endLineNumber" : 166,
        "endColumnNumber" : 66
      },
      "nodeContext" : "pixelError+=Math.round(Math.max(width,height) / 1000f);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 543,
        "startLineNumber" : 164,
        "startColumnNumber" : 54,
        "endLineNumber" : 173,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  int pixelError=1;\n  pixelError+=Math.round(Math.max(width,height) / 1000f);\n  return (mMaxResultImageSizeX > 0 && mMaxResultImageSizeY > 0) || Math.abs(mCropRect.left - mCurrentImageRect.left) > pixelError || Math.abs(mCropRect.top - mCurrentImageRect.top) > pixelError || Math.abs(mCropRect.bottom - mCurrentImageRect.bottom) > pixelError || Math.abs(mCropRect.right - mCurrentImageRect.right) > pixelError || mCurrentAngle != 0;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 84,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 982,
        "startLineNumber" : 156,
        "startColumnNumber" : 4,
        "endLineNumber" : 173,
        "endColumnNumber" : 5
      },
      "nodeContext" : "/** \n * Check whether an image should be cropped at all or just file can be copied to the destination path. For each 1000 pixels there is one pixel of error due to matrix calculations etc.\n * @param width  - crop area width\n * @param height - crop area height\n * @return - true if image must be cropped, false - if original image fits requirements\n */\nprivate boolean shouldCrop(int width,int height){\n  int pixelError=1;\n  pixelError+=Math.round(Math.max(width,height) / 1000f);\n  return (mMaxResultImageSizeX > 0 && mMaxResultImageSizeY > 0) || Math.abs(mCropRect.left - mCurrentImageRect.left) > pixelError || Math.abs(mCropRect.top - mCurrentImageRect.top) > pixelError || Math.abs(mCropRect.bottom - mCurrentImageRect.bottom) > pixelError || Math.abs(mCropRect.right - mCurrentImageRect.right) > pixelError || mCurrentAngle != 0;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 95,
      "astHeight" : 13
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 58,
        "startLineNumber" : 166,
        "startColumnNumber" : 8,
        "endLineNumber" : 166,
        "endColumnNumber" : 66
      },
      "nodeContext" : "pixelError+=Math.round(Math.max(width,height) / 1000f);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 13,
      "astHeight" : 6
    },
    "tokenLength" : 6,
    "type" : "float"
  } ],
  "positionList" : [ {
    "charLength" : 31,
    "startLineNumber" : 166,
    "startColumnNumber" : 33,
    "endLineNumber" : 166,
    "endColumnNumber" : 64
  } ],
  "layoutRelationDataList" : [ ]
}