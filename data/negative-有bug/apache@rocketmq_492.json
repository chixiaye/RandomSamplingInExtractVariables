{
  "id" : 492,
  "expression" : "directory.listFiles()",
  "projectName" : "apache@rocketmq",
  "commitID" : "7692d466e1fda6c29d52a61617cab1d82de8b884",
  "filePath" : "/common/src/main/java/org/apache/rocketmq/common/utils/IOTinyUtils.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "directory.listFiles()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 128,
      "startColumnNumber" : 23,
      "endLineNumber" : 128,
      "endColumnNumber" : 44
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 29,
        "startLineNumber" : 128,
        "startColumnNumber" : 15,
        "endLineNumber" : 128,
        "endColumnNumber" : 44
      },
      "nodeContext" : "files=directory.listFiles()",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 128,
        "startColumnNumber" : 8,
        "endLineNumber" : 128,
        "endColumnNumber" : 45
      },
      "nodeContext" : "File[] files=directory.listFiles();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 827,
        "startLineNumber" : 117,
        "startColumnNumber" : 73,
        "endLineNumber" : 145,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (!directory.exists()) {\n    String message=directory + \" does not exist\";\n    throw new IllegalArgumentException(message);\n  }\n  if (!directory.isDirectory()) {\n    String message=directory + \" is not a directory\";\n    throw new IllegalArgumentException(message);\n  }\n  File[] files=directory.listFiles();\n  if (files == null) {\n    throw new IOException(\"Failed to list contents of \" + directory);\n  }\n  IOException exception=null;\n  for (  File file : files) {\n    try {\n      delete(file);\n    }\n catch (    IOException ioe) {\n      exception=ioe;\n    }\n  }\n  if (null != exception) {\n    throw exception;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 97,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 896,
        "startLineNumber" : 117,
        "startColumnNumber" : 4,
        "endLineNumber" : 145,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public static void cleanDirectory(File directory) throws IOException {\n  if (!directory.exists()) {\n    String message=directory + \" does not exist\";\n    throw new IllegalArgumentException(message);\n  }\n  if (!directory.isDirectory()) {\n    String message=directory + \" is not a directory\";\n    throw new IllegalArgumentException(message);\n  }\n  File[] files=directory.listFiles();\n  if (files == null) {\n    throw new IOException(\"Failed to list contents of \" + directory);\n  }\n  IOException exception=null;\n  for (  File file : files) {\n    try {\n      delete(file);\n    }\n catch (    IOException ioe) {\n      exception=ioe;\n    }\n  }\n  if (null != exception) {\n    throw exception;\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 108,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 128,
        "startColumnNumber" : 8,
        "endLineNumber" : 128,
        "endColumnNumber" : 45
      },
      "nodeContext" : "File[] files=directory.listFiles();\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "java.io.File[]"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 128,
    "startColumnNumber" : 23,
    "endLineNumber" : 128,
    "endColumnNumber" : 44
  } ],
  "layoutRelationDataList" : [ ]
}