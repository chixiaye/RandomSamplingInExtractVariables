{
  "id" : 352,
  "expression" : "Double.POSITIVE_INFINITY",
  "projectName" : "redis@jedis",
  "commitID" : "eaa5b16af93d575cd1f340c2cd23595dc29d5638",
  "filePath" : "/src/main/java/redis/clients/jedis/util/DoublePrecision.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "Double.POSITIVE_INFINITY",
    "nodeType" : "QualifiedName",
    "nodePosition" : {
      "charLength" : 24,
      "startLineNumber" : 23,
      "startColumnNumber" : 17,
      "endLineNumber" : 23,
      "endColumnNumber" : 41
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 23,
        "startColumnNumber" : 10,
        "endLineNumber" : 23,
        "endColumnNumber" : 42
      },
      "nodeContext" : "return Double.POSITIVE_INFINITY;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 273,
        "startLineNumber" : 19,
        "startColumnNumber" : 6,
        "endLineNumber" : 33,
        "endColumnNumber" : 7
      },
      "nodeContext" : "switch (str) {\ncase \"inf\":case \"+inf\":  return Double.POSITIVE_INFINITY;\ncase \"-inf\":return Double.NEGATIVE_INFINITY;\ncase \"nan\":return Double.NaN;\ndefault:throw e;\n}\n",
      "nodeType" : "SwitchStatement",
      "astNodeNumber" : 25,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.CatchClause,body]",
      "nodePosition" : {
        "charLength" : 291,
        "startLineNumber" : 17,
        "startColumnNumber" : 38,
        "endLineNumber" : 34,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\nswitch (str) {\ncase \"inf\":case \"+inf\":    return Double.POSITIVE_INFINITY;\ncase \"-inf\":  return Double.NEGATIVE_INFINITY;\ncase \"nan\":return Double.NaN;\ndefault:throw e;\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 26,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TryStatement,catchClauses]",
      "nodePosition" : {
        "charLength" : 323,
        "startLineNumber" : 17,
        "startColumnNumber" : 6,
        "endLineNumber" : 34,
        "endColumnNumber" : 5
      },
      "nodeContext" : "catch (NumberFormatException e) {\nswitch (str) {\ncase \"inf\":case \"+inf\":    return Double.POSITIVE_INFINITY;\ncase \"-inf\":  return Double.NEGATIVE_INFINITY;\ncase \"nan\":return Double.NaN;\ndefault:throw e;\n}\n}\n",
      "nodeType" : "CatchClause",
      "astNodeNumber" : 31,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 375,
        "startLineNumber" : 13,
        "startColumnNumber" : 4,
        "endLineNumber" : 34,
        "endColumnNumber" : 5
      },
      "nodeContext" : "try {\n  return Double.valueOf(str);\n}\n catch (NumberFormatException e) {\nswitch (str) {\ncase \"inf\":case \"+inf\":    return Double.POSITIVE_INFINITY;\ncase \"-inf\":  return Double.NEGATIVE_INFINITY;\ncase \"nan\":return Double.NaN;\ndefault:throw e;\n}\n}\n",
      "nodeType" : "TryStatement",
      "astNodeNumber" : 38,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 426,
        "startLineNumber" : 9,
        "startColumnNumber" : 60,
        "endLineNumber" : 35,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  if (str == null)   return null;\n  try {\n    return Double.valueOf(str);\n  }\n catch (  NumberFormatException e) {\nswitch (str) {\ncase \"inf\":case \"+inf\":      return Double.POSITIVE_INFINITY;\ncase \"-inf\":    return Double.NEGATIVE_INFINITY;\ncase \"nan\":  return Double.NaN;\ndefault:throw e;\n}\n}\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 45,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 484,
        "startLineNumber" : 9,
        "startColumnNumber" : 2,
        "endLineNumber" : 35,
        "endColumnNumber" : 3
      },
      "nodeContext" : "public static Double parseFloatingPointNumber(String str){\n  if (str == null)   return null;\n  try {\n    return Double.valueOf(str);\n  }\n catch (  NumberFormatException e) {\nswitch (str) {\ncase \"inf\":case \"+inf\":      return Double.POSITIVE_INFINITY;\ncase \"-inf\":    return Double.NEGATIVE_INFINITY;\ncase \"nan\":  return Double.NaN;\ndefault:throw e;\n}\n}\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 55,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.SwitchStatement,statements]",
      "nodePosition" : {
        "charLength" : 32,
        "startLineNumber" : 23,
        "startColumnNumber" : 10,
        "endLineNumber" : 23,
        "endColumnNumber" : 42
      },
      "nodeContext" : "return Double.POSITIVE_INFINITY;\n",
      "nodeType" : "ReturnStatement",
      "astNodeNumber" : 4,
      "astHeight" : 3
    },
    "tokenLength" : 3,
    "type" : "double"
  } ],
  "positionList" : [ {
    "charLength" : 24,
    "startLineNumber" : 23,
    "startColumnNumber" : 17,
    "endLineNumber" : 23,
    "endColumnNumber" : 41
  } ],
  "layoutRelationDataList" : [ ]
}