{
  "id" : 78,
  "expression" : "\"Global transaction[\"",
  "projectName" : "seata@seata",
  "commitID" : "42d41623178ab076b11b27a0f049ac3ed7f1a9dc",
  "filePath" : "/server/src/main/java/io/seata/server/coordinator/DefaultCoordinator.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"Global transaction[\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 21,
      "startLineNumber" : 232,
      "startColumnNumber" : 16,
      "endLineNumber" : 232,
      "endColumnNumber" : 37
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 232,
        "startColumnNumber" : 16,
        "endLineNumber" : 232,
        "endColumnNumber" : 114
      },
      "nodeContext" : "\"Global transaction[\" + globalSession.getTransactionId() + \"] is timeout and will be rolled back.\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 128,
        "startLineNumber" : 231,
        "startColumnNumber" : 12,
        "endLineNumber" : 232,
        "endColumnNumber" : 115
      },
      "nodeContext" : "LOGGER.info(\"Global transaction[\" + globalSession.getTransactionId() + \"] is timeout and will be rolled back.\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 231,
        "startColumnNumber" : 12,
        "endLineNumber" : 232,
        "endColumnNumber" : 116
      },
      "nodeContext" : "LOGGER.info(\"Global transaction[\" + globalSession.getTransactionId() + \"] is timeout and will be rolled back.\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 10,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.EnhancedForStatement,body]",
      "nodePosition" : {
        "charLength" : 1063,
        "startLineNumber" : 215,
        "startColumnNumber" : 56,
        "endLineNumber" : 237,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (LOGGER.isDebugEnabled()) {\n    LOGGER.debug(globalSession.getTransactionId() + \" \" + globalSession.getStatus()+ \" \"+ globalSession.getBeginTime()+ \" \"+ globalSession.getTimeout());\n  }\n  boolean shouldTimeout=globalSession.lockAndExcute(() -> {\n    if (globalSession.getStatus() != GlobalStatus.Begin || !globalSession.isTimeout()) {\n      return false;\n    }\n    globalSession.close();\n    globalSession.changeStatus(GlobalStatus.TimeoutRollbacking);\n    return true;\n  }\n);\n  if (!shouldTimeout) {\n    continue;\n  }\n  LOGGER.info(\"Global transaction[\" + globalSession.getTransactionId() + \"] is timeout and will be rolled back.\");\n  globalSession.addSessionLifecycleListener(SessionHolder.getRetryRollbackingSessionManager());\n  SessionHolder.getRetryRollbackingSessionManager().addGlobalSession(globalSession);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 93,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 1111,
        "startLineNumber" : 215,
        "startColumnNumber" : 8,
        "endLineNumber" : 237,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (GlobalSession globalSession : allSessions) {\n  if (LOGGER.isDebugEnabled()) {\n    LOGGER.debug(globalSession.getTransactionId() + \" \" + globalSession.getStatus()+ \" \"+ globalSession.getBeginTime()+ \" \"+ globalSession.getTimeout());\n  }\n  boolean shouldTimeout=globalSession.lockAndExcute(() -> {\n    if (globalSession.getStatus() != GlobalStatus.Begin || !globalSession.isTimeout()) {\n      return false;\n    }\n    globalSession.close();\n    globalSession.changeStatus(GlobalStatus.TimeoutRollbacking);\n    return true;\n  }\n);\n  if (!shouldTimeout) {\n    continue;\n  }\n  LOGGER.info(\"Global transaction[\" + globalSession.getTransactionId() + \"] is timeout and will be rolled back.\");\n  globalSession.addSessionLifecycleListener(SessionHolder.getRetryRollbackingSessionManager());\n  SessionHolder.getRetryRollbackingSessionManager().addGlobalSession(globalSession);\n}\n",
      "nodeType" : "EnhancedForStatement",
      "astNodeNumber" : 99,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1524,
        "startLineNumber" : 210,
        "startColumnNumber" : 60,
        "endLineNumber" : 242,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Collection<GlobalSession> allSessions=SessionHolder.getRootSessionManager().allSessions();\n  if (allSessions.size() > 0 && LOGGER.isDebugEnabled()) {\n    LOGGER.debug(\"Transaction Timeout Check Begin: \" + allSessions.size());\n  }\n  for (  GlobalSession globalSession : allSessions) {\n    if (LOGGER.isDebugEnabled()) {\n      LOGGER.debug(globalSession.getTransactionId() + \" \" + globalSession.getStatus()+ \" \"+ globalSession.getBeginTime()+ \" \"+ globalSession.getTimeout());\n    }\n    boolean shouldTimeout=globalSession.lockAndExcute(() -> {\n      if (globalSession.getStatus() != GlobalStatus.Begin || !globalSession.isTimeout()) {\n        return false;\n      }\n      globalSession.close();\n      globalSession.changeStatus(GlobalStatus.TimeoutRollbacking);\n      return true;\n    }\n);\n    if (!shouldTimeout) {\n      continue;\n    }\n    LOGGER.info(\"Global transaction[\" + globalSession.getTransactionId() + \"] is timeout and will be rolled back.\");\n    globalSession.addSessionLifecycleListener(SessionHolder.getRetryRollbackingSessionManager());\n    SessionHolder.getRetryRollbackingSessionManager().addGlobalSession(globalSession);\n  }\n  if (allSessions.size() > 0 && LOGGER.isDebugEnabled()) {\n    LOGGER.debug(\"Transaction Timeout Check End. \");\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 149,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1580,
        "startLineNumber" : 210,
        "startColumnNumber" : 4,
        "endLineNumber" : 242,
        "endColumnNumber" : 5
      },
      "nodeContext" : "private void timeoutCheck() throws TransactionException {\n  Collection<GlobalSession> allSessions=SessionHolder.getRootSessionManager().allSessions();\n  if (allSessions.size() > 0 && LOGGER.isDebugEnabled()) {\n    LOGGER.debug(\"Transaction Timeout Check Begin: \" + allSessions.size());\n  }\n  for (  GlobalSession globalSession : allSessions) {\n    if (LOGGER.isDebugEnabled()) {\n      LOGGER.debug(globalSession.getTransactionId() + \" \" + globalSession.getStatus()+ \" \"+ globalSession.getBeginTime()+ \" \"+ globalSession.getTimeout());\n    }\n    boolean shouldTimeout=globalSession.lockAndExcute(() -> {\n      if (globalSession.getStatus() != GlobalStatus.Begin || !globalSession.isTimeout()) {\n        return false;\n      }\n      globalSession.close();\n      globalSession.changeStatus(GlobalStatus.TimeoutRollbacking);\n      return true;\n    }\n);\n    if (!shouldTimeout) {\n      continue;\n    }\n    LOGGER.info(\"Global transaction[\" + globalSession.getTransactionId() + \"] is timeout and will be rolled back.\");\n    globalSession.addSessionLifecycleListener(SessionHolder.getRetryRollbackingSessionManager());\n    SessionHolder.getRetryRollbackingSessionManager().addGlobalSession(globalSession);\n  }\n  if (allSessions.size() > 0 && LOGGER.isDebugEnabled()) {\n    LOGGER.debug(\"Transaction Timeout Check End. \");\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 155,
      "astHeight" : 14
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.MethodInvocation,arguments]",
      "nodePosition" : {
        "charLength" : 98,
        "startLineNumber" : 232,
        "startColumnNumber" : 16,
        "endLineNumber" : 232,
        "endColumnNumber" : 114
      },
      "nodeContext" : "\"Global transaction[\" + globalSession.getTransactionId() + \"] is timeout and will be rolled back.\"",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 2,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 21,
    "startLineNumber" : 232,
    "startColumnNumber" : 16,
    "endLineNumber" : 232,
    "endColumnNumber" : 37
  } ],
  "layoutRelationDataList" : [ ]
}