{
  "id" : 83,
  "expression" : "g.getTokenSymbolicNames()",
  "projectName" : "antlr@antlr4",
  "commitID" : "f2b93e550cd912be3973743d09206db98f4092c9",
  "filePath" : "/tool/src/org/antlr/v4/codegen/model/Recognizer.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "g.getTokenSymbolicNames()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 25,
      "startLineNumber" : 77,
      "startColumnNumber" : 48,
      "endLineNumber" : 77,
      "endColumnNumber" : 73
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,rightHandSide]",
      "nodePosition" : {
        "charLength" : 61,
        "startLineNumber" : 77,
        "startColumnNumber" : 18,
        "endLineNumber" : 77,
        "endColumnNumber" : 79
      },
      "nodeContext" : "translateTokenStringsToTarget(g.getTokenSymbolicNames(),gen)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 77,
        "startLineNumber" : 77,
        "startColumnNumber" : 2,
        "endLineNumber" : 77,
        "endColumnNumber" : 79
      },
      "nodeContext" : "symbolicNames=translateTokenStringsToTarget(g.getTokenSymbolicNames(),gen)",
      "nodeType" : "Assignment",
      "astNodeNumber" : 8,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 77,
        "startColumnNumber" : 2,
        "endLineNumber" : 77,
        "endColumnNumber" : 80
      },
      "nodeContext" : "symbolicNames=translateTokenStringsToTarget(g.getTokenSymbolicNames(),gen);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1024,
        "startLineNumber" : 48,
        "startColumnNumber" : 47,
        "endLineNumber" : 78,
        "endColumnNumber" : 2
      },
      "nodeContext" : "{\n  super(factory);\n  Grammar g=factory.getGrammar();\n  grammarFileName=new File(g.fileName).getName();\n  grammarName=g.name;\n  name=g.getRecognizerName();\n  accessLevel=g.getOptionString(\"accessLevel\");\n  tokens=new LinkedHashMap<String,Integer>();\n  for (  Map.Entry<String,Integer> entry : g.tokenNameToTypeMap.entrySet()) {\n    Integer ttype=entry.getValue();\n    if (ttype > 0) {\n      tokens.put(entry.getKey(),ttype);\n    }\n  }\n  ruleNames=g.rules.keySet();\n  rules=g.rules.values();\n  atn=new SerializedATN(factory,g.atn);\n  if (g.getOptionString(\"superClass\") != null) {\n    superClass=new ActionText(null,g.getOptionString(\"superClass\"));\n  }\n else {\n    superClass=null;\n  }\n  CodeGenerator gen=factory.getGenerator();\n  tokenNames=translateTokenStringsToTarget(g.getTokenDisplayNames(),gen);\n  literalNames=translateTokenStringsToTarget(g.getTokenLiteralNames(),gen);\n  symbolicNames=translateTokenStringsToTarget(g.getTokenSymbolicNames(),gen);\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 176,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1070,
        "startLineNumber" : 48,
        "startColumnNumber" : 1,
        "endLineNumber" : 78,
        "endColumnNumber" : 2
      },
      "nodeContext" : "public Recognizer(OutputModelFactory factory){\n  super(factory);\n  Grammar g=factory.getGrammar();\n  grammarFileName=new File(g.fileName).getName();\n  grammarName=g.name;\n  name=g.getRecognizerName();\n  accessLevel=g.getOptionString(\"accessLevel\");\n  tokens=new LinkedHashMap<String,Integer>();\n  for (  Map.Entry<String,Integer> entry : g.tokenNameToTypeMap.entrySet()) {\n    Integer ttype=entry.getValue();\n    if (ttype > 0) {\n      tokens.put(entry.getKey(),ttype);\n    }\n  }\n  ruleNames=g.rules.keySet();\n  rules=g.rules.values();\n  atn=new SerializedATN(factory,g.atn);\n  if (g.getOptionString(\"superClass\") != null) {\n    superClass=new ActionText(null,g.getOptionString(\"superClass\"));\n  }\n else {\n    superClass=null;\n  }\n  CodeGenerator gen=factory.getGenerator();\n  tokenNames=translateTokenStringsToTarget(g.getTokenDisplayNames(),gen);\n  literalNames=translateTokenStringsToTarget(g.getTokenLiteralNames(),gen);\n  symbolicNames=translateTokenStringsToTarget(g.getTokenSymbolicNames(),gen);\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 183,
      "astHeight" : 10
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 78,
        "startLineNumber" : 77,
        "startColumnNumber" : 2,
        "endLineNumber" : 77,
        "endColumnNumber" : 80
      },
      "nodeContext" : "symbolicNames=translateTokenStringsToTarget(g.getTokenSymbolicNames(),gen);\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 5
    },
    "tokenLength" : 2,
    "type" : "java.lang.String[]"
  } ],
  "positionList" : [ {
    "charLength" : 25,
    "startLineNumber" : 77,
    "startColumnNumber" : 48,
    "endLineNumber" : 77,
    "endColumnNumber" : 73
  } ],
  "layoutRelationDataList" : [ ]
}