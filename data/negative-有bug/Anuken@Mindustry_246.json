{
  "id" : 246,
  "expression" : "core != null",
  "projectName" : "Anuken@Mindustry",
  "commitID" : "a7188c48845dd423fc9b58bc6bcf6797f6d25b46",
  "filePath" : "/core/src/mindustry/ai/types/FormationAI.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "core != null",
    "nodeType" : "InfixExpression",
    "nodePosition" : {
      "charLength" : 12,
      "startLineNumber" : 60,
      "startColumnNumber" : 19,
      "endLineNumber" : 60,
      "endColumnNumber" : 31
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 46,
        "startLineNumber" : 60,
        "startColumnNumber" : 19,
        "endLineNumber" : 60,
        "endColumnNumber" : 65
      },
      "nodeContext" : "core != null && leader.mineTile.drop() != null",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 84,
        "startLineNumber" : 60,
        "startColumnNumber" : 19,
        "endLineNumber" : 60,
        "endColumnNumber" : 103
      },
      "nodeContext" : "core != null && leader.mineTile.drop() != null && unit.within(core,unit.type.range)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 21,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 60,
        "startColumnNumber" : 19,
        "endLineNumber" : 60,
        "endColumnNumber" : 148
      },
      "nodeContext" : "core != null && leader.mineTile.drop() != null && unit.within(core,unit.type.range) && !unit.acceptsItem(leader.mineTile.drop())",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 414,
        "startLineNumber" : 60,
        "startColumnNumber" : 16,
        "endLineNumber" : 66,
        "endColumnNumber" : 17
      },
      "nodeContext" : "if (core != null && leader.mineTile.drop() != null && unit.within(core,unit.type.range) && !unit.acceptsItem(leader.mineTile.drop())) {\n  if (core.acceptStack(unit.stack.item,unit.stack.amount,unit) > 0) {\n    Call.transferItemTo(unit,unit.stack.item,unit.stack.amount,unit.x,unit.y,core);\n    unit.clearItem();\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 77,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 547,
        "startLineNumber" : 55,
        "startColumnNumber" : 74,
        "endLineNumber" : 67,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  unit.mineTile(leader.mineTile);\n  CoreBuild core=unit.team.core();\n  if (core != null && leader.mineTile.drop() != null && unit.within(core,unit.type.range) && !unit.acceptsItem(leader.mineTile.drop())) {\n    if (core.acceptStack(unit.stack.item,unit.stack.amount,unit) > 0) {\n      Call.transferItemTo(unit,unit.stack.item,unit.stack.amount,unit.x,unit.y,core);\n      unit.clearItem();\n    }\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 95,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 665,
        "startLineNumber" : 55,
        "startColumnNumber" : 12,
        "endLineNumber" : 69,
        "endColumnNumber" : 13
      },
      "nodeContext" : "if (leader.mineTile != null && unit.validMine(leader.mineTile)) {\n  unit.mineTile(leader.mineTile);\n  CoreBuild core=unit.team.core();\n  if (core != null && leader.mineTile.drop() != null && unit.within(core,unit.type.range) && !unit.acceptsItem(leader.mineTile.drop())) {\n    if (core.acceptStack(unit.stack.item,unit.stack.amount,unit) > 0) {\n      Call.transferItemTo(unit,unit.stack.item,unit.stack.amount,unit.x,unit.y,core);\n      unit.clearItem();\n    }\n  }\n}\n else {\n  unit.mineTile(null);\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 114,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,thenStatement]",
      "nodePosition" : {
        "charLength" : 689,
        "startLineNumber" : 54,
        "startColumnNumber" : 46,
        "endLineNumber" : 70,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  if (leader.mineTile != null && unit.validMine(leader.mineTile)) {\n    unit.mineTile(leader.mineTile);\n    CoreBuild core=unit.team.core();\n    if (core != null && leader.mineTile.drop() != null && unit.within(core,unit.type.range) && !unit.acceptsItem(leader.mineTile.drop())) {\n      if (core.acceptStack(unit.stack.item,unit.stack.amount,unit) > 0) {\n        Call.transferItemTo(unit,unit.stack.item,unit.stack.amount,unit.x,unit.y,core);\n        unit.clearItem();\n      }\n    }\n  }\n else {\n    unit.mineTile(null);\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 115,
      "astHeight" : 12
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 727,
        "startLineNumber" : 54,
        "startColumnNumber" : 8,
        "endLineNumber" : 70,
        "endColumnNumber" : 9
      },
      "nodeContext" : "if (unit.canMine() && leader.canMine()) {\n  if (leader.mineTile != null && unit.validMine(leader.mineTile)) {\n    unit.mineTile(leader.mineTile);\n    CoreBuild core=unit.team.core();\n    if (core != null && leader.mineTile.drop() != null && unit.within(core,unit.type.range) && !unit.acceptsItem(leader.mineTile.drop())) {\n      if (core.acceptStack(unit.stack.item,unit.stack.amount,unit) > 0) {\n        Call.transferItemTo(unit,unit.stack.item,unit.stack.amount,unit.x,unit.y,core);\n        unit.clearItem();\n      }\n    }\n  }\n else {\n    unit.mineTile(null);\n  }\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 123,
      "astHeight" : 13
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 1771,
        "startLineNumber" : 28,
        "startColumnNumber" : 28,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  if (leader == null || leader.dead) {\n    unit.resetController();\n    return;\n  }\n  if (unit.type.canBoost) {\n    unit.elevation=Mathf.approachDelta(unit.elevation,unit.onSolid() ? 1f : leader.type.canBoost ? leader.elevation : 0f,0.08f);\n  }\n  unit.controlWeapons(true,leader.isShooting);\n  unit.aim(leader.aimX(),leader.aimY());\n  if (unit.type.rotateShooting) {\n    unit.lookAt(leader.aimX(),leader.aimY());\n  }\n else   if (unit.moving()) {\n    unit.lookAt(unit.vel.angle());\n  }\n  Vec2 realtarget=vec.set(target).add(leader.vel);\n  float speed=unit.realSpeed() * unit.floorSpeedMultiplier() * Time.delta;\n  unit.approach(Mathf.arrive(unit.x,unit.y,realtarget.x,realtarget.y,unit.vel,speed,0f,speed,1f).scl(1f / Time.delta));\n  if (unit.canMine() && leader.canMine()) {\n    if (leader.mineTile != null && unit.validMine(leader.mineTile)) {\n      unit.mineTile(leader.mineTile);\n      CoreBuild core=unit.team.core();\n      if (core != null && leader.mineTile.drop() != null && unit.within(core,unit.type.range) && !unit.acceptsItem(leader.mineTile.drop())) {\n        if (core.acceptStack(unit.stack.item,unit.stack.amount,unit) > 0) {\n          Call.transferItemTo(unit,unit.stack.item,unit.stack.amount,unit.x,unit.y,core);\n          unit.clearItem();\n        }\n      }\n    }\n else {\n      unit.mineTile(null);\n    }\n  }\n  if (unit.canBuild() && leader.canBuild() && leader.activelyBuilding()) {\n    unit.clearBuilding();\n    unit.addBuild(leader.buildPlan());\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 305,
      "astHeight" : 14
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1809,
        "startLineNumber" : 27,
        "startColumnNumber" : 4,
        "endLineNumber" : 76,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Override public void updateUnit(){\n  if (leader == null || leader.dead) {\n    unit.resetController();\n    return;\n  }\n  if (unit.type.canBoost) {\n    unit.elevation=Mathf.approachDelta(unit.elevation,unit.onSolid() ? 1f : leader.type.canBoost ? leader.elevation : 0f,0.08f);\n  }\n  unit.controlWeapons(true,leader.isShooting);\n  unit.aim(leader.aimX(),leader.aimY());\n  if (unit.type.rotateShooting) {\n    unit.lookAt(leader.aimX(),leader.aimY());\n  }\n else   if (unit.moving()) {\n    unit.lookAt(unit.vel.angle());\n  }\n  Vec2 realtarget=vec.set(target).add(leader.vel);\n  float speed=unit.realSpeed() * unit.floorSpeedMultiplier() * Time.delta;\n  unit.approach(Mathf.arrive(unit.x,unit.y,realtarget.x,realtarget.y,unit.vel,speed,0f,speed,1f).scl(1f / Time.delta));\n  if (unit.canMine() && leader.canMine()) {\n    if (leader.mineTile != null && unit.validMine(leader.mineTile)) {\n      unit.mineTile(leader.mineTile);\n      CoreBuild core=unit.team.core();\n      if (core != null && leader.mineTile.drop() != null && unit.within(core,unit.type.range) && !unit.acceptsItem(leader.mineTile.drop())) {\n        if (core.acceptStack(unit.stack.item,unit.stack.amount,unit) > 0) {\n          Call.transferItemTo(unit,unit.stack.item,unit.stack.amount,unit.x,unit.y,core);\n          unit.clearItem();\n        }\n      }\n    }\n else {\n      unit.mineTile(null);\n    }\n  }\n  if (unit.canBuild() && leader.canBuild() && leader.activelyBuilding()) {\n    unit.clearBuilding();\n    unit.addBuild(leader.buildPlan());\n  }\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 311,
      "astHeight" : 15
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 129,
        "startLineNumber" : 60,
        "startColumnNumber" : 19,
        "endLineNumber" : 60,
        "endColumnNumber" : 148
      },
      "nodeContext" : "core != null && leader.mineTile.drop() != null && unit.within(core,unit.type.range) && !unit.acceptsItem(leader.mineTile.drop())",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 31,
      "astHeight" : 7
    },
    "tokenLength" : 3,
    "type" : "boolean"
  } ],
  "positionList" : [ {
    "charLength" : 12,
    "startLineNumber" : 60,
    "startColumnNumber" : 19,
    "endLineNumber" : 60,
    "endColumnNumber" : 31
  } ],
  "layoutRelationDataList" : [ ]
}