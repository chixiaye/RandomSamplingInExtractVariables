{
  "id" : 428,
  "expression" : "holder.size()",
  "projectName" : "Netflix@eureka",
  "commitID" : "2f6d04dae7f6fca2a17e85fc53020e13272a79b2",
  "filePath" : "/eureka-core/src/test/java/com/netflix/eureka2/registry/NotifyingInstanceInfoHolderTest.java",
  "occurrences" : 2,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "holder.size()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 68,
      "startColumnNumber" : 19,
      "endLineNumber" : 68,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 45
      },
      "nodeContext" : "assertThat(holder.size(),equalTo(1))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 46
      },
      "nodeContext" : "assertThat(holder.size(),equalTo(1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 909,
        "startLineNumber" : 59,
        "startColumnNumber" : 56,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  InstanceInfo.Builder builder=SampleInstanceInfo.DiscoveryServer.builder();\n  InstanceInfo firstInfo=builder.withStatus(InstanceInfo.Status.STARTING).build();\n  NotifyingInstanceInfoHolder holder=new NotifyingInstanceInfoHolder(storeAccessor,notificationSubject,invoker,firstInfo.getId());\n  holder.update(localSource,firstInfo).toBlocking().firstOrDefault(null);\n  assertThat(holder.size(),equalTo(1));\n  assertThat(holder.get(),equalTo(firstInfo));\n  InstanceInfo secondInfo=builder.withStatus(InstanceInfo.Status.UP).build();\n  holder.update(localSource,secondInfo).toBlocking().firstOrDefault(null);\n  assertThat(holder.size(),equalTo(1));\n  assertThat(holder.get(),not(equalTo(firstInfo)));\n  assertThat(holder.get(),equalTo(secondInfo));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 971,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testUpdateSameSource() throws Exception {\n  InstanceInfo.Builder builder=SampleInstanceInfo.DiscoveryServer.builder();\n  InstanceInfo firstInfo=builder.withStatus(InstanceInfo.Status.STARTING).build();\n  NotifyingInstanceInfoHolder holder=new NotifyingInstanceInfoHolder(storeAccessor,notificationSubject,invoker,firstInfo.getId());\n  holder.update(localSource,firstInfo).toBlocking().firstOrDefault(null);\n  assertThat(holder.size(),equalTo(1));\n  assertThat(holder.get(),equalTo(firstInfo));\n  InstanceInfo secondInfo=builder.withStatus(InstanceInfo.Status.UP).build();\n  holder.update(localSource,secondInfo).toBlocking().firstOrDefault(null);\n  assertThat(holder.size(),equalTo(1));\n  assertThat(holder.get(),not(equalTo(firstInfo)));\n  assertThat(holder.get(),equalTo(secondInfo));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 134,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 68,
        "startColumnNumber" : 8,
        "endLineNumber" : 68,
        "endColumnNumber" : 46
      },
      "nodeContext" : "assertThat(holder.size(),equalTo(1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  }, {
    "nodeContext" : "holder.size()",
    "nodeType" : "MethodInvocation",
    "nodePosition" : {
      "charLength" : 13,
      "startLineNumber" : 77,
      "startColumnNumber" : 19,
      "endLineNumber" : 77,
      "endColumnNumber" : 32
    },
    "astNodeNumber" : 3,
    "astHeight" : 2,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 37,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 45
      },
      "nodeContext" : "assertThat(holder.size(),equalTo(1))",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 8,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 46
      },
      "nodeContext" : "assertThat(holder.size(),equalTo(1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 909,
        "startLineNumber" : 59,
        "startColumnNumber" : 56,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  InstanceInfo.Builder builder=SampleInstanceInfo.DiscoveryServer.builder();\n  InstanceInfo firstInfo=builder.withStatus(InstanceInfo.Status.STARTING).build();\n  NotifyingInstanceInfoHolder holder=new NotifyingInstanceInfoHolder(storeAccessor,notificationSubject,invoker,firstInfo.getId());\n  holder.update(localSource,firstInfo).toBlocking().firstOrDefault(null);\n  assertThat(holder.size(),equalTo(1));\n  assertThat(holder.get(),equalTo(firstInfo));\n  InstanceInfo secondInfo=builder.withStatus(InstanceInfo.Status.UP).build();\n  holder.update(localSource,secondInfo).toBlocking().firstOrDefault(null);\n  assertThat(holder.size(),equalTo(1));\n  assertThat(holder.get(),not(equalTo(firstInfo)));\n  assertThat(holder.get(),equalTo(secondInfo));\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 126,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 971,
        "startLineNumber" : 58,
        "startColumnNumber" : 4,
        "endLineNumber" : 80,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testUpdateSameSource() throws Exception {\n  InstanceInfo.Builder builder=SampleInstanceInfo.DiscoveryServer.builder();\n  InstanceInfo firstInfo=builder.withStatus(InstanceInfo.Status.STARTING).build();\n  NotifyingInstanceInfoHolder holder=new NotifyingInstanceInfoHolder(storeAccessor,notificationSubject,invoker,firstInfo.getId());\n  holder.update(localSource,firstInfo).toBlocking().firstOrDefault(null);\n  assertThat(holder.size(),equalTo(1));\n  assertThat(holder.get(),equalTo(firstInfo));\n  InstanceInfo secondInfo=builder.withStatus(InstanceInfo.Status.UP).build();\n  holder.update(localSource,secondInfo).toBlocking().firstOrDefault(null);\n  assertThat(holder.size(),equalTo(1));\n  assertThat(holder.get(),not(equalTo(firstInfo)));\n  assertThat(holder.get(),equalTo(secondInfo));\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 134,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 38,
        "startLineNumber" : 77,
        "startColumnNumber" : 8,
        "endLineNumber" : 77,
        "endColumnNumber" : 46
      },
      "nodeContext" : "assertThat(holder.size(),equalTo(1));\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 9,
      "astHeight" : 4
    },
    "tokenLength" : 2,
    "type" : "int"
  } ],
  "positionList" : [ {
    "charLength" : 13,
    "startLineNumber" : 68,
    "startColumnNumber" : 19,
    "endLineNumber" : 68,
    "endColumnNumber" : 32
  }, {
    "charLength" : 13,
    "startLineNumber" : 77,
    "startColumnNumber" : 19,
    "endLineNumber" : 77,
    "endColumnNumber" : 32
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 2
  } ]
}