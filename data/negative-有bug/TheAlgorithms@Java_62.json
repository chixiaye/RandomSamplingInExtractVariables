{
  "id" : 62,
  "expression" : "low",
  "projectName" : "TheAlgorithms@Java",
  "commitID" : "8b243667d736be7d0413cc77159378aa02459db0",
  "filePath" : "/src/main/java/com/thealgorithms/sorts/BinaryInsertionSort.java",
  "occurrences" : 4,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "low",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 15,
      "startColumnNumber" : 18,
      "endLineNumber" : 15,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 15,
        "startColumnNumber" : 18,
        "endLineNumber" : 15,
        "endColumnNumber" : 29
      },
      "nodeContext" : "low <= high",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 330,
        "startLineNumber" : 15,
        "startColumnNumber" : 12,
        "endLineNumber" : 22,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (low <= high) {\n  int mid=(low + high) / 2;\n  if (temp < array[mid]) {\n    high=mid - 1;\n  }\n else {\n    low=mid + 1;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 35,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 725,
        "startLineNumber" : 9,
        "startColumnNumber" : 45,
        "endLineNumber" : 29,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int temp=array[i];\n  int low=0;\n  int high=i - 1;\n  while (low <= high) {\n    int mid=(low + high) / 2;\n    if (temp < array[mid]) {\n      high=mid - 1;\n    }\n else {\n      low=mid + 1;\n    }\n  }\n  for (int j=i; j >= low + 1; j--) {\n    array[j]=array[j - 1];\n  }\n  array[low]=temp;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 762,
        "startLineNumber" : 9,
        "startColumnNumber" : 8,
        "endLineNumber" : 29,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=1; i < array.length; i++) {\n  int temp=array[i];\n  int low=0;\n  int high=i - 1;\n  while (low <= high) {\n    int mid=(low + high) / 2;\n    if (temp < array[mid]) {\n      high=mid - 1;\n    }\n else {\n      low=mid + 1;\n    }\n  }\n  for (int j=i; j >= low + 1; j--) {\n    array[j]=array[j - 1];\n  }\n  array[low]=temp;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 98,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 815,
        "startLineNumber" : 7,
        "startColumnNumber" : 46,
        "endLineNumber" : 31,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (int i=1; i < array.length; i++) {\n    int temp=array[i];\n    int low=0;\n    int high=i - 1;\n    while (low <= high) {\n      int mid=(low + high) / 2;\n      if (temp < array[mid]) {\n        high=mid - 1;\n      }\n else {\n        low=mid + 1;\n      }\n    }\n    for (int j=i; j >= low + 1; j--) {\n      array[j]=array[j - 1];\n    }\n    array[low]=temp;\n  }\n  return array;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 857,
        "startLineNumber" : 7,
        "startColumnNumber" : 4,
        "endLineNumber" : 31,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public int[] binaryInsertSort(int[] array){\n  for (int i=1; i < array.length; i++) {\n    int temp=array[i];\n    int low=0;\n    int high=i - 1;\n    while (low <= high) {\n      int mid=(low + high) / 2;\n      if (temp < array[mid]) {\n        high=mid - 1;\n      }\n else {\n        low=mid + 1;\n      }\n    }\n    for (int j=i; j >= low + 1; j--) {\n      array[j]=array[j - 1];\n    }\n    array[low]=temp;\n  }\n  return array;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 112,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,expression]",
      "nodePosition" : {
        "charLength" : 11,
        "startLineNumber" : 15,
        "startColumnNumber" : 18,
        "endLineNumber" : 15,
        "endColumnNumber" : 29
      },
      "nodeContext" : "low <= high",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "low",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 16,
      "startColumnNumber" : 27,
      "endLineNumber" : 16,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ParenthesizedExpression,expression]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 16,
        "startColumnNumber" : 27,
        "endLineNumber" : 16,
        "endColumnNumber" : 37
      },
      "nodeContext" : "low + high",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,leftOperand]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 16,
        "startColumnNumber" : 26,
        "endLineNumber" : 16,
        "endColumnNumber" : 38
      },
      "nodeContext" : "(low + high)",
      "nodeType" : "ParenthesizedExpression",
      "astNodeNumber" : 4,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.VariableDeclarationFragment,initializer]",
      "nodePosition" : {
        "charLength" : 16,
        "startLineNumber" : 16,
        "startColumnNumber" : 26,
        "endLineNumber" : 16,
        "endColumnNumber" : 42
      },
      "nodeContext" : "(low + high) / 2",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.VariableDeclarationStatement,fragments]",
      "nodePosition" : {
        "charLength" : 22,
        "startLineNumber" : 16,
        "startColumnNumber" : 20,
        "endLineNumber" : 16,
        "endColumnNumber" : 42
      },
      "nodeContext" : "mid=(low + high) / 2",
      "nodeType" : "VariableDeclarationFragment",
      "astNodeNumber" : 8,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 16,
        "startColumnNumber" : 16,
        "endLineNumber" : 16,
        "endColumnNumber" : 43
      },
      "nodeContext" : "int mid=(low + high) / 2;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.WhileStatement,body]",
      "nodePosition" : {
        "charLength" : 312,
        "startLineNumber" : 15,
        "startColumnNumber" : 30,
        "endLineNumber" : 22,
        "endColumnNumber" : 13
      },
      "nodeContext" : "{\n  int mid=(low + high) / 2;\n  if (temp < array[mid]) {\n    high=mid - 1;\n  }\n else {\n    low=mid + 1;\n  }\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 31,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 330,
        "startLineNumber" : 15,
        "startColumnNumber" : 12,
        "endLineNumber" : 22,
        "endColumnNumber" : 13
      },
      "nodeContext" : "while (low <= high) {\n  int mid=(low + high) / 2;\n  if (temp < array[mid]) {\n    high=mid - 1;\n  }\n else {\n    low=mid + 1;\n  }\n}\n",
      "nodeType" : "WhileStatement",
      "astNodeNumber" : 35,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 725,
        "startLineNumber" : 9,
        "startColumnNumber" : 45,
        "endLineNumber" : 29,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int temp=array[i];\n  int low=0;\n  int high=i - 1;\n  while (low <= high) {\n    int mid=(low + high) / 2;\n    if (temp < array[mid]) {\n      high=mid - 1;\n    }\n else {\n      low=mid + 1;\n    }\n  }\n  for (int j=i; j >= low + 1; j--) {\n    array[j]=array[j - 1];\n  }\n  array[low]=temp;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 762,
        "startLineNumber" : 9,
        "startColumnNumber" : 8,
        "endLineNumber" : 29,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=1; i < array.length; i++) {\n  int temp=array[i];\n  int low=0;\n  int high=i - 1;\n  while (low <= high) {\n    int mid=(low + high) / 2;\n    if (temp < array[mid]) {\n      high=mid - 1;\n    }\n else {\n      low=mid + 1;\n    }\n  }\n  for (int j=i; j >= low + 1; j--) {\n    array[j]=array[j - 1];\n  }\n  array[low]=temp;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 98,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 815,
        "startLineNumber" : 7,
        "startColumnNumber" : 46,
        "endLineNumber" : 31,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (int i=1; i < array.length; i++) {\n    int temp=array[i];\n    int low=0;\n    int high=i - 1;\n    while (low <= high) {\n      int mid=(low + high) / 2;\n      if (temp < array[mid]) {\n        high=mid - 1;\n      }\n else {\n        low=mid + 1;\n      }\n    }\n    for (int j=i; j >= low + 1; j--) {\n      array[j]=array[j - 1];\n    }\n    array[low]=temp;\n  }\n  return array;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 857,
        "startLineNumber" : 7,
        "startColumnNumber" : 4,
        "endLineNumber" : 31,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public int[] binaryInsertSort(int[] array){\n  for (int i=1; i < array.length; i++) {\n    int temp=array[i];\n    int low=0;\n    int high=i - 1;\n    while (low <= high) {\n      int mid=(low + high) / 2;\n      if (temp < array[mid]) {\n        high=mid - 1;\n      }\n else {\n        low=mid + 1;\n      }\n    }\n    for (int j=i; j >= low + 1; j--) {\n      array[j]=array[j - 1];\n    }\n    array[low]=temp;\n  }\n  return array;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 112,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 27,
        "startLineNumber" : 16,
        "startColumnNumber" : 16,
        "endLineNumber" : 16,
        "endColumnNumber" : 43
      },
      "nodeContext" : "int mid=(low + high) / 2;\n",
      "nodeType" : "VariableDeclarationStatement",
      "astNodeNumber" : 10,
      "astHeight" : 6
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "low",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 24,
      "startColumnNumber" : 32,
      "endLineNumber" : 24,
      "endColumnNumber" : 35
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 7,
        "startLineNumber" : 24,
        "startColumnNumber" : 32,
        "endLineNumber" : 24,
        "endColumnNumber" : 39
      },
      "nodeContext" : "low + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 24,
        "startColumnNumber" : 27,
        "endLineNumber" : 24,
        "endColumnNumber" : 39
      },
      "nodeContext" : "j >= low + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 157,
        "startLineNumber" : 24,
        "startColumnNumber" : 12,
        "endLineNumber" : 26,
        "endColumnNumber" : 13
      },
      "nodeContext" : "for (int j=i; j >= low + 1; j--) {\n  array[j]=array[j - 1];\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 24,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 725,
        "startLineNumber" : 9,
        "startColumnNumber" : 45,
        "endLineNumber" : 29,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int temp=array[i];\n  int low=0;\n  int high=i - 1;\n  while (low <= high) {\n    int mid=(low + high) / 2;\n    if (temp < array[mid]) {\n      high=mid - 1;\n    }\n else {\n      low=mid + 1;\n    }\n  }\n  for (int j=i; j >= low + 1; j--) {\n    array[j]=array[j - 1];\n  }\n  array[low]=temp;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 762,
        "startLineNumber" : 9,
        "startColumnNumber" : 8,
        "endLineNumber" : 29,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=1; i < array.length; i++) {\n  int temp=array[i];\n  int low=0;\n  int high=i - 1;\n  while (low <= high) {\n    int mid=(low + high) / 2;\n    if (temp < array[mid]) {\n      high=mid - 1;\n    }\n else {\n      low=mid + 1;\n    }\n  }\n  for (int j=i; j >= low + 1; j--) {\n    array[j]=array[j - 1];\n  }\n  array[low]=temp;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 98,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 815,
        "startLineNumber" : 7,
        "startColumnNumber" : 46,
        "endLineNumber" : 31,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (int i=1; i < array.length; i++) {\n    int temp=array[i];\n    int low=0;\n    int high=i - 1;\n    while (low <= high) {\n      int mid=(low + high) / 2;\n      if (temp < array[mid]) {\n        high=mid - 1;\n      }\n else {\n        low=mid + 1;\n      }\n    }\n    for (int j=i; j >= low + 1; j--) {\n      array[j]=array[j - 1];\n    }\n    array[low]=temp;\n  }\n  return array;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 857,
        "startLineNumber" : 7,
        "startColumnNumber" : 4,
        "endLineNumber" : 31,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public int[] binaryInsertSort(int[] array){\n  for (int i=1; i < array.length; i++) {\n    int temp=array[i];\n    int low=0;\n    int high=i - 1;\n    while (low <= high) {\n      int mid=(low + high) / 2;\n      if (temp < array[mid]) {\n        high=mid - 1;\n      }\n else {\n        low=mid + 1;\n      }\n    }\n    for (int j=i; j >= low + 1; j--) {\n      array[j]=array[j - 1];\n    }\n    array[low]=temp;\n  }\n  return array;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 112,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,expression]",
      "nodePosition" : {
        "charLength" : 12,
        "startLineNumber" : 24,
        "startColumnNumber" : 27,
        "endLineNumber" : 24,
        "endColumnNumber" : 39
      },
      "nodeContext" : "j >= low + 1",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 5,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : null
  }, {
    "nodeContext" : "low",
    "nodeType" : "SimpleName",
    "nodePosition" : {
      "charLength" : 3,
      "startLineNumber" : 28,
      "startColumnNumber" : 18,
      "endLineNumber" : 28,
      "endColumnNumber" : 21
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.Assignment,leftHandSide]",
      "nodePosition" : {
        "charLength" : 10,
        "startLineNumber" : 28,
        "startColumnNumber" : 12,
        "endLineNumber" : 28,
        "endColumnNumber" : 22
      },
      "nodeContext" : "array[low]",
      "nodeType" : "ArrayAccess",
      "astNodeNumber" : 3,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 17,
        "startLineNumber" : 28,
        "startColumnNumber" : 12,
        "endLineNumber" : 28,
        "endColumnNumber" : 29
      },
      "nodeContext" : "array[low]=temp",
      "nodeType" : "Assignment",
      "astNodeNumber" : 5,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 28,
        "startColumnNumber" : 12,
        "endLineNumber" : 28,
        "endColumnNumber" : 30
      },
      "nodeContext" : "array[low]=temp;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ForStatement,body]",
      "nodePosition" : {
        "charLength" : 725,
        "startLineNumber" : 9,
        "startColumnNumber" : 45,
        "endLineNumber" : 29,
        "endColumnNumber" : 9
      },
      "nodeContext" : "{\n  int temp=array[i];\n  int low=0;\n  int high=i - 1;\n  while (low <= high) {\n    int mid=(low + high) / 2;\n    if (temp < array[mid]) {\n      high=mid - 1;\n    }\n else {\n      low=mid + 1;\n    }\n  }\n  for (int j=i; j >= low + 1; j--) {\n    array[j]=array[j - 1];\n  }\n  array[low]=temp;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 85,
      "astHeight" : 9
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 762,
        "startLineNumber" : 9,
        "startColumnNumber" : 8,
        "endLineNumber" : 29,
        "endColumnNumber" : 9
      },
      "nodeContext" : "for (int i=1; i < array.length; i++) {\n  int temp=array[i];\n  int low=0;\n  int high=i - 1;\n  while (low <= high) {\n    int mid=(low + high) / 2;\n    if (temp < array[mid]) {\n      high=mid - 1;\n    }\n else {\n      low=mid + 1;\n    }\n  }\n  for (int j=i; j >= low + 1; j--) {\n    array[j]=array[j - 1];\n  }\n  array[low]=temp;\n}\n",
      "nodeType" : "ForStatement",
      "astNodeNumber" : 98,
      "astHeight" : 10
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 815,
        "startLineNumber" : 7,
        "startColumnNumber" : 46,
        "endLineNumber" : 31,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  for (int i=1; i < array.length; i++) {\n    int temp=array[i];\n    int low=0;\n    int high=i - 1;\n    while (low <= high) {\n      int mid=(low + high) / 2;\n      if (temp < array[mid]) {\n        high=mid - 1;\n      }\n else {\n        low=mid + 1;\n      }\n    }\n    for (int j=i; j >= low + 1; j--) {\n      array[j]=array[j - 1];\n    }\n    array[low]=temp;\n  }\n  return array;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 101,
      "astHeight" : 11
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 857,
        "startLineNumber" : 7,
        "startColumnNumber" : 4,
        "endLineNumber" : 31,
        "endColumnNumber" : 5
      },
      "nodeContext" : "public int[] binaryInsertSort(int[] array){\n  for (int i=1; i < array.length; i++) {\n    int temp=array[i];\n    int low=0;\n    int high=i - 1;\n    while (low <= high) {\n      int mid=(low + high) / 2;\n      if (temp < array[mid]) {\n        high=mid - 1;\n      }\n else {\n        low=mid + 1;\n      }\n    }\n    for (int j=i; j >= low + 1; j--) {\n      array[j]=array[j - 1];\n    }\n    array[low]=temp;\n  }\n  return array;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 112,
      "astHeight" : 12
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 18,
        "startLineNumber" : 28,
        "startColumnNumber" : 12,
        "endLineNumber" : 28,
        "endColumnNumber" : 30
      },
      "nodeContext" : "array[low]=temp;\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 4
    },
    "tokenLength" : 1,
    "type" : null
  } ],
  "positionList" : [ {
    "charLength" : 3,
    "startLineNumber" : 15,
    "startColumnNumber" : 18,
    "endLineNumber" : 15,
    "endColumnNumber" : 21
  }, {
    "charLength" : 3,
    "startLineNumber" : 16,
    "startColumnNumber" : 27,
    "endLineNumber" : 16,
    "endColumnNumber" : 30
  }, {
    "charLength" : 3,
    "startLineNumber" : 24,
    "startColumnNumber" : 32,
    "endLineNumber" : 24,
    "endColumnNumber" : 35
  }, {
    "charLength" : 3,
    "startLineNumber" : 28,
    "startColumnNumber" : 18,
    "endLineNumber" : 28,
    "endColumnNumber" : 21
  } ],
  "layoutRelationDataList" : [ {
    "firstKey" : 0,
    "secondKey" : 1,
    "layout" : 1
  }, {
    "firstKey" : 0,
    "secondKey" : 2,
    "layout" : 2
  }, {
    "firstKey" : 0,
    "secondKey" : 3,
    "layout" : 2
  }, {
    "firstKey" : 1,
    "secondKey" : 0,
    "layout" : 6
  }, {
    "firstKey" : 1,
    "secondKey" : 2,
    "layout" : 7
  }, {
    "firstKey" : 1,
    "secondKey" : 3,
    "layout" : 7
  }, {
    "firstKey" : 2,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 2,
    "secondKey" : 3,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 0,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 1,
    "layout" : 3
  }, {
    "firstKey" : 3,
    "secondKey" : 2,
    "layout" : 3
  } ]
}