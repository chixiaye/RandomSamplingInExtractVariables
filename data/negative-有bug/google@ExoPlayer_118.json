{
  "id" : 118,
  "expression" : "\"OMX.lge.flac.decoder\"",
  "projectName" : "google@ExoPlayer",
  "commitID" : "4803ab3bd12b71fc32150e96475c0e16aaf6ddc5",
  "filePath" : "/library/core/src/main/java/com/google/android/exoplayer2/mediacodec/MediaCodecUtil.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"OMX.lge.flac.decoder\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 22,
      "startLineNumber" : 408,
      "startColumnNumber" : 56,
      "endLineNumber" : 408,
      "endColumnNumber" : 78
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.InfixExpression,rightOperand]",
      "nodePosition" : {
        "charLength" : 35,
        "startLineNumber" : 408,
        "startColumnNumber" : 56,
        "endLineNumber" : 408,
        "endColumnNumber" : 91
      },
      "nodeContext" : "\"OMX.lge.flac.decoder\".equals(name)",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 4,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 408,
        "startColumnNumber" : 15,
        "endLineNumber" : 408,
        "endColumnNumber" : 91
      },
      "nodeContext" : "mimeType.equals(MimeTypes.AUDIO_FLAC) && \"OMX.lge.flac.decoder\".equals(name)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 121,
        "startLineNumber" : 408,
        "startColumnNumber" : 11,
        "endLineNumber" : 410,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (mimeType.equals(MimeTypes.AUDIO_FLAC) && \"OMX.lge.flac.decoder\".equals(name)) {\n  return \"audio/x-lg-flac\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 15,
      "astHeight" : 5
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,elseStatement]",
      "nodePosition" : {
        "charLength" : 248,
        "startLineNumber" : 406,
        "startColumnNumber" : 11,
        "endLineNumber" : 410,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (mimeType.equals(MimeTypes.AUDIO_ALAC) && \"OMX.lge.alac.decoder\".equals(name)) {\n  return \"audio/x-lg-alac\";\n}\n else if (mimeType.equals(MimeTypes.AUDIO_FLAC) && \"OMX.lge.flac.decoder\".equals(name)) {\n  return \"audio/x-lg-flac\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 30,
      "astHeight" : 6
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 662,
        "startLineNumber" : 397,
        "startColumnNumber" : 4,
        "endLineNumber" : 410,
        "endColumnNumber" : 5
      },
      "nodeContext" : "if (mimeType.equals(MimeTypes.VIDEO_DOLBY_VISION)) {\n  if (\"OMX.MS.HEVCDV.Decoder\".equals(name)) {\n    return \"video/hevcdv\";\n  }\n else   if (\"OMX.RTK.video.decoder\".equals(name) || \"OMX.realtek.video.decoder.tunneled\".equals(name)) {\n    return \"video/dv_hevc\";\n  }\n}\n else if (mimeType.equals(MimeTypes.AUDIO_ALAC) && \"OMX.lge.alac.decoder\".equals(name)) {\n  return \"audio/x-lg-alac\";\n}\n else if (mimeType.equals(MimeTypes.AUDIO_FLAC) && \"OMX.lge.flac.decoder\".equals(name)) {\n  return \"audio/x-lg-flac\";\n}\n",
      "nodeType" : "IfStatement",
      "astNodeNumber" : 59,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 895,
        "startLineNumber" : 389,
        "startColumnNumber" : 71,
        "endLineNumber" : 413,
        "endColumnNumber" : 3
      },
      "nodeContext" : "{\n  String[] supportedTypes=info.getSupportedTypes();\n  for (  String supportedType : supportedTypes) {\n    if (supportedType.equalsIgnoreCase(mimeType)) {\n      return supportedType;\n    }\n  }\n  if (mimeType.equals(MimeTypes.VIDEO_DOLBY_VISION)) {\n    if (\"OMX.MS.HEVCDV.Decoder\".equals(name)) {\n      return \"video/hevcdv\";\n    }\n else     if (\"OMX.RTK.video.decoder\".equals(name) || \"OMX.realtek.video.decoder.tunneled\".equals(name)) {\n      return \"video/dv_hevc\";\n    }\n  }\n else   if (mimeType.equals(MimeTypes.AUDIO_ALAC) && \"OMX.lge.alac.decoder\".equals(name)) {\n    return \"audio/x-lg-alac\";\n  }\n else   if (mimeType.equals(MimeTypes.AUDIO_FLAC) && \"OMX.lge.flac.decoder\".equals(name)) {\n    return \"audio/x-lg-flac\";\n  }\n  return null;\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 87,
      "astHeight" : 8
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 1568,
        "startLineNumber" : 376,
        "startColumnNumber" : 2,
        "endLineNumber" : 413,
        "endColumnNumber" : 3
      },
      "nodeContext" : "/** \n * Returns the codec's supported MIME type for media of type  {@code mimeType}, or  {@code null} ifthe codec can't be used.\n * @param info The codec information.\n * @param name The name of the codec\n * @param mimeType The MIME type.\n * @return The codec's supported MIME type for media of type {@code mimeType}, or  {@code null} ifthe codec can't be used. If non-null, the returned type will be equal to  {@code mimeType}except in cases where the codec is known to use a non-standard MIME type alias.\n */\n@Nullable private static String getCodecMimeType(android.media.MediaCodecInfo info,String name,String mimeType){\n  String[] supportedTypes=info.getSupportedTypes();\n  for (  String supportedType : supportedTypes) {\n    if (supportedType.equalsIgnoreCase(mimeType)) {\n      return supportedType;\n    }\n  }\n  if (mimeType.equals(MimeTypes.VIDEO_DOLBY_VISION)) {\n    if (\"OMX.MS.HEVCDV.Decoder\".equals(name)) {\n      return \"video/hevcdv\";\n    }\n else     if (\"OMX.RTK.video.decoder\".equals(name) || \"OMX.realtek.video.decoder.tunneled\".equals(name)) {\n      return \"video/dv_hevc\";\n    }\n  }\n else   if (mimeType.equals(MimeTypes.AUDIO_ALAC) && \"OMX.lge.alac.decoder\".equals(name)) {\n    return \"audio/x-lg-alac\";\n  }\n else   if (mimeType.equals(MimeTypes.AUDIO_FLAC) && \"OMX.lge.flac.decoder\".equals(name)) {\n    return \"audio/x-lg-flac\";\n  }\n  return null;\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 112,
      "astHeight" : 9
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.IfStatement,expression]",
      "nodePosition" : {
        "charLength" : 76,
        "startLineNumber" : 408,
        "startColumnNumber" : 15,
        "endLineNumber" : 408,
        "endColumnNumber" : 91
      },
      "nodeContext" : "mimeType.equals(MimeTypes.AUDIO_FLAC) && \"OMX.lge.flac.decoder\".equals(name)",
      "nodeType" : "InfixExpression",
      "astNodeNumber" : 11,
      "astHeight" : 4
    },
    "tokenLength" : 4,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 22,
    "startLineNumber" : 408,
    "startColumnNumber" : 56,
    "endLineNumber" : 408,
    "endColumnNumber" : 78
  } ],
  "layoutRelationDataList" : [ ]
}