{
  "id" : 248,
  "expression" : "\"bbbb\"",
  "projectName" : "ReactiveX@RxJava",
  "commitID" : "75c40b58fc3f56283ad88ce299c72419975f6b00",
  "filePath" : "/src/test/java/io/reactivex/internal/operators/observable/ObservableToMapTest.java",
  "occurrences" : 1,
  "isArithmeticExpression" : 0,
  "isGetTypeMethod" : 0,
  "expressionList" : [ {
    "nodeContext" : "\"bbbb\"",
    "nodeType" : "StringLiteral",
    "nodePosition" : {
      "charLength" : 6,
      "startLineNumber" : 76,
      "startColumnNumber" : 24,
      "endLineNumber" : 76,
      "endColumnNumber" : 30
    },
    "astNodeNumber" : 1,
    "astHeight" : 1,
    "parentDataList" : [ {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.ExpressionStatement,expression]",
      "nodePosition" : {
        "charLength" : 23,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 76,
        "endColumnNumber" : 31
      },
      "nodeContext" : "expected.put(2,\"bbbb\")",
      "nodeType" : "MethodInvocation",
      "astNodeNumber" : 5,
      "astHeight" : 2
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 76,
        "endColumnNumber" : 32
      },
      "nodeContext" : "expected.put(2,\"bbbb\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    }, {
      "locationInParent" : "ChildProperty[org.eclipse.jdt.core.dom.MethodDeclaration,body]",
      "nodePosition" : {
        "charLength" : 628,
        "startLineNumber" : 69,
        "startColumnNumber" : 45,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "{\n  Observable<String> source=Observable.just(\"a\",\"bb\",\"ccc\",\"dddd\");\n  Observable<Map<Integer,String>> mapped=source.toMap(lengthFunc,duplicate);\n  Map<Integer,String> expected=new HashMap<Integer,String>();\n  expected.put(1,\"aa\");\n  expected.put(2,\"bbbb\");\n  expected.put(3,\"cccccc\");\n  expected.put(4,\"dddddddd\");\n  mapped.subscribe(objectObserver);\n  verify(objectObserver,never()).onError(any(Throwable.class));\n  verify(objectObserver,times(1)).onNext(expected);\n  verify(objectObserver,times(1)).onComplete();\n}\n",
      "nodeType" : "Block",
      "astNodeNumber" : 113,
      "astHeight" : 7
    }, {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.TypeDeclaration,bodyDeclarations]",
      "nodePosition" : {
        "charLength" : 680,
        "startLineNumber" : 68,
        "startColumnNumber" : 4,
        "endLineNumber" : 85,
        "endColumnNumber" : 5
      },
      "nodeContext" : "@Test public void testToMapWithValueSelector(){\n  Observable<String> source=Observable.just(\"a\",\"bb\",\"ccc\",\"dddd\");\n  Observable<Map<Integer,String>> mapped=source.toMap(lengthFunc,duplicate);\n  Map<Integer,String> expected=new HashMap<Integer,String>();\n  expected.put(1,\"aa\");\n  expected.put(2,\"bbbb\");\n  expected.put(3,\"cccccc\");\n  expected.put(4,\"dddddddd\");\n  mapped.subscribe(objectObserver);\n  verify(objectObserver,never()).onError(any(Throwable.class));\n  verify(objectObserver,times(1)).onNext(expected);\n  verify(objectObserver,times(1)).onComplete();\n}\n",
      "nodeType" : "MethodDeclaration",
      "astNodeNumber" : 119,
      "astHeight" : 8
    } ],
    "currentLineData" : {
      "locationInParent" : "ChildListProperty[org.eclipse.jdt.core.dom.Block,statements]",
      "nodePosition" : {
        "charLength" : 24,
        "startLineNumber" : 76,
        "startColumnNumber" : 8,
        "endLineNumber" : 76,
        "endColumnNumber" : 32
      },
      "nodeContext" : "expected.put(2,\"bbbb\");\n",
      "nodeType" : "ExpressionStatement",
      "astNodeNumber" : 6,
      "astHeight" : 3
    },
    "tokenLength" : 1,
    "type" : "java.lang.String"
  } ],
  "positionList" : [ {
    "charLength" : 6,
    "startLineNumber" : 76,
    "startColumnNumber" : 24,
    "endLineNumber" : 76,
    "endColumnNumber" : 30
  } ],
  "layoutRelationDataList" : [ ]
}